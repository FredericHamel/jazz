;;;==============
;;;  JazzScheme
;;;==============
;;;
;;;; Group Boxes
;;;
;;;  The contents of this file are subject to the Mozilla Public License Version
;;;  1.1 (the "License"); you may not use this file except in compliance with
;;;  the License. You may obtain a copy of the License at
;;;  http://www.mozilla.org/MPL/
;;;
;;;  Software distributed under the License is distributed on an "AS IS" basis,
;;;  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
;;;  for the specific language governing rights and limitations under the
;;;  License.
;;;
;;;  The Original Code is JazzScheme.
;;;
;;;  The Initial Developer of the Original Code is Guillaume Cartier.
;;;  Portions created by the Initial Developer are Copyright (C) 1996-2008
;;;  the Initial Developer. All Rights Reserved.
;;;
;;;  Contributor(s):
;;;
;;;  Alternatively, the contents of this file may be used under the terms of
;;;  the GNU General Public License Version 2 or later (the "GPL"), in which
;;;  case the provisions of the GPL are applicable instead of those above. If
;;;  you wish to allow use of your version of this file only under the terms of
;;;  the GPL, and not to allow others to use your version of this file under the
;;;  terms of the MPL, indicate your decision by deleting the provisions above
;;;  and replace them with the notice and other provisions required by the GPL.
;;;  If you do not delete the provisions above, a recipient may use your version
;;;  of this file under the terms of any one of the MPL or the GPL.
;;;
;;;  See www.jazzscheme.org for details.


(module protected jazz.ui.view.Group-Box jazz


(import (jazz.graphic)
        (jazz.jml)
        (jazz.locale)
        (jazz.platform.cairo)
        (jazz.ui)
        (jazz.ui.skin))


(class Group-Box extends Base-Container

  
  (property flat? initialize #f accessors explicit)
  
  
  ;;;
  ;;;; Access
  ;;;


  (method public (get-flat?)
    flat?)


  (method public (set-flat? value)
    (set! flat? value)
    (invalidate-view))
  
  
  (method override (set-title value)
    (nextmethod value)
    (layout-view))

  
  ;;;
  ;;;; Layout
  ;;;
  
  
  (method override (layout)
    (let ((height (line-height~ (effective-font))))
      (set-position~ (get-content) (new Point (if flat? 1 2)
                                              (cond (title height) (flat? 1) (else 2))))
      (set-size~ (get-content)
                 (new Dimension (- (get-width~ (get-size)) (if flat? 2 4))
                                (- (get-height~ (get-size)) (if title height (if flat? 1 2)) (if flat? 1 2))))))
     
  
  ;;;
  ;;;; Drawing
  ;;;

  
  (method override (draw surface context lh lv)
    (let* ((title (localize (get-title)))
           (size (get-size))
           (width (get-width~ size))
           (height (get-height~ size))
           (offset 9)
           (frame-color (case style
                          ((entry) {Color Entry-Border})
                          (else {Color Group-Border})))
           (extent (and title (get-text-extent~ surface title (effective-font))))
           (top (if title (fxceiling/ (line-height~ (effective-font)) 2) 0)))
      (if (flat-look?)
          (frame-rect~ surface (new Rect 0 top width height) frame-color)
          (draw-edge surface (new Rect 0 top width height) inner: 'raised outer: 'sunken edges: 'rectangle))
      (when title
        (fill-rect~ surface (new Rect (- offset 2) 0 (+ offset (get-width~ extent) 2) (get-height~ extent)) {Color Medium})
        (draw-text~ surface offset 0 title (effective-font) {Color Black}))))

  
  ;;;
  ;;;; Skin
  ;;;
  
  
  (method (flat-look?)
    (case style
      ((styled) (get-border-flat?~ (find-look 'group)))
      (else flat?)))
  
  
  ;;;
  ;;;; Descriptor
  ;;;
  
  
  (method meta override (get-class-descriptor)
    (new Group-Box-Descriptor)))


;;;
;;;; Design
;;;


(submodule design


(import (jazz.designer))


(class Group-Box-Descriptor extends Layout-View-Descriptor
  
  
  (form
    (<install>
      (<properties~>           default: title
        (<Property-Descriptor> name: flat? title: "Flat")))))))
