"C-Category-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Category-Entry.jazz"} 1257476309
    {Lisp-Entry "jazz.editor.c.catalog.C-Category-Entry" module #f 37 18 37 56 ("jazz")
      {Lisp-Entry "C-Category-Entry" class #f 44 7 44 23 ("C-Entry")
        {Lisp-Entry "initialize" method #f 47 20 47 30 ("nextmethod" "name")}
        {Lisp-Entry "print-catalog" method #f 51 20 51 33 ("name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" method #f 63 20 63 29 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" method #f 72 20 72 34 ("name" "update-index" "references-index" "definitions-index")}}}})
"C-Define-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Define-Entry.jazz"} 1257476309
    {Lisp-Entry "jazz.editor.c.catalog.C-Define-Entry" module #f 37 18 37 54 ("jazz")
      {Lisp-Entry "C-Define-Entry" class #f 43 7 43 21 ("C-Definition-Entry")}}})
"C-Definition-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Definition-Entry.jazz"} 1257476309
    {Lisp-Entry "jazz.editor.c.catalog.C-Definition-Entry" module #f 37 18 37 58 ("jazz")
      {Lisp-Entry "C-Definition-Entry" class #f 43 7 43 25 ("C-Entry")
        {Lisp-Entry "initialize" method #f 46 20 46 30 ("nextmethod" "end-column" "end-line" "column" "line" "name")}
        {Lisp-Entry "print-catalog" method #f 50 20 50 33 ("end-column" "end-line" "column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "update-indexes" method #f 62 20 62 34 ("name" "update-index" "references-index" "definitions-index")}}}})
"C-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Entry.jazz"} 1257476310
    {Lisp-Entry "jazz.editor.c.catalog.C-Entry" module #f 37 18 37 47 ("jazz")
      {Lisp-Entry "C-Entry" class #f 44 7 44 14 ("Indexed-Entry")
        {Lisp-Entry "source-frame-type" method #f 47 20 47 37 ("C-Text-View")}}}})
"C-Explorer"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "text" "C-Explorer.jazz"} 1257476310
    {Lisp-Entry "jazz.editor.c.text.C-Explorer" module #f 37 18 37 47 ("jazz")
      {Lisp-Entry "C-Explorer" class #f 44 7 44 17 ("Code-Explorer")
        {Lisp-Entry "get-syntax" method #f 47 20 47 30 ("c" "'c")}
        {Lisp-Entry "forward-single-line-comment" method #f 51 19 51 46 ("next-paragraph")}
        {Lisp-Entry "forward-multi-line-comment" method #f 55 19 55 45 ("begin" "1" "eqv?" "and" "if" "when" "0" "char-forward" "c" "iterate" "let" "forward")}
        {Lisp-Entry "forward-comments" method #f 70 18 70 34 ("forward-multi-line-comment" "forward-single-line-comment" "1" "case" "eqv?" "cond" "when" "0" "char-forward" "c" "iterate" "let")}
        {Lisp-Entry "forward-whites" method #f 84 18 84 32 ("forward" "whitespace?" "forward-multi-line-comment" "forward-single-line-comment" "1" "case" "eqv?" "cond" "when" "0" "char-forward" "c" "iterate" "let")}
        {Lisp-Entry "forward-identifier-or-number" method #f 101 18 101 46 ("forward" "0" "char-forward" "eqv?" "when" "forward-word" "iterate" "let")}}}})
"C-Export-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Export-Entry.jazz"} 1257476310
    {Lisp-Entry "jazz.editor.c.catalog.C-Export-Entry" module #f 37 18 37 54 ("jazz")
      {Lisp-Entry "C-Export-Entry" class #f 44 7 44 21 ("C-Definition-Entry")
        {Lisp-Entry "get-image" method #f 52 20 52 29 ("Bitmap-Resource")}}}})
"C-Extern-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Extern-Entry.jazz"} 1257476310
    {Lisp-Entry "jazz.editor.c.catalog.C-Extern-Entry" module #f 37 18 37 54 ("jazz")
      {Lisp-Entry "C-Extern-Entry" class #f 44 7 44 21 ("C-Definition-Entry")
        {Lisp-Entry "get-image" method #f 52 20 52 29 ("Bitmap-Resource")}}}})
"C-File"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "builder" "C-File.jazz"} 1257476311
    {Lisp-Entry "jazz.editor.c.builder.C-File" module #f 37 18 37 46 ("jazz")
      {Lisp-Entry "C-File" class #f 43 7 43 13 ("Project-File")}
      {Lisp-Entry "C-File" class #f 49 7 49 13 ("use" "'use" "initialize" "Project-File")
        {Lisp-Entry "precompiled-headers" property #f 52 12 52 31 ()}
        {Lisp-Entry "get-precompiled-headers" accessor #f 52 58 52 66 ()}
        {Lisp-Entry "set-precompiled-headers" accessor #f 52 58 52 66 ()}
        {Lisp-Entry "warnings-as-errors?" property #f 53 12 53 31 ()}
        {Lisp-Entry "get-warnings-as-errors?" accessor #f 53 58 53 66 ()}
        {Lisp-Entry "set-warnings-as-errors?" accessor #f 53 58 53 66 ()}
        {Lisp-Entry "preprocess" method #f 61 11 61 21 ("preprocess?:" "output:" "log:" "reporter:" "compile" "warnings-as-errors?" "warnings-as-errors?:" "file:" "project:" "VC-Compiler" "new" "compiler" "dependency-modified?" "exists?" "not" "or" "when" "source" "get-base" "get-object-file" "object" "project-c-catalog" "catalog" "let" "force?" "force?:" "output" "log" "reporter" "project")}
        {Lisp-Entry "build" method #f 71 11 71 16 ("output:" "log:" "reporter:" "compile" "warnings-as-errors?" "warnings-as-errors?:" "precompiled-headers" "precompiled-headers:" "file:" "project:" "new" "vc" "get-compiler-class" "compiler" "let*" "dependency-modified?" "exists?" "not" "or" "when" "source" "get-base" "get-object-file" "object" "project-c-catalog" "catalog" "let" "force?" "force?:" "output" "log" "reporter" "project")}
        {Lisp-Entry "dependency-modified?" method #f 87 11 87 31 ("null?" "get-file-entry" "essay" "file-def" "get-includes" "when" "get-include-file" "include" "let" "for-each" "cons" "set!" "continuation-return" "get-time" ">" "if" "memq?" "unless" "def" "proc" "verified" "get-modification-time" "object-time" "letrec" "return" "lambda" "continuation-capture" "catalog" "file" "object")}
        {Lisp-Entry "get-class-presentation" method #f 115 16 115 38 ()}}}})
"C-File-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-File-Entry.jazz"} 1257476310
    {Lisp-Entry "jazz.editor.c.catalog.C-File-Entry" module #f 37 18 37 52 ("jazz")
      {Lisp-Entry "C-File-Entry" class #f 44 7 44 19 ("initialize" "File-Entry")
        {Lisp-Entry "header?" slot #f 47 8 47 15 ()}
        {Lisp-Entry "get-header?" accessor #f 47 39 47 47 ()}
        {Lisp-Entry "includes" slot #f 48 8 48 16 ()}
        {Lisp-Entry "get-includes" accessor #f 48 39 48 47 ()}
        {Lisp-Entry "initialize" method #f 51 20 51 30 ("collect-includes" "includes" "get-extension" "member?" "header?" "set!" "nextmethod" "definitions" "time" "file" "catalog")}
        {Lisp-Entry "collect-includes" method #f 57 11 57 27 ("definitions" "C-Include-Entry" "is?" "entry" "lambda" "collect-if")}
        {Lisp-Entry "get-title" method #f 68 20 68 29 ()}
        {Lisp-Entry "get-source?" method #f 72 18 72 29 ("header?" "not")}}}})
"C-Include-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Include-Entry.jazz"} 1257476311
    {Lisp-Entry "jazz.editor.c.catalog.C-Include-Entry" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "C-Include-Entry" class #f 45 7 45 22 ("C-Entry")
        {Lisp-Entry "include" slot #f 48 8 48 15 ()}
        {Lisp-Entry "get-include" accessor #f 48 23 48 31 ()}
        {Lisp-Entry "include-base" slot #f 49 8 49 20 ()}
        {Lisp-Entry "initialize" method #f 52 20 52 30 ("extract-base" "include-base~self" "include~self" "set!" "nextmethod" "end-column" "end-line" "column" "line" "include")}
        {Lisp-Entry "print" method #f 58 20 58 25 ("include" "format" "lambda" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" method #f 64 20 64 33 ("end-column" "end-line" "column" "line" "include" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" method #f 76 20 76 29 ("Bitmap-Resource")}
        {Lisp-Entry "present-name" method #f 80 20 80 32 ("include")}
        {Lisp-Entry "get-include-file" method #f 89 18 89 34 ("include-base" "get-catalog" "get-header")}
        {Lisp-Entry "get-header" method #f 93 11 93 21 ("get-file-definitions" "get-header?" "def" "lambda" "find-if" "name" "catalog")}}}})
"C-Method-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Method-Entry.jazz"} 1257476311
    {Lisp-Entry "jazz.editor.c.catalog.C-Method-Entry" module #f 37 18 37 54 ("jazz")
      {Lisp-Entry "C-Method-Entry" class #f 44 7 44 21 ("C-Definition-Entry")
        {Lisp-Entry "class" slot #f 47 8 47 13 ()}
        {Lisp-Entry "initialize" method #f 50 20 50 30 ("class~self" "set!" "nextmethod" "end-column" "end-line" "column" "line" "name" "class")}
        {Lisp-Entry "print" method #f 55 20 55 25 ("class" "format" "lambda" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" method #f 61 20 61 33 ("end-column" "end-line" "column" "line" "name" "class" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" method #f 73 20 73 29 ("Bitmap-Resource")}}}})
"C-Parser"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "parser" "C-Parser.jazz"} 1257476311
    {Lisp-Entry "jazz.editor.c.parser.C-Parser" module #f 37 18 37 47 ("jazz")
      {Lisp-Entry "C-Parser" class #f 44 7 44 15 ("File-Parser")
        {Lisp-Entry "parse" method #f 47 20 47 25 ("parse-definitions" "catalog" "C-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" method #f 51 11 51 28 ("get-output" "find-include" "find-define" "or" "item" "vector-ref" "line" "let*" "do" "cardinality" "below" "0" "from" "n" "for" "loop" "get-base" "C-Category-Entry" "put" "get-extension" "member?" "when" "find-open-brace-function" "find-gambit-function" "gambit" "'gambit" "c-function" "'c-function" "get-heuristic" "eq?" "if" "find-function" "List-Factory" "new" "fact" "char-encoding-errors:" "char-encoding" "char-encoding:" "load-lines" "list->vector" "lines" "let" "file")}
        {Lisp-Entry "define" constant #f 74 12 74 18 ()}
        {Lisp-Entry "find-define" method #f 78 11 78 22 ("subseq" "C-Define-Entry" "new" "<=" "c-constituent?" "or" "c" "lambda" "skip" "<" "start:" "start" "let*" "substring" "string=?" "define" "+" ">" "and" "when" "skip-whitespace" "col" "string-length" "len" "let" "n" "line")}
        {Lisp-Entry "include" constant #f 97 12 97 19 ()}
        {Lisp-Entry "find-include" method #f 101 11 101 23 ("subseq" "C-Include-Entry" "new" "c-constituent?" "or" "c" "lambda" "skip" "1" "element" "eqv?" "<" "start:" "start" "let*" "substring" "string=?" "include" "+" ">" "and" "when" "skip-whitespace" "col" "string-length" "len" "let" "n" "line")}
        {Lisp-Entry "find-open-brace-function" method #f 120 11 120 35 ("subseq" "C-Export-Entry" "new" "continuation-return" "c-constituent?" "skip" "end" "vector-ref" "do" "downto" "1" "-" "from" "i" "for" "loop" "return" "lambda" "continuation-capture" "string-ref" "eqv?" "0" ">" "and" "when" "string-length" "len" "let" "n" "line" "lines")}
        {Lisp-Entry "gambit-function" constant #f 141 12 141 27 ()}
        {Lisp-Entry "find-gambit-function" method #f 145 11 145 31 ("subseq" "C-Export-Entry" "new" "c-constituent?" "end" "1" "<" "start:" "eqv?" "not" "c" "lambda" "skip" "start" "let*" "substring" "string=?" "gambit-function" "+" ">" "and" "when" "skip-whitespace" "col" "string-length" "len" "let" "n" "line" "lines")}}}})
"C-Static-Entry"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "catalog" "C-Static-Entry.jazz"} 1257476312
    {Lisp-Entry "jazz.editor.c.catalog.C-Static-Entry" module #f 37 18 37 54 ("jazz")
      {Lisp-Entry "C-Static-Entry" class #f 44 7 44 21 ("C-Definition-Entry")
        {Lisp-Entry "get-image" method #f 52 20 52 29 ("Bitmap-Resource")}}}})
"C-Syntax"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "syntax" "C-Syntax.jazz"} 1257476312
    {Lisp-Entry "jazz.editor.c.syntax.C-Syntax" module #f 37 18 37 47 ("jazz")
      {Lisp-Entry "C-Syntax" class #f 43 7 43 15 ("Code-Syntax")
        {Lisp-Entry "get-constituent-test" method #f 51 20 51 40 ("c-constituent?")}
        {Lisp-Entry "auto-complete-characters" method #f 60 20 60 44 ("auto-complete-characters")}
        {Lisp-Entry "auto-complete-char?" method #f 64 20 64 39 ("text-constituent?" "not" "lower-case?" "upper-case?" "and" "eqv?" "or" "last" "key")}}}})
"C-Text-Preferences"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "text" "C-Text-Preferences.jazz"} 1257476312
    {Lisp-Entry "jazz.editor.c.text.C-Text-Preferences" module #f 37 18 37 55 ("jazz")
      {Lisp-Entry "C-Text-Preferences" class #f 47 7 47 25 ("completions:" "profile-type-style:" "profile-keyword-style:" "Dark-Orange" "profile-macro-style:" "Dark-Blue" "keyword-style:" "Dark-Green" "balanced-comment-style:" "Purple" "line-comment-style:" "title-style:" "Dark-Red" "color:" "Text-Style-Preference" "definition-style:" "title:" "CLike-Text-Preferences")}}})
"C-Text-View"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "text" "C-Text-View.jazz"} 1257476313
    {Lisp-Entry "jazz.editor.c.text.C-Text-View" module #f 37 18 37 48 ("jazz")
      {Lisp-Entry "C-Text-View" class #f 49 7 49 18 ("CLike-Text-View")
        {Lisp-Entry "external-name" method #f 52 25 52 38 ("c" "'c" "rest")}
        {Lisp-Entry "preferences" method #f 56 20 56 31 ("c-text" "documents" "get-preferences")}
        {Lisp-Entry "favorite-completions" method #f 65 20 65 40 ("preferences" "get-completions")}
        {Lisp-Entry "Syntax-Targets" definition #f 74 14 74 28 ()}
        {Lisp-Entry "Syntax-Automata" definition #f 77 14 77 29 ()}
        {Lisp-Entry "syntax-targets" method #f 81 20 81 34 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" method #f 87 20 87 35 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "colorize-entries" method #f 93 20 93 36 ()}
        {Lisp-Entry "Keywords" constant #f 102 12 102 20 ()}
        {Lisp-Entry "get-keywords" method #f 162 20 162 32 ("Keywords")}
        {Lisp-Entry "get-profile-macros" method #f 171 20 171 38 ("c-text" "documents" "get-preferences" "get-macros" "profile")}
        {Lisp-Entry "get-profile-keywords" method #f 175 20 175 40 ("c-text" "documents" "get-preferences" "get-keywords" "profile")}
        {Lisp-Entry "get-profile-types" method #f 179 20 179 37 ("c-text" "documents" "get-preferences" "get-types" "profile")}
        {Lisp-Entry "get-profile-definitions" method #f 183 11 183 34 ("c-text" "documents" "get-preferences" "get-definitions" "profile")}
        {Lisp-Entry "get-first-special?" method #f 192 20 192 38 ()}
        {Lisp-Entry "on-add-break" method #f 201 19 201 31 ("user-message" "set-clipboard-text" "get-name" "format" "break-command" "1" "get-row" "+" "row" "get-start" "start" "get-controller" "get-moniker" "file" "let*" "evt")}
        {Lisp-Entry "on-remove-break" method #f 210 19 210 34 ("evt")}
        {Lisp-Entry "get-context-menu" method #f 219 20 219 36 ("C-Text-Menu" "new")}}
      {Lisp-Entry "C-Text-Menu" class #f 223 7 223 18 ("paste" "copy" "view" "Action" "action:" "Bitmap-Resource" "icon:" "french:" "english:" "Locales" "title:" "cut" "name:" "Context-Menu")}}})
"_c"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "_c.jazz"} 1257476698
    {Lisp-Entry "jazz.editor.c" module #f 37 8 37 21 ("jazz")}})
"autoload"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "autoload.jazz"} 1257476745
    {Lisp-Entry "jazz.editor.c.autoload" module #f 37 18 37 40 ("jazz")}})
"install"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "install.scm"} 1257473849
    {Lisp-Entry "jazz.editor.c.install" unit #f 37 6 37 27 ()
      {Lisp-Entry "C-File-Entry" define ("literal") 40 21 40 33 ("jazz.editor.c.literals.construct-c-file-entry")}
      {Lisp-Entry "C-Category-Entry" define ("literal") 41 21 41 37 ("jazz.editor.c.literals.construct-c-category-entry")}
      {Lisp-Entry "C-Define-Entry" define ("literal") 42 21 42 35 ("jazz.editor.c.literals.construct-c-define-entry")}
      {Lisp-Entry "C-Include-Entry" define ("literal") 43 21 43 36 ("jazz.editor.c.literals.construct-c-include-entry")}
      {Lisp-Entry "C-Export-Entry" define ("literal") 44 21 44 35 ("jazz.editor.c.literals.construct-c-export-entry")}}})
"literals"
 ({Lisp-File-Entry {File jazz.editor.c "src" "jazz" "editor" "c" "literals.jazz"} 1257476783
    {Lisp-Entry "jazz.editor.c.literals" module #f 37 8 37 30 ("jazz")
      {Lisp-Entry "construct-c-file-entry" definition #f 44 21 44 43 ("seconds->time" "C-File-Entry" "new" "definitions" "time" "file")}
      {Lisp-Entry "construct-c-category-entry" definition #f 48 21 48 47 ("C-Category-Entry" "new" "name")}
      {Lisp-Entry "construct-c-define-entry" definition #f 52 21 52 45 ("C-Define-Entry" "new" "end-column" "end-line" "column" "line" "name")}
      {Lisp-Entry "construct-c-include-entry" definition #f 56 21 56 46 ("C-Include-Entry" "new" "end-column" "end-line" "column" "line" "name")}
      {Lisp-Entry "construct-c-export-entry" definition #f 60 21 60 45 ("C-Export-Entry" "new" "end-column" "end-line" "column" "line" "name")}}})
