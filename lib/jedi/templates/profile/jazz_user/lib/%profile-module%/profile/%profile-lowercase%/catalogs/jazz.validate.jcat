"Array-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Array-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Array-Tester" library #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Array-Tester" class #f 44 7 44 19 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-array" "invoke")}
        {Lisp-Entry "array" definition #f 61 14 61 19 ("10" "int" "new-array")}
        {Lisp-Entry "test-array" method #f 65 11 65 21 ()}}}})
"Binding-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Binding-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Binding-Tester" library #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Binding-Tester" class #f 44 7 44 21 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-function" "test-bind" "test-with" "test-letrec" "test-let" "invoke")}
        {Lisp-Entry "test-let" method #f 64 11 64 19 ("self" "code-walk" "error?" "begin" "cons" "lst" "reverse" "equal?" "5" "set!" "8" "3" "y" "4" "+" "2" "x" "let" "=" "rpt" "validate")}
        {Lisp-Entry "test-letrec" method #f 102 11 102 22 ("3" "+" "x" "error?" "begin" "120" "5" "-" "*" "1" "0" "if" "n" "function" "fact" "letrec" "=" "rpt" "validate")}
        {Lisp-Entry "test-with" method #f 124 11 124 20 ()}
        {Lisp-Entry "test-bind" method #f 133 11 133 20 ("error?" "begin" "6" "+" "3" "2" "1" "list" "z" "y" "x" "bind" "=" "rpt" "validate")}
        {Lisp-Entry "test-function" method #f 147 11 147 24 ("reverse" "cons" "for-each" "list" "25" "16" "9" "*" "map" "set!" "let" "4" "1" "equal?" "5" "3" "+" "y" "x" "2" "function" "=" "rpt" "validate")}}}})
"Boolean-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Boolean-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Boolean-Tester" library #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Boolean-Tester" class #f 44 7 44 21 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-boolean" "invoke")}
        {Lisp-Entry "test-boolean" method #f 60 11 60 23 ("not" "nu<?" "ci=?" "nu/=?" "nu=?" "rpt" "validate")}}}})
"Branch-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Branch-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Branch-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Branch-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ()}}}})
"Catalog-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Catalog-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Catalog-Tester" library #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Catalog-Tester" class #f 44 7 44 21 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-catalog" "invoke")}
        {Lisp-Entry "test-catalog" method #f 60 11 60 23 ()}}}})
"Char-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Char-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Char-Tester" library #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Char-Tester" class #f 44 7 44 18 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-char" "invoke")}
        {Lisp-Entry "test-char" method #f 60 11 60 20 ()}}}})
"Collector-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Collector-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Collector-Tester" library #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Collector-Tester" class #f 44 7 44 23 ("title:" "Tester")}}})
"Component-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Component-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Component-Tester" library #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Component-Tester" class #f 44 7 44 23 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ()}}}})
"Control-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Control-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Control-Tester" library #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Control-Tester" class #f 44 7 44 21 ("title:" "Tester")}
      {Lisp-Entry "Foo" class #f 101 7 101 10 ("Signal")}}})
"Debugger-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Debugger-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Debugger-Tester" library #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Debugger-Tester" class #f 44 7 44 22 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-assert" "test-error?" "invoke")}
        {Lisp-Entry "test-error?" method #f 61 11 61 22 ()}
        {Lisp-Entry "test-assert" method #f 70 11 70 22 ()}}}})
"Designer-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Designer-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Designer-Tester" library #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Designer-Tester" class #f 44 7 44 22 ("title:" "Tester")}}})
"Enumeration-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Enumeration-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Enumeration-Tester" library #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Enumeration-Tester" class #f 44 7 44 25 ("title:" "Tester")}}})
"Error-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Error-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Error-Tester" library #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Error-Tester" class #f 44 7 44 19 ("title:" "Tester")}}})
"Explorer-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Explorer-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Explorer-Tester" library #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Explorer-Tester" class #f 44 7 44 22 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-sequence-explorer" "invoke")}
        {Lisp-Entry "test-sequence-explorer" method #f 60 11 60 33 ("backward" "'backward" "direction:" "String" "type:" "2" "start:" "c" "b" "a" "Sequence-Explorer" "new" "gather" "equal?" "rpt" "validate")}}}})
"Form-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Form-Tester.jazz"} 1238328026
    {Lisp-Entry "jazz.validate.suite.Form-Tester" library #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Form-Tester" class #f 45 7 45 18 ("title:" "Tester")
        {Lisp-Entry "test-form" method #f 52 11 52 20 ("test-fields" "invoke")}
        {Lisp-Entry "test-fields" method #f 61 11 61 22 ("1" "get-children" "length" "2" "a" "'a" "category-field" "list" "get-properties" "get-name" "'X" "get-model-name" "=" "rpt" "validate" "get-class-form" "form" "let" "X" "new")}}
      {Lisp-Entry "F" class #f 76 7 76 8 ("2" "f1:" "set-f1" "get-f1" "initialize" "Component")
        {Lisp-Entry "f1" property #f 79 12 79 14 ()}
        {Lisp-Entry "get-f1" method #f 86 11 86 17 ("f1")}
        {Lisp-Entry "set-f1" method #f 87 11 87 17 ("f1" "set!" "value")}}
      {Lisp-Entry "X" class #f 90 7 90 8 ("5" "fc" "4" "fb" "f1:" "fa" "name:" "3" "x2:" "2" "x1:" "set-x2" "get-x2" "set-x1" "get-x1" "initialize" "Component")
        {Lisp-Entry "x1" property #f 93 12 93 14 ()}
        {Lisp-Entry "x2" property #f 94 12 94 14 ()}
        {Lisp-Entry "get-x1" method #f 104 11 104 17 ("x1")}
        {Lisp-Entry "set-x1" method #f 105 11 105 17 ("x1" "set!" "value")}
        {Lisp-Entry "get-x2" method #f 108 11 108 17 ("x2")}
        {Lisp-Entry "set-x2" method #f 109 11 109 17 ("x2" "set!" "value")}}
      {Lisp-Entry "Y" class #f 112 7 112 8 ("5" "x2:" "X")}}})
"Format-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Format-Tester.jazz"} 1249298137
    {Lisp-Entry "jazz.validate.suite.Format-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Format-Tester" class #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 52 11 52 15 ("test-format" "invoke")}
        {Lisp-Entry "test-format" method #f 61 11 61 22 ("error?" ":right" "5" "12345" "hello" "'hello" "yyy" "'yyy" "string" "3" ":b" ":a" "2.3" "#b1010" "#xA" "-1" ":reader" ":human" "2" "format" "equal?" "rpt" "validate")}}}})
"Function-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Function-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Function-Tester" library #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Function-Tester" class #f 44 7 44 22 ("title:" "Tester")}}})
"Iterator-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Iterator-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Iterator-Tester" library #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Iterator-Tester" class #f 44 7 44 22 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ()}}}})
"List-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "List-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.List-Tester" library #f 37 19 37 50 ("jazz")
      {Lisp-Entry "List-Tester" class #f 44 7 44 18 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-list" "invoke")}
        {Lisp-Entry "test-list" method #f 60 11 60 20 ("'b" "set-element!" "0" "element" "car" "error?" "begin" "second" "key:" "4" "8" "5" "<" "sort" "ci=?" "test:" "associate" "cdr" "=" "assoc" "eq?" "x" "let" "f" "e" "d" "append" "null?" "reverse" "3" "2" "1" "list" "equal?" "not" "c" "b" "a" "pair?" "rpt" "validate")}}}})
"Number-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Number-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Number-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Number-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-bit" "test-number" "invoke")}
        {Lisp-Entry "test-number" method #f 61 11 61 22 ("error?" "begin" "min" "8" "7" "max" "6" "<" "/=" "not" "24" "12" "0.25" "/" "60" "*" "4" "6.8" "3.2" "10" "-3.5" "3.5" "-2" "2" "-" "3" "1" "5" "+" "0" "=" "rpt" "validate")}
        {Lisp-Entry "test-bit" method #f 120 11 120 19 ("7" "bitwise-ior" "2" "14" "6" "0" "4" "1" "5" "bitwise-and" "=" "rpt" "validate")}}}})
"Object-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Object-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Object-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Object-Tester" class #f 44 7 44 20 ("title:" "Tester")}}})
"Pathname-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Pathname-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Pathname-Tester" library #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Pathname-Tester" class #f 44 7 44 22 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-pathname" "invoke")}
        {Lisp-Entry "test-pathname" method #f 60 11 60 24 ()}}}})
"Reader-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Reader-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Reader-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Reader-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-reader" "invoke")}
        {Lisp-Entry "test-reader" method #f 60 11 60 22 ("189" "#xbd" "#xBD" "16" "#x10" "=" "3" "2" "1" "equal?" "rpt" "validate")}}}})
"Scheme-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Scheme-Tester.jazz"} 1248797037
    {Lisp-Entry "jazz.validate.suite.Scheme-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Scheme-Tester" class #f 43 7 43 20 ("Tester")}}})
"Sequence-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Sequence-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Sequence-Tester" library #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Sequence-Tester" class #f 44 7 44 22 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-sequence" "invoke")}
        {Lisp-Entry "aaa" definition #f 60 14 60 17 ()}
        {Lisp-Entry "test-sequence" method #f 64 11 64 24 ("list" "aaa" "eq?" "replace-subseq!" "0" "insert!" "replace!" "fill!" "sequence?:" "'b" "'a" "substitute" "join" "split" "identity" "accumulate" "map" "search" "prefix?" "mismatch" "String" "e" "d" "c" "b" "a" "subseq" "upper-case?" "collect-if" "every?" "not" "9" "some?" "15" "start:" "reversed?:" "numeric?" "cadr" "odd?" "find-if" "'denise" "find" "car" "key:" "'mark" "denise" "mark" "william" "find-in" "8" "7" "6" "even?" "count-if" "4" "5" "2" "1" "3" "count" "equal?" "rpt" "validate")}}}})
"String-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "String-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.String-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "String-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-wi=" "test-string" "invoke")}
        {Lisp-Entry "string" definition #f 62 14 62 20 ()}
        {Lisp-Entry "test-string" method #f 66 11 66 22 ("4" "set-element!" "1" "string" "element" "nu=?" "rpt" "validate")}
        {Lisp-Entry "ansistring" definition #f 78 14 78 24 ("Ansi-String" "coerce")}
        {Lisp-Entry "test-ansi-string" method #f 83 11 83 27 ("4" "set-element!" "1" "ansistring" "element" "nu=?" "rpt" "validate")}
        {Lisp-Entry "test-wi=" method #f 94 11 94 19 ("not" "wi=" "rpt" "validate")}}}})
"Structure-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Structure-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Structure-Tester" library #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Structure-Tester" class #f 44 7 44 23 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-structure" "invoke")}
        {Lisp-Entry "test-structure" method #f 60 11 60 25 ()}}}})
"Symbol-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Symbol-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Symbol-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Symbol-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-symbol" "invoke")}
        {Lisp-Entry "test-symbol" method #f 60 11 60 22 ()}}}})
"Syntax-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Syntax-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Syntax-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Syntax-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-decrease!" "test-increase!" "test-set!" "test-either" "test-essay" "test-or" "test-and" "test-typecase" "test-ecase" "test-case" "test-cond" "test-prog1" "test-begin" "test-for" "test-until" "test-while" "test-unless" "test-when" "test-if" "test-quote" "invoke")}
        {Lisp-Entry "test-quote" method #f 79 11 79 21 ("self" "quote" "code-walk" "error?" "begin" "'c" "'b" "'a" "list" "c" "b" "a" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-if" method #f 93 11 93 18 ("self" "if" "code-walk" "error?" "rpt" "validate" "begin")}
        {Lisp-Entry "test-when" method #f 105 11 105 20 ("self" "when" "code-walk" "error?" "rpt" "validate" "begin")}
        {Lisp-Entry "test-unless" method #f 116 11 116 22 ("3" "5" "2" "unless" "equal?" "50" "foo" "=" "rpt" "validate")}
        {Lisp-Entry "test-while" method #f 127 11 127 21 ()}
        {Lisp-Entry "test-until" method #f 136 11 136 21 ()}
        {Lisp-Entry "test-for" method #f 145 11 145 19 ()}
        {Lisp-Entry "test-begin" method #f 154 11 154 21 ()}
        {Lisp-Entry "test-prog1" method #f 163 11 163 21 ()}
        {Lisp-Entry "test-cond" method #f 172 11 172 20 ("9" "else" "8" "7" "5" "=" "3" "y" "2" "x" "not" "rpt" "validate" "cond" "v" "let")}
        {Lisp-Entry "test-case" method #f 189 11 189 20 ("9" "else" "8" "7" "5" "3" "=" "not" "rpt" "validate" "2" "case" "v" "let")}
        {Lisp-Entry "test-ecase" method #f 205 11 205 21 ("9" "else" "8" "7" "=" "3" "y" "x" "not" "rpt" "validate" "2" "ecase" "v" "let")}
        {Lisp-Entry "test-typecase" method #f 223 11 223 24 ("9" "else" "8" "Number" "7" "Symbol" "3" "=" "not" "rpt" "validate" "2" "typecase" "v" "let")}
        {Lisp-Entry "test-and" method #f 239 11 239 19 ("5" "3" "2" "and" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-or" method #f 252 11 252 18 ("5" "3" "2" "+" "or" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-essay" method #f 265 11 265 21 ("5" "3" "2" "essay" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-either" method #f 275 11 275 22 ("5" "3" "2" "+" "either" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-set!" method #f 286 11 286 20 ()}
        {Lisp-Entry "foo" method #f 295 11 295 14 ("5" "increase!" "10" "below" "from" "n" "for" "loop" "0" "total" "let")}
        {Lisp-Entry "test-increase!" method #f 302 11 302 25 ("50" "foo" "=" "rpt" "validate")}
        {Lisp-Entry "goo" method #f 311 11 311 14 ("5" "decrease!" "10" "to" "1" "from" "i" "for" "loop" "100" "total" "let" "n")}
        {Lisp-Entry "test-decrease!" method #f 318 11 318 25 ("50" "5" "goo" "=" "rpt" "validate")}}
      {Lisp-Entry "X" class #f 327 7 327 8 ("4" "initialize" "Object")
        {Lisp-Entry "counter" slot #f 330 8 330 15 ()}}}})
"Table-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Table-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Table-Tester" library #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Table-Tester" class #f 44 7 44 19 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-growth" "test-table" "invoke")}
        {Lisp-Entry "table" definition #f 61 14 61 19 ("eq?" "test:" "make-table")}
        {Lisp-Entry "test-table" method #f 64 11 64 21 ("3" "5" "=" "goo" "'goo" "table-ref" "not" "rpt" "validate" "2" "foo" "'foo" "table" "table-set!")}
        {Lisp-Entry "small-table" definition #f 80 14 80 25 ("eq?" "test:" "make-table")}
        {Lisp-Entry "test-growth" method #f 83 11 83 22 ("5" "hoo" "'hoo" "3" "goo" "'goo" "2" "foo" "'foo" "small-table" "table-set!")}}}})
"Test-Architecture"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "support" "Test-Architecture.jazz"} 1238328026
    {Lisp-Entry "jazz.validate.support.Test-Architecture" library #f 37 19 37 58 ("jazz")
      {Lisp-Entry "Test-Architecture" class #f 44 7 44 24 ("initialize" "Component")
        {Lisp-Entry "author" property #f 47 12 47 18 ()}
        {Lisp-Entry "get-author" accessor #f 47 43 47 51 ()}
        {Lisp-Entry "set-author" accessor #f 47 43 47 51 ()}
        {Lisp-Entry "get-class-image" method #f 55 16 55 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" method #f 59 16 59 38 ()}
        {Lisp-Entry "property-presentation" method #f 63 16 63 37 ("nextmethod" "else" "author" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" method #f 69 11 69 37 ("author" "name-info" "class-info")}
        {Lisp-Entry "get-addable-default-branch" method #f 73 11 73 37 ("Test-Model")}
        {Lisp-Entry "get-addable-classes" method #f 77 11 77 30 ("Test-Table" "list")}}}})
"Test-Model"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "support" "Test-Model.jazz"} 1248797037
    {Lisp-Entry "jazz.validate.support.Test-Model" library #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Test-Model" class #f 43 7 43 17 ("Branch")
        {Lisp-Entry "get-class-image" method #f 51 16 51 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" method #f 55 16 55 38 ()}}}})
"Test-Table"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "support" "Test-Table.jazz"} 1248797037
    {Lisp-Entry "jazz.validate.support.Test-Table" library #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Test-Table" class #f 44 7 44 17 ("5" "initialize" "Component")
        {Lisp-Entry "description" property #f 47 12 47 23 ()}
        {Lisp-Entry "get-description" accessor #f 47 48 47 56 ()}
        {Lisp-Entry "set-description" accessor #f 47 48 47 56 ()}
        {Lisp-Entry "no" property #f 48 12 48 14 ()}
        {Lisp-Entry "get-no" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "set-no" accessor #f 48 48 48 56 ()}
        {Lisp-Entry "get-class-image" method #f 56 16 56 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" method #f 60 16 60 38 ()}
        {Lisp-Entry "property-presentation" method #f 64 16 64 37 ("nextmethod" "else" "no" "description" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" method #f 71 11 71 37 ("no" "description" "name-info" "class-info")}
        {Lisp-Entry "get-row-instance" method #f 75 11 75 27 ("nextmethod" "else" "Integer-Row" "no" "nullable?:" "String-Row" "new" "description" "field-name" "case" "property")}}}})
"Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "tester" "Tester.jazz"} 1238328026
    {Lisp-Entry "jazz.validate.tester.Tester" library #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Tester" class #f 44 7 44 13 ("initialize" "Component")
        {Lisp-Entry "suite" property #f 47 12 47 17 ()}
        {Lisp-Entry "get-suite" accessor #f 47 42 47 50 ()}
        {Lisp-Entry "set-suite" accessor #f 47 42 47 50 ()}
        {Lisp-Entry "title" property #f 48 12 48 17 ()}
        {Lisp-Entry "get-title" accessor #f 48 42 48 50 ()}
        {Lisp-Entry "set-title" accessor #f 48 42 48 50 ()}
        {Lisp-Entry "*section*" define #f 56 10 56 19 ("make-parameter")}
        {Lisp-Entry "test" method #f 60 26 60 30 ()}
        {Lisp-Entry "invoke" method #f 64 21 64 27 ("*section*" "parameterize" "proc" "section")}
        {Lisp-Entry "rpt" method #f 69 11 69 14 ("*section*" "title" "suite" "assertion-failed" "message")}}}})
"Tester-Error"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "tester" "Tester-Error.jazz"} 1248797037
    {Lisp-Entry "jazz.validate.tester.Tester-Error" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Tester-Error" class #f 40 7 40 19 ("Error")
        {Lisp-Entry "form" slot #f 43 8 43 12 ()}
        {Lisp-Entry "string?" slot #f 44 8 44 15 ()}
        {Lisp-Entry "initialize" method #f 47 11 47 21 ("string?~self" "form~self" "set!" "nextmethod" "string?" "form")}
        {Lisp-Entry "get-form" method #f 58 18 58 26 ("form")}
        {Lisp-Entry "get-message" method #f 67 11 67 22 ("->string" "form" "string?" "if")}
        {Lisp-Entry "present-message" method #f 73 11 73 26 ("get-message" "format" "list" "rest")}}}})
"Thread-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Thread-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Thread-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Thread-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-thread" "invoke")}
        {Lisp-Entry "test-thread" method #f 60 11 60 22 ()}}}})
"Validate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "validate" "Validate.jazz"} 1238328026
    {Lisp-Entry "jazz.validate.validate.Validate" library #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Validate" class #f 44 7 44 15 ("Process")
        {Lisp-Entry "start-process" method #f 47 11 47 24 ("exit-process" "Validation-Suite" "new" "validate")}}}})
"Validation-Suite"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "validate" "Validation-Suite.jazz"} 1248797037
    {Lisp-Entry "jazz.validate.validate.Validation-Suite" library #f 37 19 37 58 ("jazz")
      {Lisp-Entry "Validation-Suite" class #f 43 7 43 23 ("Object")
        {Lisp-Entry "Classes" definition #f 46 14 46 21 ("Vector-Tester" "Variable-Tester" "Values-Tester" "Thread-Tester" "Table-Tester" "Syntax-Tester" "Symbol-Tester" "Structure-Tester" "String-Tester" "Sequence-Tester" "Scheme-Tester" "Reader-Tester" "Pathname-Tester" "Number-Tester" "List-Tester" "Iterator-Tester" "Function-Tester" "Format-Tester" "Form-Tester" "Explorer-Tester" "Error-Tester" "Enumeration-Tester" "Designer-Tester" "Debugger-Tester" "Control-Tester" "Component-Tester" "Collector-Tester" "Char-Tester" "Catalog-Tester" "Branch-Tester" "Boolean-Tester" "Binding-Tester" "Array-Tester")}
        {Lisp-Entry "failed-assertions" slot #f 83 8 83 25 ()}
        {Lisp-Entry "validate" method #f 86 18 86 26 ("report-results" "validate-suite" "report-success?" "report-success?:" "test" "test:")}
        {Lisp-Entry "validate-suite" method #f 91 11 91 25 ("user-message" "list" "pair?" "all-tester-classes" "eq?" "if" "invoke-tester" "for-each" "List-Factory" "new" "failed-assertions" "set!" "test")}
        {Lisp-Entry "invoke-tester" method #f 97 11 97 24 ("test" "user-message" "self" "suite:" "new" "tester" "let" "class")}
        {Lisp-Entry "all-tester-classes" method #f 103 11 103 29 ("Classes" "autoreload" "map")}
        {Lisp-Entry "assertion-failed" method #f 107 18 107 34 ("list" "failed-assertions" "put" "form" "section" "title")}
        {Lisp-Entry "report-results" method #f 111 11 111 25 ("message" "section" "title" "bind" "info" "function" "for-each" ":terminal" "format" "when" "null?" "if" "failed-assertions" "get-output" "failed" "let" "report-success?" "report-success?:")}}}})
"Values-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Values-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Values-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Values-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-values" "invoke")}
        {Lisp-Entry "test-values" method #f 60 11 60 22 ()}}}})
"Variable-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Variable-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Variable-Tester" library #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Variable-Tester" class #f 44 7 44 22 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-free?" "invoke")}
        {Lisp-Entry "test-free?" method #f 60 11 60 21 ()}}}})
"Vector-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Vector-Tester.jazz"} 1248802932
    {Lisp-Entry "jazz.validate.suite.Vector-Tester" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Vector-Tester" class #f 44 7 44 20 ("title:" "Tester")
        {Lisp-Entry "test" method #f 51 11 51 15 ("test-vector" "invoke")}
        {Lisp-Entry "test-vector" method #f 60 11 60 22 ()}}}})
"_validate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "_validate.jazz"} 1237033584
    {Lisp-Entry "jazz.validate" library #f 37 9 37 22 ("jazz")}})
"autoload"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "autoload.jazz"} 1238328026
    {Lisp-Entry "jazz.validate.autoload" library #f 37 19 37 41 ("jazz")}})
"syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "syntax.jazz"} 1252768922
    {Lisp-Entry "jazz.validate.syntax" library #f 37 19 37 39 ("jazz")
      {Lisp-Entry "validate" macro #f 40 15 40 23 (",message" ",proc" ",expr" "unless" ":text" "->string" "message" "let" "expr" "proc")}
      {Lisp-Entry "error-occurred?" macro #f 46 15 46 30 ("expr")}}})
