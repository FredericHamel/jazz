"Array-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Array-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Array-Tester" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Array-Tester" #f 45 7 45 19 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-array" "invoke")}
        {Lisp-Entry "array" #f 62 14 62 19 ("10" "int" "new-array")}
        {Lisp-Entry "test-array" #f 66 11 66 21 ()}}}})
"Binding-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Binding-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Binding-Tester" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Binding-Tester" #f 45 7 45 21 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-function" "test-bind" "test-with" "test-letrec" "test-let" "invoke")}
        {Lisp-Entry "test-let" #f 65 11 65 19 ("self" "code-walk" "error?" "begin" "cons" "lst" "reverse" "equal?" "5" "set!" "8" "3" "y" "4" "+" "2" "x" "let" "=" "rpt" "validate")}
        {Lisp-Entry "test-letrec" #f 103 11 103 22 ("3" "+" "x" "error?" "begin" "120" "5" "-" "*" "1" "0" "if" "n" "function" "fact" "letrec" "=" "rpt" "validate")}
        {Lisp-Entry "test-with" #f 125 11 125 20 ()}
        {Lisp-Entry "test-bind" #f 134 11 134 20 ("error?" "begin" "6" "+" "3" "2" "1" "list" "z" "y" "x" "bind" "=" "rpt" "validate")}
        {Lisp-Entry "test-function" #f 148 11 148 24 ("reverse" "cons" "for-each" "list" "25" "16" "9" "*" "map" "set!" "let" "4" "1" "equal?" "5" "3" "+" "y" "x" "2" "function" "=" "rpt" "validate")}}}})
"Boolean-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Boolean-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Boolean-Tester" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Boolean-Tester" #f 45 7 45 21 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-boolean" "invoke")}
        {Lisp-Entry "test-boolean" #f 61 11 61 23 ("not" "nu<?" "ci=?" "nu/=?" "nu=?" "rpt" "validate")}}}})
"Branch-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Branch-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Branch-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Branch-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ()}}}})
"Catalog-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Catalog-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Catalog-Tester" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Catalog-Tester" #f 45 7 45 21 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-catalog" "invoke")}
        {Lisp-Entry "test-catalog" #f 61 11 61 23 ()}}}})
"Char-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Char-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Char-Tester" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Char-Tester" #f 45 7 45 18 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-char" "invoke")}
        {Lisp-Entry "test-char" #f 61 11 61 20 ()}}}})
"Collector-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Collector-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Collector-Tester" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Collector-Tester" #f 45 7 45 23 ("title:" "Tester")}}})
"Component-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Component-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Component-Tester" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Component-Tester" #f 45 7 45 23 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ()}}}})
"Control-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Control-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Control-Tester" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Control-Tester" #f 45 7 45 21 ("title:" "Tester")}
      {Lisp-Entry "Foo" #f 102 7 102 10 ("Signal")}}})
"Debugger-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Debugger-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Debugger-Tester" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Debugger-Tester" #f 45 7 45 22 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-assert" "test-error?" "invoke")}
        {Lisp-Entry "test-error?" #f 62 11 62 22 ()}
        {Lisp-Entry "test-assert" #f 71 11 71 22 ()}}}})
"Designer-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Designer-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Designer-Tester" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Designer-Tester" #f 46 7 46 22 ("title:" "Tester")}}})
"Enumeration-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Enumeration-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Enumeration-Tester" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Enumeration-Tester" #f 45 7 45 25 ("title:" "Tester")}}})
"Error-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Error-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Error-Tester" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Error-Tester" #f 45 7 45 19 ("title:" "Tester")}}})
"Explorer-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Explorer-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Explorer-Tester" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Explorer-Tester" #f 45 7 45 22 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-sequence-explorer" "invoke")}
        {Lisp-Entry "test-sequence-explorer" #f 61 11 61 33 ("backward" "'backward" "direction:" "String" "type:" "2" "start:" "c" "b" "a" "Sequence-Explorer" "new" "gather" "equal?" "rpt" "validate")}}}})
"Form-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Form-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Form-Tester" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Form-Tester" #f 45 7 45 18 ("title:" "Tester")
        {Lisp-Entry "test-form" #f 52 11 52 20 ("test-fields" "invoke")}
        {Lisp-Entry "test-fields" #f 61 11 61 22 ("1" "get-children" "length" "2" "a" "'a" "category-field" "list" "get-properties" "get-name" "'X" "get-model-name" "=" "rpt" "validate" "get-class-form" "form" "let" "X" "new")}}
      {Lisp-Entry "F" #f 76 7 76 8 ("2" "f1:" "Component")
        {Lisp-Entry "f1" #f 79 12 79 14 ("set-f1" "get-f1")}
        {Lisp-Entry "get-f1" #f 86 11 86 17 ("f1")}
        {Lisp-Entry "set-f1" #f 87 11 87 17 ("f1" "set!" "value")}}
      {Lisp-Entry "X" #f 90 7 90 8 ("5" "fc" "4" "fb" "f1:" "fa" "name:" "3" "x2:" "2" "x1:" "Component")
        {Lisp-Entry "x1" #f 93 12 93 14 ("set-x1" "get-x1")}
        {Lisp-Entry "x2" #f 94 12 94 14 ("set-x2" "get-x2")}
        {Lisp-Entry "get-x1" #f 104 11 104 17 ("x1")}
        {Lisp-Entry "set-x1" #f 105 11 105 17 ("x1" "set!" "value")}
        {Lisp-Entry "get-x2" #f 108 11 108 17 ("x2")}
        {Lisp-Entry "set-x2" #f 109 11 109 17 ("x2" "set!" "value")}}
      {Lisp-Entry "Y" #f 112 7 112 8 ("5" "x2:" "X")}}})
"Format-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Format-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Format-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Format-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-format" "invoke")}
        {Lisp-Entry "test-format" #f 61 11 61 22 ("error?" ":right" "5" "12345" "hello" "'hello" "yyy" "'yyy" "string" "3" ":b" ":a" "2.3" "#b1010" "#xA" "-1" ":reader" ":human" "2" "format" "equal?" "rpt" "validate")}}}})
"Function-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Function-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Function-Tester" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Function-Tester" #f 45 7 45 22 ("title:" "Tester")}}})
"Iterator-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Iterator-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Iterator-Tester" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Iterator-Tester" #f 45 7 45 22 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ()}}}})
"List-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "List-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.List-Tester" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "List-Tester" #f 45 7 45 18 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-list" "invoke")}
        {Lisp-Entry "test-list" #f 61 11 61 20 ("'b" "set-element!" "0" "element" "car" "error?" "begin" "second" "key:" "4" "8" "5" "<" "sort" "ci=?" "test:" "associate" "cdr" "=" "assoc" "eq?" "x" "let" "f" "e" "d" "append" "null?" "reverse" "3" "2" "1" "list" "equal?" "not" "c" "b" "a" "pair?" "rpt" "validate")}}}})
"Number-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Number-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Number-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Number-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-bit" "test-number" "invoke")}
        {Lisp-Entry "test-number" #f 62 11 62 22 ("error?" "begin" "min" "8" "7" "max" "6" "<" "/=" "not" "24" "12" "0.25" "/" "60" "*" "4" "6.8" "3.2" "10" "-3.5" "3.5" "-2" "2" "-" "3" "1" "5" "+" "0" "=" "rpt" "validate")}
        {Lisp-Entry "test-bit" #f 121 11 121 19 ("7" "bitwise-ior" "2" "14" "6" "0" "4" "1" "5" "bitwise-and" "=" "rpt" "validate")}}}})
"Object-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Object-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Object-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Object-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "X" #f 155 7 155 8 ("Object")
          {Lisp-Entry "foo" #f 157 29 157 32 ("10")}
          {Lisp-Entry "goo" #f 158 14 158 17 ("15")}
          {Lisp-Entry "bar" #f 160 8 160 11 ("5")}
          {Lisp-Entry "toto" #f 162 18 162 22 ("bar")}
          {Lisp-Entry "tutu" #f 165 18 165 22 ("bar" "*" "x")}
          {Lisp-Entry "tata" #f 168 18 168 22 ("X2")}
          {Lisp-Entry "yuyu" #f 171 18 171 22 ("bar~self" "list" "11" "bar" "let")}
          {Lisp-Entry "yiyi" #f 175 18 175 22 ("list" "7" "bar~self" "12" "set!" "11" "bar" "let")}}
        {Lisp-Entry "Y" #f 182 7 182 8 ("X")
          {Lisp-Entry "foo" #f 184 21 184 24 ("20")}
          {Lisp-Entry "bah" #f 186 26 186 29 ("x")}}
        {Lisp-Entry "Z" #f 190 7 190 8 ("Y")
          {Lisp-Entry "bah" #f 192 11 192 14 ("+" "x")}}
        {Lisp-Entry "W" #f 196 7 196 8 ("X")
          {Lisp-Entry "hoo" #f 198 8 198 11 ("0" "Cell" "new")}}
        {Lisp-Entry "test-part1" #f 201 9 201 19 ("10" "X" "get-foo" "=" "get-goo" "error?" "begin" "Z" "Y" "W" "new" "get-hoo" "neq?" "rpt" "validate")}
        {Lisp-Entry "X1" #f 215 19 215 21 ()}
        {Lisp-Entry "X2" #f 216 19 216 21 ()}
        {Lisp-Entry "call-bah" #f 219 9 219 17 ("bah" "x" "obj")}
        {Lisp-Entry "call-bah2" #f 222 9 222 18 ("bah" "x" "obj")}
        {Lisp-Entry "test-part2" #f 226 9 226 19 ("error?" "begin" "call-bah2" "Z" "Y" "call-bah" "12" "yiyi" "11" "yuyu" "equal?" "28" "4" "tata" "tutu" "toto" "7" "6" "set-bar" "5" "get-bar" "10" "get-foo" "=" "rpt" "validate" "X2" "X" "new" "X1" "set!")}
        {Lisp-Entry "test-part3" #f 258 9 258 19 ("4" "3" "1" "J" "public" "Object" "extends" "class" "v" "virtual" "protected" "+" "apply" "rest" "f" "method" "aa" "5" "initialize" "meta" "slot" "15" "6" "9" "mak" "bar" "2" "I" "new" "foo" "list" "=" "rpt" "validate" "7" "mm" "set!")}}}})
"Pathname-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Pathname-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Pathname-Tester" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Pathname-Tester" #f 46 7 46 22 ("title:" "Tester")
        {Lisp-Entry "test" #f 53 11 53 15 ("test-pathname" "invoke")}
        {Lisp-Entry "test-pathname" #f 62 11 62 24 ()}}}})
"Reader-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Reader-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Reader-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Reader-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-reader" "invoke")}
        {Lisp-Entry "test-reader" #f 61 11 61 22 ("189" "#xbd" "#xBD" "16" "#x10" "=" "3" "2" "1" "equal?" "rpt" "validate")}}}})
"Scheme-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Scheme-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Scheme-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Scheme-Tester" #f 45 7 45 20 ("Tester")}}})
"Sequence-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Sequence-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Sequence-Tester" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Sequence-Tester" #f 45 7 45 22 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-sequence" "invoke")}
        {Lisp-Entry "aaa" #f 61 14 61 17 ()}
        {Lisp-Entry "test-sequence" #f 65 11 65 24 ("list" "aaa" "eq?" "replace-subseq!" "0" "insert!" "replace!" "fill!" "sequence?:" "'b" "'a" "substitute" "join" "split" "identity" "accumulate" "map" "search" "prefix?" "mismatch" "String" "e" "d" "c" "b" "a" "subseq" "upper-case?" "collect-if" "every?" "not" "9" "some?" "15" "start:" "reversed?:" "numeric?" "cadr" "odd?" "find-if" "'denise" "find" "car" "key:" "'mark" "denise" "mark" "william" "find-in" "8" "7" "6" "even?" "count-if" "4" "5" "2" "1" "3" "count" "equal?" "rpt" "validate")}}}})
"String-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "String-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.String-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "String-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-wi=" "test-string" "invoke")}
        {Lisp-Entry "string" #f 63 14 63 20 ()}
        {Lisp-Entry "test-string" #f 67 11 67 22 ("4" "set-element!" "1" "string" "element" "nu=?" "rpt" "validate")}
        {Lisp-Entry "ansistring" #f 79 14 79 24 ("Ansi-String" "coerce")}
        {Lisp-Entry "test-ansi-string" #f 84 11 84 27 ("4" "set-element!" "1" "ansistring" "element" "nu=?" "rpt" "validate")}
        {Lisp-Entry "test-wi=" #f 95 11 95 19 ("not" "wi=" "rpt" "validate")}}}})
"Structure-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Structure-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Structure-Tester" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Structure-Tester" #f 45 7 45 23 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-structure" "invoke")}
        {Lisp-Entry "test-structure" #f 61 11 61 25 ()}}}})
"Symbol-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Symbol-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Symbol-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Symbol-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-symbol" "invoke")}
        {Lisp-Entry "test-symbol" #f 61 11 61 22 ()}}}})
"Syntax-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Syntax-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Syntax-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Syntax-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-decrease!" "test-increase!" "test-set!" "test-either" "test-essay" "test-or" "test-and" "test-typecase" "test-ecase" "test-case" "test-cond" "test-prog1" "test-begin" "test-for" "test-until" "test-while" "test-unless" "test-when" "test-if" "test-quote" "invoke")}
        {Lisp-Entry "test-quote" #f 80 11 80 21 ("self" "quote" "code-walk" "error?" "begin" "'c" "'b" "'a" "list" "c" "b" "a" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-if" #f 94 11 94 18 ("self" "if" "code-walk" "error?" "rpt" "validate" "begin")}
        {Lisp-Entry "test-when" #f 106 11 106 20 ("self" "when" "code-walk" "error?" "rpt" "validate" "begin")}
        {Lisp-Entry "test-unless" #f 117 11 117 22 ("3" "5" "2" "unless" "equal?" "50" "foo" "=" "rpt" "validate")}
        {Lisp-Entry "test-while" #f 128 11 128 21 ()}
        {Lisp-Entry "test-until" #f 137 11 137 21 ()}
        {Lisp-Entry "test-for" #f 146 11 146 19 ()}
        {Lisp-Entry "test-begin" #f 155 11 155 21 ()}
        {Lisp-Entry "test-prog1" #f 164 11 164 21 ()}
        {Lisp-Entry "test-cond" #f 173 11 173 20 ("9" "else" "8" "7" "5" "=" "3" "y" "2" "x" "not" "rpt" "validate" "cond" "v" "let")}
        {Lisp-Entry "test-case" #f 190 11 190 20 ("9" "else" "8" "7" "5" "3" "=" "not" "rpt" "validate" "2" "case" "v" "let")}
        {Lisp-Entry "test-ecase" #f 206 11 206 21 ("9" "else" "8" "7" "=" "3" "y" "x" "not" "rpt" "validate" "2" "ecase" "v" "let")}
        {Lisp-Entry "test-typecase" #f 224 11 224 24 ("9" "else" "8" "Number" "7" "Symbol" "3" "=" "not" "rpt" "validate" "2" "typecase" "v" "let")}
        {Lisp-Entry "test-and" #f 240 11 240 19 ("5" "3" "2" "and" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-or" #f 253 11 253 18 ("5" "3" "2" "+" "or" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-essay" #f 266 11 266 21 ("5" "3" "2" "essay" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-either" #f 276 11 276 22 ("5" "3" "2" "+" "either" "equal?" "rpt" "validate")}
        {Lisp-Entry "test-set!" #f 287 11 287 20 ()}
        {Lisp-Entry "foo" #f 296 11 296 14 ("5" "increase!" "10" "below" "from" "n" "for" "loop" "0" "total" "let")}
        {Lisp-Entry "test-increase!" #f 303 11 303 25 ("50" "foo" "=" "rpt" "validate")}
        {Lisp-Entry "goo" #f 312 11 312 14 ("5" "decrease!" "10" "to" "1" "from" "i" "for" "loop" "100" "total" "let" "n")}
        {Lisp-Entry "test-decrease!" #f 319 11 319 25 ("50" "5" "goo" "=" "rpt" "validate")}}
      {Lisp-Entry "X" #f 328 7 328 8 ("Object")
        {Lisp-Entry "counter" #f 331 8 331 15 ("4")}}}})
"Table-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Table-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Table-Tester" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Table-Tester" #f 45 7 45 19 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-growth" "test-table" "invoke")}
        {Lisp-Entry "table" #f 62 14 62 19 ("eq?" "test:" "make-table")}
        {Lisp-Entry "test-table" #f 65 11 65 21 ("3" "5" "=" "goo" "'goo" "table-ref" "not" "rpt" "validate" "2" "foo" "'foo" "table" "table-set!")}
        {Lisp-Entry "small-table" #f 81 14 81 25 ("eq?" "test:" "make-table")}
        {Lisp-Entry "test-growth" #f 84 11 84 22 ("5" "hoo" "'hoo" "3" "goo" "'goo" "2" "foo" "'foo" "small-table" "table-set!")}}}})
"Test-Architecture"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "support" "Test-Architecture.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.support.Test-Architecture" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "Test-Architecture" #f 43 7 43 24 ("Component")
        {Lisp-Entry "author" #f 46 12 46 18 ("generate")}
        {Lisp-Entry "get-class-image" #f 54 16 54 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" #f 58 16 58 38 ()}
        {Lisp-Entry "property-presentation" #f 62 16 62 37 ("nextmethod" "else" "author" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 68 11 68 37 ("author" "name-info" "class-info")}
        {Lisp-Entry "get-addable-default-branch" #f 72 11 72 37 ("Test-Model")}
        {Lisp-Entry "get-addable-classes" #f 76 11 76 30 ("Test-Table" "list")}}}})
"Test-Architecture-Form"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "support" "Test-Architecture-Form.jazz"} 1236813145})
"Test-Model"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "support" "Test-Model.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.support.Test-Model" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Test-Model" #f 43 7 43 17 ("Branch")
        {Lisp-Entry "get-class-image" #f 51 16 51 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" #f 55 16 55 38 ()}}}})
"Test-Table"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "support" "Test-Table.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.support.Test-Table" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Test-Table" #f 43 7 43 17 ("Component")
        {Lisp-Entry "description" #f 46 12 46 23 ("generate")}
        {Lisp-Entry "no" #f 47 12 47 14 ("generate" "5")}
        {Lisp-Entry "get-class-image" #f 55 16 55 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" #f 59 16 59 38 ()}
        {Lisp-Entry "property-presentation" #f 63 16 63 37 ("nextmethod" "else" "no" "description" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 70 11 70 37 ("no" "description" "name-info" "class-info")}
        {Lisp-Entry "get-row-instance" #f 74 11 74 27 ("nextmethod" "else" "Integer-Row" "no" "nullable?:" "String-Row" "new" "description" "field-name" "case" "property")}}}})
"Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "tester" "Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.tester.Tester" #f 37 9 37 36 ("jazz")
      {Lisp-Entry "Tester" #f 44 7 44 13 ("Component")
        {Lisp-Entry "suite" #f 47 12 47 17 ("generate")}
        {Lisp-Entry "title" #f 48 12 48 17 ("generate")}
        {Lisp-Entry "*section*" #f 56 10 56 19 ("make-parameter")}
        {Lisp-Entry "test" #f 60 26 60 30 ()}
        {Lisp-Entry "invoke" #f 64 21 64 27 ("*section*" "parameterize" "proc" "section")}
        {Lisp-Entry "rpt" #f 69 11 69 14 ("*section*" "title" "suite" "assertion-failed" "message")}}}})
"Tester-Error"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "tester" "Tester-Error.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.tester.Tester-Error" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Tester-Error" #f 43 7 43 19 ("Error")
        {Lisp-Entry "form" #f 46 8 46 12 ()}
        {Lisp-Entry "string?" #f 47 8 47 15 ()}
        {Lisp-Entry "initialize" #f 50 11 50 21 ("string?~self" "form~self" "set!" "nextmethod" "string?" "form")}
        {Lisp-Entry "get-form" #f 61 18 61 26 ("form")}
        {Lisp-Entry "get-message" #f 70 11 70 22 ("->string" "form" "string?" "if")}
        {Lisp-Entry "present-message" #f 76 11 76 26 ("get-message" "format" "list" "rest")}}}})
"Thread-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Thread-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Thread-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Thread-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-thread" "invoke")}
        {Lisp-Entry "test-thread" #f 61 11 61 22 ()}}}})
"Validate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "validate" "Validate.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.validate.Validate" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Validate" #f 43 7 43 15 ("Process")
        {Lisp-Entry "start-process" #f 46 11 46 24 ("exit-process" "Validation-Suite" "new" "validate")}}}})
"Validation-Suite"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "validate" "Validation-Suite.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.validate.Validation-Suite" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "Validation-Suite" #f 48 7 48 23 ("Object")
        {Lisp-Entry "Classes" #f 51 14 51 21 ("Vector-Tester" "Variable-Tester" "Values-Tester" "Thread-Tester" "Table-Tester" "Syntax-Tester" "Symbol-Tester" "Structure-Tester" "String-Tester" "Sequence-Tester" "Scheme-Tester" "Reader-Tester" "Pathname-Tester" "Number-Tester" "List-Tester" "Iterator-Tester" "Function-Tester" "Format-Tester" "Form-Tester" "Explorer-Tester" "Error-Tester" "Enumeration-Tester" "Designer-Tester" "Debugger-Tester" "Control-Tester" "Component-Tester" "Collector-Tester" "Char-Tester" "Catalog-Tester" "Branch-Tester" "Boolean-Tester" "Binding-Tester" "Array-Tester")}
        {Lisp-Entry "failed-assertions" #f 88 8 88 25 ()}
        {Lisp-Entry "validate" #f 91 18 91 26 ("report-results" "validate-suite" "report-success?" "report-success?:" "test" "test:")}
        {Lisp-Entry "validate-suite" #f 96 11 96 25 ("user-message" "list" "pair?" "all-tester-classes" "eq?" "if" "invoke-tester" "for-each" "List-Factory" "new" "failed-assertions" "set!" "test")}
        {Lisp-Entry "invoke-tester" #f 102 11 102 24 ("test" "user-message" "self" "suite:" "new" "tester" "let" "class")}
        {Lisp-Entry "all-tester-classes" #f 108 11 108 29 ("Classes" "autoreload" "map")}
        {Lisp-Entry "assertion-failed" #f 112 18 112 34 ("list" "failed-assertions" "put" "form" "section" "title")}
        {Lisp-Entry "report-results" #f 116 11 116 25 ("message" "section" "title" "bind" "info" "function" "for-each" ":terminal" "format" "when" "null?" "if" "failed-assertions" "get-output" "failed" "let" "report-success?" "report-success?:")}}}})
"Values-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Values-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Values-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Values-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-values" "invoke")}
        {Lisp-Entry "test-values" #f 61 11 61 22 ()}}}})
"Variable-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Variable-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Variable-Tester" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Variable-Tester" #f 45 7 45 22 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-free?" "invoke")}
        {Lisp-Entry "test-free?" #f 61 11 61 21 ()}}}})
"Vector-Tester"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "suite" "Vector-Tester.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.suite.Vector-Tester" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Vector-Tester" #f 45 7 45 20 ("title:" "Tester")
        {Lisp-Entry "test" #f 52 11 52 15 ("test-vector" "invoke")}
        {Lisp-Entry "test-vector" #f 61 11 61 22 ()}}}})
"_validate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "_validate.jazz"} 1236813145
    {Lisp-Entry "jazz.validate" #f 37 9 37 22 ("jazz")}})
"autoload"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "autoload.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.autoload" #f 37 9 37 31 ("jazz")}})
"syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.validate" "src" "jazz" "validate" "syntax.jazz"} 1236813145
    {Lisp-Entry "jazz.validate.syntax" #f 37 9 37 29 ("jazz")
      {Lisp-Entry "validate" #f 40 8 40 16 (",message" ",proc" ",expr" "unless" ":text" "->string" "message" "let" "expr" "proc")}
      {Lisp-Entry "error?" #f 46 8 46 14 ("expr")}}})
