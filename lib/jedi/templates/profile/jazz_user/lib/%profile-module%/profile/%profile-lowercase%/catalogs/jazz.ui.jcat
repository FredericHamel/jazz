"Action"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "action" "Action.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.action.Action" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Action" #f 40 7 40 13 ("Object")
        {Lisp-Entry "action-context" #f 43 8 43 22 ()}
        {Lisp-Entry "action-name" #f 44 8 44 19 ()}
        {Lisp-Entry "properties" #f 45 8 45 18 ()}
        {Lisp-Entry "initialize" #f 48 11 48 21 ("properties~self" "action-name~self" "action-context~self" "set!" "nextmethod" "properties" "action-name" "action-context")}
        {Lisp-Entry "fold-literal" #f 55 11 55 23 ("properties" ",properties" "',properties" "action-name" ",action-name" "',action-name" "action-context" ",action-context" "',action-context" "Action" "new")}
        {Lisp-Entry "print" #f 59 11 59 16 ("properties" "not-null?" "action-name" "action-context" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-action-context" #f 73 18 73 36 ("action-context")}
        {Lisp-Entry "get-action-name" #f 77 18 77 33 ("action-name")}
        {Lisp-Entry "get-properties" #f 81 18 81 32 ("properties")}}}})
"Action-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Action-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Action-Event" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Action-Event" #f 44 7 44 19 ("Event")}}})
"Action-Icon"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Action-Icon.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Action-Icon" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Action-Icon" #f 47 7 47 18 (":icons" "portfolio:" "tooltip?:" "22" "Dimension" "size:" "Push-Tool")
        {Lisp-Entry "finish" #f 54 11 54 17 ("preload-images" "nextmethod" "rest")}}}})
"Action-Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "action" "Action-Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.action.Action-Item" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Action-Item" #f 45 7 45 18 ("Component")
        {Lisp-Entry "action-handler" #f 48 12 48 26 ("set-action-handler" "get-action-handler")}
        {Lisp-Entry "shortcut" #f 49 12 49 20 ("set-shortcut" "get-shortcut")}
        {Lisp-Entry "enabled?" #f 50 12 50 20 ("set-enabled?" "get-enabled?")}
        {Lisp-Entry "actionables" #f 53 8 53 19 ()}
        {Lisp-Entry "get-action-handler" #f 61 18 61 36 ("action-handler")}
        {Lisp-Entry "set-action-handler" #f 65 18 65 36 ("action-handler" "set!" "value")}
        {Lisp-Entry "get-shortcut" #f 69 18 69 30 ("shortcut")}
        {Lisp-Entry "set-shortcut" #f 73 18 73 30 ("process-shortcut-update" "shortcut" "set!" "value")}
        {Lisp-Entry "get-enabled?" #f 78 18 78 30 ("enabled?")}
        {Lisp-Entry "set-enabled?" #f 82 18 82 30 ("process-enabled-update" "set!" "boolean" "enabled?" "neq?" "when" "value")}
        {Lisp-Entry "register-actionable" #f 93 18 93 37 ("enabled-update" "self" "shortcut-update" "cons" "actionables" "set!" "actionable")}
        {Lisp-Entry "unregister-actionable" #f 99 18 99 39 ("remove!" "actionables" "set!" "actionable")}
        {Lisp-Entry "process-shortcut-update" #f 103 11 103 34 ("actionables" "self" "shortcut-update" "actionable" "function" "for-each")}
        {Lisp-Entry "process-enabled-update" #f 109 11 109 33 ("actionables" "self" "enabled-update" "actionable" "function" "for-each")}
        {Lisp-Entry "invoke" #f 124 18 124 24 ("invoke" ":action" "Action-Event" "new" "apply" "action-handler" "get-properties" "either" "let*" "enabled?" "when" "event" "event:" "action" "action:" "properties" "sender")}
        {Lisp-Entry "get-class-image" #f 136 16 136 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 140 16 140 37 ("nextmethod" "else" "shortcut" "field-name" "case" "property")}
        {Lisp-Entry "can-rename-component?" #f 146 11 146 32 ()}
        {Lisp-Entry "can-delete-component?" #f 150 11 150 32 ()}
        {Lisp-Entry "can-move-component?" #f 154 11 154 30 ()}
        {Lisp-Entry "can-copy-component?" #f 158 11 158 30 ()}
        {Lisp-Entry "get-categorized-properties" #f 162 11 162 37 ("shortcut")}}}})
"Actionable"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "action" "Actionable.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.action.Actionable" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Actionable" #f 45 11 45 21 ()
        {Lisp-Entry "shortcut-update" #f 48 35 48 50 ("action-item")}
        {Lisp-Entry "enabled-update" #f 49 35 49 49 ("action-item")}}}})
"Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "action" "Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.action.Actions" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Actions" #f 45 7 45 14 ("Component")
        {Lisp-Entry "can-rename-component?" #f 53 11 53 32 ()}
        {Lisp-Entry "can-delete-component?" #f 57 11 57 32 ()}
        {Lisp-Entry "can-move-component?" #f 61 11 61 30 ()}
        {Lisp-Entry "can-copy-component?" #f 65 11 65 30 ()}
        {Lisp-Entry "get-categorized-properties" #f 69 11 69 37 ()}
        {Lisp-Entry "get-addable-classes" #f 73 11 73 30 ("Action-Item" "list")}
        {Lisp-Entry "get-addable-details" #f 78 11 78 30 ("shortcut" "200" "name-info")}}}})
"Activities-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "activity" "Activities-Manager.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.activity.Activities-Manager" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Activities-Manager" #f 47 7 47 25 ("100" "337" "375" "width:" "title:" "row" "selection-mode:" "multiple-selection?:" "on-return-press" "return-press-handler:" "on-context-menu" "context-menu-handler:" "on-double-click" "double-click-handler:" "results" "header" "fill" "content" "flat?:" "hscroll?:" "vscroll?:" "center" "scroller" "on-launch" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "launch" "tools" "name:" "border" "layout-type:" "400" "650" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "external-name" #f 64 16 64 29 ("activities-manager" "'activities-manager" "rest")}
        {Lisp-Entry "host-icon" #f 73 16 73 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 77 16 77 26 ()}
        {Lisp-Entry "get-tools-view" #f 86 11 86 25 ("tools" "'tools" "locate")}}}})
"Activity"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "activity" "Activity.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.activity.Activity" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Activity" #f 49 7 49 15 ("Thread")
        {Lisp-Entry "reporter" #f 52 8 52 16 ()}
        {Lisp-Entry "unregister?" #f 53 8 53 19 ()}
        {Lisp-Entry "initialize" #f 61 11 61 21 ("destroy-mandatory" "unregister?~self" "set!" "nextmethod" "apply" "others" "unregister?" "bind-keywords" "rest")}
        {Lisp-Entry "destroy" #f 73 11 73 18 ("nextmethod" "unregister-reporter")}
        {Lisp-Entry "unregister-reporter" #f 78 11 78 30 ("set!" "get-manager" "unregister-activity" "reporter" "unregister?" "and" "when")}
        {Lisp-Entry "get-manager" #f 89 18 89 29 ("get-activity-manager" "visible?" "visible?:")}
        {Lisp-Entry "get-reporter" #f 98 18 98 30 ("get-manager" "register-activity" "set!" "reporter" "unless")}
        {Lisp-Entry "cancel-requested?" #f 104 18 104 35 ("get-reporter" "cancel-requested?")}
        {Lisp-Entry "set-range" #f 108 18 108 27 ("get-reporter" "set-range" "range")}
        {Lisp-Entry "user-message" #f 112 18 112 30 ("get-reporter" "get-user-message" "apply" "rest" "fmt")}
        {Lisp-Entry "update-view" #f 116 18 116 29 ("get-reporter" "get-root" "update-view")}
        {Lisp-Entry "set-pos" #f 120 18 120 25 ("get-reporter" "set-pos" "pos")}
        {Lisp-Entry "delta-pos" #f 124 18 124 27 ("get-reporter" "delta-pos" "increment")}
        {Lisp-Entry "set-step" #f 128 18 128 26 ("get-reporter" "set-step" "increment")}
        {Lisp-Entry "step-it" #f 132 18 132 25 ("get-reporter" "step-it")}
        {Lisp-Entry "set-done" #f 136 18 136 26 ("get-reporter" "set-done")}}}})
"Activity-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "activity" "Activity-Manager.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.activity.Activity-Manager" #f 37 19 37 52 ("Activities-Border" "register-autoclass" "jazz")
      {Lisp-Entry "Activity-Manager" #f 48 7 48 23 ("border" "fill" "layout-type:" "root" "name:" "57" "247" "Dimension" "size:" "917" "787" "Point" "position:" "title:" "Palette")
        {Lisp-Entry "window-style" #f 58 11 58 23 ("WS_CLIPCHILDREN" "WS_POPUP" "bitwise-ior" "rest")}
        {Lisp-Entry "show" #f 62 11 62 15 ("show-noactivate" "get-application" "get-active?" "when" "set-visible-flag")}
        {Lisp-Entry "mouse-activate?" #f 68 11 68 26 ()}
        {Lisp-Entry "on-close" #f 77 11 77 19 ("hide" "evt")}
        {Lisp-Entry "destroy" #f 81 11 81 18 ("nextmethod" "destroy-manager")}
        {Lisp-Entry "close-manager" #f 91 18 91 31 ("close" "get-reporters" "not-null?" "unless")}
        {Lisp-Entry "toggle-visible?" #f 101 18 101 33 ("set-visible?" "delay:" "up" "'up" "direction:" "Wipe-Effect" "new" "root" "set-effect" "length" "1" "null?" "if" "0.005" "/" "delay" "get-reporters" "reporters" "let*" "when" "get-visible?" "not" "visible?" "let")}
        {Lisp-Entry "register-activity" #f 116 18 116 35 ("update-rectangle" "update-title" "14" "get-width" "-" "Dimension" "set-size" "get-height" "height" "rank:" "parent:" "Activity-Reporter" "new" "reporter" "'border" "locate" "border" "1" "max-reporter-rank" "+" "0" "null?" "if" "rank" "get-reporters" "reporters" "get-size" "size" "let*")}
        {Lisp-Entry "unregister-activity" #f 129 18 129 37 ("update-rectangle" "update-title" "close" "reporter")}
        {Lisp-Entry "update-title" #f 140 21 140 33 ("activities" "'activities" "child" "when" "get-application" "get-status-bar" "status" "let" "set-title" "1" "format-cardinality" "format" "0" "=" "if" "text" "get-reporters" "get-done" "not" "reporter" "function" "count-if" "n" "let*")}
        {Lisp-Entry "update-rectangle" #f 154 21 154 37 ("get-v" "-" "get-h" "Point" "new" "2" "8" "*" "10" "height" "car" "get-size" "get-height" "v" "max-reporter-rank" "1" "+" "n" "let*" "57" "247" "Dimension" "set-size" "set-position" "hide" "begin" "null?" "if" "manager-position" "base" "get-reporters" "reporters" "get-width" "width" "let" "compact-reporters")}
        {Lisp-Entry "compact-reporters" #f 171 21 171 38 ("reporter-rank" "key:" "get-reporters" "<" "sort" "increase!" "set-rank" "reporter" "function" "for-each" "0" "rank" "let")}
        {Lisp-Entry "clear-done" #f 179 18 179 28 ("update-rectangle" "get-reporters" "close" "get-done" "when" "reporter" "function" "for-each")}
        {Lisp-Entry "get-reporters" #f 192 21 192 34 ("border" "'border" "locate" "get-children")}
        {Lisp-Entry "max-reporter-rank" #f 196 11 196 28 ("reporter-rank" "map" "max" "apply" "reporters")}
        {Lisp-Entry "reporter-rank" #f 200 11 200 24 ("get-rank" "reporter")}}
      {Lisp-Entry "Activities-Border" #f 209 7 209 24 ("View")
        {Lisp-Entry "draw" #f 212 11 212 15 ("bottom" "sunken" "'sunken" "right" "top" "left" "edges:" "outer:" "raised" "'raised" "inner:" "draw-edge" "get-bounds" "bounds" "let" "lv" "lh" "context" "surface")}}}})
"Activity-Reporter"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "activity" "Activity-Reporter.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.activity.Activity-Reporter" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Activity-Reporter" #f 47 7 47 24 ("on-cancel" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "15" "157" "cancel" "20" "progress" "16" "150" "0" "Point" "position:" "message" "name:" "37" "180" "Dimension" "size:" "View")
        {Lisp-Entry "rank" #f 50 12 50 16 ("set-rank" "get-rank")}
        {Lisp-Entry "cancelled?" #f 53 8 53 18 ()}
        {Lisp-Entry "done?" #f 54 8 54 13 ()}
        {Lisp-Entry "install" #f 64 11 64 18 ("0" "set-pos" "'progress" "locate" "progress" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-rank" #f 75 18 75 26 ("rank")}
        {Lisp-Entry "set-rank" #f 79 18 79 26 ("8" "get-height" "*" "+" "10" "Point" "new" "set-position" "get-size" "size" "let" "set!" "/=" "rank" "not" "or" "when" "r")}
        {Lisp-Entry "cancel-requested?" #f 86 18 86 35 ("cancelled?")}
        {Lisp-Entry "get-done" #f 90 18 90 26 ("done?")}
        {Lisp-Entry "resize" #f 99 11 99 17 ("cancel" "'cancel" "move-figure" "progress" "'progress" "0" "message" "'message" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-cancel" #f 106 11 106 20 ("set-message" "cancelled?" "set!" "update-rectangle" "close" "get-frame" "frame" "let" "done?" "if" "evt")}
        {Lisp-Entry "set-message" #f 120 18 120 29 ("message" "'message" "locate" "set-title" "msg")}
        {Lisp-Entry "user-message" #f 124 18 124 30 ("format" "apply" "set-message" "rest" "fmt")}
        {Lisp-Entry "set-done" #f 128 18 128 26 ("get-frame" "update-title" "Bitmap-Resource" "cancel" "'cancel" "locate" "set-image-name" "done?" "set!")}
        {Lisp-Entry "set-infinite?" #f 134 18 134 31 ("progress" "'progress" "locate" "set-infinite?" "flag")}
        {Lisp-Entry "set-range" #f 138 18 138 27 ("progress" "'progress" "locate" "set-range" "range")}
        {Lisp-Entry "set-pos" #f 142 18 142 25 ("progress" "'progress" "locate" "set-pos" "pos")}
        {Lisp-Entry "delta-pos" #f 146 18 146 27 ("progress" "'progress" "locate" "delta-pos" "increment")}
        {Lisp-Entry "set-step" #f 150 18 150 26 ("progress" "'progress" "locate" "set-step" "increment")}
        {Lisp-Entry "step-it" #f 154 18 154 25 ("progress" "'progress" "locate" "step-it")}}}})
"Anchor-Style"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Anchor-Style.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Anchor-Style" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Anchor-Style" #f 45 7 45 19 ("Text-Style")}
      {Lisp-Entry "Anchor-Style" #f 51 7 51 19 ("initialize" "label" "highlight" "color" "font" "alignment" "Text-Style")}}})
"Bindings"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "action" "Bindings.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.action.Bindings" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Bindings" #f 45 7 45 15 ("Component")}}})
"Bindings-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Bindings-Manager.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Bindings-Manager" #f 37 19 37 54 ("Branches-Combo" "register-autoclass" "jazz")
      {Lisp-Entry "Bindings-Manager" #f 51 7 51 23 ("on-return-press" "return-press-handler:" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "bindings" "fill" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "center" "bindings-border" "120" "default?:" "on-bind-key" "100" "title:" "tail" "bind-key" "on-edit-action" "edit-action" "on-restore-key" "restore-key" "on-unbind-key" "unbind-key" "branches" "166" "blue:" "188" "green:" "200" "red:" "Medium" "Color" "border-color:" "3" "2" "border-insets:" "140" "16" "on-categorize" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "categorize" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "33" "300" "toolbar" "name:" "border" "layout-type:" "639" "420" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "categorized?" #f 54 8 54 20 ()}
        {Lisp-Entry "conclude" #f 88 11 88 19 ("update-buttons" "update-branches" "view-bindings" "nextmethod" "initargs")}
        {Lisp-Entry "host-icon" #f 100 16 100 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 104 16 104 26 ()}
        {Lisp-Entry "host-position" #f 108 16 108 29 ("14" "28" "Point")}
        {Lisp-Entry "host-size" #f 112 16 112 25 ("635" "466" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 116 11 116 26 ("home")}
        {Lisp-Entry "focus-default" #f 120 11 120 24 ("get-tree" "acquire-focus")}
        {Lisp-Entry "get-tree" #f 129 11 129 19 ("bindings" "'bindings" "locate")}
        {Lisp-Entry "on-categorize" #f 138 11 138 24 ("view-bindings" "name" "bindings" "locate" "set-toplevel-controls?" "not" "categorized?" "set!" "evt")}
        {Lisp-Entry "on-show-all" #f 144 11 144 22 ("evt")}
        {Lisp-Entry "on-double-click" #f 148 11 148 26 ("bind-key" "edit-action" "evt")}
        {Lisp-Entry "on-return-press" #f 154 11 154 26 ("bind-key" "edit-action" "evt")}
        {Lisp-Entry "on-unbind-key" #f 160 11 160 24 ("unbind-key" "evt")}
        {Lisp-Entry "on-restore-key" #f 164 11 164 25 ("restore-key" "evt")}
        {Lisp-Entry "on-bind-key" #f 168 11 168 22 ("bind-key" "evt")}
        {Lisp-Entry "on-edit-action" #f 172 11 172 25 ("edit-action" "evt")}
        {Lisp-Entry "on-selection-change" #f 176 11 176 30 ("update-buttons" "evt")}
        {Lisp-Entry "branch-change" #f 180 11 180 24 ("update-buttons" "view-bindings" "get-name" "active-bindings" "'active-bindings" "get-preferences" "set-preferences-property" "set-active-branch" "function" ":wait" "with-cursor" "get-active-branch" "neq?" "when" "get-bindings" "bindings" "get-application" "appl" "let" "branch")}
        {Lisp-Entry "unbind-key" #f 197 11 197 21 ("update-action-item" "update-shortcut" "shortcut" "'shortcut" "set-property" "get-shortcut" "old" "get-bindings-designer" "designer" "selected-action-item/rank" "rank" "action-item" "receive" "get-tree" "tree" "get-application" "appl" "let")}
        {Lisp-Entry "restore-key" #f 208 11 208 22 ("update-action-item" "update-shortcut" "shortcut" "'shortcut" "remove-property" "get-shortcut" "old" "get-bindings-designer" "designer" "selected-action-item/rank" "rank" "action-item" "receive" "get-tree" "tree" "get-application" "appl" "let")}
        {Lisp-Entry "bind-key" #f 219 11 219 19 ("update-action-item" "update-shortcut" "Shortcut-Chooser" "get-modal" "shortcut" "'shortcut" "set-property" "get-shortcut" "old" "get-bindings-designer" "designer" "selected-action-item/rank" "rank" "action-item" "receive" "get-tree" "tree" "get-application" "appl" "let")}
        {Lisp-Entry "update-action-item" #f 230 11 230 29 ("invalidate-cell" "shortcut" "'shortcut" "owner-image" "image:" "Tree-Image" "get-shortcut" "present-shortcut" "title:" "Tree-Label" "set-cell-data" "2" "owner-cell" "1" "Cell" "new" "key-cell" "let" "rank" "action-item" "designer" "tree")}
        {Lisp-Entry "edit-action" #f 244 11 244 22 ("get-method-name" "get-application" "edit-definitions" "bell" "not" "if" "selected-action-item" "get-action-handler" "action-handler" "let")}
        {Lisp-Entry "selected-action-item/rank" #f 256 11 256 36 ("values" "get-row" "get-user-data" "data" "let" "when" "get-single-selection" "rank" "get-tree" "tree" "let*")}
        {Lisp-Entry "selected-action-item" #f 264 11 264 31 ("rank" "action-item" "receive" "not" "if" "selected-action-item/rank" "info" "let")}
        {Lisp-Entry "view-bindings" #f 277 11 277 24 ("view-bindings" "get-tree" "tree" "flat" "'flat" "categorized" "'categorized" "categorized?" "if" "kind" "get-bindings" "bindings" "get-bindings-designer" "designer" "get-application" "appl" "let")}
        {Lisp-Entry "update-branches" #f 286 11 286 26 ("get-branch" "set-value" "get-branches" "get-name" "->string" "list" "branch" "function" "map" "set-choices" "branches" "'branches" "locate" "combo" "get-bindings" "bindings" "let")}
        {Lisp-Entry "update-buttons" #f 295 11 295 25 ("bind-key" "'bind-key" "edit-action" "'edit-action" "restore-key" "'restore-key" "unbind-key" "'unbind-key" "locate" "set-enabled?" "selected-action-item" "action-item" "let")}}
      {Lisp-Entry "Branches-Combo" #f 311 7 311 21 ("Combo-Box")
        {Lisp-Entry "content-change" #f 314 11 314 25 ("get-value" "get-host" "get-guest" "branch-change" "origin")}}}})
"Bindings-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "action" "Bindings-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.action.Bindings-Preferences" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Bindings-Preferences" #f 46 7 46 27 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" #f 58 11 58 32 ()}
        {Lisp-Entry "can-delete-component?" #f 62 11 62 32 ()}
        {Lisp-Entry "can-move-component?" #f 66 11 66 30 ()}
        {Lisp-Entry "can-copy-component?" #f 70 11 70 30 ()}}}})
"Bindings-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Bindings-Tree.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Bindings-Tree" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Bindings-Tree" #f 46 7 46 20 ("center" "justification:" "50" "owner" "150" "key" "toplevel-controls?:" "235" "width:" "title:" "name:" "name" "filled-column:" ":icons" "portfolio:" "Tree-View")
        {Lisp-Entry "view-bindings" #f 61 21 61 34 ("view-list" "list" "view-flat" "flat" "view-categorized" "categorized" "case" "remove-every-row" "function" "with-update-locked" "kind" "bindings" "designer")}
        {Lisp-Entry "view-categorized" #f 71 11 71 27 ("get-children" "present-shortcut" "father:" "'shortcut" "owner-image" "owner" "get-shortcut" "shortcut" "action" "user-data:" "Tree-Image" "Tree-Label" "Bitmap-Resource" "image:" "get-name" "->string" "title:" "Tree-Node" "new" "list" "children:" "add-row" "row" "let" "Actions" "is?" "when" "actions" "function" "for-each" "bindings" "designer")}
        {Lisp-Entry "view-flat" #f 83 11 83 20 ("get-children" "user-data:" "present-shortcut" "Tree-Label" "Bitmap-Resource" "get-name" "format" "title:" "Tree-Node" "list" "children:" "add-row" "'shortcut" "owner-image" "image:" "Tree-Image" "new" "owner" "get-shortcut" "shortcut" "let" "action" "Actions" "is?" "when" "actions" "function" "for-each" "bindings" "designer")}
        {Lisp-Entry "view-list" #f 94 11 94 20 ("user-data:" "present-shortcut" "Tree-Label" "Bitmap-Resource" "get-parent" "get-name" "format" "title:" "Tree-Node" "list" "children:" "add-row" "'shortcut" "owner-image" "image:" "Tree-Image" "new" "owner" "get-shortcut" "shortcut" "let" "action" "function" "for-each" "actions" "designer")}
        {Lisp-Entry "present-shortcut" #f 102 21 102 37 ("present" "not" "if" "shortcut")}
        {Lisp-Entry "owner-image" #f 108 21 108 32 ("default-owner-image" "else" "root-owner-image" "get-reference" "eq?" "branch-owner-image" "Branch" "is?" "cond" "find-owner" "owner" "let" "property" "component" "designer")}
        {Lisp-Entry "default-owner-image" #f 115 11 115 30 ()}
        {Lisp-Entry "root-owner-image" #f 119 11 119 27 ("Bitmap-Resource")}
        {Lisp-Entry "branch-owner-image" #f 123 11 123 29 ("Bitmap-Resource")}}}})
"Border-Layout"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "layout" "Border-Layout.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.layout.Border-Layout" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Border-Layout" #f 45 7 45 20 ("Layout")
        {Lisp-Entry "insets" #f 48 12 48 18 ("generate" "0" "Rect")}
        {Lisp-Entry "padding" #f 49 12 49 19 ("generate" "0")}
        {Lisp-Entry "layout" #f 57 11 57 17 ("get-bottom" "get-right" "get-top" "insets" "get-left" "+" "center" "'center" "east" "'east" "get-width" "west" "'west" "decrease!" "-" "south" "'south" "padding" "set!" "increase!" "Dimension" "set-size" "Point" "new" "set-position" "get-size" "get-height" "let" "north" "'north" "get-location" "eq?" "when" "for-each" "bottom-padding" "right-padding" "top-padding" "left-padding" "bottom" "right" "top" "0" "left" "reverse" "reversed" "get-visible?" "Figure" "is?" "and" "figure" "function" "collect-if" "visibles" "let*" "height" "width" "figures")}}}})
"Border-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Border-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Border-View" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Border-View" #f 50 7 50 18 ("fill" "layout-type:" "Layout-View")
        {Lisp-Entry "border-type" #f 54 12 54 23 ("set-border-type" "get-border-type" "solid" "'solid")}
        {Lisp-Entry "border-color" #f 55 12 55 24 ("set-border-color" "get-border-color" "Black" "name:" "Color")}
        {Lisp-Entry "border-insets" #f 56 12 56 25 ("set-border-insets" "get-border-insets" "1" "Rect")}
        {Lisp-Entry "style" #f 57 12 57 17 ("set-style" "get-style")}
        {Lisp-Entry "get-border-type" #f 69 18 69 33 ("border-type")}
        {Lisp-Entry "set-border-type" #f 73 18 73 33 ("invalidate-borders" "recalculate-border-insets" "border-type" "set!" "type")}
        {Lisp-Entry "get-border-color" #f 79 18 79 34 ("border-color")}
        {Lisp-Entry "set-border-color" #f 83 18 83 34 ("invalidate-borders" "border-color" "set!" "color")}
        {Lisp-Entry "get-border-insets" #f 88 18 88 35 ("border-insets")}
        {Lisp-Entry "set-border-insets" #f 92 18 92 35 ("layout-view" "border-insets" "set!" "insets")}
        {Lisp-Entry "get-style" #f 97 18 97 27 ("style")}
        {Lisp-Entry "set-style" #f 101 18 101 27 ("recalculate-border-insets" "style" "set!" "value")}
        {Lisp-Entry "recalculate-border-insets" #f 106 11 106 36 ("3" "shadow" "2" "else" "1" "entry" "style" "palette" "raised" "edge" "0" "Rect" "set-border-insets" "none" "border-type" "case")}
        {Lisp-Entry "add-child" #f 118 11 118 20 ("layout-view" "View" "is?" "when" "nextmethod" "child")}
        {Lisp-Entry "fill-position" #f 129 11 129 24 ("get-top" "border-insets" "get-left" "Point" "new" "nextmethod" "+")}
        {Lisp-Entry "fill-size" #f 134 11 134 20 ("get-bottom" "get-top" "get-right" "border-insets" "get-left" "+" "Dimension" "new" "nextmethod" "-")}
        {Lisp-Entry "inner?" #f 146 11 146 17 ("children" "memq?" "view")}
        {Lisp-Entry "invalidate-borders" #f 155 11 155 29 ("border-insets" "insets:" "invalidate-border")}
        {Lisp-Entry "draw" #f 164 11 164 15 ("+" "line" "Black" "set-color" "get-bottom" "get-right" "-" "0" "expand-rect" "shadow" "'raised" "raised" "rectangle" "'rectangle" "edges:" "2" "1" "border-insets" "get-left" "inner:" "sunken" "'sunken" "outer:" "draw-edge" "else" "Outline-Border" "-1" "inflate-rect" "inner" "outline/edge/flat?" "'outline/edge/flat?" "outline" "'outline" "Entry-Border" "name:" "Color" "entry/edge/flat?" "'entry/edge/flat?" "get-element" "entry" "'entry" "style" "eq?" "and" "cond" "get-look" "look" "edge" "frame-rect" "border-color" "when" "solid" "unspecified" "none" "border-type" "case" "get-bounds" "bounds" "let" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-children" #f 193 11 193 24 ("top" "edges:" "raised" "'raised" "inner:" "sunken" "'sunken" "outer:" "draw-edge" "get-bounds" "bounds" "let" "palette" "border-type" "case" "nextmethod" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "get-class-image" #f 206 16 206 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-row-instance" #f 210 11 210 27 ("nextmethod" "else" "Color-Row" "new" "border-color" "field-name" "case" "property")}}}})
"Caption-Host"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Caption-Host.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.hosting.Caption-Host" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Caption-Host" #f 47 7 47 19 ("Host-View")
        {Lisp-Entry "maximized?" #f 50 8 50 18 ()}
        {Lisp-Entry "get-maximized?" #f 58 18 58 32 ("maximized?")}
        {Lisp-Entry "set-maximized?" #f 62 18 62 32 ("restore" "maximize" "if" "value")}
        {Lisp-Entry "caption-icon" #f 73 29 73 41 ()}
        {Lisp-Entry "caption-title" #f 77 29 77 42 ()}
        {Lisp-Entry "caption-font" #f 81 29 81 41 ("Caption" "name:" "Font")}
        {Lisp-Entry "caption-focused?" #f 85 29 85 45 ()}
        {Lisp-Entry "caption-visible?" #f 89 29 89 45 ()}
        {Lisp-Entry "caption-rect" #f 98 29 98 41 ("20" "+" "get-width" "-" "Rect" "new" "4" "0" "maximized?" "if" "border" "let")}
        {Lisp-Entry "Active-Colors" #f 108 14 108 27 ("255" "113" "28" "227" "blue:" "84" "green:" "0" "red:" "Color" "list")}
        {Lisp-Entry "Inactive-Colors" #f 111 14 111 29 ("235" "185" "157" "223" "blue:" "150" "green:" "122" "red:" "Color" "list")}
        {Lisp-Entry "draw" #f 115 11 115 15 ("draw-caption" "caption-visible?" "rectangle" "'rectangle" "edges:" "outer:" "raised" "'raised" "inner:" "draw-edge" "get-bounds" "bounds" "let" "maximized?" "not" "when" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-caption" #f 123 11 123 23 ("draw-text" "title-offset" "White" "set-text-color" "set-font" "get-v" "get-top" "get-h" "get-left" "+" "get-application" "get-icons-cache" "draw-image" "icon-offset" "offset" "when" "vertical" "'vertical" "direction:" "0" "list" "gradient-fill" "24" "3" "-" "1" "line" "Light" "name:" "Color" "set-color" "get-height" "height" "get-width" "width" "second" "end" "first" "start" "Inactive-Colors" "Active-Colors" "if" "colors" "caption-focused?" "focused?" "caption-font" "font" "caption-title" "title" "caption-icon" "icon" "let*" "caption-rect" "rect" "let" "context" "surface")}
        {Lisp-Entry "icon-offset" #f 147 29 147 40 ("2" "Point")}
        {Lisp-Entry "title-offset" #f 151 29 151 41 ("3" "22" "Point")}}}})
"Capture-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Capture-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Capture-Event" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Capture-Event" #f 44 7 44 20 ("Event")
        {Lisp-Entry "window" #f 47 8 47 14 ()}
        {Lisp-Entry "initialize" #f 50 11 50 21 ("window" "set!" "nextmethod" "wnd" "sender" "kind")}
        {Lisp-Entry "get-window" #f 60 18 60 28 ("window")}}}})
"Check-Box"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Check-Box.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.view.Check-Box" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Check-Box" #f 49 7 49 16 ("View")
        {Lisp-Entry "box-size" #f 52 14 52 22 ("13")}
        {Lisp-Entry "checked?" #f 56 12 56 20 ("set-checked?" "get-checked?")}
        {Lisp-Entry "editable?" #f 57 12 57 21 ("set-editable?" "get-editable?")}
        {Lisp-Entry "focusable?" #f 58 12 58 22 ("set-focusable?" "get-focusable?")}
        {Lisp-Entry "color" #f 59 12 59 17 ("set-color" "get-color" "Black" "name:" "Color")}
        {Lisp-Entry "flat?" #f 60 12 60 17 ("generate")}
        {Lisp-Entry "tracking?" #f 63 8 63 17 ()}
        {Lisp-Entry "inside?" #f 64 8 64 15 ()}
        {Lisp-Entry "default-size" #f 67 11 67 23 ("16" "100" "Dimension")}
        {Lisp-Entry "get-sort-value" #f 71 11 71 25 ("title" "localize")}
        {Lisp-Entry "get-checked?" #f 80 18 80 30 ("checked?")}
        {Lisp-Entry "set-checked?" #f 84 18 84 30 ("invalidate-view" "set-modified?" "call-content-change" "checked?" "set!" "flag")}
        {Lisp-Entry "get-editable?" #f 91 18 91 31 ("editable?")}
        {Lisp-Entry "set-editable?" #f 95 18 95 31 ("editable?" "set!" "flag")}
        {Lisp-Entry "get-focusable?" #f 99 18 99 32 ("focusable?")}
        {Lisp-Entry "set-focusable?" #f 103 18 103 32 ("focusable?" "set!" "flag")}
        {Lisp-Entry "get-color" #f 107 18 107 27 ("color")}
        {Lisp-Entry "set-color" #f 111 18 111 27 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "change-state" #f 121 29 121 41 ("checked?" "not" "set-checked?" "reverse?")}
        {Lisp-Entry "process-change-state" #f 125 11 125 31 ("self" "process-action" "outline-view" "not" "if" "set-modified?" "shift-down?" "change-state")}
        {Lisp-Entry "text-extent" #f 138 11 138 22 ("font" "text-extent" "localize" "title" "let")}
        {Lisp-Entry "box-rect" #f 143 11 143 19 ("Rect" "new" "get-height" "v" "2" "0" "5" "title" "if" "box-size" "+" "get-width" "-" "quotient" "h" "text-extent" "extent" "let*")}
        {Lisp-Entry "draw" #f 155 11 155 15 ("draw-text" "color" "determine-color" "either" "set-text-color" "font" "set-font" "Focused-Selection" "cell" "row" "get-selection-mode" "memq?" "Tree-View" "outline-view" "is?" "rect" "text-v" "18" "text-h" "selected?:" "getf" "selected?" "let" "when" "3" "draw-check" "White" "Medium" "name:" "Color" "-2" "inflate-rect" "fill-rect" "rectangle" "'rectangle" "edges:" "outer:" "sunken" "'sunken" "inner:" "draw-edge" "flat?" "unless" "inside?" "tracking?" "and" "enabled?" "or" "grayed?" "+" "Rect" "new" "box-rect" "get-height" "box-v" "0" "2" "box-size" "get-width" "-" "quotient" "box-h" "not" "center?" "text-extent" "if" "extent" "localize" "title" "let*" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-check" #f 184 29 184 39 ("draw-check" "Black" "Dark" "name:" "Color" "if" "set-color" "checked?" "when" "grayed?" "v" "h" "surface")}
        {Lisp-Entry "key-press" #f 195 11 195 20 ("process-change-state" "case" "key")}
        {Lisp-Entry "mouse-down" #f 206 11 206 21 ("invalidate-view" "acquire-capture" "inside?" "tracking?" "set!" "editable?" "enabled?" "when" "focus?:" "outline-select" "box-rect" "in-rect?" "not" "outline-view" "and" "if" "pos")}
        {Lisp-Entry "drag-move" #f 216 11 216 20 ("invalidate-view" "set!" "inside?" "neq?" "over-view?" "over?" "let" "tracking?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 224 11 224 18 ("process-change-state" "acquire-focus" "focusable?" "inside?" "set!" "release-capture" "tracking?" "when" "rest" "pos")}
        {Lisp-Entry "property-presentation" #f 239 16 239 37 ("nextmethod" "else" "color" "checked?" "field-name" "case" "property")}}}})
"Check-Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Check-Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Check-Item" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Check-Item" #f 45 7 45 17 ("Label-Item")
        {Lisp-Entry "checked?" #f 48 12 48 20 ("set-checked?" "get-checked?")}
        {Lisp-Entry "get-checked?" #f 56 18 56 30 ("checked?")}
        {Lisp-Entry "set-checked?" #f 60 18 60 30 ("invalidate-view" "checked?" "set!" "flag")}
        {Lisp-Entry "preferred-prefix-width" #f 70 11 70 33 ("0" "12" "checked?" "if")}
        {Lisp-Entry "draw-prefix" #f 79 11 79 22 ("Bitmap-Resource" "get-small-icons-cache" "draw-image" "2" "top" "5" "left" "get-application" "appl" "let" "checked?" "when" "context" "surface")}}}})
"Chooser"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Chooser.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Chooser" #f 37 19 37 39 ("jazz")
      {Lisp-Entry "Chooser" #f 48 7 48 14 ("on-cancel" "310" "cancel" "on-ok" ":host" "Event-Handler" "action-handler:" "24" "80" "172" "220" "title:" "ok" "116" "404" "44" "-2" "content" "Label" "27" "30" "description" "Caption" "Font" "font:" "16" "350" "9" "10" "Point" "position:" "title" "name:" "206" "400" "Dimension" "size:" "View")
        {Lisp-Entry "resize" #f 65 11 65 17 ("cancel" "'cancel" "ok" "'ok" "move-figure" "content" "'content" "locate" "size-figure" "nextmethod" "dv" "dh")}}}})
"Code-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Code-Explorer.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Code-Explorer" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Code-Explorer" #f 48 7 48 20 ("Text-Explorer")
        {Lisp-Entry "backward-expr" #f 51 26 51 39 ("string" "'string" "kind" "set!" "backward-word" "when")}
        {Lisp-Entry "forward-expr" #f 57 26 57 38 ("string" "'string" "kind" "set!" "forward-word" "when")}
        {Lisp-Entry "collect-backward-exprs" #f 63 18 63 40 ("get-mark" "cons" "set!" "backward-expr" "while" "list" "let")}
        {Lisp-Entry "collect-forward-exprs" #f 70 18 70 39 ("get-output" "decrease!" "get-mark" "put" "forward-expr" "0" ">=" "and" "while" "List-Factory" "new" "fact" "let" "n")}}}})
"Code-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "syntax" "Code-Syntax.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.syntax.Code-Syntax" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Code-Syntax" #f 45 7 45 18 ("Text-Syntax")}}})
"Code-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Code-Text-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Code-Text-Actions" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Code-Text-Actions" #f 46 7 46 24 ("paste&next-aux" "paste&stay-aux" "edit-references-aux" "edit-definitions-aux" "on-paste&next" "paste&next" "F2" "on-paste&stay" "paste&stay" "on-tabify" "tabify" "on-transpose-expr" "transpose-expr" "F5" "on-recolorize-syntax" "recolorize-syntax" "on-update-catalog" "update-catalog" "Up" "on-exit-composite" "exit-composite" "Down" "on-enter-composite" "enter-composite" "Right" "on-forward" "forward-composite" "Left" ":alt" "on-backward" "backward-composite" "on-edit-references" "edit-references" "F12" "on-edit-definitions" "edit-definitions" ":shift" "on-evaluate-buffer" "evaluate-buffer" "Return" ":control" "Shortcut" "shortcut:" "on-evaluate" ":focus" "Event-Handler" "action-handler:" "evaluate" "name:" "Actions")}}})
"Code-Text-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Code-Text-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Code-Text-Event" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Code-Text-Event" #f 45 7 45 22 ("Text-Event")}}})
"Code-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Code-Text-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Code-Text-Preferences" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "Code-Text-Preferences" #f 43 7 43 28 ("Text-Preferences")}}})
"Code-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Code-Text-View.jazz"} 1245732655
    {Lisp-Entry "jazz.ui.text.Code-Text-View" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Code-Text-View" #f 54 7 54 21 ("12" "left-padding:" "Code" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Text-View")
        {Lisp-Entry "mouse-copy-selection" #f 57 8 57 28 ()}
        {Lisp-Entry "new-syntax" #f 64 11 64 21 ("Code-Syntax" "new")}
        {Lisp-Entry "host-workspaces" #f 73 11 73 26 ("debugger" "text")}
        {Lisp-Entry "tab-press" #f 82 11 82 20 ("tabulate" "insert-char" "get-end" "get-start" "get-row" "=" "empty-selection?" "nextmethod" "accepts-returns?" "not" "has-completion?" "or" "if" "modifiers" "key")}
        {Lisp-Entry "backspace-press" #f 91 11 91 26 ("complete-current" "when" "insert-char/backspace" "completion-active?" "not" "if" "get-start" "previous-cell" "previous" "let" "word?" "word?:" "key")}
        {Lisp-Entry "char-press" #f 99 11 99 21 ("show-arguments" "eqv?" "when" "flash-matching-character" "nextmethod" "translated" "key")}
        {Lisp-Entry "mouse-down" #f 106 11 106 21 ("nextmethod" "get-selection" "alt-down?" "essay" "mouse-copy-selection" "set!" "end-completion" "pos")}
        {Lisp-Entry "drag-up" #f 116 11 116 18 ("set!" "mouse-insert" "set-selection" "get-string" "copy" "get-start" "expr-range" "selection" "has-selection?" "if" "range" "let*" "alt-down?" "mouse-copy-selection" "and" "when" "nextmethod" "rest" "pos")}
        {Lisp-Entry "select-outer" #f 126 11 126 23 ("nextmethod" "end-completion")}
        {Lisp-Entry "context-menu" #f 131 11 131 23 ("get-context-menu" "track-popup-menu" "edit-references" "edit-definitions" "move-caret:" "context-menu-click" "always" "'always" "else" "never" "'never" "outside-selection" "'outside-selection" "not" "and" "cond" "move-caret" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "focus-actions" #f 149 11 149 24 ("nextmethod" "code-text" "'code-text" "find-actions" "cons")}
        {Lisp-Entry "explorer-class" #f 159 11 159 25 ("Code-Explorer")}
        {Lisp-Entry "backward-compound" #f 168 11 168 28 ("backward-expr")}
        {Lisp-Entry "forward-compound" #f 172 11 172 27 ("forward-expr")}
        {Lisp-Entry "upward-compound" #f 176 11 176 26 ("exit-composite")}
        {Lisp-Entry "downward-compound" #f 180 11 180 28 ("enter-composite")}
        {Lisp-Entry "on-backward" #f 184 18 184 29 ("backward-expr" "evt")}
        {Lisp-Entry "on-forward" #f 188 18 188 28 ("forward-expr" "evt")}
        {Lisp-Entry "on-enter-composite" #f 192 18 192 36 ("enter-composite" "evt")}
        {Lisp-Entry "on-exit-composite" #f 196 18 196 35 ("exit-composite" "evt")}
        {Lisp-Entry "forward-expr" #f 200 29 200 41 ("get-range" "set-selection" "forward-expr" "when" "get-end" "end:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "backward-expr" #f 206 29 206 42 ("get-range" "set-selection" "backward-expr" "when" "get-start" "start:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "enter-composite" #f 212 29 212 44 ("set-caret" "enter-composite" "when" "get-end" "end:" "get-start" "start:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "exit-composite" #f 218 29 218 43 ("set-caret" "exit-list" "when" "end:" "get-end" "start:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "move-caret" #f 224 11 224 21 ("end-completion" "nextmethod" "shift?" "direction" "pos")}
        {Lisp-Entry "on-transpose-expr" #f 229 11 229 28 ("transpose-expr" "evt")}
        {Lisp-Entry "transpose-expr" #f 233 18 233 32 ("set-modified?" "replace" "rs" "range-strings" "ls" "not" "or" "right" "get-range" "left" "forward-expr" "get-end" "backward-expr" "get-start" "set-pos" "right-expl" "self" "explorer-class" "new" "left-expl" "let" "function" "undoer" "with-atomic-undo" "bell" "has-selection?" "if")}
        {Lisp-Entry "get-context" #f 260 26 260 37 ()}
        {Lisp-Entry "header-string?" #f 264 11 264 25 ("last" "first" "eqv?" "2" "string-length" ">=" "string?" "and" "form")}
        {Lisp-Entry "edition-workspace" #f 271 29 271 46 ()}
        {Lisp-Entry "on-edit-definitions" #f 275 11 275 30 ("get-context" "context:" "current-history-item" "history-item:" "edit-definitions" "standardize-form" "else" "edition-workspace" "workspace:" "edit-document" "file?" "string-length" "-" "1" "subseq" "edit-filename" "header-string?" "cond" "when" "get-application" "appl" "current-expr" "form" "let" "evt")}
        {Lisp-Entry "on-edit-references" #f 288 11 288 29 ("get-context" "context:" "current-history-item" "history-item:" "edit-references" "standardize-form" "when" "get-application" "appl" "current-expr" "form" "let" "evt")}
        {Lisp-Entry "standardize-form" #f 296 11 296 27 ("else" "dispatch->name" "dispatch?" "tag->name" "tag?" "cond" "form")}
        {Lisp-Entry "expr-at" #f 302 29 302 36 ("pos")}
        {Lisp-Entry "edit-symbol-class" #f 306 29 306 46 ("symbol")}
        {Lisp-Entry "edit-definitions" #f 310 21 310 37 ("definitions:" "history-item:" "Definitions-Menu" "new" "track-popup-menu" "car" "edit" "add-history" "bell" "0" "length" "case" "get-context" "context:" "get-coalesced-definitions" "list" "standardize-form" "current-history-item" "item" "get-cataloguer" "cataloguer" "appl" "let*" "else" "edit-document" "file?" "string-length" "-" "1" "subseq" "get-application" "edit-filename" "header-string?" "cond" "when" "view->text" "expr-at" "form" "let" "pos")}
        {Lisp-Entry "edit-references" #f 330 21 330 36 ("definitions:" "target:" "history-item:" "References-Menu" "new" "track-popup-menu" "else" "car" "edit-reference" "add-history" "1" "bell" "0" "length" "case" "get-context" "context:" "get-references" "list" "standardize-form" "current-history-item" "item" "get-cataloguer" "cataloguer" "get-application" "appl" "let*" "when" "view->text" "expr-at" "form" "let" "pos")}
        {Lisp-Entry "current-history-item" #f 350 11 350 31 ("History-File-Item" "History-Document-Item" "new" "when" "get-frame" "frame" "not" "if" "get-moniker" "moniker" "get-selection" "selection" "let")}
        {Lisp-Entry "save-content" #f 365 11 365 23 ("update-catalog" "nextmethod" "moniker")}
        {Lisp-Entry "on-update-catalog" #f 376 18 376 35 ("update-catalog" "evt")}
        {Lisp-Entry "update-catalog" #f 380 11 380 25 ("user-message" "get-moniker" "update-file" "bell" "not" "if" "find-catalog" "catalog" "let")}
        {Lisp-Entry "find-catalog" #f 389 11 389 23 ("get-catalog" "car" "entry" "not-null?" "get-application" "get-cataloguer" "get-file-entries" "entries" "when" "get-moniker" "moniker" "let")}
        {Lisp-Entry "on-recolorize-syntax" #f 404 18 404 38 ("recolorize-syntax" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "recolorize-syntax" #f 410 18 410 35 ("recoloring?:" "colorize-syntax" "uncolorize-all")}
        {Lisp-Entry "uncolorize-all" #f 415 11 415 25 ("get-length" "0" "naturals" "uncolorize-row" "for-each")}
        {Lisp-Entry "preferences" #f 419 29 419 40 ()}
        {Lisp-Entry "syntax-targets" #f 423 29 423 43 ()}
        {Lisp-Entry "syntax-automata" #f 427 29 427 44 ()}
        {Lisp-Entry "compute-syntax-targets" #f 431 29 431 51 ()}
        {Lisp-Entry "compute-syntax-automata" #f 435 29 435 52 ("c-constituent?" "self" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-syntax" #f 439 11 439 26 ("colorize-entries" "when" "text-beginning" "colorize-syntax-from" "entries?" "entries?:" "recoloring?" "recoloring?:")}
        {Lisp-Entry "colorize-syntax-from" #f 445 11 445 31 ("finish-current" "when" "colorize-type" "set!" "string-length" "+" "end" "Cell" "new" "start" "col" "row" "type" "target" "bind" "car" "info" "while" "0" "get-limit" "get-paragraphs" "syntax-automata" "automata-search" "found" "syntax-targets" "targets" "self" "new-colorizer" "not" "essay" "colorizer" "let" "recoloring?" "pos")}
        {Lisp-Entry "apply-coloring" #f 460 21 460 35 ("apply-style" "not" "if" "style-name" "end" "start" "colorizer")}
        {Lisp-Entry "colorize-type" #f 466 29 466 42 ("recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "colorize-balanced-comment" #f 470 29 470 54 ("set!" "cdr" "continuation-return" "apply-coloring" "2" "+" "Cell" "new" "balanced-comment-backward" "'balanced-comment-backward" "eq?" "if" "col" "row" "type" "target" "bind" "car" "info" "let" "while" "return" "function" "continuation-capture" "style" "colorizer" "end" "start" "found")}
        {Lisp-Entry "colorize-balanced-comment-backward" #f 484 21 484 55 ("cdr" "apply-coloring" "eq?" "type" "target" "pos" "bind" "reverse?:" "position:" "'open" "'close" "user-data:" "make-search-context" "list" "text-multisearch" "let" "when" "close" "close:" "open" "open:" "recolorize?" "style" "colorizer" "end" "start" "found")}
        {Lisp-Entry "colorize-line-comment" #f 494 21 494 42 ("car" "second" "=" "while" "cdr" "set!" "row" "3" "+" "paragraph-length" "get-row" "Cell" "new" "apply-coloring" "not" "if" "2" "next-pos" "get-char" "eqv?" "and" "title?" "let" "title-char" "title-style" "line-style" "colorizer" "end" "start" "found")}
        {Lisp-Entry "colorize-keyword" #f 507 21 507 37 ("cdr" "apply-coloring" "style" "colorizer" "end" "start" "found")}
        {Lisp-Entry "find-specifier-end" #f 512 11 512 29 ("Cell" "new" "when" "position" "'position" "return:" "start:" "find-balanced" "eqv?" "or" "element" "nxt" "let" "cardinality" "1" "+" ">=" "unless" "paragraph-string" "str" "get-col" "col" "get-row" "row" "let*" "start")}
        {Lisp-Entry "recolorize-text" #f 524 11 524 26 ("finish-current" "colorize-type" "string-length" "end" "col" "row" "car" "info" "while" "get-col" "get-paragraphs" "syntax-automata" "automata-search" "found" "self" "new-colorizer" "colorizer" "uncolorize-row" "for-each" "1" "+" "naturals" "range" "set!" "eq?" "type" "target" "bind" "reverse?:" "position:" "close" "'close" "open" "'open" "user-data:" "make-search-context" "list" "text-multisearch" "opening" "when" "syntax-targets" "targets" "0" "get-row" "Cell" "new" "pos" "let" "end-row" "start")}
        {Lisp-Entry "colorize-entries" #f 548 26 548 42 ("colorize-entry" "for-each" "when" "get-parsed-entries" "entries" "let")}
        {Lisp-Entry "get-parsed-entries" #f 554 29 554 47 ("get-definitions" "get-controller" "get-moniker-time" "get-time" "time->seconds" "=" "car" "file-entry" "not-null?" "c" "context:" "get-file-entries" "entries" "get-application" "get-cataloguer" "cataloguer" "get-modified?" "not" "file?" "and" "when" "get-moniker" "moniker" "let")}
        {Lisp-Entry "colorize-entry" #f 566 11 566 25 ("get-definitions" "for-each" "get-implements" "get-extends" "colorize-entry" "class-of" "Class-Entry" "equal?" "Definition" "'Definition" "stylize" "get-limit" "<=" "when" "string-length" "+" "end" "Cell" "new" "start" "get-column" "column" "get-line" "line" "get-name" "name" "let*" "function" "proc" "letrec" "entry")}
        {Lisp-Entry "recolorize-entries" #f 585 18 585 36 ("colorize-entry" "for-each" "entries?:" "colorize-syntax" "uncolorize-all" "when" "get-parsed-entries" "entries" "let")}
        {Lisp-Entry "on-paste&stay" #f 598 18 598 31 ("paste&stay" "evt")}
        {Lisp-Entry "on-paste&next" #f 602 18 602 31 ("down-arrow-move" "paste&stay" "evt")}
        {Lisp-Entry "paste&stay" #f 607 11 607 21 ("set-caret" "paste-clipboard" "get-start" "pos" "let")}
        {Lisp-Entry "get-readtable" #f 618 29 618 42 ()}
        {Lisp-Entry "read-text-form" #f 622 11 622 25 ("read" "init:" "list" "call-with-input-string" "get-string" "either" "let" "get-readtable" "readtable" "readtable:" "string" "string:" "range")}
        {Lisp-Entry "read-text-forms" #f 628 11 628 26 ("eof-object?" "read-until" "port" "function" "init:" "list" "call-with-input-string" "get-string" "either" "let" "get-readtable" "readtable" "readtable:" "string" "string:" "range")}
        {Lisp-Entry "offset-pos/range" #f 635 11 635 27 ("get-col" "Cell" "+" "Range$Cell$" "new" "get-end" "get-start" "get-row" "0" "=" "if" "range" "pos")}
        {Lisp-Entry "on-evaluate" #f 648 11 648 22 ("evaluate-selection" "evt")}
        {Lisp-Entry "on-evaluate-buffer" #f 652 11 652 29 ("evaluate-buffer" "evt")}
        {Lisp-Entry "evaluate-selection" #f 656 29 656 47 ()}
        {Lisp-Entry "evaluate-buffer" #f 660 29 660 44 ()}
        {Lisp-Entry "evaluate-range" #f 664 29 664 43 ("range")}
        {Lisp-Entry "tabulate" #f 673 26 673 34 ("subseq" "insert-string" "position" "'position" "return:" "whitespace?" "not" "c" "function" "find-if" "rank" "1" "-" "paragraph-string" "line" "=" "0" ">" "and" "when" "get-col" "col" "get-row" "row" "get-start" "pos" "let*" "selected-lines" "tabulate-line" "untabulate-line" "shift-down?" "for-each" "has-selection?" "if")}
        {Lisp-Entry "tabulate-line" #f 688 29 688 42 ("string" "list" "0" "Cell" "Range$Cell$" "new" "replace-text" "row")}
        {Lisp-Entry "untabulate-line" #f 693 11 693 26 ("list" "1" "Range$Cell$" "replace-text" "0" "Cell" "new" "get-char" "space/tab?" "when" "row")}
        {Lisp-Entry "space/tab?" #f 699 11 699 21 ("memq?" "c")}
        {Lisp-Entry "tabulate-lines" #f 703 26 703 40 ("end" "start")}
        {Lisp-Entry "auto-complete?" #f 712 11 712 25 ()}
        {Lisp-Entry "completion-name" #f 716 11 716 26 ("either" "get-symbol-string" "string-append" "or" "0" "char-backward" "string" "keyword" "symbol" "get-kind" "memq?" "backward-expr" "and" "when" "end:" "start:" "self" "explorer-class" "new" "expl" "string-delimiter?" "c" "not" "previous-cell" "prev" "let" "get-end" "has-selection?" "if" "get-char" "syntax" "text-constituent?" "unless" "postfix" "pos")}
        {Lisp-Entry "symbol-completions" #f 732 11 732 29 ("cons" "set!" "->string" "compare-n" "when" "cdr" "favorite" "pair" "function" "for-each" "string-length" "length" "get-context" "context:" "get-completions" "completions" "not" "get-application" "get-cataloguer" "cataloguer" "let" "numeric?" "if" "favorites" "name")}
        {Lisp-Entry "show-arguments" #f 753 29 753 43 ()}
        {Lisp-Entry "cursor-update" #f 762 11 762 24 (":finger" "set-cursor" "show-text-cursor" "nextmethod" "alt-down?" "not" "if" "pos")}
        {Lisp-Entry "mouse-copy" #f 769 11 769 21 ("mouse-insert" "get-string" "copy" "let" "1" "get-start" "-" "set-start" "control-down?" "expr-range" "range" "view->text" "cell" "let*" "when" "destination" "pos")}
        {Lisp-Entry "expr-range" #f 781 29 781 39 ("pos")}
        {Lisp-Entry "left-arrow-move" #f 790 11 790 26 ("nextmethod" "convert-completion" "word?" "extend?")}
        {Lisp-Entry "right-arrow-move" #f 795 11 795 27 ("nextmethod" "convert-completion" "word?" "extend?")}
        {Lisp-Entry "up-arrow-move" #f 800 11 800 24 ("nextmethod" "convert-completion" "scroll?" "extend?")}
        {Lisp-Entry "down-arrow-move" #f 805 11 805 26 ("nextmethod" "convert-completion" "scroll?" "extend?")}
        {Lisp-Entry "on-tabify" #f 815 11 815 20 ("tabify" "evt")}
        {Lisp-Entry "tabify" #f 819 11 819 17 ("1" "get-end" "+" "get-start" "get-row" "naturals" "tabify-line" "for-each")}
        {Lisp-Entry "tabify-line" #f 824 11 824 22 ("make-string" "append!" "list" "Cell" "Range$Cell$" "new" "replace-text" "modulo" "spaces" "tab-size" "/" "floor" "tabs" "char->column" "column" "0" ">" "and" "when" "position" "'position" "return:" "whitespace?" "not" "c" "function" "find-if" "char" "paragraph-string" "line" "let*" "row")}
        {Lisp-Entry "flash-matching-character" #f 842 11 842 35 ("get-start" "flash-character" "backward-expr" "if" "start:" "self" "explorer-class" "new" "expl" "bell" "err" "Explore-Error" "catch" "get-char" "flash-character?" "get-end" "previous-cell" "pos" "let" "at-beginning?" "not" "empty-selection?" "and" "when")}
        {Lisp-Entry "flash-character" #f 854 11 854 26 ("3" "collect-forward-exprs" "get-range" "get-string" "mark" "function" "map" "user-message" "end:" "1" "nu+" "start:" "explorer-class" "expl" "visible?:" "20" "100" "Dimension" "size:" "position:" "Tooltip" "tool" "self" "get-desktop" "acquire" "tran" "text->view" "pos" "let*" ".2" "sleep" "update-view" "next-cell" "Range$Cell$" "new" "set-selection" "get-selection" "old" "let" "cell-displayed?" "if" "get-application" "macro-playing?" "unless" "end" "start")}
        {Lisp-Entry "on-browse-java" #f 878 11 878 25 ("browse-java" "evt")}
        {Lisp-Entry "browse-java" #f 882 11 882 22 ("list" "browse-classes" "get-guest" "manager" "Java-Manager" "new-frame" "host" "error" "not" "org.apache.bcel.Repository" "lookupClass" "javaClass" "->string" "classname" "let*" "bell" "Symbol" "is-not?" "if" "current-expr" "expr" "let")}
        {Lisp-Entry "on-set-read/write" #f 901 11 901 28 ("update-status" "set-read/write" "controller" "get-moniker" "moniker" "let" "evt")}}
      {Lisp-Entry "Definitions-Menu" #f 912 7 912 23 ("Context-Menu")
        {Lisp-Entry "definitions" #f 915 12 915 23 ("set-definitions" "get-definitions")}
        {Lisp-Entry "history-item" #f 916 12 916 24 ("set-history-item" "get-history-item")}
        {Lisp-Entry "get-definitions" #f 919 18 919 33 ("definitions")}
        {Lisp-Entry "set-definitions" #f 923 18 923 33 ("definitions" "set!" "list")}
        {Lisp-Entry "get-history-item" #f 927 18 927 34 ("history-item")}
        {Lisp-Entry "set-history-item" #f 931 18 931 34 ("history-item" "set!" "item")}
        {Lisp-Entry "finish" #f 935 11 935 17 ("key:" "make-condensed-menu" "get-string" "parent" "user-data" "create-item" "menu" "let*" "definition<?" "sort" "definition:" "list" "properties:" "on-action" "'on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "present" "title" "let" "definition" "function" "for-each" "20" "definitions" "length" "<" "if" "nextmethod" "rest")}
        {Lisp-Entry "definition<?" #f 949 11 949 23 ("present" "string<?" "y" "x")}
        {Lisp-Entry "on-action" #f 953 11 953 20 ("definition:" "get-property" "edit" "history-item" "get-application" "add-history" "evt")}}
      {Lisp-Entry "References-Menu" #f 963 7 963 22 ("Context-Menu")
        {Lisp-Entry "target" #f 966 12 966 18 ("set-target" "get-target")}
        {Lisp-Entry "definitions" #f 967 12 967 23 ("set-definitions" "get-definitions")}
        {Lisp-Entry "history-item" #f 968 12 968 24 ("set-history-item" "get-history-item")}
        {Lisp-Entry "get-target" #f 971 18 971 28 ("target")}
        {Lisp-Entry "set-target" #f 975 18 975 28 ("target" "set!" "trg")}
        {Lisp-Entry "get-definitions" #f 979 18 979 33 ("definitions")}
        {Lisp-Entry "set-definitions" #f 983 18 983 33 ("definitions" "set!" "list")}
        {Lisp-Entry "get-history-item" #f 987 18 987 34 ("history-item")}
        {Lisp-Entry "set-history-item" #f 991 18 991 34 ("history-item" "set!" "item")}
        {Lisp-Entry "finish" #f 995 11 995 17 ("key:" "make-condensed-menu" "get-string" "parent" "user-data" "create-item" "menu" "let*" "definition<?" "sort" "definition:" "list" "properties:" "on-action" "'on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "present" "->string" "title" "let" "definition" "function" "for-each" "20" "definitions" "length" "<" "if" "nextmethod" "rest")}
        {Lisp-Entry "definition<?" #f 1009 11 1009 23 ("present" "string<?" "y" "x")}
        {Lisp-Entry "on-action" #f 1013 11 1013 20 ("target" "definition:" "get-property" "edit-reference" "history-item" "get-application" "add-history" "evt")}}}})
"Color-Button"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Color-Button.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Color-Button" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Color-Button" #f 47 7 47 19 ("Push-Icon")
        {Lisp-Entry "color" #f 50 12 50 17 ("set-color" "get-color")}
        {Lisp-Entry "get-color" #f 58 18 58 27 ("color")}
        {Lisp-Entry "set-color" #f 62 18 62 27 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "action-properties" #f 72 11 72 28 ("color" "color:" "list")}
        {Lisp-Entry "draw-tool" #f 81 11 81 20 ("Dark" "name:" "Color" "get-enabled?" "fill-rect" "18" "14" "Rect" "new" "offset-rect" "rect" "1" "2" "pushed" "'pushed" "state" "eq?" "if" "offset" "let*" "color" "when" "nextmethod" "context" "surface")}}}})
"Color-Combo"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Color-Combo.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Color-Combo" #f 37 19 37 43 ("Color-View" "register-autoclass" "jazz")
      {Lisp-Entry "Color-Combo" #f 48 7 48 18 ("color" "Black" "border-color:" "solid" "border-type:" "color-border" "2" "Rect" "layout-insets:" "fill" "layout-type:" "White" "Color" "background:" "15" "Dimension" "size:" "color-contour" "name:" "Combo-Box")
        {Lisp-Entry "form-model" #f 58 11 58 21 ("nextmethod" "else" "Color-Text-View" "body" "get-name" "case" "form")}
        {Lisp-Entry "get-color" #f 69 18 69 27 ("color" "'color" "locate" "get-background")}
        {Lisp-Entry "set-color" #f 73 18 73 27 ("select-all" "present" "null?" "if" "set-string-content" "body" "'body" "locate" "text" "let" "set-color-value" "color")}
        {Lisp-Entry "set-color-value" #f 80 11 80 26 ("'color" "locate" "set-background" "color")}
        {Lisp-Entry "content-change" #f 89 11 89 25 ("get-content" "Color" "parse-string" "set-color-value" "origin")}
        {Lisp-Entry "button-action" #f 93 11 93 24 ("initiator:" "on-color-picked" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "colors:" "Color-Picker" "popup" "get-height" "12" "get-width" "-" "Point" "new" "pos" "let")}
        {Lisp-Entry "on-color-picked" #f 98 11 98 26 ("popup" "'popup" "content-change" "set-color" "close-popups" "color:" "get-property" "color" "let" "evt")}
        {Lisp-Entry "layout" #f 110 11 110 17 ("pick" "'pick" "15" "get-width" "-" "Dimension" "set-size" "get-right" "new" "scroller" "'scroller" "0" "Point" "set-position" "color-contour" "'color-contour" "locate" "countour" "get-height" "width" "get-size" "size" "let")}}
      {Lisp-Entry "Color-View" #f 126 7 126 17 ("View")
        {Lisp-Entry "draw" #f 129 11 129 15 ("get-height" "-1" "0" "1" "get-width" "-" "line" "Black" "name:" "Color" "set-color" "get-size" "size" "let" "background" "null?" "when" "nextmethod" "lv" "lh" "context" "surface")}}}})
"Color-Picker"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Color-Picker.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Color-Picker" #f 37 19 37 44 ("More-Tool" "register-autoclass" "jazz")
      {Lisp-Entry "Color-Picker" #f 49 7 49 19 ("title:" "more" "0" "fill" "south" "20" "100" "Dimension" "size:" "center" "location:" "colors" "name:" "4" "Rect" "layout-insets:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "colors" #f 52 12 52 18 ("set-colors" "get-colors")}
        {Lisp-Entry "geometry" #f 53 12 53 20 ("set-geometry" "get-geometry")}
        {Lisp-Entry "get-colors" #f 68 18 68 28 ("colors")}
        {Lisp-Entry "set-colors" #f 72 18 72 28 ("layout-view" "invalidate-tools" "colors" "set!" "value")}
        {Lisp-Entry "get-geometry" #f 78 18 78 30 ("geometry")}
        {Lisp-Entry "set-geometry" #f 82 18 82 30 ("layout-view" "geometry" "set!" "value")}
        {Lisp-Entry "set-action-handler" #f 92 11 92 29 ("more" "'more" "colors" "'colors" "locate" "get-children" "set-action-handler" "tool" "function" "for-each" "action-handler" "set!" "handler")}
        {Lisp-Entry "Default-Colors" #f 105 14 105 28 ("Dark-Gray" "Gray" "Light-Gray" "Dark-Purple" "Purple" "Light-Purple" "Dark-Blue" "Blue" "Light-Blue" "Dark-Green" "Green" "Light-Green" "Dark-Yellow" "Yellow" "Light-Yellow" "Dark-Orange" "Orange" "Light-Orange" "Dark-Red" "Red" "Light-Red" "Black" "White" "name:" "Color")}
        {Lisp-Entry "effective-colors" #f 140 11 140 27 ("Default-Colors" "colors" "either")}
        {Lisp-Entry "invalidate-tools" #f 149 11 149 27 ("effective-colors" "action-handler" "action-handler:" "color:" "18" "Dimension" "size:" "parent:" "Color-Tool" "new" "color" "get-children" "close" "tool" "function" "for-each" "colors" "'colors" "locate" "view" "let")}
        {Lisp-Entry "layout" #f 164 11 164 17 ("nextmethod" "30" "Dimension" "set-size" "0" "naturals" "18" "2" "Point" "new" "set-position" "element" "tool" "*" "+" "n" "v" "h" "function" "for-each" "get-col" "columns" "get-row" "rows" "8" "3" "Cell" "either" "geometry" "not-null?" "when" "get-children" "children" "colors" "'colors" "locate" "view" "let*")}}
      {Lisp-Entry "Color-Tool" #f 187 7 187 17 ("Push-Tool")
        {Lisp-Entry "client" #f 190 12 190 18 ()}
        {Lisp-Entry "color" #f 191 12 191 17 ("set-color" "get-color")}
        {Lisp-Entry "get-color" #f 194 18 194 27 ("color")}
        {Lisp-Entry "set-color" #f 198 18 198 27 ("color" "set!" "value")}
        {Lisp-Entry "get-tooltip?" #f 202 11 202 23 ()}
        {Lisp-Entry "get-tooltip-text" #f 206 11 206 27 ("get-name" "->string" "color" "null?" "if")}
        {Lisp-Entry "action-properties" #f 212 11 212 28 ("color" "color:" "list")}
        {Lisp-Entry "mouse-enter" #f 216 11 216 22 ("invalidate-view" "highlighted" "'highlighted" "set-state")}
        {Lisp-Entry "mouse-leave" #f 221 11 221 22 ("invalidate-view" "inactive" "'inactive" "set-state")}
        {Lisp-Entry "mouse-up" #f 226 11 226 19 ("self" "process-action" "pos")}
        {Lisp-Entry "up" #f 230 11 230 13 ()}
        {Lisp-Entry "draw-highlighted" #f 234 11 234 27 ("nextmethod" "draw-pushed" "mouse-down?" "if" "surface")}
        {Lisp-Entry "draw-tool" #f 240 11 240 20 ("get-bottom" "+" "2" "get-left" "1" "get-top" "-" "get-right" "line" "set-color" "fill-rect" "color" "if" "Dark" "name:" "Color" "frame-rect" "-1" "inside" "-3" "inflate-rect" "outside" "get-bounds" "rect" "let*" "nextmethod" "context" "surface")}}
      {Lisp-Entry "More-Tool" #f 257 7 257 16 ("Label-Tool")
        {Lisp-Entry "mouse-enter" #f 260 11 260 22 ("invalidate-view" "highlighted" "'highlighted" "set-state")}
        {Lisp-Entry "mouse-leave" #f 265 11 265 22 ("invalidate-view" "inactive" "'inactive" "set-state")}
        {Lisp-Entry "mouse-up" #f 270 11 270 19 ("Color-Request" "get-modal" "color:" "list" "self" "process-action" "close-popups" "pos")}
        {Lisp-Entry "up" #f 275 11 275 13 ()}
        {Lisp-Entry "draw-highlighted" #f 279 11 279 27 ("nextmethod" "draw-pushed" "mouse-down?" "if" "surface")}}}})
"Color-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Color-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Color-Request" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Color-Request" #f 48 7 48 20 ("Dialog")
        {Lisp-Entry "custom-colors" #f 52 19 52 32 ("16" "int" "new-array")}
        {Lisp-Entry "get-modal" #f 57 16 57 25 ("error" "throw-cancel" "0" "=" "CommDlgExtendedError" "code" "get" "colorref:" "ChooseColor" "if" "CC_FULLOPEN" "CC_RGBINIT" "CC_ANYCOLOR" "bitwise-ior" "Flags" "'Flags" "custom-colors" "lpCustColors" "'lpCustColors" "Black" "name:" "Color" "either" "get-ref" "rgbResult" "'rgbResult" "get-toplevel" "get-handle" "hwndOwner" "'hwndOwner" "size-of" "lStructSize" "'lStructSize" "set" "CHOOSECOLOR" "new" "r" "let" "close-all-popups" "initial-color" "initial-color:")}}}})
"Color-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Color-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Color-Text-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Color-Text-View" #f 45 7 45 22 ("Combo-Text-View")
        {Lisp-Entry "symbol-completions" #f 54 11 54 29 ("complete" "Symbol-Completer" "new" "completer" "Color.Constants" "domain" "let*" "favorites" "name")}}}})
"Column-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Column-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Column-Menu" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Column-Menu" #f 46 7 46 18 ("fill-to-column" "text" "Action" "action:" "title:" "mark-column" "name:" "Context-Menu")}}})
"Combo-Box"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Combo-Box.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Combo-Box" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Combo-Box" #f 68 7 68 16 ("Label" "Font" "font:" "Default" "Text-Style" "default-style:" "show-unfocused-selection?:" "accepts-returns?:" "selectable?:" "editable?:" "top-padding:" "1" "left-padding:" "body" "content" "scroller" "name:" "Combo-View")
        {Lisp-Entry "condensed?" #f 71 12 71 22 ("set-condensed?" "get-condensed?")}
        {Lisp-Entry "complete?" #f 72 12 72 21 ("set-complete?" "get-complete?")}
        {Lisp-Entry "editable?" #f 73 12 73 21 ("set-editable?" "get-editable?")}
        {Lisp-Entry "focusable?" #f 74 12 74 22 ("set-focusable?" "get-focusable?")}
        {Lisp-Entry "content" #f 75 12 75 19 ("set-content" "get-content")}
        {Lisp-Entry "choices" #f 76 12 76 19 ("set-choices" "get-choices")}
        {Lisp-Entry "nullable?" #f 77 12 77 21 ("set-nullable?" "get-nullable?")}
        {Lisp-Entry "choices-updater" #f 78 12 78 27 ("set-choices-updater" "get-choices-updater")}
        {Lisp-Entry "entry-test" #f 79 12 79 22 ("set-entry-test" "get-entry-test")}
        {Lisp-Entry "default-size" #f 89 11 89 23 ("15" "100" "Dimension")}
        {Lisp-Entry "button-action" #f 98 11 98 24 ("5" "alternate-position:" "1" "+" "-1" "Point" "new" "track-popup-menu" "4" "-" "width:" "layout-menu" "get-height" "height" "get-width" "width" "get-size" "size" "inactive" "'inactive" "highlighted" "'highlighted" "mouse-view" "picker-view?" "set-state" "bell" "begin" "not" "if" "get-pick" "pick" "new-choices-menu" "menu" "let" "update-choices" "get-body" "acquire-focus" "focusable?" "when")}
        {Lisp-Entry "on-action" #f 115 29 115 38 ("combo-choice" "popup" "'popup" "call-content-change" "set-modified?" "select-all" "set-entry" "get-body" "text" "get-user-data" "choice" "get-title" "entry" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "combo-choice" #f 127 29 127 41 ()}
        {Lisp-Entry "get-nullable?" #f 136 18 136 31 ("nullable?")}
        {Lisp-Entry "set-nullable?" #f 140 18 140 31 ("nullable?" "set!" "value")}
        {Lisp-Entry "get-condensed?" #f 144 18 144 32 ("condensed?")}
        {Lisp-Entry "set-condensed?" #f 148 18 148 32 ("condensed?" "set!" "value")}
        {Lisp-Entry "get-complete?" #f 152 18 152 31 ("complete?")}
        {Lisp-Entry "set-complete?" #f 156 18 156 31 ("set-editable?" "set-selectable?" "get-body" "text" "let" "when" "complete?" "set!" "value")}
        {Lisp-Entry "get-focusable?" #f 164 18 164 32 ("focusable?")}
        {Lisp-Entry "set-focusable?" #f 168 18 168 32 ("focusable?" "set!" "flag")}
        {Lisp-Entry "get-choices-updater" #f 172 18 172 37 ("choices-updater")}
        {Lisp-Entry "set-choices-updater" #f 176 18 176 37 ("get-pick" "set-enabled?" "pick" "'pick" "kind" "eq?" "and" "when" "choices-updater" "set!" "value")}
        {Lisp-Entry "get-entry-test" #f 182 18 182 32 ("entry-test")}
        {Lisp-Entry "set-entry-test" #f 186 18 186 32 ("entry-test" "set!" "value")}
        {Lisp-Entry "get-editable?" #f 195 11 195 24 ("editable?")}
        {Lisp-Entry "set-editable?" #f 199 11 199 24 ("set-visible?" "Medium" "White" "name:" "Color" "if" "set-background" "not" "set-selectable?" "set-editable?" "get-pick" "pick" "get-body" "text" "let" "editable?" "set!" "flag")}
        {Lisp-Entry "update-choices" #f 214 29 214 43 ("self" "choices" "null?" "choices-updater" "and" "if")}
        {Lisp-Entry "new-choices-menu" #f 220 29 220 45 ("new-choices-menu-plain" "new-choices-menu-condensed" "condensed?" "if" "choices" "when")}
        {Lisp-Entry "new-choices-menu-plain" #f 227 29 227 51 ("action-handler:" "user-data:" "string=?" "checked?:" "title:" "Check-Item" "present-choice" "title" "parent:" "Separator-Item" "not" "if" "choice" "function" "for-each" "on-action" "'on-action" "method-name:" "self" "target:" "Event-Handler" "action-handler" "either" "handler" "Context-Menu" "new" "menu" "get-entry" "current" "let" "choices" "when")}
        {Lisp-Entry "new-choices-menu-condensed" #f 241 11 241 37 ("key:" "make-condensed-menu" "present-choice" "get-string" "action-handler:" "cons" "user-data:" "equal?" "checked?:" "title:" "parent:" "Check-Item" "parent" "string" "value" "function" "create-leaf" "on-action" "'on-action" "method-name:" "self" "target:" "Event-Handler" "action-handler" "either" "handler" "Context-Menu" "new" "menu" "get-entry" "current" "let" "choices" "when")}
        {Lisp-Entry "highlight-pick?" #f 258 11 258 26 ()}
        {Lisp-Entry "set-enabled?" #f 267 11 267 23 ("invalidate-view" "get-pick" "Medium" "White" "name:" "Color" "if" "set-background" "get-body" "set-enabled?" "enabled?" "set!" "flag")}
        {Lisp-Entry "inner?" #f 280 11 280 17 ("children" "memq?" "view")}
        {Lisp-Entry "get-choices" #f 289 18 289 29 ("choices")}
        {Lisp-Entry "set-choices" #f 293 18 293 29 ("car" "set-value" "not-null?" "choices-updater" "or" "get-pick" "set-enabled?" "pick" "'pick" "kind" "eq?" "when" "choices" "set!" "get-choice" "old" "let" "value")}
        {Lisp-Entry "get-choice" #f 302 11 302 21 ("get-entry" "entry->choice")}
        {Lisp-Entry "present-choices" #f 311 18 311 33 ("choices" "present-choice" "map" "format")}
        {Lisp-Entry "present-choice" #f 316 21 316 35 ("first" "localize" "value->presented" "not" "if" "presented" "value" "bind" "when" "choice")}
        {Lisp-Entry "present-value" #f 329 18 329 31 ("present-choice" "value->presented" "not" "if" "value->choice" "choice" "let" "value")}
        {Lisp-Entry "value->choice" #f 336 11 336 24 ("choices" "assoc" "value")}
        {Lisp-Entry "value->presented" #f 340 26 340 42 ("localize" "->string" "value")}
        {Lisp-Entry "invalid->value" #f 344 26 344 40 ("format" "message:" "Parse-Error" "new" "signal" "presented")}
        {Lisp-Entry "entry->choice" #f 353 11 353 24 ("choices" "value->presented" "not" "if" "continuation-return" "localize" "localized" "string" "tryout" "presented" "value" "bind" "when" "choice" "for-each" "return" "function" "continuation-capture" "nu=?" "entry-test" "either" "test" "let" "entry")}
        {Lisp-Entry "edit" #f 377 18 377 22 ("focus-body")}
        {Lisp-Entry "focus-body" #f 381 11 381 21 ("select-all" "acquire-focus" "get-body" "text" "let")}
        {Lisp-Entry "get-entry" #f 392 26 392 35 ("get-content")}
        {Lisp-Entry "set-entry" #f 396 26 396 35 ("set-content" "content")}
        {Lisp-Entry "get-content" #f 400 18 400 29 ("get-body" "get-string-content")}
        {Lisp-Entry "set-content" #f 404 18 404 29 ("localize" "if" "get-body" "set-string-content" "content")}
        {Lisp-Entry "valid-value?" #f 408 18 408 30 ("get-choice" "boolean")}
        {Lisp-Entry "get-value" #f 412 18 412 27 ("car" "get-content" "invalid->value" "not" "if" "get-choice" "choice" "let")}
        {Lisp-Entry "set-value" #f 419 18 419 27 ("present-value" "set-entry" "value")}
        {Lisp-Entry "get-modified?" #f 423 18 423 31 ("get-body" "get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 427 18 427 31 ("get-body" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "validate-content" #f 436 11 436 27 ("get-value" "set-entry" "throw-cancel" "focus-body" "yes" "no:" "yes:" "type:" "get-message" "message-box" "case" "err" "Parse-Error" "catch" "format" "no" "message" "'message" "question" "'question" "if" "type" "present-choice" "unique-entry" "car" "essay" "unique" "choices" "length" "1" "=" "unique?" "let*")}
        {Lisp-Entry "layout" #f 457 11 457 17 ("get-width" "-" "Dimension" "new" "set-size" "0" "Point" "set-position" "get-height" "width" "get-pick" "pick" "'scroller" "locate" "scroller" "get-size" "size" "let")}}}})
"Combo-Button"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Combo-Button.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Combo-Button" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Combo-Button" #f 47 7 47 19 ("Push-Tool")
        {Lisp-Entry "get-combo" #f 56 18 56 27 ("parent")}
        {Lisp-Entry "get-enabled?" #f 65 11 65 23 ("parent" "get-enabled?" "enabled?" "and")}
        {Lisp-Entry "get-state" #f 69 11 69 20 ("self" "parent" "child-state")}
        {Lisp-Entry "mouse-enter" #f 73 11 73 22 ("self" "parent" "enter-child")}
        {Lisp-Entry "mouse-leave" #f 77 11 77 22 ("self" "parent" "leave-child")}
        {Lisp-Entry "mouse-down" #f 81 11 81 21 ("self" "parent" "child-down" "pos")}
        {Lisp-Entry "drag-up" #f 85 11 85 18 ("self" "parent" "child-up" "rest" "pos")}
        {Lisp-Entry "down" #f 94 11 94 15 ("self" "process-action" "pick" "'pick" "parent" "get-kind" "eq?" "get-enabled?" "when")}
        {Lisp-Entry "up" #f 100 11 100 13 ("self" "process-action" "choose" "'choose" "parent" "get-kind" "eq?" "when")}
        {Lisp-Entry "close-popups" #f 110 11 110 23 ("invalidate-view" "nextmethod" "double-click" "mouse-down" "memq?" "unless" "exclude" "exclude:" "all?" "all?:" "event" "event:")}
        {Lisp-Entry "light-color" #f 121 11 121 22 ("Light-Background" "name:" "Color")}
        {Lisp-Entry "dark-color" #f 125 11 125 21 ("Dark" "name:" "Color")}
        {Lisp-Entry "draw-inactive" #f 129 11 129 24 ("Medium" "Light" "name:" "Color" "get-enabled?" "if" "frame-rect" "get-bounds" "bounds" "let" "parent" "highlight-pick?" "when" "surface")}
        {Lisp-Entry "draw-tool" #f 135 11 135 20 ("draw-ellipsis" "choose" "draw-arrow" "pick" "parent" "get-kind" "case" "context" "surface")}
        {Lisp-Entry "draw-arrow" #f 141 11 141 21 ("down" "'down" "3" "draw-arrow-tip" "1" "get-height" "v" "2" "get-width" "quotient" "-" "+" "h" "get-offset" "offset" "get-size" "size" "let*" "Dark" "Black" "name:" "Color" "get-enabled?" "if" "set-color" "surface")}
        {Lisp-Entry "draw-ellipsis" #f 150 11 150 24 ("enabled?" "get-v" "get-h" "draw-text" "Black" "name:" "Color" "set-text-color" "center" "'center" "justify" "pos" "get-text-extent" "extent" "title" "get-offset" "offset" "get-size" "size" "let*" "surface")}
        {Lisp-Entry "get-offset" #f 160 11 160 21 ("0" "1" "choose" "pushed" "get-state" "memq?" "if")}}}})
"Combo-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Combo-Text-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Combo-Text-Actions" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Combo-Text-Actions" #f 46 7 46 25 ("Return" ":control" "Shortcut" "shortcut:" "on-push-button" ":focus" "Event-Handler" "action-handler:" "push-button" "name:" "Actions")}}})
"Combo-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Combo-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Combo-Text-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Combo-Text-View" #f 45 7 45 22 ("Text-View")
        {Lisp-Entry "get-combo" #f 53 11 53 20 ("parent" "get-parent")}
        {Lisp-Entry "focus-actions" #f 62 11 62 24 ("nextmethod" "combo-text" "'combo-text" "find-actions" "cons")}
        {Lisp-Entry "on-push-button" #f 67 11 67 25 ("push-button" "get-combo" "combo" "let" "evt")}
        {Lisp-Entry "return-press" #f 77 11 77 23 ("return" "'return" "get-combo" "content-change" "key")}
        {Lisp-Entry "mouse-enter" #f 86 11 86 22 ("get-pick" "enter-child" "get-combo" "combo" "let" "nextmethod" "selectable?" "if")}
        {Lisp-Entry "mouse-leave" #f 93 11 93 22 ("get-pick" "leave-child" "get-combo" "combo" "let" "nextmethod" "selectable?" "if")}
        {Lisp-Entry "mouse-down" #f 100 11 100 21 ("get-pick" "child-down" "get-combo" "combo" "let" "nextmethod" "selectable?" "if" "pos")}
        {Lisp-Entry "drag-up" #f 107 11 107 18 ("get-pick" "child-up" "get-combo" "combo" "let" "nextmethod" "selectable?" "if" "rest" "pos")}
        {Lisp-Entry "close-popups" #f 119 11 119 23 ("invalidate-view" "nextmethod" "double-click" "mouse-down" "memq?" "not" "choose" "'choose" "get-combo" "get-state" "neq?" "or" "when" "exclude" "exclude:" "all?" "all?:" "event" "event:")}
        {Lisp-Entry "auto-complete?" #f 130 11 130 25 ("get-combo" "get-complete?")}
        {Lisp-Entry "completion-name" #f 134 11 134 26 ("either" "0" "Cell" "Range$Cell$" "new" "get-string" "string-append" "get-row" "row" "not" "previous-cell" "prev" "let" "get-end" "has-selection?" "if" "get-char" "syntax" "text-constituent?" "unless" "postfix" "pos")}
        {Lisp-Entry "complete-name?" #f 143 11 143 25 ("1" ">=" "size")}
        {Lisp-Entry "symbol-completions" #f 147 11 147 29 ("di=?" "test:" "complete" "Symbol-Completer" "new" "completer" "present-choice" "choice" "function" "map" "domain" "get-choices" "choices" "get-combo" "combo" "let*" "favorites" "name")}
        {Lisp-Entry "completions-prefix" #f 155 11 155 29 ("di=?" "test:" "prefix" "completions")}}}})
"Combo-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Combo-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Combo-View" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Combo-View" #f 49 7 49 17 ("on-pick" ":form" "Event-Handler" "action-handler:" "Medium" "Color" "background:" "pick" "name:" "View")
        {Lisp-Entry "kind" #f 52 12 52 16 ("set-kind" "get-kind" "pick" "'pick")}
        {Lisp-Entry "state" #f 55 8 55 13 ("inactive" "'inactive")}
        {Lisp-Entry "get-body" #f 68 18 68 26 ("body" "'body" "locate")}
        {Lisp-Entry "get-pick" #f 72 18 72 26 ("pick" "'pick" "locate")}
        {Lisp-Entry "get-kind" #f 76 18 76 26 ("kind")}
        {Lisp-Entry "set-kind" #f 80 18 80 26 ("invalidate-view" "get-pick" "set-enabled?" "'choose" "eq?" "when" "set!" "error" "choose" "pick" "kind" "memq?" "not" "if" "value")}
        {Lisp-Entry "get-state" #f 89 18 89 27 ("state")}
        {Lisp-Entry "set-state" #f 93 18 93 27 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "picker-view?" #f 103 11 103 23 ("or" "eq?" "get-selectable?" "if" "get-pick" "pick" "get-body" "text" "let" "view")}
        {Lisp-Entry "on-pick" #f 117 18 117 25 ("button-action" "evt")}
        {Lisp-Entry "button-action" #f 121 29 121 42 ()}
        {Lisp-Entry "push-button" #f 125 18 125 29 ("inactive" "'inactive" "button-action" "pushed" "'pushed" "set-state" "begin" "unwind-protect")}
        {Lisp-Entry "child-state" #f 138 18 138 29 ("else" "pushed" "'pushed" "pick" "highlighted" "'highlighted" "body" "out-choose" "choose-failed" "choose" "state" "case" "get-name" "name" "let" "child")}
        {Lisp-Entry "highlight-pick?" #f 145 26 145 41 ()}
        {Lisp-Entry "popup-destroy" #f 154 11 154 24 ("invalidate-view" "inactive" "'inactive" "out-choose" "highlighted" "'highlighted" "set-state" "choose" "state" "case" "popup")}
        {Lisp-Entry "layout" #f 166 11 166 17 ("9" "22" "Dimension" "set-size" "0" "Point" "set-position" "get-pick" "pick" "get-body" "body" "let")}
        {Lisp-Entry "enter-child" #f 180 18 180 29 ("invalidate-view" "choose" "'choose" "out-choose" "pushed" "'pushed" "out-pushed" "highlighted" "'highlighted" "set-state" "inactive" "state" "case" "mouse-down-view" "picker-view?" "mouse-down?" "not" "or" "get-enabled?" "and" "when" "child")}
        {Lisp-Entry "leave-child" #f 189 18 189 29 ("invalidate-view" "out-choose" "'out-choose" "choose" "out-pushed" "'out-pushed" "pushed" "inactive" "'inactive" "set-state" "highlighted" "state" "case" "child")}
        {Lisp-Entry "child-down" #f 197 18 197 28 ("invalidate-view" "'highlighted" "close-popups" "inactive" "'inactive" "not" "popup" "let" "kind" "choose" "'choose" "highlighted" "state" "pick" "down" "pushed" "'pushed" "set-state" "body" "get-name" "case" "enabled?" "when" "child")}
        {Lisp-Entry "child-up" #f 221 18 221 26 ("invalidate-view" "out-pushed" "highlighted" "'highlighted" "choose-failed" "pushed" "state" "case" "inactive" "'inactive" "set-state" "choose" "'choose" "kind" "eq?" "if" "up" "unwind-protect" "enabled?" "when" "child")}}}})
"Completion-List-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Completion-List-Row.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Completion-List-Row" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Completion-List-Row" #f 47 7 47 26 ("List-Row")
        {Lisp-Entry "get-subrow-class" #f 50 11 50 27 ("Completion-Row")}
        {Lisp-Entry "auto-number?" #f 54 11 54 23 ()}
        {Lisp-Entry "get-list-value" #f 58 11 58 25 ("car" "key:" "value" "<" "sort")}
        {Lisp-Entry "add-value" #f 62 11 62 20 ("class:" "cdr" "car" "self" "add-row" "class" "value")}
        {Lisp-Entry "new-value" #f 66 11 66 20 ("cons" "request-title" "prefix" "let")}
        {Lisp-Entry "request-title" #f 71 11 71 24 ("initial-value:" "prefix:" "title:" "request-string" "current")}}
      {Lisp-Entry "Completion-Row" #f 80 7 80 21 ("String-Row")
        {Lisp-Entry "get-subvalue" #f 88 11 88 23 ("get-value" "get-title" "cons")}}}})
"Connector"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Connector.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Connector" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Connector" #f 48 7 48 16 ("Line-View")
        {Lisp-Entry "client" #f 51 12 51 18 ("set-client" "get-client")}
        {Lisp-Entry "start" #f 52 12 52 17 ("set-start" "get-start")}
        {Lisp-Entry "end" #f 53 12 53 15 ("set-end" "get-end")}
        {Lisp-Entry "start-view" #f 56 8 56 18 ()}
        {Lisp-Entry "end-view" #f 57 8 57 16 ()}
        {Lisp-Entry "initially-visible?" #f 60 11 60 29 ()}
        {Lisp-Entry "get-client" #f 69 18 69 28 ("client")}
        {Lisp-Entry "set-client" #f 73 18 73 28 ("client" "set!" "value")}
        {Lisp-Entry "get-start" #f 77 18 77 27 ("start")}
        {Lisp-Entry "set-start" #f 81 18 81 27 ("ending-removed" "start-view" "when" "start" "set!" "value")}
        {Lisp-Entry "get-end" #f 88 18 88 25 ("end")}
        {Lisp-Entry "set-end" #f 92 18 92 25 ("ending-removed" "end-view" "when" "end" "set!" "value")}
        {Lisp-Entry "default-client" #f 104 29 104 43 ("parent")}
        {Lisp-Entry "get-start-view" #f 113 18 113 32 ("setup-ending" "set!" "start" "essay" "start-view" "either")}
        {Lisp-Entry "get-end-view" #f 117 18 117 30 ("setup-ending" "set!" "end" "essay" "end-view" "either")}
        {Lisp-Entry "setup-ending" #f 121 11 121 23 ("ending-added" "find-ending" "view" "when" "default-client" "find-component" "if" "client" "let" "name")}
        {Lisp-Entry "find-ending" #f 130 29 130 40 ("find-component" "name" "client")}
        {Lisp-Entry "ending-added" #f 134 29 134 41 ("view")}
        {Lisp-Entry "ending-removed" #f 138 29 138 43 ("view")}
        {Lisp-Entry "update" #f 147 18 147 24 ("set-to" "set-from" "get-position" "p" "Rect" "new" "set-bounds" "bottom" "max" "right" "get-h" "left" "get-v" "min" "-" "top" "Tolerance" "2" "line-width" "/" "+" "fxceiling" "lw" "get-center" "let*" "and" "when" "get-end-view" "e" "get-start-view" "s" "let")}
        {Lisp-Entry "Unselected-Color" #f 170 14 170 30 ("Black" "name:" "Color")}
        {Lisp-Entry "unselected-color" #f 174 29 174 45 ("Unselected-Color")}
        {Lisp-Entry "line-color" #f 178 11 178 21 ("unselected-color" "get-editor" "selected-color" "if" "surrogate" "selection-rank" "rank" "let")}
        {Lisp-Entry "property-presentation" #f 190 16 190 37 ("nextmethod" "else" "end" "start" "field-name" "case" "property")}
        {Lisp-Entry "component-surrogate" #f 197 11 197 30 ("Connector-Surrogate")}
        {Lisp-Entry "get-row-instance" #f 201 11 201 27 ("nextmethod" "else" "nullable?:" "String-Row" "new" "end" "start" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 207 11 207 37 ("end" "start")}}}})
"Connector-Surrogate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Connector-Surrogate.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Connector-Surrogate" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Connector-Surrogate" #f 45 7 45 26 ("Line-Surrogate")
        {Lisp-Entry "move-client?" #f 48 11 48 23 ()}
        {Lisp-Entry "size-client?" #f 52 11 52 23 ()}
        {Lisp-Entry "select" #f 56 11 56 17 ("redraw-border" "focus?" "rank")}
        {Lisp-Entry "redraw-border" #f 60 11 60 24 ("client" "invalidate-view")}
        {Lisp-Entry "draw" #f 64 11 64 15 ("draw-showed-property" "surface")}
        {Lisp-Entry "draw-selected" #f 68 11 68 24 ("rank" "surface")}}}})
"Container"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Container.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Container" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Container" #f 46 7 46 16 ("content" "name:" "Layout-View")
        {Lisp-Entry "get-content" #f 59 18 59 29 ("content" "'content" "child")}
        {Lisp-Entry "inner?" #f 68 11 68 17 ("get-content" "eq?" "view")}
        {Lisp-Entry "content-inner?" #f 72 26 72 40 ("view")}}}})
"Content-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Content-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Content-View" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Content-View" #f 45 7 45 19 ("Layout-View")
        {Lisp-Entry "size-change" #f 53 11 53 22 ("content-size-change" "when" "get-client" "client" "let" "nextmethod" "size")}
        {Lisp-Entry "get-container" #f 65 18 65 31 ("parent")}
        {Lisp-Entry "get-client" #f 69 18 69 28 ("car" "children" "not-null?" "if")}
        {Lisp-Entry "inner?" #f 80 11 80 17 ("parent" "content-inner?" "nextmethod" "or" "view")}
        {Lisp-Entry "get-scroll-client" #f 90 11 90 28 ("get-scroll-client" "when" "get-client" "client" "let")}
        {Lisp-Entry "get-class-image" #f 101 16 101 31 ("Bitmap-Resource")}}}})
"Context-Action"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "context" "Context-Action.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.context.Context-Action" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Context-Action" #f 45 7 45 21 ("Component")
        {Lisp-Entry "image" #f 48 12 48 17 ("generate")}
        {Lisp-Entry "title" #f 49 12 49 17 ("generate")}
        {Lisp-Entry "handler" #f 50 12 50 19 ("generate")}
        {Lisp-Entry "construct-literal" #f 54 16 54 33 ("self" "new" "handler" "title" "image" "context")}
        {Lisp-Entry "initialize" #f 58 11 58 21 ("handler~self" "title~self" "image~self" "set!" "nextmethod" "handler" "title" "image")}
        {Lisp-Entry "foldable?" #f 66 11 66 20 ()}
        {Lisp-Entry "fold-object" #f 71 11 71 22 ("handler" "title" "image" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" #f 80 11 80 16 ("handler" "title" "image" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Context-Combo"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "context" "Context-Combo.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.context.Context-Combo" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Context-Combo" #f 48 7 48 20 ("Label" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "body" "name:" "Combo-Box")
        {Lisp-Entry "finish" #f 56 11 56 17 ("update" "nextmethod" "rest")}
        {Lisp-Entry "update" #f 66 11 66 17 ("set-value" "when" "->string" "list" "get-name" "name" "let" "branch" "function" "map" "set-choices" "get-process" "get-context" "active" "get-children" "Branch" "collect-type" "all" "get-preferences" "pref" "let*")}
        {Lisp-Entry "selection-change" #f 83 11 83 27 ("get-value" "get-process" "set-context")}
        {Lisp-Entry "combo-choice" #f 92 11 92 23 ("selection-change")}}}})
"Context-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "context" "Context-Manager.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.context.Context-Manager" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Context-Manager" #f 49 7 49 22 ("251" "blue:" "174" "green:" "123" "red:" "Color" "background:" "Layout-View")
        {Lisp-Entry "external-name" #f 56 16 56 29 ("context-manager" "'context-manager" "rest")}
        {Lisp-Entry "host-icon" #f 65 16 65 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 69 16 69 26 ()}
        {Lisp-Entry "client-activate" #f 73 11 73 26 ("current-document" "install-context")}
        {Lisp-Entry "client-deactivate" #f 77 11 77 28 ("install-context")}
        {Lisp-Entry "workspace-minimisable?" #f 81 11 81 33 ()}
        {Lisp-Entry "layout" #f 90 11 90 17 ("children" "+" "increase!" "20" "-" "Dimension" "set-size" "Point" "new" "set-position" "view-height" "get-height" "height" "get-width" "width" "view" "function" "for-each" "10" "top" "let")}
        {Lisp-Entry "install-context" #f 107 11 107 26 ("layout-view" "get-application" "install-text" "close-children" "guest")}
        {Lisp-Entry "install-text" #f 114 11 114 23 ("get-context-text" "12" "24" "get-height" "+" "get-width" "Dimension" "set-size" "set-text" "title:" "Bitmap-Resource" "icon:" "self" "parent:" "Context-View" "new" "view" "let" "text-view" "title" "bind" "info" "function" "for-each" "when" "provider")}}}})
"Context-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Context-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Context-Menu" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Context-Menu" #f 45 7 45 19 ("Menu")
        {Lisp-Entry "client" #f 48 12 48 18 ("generate")}
        {Lisp-Entry "component-alias" #f 51 11 51 26 ("nextmethod" "else" "client" ":client" "case" "name")}
        {Lisp-Entry "make-condensed-menu" #f 62 18 62 37 ("layout-menu" "condense-section" "parent:" "Separator-Item" "new" "set!" "if" "section" "function" "for-each" "first?" "collect-sections" "sections" "self" "top-menu" "let" "15" "max-leafs" "max-leafs:" "identity" "key" "key:" "create-leaf" "user-items")}
        {Lisp-Entry "condense-section" #f 75 11 75 27 ("layout-menu" "first" "sub-items" "Context-Menu" "submenu" "user-data:" "string-append" "title:" "parent:" "Label-Item" "new" "menu-item" "let*" "else" "car" ":leafs" "eq?" "null?" "cond" "rest" "string" "value" "bind" "item" "for-each" "menu" "items" "proc" "letrec" "max-leafs:" "second" "key:" "list" "user-item" "function" "map" "string<?" "sort" "create-tree" "values-tree" "self" "top-menu" "let" "max-leafs" "key" "create-leaf" "user-items")}
        {Lisp-Entry "create-tree" #f 102 11 102 22 ("0" "prefix" "sub-items" "let*" "else" "cdr" "first" "string=?" "2" "=" "cond" "group" "map" "equal?" "test:" "1" "+" "subseq" "string-length" "second" "title" "leaf" "key:" "partition" "groups" ":leafs" "list" "length" "<=" "if" "level" "items" "function" "proc" "letrec" "15" "max-leafs" "let" "rest" "leafs")}}}})
"Context-Provider"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "context" "Context-Provider.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.context.Context-Provider" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Context-Provider" #f 45 11 45 27 ()
        {Lisp-Entry "get-context-text" #f 48 35 48 51 ()}}}})
"Context-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "context" "Context-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.context.Context-Text-View" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Context-Text-View" #f 48 7 48 24 ("4" "top-padding:" "6" "left-padding:" "Label" "Font" "font:" "Default" "Text-Style" "default-style:" "Light" "name:" "Color" "background:" "editable?:" "Plain-Formatted-Text-View")
        {Lisp-Entry "new-hyperlink-style" #f 55 11 55 30 ("action:" "Hyperlink" "Color" "color:" "Hyperlink-Small" "name:" "Font" "font:" "Hyperlink-Style" "new" "action")}}}})
"Context-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "context" "Context-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.context.Context-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Context-View" #f 48 7 48 19 ("fill" "layout-type:" "content" "White" "name:" "Color" "background:" "Container")
        {Lisp-Entry "icon" #f 51 12 51 16 ("set-icon" "get-icon")}
        {Lisp-Entry "title" #f 52 12 52 17 ("set-title" "get-title")}
        {Lisp-Entry "get-icon" #f 65 18 65 26 ("icon")}
        {Lisp-Entry "set-icon" #f 69 18 69 26 ("icon" "set!" "value")}
        {Lisp-Entry "get-title" #f 73 18 73 27 ("title")}
        {Lisp-Entry "set-title" #f 77 18 77 27 ("title" "set!" "value")}
        {Lisp-Entry "get-text" #f 86 18 86 26 ("text" "'text" "get-content" "find-component")}
        {Lisp-Entry "set-text" #f 90 18 90 26 ("get-content" "set-parent" "close-text" "text")}
        {Lisp-Entry "close-text" #f 95 11 95 21 ("close" "when" "get-text" "text" "let")}
        {Lisp-Entry "size-change" #f 106 11 106 22 ("2" "Rect" "insets:" "invalidate-border" "invalidate-caption" "nextmethod" "size")}
        {Lisp-Entry "layout" #f 117 11 117 17 ("-" "Dimension" "new" "set-size" "24" "0" "Point" "set-position" "get-content" "content" "get-height" "height" "get-width" "width" "let")}
        {Lisp-Entry "caption-rect" #f 130 11 130 23 ("24" "get-width" "0" "Rect" "new")}
        {Lisp-Entry "invalidate-caption" #f 139 11 139 29 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "Active-Colors" #f 148 14 148 27 ("223" "blue:" "94" "green:" "6" "red:" "Color" "list")}
        {Lisp-Entry "Frame-Dark-Color" #f 152 14 152 30 ("blue:" "green:" "128" "red:" "Color")}
        {Lisp-Entry "Frame-Medium-Color" #f 155 14 155 32 ("blue:" "green:" "142" "red:" "Color")}
        {Lisp-Entry "Frame-Light-Color" #f 158 14 158 31 ("blue:" "green:" "160" "red:" "Color")}
        {Lisp-Entry "draw" #f 162 11 162 15 ("7" "6" "22" "if" "draw-text" "White" "Color" "set-text-color" "Label" "name:" "Font" "set-font" "title" "5" "4" "get-application" "get-icons-cache" "draw-image" "icon" "when" "second" "1" "Active-Colors" "first" "0" "list" "gradient-fill" "caption-rect" "caption" "get-bounds" "bounds" "let" "lv" "lh" "context" "surface")}
        {Lisp-Entry "mouse-down" #f 179 11 179 21 ("caption-rect" "in-rect?" "cond" "pos")}}}})
"Cursor-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Cursor-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Cursor-Event" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Cursor-Event" #f 44 7 44 19 ("Event")
        {Lisp-Entry "position" #f 47 8 47 16 ()}
        {Lisp-Entry "initialize" #f 50 11 50 21 ("position" "set!" "nextmethod" "pos" "sender" "kind")}
        {Lisp-Entry "get-position" #f 55 18 55 30 ("position")}}}})
"Date-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Date-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Date-Request" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Date-Request" #f 47 7 47 19 ("String-Request")}
      {Lisp-Entry "Date-Request" #f 53 7 53 19 ("title:" "prefix" "name:" "String-Request")
        {Lisp-Entry "form-model" #f 61 11 61 21 ("nextmethod" "else" "Date-Text-View" "text" "get-name" "case" "form")}}}})
"Date-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Date-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Date-Text-View" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Date-Text-View" #f 46 7 46 21 ("Text-View")}}})
"Default-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "workspace" "Default-Workspace.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.workspace.Default-Workspace" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Default-Workspace" #f 46 7 46 24 ("root" "location:" "fullscreen?:" "Workspace-Preferences")}}})
"Desktop"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Desktop.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.window.Desktop" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Desktop" #f 46 7 46 14 ("Window")}}})
"Dialog"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Dialog.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Dialog" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Dialog" #f 44 7 44 13 ("Overlapped")
        {Lisp-Entry "sizable?" #f 47 12 47 20 ("set-sizable?" "get-sizable?")}
        {Lisp-Entry "closable?" #f 48 12 48 21 ("set-closable?" "get-closable?")}
        {Lisp-Entry "new-root" #f 51 11 51 19 ("offscreen?:" "Dialog-Host" "new")}
        {Lisp-Entry "get-sizable?" #f 60 11 60 23 ("sizable?")}
        {Lisp-Entry "set-sizable?" #f 64 11 64 23 ("sizable?" "set!" "value")}
        {Lisp-Entry "get-closable?" #f 68 11 68 24 ("closable?")}
        {Lisp-Entry "set-closable?" #f 72 11 72 24 ("closable?" "set!" "value")}
        {Lisp-Entry "on-close" #f 81 11 81 19 ("root" "cancel-modal" "processed" "closable?" "not" "if" "evt")}
        {Lisp-Entry "destroy" #f 87 11 87 18 ("nextmethod" "root" "destroy-modal")}}}})
"Dialog-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Dialog-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Dialog-Actions" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Dialog-Actions" #f 45 7 45 21 ("Actions")}}})
"Dialog-Host"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Dialog-Host.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.hosting.Dialog-Host" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Dialog-Host" #f 48 7 48 18 ("Host-View")
        {Lisp-Entry "modal-done?" #f 51 8 51 19 ()}
        {Lisp-Entry "modal-closed?" #f 52 8 52 21 ()}
        {Lisp-Entry "modal-result" #f 53 8 53 20 ()}
        {Lisp-Entry "modal-signal" #f 54 8 54 20 ()}
        {Lisp-Entry "modal-action" #f 55 8 55 20 ()}
        {Lisp-Entry "processing-modal?" #f 63 18 63 35 ("modal-done?" "not")}
        {Lisp-Entry "destroy-modal" #f 72 11 72 24 ("modal-done?" "modal-result" "modal-closed?" "set!")}
        {Lisp-Entry "class-actions" #f 83 11 83 24 ("nextmethod" "dialog" "'dialog" "find-actions" "cons")}
        {Lisp-Entry "on-ok" #f 93 18 93 23 ("get-modal-result" "end-modal" "validate-dialog" "evt")}
        {Lisp-Entry "on-cancel" #f 98 18 98 27 ("cancel-modal" "evt")}
        {Lisp-Entry "validate-dialog" #f 107 11 107 26 ("validate-dialog" "guest" "when")}
        {Lisp-Entry "get-modal-result" #f 112 11 112 27 ("guest" "get-modal-result")}
        {Lisp-Entry "process-modal" #f 116 18 116 31 ("modal-action" "close" "enable-window" "modal-result" "else" "signal" "modal-signal" "throw-cancel" "modal-closed?" "cond" "process-events" "with-current-loop" "Cancel-Signal" "Modal-Done" "catch" "function" "execute-event" "show" "update-windowing-actions" "self" "set-current-modal" "modal-done?" "set!" "begin" "unwind-protect" "disable-window" "when" "player" "preserved" "get-player" "current-modal" "essay" "either" "overlapped" "get-toplevel" "toplevel" "get-application" "application" "let*" "prog1" "release-captured-view" "close-popups")}
        {Lisp-Entry "end-modal" #f 159 18 159 27 ("modal-done" "modal-result" "modal-closed?" "set!" "result")}
        {Lisp-Entry "signal-modal" #f 165 18 165 30 ("modal-done" "modal-signal" "set!" "signal")}
        {Lisp-Entry "cancel-modal" #f 170 18 170 30 ("Cancel-Signal" "new" "signal-modal")}
        {Lisp-Entry "close-modal" #f 174 18 174 29 ("modal-done" "modal-action" "modal-result" "modal-closed?" "set!" "action")}}
      {Lisp-Entry "Modal-Done" #f 181 7 181 17 ("Signal")}
      {Lisp-Entry "modal-done" #f 184 13 184 23 ("Modal-Done" "new" "throw")}}})
"Directories-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Directories-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Directories-Request" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Directories-Request" #f 50 7 50 26 ("on-cancel" "694" "cancel" "default?:" "on-ok" ":host" "315" "610" "ok" "8" "770" "300" "6" "on-remove-directory" "123" "remove-directory" "on-add-directory" "95" "692" "add-directory" "on-move-down" "61" "move-down" "on-move-up" "24" "80" "691" "move-up" "400" "width:" "display-images?:" "toplevel-controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-selection-change" "selection-handler:" "on-action" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "2" "top-padding:" "directory" "filled-column:" "directories-tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "254" "671" "33" "directories-border" "Label" "name:" "Font" "font:" "16" "191" "9" "10" "Point" "position:" "title:" "350" "782" "Dimension" "size:" "View")
        {Lisp-Entry "directories" #f 53 12 53 23 ("generate")}
        {Lisp-Entry "edited-directory" #f 56 8 56 24 ()}
        {Lisp-Entry "finish" #f 76 11 76 17 ("acquire-focus" "update-buttons" "setup-selection" "setup-directories" "get-tree" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-tree" #f 90 11 90 19 ("directories-tree" "'directories-tree" "locate")}
        {Lisp-Entry "host-title" #f 99 16 99 26 ()}
        {Lisp-Entry "host-position" #f 103 16 103 29 ("300" "450" "Point")}
        {Lisp-Entry "host-size" #f 107 16 107 25 ("120" "302" "Dimension")}
        {Lisp-Entry "on-action" #f 116 11 116 20 ("update-buttons" "evt")}
        {Lisp-Entry "on-selection-change" #f 120 11 120 30 ("update-buttons" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-add-directory" #f 126 11 126 27 ("update" "list" "append" "directories" "set!" "choose-directory" "directory" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "on-remove-directory" #f 133 11 133 30 ("set-single-selection" "get-visible-count" "<" "when" "update" "remove" "set!" "directories" "element" "directory" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-move-up" #f 143 11 143 21 ("set-single-selection" "acquire-focus" "setup-directories" "1" "-" "insert!" "remove!" "set!" "directories" "element" "directory" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-move-down" #f 154 11 154 23 ("set-single-selection" "acquire-focus" "setup-directories" "1" "+" "insert!" "remove!" "set!" "directories" "element" "directory" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-reset" #f 166 11 166 19 ("on-reset" "'on-reset" "unimplemented" "evt")}
        {Lisp-Entry "on-return-press" #f 171 11 171 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" #f 177 11 177 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update" #f 187 11 187 17 ("get-tree" "setup-directories")}
        {Lisp-Entry "setup-directories" #f 191 11 191 28 ("directories" "user-data:" "present" "title:" "Tree-Node" "new" "list" "children:" "add-row" "directory" "for-each" "remove-every-row" "function" "with-update-locked" "tree")}
        {Lisp-Entry "setup-selection" #f 200 11 200 26 ("0" "list" "set-selection" "directories" "when" "tree")}
        {Lisp-Entry "update-buttons" #f 210 11 210 25 ("defaults" "reset" "'reset" "1" "-" "<" "0" ">" "directories" "element" "directory" "let" "remove-directory" "'remove-directory" "add-directory" "'add-directory" "move-down" "'move-down" "move-up" "'move-up" "locate" "set-enabled?" "begin" "null?" "if" "get-visible-count" "count" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "edit-directory" #f 234 11 234 25 ("enter-directory" "selection")}
        {Lisp-Entry "enter-directory" #f 238 11 238 26 ()}
        {Lisp-Entry "get-modal-result" #f 247 11 247 27 ("get-output" "put" "get-user-data" "directory" "rank" "row" "function" "for-each-visible-row" "List-Factory" "new" "directories" "get-tree" "tree" "let" "enter-directory")}}}})
"Directories-Search"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Directories-Search.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Directories-Search" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Directories-Search" #f 51 7 51 25 ("extensions" "46" "48" "static-ext" "on-return-press" ":form" "Event-Handler" "return-press-handler:" "show-unfocused-selection?:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "directories" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "Entry-Border" "Color" "border-color:" "solid" "border-type:" "19" "248" "83" "16" "62" "Dimension" "size:" "18" "13" "Point" "position:" "static-dir" "title:" "domain" "name:" "Search-View")
        {Lisp-Entry "search-targets" #f 75 11 75 25 ("thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "search-threaded" "targets")}
        {Lisp-Entry "search-threaded" #f 85 24 85 39 ("close-manager" "unregister-activity" "get-activity-manager" "manager" "when" "select-results" "get-search-targets" "get-output" "add-results" "text" "'text" "set-mode" "get-results" "results" "let" "search-in-directories" "List-Factory" "factory" "get-expression?" "expression?" "not-null?" "if" "effective-extensions" "'extensions" "append!" "apply" "->string" "extensions" "'directories" "locate" "get-string-content" "read-delimited-string" "Directory" "list" "function" "map" "directories" "get-search-reporter" "User-Reporter" "new" "reporter" "get-application" "appl" "let*" "targets")}
        {Lisp-Entry "on-action" #f 112 11 112 20 ("on-search" "evt")}
        {Lisp-Entry "get-tab-stops" #f 116 11 116 24 ("targets" "'targets" "extensions" "'extensions" "directories" "'directories" "locate" "list")}
        {Lisp-Entry "setup-search-reporter" #f 128 11 128 32 ("set-step" "1" "set-pos" "500" "0" "Range" "set-range" "set-infinite?" "count" "reporter")}}}})
"Directories-Search-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Directories-Search-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Directories-Search-Preferences" #f 37 19 37 64 ("jazz")
      {Lisp-Entry "Directories-Search-Preferences" #f 46 7 46 37 ("title:" "Search-View-Preferences")}}})
"Directory-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Directory-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Directory-Request" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Directory-Request" #f 49 7 49 24 ("title:" "ok" "buttonbar" "name:" "Pathname-Request")
        {Lisp-Entry "host-title" #f 58 16 58 26 ()}
        {Lisp-Entry "update-content" #f 67 11 67 25 ("for-each" "remove-every-row" "function" "with-update-locked" "add-pathname" "pathname" "add" "define" "get-tree" "tree" "leaves?:" "nodes?:" "directory" "get-content" "directories" "let")}
        {Lisp-Entry "update-buttons" #f 79 11 79 25 ("directory?" "ok" "'ok" "locate" "set-enabled?" "selected-pathname" "pathname" "let" "nextmethod")}
        {Lisp-Entry "default-action" #f 90 11 90 25 ("down" "directory?" "cond" "selected-pathname" "pathname" "let")}}}})
"DnD"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dnd" "DnD.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dnd.DnD" #f 37 19 37 34 ("jazz")
      {Lisp-Entry "DnD" #f 45 7 45 10 ("Object")
        {Lisp-Entry "source" #f 48 8 48 14 ("generate")}
        {Lisp-Entry "target" #f 49 8 49 14 ("generate")}
        {Lisp-Entry "view" #f 50 8 50 12 ("generate")}
        {Lisp-Entry "initialize" #f 53 11 53 21 ("source~self" "set!" "nextmethod" "source" "source:")}
        {Lisp-Entry "print" #f 58 11 58 16 ("view" "target" "source" "format" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Docked-Host"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Docked-Host.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.hosting.Docked-Host" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Docked-Host" #f 51 7 51 18 ("flow" "layout-type:" "22" "0" "Dimension" "size:" "tools" "name:" "Host-View")
        {Lisp-Entry "fullscreen?" #f 54 12 54 23 ("generate")}
        {Lisp-Entry "caption?" #f 55 12 55 20 ("generate")}
        {Lisp-Entry "zoomable?" #f 56 12 56 21 ("generate")}
        {Lisp-Entry "size-change" #f 69 11 69 22 ("invalidate-border" "invalidate-top" "nextmethod" "size")}
        {Lisp-Entry "on-close" #f 79 11 79 19 ("selection" "'selection" "first-child" "Pad-View" "close" "get-location" "set-location" "layout-view" "zoom" "'zoom" "set-mode" "begin" "Workspace-Splitter" "if" "when" "first-view" "other" "let" "Splitter-View" "is?" "cond" "get-toplevel" "set-parent" "set-visible?" "function" "with-locked-update" "grand" "get-parent" "parent" "get-host" "host" "let*" "evt")}
        {Lisp-Entry "on-close" #f 105 11 105 19 ("hide-splitted" "evt")}
        {Lisp-Entry "hide-splitted" #f 109 18 109 31 ("selection" "'selection" "first-child" "Pad-View" "close" "get-location" "set-location" "layout-view" "zoom" "'zoom" "set-mode" "begin" "Workspace-Splitter" "if" "when" "first-view" "other" "let" "Splitter-View" "is?" "cond" "get-toplevel" "set-parent" "set-visible?" "function" "with-locked-update" "grand" "get-parent" "parent" "get-host" "host" "let*")}
        {Lisp-Entry "mouse-activate?" #f 140 11 140 26 ()}
        {Lisp-Entry "activate-focus" #f 144 11 144 25 ("invalidate-caption" "nextmethod")}
        {Lisp-Entry "deactivate-focus" #f 149 11 149 27 ("invalidate-caption" "nextmethod")}
        {Lisp-Entry "install-tools" #f 159 11 159 24 ("22" "tools-width" "Dimension" "new" "set-size" "set-visible?" "layout-view" "set-parent" "tail" "'tail" "set-location" "tool" "function" "for-each" "'tools" "locate" "dest" "get-children" "tools" "let" "when" "get-tools-view" "view" "get-guest" "guest" "get-host" "host" "let*")}
        {Lisp-Entry "add-tool" #f 177 18 177 26 ("22" "get-children" "tools-width" "Dimension" "new" "set-size" "layout-view" "set-parent" "'tools" "locate" "tools" "let" "tool")}
        {Lisp-Entry "remove-tool" #f 185 18 185 29 ("22" "get-children" "tools-width" "Dimension" "new" "set-size" "layout-view" "set-parent" "'tools" "locate" "tools" "let" "tool")}
        {Lisp-Entry "tools-width" #f 193 11 193 22 ("get-size" "get-width" "increase!" "get-visible?" "when" "tool" "function" "for-each" "0" "total" "let" "tools")}
        {Lisp-Entry "redirect-handler" #f 205 11 205 27 ("get-guest" "guest" "get-host" "host" "let*" ":form" "eq?" "get-target-name" "name" "let" "nextmethod" "Item" "is?" "if" "sender" "handler")}
        {Lisp-Entry "layout" #f 221 11 221 17 ("else" "26" "2" "-" "25" "1" "layout-tools" "caption?" "Dimension" "new" "set-size" "0" "Point" "set-position" "set-visible?" "fullscreen?" "cond" "'tools" "locate" "tools" "get-height" "height" "get-width" "width" "let" "guest" "when")}
        {Lisp-Entry "layout-tools" #f 241 11 241 23 ("2" "0" "get-width" "3" "-" "max" "Point" "new" "set-position" "get-size" "size" "'tools" "locate" "tools" "let*" "width")}
        {Lisp-Entry "caption-rect" #f 253 11 253 23 ("24" "2" "get-width" "-" "1" "Rect" "new")}
        {Lisp-Entry "top-rect" #f 257 11 257 19 ("25" "2" "get-width" "-" "1" "Rect" "new")}
        {Lisp-Entry "invalidate-top" #f 266 11 266 25 ("top-rect" "invalidate-rect")}
        {Lisp-Entry "invalidate-caption" #f 270 11 270 29 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "Active-Start-Color" #f 279 14 279 32 ("252" "blue:" "234" "green:" "225" "red:" "Color")}
        {Lisp-Entry "Active-End-Color" #f 282 14 282 30 ("243" "blue:" "186" "green:" "153" "red:" "Color")}
        {Lisp-Entry "Inactive-Start-Color" #f 285 14 285 34 ("235" "blue:" "244" "green:" "245" "red:" "Color")}
        {Lisp-Entry "Inactive-End-Color" #f 288 14 288 32 ("Medium" "name:" "Color")}
        {Lisp-Entry "Frame-Color" #f 291 14 291 25 ("blue:" "green:" "128" "red:" "Color")}
        {Lisp-Entry "draw" #f 295 11 295 15 ("get-width" "line" "increase!" "7" "21" "draw-text" "75" "100" "Black" "set-text-color" "Label" "Font" "set-font" "5" "3" "get-application" "get-icons-cache" "draw-image" "stroke" "cairo-line-to" "cairo-move-to" "not" "set-line-width" "184" "215" "220" "204" "blue:" "225" "green:" "230" "red:" "Dark" "name:" "Color" "set-color" "vertical" "'vertical" "direction:" "Inactive-End-Color" "Active-End-Color" "Inactive-Start-Color" "Active-Start-Color" "if" "0" "list" "Rect" "new" "gradient-fill" "and" "when" "bottom" "right" "24" "height" "37" "get-text-width" "+" "width" "top" ".5" "-" "left" "let*" "selected?" "first?" "get-guest" "class-of" "host-icon" "icon" "get-title" "title" "docked" "function" "for-each" "first" "1" "h" "Frame-Color" "frame-rect" "collect-all" "all" "get-focused-host" "self" "eq?" "focused?" "get-bounds" "bounds" "get-host" "host" "let" "lv" "lh" "context" "surface")}
        {Lisp-Entry "mouse-down" #f 344 11 344 21 ("focus-host" "focused-host?" "unless" "set-selection" "Pad-View" "is?" "get-host" "get-parent" "parent" "let" "in-rect?" "when" "rect" "docked" "function" "for-each-docked" "pos")}
        {Lisp-Entry "toggle-docked" #f 355 11 355 24 ("select-next" "function" "with-locked-update" "get-h" "<" "text-width" "28" "+" "h" "Label" "name:" "Font" "font" "get-title" "localize" "title" "Pad-View" "is?" "when" "get-parent" "parent" "get-host" "host" "let*" "pos")}
        {Lisp-Entry "double-click" #f 368 11 368 23 ("unzoom" "zoom" "split" "'split" "get-state" "eq?" "function" "with-locked-update" "Splitter-View" "splitter" "let" "get-application" "toggle-full-screen" "shift-down?" "Pad-View" "is?" "if" "target" "get-parent" "parent" "get-host" "host" "let*" "zoomable?" "when" "pos")}
        {Lisp-Entry "for-each-docked" #f 389 11 389 26 ("increase!" "Rect" "new" "23" "height" "37" "Label" "name:" "Font" "text-width" "width" "top" "1" "+" "if" "left" "eq?" "first?" "get-title" "title" "docked" "function" "for-each" "first" "0" "h" "collect-all" "all" "let" "proc")}
        {Lisp-Entry "collect-all" #f 405 11 405 22 ("list" "get-children" "Pad-View" "is?" "if" "get-host" "get-parent" "pad" "let")}
        {Lisp-Entry "collect-others" #f 412 11 412 25 ("get-children" "neq?" "hst" "function" "collect-if" "Pad-View" "is?" "when" "get-host" "get-parent" "pad" "let" "host")}
        {Lisp-Entry "select-menu" #f 425 11 425 22 ("25" "2" "Point" "track-popup-menu" "layout-menu" "host:" "list" "properties:" "on-select" "'on-select" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "icon:" "title:" "parent:" "Label-Item" "class-of" "host-icon" "icon" "get-title" "title" "get-guest" "guest" "docked" "function" "for-each" "Context-Menu" "new" "menu" "let" "when" "collect-others" "others" "get-host" "host" "let*")}
        {Lisp-Entry "on-select" #f 440 11 440 20 ("focus-host" "set-selection" "function" "with-locked-update" "host:" "get-property" "host" "get-host" "get-parent" "parent" "let" "evt")}}}})
"Docked-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Docked-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Docked-Preferences" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Docked-Preferences" #f 47 7 47 25 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "model-name" #f 50 12 50 22 ("generate")}
        {Lisp-Entry "caption?" #f 51 12 51 20 ("generate")}
        {Lisp-Entry "zoomable?" #f 52 12 52 21 ("generate")}
        {Lisp-Entry "walk-form" #f 65 16 65 25 ("push-reference" "in-manifest?" "and" "when" "'model-name" "get-property" "model-name" "let" "form" "analyser")}
        {Lisp-Entry "presentation-property?" #f 76 11 76 33 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 80 11 80 27 ("name" "format" "title" "either")}
        {Lisp-Entry "set-presentation" #f 84 11 84 27 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "apply-preferences" #f 93 11 93 28 ("set-visible?" "get-guest" "client-activate" "location" "set-location" "zoomable?" "set-zoomable?" "caption?" "set-caption?" "set-title" "title" "when" "set-parent" "name" "singleton-docked" "host" "model-name" "autoload" "class" "let*" "assert" "parent")}
        {Lisp-Entry "get-class-image" #f 112 16 112 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" #f 116 11 116 37 ("zoomable" "caption?" "model-name" "location")}}}})
"Document"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "document" "Document.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.document.Document" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Document" #f 45 11 45 19 ()
        {Lisp-Entry "get-controller" #f 48 35 48 49 ()}
        {Lisp-Entry "new-controller" #f 49 35 49 49 ()}
        {Lisp-Entry "load-content" #f 50 35 50 47 ("moniker")}
        {Lisp-Entry "save-content" #f 51 35 51 47 ("moniker")}
        {Lisp-Entry "verify-reload" #f 52 35 52 48 ()}
        {Lisp-Entry "reload-moniker" #f 53 35 53 49 ("moniker")}
        {Lisp-Entry "default-extension" #f 54 35 54 52 ()}
        {Lisp-Entry "extensions" #f 55 35 55 45 ()}
        {Lisp-Entry "focus-document" #f 56 35 56 49 ()}
        {Lisp-Entry "install-scroller?" #f 57 35 57 52 ()}
        {Lisp-Entry "tool-update" #f 58 35 58 46 ("tool?")}
        {Lisp-Entry "console-update" #f 59 35 59 49 ("console?")}
        {Lisp-Entry "current-history-item" #f 60 35 60 55 ()}
        {Lisp-Entry "compare-moniker" #f 61 35 61 50 ("moniker")}
        {Lisp-Entry "frame-guest?" #f 62 35 62 47 ()}}}})
"Document-Controller"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "document" "Document-Controller.jazz"} 1245732655
    {Lisp-Entry "jazz.ui.document.Document-Controller" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Document-Controller" #f 51 7 51 26 ("Object")
        {Lisp-Entry "document" #f 54 8 54 16 ()}
        {Lisp-Entry "newname" #f 55 8 55 15 ()}
        {Lisp-Entry "moniker" #f 56 8 56 15 ()}
        {Lisp-Entry "tool?" #f 57 8 57 13 ()}
        {Lisp-Entry "console?" #f 58 8 58 16 ()}
        {Lisp-Entry "modified?" #f 59 8 59 17 ()}
        {Lisp-Entry "read-only?" #f 60 8 60 18 ()}
        {Lisp-Entry "moniker-time" #f 61 8 61 20 ()}
        {Lisp-Entry "moniker-digest" #f 62 8 62 22 ()}
        {Lisp-Entry "initialize" #f 65 11 65 21 ("console?~self" "tool?~self" "document~self" "set!" "nextmethod" "console?" "console?:" "tool?" "tool?:" "document")}
        {Lisp-Entry "install-in-host" #f 77 18 77 33 ("document" "focus-document" "get-visible?" "when" "update-status" "position-host" "install-container" "host")}
        {Lisp-Entry "install-container" #f 85 29 85 46 ("install-scroller" "document" "install-scroller?" "when")}
        {Lisp-Entry "install-scroller" #f 90 21 90 37 ("set-content" "set-client" "get-content" "set-parent" "hscroll?:" "vscroll?:" "parent:" "Scroller-View" "new" "scroller" "document" "get-host" "host" "let*")}
        {Lisp-Entry "position-host" #f 98 11 98 24 ("set-size" "set-position" "10" "get-height" "Dimension" "size" "5" "get-width" "-" "Point" "new" "position" "documents" "'documents" "get-preferences" "get-default-width" "width" "get-parent" "get-size" "parent-size" "let*" "host")}
        {Lisp-Entry "confirm-close" #f 112 26 112 39 ("throw-cancel" "cancel" "no" "save-all" "yes" "case" "confirmation" "'confirmation" "type:" "name-status" "format" "message-box" "code" "let" "get-modified?" "when")}
        {Lisp-Entry "close-on-close-all?" #f 122 18 122 37 ("get-tool?" "not")}
        {Lisp-Entry "get-newname" #f 131 18 131 29 ("newname")}
        {Lisp-Entry "set-newname" #f 135 18 135 29 ("newname" "set!" "value")}
        {Lisp-Entry "effective-newname" #f 139 11 139 28 ("localize" "newname" "either")}
        {Lisp-Entry "get-moniker" #f 143 18 143 29 ("moniker")}
        {Lisp-Entry "set-moniker" #f 147 18 147 29 ("document" "load-content" "set!" "moniker" "/=" "when" "mnk")}
        {Lisp-Entry "change-moniker" #f 153 18 153 32 ("moniker" "set!" "1" "car" "Moniker" "is-not?" "when" "mnk")}
        {Lisp-Entry "save" #f 159 26 159 30 ("save-content" "write-allowed?" "when" "save-as" "moniker" "not" "if")}
        {Lisp-Entry "save-as" #f 166 26 166 33 ("save-to" "set-read/write" "read-only?" "exists?" "and" "when" "extensions:" "default-extension:" "get-name" "effective-newname" "not" "if" "initial-filename:" "choose-new-file" "moniker" "extensions" "document" "default-extension" "extension" "let*")}
        {Lisp-Entry "save-to" #f 175 18 175 25 ("update-status" "moniker" "set!" "save-content" "mnk")}
        {Lisp-Entry "save-all" #f 181 18 181 26 ("save")}
        {Lisp-Entry "save-content" #f 185 11 185 23 ("document" "save-content" "moniker")}
        {Lisp-Entry "revert-saved" #f 189 18 189 30 ("throw-cancel" "cancel" "no" "document" "reload-moniker" "yes" "case" "confirmation" "'confirmation" "type:" "message-box" "code" "let" "bell" "moniker" "not" "if")}
        {Lisp-Entry "compare-saved" #f 200 18 200 31 ("document" "compare-moniker" "bell" "moniker" "not" "if")}
        {Lisp-Entry "get-modified?" #f 211 26 211 39 ("modified?" "console?" "if")}
        {Lisp-Entry "set-modified?" #f 217 26 217 39 ("update-status" "set!" "modified?" "neq?" "when" "state")}
        {Lisp-Entry "dependent-document?" #f 228 26 228 45 ()}
        {Lisp-Entry "set-caption" #f 237 18 237 29 ("invalidate-caption" "get-toplevel" "set-caption" "front-view?" "get-maximized?" "Frame-Host" "is?" "and" "if" "get-visible?" "when" "set-title" "document" "get-host" "host" "let" "title")}
        {Lisp-Entry "update-status" #f 252 26 252 39 ("document-status" "set-caption" "get-guest" "eq?" "Host-View" "is?" "and" "when" "document" "get-host" "host" "let" "update-state")}
        {Lisp-Entry "document-status" #f 259 26 259 41 ("read/write-status" "directory-status" "modified-status" "name-status" "format")}
        {Lisp-Entry "name-status" #f 267 26 267 37 ("get-name" "get-base" "tool?" "effective-newname" "moniker" "not" "if")}
        {Lisp-Entry "modified-status" #f 275 11 275 26 ("get-modified?" "if")}
        {Lisp-Entry "directory-status" #f 281 11 281 27 ("present-location" "format" "get-parent" "parent" "let" "tool?" "moniker" "not" "or" "if")}
        {Lisp-Entry "read/write-status" #f 290 11 290 28 ("read-only?" "tool?" "moniker" "not" "or" "if")}
        {Lisp-Entry "get-read-only?" #f 303 18 303 32 ("read-only?")}
        {Lisp-Entry "get-moniker-time" #f 307 18 307 34 ("moniker-time")}
        {Lisp-Entry "update-state" #f 311 18 311 30 ("read-only?" "set!" "exists?" "moniker" "not" "or" "if")}
        {Lisp-Entry "update-moniker-time" #f 317 26 317 45 ("SHA-1" "'SHA-1" "parse" "digest-file" "moniker-digest" "get-modification-time" "moniker-time" "set!" "moniker")}
        {Lisp-Entry "verify-reload" #f 322 18 322 31 ("propose-reload" "needs-reload?" "when" "cancel-edition?" "cancel-edition?:" "propose-reload?" "propose-reload?:")}
        {Lisp-Entry "needs-reload?" #f 327 18 327 31 ("moniker-digest" "SHA-1" "'SHA-1" "parse" "digest-file" "equal?" "not" "get-modification-time" "time->seconds" "/=" "exists?" "moniker-time" "moniker" "and")}
        {Lisp-Entry "propose-reload" #f 334 18 334 32 ("update-status" "update-moniker-time" "no" "throw-cancel" "when" "moniker" "document" "reload-moniker" "case" "question" "'question" "type:" "title:" "get-moniker" "format" "message-box" "yes" "'yes" "not" "if" "code" "let" "cancel-edition?" "cancel-edition?:" "propose-reload?" "propose-reload?:")}
        {Lisp-Entry "write-allowed?" #f 355 18 355 32 ("get-read-only?" "not")}
        {Lisp-Entry "in-write-allowed?" #f 359 11 359 28 ("no-action" "read-only" "update-status" "read/write" "case" "ensure-read/write" "code" "let" "moniker")}
        {Lisp-Entry "out-write-allowed?" #f 367 11 367 29 ("throw-cancel" "cancel" "no" "update-status" "set-read/write" "yes" "case" "confirmation" "'confirmation" "type:" "title:" "get-name" "format" "message-box" "code" "let" "moniker")}
        {Lisp-Entry "get-tool?" #f 387 18 387 27 ("tool?")}
        {Lisp-Entry "set-tool?" #f 391 18 391 27 ("document" "tool-update" "set!" "tool?" "neq?" "when" "flag")}
        {Lisp-Entry "get-console?" #f 397 18 397 30 ("console?")}
        {Lisp-Entry "set-console?" #f 401 18 401 30 ("document" "console-update" "set!" "console?" "neq?" "when" "flag")}
        {Lisp-Entry "select-next" #f 412 26 412 37 ("rest" "strings")}
        {Lisp-Entry "select-previous" #f 416 26 416 41 ("rest" "strings")}
        {Lisp-Entry "select-expr" #f 420 26 420 37 ("targets")}
        {Lisp-Entry "select-expr-backward" #f 424 26 424 46 ("targets")}}}})
"Document-Moniker"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "document" "Document-Moniker.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.document.Document-Moniker" #f 37 19 37 52 ("File" "new" "parameters" "class" "jazz")
      {Lisp-Entry "Document-Moniker-Class" #f 48 7 48 29 ()
        {Lisp-Entry "get-protocol" #f 51 11 51 23 ("doc" "'doc")}}
      {Lisp-Entry "Document-Moniker" #f 55 7 55 23 ("Moniker" "Document-Moniker-Class")
        {Lisp-Entry "pathname" #f 58 8 58 16 ()}
        {Lisp-Entry "construct-literal" #f 62 16 62 33 ("self" "new" "pathname" "context")}
        {Lisp-Entry "print" #f 66 11 66 16 ("pathname" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "present" #f 77 11 77 18 ("pathname" "get-list" "format")}
        {Lisp-Entry "initialize" #f 86 11 86 21 ("pathname" "set!" "nextmethod" "path")}
        {Lisp-Entry "get-name" #f 96 18 96 26 ("pathname" "get-name")}
        {Lisp-Entry "get-document" #f 100 18 100 30 ("get-guest" "error" "null?" "if" "pathname" "find-document" "frame" "get-application" "appl" "let*")}
        {Lisp-Entry "load-lines" #f 108 11 108 21 ("get-document" "get-content" "rest")}
        {Lisp-Entry "load-form" #f 112 11 112 20 ("get-document" "get-designer" "get-form")}}
      {Lisp-Entry "moniker-new" #f 116 11 116 22 ()}}})
"Document-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "document" "Document-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.document.Document-Preferences" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Document-Preferences" #f 46 7 46 27 ("Bitmap-Resource" "icon:" "title:" "Preferences")
        {Lisp-Entry "can-rename-component?" #f 58 11 58 32 ()}
        {Lisp-Entry "can-delete-component?" #f 62 11 62 32 ()}
        {Lisp-Entry "can-move-component?" #f 66 11 66 30 ()}
        {Lisp-Entry "can-copy-component?" #f 70 11 70 30 ()}}}})
"Documents-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "document" "Documents-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.document.Documents-Preferences" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Documents-Preferences" #f 49 7 49 28 ("title:" "Preferences")
        {Lisp-Entry "default-width" #f 52 12 52 25 ("generate" "800")}
        {Lisp-Entry "default-background" #f 53 12 53 30 ("generate" "White" "name:" "Color")}
        {Lisp-Entry "can-rename-component?" #f 65 11 65 32 ()}
        {Lisp-Entry "can-delete-component?" #f 69 11 69 32 ()}
        {Lisp-Entry "can-move-component?" #f 73 11 73 30 ()}
        {Lisp-Entry "can-copy-component?" #f 77 11 77 30 ()}
        {Lisp-Entry "get-categorized-properties" #f 81 11 81 37 ("default-background" "default-width")}
        {Lisp-Entry "get-row-instance" #f 85 11 85 27 ("nextmethod" "else" "Color-Row" "new" "default-background" "field-name" "case" "property")}}}})
"Drag-Source"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dnd" "Drag-Source.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dnd.Drag-Source" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Drag-Source" #f 45 7 45 18 ("Object")
        {Lisp-Entry "view" #f 48 8 48 12 ()}
        {Lisp-Entry "position" #f 49 8 49 16 ()}
        {Lisp-Entry "image" #f 50 8 50 13 ()}
        {Lisp-Entry "initialize" #f 53 11 53 21 ("image~self" "position~self" "view~self" "set!" "nextmethod" "image" "image:" "position" "position:" "view" "view:")}
        {Lisp-Entry "print" #f 60 11 60 16 ("image" "position" "view" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-view" #f 71 18 71 26 ("view")}
        {Lisp-Entry "get-position" #f 75 18 75 30 ("position")}
        {Lisp-Entry "get-image" #f 79 18 79 27 ("image")}}}})
"Draw-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Draw-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Draw-Event" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Draw-Event" #f 44 7 44 17 ("Event")
        {Lisp-Entry "surface" #f 47 8 47 15 ()}
        {Lisp-Entry "update" #f 48 8 48 14 ()}
        {Lisp-Entry "lh" #f 49 8 49 10 ()}
        {Lisp-Entry "lv" #f 50 8 50 10 ()}
        {Lisp-Entry "info" #f 51 8 51 12 ()}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("info~self" "lv~self" "lh~self" "update~self" "surface~self" "set!" "nextmethod" "info" "lv" "lh" "update" "surface" "sender" "kind")}
        {Lisp-Entry "get-dc" #f 63 18 63 24 ("surface")}}}})
"Drawing"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Drawing.jazz"} 1245777538
    {Lisp-Entry "jazz.ui.view.Drawing" #f 38 19 38 39 ("jazz")
      {Lisp-Entry "Drawing" #f 51 7 51 14 ("Figure")
        {Lisp-Entry "get-player" #f 59 26 59 36 ("get-player" "parent" "essay")}
        {Lisp-Entry "get-lie" #f 68 18 68 25 ("fxround" "Point" "new" "1.0" "0.0" "get-lie-parent" "sc" "v" "h" "receive")}
        {Lisp-Entry "get-lie-parent" #f 73 29 73 43 ("get-v" "position" "get-h" "+" "get-lie-parent" "values" "parent" "not" "if" "sc" "v" "h")}
        {Lisp-Entry "set-lie" #f 79 18 79 25 ("set-position" "position" "+" "pos" "-" "delta" "get-lie" "actual" "let*" "lie")}
        {Lisp-Entry "get-root" #f 92 26 92 34 ("get-root" "when" "get-player" "player" "let")}
        {Lisp-Entry "acquire" #f 103 18 103 25 ("acquire-delta" "get-delta" "sc" "dv" "dh" "receive" "shape" "origin")}
        {Lisp-Entry "acquire-delta" #f 108 18 108 31 ("error" "else" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "left" "Rect" "*" "+" "fxround" "new" "get-v" "v" "get-h" "h" "let" "Point" "typecase" "shape" "sc" "dv" "dh")}
        {Lisp-Entry "get-delta" #f 128 29 128 38 ("-" "/" "values" "sc" "dv" "dh" "1.0" "0.0" "get-lie-parent" "origin-sc" "origin-v" "origin-h" "receive" "origin")}
        {Lisp-Entry "get-size" #f 139 11 139 19 ("size")}
        {Lisp-Entry "set-size" #f 143 11 143 19 ("call-layout" "get-finished?" "invalidate-layout" "set!" "size" "/=" "when" "sz")}
        {Lisp-Entry "set-size-noevent" #f 151 26 151 42 ("size" "set!" "sz")}
        {Lisp-Entry "get-width" #f 155 18 155 27 ("size" "get-width")}
        {Lisp-Entry "set-width" #f 159 18 159 27 ("get-height" "Dimension" "new" "set-size" "width")}
        {Lisp-Entry "get-height" #f 163 18 163 28 ("size" "get-height")}
        {Lisp-Entry "set-height" #f 167 18 167 28 ("get-width" "Dimension" "new" "set-size" "height")}
        {Lisp-Entry "set-height-noevent" #f 171 18 171 36 ("get-width" "Dimension" "new" "set-size-noevent" "height")}
        {Lisp-Entry "get-left" #f 175 18 175 26 ("position" "get-h")}
        {Lisp-Entry "get-top" #f 179 18 179 25 ("position" "get-v")}
        {Lisp-Entry "get-right" #f 183 18 183 27 ("size" "get-width" "position" "get-h" "+")}
        {Lisp-Entry "get-bottom" #f 187 18 187 28 ("size" "get-height" "position" "get-v" "+")}
        {Lisp-Entry "get-bounds" #f 191 18 191 28 ("get-size" "size-rect")}
        {Lisp-Entry "set-bounds" #f 195 18 195 28 ("rect-size" "set-size" "rect-position" "set-position" "bounds")}
        {Lisp-Entry "grow-bounds" #f 200 18 200 29 ("set-position" "set-size" "Dimension" "get-size" "size" "Point" "new" "get-position" "+" "pos" "let" "dheight" "dwidth" "dv" "dh")}
        {Lisp-Entry "get-rect" #f 207 18 207 26 ("get-size" "get-position" "position/size->rect")}
        {Lisp-Entry "set-rect" #f 211 18 211 26 ("rect-size" "set-size" "rect-position" "set-position" "rect")}
        {Lisp-Entry "get-layout-valid?" #f 221 11 221 28 ("Layout-Valid-Flag" "flags" "mask-bit-set?")}
        {Lisp-Entry "set-layout-valid?" #f 225 11 225 28 ("Layout-Valid-Flag" "mask-bit-set" "flags" "set!" "flag")}
        {Lisp-Entry "get-scaled?" #f 234 26 234 37 ()}
        {Lisp-Entry "set-scaled?" #f 238 26 238 37 ("value")}
        {Lisp-Entry "get-scaling" #f 242 26 242 37 ("1.0")}
        {Lisp-Entry "set-scaling" #f 246 26 246 37 ("value")}
        {Lisp-Entry "logical->device" #f 250 18 250 33 ("error" "else" "case" "Number" "get-bottom" "get-right" "get-top" "get-left" "Rect" "get-height" "get-width" "Dimension" "get-v" "get-h" "new" "Point" "typecase" "lv" "vert" "-" "*" "+" "fxround" "lh" "function" "horz" "sc" "sv" "sh" "receive" "not" "if" "scaling-info" "either" "let" "info" "info:" "orientation" "orientation:" "shape")}
        {Lisp-Entry "device->logical" #f 268 18 268 33 ("error" "else" "case" "Number" "get-bottom" "get-right" "get-top" "get-left" "Rect" "get-height" "get-width" "Dimension" "get-v" "get-h" "new" "Point" "typecase" "dv" "vert" "-" "quotient" "+" "dh" "function" "horz" "sc" "sv" "sh" "receive" "not" "if" "scaling-info" "either" "let" "info" "info:" "orientation" "orientation:" "shape")}
        {Lisp-Entry "scaling-info" #f 288 11 288 23 ("get-parent" "set!" "get-v" "get-h" "decrease!" "get-position" "pos" "values" "continuation-return" "if" "get-scaling" "sc" "get-scaled?" "sc?" "while" "return" "function" "continuation-capture" "sv" "0" "sh" "self" "drawing" "let")}
        {Lisp-Entry "view-visible?" #f 311 18 311 31 ("view-visible?" "parent" "not" "or" "get-visible?" "and")}
        {Lisp-Entry "get-transparent?" #f 320 26 320 42 ()}
        {Lisp-Entry "invalidate-layout" #f 329 21 329 38 ("set-layout-valid?")}
        {Lisp-Entry "call-layout" #f 333 21 333 32 ("set-layout-valid?" "layout" "get-layout-valid?" "unless")}
        {Lisp-Entry "layout-drawing" #f 339 18 339 32 ("call-layout" "invalidate-layout" "get-finished?" "when")}
        {Lisp-Entry "layout" #f 347 26 347 32 ()}
        {Lisp-Entry "for-each-drawing" #f 356 18 356 34 ("get-visible?" "or" "View" "is?" "and" "when" "children" "in" "child" "for" "loop" "include-invisibles?" "include-invisibles?:" "proc")}
        {Lisp-Entry "for-each-drawing-reversed" #f 363 18 363 43 ("children" "get-visible?" "or" "View" "is?" "and" "when" "child" "function" "for-each-reversed" "include-invisibles?" "include-invisibles?:" "proc")}
        {Lisp-Entry "find-drawing" #f 376 18 376 30 ("self" "get-transparent?" "unless" "find-subdrawing" "either" "size" "in-drawing?" "when" "ignore" "ignore:" "pos")}
        {Lisp-Entry "in-drawing?" #f 383 29 383 40 ("in-size?" "size" "pos")}
        {Lisp-Entry "find-subdrawing" #f 387 29 387 44 ("continuation-return" "memq?" "or" "and" "when" "get-v" "get-h" "/" "fxround" "Point" "new" "scaled" "get-scaling" "scaling" "find-drawing" "not" "if" "found" "get-scaled?" "scaled?" "let*" "get-position" "-" "delta" "let" "view" "for-each-drawing-reversed" "return" "function" "continuation-capture" "ignore" "pos")}
        {Lisp-Entry "invalidate-drawing" #f 411 18 411 36 ("parent" "invalidate-rect" "get-rect" "rect" "let")}
        {Lisp-Entry "paint" #f 421 18 421 23 ("set-effect" "animate" "Point" "new" "lie" "get-effect" "effect" "size" "size:" "blit-surface" "get-clipper" "setup-clipper" "get-offscreen" "offscreen" "let" "paint-drawing" "get-offscreen?" "not" "if" "get-visible?" "when" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "scaled-lie" #f 437 11 437 21 ("round" "inexact->exact" "Point" "new" "dy" "*" "+" "dx" "dv" "-" "dh" "let*" "sc" "sv" "sh" "lv" "lh")}
        {Lisp-Entry "paint-drawing" #f 445 18 445 31 ("render" "get-clipper" "rects-intersect?" "Point" "new" "scaled-lie" "lie" "let" "when" "function" "get-height" "size" "get-width" "with-transform" "new-sc?" "new-sc" "new-sv" "not" "if" "new-sh" "get-scaling" "scaling" "get-scaled?" "scaled?" "let*" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "render" #f 461 26 461 32 ("draw-children" "draw-content" "draw-background" "cycle-debug-color!" "get-bounds" "fill-rect" "*debug-paint*" "if" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-background" #f 469 26 469 41 ("context" "surface")}
        {Lisp-Entry "draw-content" #f 473 26 473 38 ("draw" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw" #f 477 26 477 30 ("lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-children" #f 481 26 481 39 ("children" "get-v" "get-h" "+" "paint" "get-position" "pos" "let" "get-visible?" "View" "is?" "and" "when" "drawing" "function" "for-each" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "get-offscreen" #f 495 29 495 42 ()}
        {Lisp-Entry "get-clipper" #f 504 18 504 29 ("0" "get-translated-clipper")}
        {Lisp-Entry "get-translated-clipper" #f 508 29 508 51 ("rect-intersection" "get-v" "position" "get-h" "-" "get-translated-clipper" "p" "let" "parent" "not" "if" "fxround" "offset-rect" "r" "get-bounds" "b" "let*" "v" "h")}
        {Lisp-Entry "get-offscreen?" #f 517 26 517 40 ()}
        {Lisp-Entry "set-offscreen?" #f 521 26 521 40 ("flag")}
        {Lisp-Entry "get-layer" #f 530 26 530 35 ()}
        {Lisp-Entry "set-layer" #f 534 26 534 35 ("value")}
        {Lisp-Entry "get-effect" #f 543 26 543 36 ()}
        {Lisp-Entry "set-effect" #f 547 26 547 36 ("value")}}}})
"Drop-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dnd" "Drop-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dnd.Drop-Event" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Drop-Event" #f 45 7 45 17 ("Mouse-Event")
        {Lisp-Entry "drag-drop" #f 48 8 48 17 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("drag-drop~self" "set!" "nextmethod" "drag-drop" "pos" "sender" "kind")}
        {Lisp-Entry "print" #f 56 11 56 16 ("function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-drag-drop" #f 67 18 67 31 ("drag-drop")}}}})
"Drop-Target"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dnd" "Drop-Target.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dnd.Drop-Target" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Drop-Target" #f 45 7 45 18 ("Object")
        {Lisp-Entry "view" #f 48 8 48 12 ()}
        {Lisp-Entry "position" #f 49 8 49 16 ()}
        {Lisp-Entry "criteria" #f 50 8 50 16 ()}
        {Lisp-Entry "handler" #f 51 8 51 15 ()}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("handler~self" "criteria~self" "position~self" "view~self" "set!" "nextmethod" "handler" "handler:" "criteria" "criteria:" "position" "position:" "view" "view:")}
        {Lisp-Entry "print" #f 62 11 62 16 ("view" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-view" #f 73 18 73 26 ("view")}
        {Lisp-Entry "get-position" #f 77 18 77 30 ("position")}
        {Lisp-Entry "get-criteria" #f 81 18 81 30 ("criteria")}
        {Lisp-Entry "get-handler" #f 85 18 85 29 ("handler")}}}})
"Edit-Base-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Edit-Base-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Edit-Base-Menu" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Edit-Base-Menu" #f 46 7 46 21 ("select-all" "delete" "end-paste" "paste" "copy" "cut" "redo" "view" "Action" "action:" "Bitmap-Resource" "icon:" "undo" "name:" "french:" "english:" "Locales" "title:" "Menu")}}})
"Edit-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Edit-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Edit-Menu" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Edit-Menu" #f 46 7 46 16 ("forward-history" "backward-history" "Bitmap-Resource" "icon:" "add-history" "view" "paste-properties" "pop-clipboard-stack" "application" "Action" "action:" "end-paste" "before:" "title:" "paste-from-stack" "name:" "Edit-Base-Menu")}}})
"Edition-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Edition-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Edition-Event" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Edition-Event" #f 44 7 44 20 ("Event")}}})
"Effect"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "effect" "Effect.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.effect.Effect" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Effect" #f 45 7 45 13 ("Object")
        {Lisp-Entry "animate" #f 48 26 48 33 ("size" "pos" "dst" "src")}}}})
"Entities-Controller"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "entity" "Entities-Controller.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.entity.Entities-Controller" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Entities-Controller" #f 57 7 57 26 ("Object")
        {Lisp-Entry "add-child" #f 65 35 65 44 ("parent" "child")}
        {Lisp-Entry "remove-child" #f 66 35 66 47 ("child")}
        {Lisp-Entry "set-name" #f 67 35 67 43 ("name" "entity")}
        {Lisp-Entry "set-property" #f 68 35 68 47 ("value" "property" "entity")}
        {Lisp-Entry "cut-entities" #f 69 35 69 47 ("entities")}
        {Lisp-Entry "copy-entities" #f 70 35 70 48 ("entities")}
        {Lisp-Entry "paste-parcels" #f 71 35 71 48 ("parent" "parcels")}
        {Lisp-Entry "delete-entities" #f 79 26 79 41 ("delete-entity" "entity" "function" "for-each" "entities")}
        {Lisp-Entry "delete-entity" #f 85 26 85 39 ("remove-child" "entity")}}}})
"Entities-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "entity" "Entities-Tree.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.entity.Entities-Tree" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Entities-Tree" #f 61 7 61 20 ("Tree-View")
        {Lisp-Entry "client" #f 64 8 64 14 ()}
        {Lisp-Entry "controller" #f 65 8 65 18 ()}
        {Lisp-Entry "focus-actions" #f 73 11 73 24 ("nextmethod" "entities-tree" "'entities-tree" "find-actions" "cons")}
        {Lisp-Entry "on-delete-selection" #f 83 11 83 30 ("delete-selection" "evt")}
        {Lisp-Entry "on-rename-selection" #f 87 11 87 30 ("rename-selection" "evt")}
        {Lisp-Entry "context-menu" #f 91 11 91 23 ("track-popup-menu" "when" "get-context-menu" "menu" "let" "function" "with-context-click" "pos")}
        {Lisp-Entry "get-context-menu" #f 99 11 99 27 ("self" "client:" "Entity-Menu" "new")}
        {Lisp-Entry "on-properties" #f 103 11 103 24 ("show-properties" "evt")}
        {Lisp-Entry "get-client" #f 112 18 112 28 ("client")}
        {Lisp-Entry "set-client" #f 116 18 116 28 ("client" "set!" "value")}
        {Lisp-Entry "get-controller" #f 125 18 125 32 ("controller")}
        {Lisp-Entry "set-controller" #f 129 18 129 32 ("controller" "set!" "value")}
        {Lisp-Entry "focus-update-actions" #f 138 11 138 31 ("can-rename?" "rename" "entities-tree" "Action" "set-action-enabled?")}
        {Lisp-Entry "get-factories" #f 147 26 147 39 ("get-factories" "root-factories" "null?" "if" "selected-entity" "entity" "let")}
        {Lisp-Entry "root-factories" #f 154 26 154 40 ()}
        {Lisp-Entry "add-entity" #f 158 26 158 36 ("select-entity" "append" "install-new-entity" "function" "with-update-locked" "set-name" "when" "get-controller" "controller" "presentation->name" "name" "new" "child" "let" "add-entity-request" "values" "if" "added-properties" "receive" "extra-properties" "client" "relocation-parent" "either" "selected-entity" "selected" "get-class" "class" "let*" "select?" "select?:" "properties" "properties:" "presentation" "presentation:" "parent" "parent:" "factory")}
        {Lisp-Entry "add-entity-request" #f 177 29 177 47 ("entity-properties-request" "entity-children" "entity-presentation-request" "values" "parent" "factory")}
        {Lisp-Entry "entity-presentation-request" #f 182 29 182 56 ("validator:" "unicity-domain:" "not" "accepts-empty?:" "french:" "format" "english:" "Locales" "new" "title:" "request-string" "presentation" "get-factory-presentation" "localize" "pres" "entity-name-validator" "name-validator" "get-presentation" "entity" "function" "map" "essay" "unicity-domain" "get-name-unicity?" "name-unicity?" "get-name-mandatory?" "name-mandatory?" "let*" "get-name-prohibited?" "if" "initial-value" "initial-value:" "brothers" "factory")}
        {Lisp-Entry "entity-properties-request" #f 194 29 194 54 ("factory")}
        {Lisp-Entry "entity-name-validator" #f 198 29 198 50 ()}
        {Lisp-Entry "install-new-entity" #f 202 29 202 47 ("add-properties" "set-presentation" "add-child" "properties" "presentation" "parent" "child" "controller")}
        {Lisp-Entry "add-properties" #f 208 29 208 43 ("controller" "set-property" "value" "property" "function" "for-each-property" "properties" "entity")}
        {Lisp-Entry "rename-selection" #f 219 11 219 27 ("rename-entity" "when" "selected-entity" "entity" "let")}
        {Lisp-Entry "rename-entity" #f 225 18 225 31 ("end-rename" "0" "Cell" "new" "cell" "row-rank" "rank" "get-presentation" "initial-value:" "entity-brothers" "get-factory" "entity-presentation-request" "presentation" "let*" "ensure-expanded" "when" "entity-row" "row" "let" "entity")}
        {Lisp-Entry "end-rename" #f 235 11 235 21 ("select-entity" "acquire-focus" "reorder-entity" "sort-entitys?" "and" "when" "get-parent" "parent" "let" "controller" "set-name" "get-cell-data" "set-title" "function" "with-update-locked" "presentation" "cell" "entity")}
        {Lisp-Entry "move-entities" #f 252 11 252 24 ("select-entities" "send-entity-before" "send-before" "for-each" "essay" "target-data" "element" "cardinality" "<" "1" "+" "after" "before" "case" "position" "son-rank" "rank" "get-sons" "sons" "get-father" "father" "move-entities" "bell" "not" "class-of" "relocation-parent" "entity" "key:" "uniform" "parent" "let" "row" "'row" "eq?" "if" "function" "with-update-locked" "get-user-data" "destination" "get-part" "part" "get-row" "dst" "get-view" "get-selected-data" "entities" "get-controller" "controller" "let*" "target" "source")}
        {Lisp-Entry "move-entity-row" #f 277 11 277 26 ("find-entity-position" "not" "if" "function" "move-row" "sort-entities?" "sort?" "client" "either" "destination" "get-user-data" "source" "let*" "get-sons" "cardinality" "1" "=" "get-father" "eq?" "and" "unless" "position" "position:" "father" "row")}
        {Lisp-Entry "reorder-entity" #f 289 11 289 25 ("get-father" "move-entity-row" "find-row" "row" "let" "entity")}
        {Lisp-Entry "find-entity-position" #f 294 29 294 49 ("get-presentation" "find-ordered-position" "father" "row" "entity")}
        {Lisp-Entry "find-entity-insertion" #f 298 29 298 50 ("find-row" "son-rank" "when" "target" "entity" "parent-row")}
        {Lisp-Entry "send-entity-before" #f 303 29 303 47 ("before" "entity")}
        {Lisp-Entry "get-draggable?" #f 312 11 312 25 ("can-move-entity?" "and" "selected-entity" "entity" "let")}
        {Lisp-Entry "get-row-reorder-target" #f 325 11 325 33 ("part:" "row:" "self" "view:" "Tree-Drop-Target" "new" "when" "else" "after" "'after" "'before" "=" "'row" "4" "3" "cond" "part" "can-send-before?" "cdr" "either" "/=" "addable-class?" "has-parent?" "every?" "neq?" "null?" "or" "not" "and" "move?" "visible-count" "<" "before" "+" "2" "1" "memq?" "if" "essay" "before-rank" "get-sons" "last" "before-last" "eq?" "before?" "dst-parent" "row-rank" "dst-rank" "get-father" "dst-father" "dst" "get-parent" "parent-relocation" "entity" "key:" "uniform" "src-parent" "class-of" "remove-duplicates" "src-types" "get-row" "get-user-data" "n" "function" "map" "src" "contiguous-range" "src-range" "get-source" "get-view" "get-selection" "src-selection" "let*" "quarter" "row" "drag-drop")}
        {Lisp-Entry "get-row-target" #f 350 11 350 25 ("get-view" "view" "get-source" "source" "let*" "row" "drag-drop")}
        {Lisp-Entry "receive-drop" #f 357 11 357 23 ("move-entities" "self" "eq?" "when" "get-target" "target" "get-view" "view" "get-source" "source" "let*" "drag-drop" "pos" "sender")}
        {Lisp-Entry "receive-model" #f 366 11 366 24 ("rename-entity" "centered?:" "0" "Point" "position:" "get-controller" "add-view" "function" "with-update-locked" "visible?:" "new" "child" "get-row" "get-user-data" "parent" "get-model" "self" "dispatch" "model" "let*" "target" "window")}
        {Lisp-Entry "parent-relocation" #f 381 29 381 46 ("parent")}
        {Lisp-Entry "relocation-parent" #f 385 29 385 46 ("class" "destination")}
        {Lisp-Entry "can-undo?" #f 394 11 394 20 ()}
        {Lisp-Entry "can-redo?" #f 398 11 398 20 ()}
        {Lisp-Entry "can-cut?" #f 402 11 402 19 ("can-cut-entity?" "entity" "function" "every?" "and" "selected-entities" "entities" "let")}
        {Lisp-Entry "can-copy?" #f 410 11 410 20 ("can-copy-entity?" "entity" "function" "every?" "and" "selected-entities" "entities" "let")}
        {Lisp-Entry "can-paste?" #f 418 11 418 21 ("remove-duplicates" "length" "1" "=" "memq?" "not" "and" "determine-paster" "entity" "function" "map" "parents" "selected-entities" "entities" "let*")}
        {Lisp-Entry "can-delete?" #f 427 11 427 22 ("can-delete-entity?" "entity" "function" "every?" "and" "selected-entities" "entities" "let")}
        {Lisp-Entry "can-rename?" #f 435 11 435 22 ("can-rename-entity?" "car" "entity" "1" "length" "=" "and" "selected-entities" "entities" "let")}
        {Lisp-Entry "can-select-all?" #f 442 11 442 26 ()}
        {Lisp-Entry "cut-selection" #f 446 11 446 24 ("controller" "cut-entities" "get-selection" "with-deleted-selection" "function" "with-update-locked" "bell" "null?" "if" "selected-entities" "entities" "let")}
        {Lisp-Entry "copy-selection" #f 457 11 457 25 (".150" "duration:" "get-application" "update-focus-actions" "controller" "copy-entities" "function" ":wait" "with-cursor" "bell" "null?" "if" "selected-entities" "entities" "let")}
        {Lisp-Entry "paste-clipboard" #f 468 11 468 26 ("get-model" "get-content" "car" "master" "parcel" "key:" "partition" "relocation-parent" "controller" "paste-parcels" "model" "bind" "info" "for-each" ":wait" "with-cursor" "function" "with-update-locked" "get-jazz-parcels" "parcels" "client" "selected-entity" "either" "parent" "let")}
        {Lisp-Entry "delete-selection" #f 481 11 481 27 ("controller" "delete-entities" "function" "with-deleted-selection" "confirm-close" "get-selected-data" "entities" "not-null?" "when" "get-selection" "selection" "let")}
        {Lisp-Entry "confirm-close" #f 491 11 491 24 ("confirm-action" "entities")}
        {Lisp-Entry "confirm-action" #f 495 11 495 25 ("throw-cancel" "cancel" "no" "yes" "case" "confirmation" "'confirmation" "type:" "localize" "message-box" "code" "let" "text")}
        {Lisp-Entry "selection-change" #f 508 11 508 27 ("update-focus-actions" "get-application" "appl" "let" "user-origin?" "force?" "old-selection")}
        {Lisp-Entry "selected-entity" #f 513 18 513 33 ("get-row" "get-user-data" "client" "null?" "if" "get-single-selection" "selection" "let")}
        {Lisp-Entry "selected-entities" #f 520 18 520 35 ("get-row" "get-user-data" "row" "function" "map" "client" "list" "null?" "if" "get-ordered-selection" "selection" "let")}
        {Lisp-Entry "entity-row" #f 529 18 529 28 ("continuation-return" "get-user-data" "eq?" "when" "rank" "row" "for-each-row" "return" "function" "continuation-capture" "entity")}
        {Lisp-Entry "entity-visible-row" #f 539 11 539 29 ("user-data-index" "entity")}
        {Lisp-Entry "select-entity" #f 543 18 543 31 ("set-single-selection" "when" "entity-visible-row" "row" "let" "entity")}
        {Lisp-Entry "select-entities" #f 550 18 550 33 ("set-selection" "entity-visible-row" "map" "remove-nils" "rows" "let" "entities")}
        {Lisp-Entry "find-row" #f 556 29 556 37 ("entity-row" "entity")}
        {Lisp-Entry "preserving-update" #f 565 18 565 35 ("selected-entities" ":selected-entities" "get-expand-state" "expand-state:" "update")}
        {Lisp-Entry "update" #f 569 26 569 32 ("rest")}
        {Lisp-Entry "entity-parent" #f 578 38 578 51 ("entity")}
        {Lisp-Entry "entity-children" #f 582 38 582 53 ("entity")}
        {Lisp-Entry "entity-brothers" #f 586 11 586 26 ("entity-children" "remove" "when" "entity-parent" "parent" "let" "entity")}
        {Lisp-Entry "update-menu" #f 597 18 597 29 ("before-properties" "'before-properties" "end-edit-group" "'end-edit-group" "or" "empty-properties?" "get-visible?" "empty-entity?" "empty-edit?" "properties" "'properties" "rename-selection" "'rename-selection" "delete-selection" "'delete-selection" "'paste" "'copy" "'cut" "not" "set!" "end-add-group" "'end-add-group" "set-before" "set-parent" "get-title" "localize" "format" "set-title" "get-icon" "set-icon" "unique" "set-visible?" "when" "get-children" "children" "self" "add-entities" "1" "=" "if" "'add-item" "add-item" "'add-menu" "locate" "add-menu" "let" "empty-add?" "get-categorized-properties" "can-view-properties?" "and" "can-properties?" "rename" "entities-tree" "can-rename?" "delete" "can-delete?" "paste" "can-paste?" "copy" "can-copy?" "cut" "view" "Action" "get-action-enabled?" "can-cut?" "length" "count" "car" "entity" "selected-entities" "entities" "get-application" "appl" "let*" "menu")}
        {Lisp-Entry "show-properties" #f 650 18 650 33 ("focus?:" "workspace:" "Properties-Manager" "select-palette")}}}})
"Entities-Tree-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "entity" "Entities-Tree-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.entity.Entities-Tree-Actions" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Entities-Tree-Actions" #f 46 7 46 28 ("F2" "Shortcut" "shortcut:" "on-rename" ":focus" "Event-Handler" "action-handler:" "rename" "name:" "Actions")}}})
"Entity-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "entity" "Entity-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.entity.Entity-Menu" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Entity-Menu" #f 58 7 58 18 ("properties" "before-properties" "rename" "components-tree" "rename-selection" "delete" "delete-selection" "end-edit-group" "paste" "copy" "view" "Action" "action:" "cut" "end-add-group" "add-menu" "Bitmap-Resource" "icon:" "title:" "add-item" "name:" "Context-Menu")
        {Lisp-Entry "finish" #f 76 11 76 17 ("self" "client" "update-menu" "nextmethod" "rest")}}
      {Lisp-Entry "Add-Menu" #f 86 7 86 15 ("Context-Menu")
        {Lisp-Entry "add-entities" #f 89 21 89 33 (":factory" "client:" "list" "properties:" "on-add" "'on-add" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "icon:" "Label-Item" "get-factory-presentation" "localize" "format" "title" "get-factory-image" "icon" "self" "parent:" "Separator-Item" "new" "null?" "if" "factory" "for-each" "get-factories" "factories" "let" "function" "with-update-locked" "client")}
        {Lisp-Entry "on-add" #f 103 11 103 17 ("add-entity" "factory:" "factory" "client:" "get-property" "client" "let" "evt")}}}})
"Entity-Parcel"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "entity" "Entity-Parcel.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.entity.Entity-Parcel" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Entity-Parcel" #f 46 7 46 20 ("Clipboard-Parcel")}}})
"Entry-Combo-Box"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Entry-Combo-Box.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Entry-Combo-Box" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Entry-Combo-Box" #f 48 7 48 22 ("Combo-Box")
        {Lisp-Entry "form-model" #f 51 11 51 21 ("nextmethod" "else" "Entry-Combo-Text-View" "body" "get-name" "case" "form")}}}})
"Entry-Combo-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Entry-Combo-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Entry-Combo-Text-View" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Entry-Combo-Text-View" #f 47 7 47 28 ("show-unfocused-selection?:" "focus-selects-all?:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "Label" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Combo-Text-View")
        {Lisp-Entry "editor" #f 50 12 50 18 ("generate")}
        {Lisp-Entry "focus-gain" #f 57 11 57 21 ("editor-focus-gain" "get-manager" "manager" "let" "editable?" "editor" "and" "when" "nextmethod" "old")}
        {Lisp-Entry "focus-lose" #f 65 11 65 21 ("editor-focus-lose" "get-manager" "manager" "let" "editable?" "editor" "and" "when" "nextmethod" "view")}
        {Lisp-Entry "get-context-menu" #f 73 11 73 27 ("new-text-context-menu")}}}})
"Entry-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Entry-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Entry-Text-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Entry-Text-View" #f 48 7 48 22 ("show-unfocused-selection?:" "focus-selects-all?:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "Label" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Plain-Text-View")
        {Lisp-Entry "editor" #f 51 12 51 18 ("generate")}
        {Lisp-Entry "focus-gain" #f 58 11 58 21 ("editor-focus-gain" "get-manager" "manager" "let" "editable?" "editor" "and" "when" "nextmethod" "old")}
        {Lisp-Entry "focus-lose" #f 66 11 66 21 ("editor-focus-lose" "get-manager" "manager" "let" "editable?" "editor" "and" "when" "nextmethod" "view")}
        {Lisp-Entry "get-context-menu" #f 74 11 74 27 ("new-text-context-menu")}}}})
"Entry-Widget"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "widget" "Entry-Widget.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.widget.Entry-Widget" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Entry-Widget" #f 47 7 47 19 ("text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "scroller" "name:" "edge" "border-type:" "Border-View")
        {Lisp-Entry "default-size" #f 57 11 57 23 ("21" "200" "Dimension")}}}})
"Explorer-Mark"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Explorer-Mark.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Explorer-Mark" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Explorer-Mark" #f 45 7 45 20 ("Object")
        {Lisp-Entry "kind" #f 48 8 48 12 ("generate")}
        {Lisp-Entry "range" #f 49 8 49 13 ("generate")}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("range~self" "kind~self" "set!" "nextmethod" "range" "kind")}
        {Lisp-Entry "print" #f 58 11 58 16 ("range" "kind" "format" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Figure"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "layout" "Figure.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.layout.Figure" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Figure" #f 46 7 46 13 ("Component")
        {Lisp-Entry "location" #f 49 12 49 20 ("set-location" "get-location")}
        {Lisp-Entry "position" #f 50 12 50 20 ("set-position" "get-position" "default-position")}
        {Lisp-Entry "size" #f 51 12 51 16 ("set-size" "get-size" "default-size")}
        {Lisp-Entry "get-location" #f 59 26 59 38 ("location")}
        {Lisp-Entry "set-location" #f 63 26 63 38 ("location" "set!" "loc")}
        {Lisp-Entry "find-child-located" #f 67 18 67 36 ("children" "get-location" "eq?" "child" "function" "find-if" "location")}
        {Lisp-Entry "default-position" #f 78 29 78 45 ("0" "Point")}
        {Lisp-Entry "get-position" #f 82 26 82 38 ("position")}
        {Lisp-Entry "get-effective-position" #f 86 26 86 48 ("get-position")}
        {Lisp-Entry "set-position" #f 90 26 90 38 ("position" "set!" "pos")}
        {Lisp-Entry "move-figure" #f 94 18 94 29 ("get-v" "get-h" "+" "Point" "new" "set-position" "get-position" "pos" "let" "dv" "dh")}
        {Lisp-Entry "get-center" #f 99 18 99 28 ("get-height" "get-v" "2" "size" "get-width" "quotient" "position" "get-h" "+" "Point" "new")}
        {Lisp-Entry "get-bottom-right" #f 105 18 105 34 ("get-height" "get-v" "size" "get-width" "position" "get-h" "+" "Point" "new")}
        {Lisp-Entry "default-size" #f 116 29 116 41 ("100" "Dimension")}
        {Lisp-Entry "get-size" #f 120 26 120 34 ("size")}
        {Lisp-Entry "get-effective-size" #f 124 26 124 44 ("get-size")}
        {Lisp-Entry "set-size" #f 128 26 128 34 ("size" "set!" "sz")}
        {Lisp-Entry "size-figure" #f 132 18 132 29 ("get-height" "get-width" "+" "Dimension" "new" "set-size" "get-size" "size" "let" "dh" "dw")}
        {Lisp-Entry "property-presentation" #f 142 16 142 37 ("nextmethod" "else" "size" "position" "location" "field-name" "case" "property")}}}})
"Figure-Mover"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "action" "Figure-Mover.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.action.Figure-Mover" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Figure-Mover" #f 45 7 45 19 ("Component")
        {Lisp-Entry "client" #f 48 12 48 18 ("set-client" "get-client")}
        {Lisp-Entry "dragging?" #f 51 8 51 17 ()}
        {Lisp-Entry "base-position" #f 52 8 52 21 ()}
        {Lisp-Entry "get-client" #f 60 18 60 28 ("client")}
        {Lisp-Entry "set-client" #f 64 18 64 28 ("child" "client" "set!" "clt")}
        {Lisp-Entry "on-mouse-down" #f 73 11 73 24 ("get-sender" "acquire-capture" "get-position" "base-position" "dragging?" "set!" "evt")}
        {Lisp-Entry "on-drag-move" #f 79 11 79 23 ("get-v" "get-h" "client" "move-figure" "base-position" "get-position" "-" "delta" "let" "dragging?" "when" "evt")}
        {Lisp-Entry "on-drag-up" #f 85 11 85 21 ("set!" "get-sender" "release-capture" "dragging?" "when" "evt")}}}})
"Figure-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Figure-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Figure-Preferences" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Figure-Preferences" #f 45 7 45 25 ("Preferences")
        {Lisp-Entry "location" #f 48 12 48 20 ("generate")}
        {Lisp-Entry "position" #f 49 12 49 20 ("generate")}
        {Lisp-Entry "size" #f 50 12 50 16 ("generate")}
        {Lisp-Entry "find-child-located" #f 58 18 58 36 ("children" "get-location" "eq?" "child" "function" "find-if" "location")}
        {Lisp-Entry "presentation-property?" #f 69 11 69 33 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 73 11 73 27 ("name" "->string" "title" "either")}
        {Lisp-Entry "set-presentation" #f 77 11 77 27 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "apply-root" #f 86 26 86 36 ("self" "error" "player")}
        {Lisp-Entry "apply-preferences" #f 90 11 90 28 ("set-size" "size" "set-position" "position" "when" "find-client" "either" "let" "client")}
        {Lisp-Entry "save-preferences" #f 104 11 104 27 ("get-effective-size" "size" "'size" "get-effective-position" "position" "'position" "set-property" "when" "find-client" "either" "let" "client" "designer")}
        {Lisp-Entry "find-client" #f 116 29 116 40 ()}}}})
"File-Base-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "File-Base-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.File-Base-Menu" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "File-Base-Menu" #f 46 7 46 21 ("exit" "on-quit-application" "end-revert-group" "revert-saved" "on-revert-saved" "end-save-group" "save-all" "on-save-all" "save-as" "on-save-as" "save" "guest" "on-save" "end-open-group" "close-all" "on-close-all" "close" "on-close" "open" "on-open" "new" "application" "Action" "action:" "Bitmap-Resource" "icon:" "on-new" "name:" "french:" "english:" "Locales" "title:" "Menu")}}})
"File-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "File-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.File-Menu" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "File-Menu" #f 46 7 46 16 ("end-print-group" "print-preview" "on-print-preview" "print-layout" "on-print-layout" "print" "application" "Bitmap-Resource" "icon:" "on-quit-application" "french:" "english:" "Locales" "on-print" "guest" "Action" "action:" "end-revert-group" "before:" "title:" "compare-saved" "name:" "File-Base-Menu")}}})
"File-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "File-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.File-Request" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "File-Request" #f 49 7 49 19 ("title:" "ok" "buttonbar" "name:" "Pathname-Request")
        {Lisp-Entry "host-title" #f 58 16 58 26 ()}
        {Lisp-Entry "multiple-selection?" #f 62 12 62 31 ()}
        {Lisp-Entry "finish" #f 65 11 65 17 ("multiple-selection?" "get-tree" "set-multiple-selection?" "nextmethod" "rest")}
        {Lisp-Entry "update-content" #f 75 11 75 25 ("for-each" "remove-every-row" "function" "with-update-locked" "add-pathname" "pathname" "add" "define" "get-tree" "tree" "files" "leaves?:" "nodes?:" "directory" "get-content" "directories" "let")}
        {Lisp-Entry "update-buttons" #f 89 11 89 25 ("file?" "every?" "not-null?" "and" "ok" "'ok" "locate" "set-enabled?" "selected-pathnames" "pathnames" "let" "nextmethod")}
        {Lisp-Entry "get-modal-result" #f 100 11 100 27 ("selected-pathname" "selected-pathnames" "anchorize" "map" "multiple-selection?" "if" "directory" "set-current-directory")}
        {Lisp-Entry "default-action" #f 112 11 112 25 ("get-modal-result" "get-host" "end-modal" "ok-enabled?" "down" "car" "directory?" "1" "length" "=" "and" "cond" "selected-pathnames" "pathnames" "let")}
        {Lisp-Entry "selected-pathnames" #f 125 11 125 29 ("get-tree" "get-selected-data")}}}})
"Flat-Look"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "look" "Flat-Look.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.look.Flat-Look" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Flat-Look" #f 45 7 45 16 ("Look")
        {Lisp-Entry "present" #f 53 11 53 18 ()}
        {Lisp-Entry "get-element" #f 62 11 62 22 ("document/scrollbar/flat?" "document/header/flat?" "tool/scrollbar/flat?" "tool/header/flat?" "group/border/flat?" "outline/edge/flat?" "entry/edge/flat?" "case" "name")}}}})
"Flow-Layout"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "layout" "Flow-Layout.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.layout.Flow-Layout" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Flow-Layout" #f 45 7 45 18 ("Layout")
        {Lisp-Entry "insets" #f 48 12 48 18 ("generate" "0" "Rect")}
        {Lisp-Entry "justification" #f 49 12 49 25 ("generate" "horizontal" "'horizontal")}
        {Lisp-Entry "padding" #f 50 12 50 19 ("generate" "0")}
        {Lisp-Entry "layout" #f 59 11 59 17 ("layout-horizontal" "else" "layout-vertical" "vertical" "justification" "case" "rest" "height" "width" "figures")}
        {Lisp-Entry "layout-vertical" #f 67 11 67 26 ("get-width" "Dimension" "set-size" "center" "'center" "decrease!" "get-v" ">" "let*" "'tail" "for-each-reversed" "padding" "get-height" "increase!" "0" "+" "set-position" "get-size" "size" "'head" "eq?" "get-visible?" "and" "when" "get-location" "standardize-location" "offset" "where" "receive" "figure" "function" "for-each" "get-bottom" "-" "get-left" "Point" "new" "tail" "insets" "rect-position" "head" "let" "height" "width" "figures")}
        {Lisp-Entry "layout-horizontal" #f 96 11 96 28 ("get-height" "Dimension" "set-size" "center" "'center" "decrease!" "get-h" ">" "let*" "'tail" "for-each-reversed" "padding" "get-width" "increase!" "0" "+" "set-position" "get-size" "size" "'head" "eq?" "get-visible?" "and" "when" "get-location" "standardize-location" "offset" "where" "receive" "figure" "function" "for-each" "get-top" "get-right" "-" "Point" "new" "tail" "insets" "rect-position" "head" "let" "height" "width" "figures")}
        {Lisp-Entry "standardize-location" #f 125 11 125 31 ("values" "0" "second" "pair?" "offset" "first" "else" "symbol?" "head" "'head" "integer?" "not" "or" "cond" "where" "let" "location")}}}})
"Focus-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Focus-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Focus-Event" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Focus-Event" #f 44 7 44 18 ("Event")
        {Lisp-Entry "old" #f 47 8 47 11 ()}
        {Lisp-Entry "new" #f 48 8 48 11 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("new~self" "old~self" "set!" "nextmethod" "new" "old" "sender" "kind")}
        {Lisp-Entry "print" #f 57 11 57 16 ("function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-old" #f 68 18 68 25 ("old")}
        {Lisp-Entry "get-new" #f 72 18 72 25 ("new")}}}})
"Font-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Font-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Font-Request" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Font-Request" #f 48 7 48 19 ("Dialog")
        {Lisp-Entry "get-modal" #f 52 16 52 25 ("error" "throw-cancel" "=" "CommDlgExtendedError" "code" "logfont:" "Font" "ChooseFont" "0" "CF_INITTOLOGFONTSTRUCT" "CF_NOSCRIPTSEL" "CF_EFFECTS" "CF_SCREENFONTS" "bitwise-ior" "Flags" "'Flags" "get-ref" "rgbColors" "'rgbColors" "lpLogFont" "'lpLogFont" "get-toplevel" "get-handle" "hwndOwner" "'hwndOwner" "size-of" "lStructSize" "'lStructSize" "set" "LOGFONT" "get-logfont" "if" "logfont" "CHOOSEFONT" "new" "r" "let" "close-all-popups" "Black" "name:" "Color" "initial-color" "initial-color:" "initial-font" "initial-font:")}}}})
"Format"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Format.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Format" #f 37 19 37 38 ("jazz")
      {Lisp-Entry "Format" #f 44 7 44 13 ("keep-with-next?" "bullet-inside" "bullet-outside" "bulleted?" "left" "'left" "justification" "right-margin" "0" "initialize" "left-margin" "Exemplar")
        {Lisp-Entry "fold-literal" #f 57 11 57 23 ("Format" "'Format" "fold-exemplar")}}}})
"Format-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Format-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Format-Menu" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Format-Menu" #f 46 7 46 18 ("capitalize" "capitalize-selection" "downcase" "downcase-selection" "upcase" "text" "upcase-selection" "tabify" "code-text" "Action" "action:" "title:" "tabify-selection" "name:" "Context-Menu")}}})
"Formatted-Text"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Formatted-Text.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Formatted-Text" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Formatted-Text" #f 45 7 45 21 ("Text")
        {Lisp-Entry "formats" #f 48 18 48 25 ()}
        {Lisp-Entry "styles" #f 49 18 49 24 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("styles~self" "formats~self" "set!" "nextmethod" "apply" "others" "styles" "formats" "bind-keywords" "rest")}
        {Lisp-Entry "fold-literal" #f 59 11 59 23 ("paragraphs" ",paragraphs" "',paragraphs" "paragraphs:" "styles" ",styles" "',styles" "styles:" "formats" ",formats" "',formats" "formats:" "Formatted-Text" "new")}
        {Lisp-Entry "print" #f 66 11 66 16 ("paragraphs" "styles" "formats" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-formats" #f 79 18 79 29 ("formats")}
        {Lisp-Entry "set-formats" #f 83 18 83 29 ("formats" "set!" "value")}
        {Lisp-Entry "get-styles" #f 87 18 87 28 ("styles")}
        {Lisp-Entry "set-styles" #f 91 18 91 28 ("styles" "set!" "value")}}}})
"Formatted-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Formatted-Text-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Formatted-Text-Actions" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Formatted-Text-Actions" #f 46 7 46 29 ("on-bulleted" "bulleted" "Heading5" "heading5-style" "Heading4" "heading4-style" "Heading3" "heading3-style" "Heading2" "heading2-style" "Heading1" "heading1-style" "Heading0" "heading0-style" ":alt" "Shortcut" "shortcut:" "Default" "style:" "on-paragraph-style" ":focus" "Event-Handler" "action-handler:" "default-style" "name:" "Actions")}}})
"Formatted-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Formatted-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Formatted-Text-View" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Formatted-Text-View" #f 48 7 48 26 ("wrap?:" "Text-View")
        {Lisp-Entry "ruler" #f 51 8 51 13 ()}
        {Lisp-Entry "external-name" #f 63 16 63 29 ("formatted-text" "'formatted-text" "rest")}
        {Lisp-Entry "default-extension" #f 67 11 67 28 ()}
        {Lisp-Entry "extensions" #f 71 11 71 21 ()}
        {Lisp-Entry "focus-actions" #f 80 11 80 24 ("nextmethod" "formatted-text" "'formatted-text" "find-actions" "cons")}
        {Lisp-Entry "host-workspaces" #f 90 11 90 26 ("formatted")}
        {Lisp-Entry "Formatted-Text-Controller" #f 100 9 100 34 ("Document-Controller")
          {Lisp-Entry "install-container" #f 103 13 103 30 ("install-ruler" "install-scroller")}
          {Lisp-Entry "install-ruler" #f 108 13 108 26 ("set-client" "set-parent" "set-ruler" "get-content" "parent:" "Ruler" "new" "ruler" "get-scroller" "scroller" "document" "get-root" "root" "let*")}}
        {Lisp-Entry "new-controller" #f 118 11 118 25 ("self" "Formatted-Text-Controller" "new")}
        {Lisp-Entry "get-ruler" #f 127 18 127 27 ("ruler")}
        {Lisp-Entry "set-ruler" #f 131 18 131 27 ("ruler" "set!" "r")}
        {Lisp-Entry "empty-content" #f 140 11 140 24 ("list" "paragraphs:" "styles:" "formats:" "Formatted-Text" "new")}
        {Lisp-Entry "get-content" #f 147 11 147 22 ("get-formatted-content")}
        {Lisp-Entry "set-content" #f 151 11 151 22 ("empty-content" "either" "set-formatted-content" "text")}
        {Lisp-Entry "get-context-menu" #f 161 11 161 27 ()}
        {Lisp-Entry "cursor-update" #f 170 11 170 24 (":ibeam" ":finger" "Hyperlink-Style" "is?" "get-style-at" "style" "let" ":left-arrow" "set-cursor" "paragraph-left" "get-h" "<" "if" "get-row" "get-paragraph" "par" "view->text" "pos" "let*" "selectable?" "enabled?" "and" "when" "show-text-cursor" "view")}
        {Lisp-Entry "mouse-down" #f 188 11 188 21 ("nextmethod" "Hyperlink-Style" "is?" "unless" "get-style-at" "style" "view->text" "pos" "let*" "enabled?" "when" "view")}
        {Lisp-Entry "drag-up" #f 196 11 196 18 ("bell" "else" "goto-anchor" "invoke-action" "cond" "get-action" "action" "get-anchor" "anchor" "Hyperlink-Style" "is?" "get-style-at" "style" "view->text" "pos" "let*" "not" "enabled?" "and" "when" "nextmethod" "mouse-selecting?" "let" "rest" "view")}
        {Lisp-Entry "invoke-action" #f 213 11 213 24 ("else" "get-properties" ":hyperlink" "Event" "new" "apply" "self" "invoke" "Event-Handler" "is?" "cond" "action")}
        {Lisp-Entry "goto-anchor" #f 220 11 220 22 ("cardinality" "0" "Cell" "Range$Cell$" "new" "set-selection" "=" "when" "string" "row" "heading" "function" "for-each-heading" "anchor")}
        {Lisp-Entry "copy-selection" #f 234 11 234 25 ("copy-formatted-selection" "nextmethod")}
        {Lisp-Entry "paste-clipboard" #f 239 11 239 26 ("paste-formatted-clipboard")}
        {Lisp-Entry "read-moniker" #f 248 11 248 23 ("read-formatted" "moniker")}
        {Lisp-Entry "save-to" #f 252 11 252 18 ("save-formatted" "moniker")}
        {Lisp-Entry "for-each-heading" #f 261 18 261 34 ("get-string" "get-name" "memq?" "essay" "style" "first-run" "run" "let*" "paragraph" "row" "function" "for-each-paragraph" "list" "all" "and" "when" "Heading3" "'Heading3" "heading3" "Heading2" "'Heading2" "heading2" "Heading1" "'Heading1" "heading1" "error?:" "Heading0" "'Heading0" "get-style" "heading0" "let" "proc")}
        {Lisp-Entry "collect-headings" #f 276 18 276 34 ("get-output" "list" "put" "string" "row" "heading" "function" "for-each-heading" "List-Factory" "new" "headings" "let")}
        {Lisp-Entry "insert-table-of-content" #f 289 11 289 34 ("toggle-bulleted" "unless" "anchor:" "insert-hyperlink" "get-row" "get-start" "start" "let*" "eq?" "when" "string" "row" "bind" "heading" "function" "for-each" "insert-newline" "Heading0" "'Heading0" "insert-styled" "collect-headings" "headings" "let")}
        {Lisp-Entry "Heading-Levels" #f 313 14 313 28 ("5" "Heading5" "4" "Heading4" "3" "Heading3" "2" "Heading2" "1" "Heading1" "0" "Heading0")}
        {Lisp-Entry "heading-level" #f 322 18 322 31 ("error" "cdr" "if" "Heading-Levels" "assq" "info" "let" "heading")}
        {Lisp-Entry "get-chapters" #f 334 11 334 23 ("collect-headings" "0" "Cell" "new" "heading-level" "list" "string" "row" "bind" "heading" "function" "map")}
        {Lisp-Entry "get-first-chapter" #f 341 11 341 28 ("lst")}
        {Lisp-Entry "get-remaining-chapters" #f 345 11 345 33 ("lst")}}}})
"Frame"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Frame.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.Frame" #f 37 19 37 39 ("jazz")
      {Lisp-Entry "Frame" #f 48 7 48 12 ("View-Player")}}})
"Frame-Button"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Frame-Button.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Frame-Button" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Frame-Button" #f 46 7 46 19 ("View")
        {Lisp-Entry "type" #f 49 12 49 16 ("set-type" "get-type")}
        {Lisp-Entry "state" #f 52 8 52 13 ("inactive" "'inactive")}
        {Lisp-Entry "get-type" #f 60 18 60 26 ("type")}
        {Lisp-Entry "set-type" #f 64 18 64 26 ("invalidate-view" "type" "set!" "value")}
        {Lisp-Entry "get-state" #f 74 18 74 27 ("state")}
        {Lisp-Entry "set-state" #f 78 18 78 27 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "mouse-activate?" #f 88 11 88 26 ()}
        {Lisp-Entry "mouse-enter" #f 92 11 92 22 ("pushed" "'pushed" "out-pushed" "highlighted" "'highlighted" "set-state" "inactive" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-leave" #f 99 11 99 22 ("out-pushed" "'out-pushed" "pushed" "inactive" "'inactive" "set-state" "highlighted" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-down" #f 106 11 106 21 ("pushed" "'pushed" "set-state" "enabled?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 111 11 111 18 ("inactive" "'inactive" "out-pushed" "highlighted" "'highlighted" "set-state" "pushed" "get-state" "case" "up" "unwind-protect" "get-enabled?" "when" "rest" "pos")}
        {Lisp-Entry "up" #f 120 11 120 13 ("self" "process-action" "pushed" "'pushed" "get-state" "eq?" "when")}
        {Lisp-Entry "type-icon" #f 130 11 130 20 ("close" "restore" "Bitmap-Resource" "maximize" "case" "type")}
        {Lisp-Entry "draw" #f 137 11 137 15 ("pushed" "'pushed" "state" "eq?" "if" "draw-caption" "+" "16" "Rect" "new" "rect" "0" "type" "type-icon" "get-application" "get-small-icons-cache" "draw-image" "get-height" "14" "center" "top" "let" "lv" "lh" "context" "surface")}}}})
"Frame-Host"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Frame-Host.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.hosting.Frame-Host" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Frame-Host" #f 51 7 51 17 ("on-close" "close" "on-maximize" ":form" "Event-Handler" "action-handler:" "french:" "english:" "Locales" "tooltip-text:" "tooltip?:" "type:" "maximize" "name:" "Caption-Host")
        {Lisp-Entry "dragging?" #f 54 8 54 17 ()}
        {Lisp-Entry "current-part" #f 55 8 55 20 ()}
        {Lisp-Entry "old-position" #f 56 8 56 20 ()}
        {Lisp-Entry "preserved-position" #f 57 8 57 26 ()}
        {Lisp-Entry "preserved-size" #f 58 8 58 22 ()}
        {Lisp-Entry "workspace" #f 59 8 59 17 ()}
        {Lisp-Entry "conclude" #f 73 11 73 19 ("destroy-mandatory" "nextmethod" "rest")}
        {Lisp-Entry "get-preserved-position" #f 83 18 83 40 ("preserved-position")}
        {Lisp-Entry "get-preserved-size" #f 87 18 87 36 ("preserved-size")}
        {Lisp-Entry "size-change" #f 96 11 96 22 ("4" "Rect" "insets:" "invalidate-border" "invalidate-caption" "nextmethod" "size")}
        {Lisp-Entry "on-maximize" #f 102 29 102 40 ("get-stage" "maximize" "evt")}
        {Lisp-Entry "on-close" #f 106 29 106 37 ("close-host" "evt")}
        {Lisp-Entry "close-host" #f 110 11 110 21 ("get-host" "close-with-confirm")}
        {Lisp-Entry "close-with-confirm" #f 114 11 114 29 ("nextmethod" "confirm-close" "close-popups")}
        {Lisp-Entry "activate-frame" #f 125 11 125 25 ("get-application" "update-windowing-actions" "get-player" "simulate-mouse-move" "select-workspace" "client-activate" "view" "function" "for-each-docked" "get-locked-activations?" "unless" "get-title" "get-toplevel" "set-caption" "get-maximized?" "when" "get-stage" "stage" "let" "self" "set-active-frame" "close-popups")}
        {Lisp-Entry "deactivate-frame" #f 141 11 141 27 ("acquire-focus" "stage-activate" "get-views" "null?" "when" "get-stage" "stage" "let" "set-active-frame")}
        {Lisp-Entry "destroy" #f 154 11 154 18 ("get-application" "update-windowing-actions" "focus-host" "activate-frame" "deactivate-frame" "nextmethod" "parent" "second-view" "essay" "new-active" "get-active-frame" "self" "eq?" "was-active?" "let*" "remove-surrogate" "get-surrogate" "when")}
        {Lisp-Entry "bring-to-front" #f 173 11 173 25 ("activate-front" "get-visible?" "when" "nextmethod")}
        {Lisp-Entry "send-to-back" #f 179 11 179 23 ("activate-front" "nextmethod")}
        {Lisp-Entry "show" #f 189 11 189 15 ("force?:" "activate-front" "guest" "get-size" "maximize-bounds" "maximize" "get-maximized?" "when" "get-stage" "stage" "let" "nextmethod")}
        {Lisp-Entry "get-workspace" #f 204 18 204 31 ("workspace")}
        {Lisp-Entry "set-workspace" #f 208 18 208 31 ("workspace" "set!" "value")}
        {Lisp-Entry "select-workspace" #f 212 18 212 34 ("apply-preferences" "error?:" "car" "'workspaces" "get-preferences" "memq?" "not" "not-null?" "and" "effective-host-workspaces" "else" "list" "workspace" "cond" "workspaces" "get-name" "current" "get-workspace-preferences" "pref" "let" "guest" "when")}
        {Lisp-Entry "ensure-displayed" #f 228 18 228 34 ("set-position" "set-size" "8" "padding:" "fit-within" "new-size" "new-position" "receive" "get-rect" "rect" "parent" "get-size" "outer" "let")}
        {Lisp-Entry "get-effective-position" #f 241 11 241 33 ("get-position" "get-preserved-position" "get-maximized?" "if")}
        {Lisp-Entry "get-effective-size" #f 247 11 247 29 ("get-size" "get-preserved-size" "get-maximized?" "if")}
        {Lisp-Entry "dispatch-mouse-copy" #f 258 11 258 30 ("mouse-position" "mouse-copy" "and" "when" "get-focus" "dest" "mouse-view" "view" "let")}
        {Lisp-Entry "confirm-close" #f 270 11 270 24 ("confirm-close" "guest" "when" "rest")}
        {Lisp-Entry "caption-rect" #f 280 11 280 23 ("20" "+" "get-width" "-" "Rect" "new" "4" "0" "maximized?" "if" "border" "let")}
        {Lisp-Entry "maximize-rect" #f 285 29 285 42 ("17" "21" "3" "+" "37" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "close-rect" #f 289 29 289 39 ("17" "3" "+" "19" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "mouse-activate?" #f 298 11 298 26 ()}
        {Lisp-Entry "mouse-activate" #f 302 11 302 25 ("nextmethod" "bring-to-front")}
        {Lisp-Entry "activate-focus" #f 307 11 307 25 ("invalidate-caption" "nextmethod")}
        {Lisp-Entry "deactivate-focus" #f 312 11 312 27 ("invalidate-caption" "nextmethod")}
        {Lisp-Entry "maximize" #f 322 11 322 19 ("update-buttons" "get-size" "preserved-size" "get-position" "preserved-position" "set!" "maximized?" "unless" "get-host" "host" "let")}
        {Lisp-Entry "maximize-bounds" #f 331 18 331 33 ("invalidate-view" "layout-view" "set-size" "0" "Point" "set-position" "get-host" "host" "let" "size")}
        {Lisp-Entry "restore" #f 339 11 339 18 ("invalidate-view" "layout-view" "update-buttons" "maximized?" "set!" "set-size" "preserved-size" "set-position" "preserved-position" "when" "get-host" "host" "let")}
        {Lisp-Entry "layout" #f 358 11 358 17 ("get-height" "get-width" "-" "Dimension" "set-size" "+" "Point" "new" "set-position" "content" "when" "layout-buttons" "rect-height" "caption-height" "caption-rect" "0" "4" "if" "border" "caption-visible?" "caption?" "let*")}
        {Lisp-Entry "layout-buttons" #f 369 29 369 43 ("close-rect" "close" "'close" "maximize-rect" "maximize" "'maximize" "locate" "set-rect" "get-right" "-" "right" "get-bounds" "bounds" "top" "buttons-border" "border" "let*")}
        {Lisp-Entry "buttons-border" #f 378 29 378 43 ("0" "4" "caption-visible?" "if")}
        {Lisp-Entry "invalidate-caption" #f 387 11 387 29 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "update-buttons" #f 391 29 391 43 ("close" "'close" "maximize" "'maximize" "locate" "set-visible?" "caption-visible?" "visible?" "let")}
        {Lisp-Entry "caption-icon" #f 402 11 402 23 ("guest-icon" "get-guest" "guest" "get-host" "host" "let*")}
        {Lisp-Entry "caption-title" #f 408 11 408 24 ("get-title" "get-host" "host" "let")}
        {Lisp-Entry "caption-focused?" #f 413 11 413 27 ("get-focused-host" "self" "eq?")}
        {Lisp-Entry "caption-visible?" #f 417 11 417 27 ("maximized?" "not")}
        {Lisp-Entry "cursor-update" #f 426 11 426 24 ("get-resize-cursor" "get-size" "find-resize-part" "maximized?" "essay" "part" "let" ":arrow" "set-cursor" "resizeable?" "not" "if" "pos")}
        {Lisp-Entry "moveable?" #f 440 29 440 38 ()}
        {Lisp-Entry "resizeable?" #f 444 29 444 40 ()}
        {Lisp-Entry "mouse-down" #f 448 11 448 21 ("acquire-capture" "to-desktop" "old-position" "resizeable?" "essay" "current-part" "dragging?" "set!" "or" "get-size" "find-resize-part" "part" "moveable?" "when" "send-to-back" "control-down?" "and" "if" "caption-rect" "in-rect?" "in-caption?" "let" "pos")}
        {Lisp-Entry "drag-move" #f 461 11 461 20 ("set!" "resize-host" "dheight" "dwidth" "function" "resize-client" "get-host" "move-figure" "current-part" "not" "if" "get-v" "dv" "get-h" "dh" "old-position" "point-" "delta" "to-desktop" "desktop-pos" "let*" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 475 11 475 18 ("set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "double-click" #f 481 11 481 23 ("toggle-maximized" "caption-rect" "in-rect?" "close-host" "in-close-rect?" "cond" "pos")}
        {Lisp-Entry "in-close-rect?" #f 490 15 490 29 ("22" "6" "Rect" "in-rect?" "pos")}
        {Lisp-Entry "in-close-rect?" #f 493 15 493 29 ("pos")}
        {Lisp-Entry "resize-host" #f 497 29 497 40 ("grow-bounds" "dheight" "dwidth" "dv" "dh")}
        {Lisp-Entry "toggle-maximized" #f 501 29 501 45 ("get-stage" "toggle-maximized")}}}})
"Frame-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Frame-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Frame-Preferences" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Frame-Preferences" #f 48 7 48 24 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "find-client" #f 60 11 60 22 ("get-name" "autoload" "get-stage" "find-host")}}}})
"Group-Box"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Group-Box.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Group-Box" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Group-Box" #f 49 7 49 16 ("Container")
        {Lisp-Entry "flat?" #f 52 12 52 17 ("set-flat?" "get-flat?")}
        {Lisp-Entry "style" #f 53 12 53 17 ("set-style" "get-style")}
        {Lisp-Entry "get-flat?" #f 61 18 61 27 ("flat?")}
        {Lisp-Entry "set-flat?" #f 65 18 65 27 ("invalidate-view" "flat?" "set!" "value")}
        {Lisp-Entry "get-style" #f 70 18 70 27 ("style")}
        {Lisp-Entry "set-style" #f 74 18 74 27 ("invalidate-view" "style" "set!" "value")}
        {Lisp-Entry "set-title" #f 79 11 79 20 ("layout-view" "nextmethod" "value")}
        {Lisp-Entry "flat-look?" #f 89 11 89 21 ("flat?" "else" "group/border/flat?" "'group/border/flat?" "get-look" "get-element" "styled" "style" "case")}
        {Lisp-Entry "layout" #f 100 11 100 17 ("Dimension" "set-size" "Point" "new" "set-position" "get-content" "content" "height" "4" "-" "width" "else" "+" "title" "cond" "top" "2" "1" "flat?" "if" "left" "get-ascent" "ascent" "font" "get-metrics" "metrics" "get-height" "box-height" "get-width" "box-width" "get-size" "size" "let*")}
        {Lisp-Entry "draw" #f 120 11 120 15 ("draw-text" "Black" "set-text-color" "+" "-" "fill-rect" "when" "rectangle" "'rectangle" "edges:" "sunken" "'sunken" "outer:" "raised" "'raised" "inner:" "draw-edge" "Rect" "new" "frame-rect" "cairo_font_extents_t-free" "0" "2" "cairo_font_extents_t-ascent-ref" "/" "fxceiling" "if" "top" "get-text-extent" "and" "extent" "get-text-metrics" "metrics" "get-bounds" "rect" "Group-Border" "else" "Entry-Border" "entry" "style" "case" "frame-color" "flat-look?" "flat?" "Medium" "name:" "Color" "color" "9" "offset" "get-height" "height" "get-width" "width" "get-size" "size" "get-title" "localize" "title" "let*" "lv" "lh" "context" "surface")}}}})
"Groupable"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Groupable.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Groupable" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Groupable" #f 45 11 45 20 ()
        {Lisp-Entry "get-group" #f 48 35 48 44 ()}
        {Lisp-Entry "set-group" #f 49 35 49 44 ("value")}}}})
"Guest-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Guest-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.hosting.Guest-Actions" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Guest-Actions" #f 46 7 46 20 ("on-compare-saved" "compare-saved" "on-revert-saved" "revert-saved" "on-save-as" "save-as" ":alt" ":control" "Shortcut" "shortcut:" "on-save" ":document" "Event-Handler" "action-handler:" "save" "name:" "Actions")}}})
"Guest-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Guest-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.hosting.Guest-Preferences" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Guest-Preferences" #f 45 7 45 24 ("Frame-Preferences")
        {Lisp-Entry "initargs" #f 48 12 48 20 ("generate")}}}})
"Header-Bar"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Header-Bar.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Header-Bar" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Header-Bar" #f 47 7 47 17 ("Container")
        {Lisp-Entry "flat?" #f 50 12 50 17 ("set-flat?" "get-flat?")}
        {Lisp-Entry "shown?" #f 51 12 51 18 ("set-shown?" "get-shown?")}
        {Lisp-Entry "style" #f 52 12 52 17 ("set-style" "get-style")}
        {Lisp-Entry "client" #f 55 8 55 14 ()}
        {Lisp-Entry "get-flat?" #f 63 18 63 27 ("flat?")}
        {Lisp-Entry "set-flat?" #f 67 18 67 27 ("layout-view" "set!" "flat?" "neq?" "when" "value")}
        {Lisp-Entry "get-shown?" #f 73 18 73 28 ("shown?")}
        {Lisp-Entry "set-shown?" #f 77 18 77 28 ("layout-view" "set!" "shown?" "neq?" "when" "value")}
        {Lisp-Entry "get-style" #f 83 18 83 27 ("style")}
        {Lisp-Entry "set-style" #f 87 18 87 27 ("style" "set!" "value")}
        {Lisp-Entry "flat-look?" #f 96 11 96 21 ("flat?" "else" "document/header/flat?" "'document/header/flat?" "document" "tool/header/flat?" "'tool/header/flat?" "get-look" "get-element" "tool" "style" "case")}
        {Lisp-Entry "get-client" #f 108 18 108 28 ("client")}
        {Lisp-Entry "set-client" #f 112 18 112 28 ("client" "set!" "clt")}
        {Lisp-Entry "layout" #f 121 11 121 17 ("content-size" "set-size" "content-position" "set-position" "get-size" "size" "when" "get-content" "content" "let")}
        {Lisp-Entry "content-position" #f 129 11 129 27 ("get-header-height" "0" "Point" "new" "size")}
        {Lisp-Entry "content-size" #f 133 11 133 23 ("get-header-height" "get-height" "-" "get-width" "Dimension" "new" "size")}
        {Lisp-Entry "get-header-height" #f 139 26 139 43 ("0" "16" "15" "flat?" "shown?" "if")}
        {Lisp-Entry "get-row-instance" #f 148 11 148 27 ("nextmethod" "else" "Boolean-Row" "new" "shown?" "flat?" "field-name" "case" "property")}}}})
"Header-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Header-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Header-View" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Header-View" #f 47 7 47 18 ("Container")
        {Lisp-Entry "flat?" #f 50 12 50 17 ("set-flat?" "get-flat?")}
        {Lisp-Entry "shown?" #f 51 12 51 18 ("set-shown?" "get-shown?")}
        {Lisp-Entry "style" #f 52 12 52 17 ("set-style" "get-style")}
        {Lisp-Entry "client" #f 55 8 55 14 ()}
        {Lisp-Entry "default-name" #f 58 11 58 23 ("header" "'header")}
        {Lisp-Entry "get-flat?" #f 67 18 67 27 ("flat?")}
        {Lisp-Entry "set-flat?" #f 71 18 71 27 ("layout-view" "set!" "flat?" "neq?" "when" "value")}
        {Lisp-Entry "get-shown?" #f 77 18 77 28 ("shown?")}
        {Lisp-Entry "set-shown?" #f 81 18 81 28 ("layout-view" "set!" "shown?" "neq?" "when" "value")}
        {Lisp-Entry "get-style" #f 87 18 87 27 ("style")}
        {Lisp-Entry "set-style" #f 91 18 91 27 ("style" "set!" "value")}
        {Lisp-Entry "flat-look?" #f 100 11 100 21 ("flat?" "else" "document/header/flat?" "'document/header/flat?" "document" "tool/header/flat?" "'tool/header/flat?" "get-look" "get-element" "tool" "style" "case")}
        {Lisp-Entry "get-client" #f 112 18 112 28 ("client")}
        {Lisp-Entry "set-client" #f 116 18 116 28 ("client" "set!" "clt")}
        {Lisp-Entry "layout" #f 125 11 125 17 ("content-size" "set-size" "content-position" "set-position" "get-size" "size" "when" "get-content" "content" "let")}
        {Lisp-Entry "content-position" #f 133 11 133 27 ("get-header-height" "0" "Point" "new" "size")}
        {Lisp-Entry "content-size" #f 137 11 137 23 ("get-header-height" "get-height" "-" "get-width" "Dimension" "new" "size")}
        {Lisp-Entry "get-header-height" #f 143 26 143 43 ("0" "16" "15" "flat?" "shown?" "if")}
        {Lisp-Entry "get-row-instance" #f 152 11 152 27 ("nextmethod" "else" "Boolean-Row" "new" "shown?" "flat?" "field-name" "case" "property")}}}})
"History-Document-Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "history" "History-Document-Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.history.History-Document-Item" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "History-Document-Item" #f 45 7 45 28 ("History-Item")
        {Lisp-Entry "document" #f 48 8 48 16 ()}
        {Lisp-Entry "selection" #f 49 8 49 17 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("selection~self" "document~self" "set!" "nextmethod" "selection" "document")}
        {Lisp-Entry "valid?" #f 58 11 58 17 ("document" "get-guest")}
        {Lisp-Entry "open-item" #f 62 11 62 20 ("bring-to-front" "selection" "document" "get-guest" "set-selection")}
        {Lisp-Entry "present" #f 67 11 67 18 ("document" "get-guest" "get-controller" "name-status")}}}})
"History-File-Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "history" "History-File-Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.history.History-File-Item" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "History-File-Item" #f 45 7 45 24 ("History-Item")
        {Lisp-Entry "file" #f 48 8 48 12 ()}
        {Lisp-Entry "selection" #f 49 8 49 17 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("selection~self" "file~self" "set!" "nextmethod" "selection" "file")}
        {Lisp-Entry "open-item" #f 58 11 58 20 ("selection" "selection:" "file" "get-application" "edit-document")}
        {Lisp-Entry "present" #f 62 11 62 18 ("file" "get-name")}}}})
"History-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "history" "History-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.history.History-Menu" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "History-Menu" #f 47 7 47 19 ("Context-Menu")
        {Lisp-Entry "manager" #f 50 12 50 19 ("generate")}
        {Lisp-Entry "direction" #f 51 12 51 21 ("generate")}
        {Lisp-Entry "finish" #f 59 11 59 17 ("direction" "manager" "get-history" "increase!" "rank:" "list" "properties:" "on-action" "'on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "present" "title" "item" "function" "for-each" "0" "rank" "let" "nextmethod" "rest")}
        {Lisp-Entry "on-action" #f 74 11 74 20 ("go-forward-history" "forward" "manager" "go-backward-history" "backward" "direction" "case" "rank:" "get-property" "rank" "get-application" "appl" "let" "evt")}}}})
"History-Search-Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "History-Search-Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.History-Search-Item" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "History-Search-Item" #f 45 7 45 26 ("History-Item")
        {Lisp-Entry "mode" #f 48 18 48 22 ()}
        {Lisp-Entry "domain" #f 49 18 49 24 ()}
        {Lisp-Entry "targets" #f 50 18 50 25 ()}
        {Lisp-Entry "whole-words?" #f 51 18 51 30 ()}
        {Lisp-Entry "ignore-case?" #f 52 18 52 30 ()}
        {Lisp-Entry "preserve-case?" #f 53 18 53 32 ()}
        {Lisp-Entry "play-recording?" #f 54 18 54 33 ()}
        {Lisp-Entry "expression?" #f 55 18 55 29 ()}
        {Lisp-Entry "content" #f 56 18 56 25 ()}
        {Lisp-Entry "selection" #f 57 18 57 27 ()}
        {Lisp-Entry "initialize" #f 60 11 60 21 ("selection~self" "content~self" "expression?~self" "play-recording?~self" "preserve-case?~self" "ignore-case?~self" "whole-words?~self" "targets~self" "domain~self" "mode~self" "set!" "nextmethod" "selection" "content" "expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "targets" "domain" "mode")}
        {Lisp-Entry "open-item" #f 74 11 74 20 ("select-results" "set-visible?" "bring-to-front" "self" "install-history-item" "get-application" "get-search-manager" "search" "let")}
        {Lisp-Entry "present" #f 82 11 82 18 ("format" "null?" "if" "targets" "caar" "target" "let")}}}})
"Horizontal-Line"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Horizontal-Line.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Horizontal-Line" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Horizontal-Line" #f 47 7 47 22 ("View")
        {Lisp-Entry "default-size" #f 50 11 50 23 ("8" "100" "Dimension")}
        {Lisp-Entry "draw" #f 59 11 59 15 ("top" "edges:" "sunken" "'sunken" "outer:" "raised" "'raised" "inner:" "2" "0" "Rect" "new" "draw-edge" "Medium" "name:" "Color" "color" "get-width" "width" "let" "lv" "lh" "context" "surface")}}}})
"Host-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Host-View.jazz"} 1245732655
    {Lisp-Entry "jazz.ui.hosting.Host-View" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Host-View" #f 48 7 48 16 ("Medium" "name:" "Color" "background:" "View")
        {Lisp-Entry "content" #f 55 12 55 19 ("set-content" "get-content")}
        {Lisp-Entry "guest" #f 56 12 56 17 ("set-guest" "get-guest")}
        {Lisp-Entry "focused" #f 59 8 59 15 ()}
        {Lisp-Entry "destroy-component" #f 62 11 62 28 ("nextmethod" "close-guest")}
        {Lisp-Entry "close-guest" #f 67 11 67 22 ("close" "set-guest" "view" "let" "guest" "when")}
        {Lisp-Entry "get-content" #f 79 18 79 29 ("content")}
        {Lisp-Entry "set-content" #f 83 18 83 29 ("layout-view" "set!" "content" "neq?" "when" "view")}
        {Lisp-Entry "get-guest" #f 89 18 89 27 ("guest")}
        {Lisp-Entry "set-guest" #f 93 18 93 27 ("install-guest" "set!" "content" "not" "uninstall-guest" "guest" "neq?" "when" "view")}
        {Lisp-Entry "mouse-activate?" #f 109 11 109 26 ()}
        {Lisp-Entry "mouse-activate" #f 113 26 113 40 ("focus-host")}
        {Lisp-Entry "layout" #f 122 11 122 17 ("get-size" "set-size" "0" "Point" "new" "set-position" "content" "when")}
        {Lisp-Entry "invalidate-caption" #f 133 26 133 44 ()}
        {Lisp-Entry "get-host" #f 142 11 142 19 ("self")}
        {Lisp-Entry "install-guest" #f 151 11 151 24 ("install-tools" "install-in-host" "set-visible?" "get-size" "set-size" "0" "Point" "set-position" "self" "guest" "set-parent")}
        {Lisp-Entry "uninstall-guest" #f 160 11 160 26 ("close" "self" "guest" "uninstall-from-host")}
        {Lisp-Entry "get-focused" #f 170 18 170 29 ("focused")}
        {Lisp-Entry "set-focused" #f 174 18 174 29 ("focused" "set!" "view")}
        {Lisp-Entry "focus-host" #f 178 18 178 28 ("acquire-focus" "else" "focus-default" "guest" "reactivate-focused" "focused" "cond")}
        {Lisp-Entry "activate-focus" #f 187 26 187 40 ("host-activate" "get-guest-actions" "get-application" "set-guest-actions" "guest" "when")}
        {Lisp-Entry "deactivate-focus" #f 193 26 193 42 ("host-deactivate" "guest" "get-application" "set-guest-actions" "focus-master" "focused" "set!" "self" "get-host" "eq?" "and" "when" "get-focus" "focus" "let")}
        {Lisp-Entry "focus-default" #f 202 11 202 24 ()}
        {Lisp-Entry "reactivate-focused" #f 206 21 206 39 ("acquire-focus" "focused" "when")}
        {Lisp-Entry "view-destroyed" #f 211 21 211 35 ("set!" "focused" "eq?" "when" "view")}
        {Lisp-Entry "install-tools" #f 221 29 221 42 ("layout-view")}}}})
"Hyperlink-Style"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Hyperlink-Style.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Hyperlink-Style" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Hyperlink-Style" #f 44 7 44 22 ("action" "initialize" "anchor" "highlight" "color" "font" "alignment" "Text-Style")
        {Lisp-Entry "fold-literal" #f 52 11 52 23 ("Hyperlink-Style" "'Hyperlink-Style" "fold-exemplar")}}}})
"Image"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "image" "Image.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.image.Image" #f 37 19 37 38 ("jazz")
      {Lisp-Entry "Image" #f 49 7 49 12 ("Object")
        {Lisp-Entry "icon" #f 52 8 52 12 ()}
        {Lisp-Entry "bitmap" #f 53 8 53 14 ()}
        {Lisp-Entry "metafile" #f 54 8 54 16 ()}
        {Lisp-Entry "portfolio" #f 55 8 55 17 ()}
        {Lisp-Entry "image-name" #f 56 8 56 18 ()}
        {Lisp-Entry "moniker" #f 57 8 57 15 ()}
        {Lisp-Entry "source" #f 58 8 58 14 ()}
        {Lisp-Entry "scaled?" #f 59 8 59 15 ()}
        {Lisp-Entry "scaling" #f 60 8 60 15 ("1.0")}
        {Lisp-Entry "cache?" #f 61 8 61 14 ()}
        {Lisp-Entry "handle" #f 62 8 62 14 ()}
        {Lisp-Entry "size" #f 63 8 63 12 ()}
        {Lisp-Entry "view-position" #f 64 8 64 21 ("0" "Point")}
        {Lisp-Entry "view-size" #f 65 8 65 17 ()}
        {Lisp-Entry "mode" #f 66 8 66 12 ()}
        {Lisp-Entry "initialize" #f 69 11 69 21 ("view-size~self" "view-position~self" "image-name~self" "portfolio~self" "cache?~self" "set!" "nextmethod" "view-size" "view-size:" "0" "Point" "view-position" "view-position:" "image-name" "image-name:" "portfolio" "portfolio:" "cache?" "cache?:")}
        {Lisp-Entry "get-bounds" #f 82 18 82 28 ("self" "error" "else" "rclBounds" "'rclBounds" "get" "RECT->rect" "scaling" "scale" "scaled?" "if" "bounds" "function" "proc" "GetEnhMetaFileHeader" "nSize" "'nSize" "set" "new" "header" "with" "ENHMETAHEADER" "size-of" "size" "let" "metafile" "cond" "get-bounds" "'get-bounds" "unimplemented")}
        {Lisp-Entry "get-size" #f 101 18 101 26 ("self" "error" "when" "else" "rect-height" "1" "rect-width" "+" "get-bounds" "bounds" "metafile" "BITMAP-bmHeight-ref" "BITMAP-bmWidth-ref" "Dimension" "new" "size-of-BITMAP" "'bitmap" "load-image" "handle" "either" "GetObject" "BITMAP-make" "info" "let" "bitmap" "size" "source" "cond" "error?" "error?:")}
        {Lisp-Entry "get-width" #f 122 18 122 27 ("get-size" "else" "get-width" "portfolio" "cond")}
        {Lisp-Entry "get-height" #f 127 18 127 28 ("get-size" "else" "get-height" "portfolio" "cond")}
        {Lisp-Entry "draw" #f 138 18 138 22 ("draw-image-aux" "get-v" "view-position" "get-h" "+" "let" "enabled?" "enabled?:" "style" "style:" "error?:" "get-size" "size" "size:" "v" "h" "context" "surface")}
        {Lisp-Entry "draw-image-aux" #f 144 21 144 35 ("cache?" "handle" "and" "draw-source" "source" "draw-image" "portfolio" "draw-metafile" "metafile" "draw-bitmap" "bitmap" "draw-icon" "icon" "cond" "enabled?" "style" "size" "v" "h" "context" "surface")}
        {Lisp-Entry "draw-icon" #f 153 11 153 20 ("draw-image" "'icon" "load-image" "handle" "either" "icon" "let" "size" "v" "h" "context" "surface")}
        {Lisp-Entry "draw-bitmap" #f 158 11 158 22 ("icon" "draw-image" "'bitmap" "load-image" "handle" "either" "bitmap" "let" "size" "v" "h" "surface")}
        {Lisp-Entry "draw-metafile" #f 163 11 163 24 ("metafile" "get-hdc" "PlayEnhMetaFile" "rect->RECT" "rect" "with" "get-bounds" "bounds" "let" "draw-metafile" "'draw-metafile" "unimplemented" "size" "v" "h" "surface")}
        {Lisp-Entry "draw-image" #f 171 11 171 21 ("enabled?:" "style:" "portfolio" "draw-image" "image-name" "when" "enabled?" "style" "size" "v" "h" "context" "surface")}
        {Lisp-Entry "draw-source" #f 176 11 176 22 ("else" "stretched" "0" "draw-positioned" "filled" "draw-tiled" "tiled" "draw-centered" "centered" "mode" "case" "size" "v" "h" "surface")}
        {Lisp-Entry "draw-source-bitmap" #f 185 11 185 29 ("NULL" "get-height" "size" "get-width" "get-hdc" "Imaging" "draw-HBITMAP" "handle" "when" "draw-source-bitmap" "'draw-source-bitmap" "unimplemented" "v" "h" "surface")}
        {Lisp-Entry "draw-centered" #f 192 11 192 24 ("get-v" "get-h" "draw-source-bitmap" "Black" "name:" "Color" "fill-rect" "0" "Rect" "new" "rect" "get-height" "get-width" ">" "or" "when" "view-size" "size" "center" "centered" "let" "v" "h" "surface")}
        {Lisp-Entry "draw-tiled" #f 201 11 201 21 ("size" "increase!" "draw-source-bitmap" "get-width" "view-size" "get-height" "<" "while" "0" "let" "v" "h" "surface")}
        {Lisp-Entry "draw-positioned" #f 211 11 211 26 ("get-v" "view-position" "get-h" "+" "draw-source-bitmap" "v" "h" "surface")}
        {Lisp-Entry "preload-image" #f 220 18 220 31 ("preload" "image-name" "portfolio" "and" "when")}
        {Lisp-Entry "get-scaled?" #f 230 18 230 29 ("scaled?")}
        {Lisp-Entry "set-scaled?" #f 234 18 234 29 ("scaled?" "set!" "value")}
        {Lisp-Entry "get-scaling" #f 238 18 238 29 ("scaling")}
        {Lisp-Entry "set-scaling" #f 242 18 242 29 ("scaling" "set!" "value")}
        {Lisp-Entry "get-mode" #f 251 18 251 26 ("mode")}
        {Lisp-Entry "set-mode" #f 255 18 255 26 ("force?:" "update-image" "stretched" "'stretched" "filled" "'filled" "eq?" "or" "set!" "old" "let" "mode" "neq?" "when" "md")}
        {Lisp-Entry "get-view-position" #f 264 18 264 35 ("view-position")}
        {Lisp-Entry "set-view-position" #f 268 18 268 35 ("view-position" "set!" "pos")}
        {Lisp-Entry "get-view-size" #f 272 18 272 31 ("view-size")}
        {Lisp-Entry "set-view-size" #f 276 18 276 31 ("view-size" "set!" "s")}
        {Lisp-Entry "get-icon" #f 280 18 280 26 ("icon")}
        {Lisp-Entry "set-icon" #f 284 18 284 26 ("icon" "set!" "icn")}
        {Lisp-Entry "get-portfolio" #f 288 18 288 31 ("portfolio")}
        {Lisp-Entry "set-portfolio" #f 292 18 292 31 ("portfolio" "set!" "pf")}
        {Lisp-Entry "get-image-name" #f 296 18 296 32 ("image-name")}
        {Lisp-Entry "set-image-name" #f 300 18 300 32 ("image-name" "set!" "name")}
        {Lisp-Entry "get-bitmap" #f 304 18 304 28 ("bitmap")}
        {Lisp-Entry "set-bitmap" #f 308 18 308 28 ("'bitmap" "load-image" "DeleteObject" "handle" "cache?" "when" "bitmap" "set!" "set-bitmap" "'set-bitmap" "unimplemented" "b")}
        {Lisp-Entry "get-handle" #f 320 18 320 28 ("handle")}
        {Lisp-Entry "set-handle" #f 324 18 324 28 ("handle" "set!" "hnd")}
        {Lisp-Entry "get-source" #f 328 18 328 28 ("source")}
        {Lisp-Entry "set-source" #f 332 18 332 28 ("load-image-source" "DeleteObject" "handle" "when" "source" "set!" "set-source" "'set-source" "unimplemented" "file")}
        {Lisp-Entry "get-moniker" #f 343 18 343 29 ("source" "bitmap" "moniker" "either")}
        {Lisp-Entry "set-moniker" #f 347 18 347 29 ("set-source" "else" "load-metafile" "test:" "member?" "set-bitmap" "ci=?" "cond" "get-extension" "ext" "let" "moniker" "set!" "mnk")}
        {Lisp-Entry "load-metafile" #f 358 11 358 24 ("parse" "GetEnhMetaFile" "metafile" "set!" "load-metafile" "'load-metafile" "unimplemented" "moniker")}
        {Lisp-Entry "update-image" #f 364 18 364 30 ("source" "set-source" "stretched" "'stretched" "filled" "'filled" "mode" "eq?" "or" "when" "force?" "force?:")}
        {Lisp-Entry "load-image-source" #f 369 11 369 28 ("Dimension" "size" "handle" "source" "get-hdc" "NULL" "RGB->HBITMAP" "bmp" "get-desktop" "Client-Surface" "new" "compatibility-dc" "with-closed" "fxround" ">" "ratio" "rh" "/" "rw" "stretched" "set!" "heap-free" "resize-RGB" "3" "*" "heap-alloc" "resized-rgb" "get-height" "nh" "get-width" "nw" "let*" "filled" "mode" "case" "view-size" "when" "error" "not" "if" "Imaging" "close-source" "read-source" "h" "w" "rgb" "receive" "open-source" "src" "let" "load-image-source" "'load-image-source" "unimplemented" "file")}
        {Lisp-Entry "open-source" #f 408 11 408 22 ("length" "get-handle" "open-memory-source" "Ansi-String" "parse" "coerce" "Imaging" "open-file-source" "file?" "if" "open-source" "'open-source" "unimplemented" "source")}
        {Lisp-Entry "read-source" #f 416 11 416 22 ("read-TIFF->RGB" "tiff" "read-JPG->RGB" "jpg" "read-PNG->RGB" "png" "Imaging" "read-BMP->RGB" "bmp" "source-type" "case" "read-source" "'read-source" "unimplemented" "src" "source")}
        {Lisp-Entry "source-type" #f 426 11 426 22 ("error" "else" "tiff" "'tiff" "jpg" "'jpg" "test:" "member?" "png" "'png" "bmp" "'bmp" "ci=?" "cond" "get-extension" "ext" "let" "file?" "if" "source")}}}})
"Image-Browser"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "image" "Image-Browser.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.image.Image-Browser" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Image-Browser" #f 50 7 50 20 ("toplevel-controls?:" "419" "width:" "title:" "tree" "header" "content" "vscroll?:" "hscroll?:" "document" "style:" "scroller" "on-select-directory" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "Dimension" "size:" "select" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "directory" #f 53 8 53 17 ()}
        {Lisp-Entry "external-name" #f 68 16 68 29 ("images-browser" "'images-browser" "rest")}
        {Lisp-Entry "on-select-directory" #f 72 11 72 30 ("update-images" "choose-directory" "directory" "set!" "evt")}
        {Lisp-Entry "update-images" #f 77 11 77 24 ("recursive?:" "directories?:" "files?:" "load-image" "image-file?" "when" "file" "directory" "iterate-directory" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "image-file?" #f 90 11 90 22 ("ci=?" "test:" "get-extension" "member?" "file")}
        {Lisp-Entry "load-image" #f 95 11 95 21 ("image:" "title:" "Tree-Node" "list" "children:" "add-row" "Resource" "new" "image" "get-base" "name" "let*" "file" "tree")}
        {Lisp-Entry "host-icon" #f 106 16 106 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 110 16 110 26 ()}
        {Lisp-Entry "get-tools-view" #f 119 11 119 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" #f 123 11 123 24 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" #f 133 11 133 19 ("tree" "'tree" "locate")}
        {Lisp-Entry "install" #f 142 11 142 18 ("header" "'header" "locate" "set-shown?" "nextmethod" "rest")}}}})
"Image-Style"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Image-Style.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Image-Style" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Image-Style" #f 46 7 46 18 ("Style")
        {Lisp-Entry "properties" #f 49 14 49 24 ("scaling:" "scaled?:" "image-name:" "portfolio:" "moniker:" "alignment:")}
        {Lisp-Entry "image" #f 58 8 58 13 ("Image" "new")}
        {Lisp-Entry "scaled?" #f 59 8 59 15 ()}
        {Lisp-Entry "scaling" #f 60 8 60 15 ("1.0")}
        {Lisp-Entry "get-value" #f 63 11 63 20 ("nextmethod" "else" "get-scaling" "scaling:" "get-scaled?" "scaled?:" "get-image-name" "image-name:" "get-portfolio" "portfolio:" "image" "get-moniker" "moniker:" "case" "property")}
        {Lisp-Entry "set-value" #f 73 11 73 20 ("nextmethod" "else" "set-scaling" "scaling:" "set-scaled?" "scaled?:" "set-image-name" "image-name:" "set-portfolio" "portfolio:" "image" "set-moniker" "moniker:" "case" "value" "property")}
        {Lisp-Entry "get-image" #f 88 18 88 27 ("image")}
        {Lisp-Entry "get-width" #f 97 11 97 20 ("image" "get-width")}
        {Lisp-Entry "get-height" #f 101 11 101 21 ("image" "get-height")}
        {Lisp-Entry "run-width" #f 105 11 105 20 ("get-width" "run")}
        {Lisp-Entry "propagate?" #f 114 11 114 21 ()}
        {Lisp-Entry "wrap" #f 123 11 123 15 ("get-width" "+" "run" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "draw-style" #f 133 11 133 21 ("+" "image" "draw" "justify-element" "top" "get-height" "height" "get-width" "width" "let*" "enabled?" "left" "tabs" "line-height" "v" "h" "string" "context" "surface")}}}})
"Image-Tool"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Image-Tool.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Image-Tool" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Image-Tool" #f 45 7 45 17 ("Tool-Button")
        {Lisp-Entry "portfolio" #f 48 12 48 21 ("set-portfolio" "get-portfolio")}
        {Lisp-Entry "image-name" #f 49 12 49 22 ("set-image-name" "get-image-name")}
        {Lisp-Entry "disabled-image-name" #f 50 12 50 31 ("set-disabled-image-name" "get-disabled-image-name")}
        {Lisp-Entry "image" #f 53 8 53 13 ("2" "Point" "view-position:" "Image" "new")}
        {Lisp-Entry "disabled-image" #f 54 8 54 22 ("2" "Point" "view-position:" "Image" "new")}
        {Lisp-Entry "get-portfolio" #f 62 18 62 31 ("image" "get-portfolio")}
        {Lisp-Entry "set-portfolio" #f 66 18 66 31 ("invalidate-view" "disabled-image" "image" "set-portfolio" "child" "Portfolio" "is?" "if" "let" "portfolio")}
        {Lisp-Entry "get-image-name" #f 73 18 73 32 ("image" "get-image-name")}
        {Lisp-Entry "set-image-name" #f 77 18 77 32 ("invalidate-view" "image" "set-image-name" "default-disabled-resource" "set-disabled-image-name" "get-disabled-image-name" "not" "when" "name")}
        {Lisp-Entry "get-disabled-image-name" #f 84 18 84 41 ("disabled-image" "get-image-name")}
        {Lisp-Entry "set-disabled-image-name" #f 88 18 88 41 ("invalidate-view" "disabled-image" "set-image-name" "name")}
        {Lisp-Entry "preload-images" #f 93 18 93 32 ("disabled-image" "image" "preload-image")}
        {Lisp-Entry "draw-tool" #f 103 11 103 20 ("enabled?:" "image" "disabled-image" "draw" "not" "get-enabled?" "enabled?" "1" "2" "pushed" "'pushed" "get-state" "eq?" "if" "offset" "let" "context" "surface")}}}})
"Image-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "image" "Image-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.image.Image-View" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Image-View" #f 50 7 50 17 ("Document" "View")
        {Lisp-Entry "icon" #f 53 12 53 16 ("set-icon" "get-icon")}
        {Lisp-Entry "portfolio" #f 54 12 54 21 ("set-portfolio" "get-portfolio")}
        {Lisp-Entry "image-name" #f 55 12 55 22 ("set-image-name" "get-image-name")}
        {Lisp-Entry "moniker" #f 56 12 56 19 ("set-moniker" "get-moniker")}
        {Lisp-Entry "view-position" #f 57 12 57 25 ("set-view-position" "get-view-position" "0" "Point")}
        {Lisp-Entry "view-size" #f 58 12 58 21 ("set-view-size" "get-view-size")}
        {Lisp-Entry "mode" #f 59 12 59 16 ("set-mode" "get-mode")}
        {Lisp-Entry "image" #f 62 8 62 13 ("Image" "new")}
        {Lisp-Entry "dragging?" #f 63 8 63 17 ()}
        {Lisp-Entry "base-position" #f 64 8 64 21 ()}
        {Lisp-Entry "controller" #f 65 8 65 18 ()}
        {Lisp-Entry "save-content" #f 68 11 68 23 ("moniker")}
        {Lisp-Entry "default-extension" #f 69 11 69 28 ()}
        {Lisp-Entry "extensions" #f 70 11 70 21 ()}
        {Lisp-Entry "focus-document" #f 71 11 71 25 ()}
        {Lisp-Entry "current-history-item" #f 72 11 72 31 ()}
        {Lisp-Entry "compare-moniker" #f 73 11 73 26 ("moniker")}
        {Lisp-Entry "external-name" #f 76 16 76 29 ("image-view" "'image-view" "rest")}
        {Lisp-Entry "destroy" #f 80 11 80 18 ("nextmethod" "image" "close" "controller" "when")}
        {Lisp-Entry "install-in-host" #f 92 11 92 26 ("centered" "'centered" "set-mode" "set-view-size" "set-size" "get-size" "size" "let" "nextmethod" "host")}
        {Lisp-Entry "size-change" #f 100 11 100 22 ("update-image" "set-view-size" "nextmethod" "size")}
        {Lisp-Entry "host-workspaces" #f 106 11 106 26 ("image")}
        {Lisp-Entry "get-controller" #f 115 11 115 25 ("new-controller" "set!" "controller" "unless")}
        {Lisp-Entry "new-controller" #f 121 11 121 25 ("self" "Document-Controller" "new")}
        {Lisp-Entry "install-scroller?" #f 125 11 125 28 ()}
        {Lisp-Entry "get-moniker" #f 129 11 129 22 ("get-controller" "get-moniker")}
        {Lisp-Entry "set-moniker" #f 133 11 133 22 ("get-controller" "image" "set-moniker" "moniker")}
        {Lisp-Entry "load-content" #f 138 11 138 23 ("invalidate-view" "image" "set-moniker" "moniker")}
        {Lisp-Entry "verify-reload" #f 143 11 143 24 ()}
        {Lisp-Entry "reload-moniker" #f 147 11 147 25 ("moniker")}
        {Lisp-Entry "get-modified?" #f 151 11 151 24 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 155 11 155 24 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "update-status" #f 159 11 159 24 ("get-controller" "update-status")}
        {Lisp-Entry "update-moniker-time" #f 163 11 163 30 ("get-controller" "update-moniker-time" "moniker")}
        {Lisp-Entry "tool-update" #f 167 11 167 22 ("tool?")}
        {Lisp-Entry "console-update" #f 171 11 171 25 ("console?")}
        {Lisp-Entry "scrollee-size" #f 180 11 180 24 ("error?:" "image" "get-size")}
        {Lisp-Entry "draw" #f 189 11 189 15 ("0" "draw-at" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-at" #f 193 29 193 36 ("draw-image" "get-size" "size" "size:" "v" "h" "context" "surface")}
        {Lisp-Entry "draw-image" #f 197 11 197 21 ("image" "draw" "enabled?" "enabled?:" "get-size" "size" "size:" "v" "h" "context" "surface")}
        {Lisp-Entry "mouse-down" #f 206 11 206 21 ("acquire-capture" "base-position" "dragging?" "set!" "scroller" "when" "pos")}
        {Lisp-Entry "drag-move" #f 213 11 213 20 ("get-v" "get-h" "move-figure" "base-position" "-" "delta" "let" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 219 11 219 18 ("set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "get-icon" #f 230 18 230 26 ("image" "get-icon")}
        {Lisp-Entry "set-icon" #f 234 18 234 26 ("invalidate-view" "image" "set-icon" "icn")}
        {Lisp-Entry "get-portfolio" #f 239 18 239 31 ("image" "get-portfolio")}
        {Lisp-Entry "set-portfolio" #f 243 18 243 31 ("invalidate-view" "child" "Portfolio" "is?" "if" "image" "set-portfolio" "pf")}
        {Lisp-Entry "get-image-name" #f 248 18 248 32 ("image" "get-image-name")}
        {Lisp-Entry "set-image-name" #f 252 18 252 32 ("invalidate-view" "image" "set-image-name" "name")}
        {Lisp-Entry "get-view-position" #f 257 18 257 35 ("image" "get-view-position")}
        {Lisp-Entry "set-view-position" #f 261 18 261 35 ("invalidate-view" "image" "set-view-position" "pos")}
        {Lisp-Entry "get-view-size" #f 266 18 266 31 ("image" "get-view-size")}
        {Lisp-Entry "set-view-size" #f 270 18 270 31 ("invalidate-view" "image" "set-view-size" "s")}
        {Lisp-Entry "get-mode" #f 275 18 275 26 ("mode")}
        {Lisp-Entry "set-mode" #f 279 18 279 26 ("update-image" "image" "set-mode" "md")}
        {Lisp-Entry "set-handle" #f 284 18 284 28 ("invalidate-view" "image" "set-handle" "handle")}
        {Lisp-Entry "cursor-update" #f 294 11 294 24 (":arrow" ":finger" "scroller" "if" "set-cursor" "pos")}
        {Lisp-Entry "get-context-menu" #f 298 11 298 27 ("Image-Menu" "new")}
        {Lisp-Entry "on-change-mode" #f 302 11 302 25 ("update-image" "get-sender" "get-name" "image" "set-mode" "evt")}
        {Lisp-Entry "update-image" #f 307 18 307 30 ("invalidate-view" "image" "update-image")}
        {Lisp-Entry "save-session" #f 317 11 317 23 ("Opened-Windows" "'Opened-Windows" "properties" "push-property" "get-size" "size:" "get-position" "position:" "get-moniker" "moniker:" "external-name" "list" "info" "get-host" "host" "let*")}
        {Lisp-Entry "preload-image" #f 333 18 333 31 ("image" "preload-image")}
        {Lisp-Entry "get-row-instance" #f 342 11 342 27 ("nextmethod" "else" "String-Row" "new" "image-name" "field-name" "case" "property")}}
      {Lisp-Entry "Image-Menu" #f 353 7 353 17 ("stretched" "filled" "tiled" "on-change-mode" ":focus" "Event-Handler" "action-handler:" "title:" "centered" "name:" "Context-Menu")}}})
"Info-Style"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Info-Style.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Info-Style" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Info-Style" #f 46 7 46 17 ("initialize" "what" "highlight" "color" "font" "alignment" "Text-Style")
        {Lisp-Entry "get-width" #f 58 11 58 20 ("16")}
        {Lisp-Entry "get-context-width" #f 62 11 62 28 ("get-width" "info-value" "->string" "font" "text-width" ":printing?" "getf" "if" "context")}
        {Lisp-Entry "propagate?" #f 73 11 73 21 ()}
        {Lisp-Entry "scan" #f 82 11 82 15 ("default-scan" "proc" "run" "tabs" "end" "start" "h")}
        {Lisp-Entry "wrap" #f 91 11 91 15 ("get-context-width" "+" "run" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "info-icon" #f 101 11 101 20 ("time" "date" "count" "no" "Bitmap-Resource" "filename" "what" "case")}
        {Lisp-Entry "info-value" #f 110 11 110 21 ("print-time:" "time" "print-date:" "date" "page-count:" "count" "page-no:" "1" "+" "no" "filename:" "getf" "filename" "what" "case" "context")}
        {Lisp-Entry "draw-style" #f 124 11 124 21 ("+" "get-application" "get-icons-cache" "draw-image" "info-icon" "icon" "16" "justify-element" "top" "get-width" "width" "let" "info-value" "->string" "nextmethod" "printing?:" "getf" "if" "enabled?" "left" "tabs" "line-height" "v" "h" "string" "context" "surface")}}}})
"Interface-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Interface-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Interface-Preferences" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "Interface-Preferences" #f 46 7 46 28 ("print" "tree" "name:" "title:" "Preferences")
        {Lisp-Entry "can-rename-component?" #f 60 11 60 32 ()}
        {Lisp-Entry "can-delete-component?" #f 64 11 64 32 ()}
        {Lisp-Entry "can-move-component?" #f 68 11 68 30 ()}
        {Lisp-Entry "can-copy-component?" #f 72 11 72 30 ()}
        {Lisp-Entry "get-categorized-properties" #f 76 11 76 37 ()}}}})
"Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Item" #f 37 19 37 36 ("jazz")
      {Lisp-Entry "Item" #f 45 7 45 11 ("View")
        {Lisp-Entry "prefix-width" #f 48 8 48 20 ("0")}
        {Lisp-Entry "icon-width" #f 49 8 49 18 ("0")}
        {Lisp-Entry "body-width" #f 50 8 50 18 ("0")}
        {Lisp-Entry "shortcut-width" #f 51 8 51 22 ("0")}
        {Lisp-Entry "arrow-width" #f 52 8 52 19 ("0")}
        {Lisp-Entry "in?" #f 53 8 53 11 ()}
        {Lisp-Entry "set-prefix-width" #f 61 18 61 34 ("prefix-width" "set!" "width")}
        {Lisp-Entry "set-icon-width" #f 65 18 65 32 ("icon-width" "set!" "width")}
        {Lisp-Entry "set-body-width" #f 69 18 69 32 ("body-width" "set!" "width")}
        {Lisp-Entry "set-shortcut-width" #f 73 18 73 36 ("shortcut-width" "set!" "width")}
        {Lisp-Entry "set-arrow-width" #f 77 18 77 33 ("arrow-width" "set!" "width")}
        {Lisp-Entry "get-menubar" #f 86 11 86 22 ("Menubar" "find-ascendant")}
        {Lisp-Entry "preferred-prefix-width" #f 95 26 95 48 ("0")}
        {Lisp-Entry "preferred-icon-width" #f 99 26 99 46 ("0")}
        {Lisp-Entry "preferred-body-width" #f 103 26 103 46 ("0")}
        {Lisp-Entry "preferred-shortcut-width" #f 107 26 107 50 ("0")}
        {Lisp-Entry "preferred-arrow-width" #f 111 26 111 47 ("0")}
        {Lisp-Entry "preferred-height" #f 115 26 115 42 ("preferred-size" "get-height")}
        {Lisp-Entry "layout-menu" #f 119 21 119 32 ("layout-menu" "Menu" "parent" "is?" "when")}
        {Lisp-Entry "mouse-enter" #f 129 11 129 22 ("invalidate-view" "when" "popup-initiator" "initiator" "let" "redraw-view" "in?" "set!")}
        {Lisp-Entry "mouse-leave" #f 137 11 137 22 ("redraw-view" "in?" "set!")}
        {Lisp-Entry "poped?" #f 147 21 147 27 ("self" "popup-initiator" "eq?" "and" "parent" "get-poped" "poped" "let")}
        {Lisp-Entry "poped-tool" #f 152 21 152 31 ("get-player" "self" "popup-initiator" "eq?" "and" "when" "parent" "get-poped" "poped" "let")}
        {Lisp-Entry "close-other-popups" #f 158 21 158 39 ("poped-tool" "list" "exclude:" "close-popups" "poped?" "if")}}}})
"Keyboard-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Keyboard-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Keyboard-Event" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Keyboard-Event" #f 44 7 44 21 ("Event")
        {Lisp-Entry "key" #f 47 8 47 11 ()}
        {Lisp-Entry "initialize" #f 50 11 50 21 ("key" "set!" "nextmethod" "k" "sender" "kind")}
        {Lisp-Entry "print" #f 55 11 55 16 ("key" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-key" #f 61 18 61 25 ("key")}}}})
"Label-Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Label-Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Label-Item" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Label-Item" #f 48 7 48 17 ("Item")
        {Lisp-Entry "icon" #f 51 12 51 16 ("set-icon" "get-icon")}
        {Lisp-Entry "disabled-icon" #f 52 12 52 25 ("set-disabled-icon" "get-disabled-icon")}
        {Lisp-Entry "shortcut" #f 53 12 53 20 ("set-shortcut" "get-shortcut")}
        {Lisp-Entry "default?" #f 54 12 54 20 ("set-default?" "get-default?")}
        {Lisp-Entry "content" #f 57 8 57 15 ()}
        {Lisp-Entry "mouse-activate?" #f 60 11 60 26 ()}
        {Lisp-Entry "component-alias" #f 69 11 69 26 ("nextmethod" "else" "content" "case" "name")}
        {Lisp-Entry "shortcut-update" #f 80 11 80 26 ("get-shortcut" "set-shortcut" "action-item")}
        {Lisp-Entry "add-child" #f 89 11 89 20 ("content" "set!" "child")}
        {Lisp-Entry "get-content" #f 93 18 93 29 ("content")}
        {Lisp-Entry "get-title" #f 102 11 102 20 ("get-title" "content" "when" "title" "either")}
        {Lisp-Entry "get-icon" #f 108 18 108 26 ("icon")}
        {Lisp-Entry "set-icon" #f 112 18 112 26 ("layout-menu" "icon" "set!" "icn")}
        {Lisp-Entry "get-disabled-icon" #f 117 18 117 35 ("disabled-icon")}
        {Lisp-Entry "set-disabled-icon" #f 121 18 121 35 ("layout-menu" "disabled-icon" "set!" "icn")}
        {Lisp-Entry "get-shortcut" #f 126 18 126 30 ("shortcut")}
        {Lisp-Entry "set-shortcut" #f 130 18 130 30 ("layout-menu" "shortcut" "set!" "shc")}
        {Lisp-Entry "get-default?" #f 135 18 135 30 ("default?")}
        {Lisp-Entry "set-default?" #f 139 18 139 30 ("default?" "set!" "value")}
        {Lisp-Entry "default-size" #f 148 11 148 23 ("17" "100" "Dimension")}
        {Lisp-Entry "preferred-icon-width" #f 152 11 152 31 ("0" "16" "+" "icon" "if" "4" "left" "let")}
        {Lisp-Entry "preferred-body-width" #f 157 11 157 31 ("get-width" "+" "10" "6" "menubar-label?" "if" "left" "text-extent" "extent" "get-title" "localize" "title" "effective-font" "font" "let*")}
        {Lisp-Entry "preferred-shortcut-width" #f 165 11 165 35 ("get-width" "+" "12" "right" "6" "left" "present-shortcut" "text-extent" "extent" "effective-font" "font" "let*" "0" "shortcut" "not" "if")}
        {Lisp-Entry "preferred-arrow-width" #f 175 11 175 32 ("0" "10" "menubar-label?" "not" "content" "and" "if")}
        {Lisp-Entry "preferred-height" #f 181 11 181 27 ("4" "+" "font-height" "height" "get-title" "localize" "title" "effective-font" "font" "let*")}
        {Lisp-Entry "Label-Font" #f 193 14 193 24 ("Label" "name:" "Font")}
        {Lisp-Entry "Default-Label-Font" #f 196 14 196 32 ()}
        {Lisp-Entry "get-label-font" #f 200 11 200 25 ("Label-Font")}
        {Lisp-Entry "get-default-label-font" #f 203 11 203 33 ("Label-Font" "toggle-bold" "set!" "Default-Label-Font" "unless")}
        {Lisp-Entry "effective-font" #f 209 11 209 25 ("get-label-font" "get-default-label-font" "default?" "if")}
        {Lisp-Entry "draw" #f 213 11 213 15 ("draw-arrow" "draw-shortcut" "draw-body" "draw-icon" "draw-prefix" "draw-highlight" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-highlight" #f 222 11 222 25 ("Focused-Selection" "name:" "Color" "fill-rect" "rectangle" "'rectangle" "edges:" "sunken" "'sunken" "outer:" "raised" "'raised" "highlight-flag" "inner:" "draw-edge" "menubar-label?" "if" "get-bounds" "bounds" "let" "item-selected?" "when" "surface")}
        {Lisp-Entry "draw-prefix" #f 230 29 230 40 ("context" "surface")}
        {Lisp-Entry "draw-icon" #f 234 11 234 20 ("enabled?:" "0" "draw-image" "default-disabled-resource" "either" "disabled-icon" "let" "enabled?" "not" "if" "get-icons-cache" "portfolio" "9" "prefix-width" "+" "left" "get-application" "appl" "let*" "icon" "when" "context" "surface")}
        {Lisp-Entry "draw-body" #f 245 11 245 20 ("text-enabled?" "draw-text" "effective-font" "set-font" "text-color" "set-text-color" "2" "get-height" "quotient" "-" "v" "icon-width" "prefix-width" "+" "h" "1" "0" "top" "10" "6" "menubar-label?" "if" "left" "get-font-height" "height" "let*" "when" "get-title" "localize" "title" "let" "surface")}
        {Lisp-Entry "draw-shortcut" #f 258 11 258 24 ("text-enabled?" "draw-text" "2" "get-height" "quotient" "-" "v" "body-width" "icon-width" "prefix-width" "+" "h" "1" "top" "6" "left" "get-font-height" "height" "present-shortcut" "text" "let*" "shortcut" "when" "surface")}
        {Lisp-Entry "draw-arrow" #f 269 11 269 21 ("right" "'right" "4" "5" "10" "-" "draw-arrow-tip" "tip-color" "set-color" "get-width" "width" "let" "menubar-label?" "not" "content" "and" "when" "surface")}
        {Lisp-Entry "item-selected?" #f 276 11 276 25 ("get-player" "owned?" "self" "popup-initiator" "eq?" "in?" "or" "mouse-view" "view" "parent" "get-poped" "poped" "let" "surrogate" "not" "and")}
        {Lisp-Entry "menubar-label?" #f 287 11 287 25 ("Menubar" "parent" "is?")}
        {Lisp-Entry "in-menubar?" #f 291 11 291 22 ("Context-Menu" "parent" "is-not?")}
        {Lisp-Entry "highlight-flag" #f 295 11 295 25 ("parent" "get-poped" "eq?" "content" "and")}
        {Lisp-Entry "tip-color" #f 299 11 299 20 ("Black" "White" "name:" "Color" "item-selected?" "if")}
        {Lisp-Entry "text-enabled?" #f 303 11 303 24 ("item-selected?" "enabled?" "or")}
        {Lisp-Entry "text-color" #f 307 11 307 21 ("Black" "else" "White" "menubar-label?" "item-selected?" "and" "Dark" "name:" "Color" "enabled?" "not" "cond")}
        {Lisp-Entry "mouse-enter" #f 318 11 318 22 ("popup-content" "poped?" "close-other-popups" "if" "content" "popup-initiator" "invalidate-view" "track-hovering" "parent" "get-poped" "poped" "let" "unless" "nextmethod" "Label-Item" "mouse-down-view" "is?" "mouse-down?" "menubar-label?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-leave" #f 335 11 335 22 ("cancel-hovering" "menubar-label?" "not" "when" "nextmethod")}
        {Lisp-Entry "mouse-hover" #f 341 11 341 22 ("popup-content" "surrogate" "not" "content" "and" "when" "close-other-popups" "pos")}
        {Lisp-Entry "mouse-down" #f 347 11 347 21 ("popup-content" "neq?" "not" "or" "content" "and" "when" "list" "if" "exclude:" "close-popups" "menubar-label?" "menubar?" "parent" "get-poped" "poped" "let" "pos")}
        {Lisp-Entry "mouse-up" #f 355 11 355 19 ("self" "process-action" "enabled?" "when" "all?:" "player" "close-popups" "content" "unless" "pos")}
        {Lisp-Entry "popup-content" #f 367 11 367 24 ("popup-menu" "invalidate-view" "parent" "set-poped" "-2" "3" "get-width" "-" "get-height" "0" "Point" "new" "menubar-label?" "if" "position" "get-size" "size" "let*" "get-children" "when" "update" "get-content" "content" "let")}
        {Lisp-Entry "popup-menu" #f 378 11 378 21 ("-2" "2" "Point" "new" "alternate-position:" "close-root?:" "3.0" "fade-speed:" "Menu-Transient" "class:" "popup" "position" "menu")}
        {Lisp-Entry "close-popups" #f 382 11 382 23 ("invalidate-view" "nextmethod" "double-click" "mouse-down" "memq?" "unless" "exclude" "exclude:" "all?" "all?:" "event" "event:")}
        {Lisp-Entry "popup-destroy" #f 388 11 388 24 ("parent" "set-poped" "popup")}}}})
"Label-Tool"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Label-Tool.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Label-Tool" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Label-Tool" #f 47 7 47 17 ("Tool-Button")
        {Lisp-Entry "justification" #f 50 12 50 25 ("set-justification" "get-justification" "center" "'center")}
        {Lisp-Entry "color" #f 51 12 51 17 ("set-color" "get-color" "Black" "name:" "Color")}
        {Lisp-Entry "default-size" #f 54 11 54 23 ("20" "100" "Dimension")}
        {Lisp-Entry "get-justification" #f 63 18 63 35 ("justification")}
        {Lisp-Entry "set-justification" #f 67 18 67 35 ("invalidate-view" "justification" "set!" "value")}
        {Lisp-Entry "get-color" #f 72 18 72 27 ("color")}
        {Lisp-Entry "set-color" #f 76 18 76 27 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "draw-tool" #f 86 11 86 20 ("enabled?" "get-v" "get-h" "+" "draw-text" "color" "set-text-color" "center" "'center" "justification" "list" "get-size" "justify" "pos" "get-text-extent" "extent" "localize" "title" "let*" "0" "1" "pushed" "'pushed" "get-state" "eq?" "if" "offset" "let" "context" "surface")}}}})
"Label-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Label-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Label-View" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Label-View" #f 48 7 48 17 ("View")
        {Lisp-Entry "justification" #f 51 12 51 25 ("set-justification" "get-justification" "head" "'head")}
        {Lisp-Entry "color" #f 52 12 52 17 ("set-color" "get-color" "Black" "name:" "Color")}
        {Lisp-Entry "shadow?" #f 53 12 53 19 ("set-shadow?" "get-shadow?")}
        {Lisp-Entry "default-size" #f 56 11 56 23 ("16" "100" "Dimension")}
        {Lisp-Entry "get-justification" #f 65 18 65 35 ("justification")}
        {Lisp-Entry "set-justification" #f 69 18 69 35 ("invalidate-view" "justification" "set!" "value")}
        {Lisp-Entry "get-color" #f 74 18 74 27 ("color")}
        {Lisp-Entry "set-color" #f 78 18 78 27 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "get-shadow?" #f 83 18 83 29 ("shadow?")}
        {Lisp-Entry "set-shadow?" #f 87 18 87 29 ("invalidate-view" "shadow?" "set!" "value")}
        {Lisp-Entry "label-title" #f 97 29 97 40 ("title")}
        {Lisp-Entry "preferred-size" #f 106 11 106 25 ("16" "font" "text-width" "Dimension" "new" "default-size" "not" "if" "label-title" "localize" "title" "let")}
        {Lisp-Entry "draw" #f 118 11 118 15 ("Dark" "color" "enabled?" "get-v" "2" "get-h" "+" "draw-text" "Dark-Gray" "name:" "Color" "set-text-color" "shadow?" "when" "get-size" "justify" "pos" "center" "'center" "list" "pair?" "if" "justification" "get-text-extent" "extent" "label-title" "either" "localize" "title" "let*" "lv" "lh" "context" "surface")}
        {Lisp-Entry "property-presentation" #f 135 16 135 37 ("nextmethod" "else" "shadow?" "color" "justification" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 143 11 143 27 ("nextmethod" "else" "Boolean-Row" "shadow?" "Color-Row" "color" "Justification-Combo-Row" "new" "justification" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 152 11 152 37 ("auto-size?" "shadow?" "justification" "font" "size" "position" "color" "background" "title" "name-info" "class-info")}}
      {Lisp-Entry "Justification-Combo-Row" #f 164 7 164 30 ("Combo-Row")
        {Lisp-Entry "Justification-Choices" #f 167 14 167 35 ("tail" "center" "head")}
        {Lisp-Entry "initialize" #f 173 11 173 21 ("Justification-Choices" "set-choices" "nextmethod" "apply" "rest")}}}})
"Layout"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "layout" "Layout.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.layout.Layout" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Layout" #f 45 7 45 13 ("Component")
        {Lisp-Entry "layout" #f 48 26 48 32 ("rest" "height" "width" "figures")}}}})
"Layout-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Layout-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Layout-Text-View" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Layout-Text-View" #f 45 7 45 23 ("Formatted-Text-View")}}})
"Layout-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Layout-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Layout-View" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Layout-View" #f 46 7 46 18 ("View")
        {Lisp-Entry "layout-type" #f 61 12 61 23 ("set-layout-type" "get-layout-type")}
        {Lisp-Entry "layout-insets" #f 62 12 62 25 ("set-layout-insets" "get-layout-insets" "0" "Rect")}
        {Lisp-Entry "layout-justification" #f 63 12 63 32 ("set-layout-justification" "get-layout-justification" "center" "'center")}
        {Lisp-Entry "layout-padding" #f 64 12 64 26 ("set-layout-padding" "get-layout-padding" "0")}
        {Lisp-Entry "get-layout-type" #f 72 18 72 33 ("layout-type")}
        {Lisp-Entry "set-layout-type" #f 76 18 76 33 ("layout-view" "set!" "layout-type" "neq?" "when" "type")}
        {Lisp-Entry "get-layout-insets" #f 83 18 83 35 ("layout-insets")}
        {Lisp-Entry "set-layout-insets" #f 87 18 87 35 ("layout-view" "layout-type" "when" "layout-insets" "set!" "insets")}
        {Lisp-Entry "get-layout-justification" #f 93 18 93 42 ("layout-justification")}
        {Lisp-Entry "set-layout-justification" #f 97 18 97 42 ("layout-view" "layout-type" "when" "layout-justification" "set!" "just")}
        {Lisp-Entry "get-layout-padding" #f 103 18 103 36 ("layout-padding")}
        {Lisp-Entry "set-layout-padding" #f 107 18 107 36 ("layout-view" "layout-type" "when" "layout-padding" "set!" "pad")}
        {Lisp-Entry "inner?" #f 118 11 118 17 ("children" "memq?" "layout-type" "and" "view")}
        {Lisp-Entry "layout" #f 127 11 127 17 ("error" "else" "Flow-Layout" "flow" "self" "justification:" "Snap-Layout" "snap" "layout" "layout-padding" "padding:" "insets:" "Border-Layout" "ly" "border" "layout-justification" "get-location" "either" "justification" "rect-size" "topleft" "-" "expand-rect" "rect" "get-bounds" "bounds" "let*" "justify" "pos" "get-size" "center" "get-bottom" "get-height" "get-top" "get-right" "get-width" "get-left" "+" "Dimension" "new" "set-size-noevent" "layout-insets" "rect-position" "first-child" "fit" "children" "set-size" "set-position" "View" "is?" "when" "child" "function" "for-each" "fill-size" "size" "fill-position" "position" "let" "fill" "layout-type" "case")}
        {Lisp-Entry "fill-position" #f 176 29 176 42 ("get-top" "layout-insets" "get-left" "Point" "new")}
        {Lisp-Entry "fill-size" #f 180 29 180 38 ("get-bottom" "get-top" "get-right" "layout-insets" "get-left" "+" "Dimension" "new" "get-size" "-")}
        {Lisp-Entry "get-class-image" #f 189 16 189 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 193 16 193 37 ("nextmethod" "else" "layout-padding" "layout-justification" "layout-insets" "layout-type" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 202 11 202 27 ("nextmethod" "else" "Rect-Row" "layout-insets" "Justification-Combo-Row" "layout-justification" "Type-Combo-Row" "new" "layout-type" "field-name" "case" "property")}}
      {Lisp-Entry "Type-Combo-Row" #f 215 7 215 21 ("Combo-Row")
        {Lisp-Entry "Choices" #f 218 14 218 21 ("flow" "border" "justify" "center" "fill")}
        {Lisp-Entry "initialize" #f 227 11 227 21 ("Choices" "set-choices" "nextmethod" "apply" "rest")}}
      {Lisp-Entry "Justification-Combo-Row" #f 237 7 237 30 ("Combo-Row")
        {Lisp-Entry "Choices" #f 240 14 240 21 ("tail" "center" "head")}
        {Lisp-Entry "initialize" #f 248 11 248 21 ("Choices" "set-choices" "nextmethod" "apply" "rest")}}}})
"Line"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Line.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Line" #f 37 19 37 36 ("jazz")
      {Lisp-Entry "Line" #f 46 7 46 11 ("Object")
        {Lisp-Entry "text" #f 49 18 49 22 ("generate")}
        {Lisp-Entry "runs" #f 50 18 50 22 ("generate")}
        {Lisp-Entry "rank" #f 51 18 51 22 ("generate")}
        {Lisp-Entry "offset" #f 52 18 52 24 ("generate")}
        {Lisp-Entry "length" #f 53 18 53 24 ("generate")}
        {Lisp-Entry "left" #f 54 18 54 22 ("generate")}
        {Lisp-Entry "top" #f 55 18 55 21 ("generate")}
        {Lisp-Entry "width" #f 56 18 56 23 ("generate")}
        {Lisp-Entry "height" #f 57 18 57 24 ("generate")}
        {Lisp-Entry "initialize" #f 60 11 60 21 ("compute-height" "height~self" "compute-length" "length~self" "width~self" "top~self" "left~self" "offset~self" "rank~self" "runs~self" "text~self" "set!" "nextmethod" "width" "top" "left" "offset" "rank" "runs" "text")}
        {Lisp-Entry "print" #f 73 11 73 16 ("runs" "write" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-limit" #f 84 18 84 27 ("length" "offset" "+")}
        {Lisp-Entry "compute-length" #f 93 11 93 25 ("runs" "get-length" "increase!" "run" "function" "for-each" "0" "len" "let")}
        {Lisp-Entry "compute-height" #f 106 11 106 25 ("max" "set!" "run-height" "run" "function" "for-each" "0" "height" "let" "text" "get-default-style" "get-height" "runs" "null?" "if")}
        {Lisp-Entry "get-bottom" #f 117 18 117 28 ("height" "top" "+")}
        {Lisp-Entry "range-region" #f 126 21 126 33 ("acquire-delta" "rect:" "Region" "offset-rect" "offset" "get-bottom" "top" "Rect" "new" "rect" "let*" "not" "if" "right" "0" "either" "col->view" "get-h" "left" "let" "sc" "dv" "dh" "paragraph" "end" "start" "paragraph-width" "paragraph-top" "paragraph-left")}
        {Lisp-Entry "scan" #f 139 21 139 25 ("runs" "1" "increase!" "set!" "continuation-return" "+" ">=" "and" "if" "right" "mid" "n" "c" "scan" "get-length" "len" "rightmost" "nmost" "run" "for-each" "return" "function" "continuation-capture" "text" "get-tabs" "tabs" "left" "h" "0" "b" "let" "proc" "end")}
        {Lisp-Entry "draw-line" #f 166 21 166 30 ("runs" "increase!" "height" "draw-run" "width" "run" "function" "for-each" "text" "draw-enabled?" "enabled?" "left~self" "+" "let" "left" "tabs" "v" "h" "context" "surface")}
        {Lisp-Entry "view->col" #f 180 21 180 30 ("get-length" "continuation-return" ">" "right" "mid" "left" "n" "c" "scan" "return" "function" "continuation-capture" "get-bottom" "<" "top" ">=" "and" "when" "get-v" "v" "get-h" "h" "let" "view")}
        {Lisp-Entry "col->view" #f 193 21 193 30 ("runs" "not-null?" "unless" "set!" "top" "Point" "new" "continuation-return" "=" "when" "right" "mid" "left" "n" "c" "scan" "return" "function" "continuation-capture" "0" "rightmost" "let" "strict?" "col")}
        {Lisp-Entry "col->text" #f 210 21 210 30 ("-" "rank" "Cell" "new" "get-limit" "<" "offset" ">=" "and" "when" "col")}}}})
"Line-Surrogate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Line-Surrogate.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Line-Surrogate" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Line-Surrogate" #f 46 7 46 21 ("View-Surrogate")}}})
"Line-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Line-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Line-View" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Line-View" #f 47 7 47 16 ("View")
        {Lisp-Entry "from" #f 50 12 50 16 ("set-from" "get-from")}
        {Lisp-Entry "to" #f 51 12 51 14 ("set-to" "get-to")}
        {Lisp-Entry "color" #f 52 12 52 17 ("set-color" "get-color")}
        {Lisp-Entry "style" #f 53 12 53 17 ("set-style" "generate" "solid" "'solid")}
        {Lisp-Entry "get-from" #f 61 18 61 26 ("from")}
        {Lisp-Entry "set-from" #f 65 18 65 26 ("invalidate-view" "from" "set!" "value")}
        {Lisp-Entry "get-to" #f 70 18 70 24 ("to")}
        {Lisp-Entry "set-to" #f 74 18 74 24 ("invalidate-view" "to" "set!" "value")}
        {Lisp-Entry "get-color" #f 79 18 79 27 ("color")}
        {Lisp-Entry "set-color" #f 83 18 83 27 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "set-style" #f 88 18 88 27 ("invalidate-view" "style" "set!" "value")}
        {Lisp-Entry "Tolerance" #f 98 14 98 23 ("4.0")}
        {Lisp-Entry "in-drawing?" #f 102 11 102 22 ("Tolerance" "<" "line-distance" "distance" "let" "to" "from" "null?" "or" "nextmethod" "and" "size" "pos")}
        {Lisp-Entry "mouse-down" #f 110 11 110 21 ("pos")}
        {Lisp-Entry "draw" #f 119 11 119 15 ("solid" "'solid" "alternate" "'alternate" "style" "eq?" "get-v" "get-h" "line" "line-color" "set-color" "line-width" "set-line-width" "line-style" "set-style" "to" "from" "and" "when" "lv" "lh" "context" "surface")}
        {Lisp-Entry "line-style" #f 129 29 129 39 ("style")}
        {Lisp-Entry "line-width" #f 133 29 133 39 ("1")}
        {Lisp-Entry "line-color" #f 137 29 137 39 ("Black" "name:" "Color" "color" "either")}
        {Lisp-Entry "component-surrogate" #f 146 11 146 30 ("Line-Surrogate")}}}})
"Listener"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "listener" "Listener.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.listener.Listener" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Listener" #f 45 11 45 19 ()}}})
"Locale-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "locale" "Locale-Row.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.locale.Locale-Row" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Locale-Row" #f 46 7 46 17 ("String-Row")}}})
"Localized-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "locale" "Localized-Row.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.locale.Localized-Row" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Localized-Row" #f 47 7 47 20 ("Value-Row")
        {Lisp-Entry "localized?" #f 50 8 50 18 ()}
        {Lisp-Entry "present" #f 58 11 58 18 ("get-locales" "format" "Locales" "is?" "if" "value")}
        {Lisp-Entry "get-edited-value" #f 69 11 69 27 ("get-output" "Locales" "apply" "get-value" "get-user-data" "put" "subrow" "function" "get-sons" "iterate" "List-Factory" "new" "fact" "let" "editor" "get-string-content" "localized?" "not" "if")}
        {Lisp-Entry "get-edited-modified?" #f 80 11 80 31 ("get-list-edited-modified?" "nextmethod" "localized?" "not" "if")}
        {Lisp-Entry "set-edited-modified?" #f 86 11 86 31 ("set-list-edited-modified?" "nextmethod" "localized?" "not" "if" "flag")}
        {Lisp-Entry "edit" #f 92 11 92 15 ("get-tree" "expand/collapse" "get-locales" "user-data:" "Locale-Row" "class:" "get-locale" "self" "add-row" "locale" "function" "for-each" "edit-in-cell" "not" "if" "Locales" "value" "is?" "localized?" "set!")}
        {Lisp-Entry "select-editor" #f 102 11 102 24 ("nextmethod" "Locales" "value" "is-not?" "when")}
        {Lisp-Entry "close-editor" #f 107 11 107 23 ("close-in-list-editor" "close-in-cell-editor" "localized?" "not" "if")}
        {Lisp-Entry "in-edition?" #f 113 11 113 22 ("0" "get-sons" "cardinality" ">" "localized?" "and" "nextmethod" "or")}
        {Lisp-Entry "get-menu-class" #f 123 11 123 25 ("Localized-Menu")}}
      {Lisp-Entry "Localized-Menu" #f 132 7 132 21 ("on-toggle-localized" ":form" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "localized" "name:" "Value-Menu")
        {Lisp-Entry "on-toggle-localized" #f 140 11 140 30 ("evt")}}}})
"Look"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "look" "Look.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.look.Look" #f 37 19 37 36 ("jazz")
      {Lisp-Entry "Look" #f 50 7 50 11 ("Object")
        {Lisp-Entry "present" #f 58 26 58 33 ()}
        {Lisp-Entry "get-element" #f 67 26 67 37 ("name")}}}})
"Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Menu" #f 37 19 37 36 ("jazz")
      {Lisp-Entry "Menu" #f 46 7 46 11 ("visible?:" "View")
        {Lisp-Entry "poped" #f 49 8 49 13 ()}
        {Lisp-Entry "locked?" #f 50 8 50 15 ()}
        {Lisp-Entry "conclude" #f 62 11 62 19 ("layout-menu" "nextmethod" "rest")}
        {Lisp-Entry "get-poped" #f 72 18 72 27 ("poped")}
        {Lisp-Entry "set-poped" #f 76 18 76 27 ("set!" "invalidate-view" "popup-initiator" "initiator" "let" "poped" "when" "menu")}
        {Lisp-Entry "invalidate-update" #f 89 11 89 28 ("layout-menu")}
        {Lisp-Entry "update" #f 93 26 93 32 ()}
        {Lisp-Entry "layout-menu" #f 102 26 102 37 ("2" "300" "120" "if" "set!" "increase!" "set-arrow-width" "set-shortcut-width" "set-body-width" "set-icon-width" "set-prefix-width" "Dimension" "set-size" "Point" "new" "set-position" "preferred-height" "height" "view" "function" "for-each-view" "empty?" "1" "v" "0" "or" "+" "max" "let" "collect-maximums" "arrow" "shortcut" "body" "icon" "prefix" "receive" "get-finished?" "when" "width" "bind-keywords" "rest")}
        {Lisp-Entry "collect-maximums" #f 126 11 126 27 ("values" "set!" ">" "when" "preferred-arrow-width" "arrow" "preferred-shortcut-width" "shortcut" "preferred-body-width" "body" "preferred-icon-width" "icon" "preferred-prefix-width" "prefix" "view" "function" "for-each-view" "arrow-max" "shortcut-max" "body-max" "icon-max" "0" "prefix-max" "let")}
        {Lisp-Entry "cleanup-separators" #f 152 18 152 36 ("set!" "when" "set-visible?" "if" "and" "consecutive?" "Separator-Item" "is?" "separator?" "let*" "for-each" "kept-separator" "previous-separator?" "children" "get-visible?" "item" "function" "collect-if" "visibles" "let")}}}})
"Menu-Transient"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Menu-Transient.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.Menu-Transient" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Menu-Transient" #f 45 7 45 21 ("Transient")}}})
"Menubar"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Menubar.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Menubar" #f 37 19 37 39 ("jazz")
      {Lisp-Entry "Menubar" #f 49 7 49 14 ("on-close" "close" "on-restore" ":form" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "type:" "restore" "name:" "visible?:" "20" "1024" "Dimension" "size:" "Menu")
        {Lisp-Entry "showing?" #f 52 8 52 16 ()}
        {Lisp-Entry "host-install" #f 66 11 66 23 ("self" "set-menubar" "get-application" "appl" "let")}
        {Lisp-Entry "host-uninstall" #f 71 11 71 25 ("set-menubar" "get-application" "appl" "let")}
        {Lisp-Entry "on-restore" #f 81 11 81 21 ("get-stage" "restore" "evt")}
        {Lisp-Entry "on-close" #f 85 11 85 19 ("close-with-confirm" "current-frame" "frame" "let" "evt")}
        {Lisp-Entry "maximize" #f 95 18 95 26 ("show-buttons")}
        {Lisp-Entry "restore" #f 99 18 99 25 ("hide-buttons")}
        {Lisp-Entry "update-buttons" #f 103 26 103 40 ("hide-buttons" "show-buttons" "get-maximized?" "not-null?" "and" "if" "get-views" "frames" "get-stage" "stage" "let*")}
        {Lisp-Entry "show-buttons" #f 111 11 111 23 ("close" "'close" "restore" "'restore" "locate" "set-visible?" "always-maximized?" "unless")}
        {Lisp-Entry "hide-buttons" #f 117 11 117 23 ("close" "'close" "restore" "'restore" "locate" "set-visible?")}
        {Lisp-Entry "always-maximized?" #f 122 29 122 46 ()}
        {Lisp-Entry "restore-rect" #f 131 11 131 23 ("18" "21" "4" "+" "37" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "close-rect" #f 135 11 135 21 ("18" "3" "4" "+" "19" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "layout" #f 144 11 144 17 ("close-rect" "close" "'close" "restore-rect" "restore" "'restore" "locate" "set-rect" "3" "get-right" "+" "right" "0" "top" "get-bounds" "bounds" "let*")}
        {Lisp-Entry "layout-menu" #f 152 11 152 22 ("increase!" "-" "Dimension" "set-size" "preferred-body-width" "width" "2" "Point" "new" "set-position" "Item" "is?" "when" "view" "function" "for-each-view" "0" "h" "get-height" "height" "let")}}}})
"Message-Box"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Message-Box.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Message-Box" #f 37 19 37 45 ("Message-Text-View" "register-autoclass" "jazz")
      {Lisp-Entry "Message-Box" #f 53 7 53 18 ("selectable?:" "editable?:" "0" "top-padding:" "2" "left-padding:" "background:" "text" "fill" "layout-type:" "content" "flat?:" "vscroll?:" "hscroll?:" "scroller" "Dark" "Color" "border-color:" "border-type:" "100" "56" "border" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "32" "12" "Point" "position:" "icon" "name:" "120" "302" "Dimension" "size:" "View")
        {Lisp-Entry "type" #f 56 8 56 12 ()}
        {Lisp-Entry "process-keys?" #f 57 8 57 21 ()}
        {Lisp-Entry "user-content" #f 58 8 58 20 ()}
        {Lisp-Entry "action-buttons" #f 59 8 59 22 ()}
        {Lisp-Entry "default-button" #f 60 8 60 22 ()}
        {Lisp-Entry "finish" #f 72 11 72 17 ("self" "text" "'text" "locate" "set-client" "nextmethod" "initargs")}
        {Lisp-Entry "install-in-host" #f 82 11 82 26 ("text" "'text" "locate" "acquire-focus" "host")}
        {Lisp-Entry "Type-Infos" #f 91 14 91 24 ("custom" "'custom" "error" "'error" ":hand" ":error" "problem" "'problem" "cancel" "'cancel" "confirmation" "'confirmation" "no" "'no" ":exclamation" "question" "'question" "yes" "'yes" ":asterisk" ":information" "message" "'message" "list")}
        {Lisp-Entry "type-info" #f 101 11 101 20 ("error" "cdr" "if" "Type-Infos" "assq" "info" "let" "type")}
        {Lisp-Entry "resize" #f 113 11 113 17 ("action-buttons" "move-figure" "button" "function" "for-each" "user-content" "border" "'border" "locate" "size-figure" "2" "get-width" "resize-parts" "second-dh" "first-dh" "bind" "current-modal" "get-host" "eq?" "when" "nextmethod" "dv" "dh")}
        {Lisp-Entry "process-return" #f 126 11 126 25 ("default-button" "end-modal-dialog" "get-host" "dialog" "let")}
        {Lisp-Entry "process-escape" #f 131 11 131 25 ("end-modal-dialog" "get-host" "dialog" "let" "when" "type" "type-info" "close-result" "cancelable?" "default-cancel" "default-no" "default-yes" "default-sound" "default-icon" "default-title" "bind")}
        {Lisp-Entry "process-key" #f 138 11 138 22 ("action-buttons" "for-each" "continuation-return" "end-modal-dialog" "ci=?" "0" "element" "either" "first" "get-title" "localize" "get-name" "result" "car" "null?" "if" "shortcut-key" "let" "get-user-data" "optional" "name" "title" "bind" "get-visible?" "button" "try-button" "get-host" "dialog" "let*" "return" "function" "continuation-capture" "process-keys?" "when" "key")}
        {Lisp-Entry "on-select" #f 157 11 157 20 ("end-modal-dialog" "button:" "get-property" "button" "let" "evt")}
        {Lisp-Entry "process-box" #f 167 18 167 29 ("process-modal" "play-sound" "layout-dialog" "layout-box" "dialog-size" "first" "let*" "'yes" "'no" "list" "cons" "second" "key:" "'cancel" "member?" "not" "and" "when" "eq?" "if" "either" "get-host" "host" "get-player" "dialog" "let" "user-content~self" "process-keys?~self" "type~self" "set!" "type-info" "close-result" "cancelable?" "default-cancel" "default-no" "default-yes" "default-sound" "default-icon" "default-title" "bind" "process-keys?" "process-keys?:" "default-button" "default-button:" "actions" "actions:" "cancel" "cancel:" "no" "no:" "yes" "yes:" "selection" "selection:" "default" "'default" "sound" "sound:" "content" "content:" "icon" "icon:" "size" "size:" "title" "title:" "message" "'message" "type" "type:" "text")}
        {Lisp-Entry "layout-dialog" #f 206 11 206 24 ("set-size" "set-position" "set-title" "get-size" "center" "position" "get-desktop" "desktop" "let*" "size" "title" "dialog")}
        {Lisp-Entry "Left-Padding" #f 219 14 219 26 ("2")}
        {Lisp-Entry "Top-Padding" #f 222 14 222 25 ("0")}
        {Lisp-Entry "Content-Spacing" #f 225 14 225 29 ("10")}
        {Lisp-Entry "Buttons-Spacing" #f 228 14 228 29 ("6")}
        {Lisp-Entry "layout-box" #f 232 29 232 39 ("action-buttons" "position-buttons" "10" "v" "center" "h" "solid" "'solid" "set-border-type" ">" "overflow?" "set-icon" "58" "dialog-height" "68" "dialog-width" "2" "increase!" "set!" "Content-Spacing" "get-left" "Point" "set-position" "self" "set-parent" "get-bottom" "bottom" "200" "36" "0" "get-height" "get-visible-height" "text-height" "100" "500" "208" "compute-width" "max" "min" "get-width" "if" "let" "set-selection" "when" "localize" "set-text" "setup-buttons" "buttons-width" "Top-Padding" "Left-Padding" "1" "+" "Dimension" "new" "set-size" "height" "width" "function" "size-border" "border" "'border" "border-view" "scroller" "'scroller" "scroller-view" "'text" "text-view" "'icon" "locate" "icon-view" "let*" "default" "actions" "content" "icon" "size" "title" "selection" "text")}
        {Lisp-Entry "setup-buttons" #f 268 11 268 24 ("default-button" "get-output" "action-buttons" "set!" "for-each" "put" "Buttons-Spacing" "/=" "when" "get-height" "set-size" "get-width" "max" "width" "preferred-size" "localize" "set-title" "eq?" "default?:" "action-handler:" "user-data:" "size:" "72" "75" "*" "Point" "position:" "self" "parent:" "name:" "Push-Button" "button" "button:" "list" "properties:" "on-select" "'on-select" "method-name:" ":guest" "target-name:" "Event-Handler" "handler" "increase!" "shortcut-key" "button-name" "title" "bind" "action" "function" "setup-button" "List-Factory" "fact" "count" "24" "80" "Dimension" "new" "size" "0" "buttons-width" "let*" "default" "actions")}
        {Lisp-Entry "position-buttons" #f 293 11 293 27 ("for-each" "Buttons-Spacing" "get-width" "+" "set!" "Point" "new" "set-position" "get-visible?" "when" "button" "function" "position-button" "let" "v" "h" "action-buttons")}}
      {Lisp-Entry "Message-Text-View" #f 307 7 307 24 ("Formatted-Text-View")
        {Lisp-Entry "client" #f 310 12 310 18 ("generate")}
        {Lisp-Entry "get-context-menu" #f 313 11 313 27 ("new-text-context-menu")}
        {Lisp-Entry "return-press" #f 317 11 317 23 ("client" "process-return" "key")}
        {Lisp-Entry "escape-press" #f 321 11 321 23 ("client" "process-escape" "key")}
        {Lisp-Entry "key-press" #f 325 11 325 20 ("client" "process-key" "key")}}}})
"Moniker-Browser"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "widget" "Moniker-Browser.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.widget.Moniker-Browser" #f 37 19 37 49 ("Moniker-Button" "register-autoclass" "jazz")
      {Lisp-Entry "Moniker-Browser" #f 53 7 53 22 ("on-browse" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "Medium" "Color" "background:" "browse" "on-receive-files" "receive-files-handler:" "on-return-press" ":form" "Event-Handler" "return-press-handler:" "top-padding:" "2" "left-padding:" "show-unfocused-selection?:" "accepts-returns?:" "text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "scroller" "name:" "20" "142" "Dimension" "size:" "View")
        {Lisp-Entry "mode" #f 56 12 56 16 ("set-mode" "get-mode" "open" "'open")}
        {Lisp-Entry "protocol" #f 57 12 57 20 ("set-protocol" "get-protocol" "file" "'file")}
        {Lisp-Entry "parameters" #f 58 12 58 22 ("set-parameters" "get-parameters")}
        {Lisp-Entry "display-logical?" #f 59 12 59 28 ("set-display-logical?" "get-display-logical?")}
        {Lisp-Entry "anchors" #f 60 12 60 19 ("set-anchors" "get-anchors")}
        {Lisp-Entry "read-only?" #f 61 12 61 22 ("set-read-only?" "get-read-only?")}
        {Lisp-Entry "on-browse" #f 77 11 77 20 ("browse-moniker" "evt")}
        {Lisp-Entry "on-return-press" #f 81 11 81 26 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "on-receive-files" #f 86 11 86 27 ("bell" "set-moniker" "car" "is?" "1" "length" "=" "and" "protocol" "get-protocol-handler" "handler" ":receive-files" "Event" "new" "self" "invoke" "receive-files-handler" "if" "files:" "files" "position:" "get-property" "pos" "let" "evt")}
        {Lisp-Entry "get-mode" #f 103 18 103 26 ("mode")}
        {Lisp-Entry "set-mode" #f 107 18 107 26 ("save" "Bitmap-Resource" "set-image-name" "open" "case" "'browse" "locate" "browse" "let" "mode" "set!" "value")}
        {Lisp-Entry "get-protocol" #f 115 18 115 30 ("protocol")}
        {Lisp-Entry "set-protocol" #f 119 18 119 30 ("protocol" "set!" "value")}
        {Lisp-Entry "get-parameters" #f 123 18 123 32 ("parameters")}
        {Lisp-Entry "set-parameters" #f 127 18 127 32 ("parameters" "set!" "value")}
        {Lisp-Entry "get-display-logical?" #f 131 18 131 38 ("display-logical?")}
        {Lisp-Entry "set-display-logical?" #f 135 18 135 38 ("display-logical?" "set!" "value")}
        {Lisp-Entry "get-anchors" #f 139 18 139 29 ("anchors")}
        {Lisp-Entry "set-anchors" #f 143 18 143 29 ("anchors" "set!" "value")}
        {Lisp-Entry "get-text" #f 147 18 147 26 ("text" "'text" "locate")}
        {Lisp-Entry "inner?" #f 156 11 156 17 ("children" "memq?" "view")}
        {Lisp-Entry "layout" #f 165 11 165 17 ("browse-size" "browse-position" "browse" "'browse" "scroller-size" "set-size" "scroller-position" "scroller" "'scroller" "locate" "set-position" "get-size" "size" "let")}
        {Lisp-Entry "scroller-position" #f 173 11 173 28 ("0" "Point" "size")}
        {Lisp-Entry "scroller-size" #f 177 11 177 24 ("19" "17" "get-width" "-" "Dimension" "new" "size")}
        {Lisp-Entry "browse-position" #f 181 11 181 26 ("0" "17" "get-width" "-" "Point" "new" "size")}
        {Lisp-Entry "browse-size" #f 185 11 185 22 ("17" "Dimension" "size")}
        {Lisp-Entry "browse-moniker" #f 194 18 194 32 ("reposition?:" "tail" "'tail" "force-horizontal:" "ensure-displayed" "text-ending" "set-caret" "acquire-focus" "get-text" "text" "let" "set-moniker" "moniker-modal" "apply" "moniker" "parameters" "get-moniker" "actual:" "mode" "mode:" "augment" "arguments" "protocol" "get-protocol-handler" "handler" "let*")}
        {Lisp-Entry "get-moniker" #f 210 18 210 29 ("else" "Pathname" "Directory-Group" "typecase" "moniker" "let*" "bind" "read-string-content" "content" "anchors" "anchors:" "moniker-new" "anchorize" "tokenise-filename" "parameters" "protocol" "get-protocol-handler" "handler" "alias-displayed?" "not" "if" "empty-string?" "unless" "get-text" "get-string-content" "string" "let")}
        {Lisp-Entry "set-moniker" #f 227 18 227 29 ("moniker-update" "when" "present-moniker" "not" "if" "get-text" "set-string-content" "update?" "update?:" "moniker")}
        {Lisp-Entry "moniker-update" #f 233 29 233 43 ()}
        {Lisp-Entry "present-moniker" #f 237 18 237 33 ("present" "class-of" "get-protocol" "format" "->string" "parse" "Pathname" "is?" "alias-displayed?" "not" "if" "moniker")}
        {Lisp-Entry "alias-displayed?" #f 249 11 249 27 ("get-application" "display-aliases?" "display-logical?" "not" "if")}
        {Lisp-Entry "get-modified?" #f 255 11 255 24 ("get-text" "get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 259 11 259 24 ("get-text" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "get-read-only?" #f 268 18 268 32 ("read-only?")}
        {Lisp-Entry "set-read-only?" #f 272 18 272 32 ("browse" "'browse" "locate" "set-enabled?" "not" "get-text" "set-editable?" "read-only?" "set!" "value")}}
      {Lisp-Entry "Moniker-Button" #f 283 7 283 21 ("Push-Tool")
        {Lisp-Entry "light-color" #f 286 11 286 22 ("Light-Background" "name:" "Color")}
        {Lisp-Entry "dark-color" #f 290 11 290 21 ("Dark" "name:" "Color")}
        {Lisp-Entry "draw-inactive" #f 294 11 294 24 ("Medium" "Light" "name:" "Color" "get-enabled?" "if" "frame-rect" "get-bounds" "bounds" "let" "surface")}
        {Lisp-Entry "draw-tool" #f 299 11 299 20 ("draw-ellipsis" "context" "surface")}
        {Lisp-Entry "draw-ellipsis" #f 303 11 303 24 ("enabled?" "get-v" "1" "get-h" "+" "draw-text" "Black" "name:" "Color" "set-text-color" "center" "'center" "justify" "pos" "get-text-extent" "extent" "title" "get-offset" "offset" "get-size" "size" "let*" "surface")}
        {Lisp-Entry "get-offset" #f 313 11 313 21 ("0" "1" "choose" "pushed" "get-state" "memq?" "if")}}}})
"Moniker-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "widget" "Moniker-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.widget.Moniker-Text-View" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Moniker-Text-View" #f 44 7 44 24 ("IDE-Text-View")
        {Lisp-Entry "get-scroll-context" #f 47 11 47 29 ("0" "cons")}}}})
"Moniker-Widget"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "widget" "Moniker-Widget.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.widget.Moniker-Widget" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Moniker-Widget" #f 52 7 52 21 ("on-browse" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "browse" "on-receive-files" "receive-files-handler:" "on-return-press" ":form" "Event-Handler" "return-press-handler:" "top-padding:" "2" "left-padding:" "show-unfocused-selection?:" "accepts-returns?:" "text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "scroller" "edge" "border-type:" "moniker-border" "name:" "22" "142" "Dimension" "size:" "View")
        {Lisp-Entry "mode" #f 55 12 55 16 ("set-mode" "get-mode" "open" "'open")}
        {Lisp-Entry "protocol" #f 56 12 56 20 ("set-protocol" "get-protocol" "file" "'file")}
        {Lisp-Entry "parameters" #f 57 12 57 22 ("set-parameters" "get-parameters")}
        {Lisp-Entry "display-logical?" #f 58 12 58 28 ("set-display-logical?" "get-display-logical?")}
        {Lisp-Entry "display-protocol?" #f 59 12 59 29 ("set-display-protocol?" "get-display-protocol?")}
        {Lisp-Entry "anchors" #f 60 12 60 19 ("set-anchors" "get-anchors")}
        {Lisp-Entry "moniker-update-handler" #f 61 12 61 34 ("set-moniker-update-handler" "get-moniker-update-handler")}
        {Lisp-Entry "on-browse" #f 78 11 78 20 ("browse-moniker" "evt")}
        {Lisp-Entry "on-return-press" #f 82 11 82 26 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "on-receive-files" #f 87 11 87 27 ("bell" "set-moniker" "car" "is?" "1" "length" "=" "and" "protocol" "get-protocol-handler" "handler" ":receive-files" "Event" "new" "self" "invoke" "receive-files-handler" "if" "files:" "files" "position:" "get-property" "pos" "let" "evt")}
        {Lisp-Entry "get-mode" #f 104 18 104 26 ("mode")}
        {Lisp-Entry "set-mode" #f 108 18 108 26 ("save" "Bitmap-Resource" "set-image-name" "open" "case" "'browse" "locate" "browse" "let" "mode" "set!" "value")}
        {Lisp-Entry "get-protocol" #f 116 18 116 30 ("protocol")}
        {Lisp-Entry "set-protocol" #f 120 18 120 30 ("protocol" "set!" "value")}
        {Lisp-Entry "get-parameters" #f 124 18 124 32 ("parameters")}
        {Lisp-Entry "set-parameters" #f 128 18 128 32 ("parameters" "set!" "value")}
        {Lisp-Entry "get-display-logical?" #f 132 18 132 38 ("display-logical?")}
        {Lisp-Entry "set-display-logical?" #f 136 18 136 38 ("display-logical?" "set!" "value")}
        {Lisp-Entry "get-display-protocol?" #f 140 18 140 39 ("display-protocol?")}
        {Lisp-Entry "set-display-protocol?" #f 144 18 144 39 ("display-protocol?" "set!" "value")}
        {Lisp-Entry "get-anchors" #f 148 18 148 29 ("anchors")}
        {Lisp-Entry "set-anchors" #f 152 18 152 29 ("anchors" "set!" "value")}
        {Lisp-Entry "get-moniker-update-handler" #f 156 18 156 44 ("moniker-update-handler")}
        {Lisp-Entry "set-moniker-update-handler" #f 160 18 160 44 ("moniker-update-handler" "set!" "value")}
        {Lisp-Entry "call-moniker-update" #f 164 18 164 37 ("invoke" "self" ":update" "Event" "new" "event" "let" "moniker-update" "moniker-update-handler" "null?" "if")}
        {Lisp-Entry "get-text" #f 171 18 171 26 ("text" "'text" "locate")}
        {Lisp-Entry "set-enabled?" #f 180 11 180 23 ("invalidate-view" "browse" "'browse" "text" "'text" "locate" "set-enabled?" "enabled?" "set!" "flag")}
        {Lisp-Entry "inner?" #f 192 11 192 17 ("children" "memq?" "view")}
        {Lisp-Entry "layout" #f 201 11 201 17 ("browse-size" "browse-position" "browse" "'browse" "moniker-size" "set-size" "moniker-position" "moniker-border" "'moniker-border" "locate" "set-position" "get-size" "size" "let")}
        {Lisp-Entry "moniker-position" #f 209 11 209 27 ("1" "0" "Point" "size")}
        {Lisp-Entry "moniker-size" #f 213 11 213 23 ("19" "25" "get-width" "-" "Dimension" "new" "size")}
        {Lisp-Entry "browse-position" #f 217 11 217 26 ("0" "22" "get-width" "-" "Point" "new" "size")}
        {Lisp-Entry "browse-size" #f 221 11 221 22 ("22" "Dimension" "size")}
        {Lisp-Entry "browse-moniker" #f 230 18 230 32 ("reposition?:" "tail" "'tail" "force-horizontal:" "ensure-displayed" "text-ending" "set-caret" "acquire-focus" "get-text" "text" "let" "set-moniker" "moniker-modal" "apply" "moniker" "parameters" "get-moniker" "actual:" "cons" "arguments" "SaveFile-Dialog" "save" "protocol" "get-protocol-handler" "open" "mode" "case" "handler" "let*")}
        {Lisp-Entry "get-moniker" #f 246 18 246 29 ("Pathname" "is?" "moniker" "parse-content" "receive" "read-string-content" "content" "anchors" "anchors:" "moniker-new" "anchorize" "tokenise-filename" "list" "protocol" "get-protocol-handler" "handler" "alias-displayed?" "not" "if" "empty-string?" "unless" "get-text" "get-string-content" "string" "let")}
        {Lisp-Entry "parse-content" #f 261 11 261 24 ("list" "bind" "protocol" "get-protocol-handler" "values" "protocol-displayed?" "not" "if" "content")}
        {Lisp-Entry "set-moniker" #f 268 18 268 29 ("call-moniker-update" "when" "present-moniker" "null?" "if" "get-text" "set-string-content" "generate-event?" "generate-event?:" "moniker")}
        {Lisp-Entry "moniker-update" #f 274 29 274 43 ()}
        {Lisp-Entry "present-moniker" #f 278 11 278 26 ("class-of" "get-protocol" "format" "present" "protocol-displayed?" "parse" "alias-displayed?" "not" "if" "moniker")}
        {Lisp-Entry "alias-displayed?" #f 288 11 288 27 ("get-application" "display-aliases?" "display-logical?" "not" "if")}
        {Lisp-Entry "protocol-displayed?" #f 294 11 294 30 ("get-application" "display-protocol?" "not" "if")}
        {Lisp-Entry "get-modified?" #f 300 11 300 24 ("get-text" "get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 304 11 304 24 ("get-text" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "validate-content" #f 313 11 313 27 ("get-moniker" "throw-cancel" "focus-body" "yes:" "get-message" "message-box" "err" "Parse-Error" "catch")}
        {Lisp-Entry "focus-body" #f 321 18 321 28 ("select-all" "acquire-focus" "get-text" "text" "let")}}}})
"Mouse-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Mouse-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Mouse-Event" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Mouse-Event" #f 44 7 44 18 ("Event")
        {Lisp-Entry "position" #f 47 8 47 16 ()}
        {Lisp-Entry "initialize" #f 50 11 50 21 ("position" "set!" "nextmethod" "pos" "sender" "kind")}
        {Lisp-Entry "print" #f 55 11 55 16 ("position" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-position" #f 66 18 66 30 ("position")}
        {Lisp-Entry "get-h" #f 70 18 70 23 ("position" "get-h")}
        {Lisp-Entry "get-v" #f 74 18 74 23 ("position" "get-v")}}}})
"Navigable-Results"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Navigable-Results.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Navigable-Results" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Navigable-Results" #f 48 7 48 24 ("on-return-press" "return-press-handler:" "on-double-click" "double-click-handler:" "row" "selection-mode:" "results" "header" "fill" "content" "flat?:" "hscroll?:" "vscroll?:" "center" "scroller" "on-clear-results" "clear" "0" "4" "on-edit-selection" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "edit" "tools" "name:" "border" "layout-type:" "400" "650" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "finish" #f 66 11 66 17 ("get-tree" "invalidate-columns" "nextmethod" "rest")}
        {Lisp-Entry "get-tools-view" #f 76 11 76 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "host-activated" #f 80 11 80 25 ("self" "set-active-results" "get-application" "appl" "let")}
        {Lisp-Entry "get-tree" #f 90 18 90 26 ("results" "'results" "locate")}
        {Lisp-Entry "on-double-click" #f 99 11 99 26 ("edit-selection" "results" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-return-press" #f 106 11 106 26 ("edit-selection" "evt")}
        {Lisp-Entry "on-edit-selection" #f 110 11 110 28 ("edit-selection" "evt")}
        {Lisp-Entry "on-clear-results" #f 114 11 114 27 ("clear-results" "evt")}
        {Lisp-Entry "clear-results" #f 123 26 123 39 ("get-tree" "remove-every-row")}
        {Lisp-Entry "edit-next" #f 132 18 132 27 ("edit-selection" "update-view" "list" "set-selection" "begin" "not" "if" "next-editable" "rank" "last" "not-null?" "and" "current" "get-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "edit-previous" #f 147 18 147 31 ("edit-selection" "list" "set-selection" "begin" "not" "if" "previous-editable" "rank" "car" "not-null?" "and" "current" "get-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "edit-current" #f 161 18 161 30 ("edit-selection")}
        {Lisp-Entry "edit-selection" #f 165 29 165 43 ("forward?")}
        {Lisp-Entry "editable-row?" #f 169 29 169 42 ("user-data")}
        {Lisp-Entry "next-editable" #f 173 11 173 24 ("increase!" "continuation-return" "get-user-data" "editable-row?" "get-row" "row" "let" "<" "while" "return" "function" "continuation-capture" "0" "1" "+" "if" "rank" "get-visible-count" "count" "get-tree" "tree" "let*" "current")}
        {Lisp-Entry "previous-editable" #f 187 11 187 28 ("decrease!" "continuation-return" "get-user-data" "editable-row?" "get-row" "row" "let" "0" ">=" "while" "return" "function" "continuation-capture" "1" "-" "if" "rank" "get-visible-count" "count" "get-tree" "tree" "let*" "current")}
        {Lisp-Entry "select-results" #f 201 18 201 32 ("acquire-focus" "get-tree" "tree" "let" "get-application" "get-active?" "when")}
        {Lisp-Entry "select-first" #f 207 18 207 30 ("list" "set-selection" "bell" "not" "if" "next-editable" "rank" "get-tree" "tree" "let")}}}})
"NewFile-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "NewFile-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.NewFile-Request" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "NewFile-Request" #f 50 7 50 22 ("title:" "ok" "on-content-change" "content-change-handler:" "on-escape-press" "escape-press-handler:" "on-return-press" ":form" "Event-Handler" "return-press-handler:" "Label" "Font" "font:" "Default" "Text-Style" "default-style:" "focus-selects-all?:" "show-unfocused-selection?:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "filename" "content" "vscroll?:" "hscroll?:" "Entry-Border" "Color" "border-color:" "solid" "border-type:" "22" "288" "3" "Rect" "layout-insets:" "fill" "layout-type:" "0" "4" "Dimension" "size:" "buttonbar" "name:" "Pathname-Request")
        {Lisp-Entry "host-title" #f 65 16 65 26 ()}
        {Lisp-Entry "initial-filename" #f 69 12 69 28 ()}
        {Lisp-Entry "default-extension" #f 70 12 70 29 ()}
        {Lisp-Entry "finish" #f 73 11 73 17 ("select-all" "set-string-content" "1" "cardinality" "-" "0" "subseq" "concatenate" "ends-with?" "default-extension" "and" "if" "content" "filename" "'filename" "locate" "text" "let" "initial-filename" "when" "nextmethod" "rest")}
        {Lisp-Entry "focus-default" #f 85 11 85 24 ("filename" "'filename" "locate" "acquire-focus")}
        {Lisp-Entry "update" #f 94 11 94 17 ("update-buttons" "update-filename" "update-content" "update-history" "update-hierarchy")}
        {Lisp-Entry "update-content" #f 102 11 102 25 ("for-each" "remove-every-row" "function" "with-update-locked" "add-pathname" "pathname" "add" "define" "get-tree" "tree" "files" "leaves?:" "nodes?:" "directory" "get-content" "directories" "let")}
        {Lisp-Entry "update-filename" #f 116 11 116 26 ("filename" "'filename" "locate" "set-string-content")}
        {Lisp-Entry "update-buttons" #f 120 11 120 25 ("get-string-content" "empty-string?" "not" "ok" "'ok" "set-enabled?" "filename" "'filename" "locate" "text" "let" "nextmethod")}
        {Lisp-Entry "validate-dialog" #f 131 11 131 26 ("throw-cancel" "cancel" "no" "memq?" "confirmation" "'confirmation" "type:" "parse" "format" "message-box" "code" "exists?" "when" "get-newfile" "newfile" "let")}
        {Lisp-Entry "get-modal-result" #f 140 11 140 27 ("get-newfile" "directory" "set-current-directory")}
        {Lisp-Entry "get-newfile" #f 145 11 145 22 ("directory" "new-file" "anchorize" "concatenate" "search" "not" "default-extension" "and" "if" "filename" "'filename" "locate" "get-string-content" "content" "let")}
        {Lisp-Entry "selection-change" #f 159 11 159 27 ("update-buttons" "get-name" "filename" "'filename" "locate" "set-string-content" "file?" "when" "selected-pathname" "pathname" "let")}
        {Lisp-Entry "on-content-change" #f 166 11 166 28 ("update-buttons" "evt")}
        {Lisp-Entry "default-action" #f 170 11 170 25 ("get-modal-result" "get-host" "end-modal" "ok-enabled?" "down" "directory?" "cond" "selected-pathname" "pathname" "let")}}}})
"Outline-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "outline" "Outline-Row.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.outline.Outline-Row" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Outline-Row" #f 50 7 50 18 ("Drawing")
        {Lisp-Entry "father" #f 53 22 53 28 ("set-father" "get-father")}
        {Lisp-Entry "sons" #f 54 22 54 26 ("set-sons" "get-sons" "0" "Axis" "new")}
        {Lisp-Entry "level" #f 55 22 55 27 ("set-level" "get-level")}
        {Lisp-Entry "state" #f 56 22 56 27 ("set-state" "get-state" "collapsed" "'collapsed")}
        {Lisp-Entry "row-height" #f 57 22 57 32 ("set-row-height" "get-row-height")}
        {Lisp-Entry "previous" #f 60 18 60 26 ("generate")}
        {Lisp-Entry "next" #f 61 18 61 22 ("generate")}
        {Lisp-Entry "initialize-component" #f 71 11 71 31 ("rest")}
        {Lisp-Entry "install-in-parent" #f 75 11 75 28 ()}
        {Lisp-Entry "set-parent" #f 79 11 79 21 ("parent" "set!" "prt")}
        {Lisp-Entry "get-outline-view" #f 88 25 88 41 ("parent")}
        {Lisp-Entry "get-father" #f 92 25 92 35 ("father")}
        {Lisp-Entry "set-father" #f 96 25 96 35 ("father" "set!" "row")}
        {Lisp-Entry "get-sons" #f 100 25 100 33 ("sons")}
        {Lisp-Entry "set-sons" #f 104 25 104 33 ("sons" "set!" "s")}
        {Lisp-Entry "get-level" #f 108 25 108 34 ("level")}
        {Lisp-Entry "set-level" #f 112 25 112 34 ("level" "set!" "lvl")}
        {Lisp-Entry "get-state" #f 116 25 116 34 ("state")}
        {Lisp-Entry "set-state" #f 120 25 120 34 ("state" "set!" "s")}
        {Lisp-Entry "get-row-height" #f 124 25 124 39 ("row-height")}
        {Lisp-Entry "set-row-height" #f 128 25 128 39 ("row-height" "set!" "height")}
        {Lisp-Entry "change-father" #f 137 18 137 31 ("get-sons" "cardinality" "either" "add-son" "set-father" "self" "remove-son" "father" "when" "position" "position:" "father-row")}
        {Lisp-Entry "for-each-father" #f 145 18 145 33 ("for-each-father" "father" "when" "proc")}
        {Lisp-Entry "for-each-ancestor" #f 151 18 151 35 ("for-each-father" "self" "proc")}
        {Lisp-Entry "remove-every-son" #f 161 18 161 34 ("List" "sons" "coerce" "remove-row" "son" "function" "for-each" "get-outline-view" "outline-view" "let")}
        {Lisp-Entry "son-rank" #f 168 18 168 26 ("sons" "find" "son")}
        {Lisp-Entry "last-son" #f 172 18 172 26 ("sons" "last")}
        {Lisp-Entry "get-transparent?" #f 181 11 181 27 ()}
        {Lisp-Entry "expanded?" #f 190 18 190 27 ("expanded" "'expanded" "state" "eq?")}
        {Lisp-Entry "collapsed?" #f 194 18 194 28 ("collapsed" "'collapsed" "state" "eq?")}
        {Lisp-Entry "expandable?" #f 198 18 198 29 ("first-visible-son" "dynamic" "'dynamic" "state" "eq?" "or")}
        {Lisp-Entry "collapsable?" #f 203 18 203 30 ("expanded" "'expanded" "state" "eq?")}
        {Lisp-Entry "set-descendants-level" #f 212 21 212 42 ("sons" "1" "+" "set-descendants-level" "son" "function" "for-each" "level" "set!" "lvl")}
        {Lisp-Entry "get-effective-width" #f 224 26 224 45 ("get-width")}
        {Lisp-Entry "get-effective-height" #f 228 18 228 38 ("get-height" "row-height" "either")}
        {Lisp-Entry "draw" #f 237 11 237 15 ("draw-selection" "selected?:" "getf" "when" "nextmethod" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-selection" #f 243 29 243 43 ("Light-Gray" "Black" "name:" "Color" "frame-rect" "-1" "inflate-rect" "inner" "get-bounds" "outer" "let*" "surface")}
        {Lisp-Entry "show" #f 255 11 255 15 ("link" "show-rows" "visible-in-father?" "visible?" "let" "parent" "nextmethod" "first-visible-son" "father" "essay" "get-next" "if" "next" "self" "previous-visible-row" "previous" "last-descendant" "last" "let*" "get-visible-flag" "unless")}
        {Lisp-Entry "hide" #f 270 11 270 15 ("unlink" "visible-in-father?" "hide-rows" "parent" "if" "nextmethod" "in-collapse?" "self" "last-descendant" "either" "last" "let" "get-visible-flag" "when")}
        {Lisp-Entry "get-visible?" #f 281 11 281 23 ("row-visible?" "father" "and")}
        {Lisp-Entry "row-visible?" #f 285 18 285 30 ("visible-in-father?" "get-visible-flag" "and")}
        {Lisp-Entry "visible-in-father?" #f 290 18 290 36 ("row-visible?" "expanded?" "and" "father" "not" "or")}
        {Lisp-Entry "count-visible" #f 295 18 295 31 ("increase!" "get-next" "set!" "level" "get-level" ">" "and" "while" "0" "count" "next" "scan" "let")}
        {Lisp-Entry "node-height" #f 304 18 304 29 ("sons-height" "parent" "get-row-spacing" "get-effective-height" "+")}
        {Lisp-Entry "sons-height" #f 308 18 308 29 ("get-next" "set!" "get-effective-height" "+" "increase!" "level" "get-level" ">" "and" "while" "parent" "get-row-spacing" "rs" "0" "total" "next" "scan" "let")}
        {Lisp-Entry "sons-width" #f 318 18 318 28 ("get-next" "set!" "when" "get-effective-width" "w" "level" "get-level" ">" "and" "while" "0" "width" "next" "scan" "let")}
        {Lisp-Entry "first-visible-son" #f 329 18 329 35 ("son" "function" "find-if" "get-visible-flag" "if" "first" "let" "sons" "empty?" "not" "when")}
        {Lisp-Entry "previous-visible-row" #f 339 18 339 38 ("expanded?" "last-descendant" "essay" "either" "get-father" "father" "previous-visible-sibling" "let" "target")}
        {Lisp-Entry "previous-visible-sibling" #f 346 18 346 42 ("get-visible-flag" "when" "set!" "self" "eq?" "if" "unless" "function" "iterate" "found-self?" "first" "scan" "get-sons" "father" "essay" "siblings" "sibling" "let*")}
        {Lisp-Entry "last-visible-descendant" #f 361 21 361 44 ("set!" "level" "get-level" ">" "get-next" "and" "while" "when" "first-visible-son" "scan" "let")}
        {Lisp-Entry "add-son" #f 374 18 374 25 ("insert!" "set!" "link" "first-visible-son" "/=" "and" "level" "get-level" "after" "get-next" "essay" "following" "element" "previous-visible-row" "last-visible-descendant" "if" "0" "=" "before" "get-visible-flag" "when" "else" ">" "not" "cond" "pos" "sons" "cardinality" "count" "last-descendant" "end" "expanded" "'expanded" "state" "eq?" "expanded?" "let*" "self" "set-father" "position" "row")}
        {Lisp-Entry "remove-son" #f 396 18 396 28 ("axis-remove!" "sons" "set!" "set-previous" "set-next" "get-previous" "error" "Outline-Row" "is-not?" "and" "when" "next-non-descendant" "following" "let" "row")}
        {Lisp-Entry "relink" #f 411 18 411 24 ("last-descendant" "expanded?" "either" "set!" "link" "get-visible-flag" "when" "row" "function" "iterate" "let" "after" "before" "replacement")}
        {Lisp-Entry "replace-sons" #f 421 18 421 30 ("replace-subseq!" "sons" "set!" "relink" "after" "get-previous" "essay" "before" "let" "end" "end-row" "start" "start-row" "replacement")}
        {Lisp-Entry "reorder-sons" #f 428 18 428 30 ("sons" "set!" "relink" "next-non-descendant" "after" "self" "expanded?" "when" "before" "let" "replacement")}
        {Lisp-Entry "link" #f 436 11 436 15 ("set-previous" "set-next" "when" "after" "before")}
        {Lisp-Entry "unlink" #f 444 11 444 17 ("set-next" "set-previous" "link" "get-next" "next" "get-previous" "previous" "let" "last" "first")}
        {Lisp-Entry "attached?" #f 457 18 457 27 ("parent")}
        {Lisp-Entry "detach-descendants" #f 461 18 461 36 ("sons" "detach-descendants" "subrow" "function" "for-each")}
        {Lisp-Entry "first-descendant" #f 472 21 472 37 ("first-visible-son" "sons" "empty?" "not" "expanded" "'expanded" "state" "eq?" "and" "when")}
        {Lisp-Entry "last-proper-descendant" #f 477 21 477 43 ("set!" "level" "get-level" ">" "get-next" "and" "while" "when" "first-descendant" "scan" "let")}
        {Lisp-Entry "last-descendant" #f 485 21 485 36 ("self" "last-proper-descendant" "either")}
        {Lisp-Entry "next-non-descendant" #f 490 21 490 40 ("last-descendant" "get-next")}
        {Lisp-Entry "visible-sibling-follows?" #f 494 21 494 45 ("get-sons" "set!" "self" "eq?" "get-visible-flag" "and" "prog1" "son" "function" "some?" "found?" "let" "father" "when")}
        {Lisp-Entry "sibling-follows?" #f 504 21 504 37 ("get-sons" "last" "self" "neq?" "father" "and")}
        {Lisp-Entry "get-spine" #f 513 18 513 27 ("get-father" "cons" "set!" "neq?" "while" "spine" "parent" "get-root-row" "root" "self" "row" "let")}
        {Lisp-Entry "internal-fields" #f 528 18 528 33 ("next" "previous" "state" "level" "values")}}}})
"Outline-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "outline" "Outline-View.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.outline.Outline-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Outline-View" #f 58 7 58 19 ("View")
        {Lisp-Entry "default-row-height" #f 61 22 61 40 ("set-default-row-height" "get-default-row-height" "17")}
        {Lisp-Entry "row-spacing" #f 62 22 62 33 ("set-row-spacing" "get-row-spacing" "0")}
        {Lisp-Entry "left-padding" #f 63 22 63 34 ("set-left-padding" "get-left-padding" "0")}
        {Lisp-Entry "top-padding" #f 64 22 64 33 ("set-top-padding" "get-top-padding" "0")}
        {Lisp-Entry "background-filler" #f 65 22 65 39 ("set-background-filler" "get-background-filler")}
        {Lisp-Entry "fit-in-scroller?" #f 66 22 66 38 ("set-fit-in-scroller?" "get-fit-in-scroller?")}
        {Lisp-Entry "root-row" #f 69 18 69 26 ()}
        {Lisp-Entry "outline" #f 70 18 70 25 ()}
        {Lisp-Entry "visible-count" #f 71 18 71 31 ("0")}
        {Lisp-Entry "visible-height" #f 72 18 72 32 ("0")}
        {Lisp-Entry "visible-width" #f 73 18 73 31 ("0")}
        {Lisp-Entry "selection" #f 74 18 74 27 ()}
        {Lisp-Entry "line-size" #f 75 18 75 27 ("16")}
        {Lisp-Entry "page-size" #f 76 18 76 27 ("320")}
        {Lisp-Entry "hscrollbar?" #f 77 18 77 29 ()}
        {Lisp-Entry "vscrollbar?" #f 78 18 78 29 ()}
        {Lisp-Entry "install" #f 86 11 86 18 ("setup-outline" "nextmethod" "rest")}
        {Lisp-Entry "finish" #f 91 11 91 17 ("layout-scrollee" "nextmethod" "rest")}
        {Lisp-Entry "setup-outline" #f 96 11 96 24 ("expanded" "'expanded" "set-state" "-1" "set-level" "set-father" "self" "set-parent" "row-spacing" "Display-Outline" "outline" "row-class" "new" "root-row" "set!")}
        {Lisp-Entry "size-change" #f 110 11 110 22 ("layout-scrollee" "update-locked?" "unless" "nextmethod" "size")}
        {Lisp-Entry "get-root-row" #f 121 18 121 30 ("root-row")}
        {Lisp-Entry "get-outline" #f 125 18 125 29 ("outline")}
        {Lisp-Entry "get-default-row-height" #f 129 18 129 40 ("default-row-height")}
        {Lisp-Entry "set-default-row-height" #f 133 18 133 40 ("default-row-height" "set!" "height")}
        {Lisp-Entry "get-row-spacing" #f 137 18 137 33 ("row-spacing")}
        {Lisp-Entry "set-row-spacing" #f 141 18 141 33 ("invalidate-view" "row-spacing" "set!" "spacing")}
        {Lisp-Entry "get-left-padding" #f 146 18 146 34 ("left-padding")}
        {Lisp-Entry "set-left-padding" #f 150 18 150 34 ("invalidate-view" "left-padding" "set!" "padding")}
        {Lisp-Entry "get-top-padding" #f 155 18 155 33 ("top-padding")}
        {Lisp-Entry "set-top-padding" #f 159 18 159 33 ("invalidate-view" "top-padding" "set!" "padding")}
        {Lisp-Entry "get-background-filler" #f 164 18 164 39 ("background-filler")}
        {Lisp-Entry "set-background-filler" #f 168 18 168 39 ("invalidate-view" "background-filler" "set!" "value")}
        {Lisp-Entry "get-fit-in-scroller?" #f 173 18 173 38 ("fit-in-scroller?")}
        {Lisp-Entry "set-fit-in-scroller?" #f 177 18 177 38 ("layout-scrollee" "fit-in-scroller?" "set!" "value")}
        {Lisp-Entry "get-expand-state" #f 187 18 187 34 ("List" "type:" "collect" "cons" "expanded" "'expanded" "eq?" "0" "cardinality" ">" "and" "or" "get-sons" "sons" "get-state" "state" "first-child" "get-title" "title" "let" "row" "function" "proc" "letrec" "root-row" "when" "include-invisibles?" "include-invisibles?:")}
        {Lisp-Entry "set-expand-state" #f 204 18 204 34 ("for-each" "update-row" "dynamic" "'dynamic" "and" "expand/collapse" "unless" "expanded" "'expanded" "eq?" "if" "get-state" "actual" "find-by-title" "subrow" "let" "children" "title" "bind" "info" "row" "function" "proc" "letrec" "root-row" "when" "state")}
        {Lisp-Entry "expand-spine" #f 230 18 230 30 ("if" "expand/collapse" "null?" "expanded" "'expanded" "eq?" "or" "unless" "get-state" "actual" "find-by-title" "subrow" "let" "subspine" "title" "bind" "row" "function" "proc" "letrec" "root-row" "when" "spine")}
        {Lisp-Entry "find-subdrawing" #f 251 11 251 26 ("get-position" "-" "find-drawing" "get-row" "when" "get-v" "v->row" "row" "let" "ignore" "pos")}
        {Lisp-Entry "layout-scrollee-content" #f 263 11 263 34 ("layout-rows")}
        {Lisp-Entry "layout-rows" #f 267 11 267 22 ("row-spacing" "increase!" "set!" "Dimension" "set-size" "Point" "new" "set-position" "+" "rb" "default-row-height" "get-row-height" "either" "height" "let*" "while" "top-padding" "rt" "root-row" "get-next" "row" "left-padding" "get-width" "-" "width" "let")}
        {Lisp-Entry "scrollee-size" #f 286 11 286 24 ("scrollee-height" "scrollee-width" "Dimension" "new")}
        {Lisp-Entry "scrollee-width" #f 290 11 290 25 ("get-display-width" "max" "fit-in-scroller?" "if" "visible-width" "left-padding" "+" "width" "let")}
        {Lisp-Entry "scrollee-height" #f 297 11 297 26 ("get-display-height" "max" "fit-in-scroller?" "if" "visible-height" "top-padding" "+" "height" "let")}
        {Lisp-Entry "scrollee-content-size" #f 304 11 304 32 ("scrollee-content-height" "scrollee-content-width" "Dimension" "new")}
        {Lisp-Entry "scrollee-content-width" #f 308 26 308 48 ("visible-width" "left-padding" "+")}
        {Lisp-Entry "scrollee-content-height" #f 312 26 312 49 ("visible-height" "top-padding" "+")}
        {Lisp-Entry "get-visible-width" #f 316 18 316 35 ("visible-width")}
        {Lisp-Entry "get-visible-height" #f 320 18 320 36 ("visible-height")}
        {Lisp-Entry "invalidate-update" #f 329 11 329 28 ("update-scrollbars" "invalidate-view" "layout-scrollee" "update-visible" "update-displayed")}
        {Lisp-Entry "update-visible" #f 337 26 337 40 ()}
        {Lisp-Entry "draw-children" #f 346 11 346 24 ("draw-outline" "fill-rect" "when" "get-drawing-background" "cycle-debug-color!" "*debug-paint*" "if" "background" "get-logical-clipper" "clipper" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-outline" #f 356 29 356 41 ("draw-rows" "get-bottom" "bottom" "get-v" "get-top" "+" "top" "get-scrolled-position" "pos" "let*" "sc?" "sc" "sv" "sh" "lv" "lh" "clipper" "context" "surface")}
        {Lisp-Entry "draw-rows" #f 363 11 363 20 ("draw-empty" "row-spacing" "get-next" "set!" "increase!" "draw-row" ">=" "when" "+" "rb" "get-height" "height" "let*" "<" "and" "while" "get-width" "width" "get-first-displayed-offset" "top-padding" "-" "rt" "get-first-displayed-rank" "rank" "outline" "get-first-displayed" "row" "let" "sc?" "sc" "sv" "sh" "bottom" "top" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-empty" #f 380 29 380 39 ("width" "rt" "sc?" "sc" "sv" "sh" "bottom" "top" "surface")}
        {Lisp-Entry "draw-row" #f 384 11 384 19 ("get-v" "get-h" "paint-drawing" "optimize-context" "new-context" "let" "font" "set-font" "get-position" "pos" "row-draw-selected?" "selected?" "row-spacing" "+" "total-height" "get-height" "height" "get-width" "width" "let*" "sc?" "sc" "sv" "sh" "rank" "row" "lv" "lh" "context" "surface")}
        {Lisp-Entry "optimized-context" #f 397 14 397 31 ("0" "row-rank:" "selected?:" "list")}
        {Lisp-Entry "optimize-context" #f 401 11 401 27 ("set-fourth!" "optimized-context" "set-second!" "row-rank:" "selected?:" "cons" "if" "context" "rank" "selected?")}
        {Lisp-Entry "on-prior" #f 414 18 414 26 ("get-shift?" "prior-page" "evt")}
        {Lisp-Entry "prior-page" #f 418 29 418 39 ("vert" "'vert" "get-page-size" "0" "Point" "new" "scroll" "evt")}
        {Lisp-Entry "on-next" #f 422 18 422 25 ("get-shift?" "next-page" "evt")}
        {Lisp-Entry "next-page" #f 426 29 426 38 ("vert" "'vert" "get-page-size" "-" "0" "Point" "new" "scroll" "evt")}
        {Lisp-Entry "get-line-size" #f 430 11 430 24 ("8" "horz" "default-row-height" "vert" "case" "orientation")}
        {Lisp-Entry "scroll-invalidate" #f 436 11 436 28 ("-" "follow" "dv" "dh")}
        {Lisp-Entry "row-class" #f 445 29 445 38 ("Outline-Row")}
        {Lisp-Entry "add-row" #f 449 18 449 25 ("update-father-control" "Rect" "0" "scroll-view" "-" "<" "layout-scrollee" "added-update-selection" "get-height" "display-height" "get-width" "display-width" "get-size" "display-size" "get-display" "display" "row-top" "top" "row-rank" "rank" "update-visible" "update-displayed" "get-effective-width" "update-visible-width-incremental" "visible-height" "node-height" "height" "let" "update-locked?" "not" "count-visible" "visible-count" "increase!" "row-visible?" "when" "add-son" "set-descendants-level" "default-row-height" "set-height-noevent" "self" "parent:" "new" "apply" "1" "get-level" "+" "level" "root-row" "either" "let*" "others" "position" "father" "row" "row-class" "class" "bind-keywords" "rest")}
        {Lisp-Entry "update-visible-width-incremental" #f 480 29 480 61 ("width" "level")}
        {Lisp-Entry "remove-row" #f 484 26 484 36 ("update-father-control" "detach-descendants" "Rect" "new" "-" "scroll-view" "<" "layout-scrollee" "get-height" "display-height" "get-width" "display-width" "get-size" "display-size" "get-display" "display" "update-visible" "update-displayed" "update-locked?" "not" "and" "removed-update-selection" "collapsed" "'collapsed" "set-state" "0" "get-sons" "cardinality" "=" "remove-son" "visible-height" "count-visible" "1" "+" "visible-count" "decrease!" "row-top" "essay" "top" "row-rank" "rank" "node-height" "height" "row-visible?" "visible?" "get-father" "father" "let*" "attached?" "when" "row")}
        {Lisp-Entry "move-row" #f 514 18 514 26 ("father:" "row:" "add-row" "procedure?" "if" "let" "remove-row" "position" "position:" "father" "row")}
        {Lisp-Entry "find-ordered-position" #f 520 18 520 39 ("smaller/equal" "'smaller/equal" "sort-predicate" "test:" "row-title" "key:" "get-sons" "ordered-position" "0" "not" "if" "father" "title")}
        {Lisp-Entry "remove-every-row" #f 526 26 526 42 ("invalidate-view" "layout-scrollee" "update-displayed" "update-locked?" "unless" "horz" "'horz" "vert" "'vert" "set-scroll-pos" "Dimension" "set-size" "Point" "set-position" "scroller" "when" "selection" "visible-width" "visible-height" "0" "visible-count" "set!" "setup-outline")}
        {Lisp-Entry "update-father-control" #f 543 29 543 50 ("father")}
        {Lisp-Entry "update-displayed" #f 547 11 547 27 ("get-display-v" "outline" "update-displayed")}
        {Lisp-Entry "first-row" #f 551 18 551 27 ("root-row" "get-sons" "first")}
        {Lisp-Entry "first-visible-row" #f 555 18 555 35 ("root-row" "get-next")}
        {Lisp-Entry "get-row" #f 559 18 559 25 ("get-row" "1" "+" "root-row" "outline" "get-row-from" "update-locked?" "if" "n")}
        {Lisp-Entry "get-visible-row" #f 566 18 566 33 ("continuation-return" "=" "when" "rank" "row" "for-each-visible-row" "return" "function" "continuation-capture" "n")}
        {Lisp-Entry "get-row-classic" #f 577 11 577 26 ("decrease!" "get-next" "set!" "0" ">=" "and" "while" "root-row" "row" "let" "n")}
        {Lisp-Entry "row-rank" #f 585 18 585 26 ("continuation-return" "eq?" "when" "rank" "row" "for-each-visible-row" "return" "function" "continuation-capture" "target")}
        {Lisp-Entry "rows-ranks" #f 595 18 595 28 ("row-rank" "map" "targets")}
        {Lisp-Entry "row-title" #f 599 18 599 27 ("first-child" "get-title" "row")}
        {Lisp-Entry "get-visible-count" #f 603 18 603 35 ("visible-count")}
        {Lisp-Entry "forward" #f 607 11 607 18 ("decrease!" "get-next" "set!" "0" ">" "while" "n" "row")}
        {Lisp-Entry "backward" #f 614 11 614 19 ("decrease!" "get-previous" "set!" "0" ">" "while" "n" "row")}
        {Lisp-Entry "ensure-row-exists" #f 621 18 621 35 ("1" "+" "ensure-visible-count" "row")}
        {Lisp-Entry "ensure-visible-count" #f 625 18 625 38 ("add-empty-row" "visible-count" "<" "while" "n")}
        {Lisp-Entry "add-empty-row" #f 630 26 630 39 ("add-row" "root-row" "either" "let" "father" "father:")}
        {Lisp-Entry "row-selected?" #f 635 29 635 42 ("selection" "=" "row")}
        {Lisp-Entry "row-draw-selected?" #f 639 29 639 47 ("row-selected?" "row")}
        {Lisp-Entry "get-row-count" #f 643 18 643 31 ("get-sons" "cardinality" "0" "root-row" "not" "if")}
        {Lisp-Entry "mouse-down" #f 654 11 654 21 ("set-selection" "get-v" "v->row" "row" "let" "acquire-focus" "view")}
        {Lisp-Entry "double-click" #f 660 11 660 23 ("get-row" "expand/collapse" "when" "get-v" "v->row" "row" "let" "view")}
        {Lisp-Entry "empty-selection" #f 671 29 671 44 ()}
        {Lisp-Entry "get-selection" #f 675 26 675 39 ("selection")}
        {Lisp-Entry "set-selection" #f 679 26 679 39 ("call-selection-handler" "invalidate-selection" "not-null?" "ensure-displayed" "set!" "old" "let" "selection" "/=" "or" "when" "user-origin?" "user-origin?:" "generate-event?" "generate-event?:" "ensure-displayed?" "ensure-displayed?:" "force?" "force?:" "sel")}
        {Lisp-Entry "invalidate-selection" #f 697 26 697 46 ("invalidate-region" "selection-region" "region" "with-closed" "self" "get-delta" "sc" "dv" "dh" "receive" "get-root" "root" "when" "get-player" "player" "let" "sel")}
        {Lisp-Entry "selection-region" #f 706 29 706 45 ("selection-row-region" "sc" "dv" "dh" "sel")}
        {Lisp-Entry "selection-row-region" #f 710 21 710 41 ("selection-row-rect" "acquire-delta" "rect:" "Region" "new" "sc" "dv" "dh" "n")}
        {Lisp-Entry "selection-row-rect" #f 714 29 714 47 ("get-row" "get-rect" "n")}
        {Lisp-Entry "added-update-selection" #f 719 29 719 51 ("increase!" ">=" "selection" "and" "when" "count" "rank")}
        {Lisp-Entry "removed-update-selection" #f 725 29 725 53 ("set!" "decrease!" "+" "if" ">=" "selected?" "let" "selection" "not-null?" "when" "count" "rank")}
        {Lisp-Entry "for-each-row" #f 741 18 741 30 ("row-visible?" "root-row" "function" "get-sons" "iterate" "increase!" "when" "essay" "expanded?" "son-visible?" "get-visible-flag" "and" "let*" "visible?" "row" "recurse" "define" "0" "rank" "let" "proc")}
        {Lisp-Entry "for-each-visible-row" #f 756 18 756 38 ("for-each-visible-row" "not" "increase!" "set!" "neq?" "and" "while" "when" "0" "row-rank" "if" "rank" "root-row" "get-next" "either" "row" "let" "wrap?" "wrap?:" "end" "end:" "start" "start:" "proc")}
        {Lisp-Entry "for-each-visible-descendant" #f 768 18 768 45 ("end:" "start:" "for-each-visible-row" "when" "get-next" "essay" "end-row" "last-visible-descendant" "last-son" "first-visible-son" "first-son" "let*" "proc" "parent-row")}
        {Lisp-Entry "get-content" #f 781 26 781 37 ("root-row" "get-sons")}
        {Lisp-Entry "set-content" #f 785 26 785 37 ("invalidate-view" "layout-scrollee" "update-displayed" "empty-selection" "set-selection" "sons-height" "visible-height" "count-visible" "visible-count" "set!" "invalidate-columns" "car" "set-next" "root-row" "set-sons" "content")}
        {Lisp-Entry "set-subrows" #f 797 18 797 29 ("visible-height" "visible-count" "last-proper-descendant" "last" "link-rows" "first" "first-son" "get-next" "old-next" "expanded" "'expanded" "get-state" "eq?" "Axis" "coerce" "essay" "set-sons" "get-row-height" "increase!" "set!" "set-next" "set-previous" "when" "set-level" "set-father" "subrow" "let" "info" "function" "map" "rows" "previous" "1" "get-level" "+" "level" "height" "0" "count" "root-row" "either" "let*" "empty?" "unless" "proc" "seq" "row")}
        {Lisp-Entry "invalidate-columns" #f 828 26 828 44 ()}
        {Lisp-Entry "expand/collapse" #f 837 26 837 41 ("collapse" "expanded" "expand" "collapsed" "get-state" "case" "row")}
        {Lisp-Entry "update-row" #f 843 29 843 39 ("row")}
        {Lisp-Entry "expand" #f 847 18 847 24 ("row-visible?" "show-rows" "in-expand?" "get-next" "next" "previous" "last-visible-descendant" "last" "first-descendant" "first" "let" "set-state" "expanded" "'expanded" "get-state" "neq?" "when" "dynamic?" "row")}
        {Lisp-Entry "invalidate-expand" #f 859 29 859 46 ("dynamic?" "top" "row")}
        {Lisp-Entry "expand-all" #f 863 18 863 28 ("expand-all" "get-sons" "iterate" "expand/collapse" "expanded" "'expanded" "get-state" "eq?" "unless" "function" "with-update-locked" "row")}
        {Lisp-Entry "collapse" #f 871 18 871 26 ("row-visible?" "last-proper-descendant" "hide-rows" "invalidate-collapse" "row-selected?" "selected?" "get-position" "get-v" "top" "row-rank" "rank" "set-state" "not" "if" "in-collapse?" "first-descendant" "first" "let" "collapsed" "'collapsed" "get-state" "neq?" "when" "row")}
        {Lisp-Entry "collapse-selection" #f 884 29 884 47 ("selected?" "rank")}
        {Lisp-Entry "invalidate-collapse" #f 888 29 888 48 ("row-rect" "invalidate-rect" "when" "selected?" "top" "row" "rank")}
        {Lisp-Entry "collapse-all" #f 893 18 893 30 ("expand/collapse" "expanded" "'expanded" "get-state" "eq?" "when" "collapse-all" "get-sons" "iterate" "function" "with-update-locked" "row")}
        {Lisp-Entry "link-rows" #f 901 11 901 20 ("set-previous" "set-next" "when" "after" "before")}
        {Lisp-Entry "unlink-rows" #f 908 11 908 22 ("set-next" "set-previous" "link-rows" "get-next" "next" "get-previous" "previous" "let" "last" "first")}
        {Lisp-Entry "ensure-expanded" #f 916 18 916 33 ("set!" "expand" "collapsed" "'collapsed" "get-state" "eq?" "when" "while" "get-father" "scan" "let" "row")}
        {Lisp-Entry "ensure-expanded-rows" #f 924 18 924 38 ("ensure-expanded" "for-each" "rows")}
        {Lisp-Entry "set-visibilities" #f 934 18 934 34 ("set!" "link-rows" "when" "visible?" "row" "function" "get-sons" "iterate" "root-row" "previous" "let" "predicate")}
        {Lisp-Entry "show-rows" #f 944 18 944 27 ("ensure-row-range-displayed" ">" "layout-scrollee" "Rect" "new" "scroll-view" "invalidate-expand" "get-scrolled-v" "<" "1" "added-update-selection" "display-height" "get-width" "display-width" "get-size" "display-size" "get-display" "display" "get-height" "+" "opens" "0" "get-position" "get-v" "either" "top" "row-rank" "rank" "let*" "update-visible" "update-displayed" "get-level" "update-visible-width-incremental" "visible-height" "visible-count" "increase!" "count-visible-size" "width" "height" "count" "receive" "update-locked?" "not" "and" "when" "link-rows" "dynamic?" "in-expand?" "visible?" "next" "previous" "last" "first")}
        {Lisp-Entry "hide-rows" #f 971 18 971 27 ("layout-scrollee" "Rect" "new" "-" "scroll-view" "invalidate-collapse" "<" "collapse-selection" "display-height" "get-width" "display-width" "get-size" "display-size" "get-display" "display" "1" "removed-update-selection" "removed" "get-height" "+" "opens" "get-position" "get-v" "top" "0" "row-rank" "either" "rank" "let*" "update-visible" "update-displayed" "update-locked?" "not" "and" "collapsed" "'collapsed" "set-state" "unlink-rows" "get-previous" "previous" "let" "visible-height" "visible-count" "decrease!" "when" "count-visible-size" "width" "height" "count" "receive" "in-collapse?" "visible?" "last" "first")}
        {Lisp-Entry "count-visible-size" #f 999 18 999 36 ("values" "set!" ">" "when" "get-effective-width" "w" "row-spacing" "get-effective-height" "+" "increase!" "neq?" "and" "while" "width" "height" "0" "count" "get-next" "stop" "essay" "scan" "let" "visible?" "last" "first")}
        {Lisp-Entry "follow" #f 1020 11 1020 17 ("get-display-v" "outline" "follow" "v")}
        {Lisp-Entry "ensure-displayed" #f 1024 26 1024 42 ("ensure-row-displayed" "selection" "not-null?" "when" "rest")}
        {Lisp-Entry "ensure-row-displayed" #f 1029 18 1029 38 ("get-scroll-context" "0" "Point" "new" "scroll-needed" "scroll" "get-bottom" "bottom" "get-top" "top" "get-row" "row" "let*" "n")}
        {Lisp-Entry "ensure-row-range-displayed" #f 1036 18 1036 44 ("get-scroll-context" "0" "Point" "new" "scroll-needed" "scroll" "get-bottom" "bottom" "get-row" "get-top" "top" "let" "to" "from")}
        {Lisp-Entry "ensure-at-end" #f 1042 18 1042 31 ("1" "visible-count" "-" "ensure-row-displayed")}
        {Lisp-Entry "get-scroll-context" #f 1046 29 1046 47 ("0.20" "0.15" "cons")}
        {Lisp-Entry "row-top" #f 1057 21 1057 28 ("get-next" "set!" "row-spacing" "get-height" "increase!" "decrease!" ">" "while" "0" "v" "first-visible-row" "row" "let" "n")}
        {Lisp-Entry "row-rect" #f 1068 29 1068 37 ("get-height" "+" "Rect" "new" "get-width" "right" "row-top" "top" "0" "left" "get-row" "row" "let" "n")}
        {Lisp-Entry "row-region" #f 1076 11 1076 21 ("get-row" "get-bounds" "rect:" "Region" "new" "n")}
        {Lisp-Entry "row->v" #f 1080 21 1080 27 ("get-row" "get-top" "r")}
        {Lisp-Entry "v->row" #f 1084 21 1084 27 ("height" "rank" "function" "call-with-v->row" "v")}
        {Lisp-Entry "call-with-v->row" #f 1090 21 1090 37 ("get-scrolled-v" "outline" "call-with-v->row" "proc" "v")}
        {Lisp-Entry "property-presentation" #f 1100 16 1100 37 ("nextmethod" "else" "background-filler" "top-padding" "left-padding" "row-spacing" "default-row-height" "field-name" "case" "property")}}}})
"Overlapped"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Overlapped.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.Overlapped" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Overlapped" #f 47 7 47 17 ("View-Player")
        {Lisp-Entry "owner" #f 50 12 50 17 ("set-owner" "get-owner")}
        {Lisp-Entry "conclude" #f 53 11 53 19 ("self" "register-overlapped" "nextmethod" "rest")}
        {Lisp-Entry "destroy" #f 58 11 58 18 ("nextmethod" "self" "unregister-overlapped")}
        {Lisp-Entry "get-owner" #f 68 18 68 27 ("owner")}
        {Lisp-Entry "set-owner" #f 72 18 72 27 ("owner" "set!" "window")}
        {Lisp-Entry "get-owners" #f 81 18 81 28 ("get-owners" "cons" "self" "list" "owner" "not" "if")}}}})
"Pad-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Pad-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Pad-Preferences" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Pad-Preferences" #f 46 7 46 22 ("Bitmap-Resource" "icon:" "title:" "Figure-Preferences")
        {Lisp-Entry "apply-root" #f 58 11 58 21 ("get-root" "apply-to" "offscreen?:" "Pad-View" "new" "set-root" "player")}
        {Lisp-Entry "apply-preferences" #f 63 11 63 28 ("parent:" "Pad-View" "new" "apply-to" "assert" "parent")}
        {Lisp-Entry "apply-to" #f 68 11 68 19 ("layout-view" "get-children" "get-guest" "host-install" "Host-View" "is?" "when" "child" "children" "apply-preferences" "pref" "function" "for-each" "get-visible?" "set-visible?" "location" "set-location" "remove-children" "pad")}
        {Lisp-Entry "get-class-image" #f 87 16 87 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" #f 91 11 91 37 ("location")}
        {Lisp-Entry "get-addable-classes" #f 95 11 95 30 ("Stage-Preferences" "Docked-Preferences" "Pad-Preferences" "Splitter-Preferences" "list")}}}})
"Pad-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Pad-View.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.view.Pad-View" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Pad-View" #f 46 7 46 15 ("View")
        {Lisp-Entry "size-change" #f 54 11 54 22 ("layout-view" "nextmethod" "size")}
        {Lisp-Entry "layout" #f 59 11 59 17 ("neq?" "children" "selection" "'selection" "get-location" "eq?" "when" "for-each" "set-size" "0" "Point" "set-position" "set-visible?" "visible?" "child" "function" "proc" "get-size" "size" "let*")}
        {Lisp-Entry "add-view" #f 81 18 81 26 ("self" "set-parent" "view")}
        {Lisp-Entry "remove-view" #f 85 18 85 29 ("set-parent" "view")}
        {Lisp-Entry "remove-children" #f 89 18 89 33 ("children" "get-guest" "host-uninstall" "Host-View" "is?" "when" "set-parent" "set-visible?" "child" "function" "for-each")}
        {Lisp-Entry "get-selection" #f 103 18 103 31 ("children" "selection" "'selection" "get-location" "eq?" "child" "function" "find-if")}
        {Lisp-Entry "set-selection" #f 109 18 109 31 ("layout-view" "children" "selection" "'selection" "eq?" "if" "set-location" "child" "function" "for-each" "target")}
        {Lisp-Entry "select-next" #f 116 18 116 29 ("get-host" "focus-host" "set-selection" "get-selection" "next-child" "next" "let")}}}})
"Page-Content"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Content.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Content" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Page-Content" #f 48 7 48 19 ("White" "name:" "Color" "background:" "View")}}})
"Page-Document"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Document.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Document" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Page-Document" #f 48 7 48 20 ("10" "0" "Rect" "layout-insets:" "border" "layout-type:" "White" "name:" "Color" "background:" "Layout-View")}}})
"Page-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Editor.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Editor" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Page-Editor" #f 53 7 53 18 ("shadow" "border-type:" "664" "514" "Dimension" "size:" "0" "Point" "position:" "border" "Dark" "name:" "Color" "background:" "center" "layout-type:" "Layout-View")
        {Lisp-Entry "client" #f 56 12 56 18 ("set-client" "get-client")}
        {Lisp-Entry "host-workspaces" #f 69 11 69 26 ("page")}
        {Lisp-Entry "find-page-setup" #f 78 11 78 26 ("border" "'border" "locate" "first-child")}
        {Lisp-Entry "on-print" #f 87 11 87 19 ("client" "print-document" "evt")}
        {Lisp-Entry "on-print-preview" #f 91 11 91 27 ("from-layout?:" "client" "print-preview" "evt")}
        {Lisp-Entry "on-page-setup" #f 95 11 95 24 ("page-setup" "evt")}
        {Lisp-Entry "on-layout" #f 99 11 99 20 ("update-page" "child" "set-active-branch" "save-header/footer" "find-page-setup" "page-setup" "layout:" "get-property" "layout" "let" "evt")}
        {Lisp-Entry "on-fit" #f 107 11 107 17 ("set-fit" "fit:" "get-property" "fit" "let" "evt")}
        {Lisp-Entry "set-fit" #f 112 11 112 18 ("'fit" "set-property" "client" "get-page-setup-designer" "designer" "find-page-setup" "page-setup" "let" "fit")}
        {Lisp-Entry "on-close" #f 118 11 118 19 ("close-workspace" "evt")}
        {Lisp-Entry "escape-press" #f 122 11 122 23 ("close-workspace" "key")}
        {Lisp-Entry "activate-page" #f 131 21 131 34 ("update-page" "setup-defaults" "setup-branches")}
        {Lisp-Entry "setup-branches" #f 139 11 139 25 ("child" "set-active-branch" "get-active-branch" "null?" "when" "file" "'file" "printer" "'printer" "setup-branch" "client" "get-page-setup-designer" "designer" "find-page-setup" "page-setup" "let")}
        {Lisp-Entry "setup-branch" #f 149 11 149 23 ("install" "'install" "action:" "textual?:" "Form" "client-form:" "set-property" "set-name" "branch:" "add-child" "parent:" "Branch" "new" "branch" "let" "find-component" "null?" "when" "name" "designer" "page-setup")}
        {Lisp-Entry "setup-defaults" #f 158 11 158 25 ()}
        {Lisp-Entry "update-page" #f 162 11 162 22 ("update-border" "update-fit" "update-branch" "find-page-setup" "page-setup" "Page-Toolbar" "find-palette" "toolbar" "get-toplevel" "toplevel" "let*")}
        {Lisp-Entry "update-branch" #f 172 11 172 24 ("locate" "set-selected?" "get-active-branch-name" "name" "let" "page-setup" "toolbar")}
        {Lisp-Entry "update-fit" #f 177 11 177 21 ("locate" "set-selected?" "get-fit" "fit" "let" "page-setup" "toolbar")}
        {Lisp-Entry "update-border" #f 182 11 182 24 ("layout-view" "4" "Dimension" "get-size" "nu+" "set-size" "'border" "locate" "border" "let" "page-setup")}
        {Lisp-Entry "close-workspace" #f 193 11 193 26 ("get-previous" "apply-preferences" "close" "restore-client" "save-header/footer" "selected-workspace" "workspace" "get-host" "frame" "let")}
        {Lisp-Entry "get-client" #f 207 18 207 28 ("client")}
        {Lisp-Entry "set-client" #f 211 18 211 28 ("set-parent" "4" "Dimension" "get-size" "nu+" "set-size" "printer" "'printer" "get-page-setup-for" "page-setup" "'border" "locate" "border" "let" "client" "set!" "value")}
        {Lisp-Entry "restore-client" #f 219 21 219 35 ("set-parent" "find-page-setup" "page-setup" "let")}
        {Lisp-Entry "page-setup" #f 231 11 231 21 ("update-page" "subtract-rects" "'paper-source" "'paper-size" "symbolize-orientation" "'orientation" "layout-insets" "'layout-insets" "'size" "set-property" "paper-source:" "paper-size:" "numerize-orientation" "orientation:" "add-rects" "scale" "margins:" "page-setup-dialog" "size" "receive" "client" "get-page-setup-designer" "designer" "setup-ratio" "1000" "/" "dialog-ratio" "margins" "get-layout-insets" "min-margins" "get-printable" "printable" "get-paper-source" "paper-source" "get-paper-size" "paper-size" "get-orientation" "orientation" "get-resolution" "resolution" "find-page-setup" "page-setup" "let*")}
        {Lisp-Entry "page-setup" #f 252 9 252 19 ()}
        {Lisp-Entry "numerize-orientation" #f 258 15 258 35 ("DMORIENT_LANDSCAPE" "landscape" "DMORIENT_PORTRAIT" "portrait" "case" "orientation")}
        {Lisp-Entry "numerize-orientation" #f 263 15 263 35 ("orientation")}
        {Lisp-Entry "symbolize-orientation" #f 269 15 269 36 ("landscape" "'landscape" "DMORIENT_LANDSCAPE" "portrait" "'portrait" "DMORIENT_PORTRAIT" "ecase" "orientation")}
        {Lisp-Entry "symbolize-orientation" #f 274 15 274 36 ("orientation")}
        {Lisp-Entry "save-header/footer" #f 283 11 283 29 ("get-content" "text-content:" "set-property" "get-footer" "footer" "get-header" "header" "when" "client" "get-page-setup-designer" "designer" "find-page-setup" "page-setup" "let")}}}})
"Page-Footer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Footer.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Footer" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Page-Footer" #f 47 7 47 18 ("Page-Text-View")
        {Lisp-Entry "get-drawing-background" #f 55 11 55 33 ("Light-Green" "name:" "Color" "nextmethod" "printing?:" "getf" "if" "context")}}}})
"Page-Header"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Header.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Header" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Page-Header" #f 47 7 47 18 ("Page-Text-View")
        {Lisp-Entry "get-drawing-background" #f 55 11 55 33 ("Light-Yellow" "name:" "Color" "nextmethod" "printing?:" "getf" "if" "context")}}}})
"Page-Printable"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Printable.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Printable" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Page-Printable" #f 47 7 47 21 ("Layout-View")
        {Lisp-Entry "get-drawing-background" #f 55 11 55 33 ("Light-Purple" "name:" "Color" "nextmethod" "printing?:" "getf" "if" "context")}}}})
"Page-Setup"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Setup.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Setup" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Page-Setup" #f 49 7 49 17 ("south" "footer" "center" "content" "north" "location:" "19" "100" "header" "document" "50" "printable" "White" "name:" "Color" "background:" "10" "Rect" "layout-insets:" "fill" "layout-type:" "660" "510" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "fit" #f 52 12 52 15 ("generate" "width" "'width")}
        {Lisp-Entry "resolution" #f 53 12 53 22 ("generate" "60")}
        {Lisp-Entry "orientation" #f 54 12 54 23 ("generate" "portrait" "'portrait")}
        {Lisp-Entry "paper-size" #f 55 12 55 22 ("generate" "DMPAPER_LETTER")}
        {Lisp-Entry "paper-source" #f 56 12 56 24 ("generate" "DMBIN_AUTO")}
        {Lisp-Entry "get-printable" #f 73 18 73 31 ("printable" "'printable" "locate")}
        {Lisp-Entry "get-document" #f 82 18 82 30 ("document" "'document" "locate")}
        {Lisp-Entry "get-header" #f 91 18 91 28 ("header" "'header" "locate")}
        {Lisp-Entry "get-content" #f 100 18 100 29 ("content" "'content" "locate")}
        {Lisp-Entry "get-content-rect" #f 104 18 104 34 ("get-bounds" "acquire" "get-content" "content" "let")}
        {Lisp-Entry "scale-content" #f 109 18 109 31 ("resolution" "fit" "fit-rects" "*" "/" "get-content-rect" "content-rect" "get-print-area" "area" "let" "dest-resolution" "client")}
        {Lisp-Entry "get-footer" #f 120 18 120 28 ("footer" "'footer" "locate")}
        {Lisp-Entry "wrap-header/footer" #f 129 18 129 36 ("get-footer" "get-header" "wrap-content" "context")}
        {Lisp-Entry "get-drawing-background" #f 139 11 139 33 ("255" "blue:" "green:" "193" "red:" "Color" "nextmethod" "printing?:" "getf" "if" "context")}}}})
"Page-Status"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Status.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Status" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Page-Status" #f 47 7 47 18 ("center" "location:" "20" "782" "Dimension" "size:" "message" "name:" "Status-Toolbar")
        {Lisp-Entry "host-icon" #f 60 16 60 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 64 16 64 26 ()}}}})
"Page-Text-Palette"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Text-Palette.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Text-Palette" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Page-Text-Palette" #f 47 7 47 24 ("on-insert-time" "insert-time" "on-insert-date" "insert-date" "on-insert-count" "insert-count" "on-insert-no" "insert-no" "on-insert-filename" ":focus" "Event-Handler" "action-handler:" "enabled?:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "Dimension" "size:" "insert-filename" "insert-table" "table-separator" "insert-image" "image-separator" "toggle-ruler" "ruler-separator" "visible?:" "style-border" "name:" "Text-Palette")
        {Lisp-Entry "enable-buttons" #f 67 11 67 25 ("insert-time" "'insert-time" "insert-date" "'insert-date" "insert-count" "'insert-count" "insert-no" "'insert-no" "insert-filename" "'insert-filename" "locate" "set-enabled?" "nextmethod" "enabled?")}}}})
"Page-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Text-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Page-Text-View" #f 48 7 48 21 ("Text" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "0" "left-padding:" "Formatted-Text-View")
        {Lisp-Entry "scrollee-height" #f 55 11 55 26 ("visible-height" "top-padding" "+")}
        {Lisp-Entry "layout-scrollee-content" #f 59 11 59 34 ("parent" "layout-view" "nextmethod")}
        {Lisp-Entry "get-context-menu" #f 64 11 64 27 ("new-text-context-menu")}
        {Lisp-Entry "on-insert-filename" #f 73 11 73 29 ("filename" "'filename" "insert-info" "evt")}
        {Lisp-Entry "on-insert-no" #f 77 11 77 23 ("no" "'no" "insert-info" "evt")}
        {Lisp-Entry "on-insert-count" #f 81 11 81 26 ("count" "'count" "insert-info" "evt")}
        {Lisp-Entry "on-insert-date" #f 85 11 85 25 ("date" "'date" "insert-info" "evt")}
        {Lisp-Entry "on-insert-time" #f 89 11 89 25 ("time" "'time" "insert-info" "evt")}
        {Lisp-Entry "insert-info" #f 98 11 98 22 ("insert-styled" "what:" "Default" "'Default" "base:" "Info-Style" "new" "style" "let" "what")}}}})
"Page-Toolbar"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Toolbar.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Toolbar" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Page-Toolbar" #f 49 7 49 19 ("on-close" "60" "close" "14" "height" "width" "fit:" "on-fit" "selected?:" "tooltip?:" ":icons" "portfolio:" "both" "on-page-setup" "page-setup" "38" "file" ":layout" "on-layout" "22" "56" "title:" "printer" "0" "12" "Dimension" "size:" "active-separator" "on-print-preview" "print-preview" "on-print" ":document" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" "tooltip-text:" "print" "name:" "Toolbar")
        {Lisp-Entry "install" #f 69 11 69 18 ("file" "'file" "printer" "'printer" "active-separator" "'active-separator" "locate" "set-visible?" "nextmethod" "rest")}
        {Lisp-Entry "client-activate" #f 77 11 77 26 ("activate-page" "when" "Page-Editor" "find-guest" "editor" "get-stage" "stage" "let*")}
        {Lisp-Entry "host-icon" #f 89 16 89 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 93 16 93 26 ()}}}})
"Page-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Page-Workspace.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Page-Workspace" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Page-Workspace" #f 46 7 46 21 ("Page-Text-Palette" "-32" "status" "Page-Status" "-23" "line" "second" "text" "Page-Toolbar" "model-name:" "first" "vert" "orientation:" "split" "state:" "27" "division:" "edge" "separator:" "root" "location:" "toolbar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Workspace-Preferences")
        {Lisp-Entry "previous" #f 49 12 49 20 ("generate")}}}})
"Paint-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Paint-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Paint-Event" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Paint-Event" #f 44 7 44 18 ("Event")
        {Lisp-Entry "surface" #f 47 8 47 15 ()}
        {Lisp-Entry "initialize" #f 50 11 50 21 ("surface~self" "set!" "nextmethod" "surface" "sender" "kind")}
        {Lisp-Entry "get-dc" #f 55 18 55 24 ("surface")}
        {Lisp-Entry "get-hdc" #f 59 18 59 25 ("surface" "get-hdc")}}}})
"Palette"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Palette.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.Palette" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Palette" #f 46 7 46 14 ("Overlapped")
        {Lisp-Entry "default-parent" #f 56 15 56 29 ("get-toplevel")}
        {Lisp-Entry "default-parent" #f 59 15 59 29 ("get-desktop")}
        {Lisp-Entry "new-root" #f 68 11 68 19 ("offscreen?:" "Palette-Host" "new")}
        {Lisp-Entry "mouse-activate?" #f 100 11 100 26 ()}
        {Lisp-Entry "on-close" #f 104 11 104 19 ("processed" "set-visible?" "evt")}}}})
"Palette-Host"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Palette-Host.jazz"} 1245430960
    {Lisp-Entry "jazz.ui.hosting.Palette-Host" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Palette-Host" #f 51 7 51 19 ("Host-View")
        {Lisp-Entry "on-close" #f 59 11 59 19 ("player" "hide" "evt")}
        {Lisp-Entry "dock-palette" #f 69 11 69 23 ("dock-feedback" "highlight:" "get-toplevel" "list" "include:" "dock-to" "click:" "pick-figure")}
        {Lisp-Entry "dock-feedback" #f 76 11 76 24 ("figure-rect" "self" "set-feedback-rect" "pos" "figure" "picker")}
        {Lisp-Entry "figure-rect" #f 81 16 81 27 ("get-bounds" "get-parent" "acquire" "get-root" "root" "get-display" "display" "get-player" "player" "let" "View" "is?" "when" "figure" "picker")}
        {Lisp-Entry "dock-to" #f 90 11 90 18 ("set-selection" "set-guest" "set-title" "parent:" "Docked-Host" "new" "new-host" "close" "unanchor-guest" "set-parent" "get-title" "title" "guest" "player" "let*" "null?" "Pad-Window" "find-ascendant" "to-pad" "get-guest" "to-guest" "bell" "Host-View" "is-not?" "if" "get-player" "to-player" "let" "pos" "to-view")}}
      {Lisp-Entry "Palette-Menu" #f 116 7 116 19 ("on-dock" ":form" "Event-Handler" "action-handler:" "title:" "dock" "name:" "Context-Menu")
        {Lisp-Entry "on-dock" #f 124 11 124 18 ("dock-palette" "evt")}}}})
"Palette-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Palette-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Palette-Preferences" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Palette-Preferences" #f 47 7 47 26 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "find-client" #f 59 11 59 22 ("get-name" "autoload" "get-toplevel" "find-host")}
        {Lisp-Entry "apply-preferences" #f 68 11 68 28 ("set-visible?" "client-activate" "nextmethod" "client")}}}})
"Paragraph"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Paragraph.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Paragraph" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Paragraph" #f 50 7 50 16 ("Outline-Row")
        {Lisp-Entry "format" #f 53 18 53 24 ("generate")}
        {Lisp-Entry "string" #f 54 18 54 24 ("generate")}
        {Lisp-Entry "runs" #f 55 18 55 22 ("generate")}
        {Lisp-Entry "lines" #f 56 18 56 23 ("generate")}
        {Lisp-Entry "print" #f 59 11 59 16 ("string" "write" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "set-size" #f 67 11 67 19 ("size" "set!" "sz")}
        {Lisp-Entry "get-length" #f 76 18 76 28 ("string" "cardinality" "cast")}
        {Lisp-Entry "paragraph-left" #f 80 18 80 32 ("format" "get-left-margin" "position" "get-h" "+")}
        {Lisp-Entry "paragraph-top" #f 84 18 84 31 ("position" "get-v")}
        {Lisp-Entry "compute-width" #f 93 18 93 31 ("runs" "compute-width" "increase!" "run" "function" "for-each" "format" "get-left-margin" "width" "let")}
        {Lisp-Entry "range-region" #f 107 21 107 33 ("or" "'or" "combine!" "self" "if" "range-region" "sub" "with-closed" "limit" "function" "for-each-range" "region" "w" "e" "col->text" "s" "else" "offset-rect" "offset" "get-bottom" "get-top" "-" "right" "col->view" "get-h" "beginning" "lines" "last" "line" "let*" "acquire-delta" "rect:" "Region" "get-height" "+" "Rect" "new" "rect" "not" "=" "and" "cond" "size" "get-width" "width" "paragraph-top" "top" "paragraph-left" "left" "string" "cardinality" "re" "0" "either" "rs" "let" "sc" "dv" "dh" "end" "start" "left-padding")}
        {Lisp-Entry "for-each-range" #f 138 11 138 25 ("else" "cond" "get-length" "len" "line" "let*" "to" "from" "n" "for" "loop" "limit" "beginning" "let" "get-col" "get-line" "get-row" "=" "if" "/=" "when" "proc" "ignored" "end" "start")}
        {Lisp-Entry "get-line" #f 157 18 157 26 ("lines" "element" "n")}
        {Lisp-Entry "get-line-at" #f 161 18 161 29 ("col->text" "get-row" "get-line" "col")}
        {Lisp-Entry "get-run" #f 170 18 170 25 ("continuation-return" "<=" ">" "and" "when" "limit" "offset" "run" "runs" "for-each-run" "return" "function" "continuation-capture" "col")}
        {Lisp-Entry "first-run" #f 180 18 180 27 ("car" "runs" "null?" "if")}
        {Lisp-Entry "range-runs" #f 186 21 186 31 ("get-output" "right" "left" "over" "put" "inside" "case" "limit" "offset" "where" "for-each-range-run" "get-style" "string" "subseq!" "Run" "e" "s" "run" "function" "make" "List-Factory" "new" "fact" "let" "end" "start")}
        {Lisp-Entry "for-each-run" #f 205 11 205 23 ("set!" "+" "limit" "get-length" "len" "let*" "run" "function" "for-each" "0" "offset" "let" "proc" "runs")}
        {Lisp-Entry "for-each-range-run" #f 223 11 223 29 ("right" "'right" "else" "left" "'left" "over" "'over" ">" "<" "inside" "'inside" "and" "outside" "'outside" ">=" "<=" "or" "cond" "limit" "offset" "run" "function" "runs" "for-each-run" "proc" "end" "start")}
        {Lisp-Entry "set-style" #f 246 21 246 30 ("s" "function" "modify-style" "style" "end" "start")}
        {Lisp-Entry "set-text-alignment" #f 252 21 252 39 ("set-alignment" "extend" "let" "style" "function" "modify-style" "alignment" "end" "start")}
        {Lisp-Entry "set-text-font" #f 260 21 260 34 ("set-font" "extend" "let" "style" "function" "modify-style" "font" "end" "start")}
        {Lisp-Entry "set-text-color" #f 268 21 268 35 ("set-color" "extend" "let" "style" "function" "modify-style" "color" "end" "start")}
        {Lisp-Entry "set-highlight-color" #f 276 21 276 40 ("set-highlight" "extend" "let" "style" "function" "modify-style" "color" "end" "start")}
        {Lisp-Entry "set-font-name" #f 284 21 284 34 ("set-font" "get-font" "extend-font-name" "font" "extend" "let*" "font:" "supports?" "when" "style" "function" "modify-style" "name" "end" "start")}
        {Lisp-Entry "set-point-size" #f 294 21 294 35 ("set-font" "get-font" "extend-point-size" "font" "extend" "let*" "font:" "supports?" "when" "style" "function" "modify-style" "size" "end" "start")}
        {Lisp-Entry "toggle-bold" #f 304 21 304 32 ("set-font" "get-font" "toggle-bold" "font" "extend" "let*" "style" "function" "modify-style" "end" "start")}
        {Lisp-Entry "toggle-italic" #f 313 21 313 34 ("set-font" "get-font" "toggle-italic" "font" "extend" "let*" "style" "function" "modify-style" "end" "start")}
        {Lisp-Entry "toggle-underline" #f 322 21 322 37 ("set-font" "get-font" "toggle-underline" "font" "extend" "let*" "style" "function" "modify-style" "end" "start")}
        {Lisp-Entry "modify-style" #f 331 11 331 23 ("get-output" "coalesce-runs" "runs" "set!" "right" "left" "over" "inside" "put" "outside" "case" "limit" "offset" "where" "for-each-range-run" "intern-style" "new-style" "style" "make" "get-style" "subseq!" "Run" "e" "s" "run" "function" "split" "List-Factory" "new" "fact" "string" "cardinality" "0" "either" "parent" "text" "let*" "proc" "end" "start")}
        {Lisp-Entry "remove-coloring" #f 364 21 364 36 ("runs" "set!" "set-style" "get-color" "Text-Style" "is?" "and" "when" "get-style" "style" "run" "function" "for-each" "modified?" "parent" "text" "let" "default-style")}
        {Lisp-Entry "coalesce-runs" #f 376 11 376 24 ("set-cdr!" "cardinality" "cast" "get-string" "grow-subseq!" "set!" "propagate?" "not" "neq?" "or" "get-style" "previous-style" "car" "previous-run" "not-null?" "while" "cdr" "scan" "previous" "let" "null?" "if" "runs")}
        {Lisp-Entry "flatten" #f 397 21 397 28 ("get-height" "row-height" "list" "lines" "set!" "0" "runs" "parent" "Line" "new" "line" "let")}
        {Lisp-Entry "wrap" #f 403 21 403 25 ("+" "row-height" "lines~self" "wrap" "get-length" "increase!" "set!" "reset" "height-update" "for-each" "get-height" "height" "Line" "line" "tail" "'tail" "justify" "center" "centered" "case" "line-left" "get-output" "runs" "right" "break-line" "put" "run" "function" "place" "lruns" "List-Factory" "new" "lines" "get-tabs" "tabs" "top" "left" "get-paragraph-spacing" "spacing" "get-left-margin" "margin" "format" "get-justification" "justification" "offset" "0" "rank" "parent" "text" "let*" "width" "context")}
        {Lisp-Entry "Bullet-Outside" #f 444 14 444 28 ("Blue" "name:" "Color")}
        {Lisp-Entry "Bullet-Inside" #f 447 14 447 27 ("255" "blue:" "102" "green:" "51" "red:" "Color")}
        {Lisp-Entry "draw" #f 451 11 451 15 ("lines" "get-height" "increase!" "draw-line" "line" "function" "for-each" "draw-bullet" "get-bulleted?" "when" "0" "v" "h" "format" "get-left-margin" "left" "get-tabs" "tabs" "parent" "text" "let*" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-bullet" #f 465 11 465 22 ("Rect" "new" "ellipse" "7" "set!" "8" "=" "when" "1" "2" "-" "fxround/" "+" "vert" "Bullet-Inside" "get-bullet-inside" "inside" "Bullet-Outside" "format" "get-bullet-outside" "either" "outside" "40" "percent" "fxround" "size" "lines" "car" "get-height" "height" "let*" "left" "v" "h" "surface")}
        {Lisp-Entry "replace-range" #f 482 21 482 34 ("append!" "coalesce-runs" "runs" "set-string" "limit" "offset" "run" "function" "for-each-run" "list" ">" "replacement-list" "subseq!" "Run" "new" "replacement" "replace-subseq!" "set!" "get-default-style" "find-propagatable-style" "propagate-styles?" "not-null?" "and" "if" "style" "get-length" "after" "0" "range-runs" "before" "-" "delta" "+" "new-end" "string" "either" "cardinality" "inserted" "parent" "text" "let*" "str" "end" "start")}
        {Lisp-Entry "replace-runs" #f 506 21 506 33 ("append!" "coalesce-runs" "runs" "self" "get-view" "set-parent" "View-Style" "is?" "when" "get-style" "style" "let" "subseq!" "set-string" "limit" "offset" "run" "function" "for-each-run" "replace-subseq!" "set!" "get-length" "after" "0" "range-runs" "before" "-" "delta" "+" "new-end" "string" "either" "cardinality" "inserted" "runs->str" "str" "let*" "replacement" "end" "start")}
        {Lisp-Entry "find-propagatable-style" #f 530 11 530 34 ("parent" "get-default-style" "continuation-return" "propagate?" "when" "get-style" "style" "let" "run" "for-each-reversed" "return" "function" "continuation-capture" "runs")}
        {Lisp-Entry "replace-beginning" #f 541 21 541 38 ("0" "replace-runs" "runs")}
        {Lisp-Entry "replace-ending" #f 545 21 545 35 ("replace-runs" "string" "cardinality" "cast" "len" "let" "runs")}
        {Lisp-Entry "runs->str" #f 550 11 550 20 ("get-output-string" "get-string" "display" "run" "function" "for-each" "open-output-string" "printer" "let" "runs")}
        {Lisp-Entry "view->col" #f 564 21 564 30 ("get-length" "lines" "get-offset" "+" "continuation-return" "when" "view->col" "col" "line" "for-each" "return" "function" "continuation-capture" "get-v" "format" "get-left-margin" "get-h" "-" "Point" "new" "let" "view")}
        {Lisp-Entry "col->view" #f 576 21 576 30 ("get-v" "get-h" "paragraph-left" "+" "Point" "new" "continuation-return" "when" "get-offset" "-" "col->view" "view" "neq?" "strict?" "let*" "line" "for-each" "return" "function" "continuation-capture" "lines" "last" "let" "col")}
        {Lisp-Entry "col->text" #f 588 21 588 30 ("get-length" "get-rank" "Cell" "new" "lines" "set!" "continuation-return" "when" "col->text" "text" "line" "for-each" "return" "function" "continuation-capture" "last" "let" "col")}
        {Lisp-Entry "text->col" #f 601 21 601 30 ("text")}
        {Lisp-Entry "view->text" #f 606 21 606 31 ("view->col" "col->text" "view")}
        {Lisp-Entry "text->view" #f 611 21 611 31 ("text->col" "col->view" "text")}}}})
"Password-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Password-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Password-Request" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Password-Request" #f 46 7 46 23 ("prefix" "name:" "title:" "String-Request")}}})
"Password-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Password-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Password-Text-View" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Password-Text-View" #f 49 7 49 25 ("top-padding:" "2" "left-padding:" "Password" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Text-View")
        {Lisp-Entry "copy-selection" #f 56 11 56 25 ("bell")}
        {Lisp-Entry "get-context-menu" #f 60 11 60 27 ("new-text-context-menu")}
        {Lisp-Entry "draw-outline" #f 64 11 64 23 ("draw-caret" "draw-password" "draw-selection" "unless" "printing?:" "getf" "printing?" "bottom" "top" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "clipper" "context" "surface")}
        {Lisp-Entry "draw-password" #f 75 11 75 24 ("get-enabled?" "draw-text" "Black" "name:" "Color" "set-text-color" "set-font" "-" "get-v" "+" "v" "get-h" "h" "get-font" "get-default-style" "style" "font" "get-metrics" "font-height" "get-height" "height" "get-position" "pos" "cardinality" "make-string" "hidden" "get-string" "password" "0" "get-paragraph" "paragraph" "let*" "surface")}}}})
"Pathname-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Pathname-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Pathname-Request" #f 37 19 37 50 ("Content-Tree" "Hierarchy-Combo" "register-autoclass" "jazz")
      {Lisp-Entry "Pathname-Request" #f 50 7 50 23 ("5" "on-cancel" "cancel" "on-ok" ":host" "default?:" "enabled?:" "24" "80" "tail" "ok" "south" "36" "buttonbar" "toplevel-controls?:" "235" "width:" "title:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-double-click" "double-click-handler:" "name" "filled-column:" "content" "fill" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "center" "content-border" "hierarchy" "166" "blue:" "188" "green:" "red:" "Medium" "Color" "border-color:" "3" "border-insets:" "200" "2" "on-up" "up" "on-forward" "forward" "on-backward" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "backward" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "33" "toolbar" "name:" "border" "layout-type:" "300" "500" "Dimension" "size:" "History-Provider" "Layout-View")
        {Lisp-Entry "directory" #f 75 12 75 21 ()}
        {Lisp-Entry "filenames" #f 76 12 76 21 ()}
        {Lisp-Entry "extensions" #f 77 12 77 22 ()}
        {Lisp-Entry "anchors" #f 78 12 78 19 ()}
        {Lisp-Entry "history-manager" #f 81 8 81 23 ("self" "History-Manager" "new")}
        {Lisp-Entry "finish" #f 84 11 84 17 ("update" "setup-directory" "nextmethod" "rest")}
        {Lisp-Entry "setup-directory" #f 90 11 90 26 ("get-current-directory" "set!" "directory" "not" "when")}
        {Lisp-Entry "install-in-host" #f 95 11 95 26 ("get-tree" "acquire-focus" "host")}
        {Lisp-Entry "get-tree" #f 104 11 104 19 ("content" "'content" "locate")}
        {Lisp-Entry "get-hierarchy" #f 108 11 108 24 ("hierarchy" "'hierarchy" "locate")}
        {Lisp-Entry "get-directory" #f 112 18 112 31 ("directory")}
        {Lisp-Entry "set-directory" #f 116 18 116 31 ("directory" "set!" "dir")}
        {Lisp-Entry "install-directory" #f 120 18 120 35 ("update" "set-directory" "directory" "History-Directory" "new" "history-manager" "add-history" "dir")}
        {Lisp-Entry "effective-extensions" #f 126 11 126 31 ("cdr" "string?" "if" "ext" "function" "map" "extensions")}
        {Lisp-Entry "update" #f 139 29 139 35 ("update-buttons" "update-content" "update-history" "update-hierarchy")}
        {Lisp-Entry "update-hierarchy" #f 146 11 146 27 ("set-value" "directory" "get-hierarchy" "reverse" "get-name" "list" "pathname" "function" "map" "set-choices" "hierarchy" "'hierarchy" "locate" "combo" "let")}
        {Lisp-Entry "update-history" #f 154 11 154 25 ("'forward" "not-null?" "'backward" "locate" "set-enabled?" "get-forward-history" "forward" "history-manager" "get-backward-history" "backward" "let")}
        {Lisp-Entry "update-content" #f 161 29 161 43 ()}
        {Lisp-Entry "update-buttons" #f 165 29 165 43 ("up" "'up" "locate" "set-enabled?" "get-directory" "get-parent" "parent" "let")}
        {Lisp-Entry "add-pathname" #f 170 11 170 23 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "Bitmap-Resource" "directory?" "if" "image" "title" "let" "effective-extensions" "get-extension" "extensions" "ci=?" "test:" "get-name" "member?" "filenames" "and" "file?" "not" "or" "when" "pathname" "tree")}
        {Lisp-Entry "get-modal-result" #f 184 11 184 27 ("selected-pathname" "anchorize" "directory" "get-directory" "set-current-directory")}
        {Lisp-Entry "down" #f 194 11 194 15 ("install-directory" "dir")}
        {Lisp-Entry "current-history-item" #f 203 11 203 31 ("directory" "History-Directory" "new")}
        {Lisp-Entry "on-backward" #f 212 11 212 22 ("update" "history-manager" "go-backward-history" "get-directory" "set-directory" "evt")}
        {Lisp-Entry "on-forward" #f 217 11 217 21 ("update" "history-manager" "go-forward-history" "get-directory" "set-directory" "evt")}
        {Lisp-Entry "on-up" #f 222 11 222 16 ("get-directory" "get-parent" "install-directory" "evt")}
        {Lisp-Entry "hierarchy-change" #f 226 29 226 45 ("install-directory" "dir")}
        {Lisp-Entry "selection-change" #f 230 29 230 45 ("update-buttons")}
        {Lisp-Entry "default-action" #f 234 29 234 43 ()}
        {Lisp-Entry "ok-enabled?" #f 238 11 238 22 ("ok" "'ok" "locate" "get-enabled?")}
        {Lisp-Entry "on-double-click" #f 242 11 242 26 ("default-action" "evt")}
        {Lisp-Entry "on-return-press" #f 247 11 247 26 ("default-action" "evt")}
        {Lisp-Entry "on-escape-press" #f 252 11 252 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "selected-pathname" #f 262 11 262 28 ("get-tree" "get-single-selected-data")}
        {Lisp-Entry "anchorize" #f 266 11 266 20 ("anchors" "anchors:" "anchorize" "pathname")}}
      {Lisp-Entry "Hierarchy-Combo" #f 275 7 275 22 ("Combo-Box")
        {Lisp-Entry "content-change" #f 278 11 278 25 ("get-value" "get-host" "get-guest" "hierarchy-change" "origin")}}
      {Lisp-Entry "History-Directory" #f 290 7 290 24 ("History-Item")
        {Lisp-Entry "directory" #f 293 8 293 17 ("generate")}
        {Lisp-Entry "initialize" #f 296 11 296 21 ("directory~self" "set!" "nextmethod" "directory")}
        {Lisp-Entry "print" #f 301 11 301 16 ("directory" "format" "function" "self" "print-unreadable" "readably" "printer")}}
      {Lisp-Entry "Content-Tree" #f 312 7 312 19 ("Tree-View")
        {Lisp-Entry "selection-change" #f 315 11 315 27 ("get-host" "get-guest" "selection-change" "user-origin?" "force?" "old-selection")}}}})
"Plain-Formatted-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Plain-Formatted-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Plain-Formatted-Text-View" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Plain-Formatted-Text-View" #f 48 7 48 32 ("Text" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Formatted-Text-View")
        {Lisp-Entry "install" #f 55 11 55 18 ("Variable" "Code" "Hyperlink-Style" "Dark-Blue" "Hyperlink" "Reference" "Dark-Red" "Color" "color:" "Font" "font:" "Text-Style" "add-style" "Heading5" "Heading4" "Heading3" "Heading2" "Heading1" "keep-with-next?:" "Default" "base:" "Heading0" "name:" "Format" "add-format" "nextmethod" "rest")}}}})
"Plain-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Plain-Text-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Plain-Text-Preferences" #f 37 19 37 60 ("jazz")
      {Lisp-Entry "Plain-Text-Preferences" #f 49 7 49 29 ("Blue" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Text-Preferences")
        {Lisp-Entry "title-color" #f 52 12 52 23 ("generate")}
        {Lisp-Entry "comment-color" #f 53 12 53 25 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 68 11 68 37 ("comment-color" "title-color")}
        {Lisp-Entry "property-presentation" #f 72 16 72 37 ("nextmethod" "else" "comment-color" "title-color" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 79 11 79 27 ("nextmethod" "else" "Color-Row" "new" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Plain-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Plain-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Plain-Text-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Plain-Text-View" #f 48 7 48 22 ("12" "left-padding:" "Code" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Text-View")
        {Lisp-Entry "external-name" #f 55 16 55 29 ("plain-text" "'plain-text" "rest")}
        {Lisp-Entry "type-heuristic" #f 59 11 59 25 ("c" "'c" "jazz" "'jazz" "starts-with?" "if" "0" "paragraph-string" "first-line" "let")}
        {Lisp-Entry "host-workspaces" #f 71 11 71 26 ("text")}
        {Lisp-Entry "headers" #f 80 12 80 19 ("4" "make-string" "string-append" "list")}
        {Lisp-Entry "get-headers" #f 85 11 85 22 ("headers")}
        {Lisp-Entry "default-preferences" #f 94 14 94 33 ("Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "form>>" "instantiate")}
        {Lisp-Entry "preferences" #f 98 11 98 22 ("default-preferences" "error?:" "plain-text" "documents" "get-preferences" "either")}}}})
"Popup"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Popup.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.Popup" #f 37 19 37 39 ("jazz")
      {Lisp-Entry "Popup" #f 46 7 46 12 ("Overlapped")
        {Lisp-Entry "initiator" #f 49 8 49 17 ()}
        {Lisp-Entry "conclude" #f 57 11 57 19 ("destroy-mandatory" "nextmethod" "rest")}
        {Lisp-Entry "show" #f 62 11 62 15 ("show-noactivate" "set-visible-flag")}
        {Lisp-Entry "destroy" #f 72 11 72 18 ("nextmethod" "self" "popup-destroy" "initiator" "when")}
        {Lisp-Entry "get-initiator" #f 83 18 83 31 ("initiator")}
        {Lisp-Entry "set-initiator" #f 87 18 87 31 ("initiator" "set!" "value")}
        {Lisp-Entry "mouse-activate?" #f 96 11 96 26 ()}
        {Lisp-Entry "popup-key-press" #f 105 26 105 41 ("popup-escape-press" "eqv?" "when" "char")}
        {Lisp-Entry "popup-escape-press" #f 111 26 111 44 ("self" "close-popup" "char")}}}})
"Portfolio"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "image" "Portfolio.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.image.Portfolio" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Portfolio" #f 48 7 48 16 ("Component")
        {Lisp-Entry "width" #f 51 12 51 17 ("set-width" "get-width" "16")}
        {Lisp-Entry "height" #f 52 12 52 18 ("set-height" "get-height" "16")}
        {Lisp-Entry "masked?" #f 53 12 53 19 ("set-masked?" "get-masked?")}
        {Lisp-Entry "mask" #f 54 12 54 16 ("set-mask" "get-mask")}
        {Lisp-Entry "icons" #f 55 12 55 17 ("set-icons" "get-icons")}
        {Lisp-Entry "bitmaps" #f 56 12 56 19 ("set-bitmaps" "get-bitmaps")}
        {Lisp-Entry "handle" #f 59 8 59 14 ()}
        {Lisp-Entry "images" #f 60 8 60 14 ("equal?" "test:" "make-table")}
        {Lisp-Entry "get-handle" #f 68 18 68 28 ()}
        {Lisp-Entry "finish" #f 73 11 73 17 ("destroy-mandatory" "add-bitmap" "add-icon" "for-each" "bitmaps" "icons" "length" "+" "nb" "let" "nextmethod" "initargs")}
        {Lisp-Entry "destroy" #f 81 11 81 18 ("nextmethod" "images" "table-values" "destroy-image" "for-each")}
        {Lisp-Entry "destroy-image" #f 86 11 86 24 ("cairo_surface_destroy" "image")}
        {Lisp-Entry "get-width" #f 94 11 94 20 ("width")}
        {Lisp-Entry "set-width" #f 98 11 98 20 ("width" "set!" "w")}
        {Lisp-Entry "get-height" #f 102 11 102 21 ("height")}
        {Lisp-Entry "set-height" #f 106 11 106 21 ("height" "set!" "h")}
        {Lisp-Entry "get-masked?" #f 110 11 110 22 ("masked?")}
        {Lisp-Entry "set-masked?" #f 114 11 114 22 ("masked?" "set!" "flag")}
        {Lisp-Entry "get-mask" #f 118 11 118 19 ("mask")}
        {Lisp-Entry "set-mask" #f 122 11 122 19 ("mask" "set!" "msk")}
        {Lisp-Entry "get-icons" #f 126 11 126 20 ("icons")}
        {Lisp-Entry "set-icons" #f 130 11 130 20 ("icons" "set!" "list")}
        {Lisp-Entry "get-bitmaps" #f 134 11 134 22 ("bitmaps")}
        {Lisp-Entry "set-bitmaps" #f 138 11 138 22 ("bitmaps" "set!" "list")}
        {Lisp-Entry "add-icon" #f 148 18 148 26 ("get-name" "images" "table-set!" "height" "height:" "width" "width:" "'icon" "load-image" "icon" "let" "object")}
        {Lisp-Entry "add-bitmap" #f 153 18 153 28 ("get-name" "images" "table-set!" "get-bitmap-handle" "bitmap" "let" "object")}
        {Lisp-Entry "add-masked-bitmap" #f 158 18 158 35 ("mask" "bitmap")}
        {Lisp-Entry "get-bitmap-handle" #f 162 11 162 28 ("'bitmap" "load-image" "exists?" "and" "if" "bitmap" "find-bitmap-file" "file" "let*" "object")}
        {Lisp-Entry "preload" #f 168 18 168 25 ("get-image" "image")}
        {Lisp-Entry "get-image" #f 172 18 172 27 ("add-bitmap" "begin" "images" "table-ref" "either" "get-name" "name" "let" "integer?" "if" "image")}
        {Lisp-Entry "draw-image" #f 187 18 187 28 ("draw-image" "get-image" "let" "rest" "v" "h" "image" "context" "surface")}}}})
"Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Preferences" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Preferences" #f 45 7 45 18 ("Component")
        {Lisp-Entry "title" #f 48 12 48 17 ("generate")}
        {Lisp-Entry "icon" #f 49 12 49 16 ("generate" "Bitmap-Resource")}
        {Lisp-Entry "apply-preferences" #f 57 26 57 43 ("children" "apply-preferences" "child" "function" "for-each" "client")}
        {Lisp-Entry "save-preferences" #f 68 26 68 42 ("children" "save-preferences" "child" "function" "for-each" "client" "designer")}
        {Lisp-Entry "set-property" #f 74 18 74 30 ("self" "set-property" "value" "property" "designer")}
        {Lisp-Entry "get-component-image" #f 83 11 83 30 ("icon")}
        {Lisp-Entry "presentation-property?" #f 87 11 87 33 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 91 11 91 27 ("title")}
        {Lisp-Entry "set-presentation" #f 95 11 95 27 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "display-property?" #f 99 11 99 28 ("icon" "title" "visible?" "children" "before" "name-info" "class-info" "field-name" "memq?" "not" "property")}}}})
"Preferences-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Preferences-Manager.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Preferences-Manager" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Preferences-Manager" #f 49 7 49 26 ("Canvas-Manager")
        {Lisp-Entry "form-model" #f 52 11 52 21 ("nextmethod" "else" "Preferences-Editor" "descendants" "get-name" "case" "form")}
        {Lisp-Entry "install-in-host" #f 58 11 58 26 ("get-process" "apply-preferences" "when" "tool-preferences" "preferences" "let" "nextmethod" "host")}
        {Lisp-Entry "external-name" #f 65 16 65 29 ("preferences-manager" "'preferences-manager" "rest")}
        {Lisp-Entry "host-icon" #f 74 16 74 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 78 16 78 26 ()}
        {Lisp-Entry "host-position" #f 82 16 82 29 ()}
        {Lisp-Entry "host-size" #f 86 16 86 25 ()}
        {Lisp-Entry "host-workspaces" #f 90 11 90 26 ("home")}
        {Lisp-Entry "focus-default" #f 99 11 99 24 ("acquire-focus" "descendants" "locate" "tree" "let")}
        {Lisp-Entry "install" #f 109 11 109 18 ("get-preferences-root" "set-client" "get-application" "get-preferences-rights" "set-rights" "nextmethod" "rest")}
        {Lisp-Entry "Preferences-Manager-Controller" #f 121 9 121 39 ("Editor-View-Controller")
          {Lisp-Entry "document-status" #f 124 13 124 28 ()}}
        {Lisp-Entry "new-controller" #f 129 11 129 25 ("self" "Preferences-Manager-Controller" "new")}
        {Lisp-Entry "get-modified?" #f 138 11 138 24 ()}
        {Lisp-Entry "tool-preferences" #f 147 11 147 27 ("preferences-manager" "tools" "get-preferences")}
        {Lisp-Entry "confirm-close" #f 156 11 156 24 ("save-session" "rest")}
        {Lisp-Entry "save-session" #f 160 11 160 23 ("get-host" "save-preferences" "get-application" "get-preferences-designer" "designer" "tool-preferences" "pref" "let")}
        {Lisp-Entry "on-save-preferences" #f 171 18 171 37 ("save" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-edit" #f 177 18 177 25 ("Profile" "File" "edit-document" "get-application" "appl" "let" "evt")}
        {Lisp-Entry "on-update" #f 182 18 182 27 ("get-preferences-root" "set-client" "load-preferences" "get-process" "process" "let" "tree" "descendants" "locate" "set-selection" "evt")}
        {Lisp-Entry "show-properties" #f 194 11 194 26 ("set-single-selection" "0" "get-visible-count" ">" "get-selection" "null?" "and" "when" "acquire-focus" "card" "locate" "tree" "let")}
        {Lisp-Entry "set-application-selection" #f 206 11 206 36 ("force?" "selection")}
        {Lisp-Entry "close-application-selection" #f 210 11 210 38 ()}}
      {Lisp-Entry "Preferences-Editor" #f 219 7 219 25 ("Descendants-Editor")
        {Lisp-Entry "form-model" #f 222 11 222 21 ("nextmethod" "else" "Preferences-Tree" "tree" "get-name" "case" "form")}}
      {Lisp-Entry "Preferences-Tree" #f 233 7 233 23 ("show-branches?:" "reorderable?:" "draggable?:" ":icons" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "update-selection" #f 240 11 240 27 ("selected-components" "expand-state")}
        {Lisp-Entry "row-state" #f 244 11 244 20 ("collapsed" "'collapsed" "expanded" "'expanded" "1" "<" "if" "level" "update?" "component")}}}})
"Preferences-Manager-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Preferences-Manager-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Preferences-Manager-Preferences" #f 37 19 37 69 ("jazz")
      {Lisp-Entry "Preferences-Manager-Preferences" #f 47 7 47 38 ("441" "791" "Dimension" "size:" "94" "54" "Point" "position:" "Bitmap-Resource" "icon:" "title:" "Frame-Preferences")}}})
"Preview-Job"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Preview-Job.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Preview-Job" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Preview-Job" #f 45 7 45 18 ("Print-Job")
        {Lisp-Entry "printed-page" #f 53 11 53 23 ("page-setup")}
        {Lisp-Entry "print-landscape?" #f 57 11 57 27 ()}}}})
"Preview-Page"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Preview-Page.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Preview-Page" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Preview-Page" #f 48 7 48 19 ("View")
        {Lisp-Entry "client" #f 51 12 51 18 ("set-client" "get-client")}
        {Lisp-Entry "no" #f 52 12 52 14 ("set-no" "get-no")}
        {Lisp-Entry "dragging?" #f 55 8 55 17 ()}
        {Lisp-Entry "start-position" #f 56 8 56 22 ()}
        {Lisp-Entry "get-client" #f 64 18 64 28 ("client")}
        {Lisp-Entry "set-client" #f 68 18 68 28 ("invalidate-view" "client" "set!" "value")}
        {Lisp-Entry "get-no" #f 73 18 73 24 ("no")}
        {Lisp-Entry "set-no" #f 77 18 77 24 ("invalidate-view" "no" "set!" "value")}
        {Lisp-Entry "get-pane" #f 82 11 82 19 ("get-guest")}
        {Lisp-Entry "cursor-update" #f 91 11 91 24 (":arrow" ":opened-hand" ":closed-hand" "set-cursor" "get-mouse-down?" "hscroll-needed?" "vscroll-needed?" "or" "if" "'scrollee" "locate" "scrollee" "get-pane" "pane" "let*" "pos")}
        {Lisp-Entry "mouse-down" #f 106 11 106 21 ("acquire-capture" "start-position" "dragging?" "set!" "pos")}
        {Lisp-Entry "drag-move" #f 112 11 112 20 ("scroll" "'scrollee" "locate" "scrollee" "get-pane" "pane" "start-position" "nu-" "delta" "let*" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 120 11 120 18 ("set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "double-click" #f 126 11 126 23 ("no" "set-start" "zoom" "'zoom" "Preview-Toolbar" "find-palette" "locate" "set-value" "1.0" "set-zoom" "get-toplevel" "toplevel" "get-pane" "pane" "let" "pos")}
        {Lisp-Entry "draw" #f 139 11 139 15 ("print-page" "no" "get-page" "page" "get-job" "job" "get-pane" "pane" "let*" "lv" "lh" "context" "surface")}}}})
"Preview-Pane"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Preview-Pane.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Preview-Pane" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Preview-Pane" #f 49 7 49 19 ("centered" "center" "664" "1078" "Dimension" "size:" "scrollee" "content" "vscroll?:" "hscroll?:" "scroller" "Dark" "name:" "Color" "background:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "client" #f 52 12 52 18 ("set-client" "get-client")}
        {Lisp-Entry "job" #f 55 8 55 11 ()}
        {Lisp-Entry "pages" #f 56 8 56 13 ()}
        {Lisp-Entry "start" #f 57 8 57 13 ("0")}
        {Lisp-Entry "preserved" #f 58 8 58 17 ()}
        {Lisp-Entry "host-workspaces" #f 74 11 74 26 ("preview")}
        {Lisp-Entry "get-job" #f 83 18 83 25 ("job")}
        {Lisp-Entry "guest-actions" #f 92 11 92 24 ("nextmethod" "preview-pane" "'preview-pane" "find-actions" "cons")}
        {Lisp-Entry "on-print" #f 102 11 102 19 ("client" "print-document" "evt")}
        {Lisp-Entry "on-print-layout" #f 106 11 106 26 ("from-preview?:" "client" "print-layout" "evt")}
        {Lisp-Entry "on-home" #f 110 11 110 18 ("0" "set-start" "evt")}
        {Lisp-Entry "on-end" #f 114 11 114 17 ("modulo" "set-start" "1" "-" "last" "job" "get-pages" "pages" "length" "count" "let*" "evt")}
        {Lisp-Entry "on-previous" #f 121 11 121 22 ("previous" "evt")}
        {Lisp-Entry "on-next" #f 125 11 125 18 ("next" "evt")}
        {Lisp-Entry "on-close" #f 129 11 129 19 ("close-workspace" "evt")}
        {Lisp-Entry "escape-press" #f 133 11 133 23 ("close-workspace" "key")}
        {Lisp-Entry "close-workspace" #f 137 11 137 26 ("get-previous" "apply-preferences" "close" "restore-client" "selected-workspace" "workspace" "get-host" "frame" "let")}
        {Lisp-Entry "get-client" #f 150 18 150 28 ("client")}
        {Lisp-Entry "set-client" #f 154 18 154 28 ("setup-printing" "preserved" "client" "set!" "value")}
        {Lisp-Entry "restore-client" #f 159 21 159 35 ("preserved" "restore-printing" "printer" "'printer" "client" "get-page-setup-for" "wrap-header/footer")}
        {Lisp-Entry "Zoom" #f 169 14 169 18 ("0.5")}
        {Lisp-Entry "get-zoom" #f 173 18 173 26 ("Zoom")}
        {Lisp-Entry "set-zoom" #f 177 18 177 26 ("layout-view" "0" "Point" "scrollee" "'scrollee" "locate" "scroll-to" "Zoom" "set!" "value")}
        {Lisp-Entry "layout" #f 188 11 188 17 ("start" "set-start" "set-client" "function" "for-each" "zoom:" "Preview-Job" "job" "update-scrollbars" "layout-view" "13" "-" "set-size" "get-output" "pages" "get-height" "+" ">" "when" "put" "max" "set!" "get-width" "increase!" "Preview-Page" "page" "shadow" "'shadow" "border-type:" "size:" "Point" "position:" "parent:" "Border-View" "border" "not" "while" "List-Factory" "new" "fact" "horz-done?" "vert-done?" "max-v" "max-h" "v" "0" "h" "let" "close-children" "50" "separator" "4" "Dimension" "scale" "nu+" "border-size" "get-size" "display-size" "Zoom" "/" "zoom" "60" "scale-content" "scaling" "printer" "'printer" "get-page-setup-for" "page-setup" "client" "get-print-area" "print-area" "'centered" "centered" "'scrollee" "locate" "scrollee" "let*" "nextmethod")}
        {Lisp-Entry "get-page-height" #f 241 11 241 26 ("size" "get-height")}
        {Lisp-Entry "previous" #f 250 18 250 26 ("start" "-" "0" "max" "set-start" "pages" "length" "count" "let")}
        {Lisp-Entry "next" #f 255 18 255 22 ("set-start" "<" "when" "start" "+" "pg" "job" "get-pages" "pages" "length" "count" "let*")}
        {Lisp-Entry "set-start" #f 263 18 263 27 ("0" "naturals" "pages" "set-no" "set-visible?" ">=" "if" "+" "pg" "get-parent" "border" "n" "page" "function" "for-each" "job" "get-pages" "length" "count" "let" "start" "set!" "value")}}}})
"Preview-Pane-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Preview-Pane-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Preview-Pane-Actions" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Preview-Pane-Actions" #f 46 7 46 27 ("Next" "on-next" "next" "Prior" "on-previous" "previous" "End" "on-end" "end" "Home" "Shortcut" "shortcut:" "on-home" ":focus" "Event-Handler" "action-handler:" "home" "name:" "Actions")}}})
"Preview-Status"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Preview-Status.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Preview-Status" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Preview-Status" #f 47 7 47 21 ("center" "location:" "20" "782" "Dimension" "size:" "message" "name:" "Status-Toolbar")
        {Lisp-Entry "host-icon" #f 60 16 60 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 64 16 64 26 ()}}}})
"Preview-Toolbar"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Preview-Toolbar.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Preview-Toolbar" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Preview-Toolbar" #f 49 7 49 22 ("on-close" "22" "60" "title:" "close" "zoom" "166" "blue:" "188" "green:" "200" "red:" "Medium" "Color" "border-color:" "2" "Rect" "border-insets:" "21" "80" "Dimension" "size:" "on-next" "next" "on-previous" "previous" "on-print-layout" "print-layout" "on-print" ":document" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" "tooltip-text:" "print" "name:" "Toolbar")
        {Lisp-Entry "Zoom-Factors" #f 67 14 67 26 ("0.25" "0.33" "0.50" "0.75" "1.0" "1.5" "2.0" "5.0")}
        {Lisp-Entry "finish" #f 78 11 78 17 ("0.50" "set-value" "Zoom-Factors" "zoom" "'zoom" "locate" "set-choices" "nextmethod" "initargs")}
        {Lisp-Entry "host-icon" #f 89 16 89 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 93 16 93 26 ()}
        {Lisp-Entry "set-preview-zoom" #f 102 11 102 27 ("set-zoom" "current-document" "pane" "let" "zoom")}}
      {Lisp-Entry "Zoom-Combo" #f 112 7 112 17 ("Combo-Box")
        {Lisp-Entry "combo-choice" #f 115 11 115 23 ("get-value" "creator" "set-preview-zoom")}}}})
"Preview-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Preview-Workspace.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Preview-Workspace" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Preview-Workspace" #f 46 7 46 24 ("Preview-Status" "-23" "line" "second" "status" "Preview-Toolbar" "model-name:" "first" "vert" "orientation:" "split" "state:" "27" "division:" "edge" "separator:" "root" "location:" "toolbar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Workspace-Preferences")
        {Lisp-Entry "previous" #f 49 12 49 20 ("set-previous" "get-previous")}
        {Lisp-Entry "pane" #f 50 12 50 16 ("set-pane" "get-pane")}
        {Lisp-Entry "get-pane" #f 67 18 67 26 ("pane")}
        {Lisp-Entry "set-pane" #f 71 18 71 26 ("pane" "set!" "value")}
        {Lisp-Entry "get-previous" #f 75 18 75 30 ("previous")}
        {Lisp-Entry "set-previous" #f 79 18 79 30 ("previous" "set!" "value")}
        {Lisp-Entry "apply-preferences" #f 88 11 88 28 ("nextmethod" "apply" "pane" "layout-view" "rest")}}}})
"Print-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Print-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Print-Event" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Print-Event" #f 44 7 44 18 ("Event")
        {Lisp-Entry "surface" #f 47 8 47 15 ()}
        {Lisp-Entry "context" #f 48 8 48 15 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("context~self" "surface~self" "set!" "nextmethod" "context" "surface" "sender" "kind")}
        {Lisp-Entry "get-dc" #f 57 18 57 24 ("surface")}
        {Lisp-Entry "get-hdc" #f 61 18 61 25 ("surface" "get-hdc")}
        {Lisp-Entry "get-context" #f 65 18 65 29 ("context")}}}})
"Print-Job"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Print-Job.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Print-Job" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Print-Job" #f 46 7 46 16 ("Object")
        {Lisp-Entry "surface" #f 49 8 49 15 ()}
        {Lisp-Entry "selection?" #f 50 8 50 18 ()}
        {Lisp-Entry "from" #f 51 8 51 12 ()}
        {Lisp-Entry "to" #f 52 8 52 10 ()}
        {Lisp-Entry "nb-copies" #f 53 8 53 17 ()}
        {Lisp-Entry "client" #f 54 8 54 14 ()}
        {Lisp-Entry "page-setup" #f 55 8 55 18 ()}
        {Lisp-Entry "resolution" #f 56 8 56 18 ()}
        {Lisp-Entry "scaling" #f 57 8 57 15 ()}
        {Lisp-Entry "zoom" #f 58 8 58 12 ()}
        {Lisp-Entry "pages" #f 59 8 59 13 ()}
        {Lisp-Entry "initialize" #f 62 11 62 21 ("paginate" "pages" "zoom~self" "scale-content" "either" "scaling~self" "resolution~self" "page-setup~self" "client~self" "nb-copies~self" "to~self" "from~self" "selection?~self" "surface~self" "set!" "nextmethod" "1" "nb-copies" "nb-copies:" "to" "to:" "from" "from:" "selection?" "selection?:" "zoom" "zoom:" "scaling" "scaling:" "resolution" "page-setup" "client" "surface")}
        {Lisp-Entry "get-dc" #f 88 18 88 24 ("surface")}
        {Lisp-Entry "get-selection?" #f 92 18 92 32 ("selection?")}
        {Lisp-Entry "get-from" #f 96 18 96 26 ("from")}
        {Lisp-Entry "get-to" #f 100 18 100 24 ("to")}
        {Lisp-Entry "get-nb-copies" #f 104 18 104 31 ("nb-copies")}
        {Lisp-Entry "get-client" #f 108 18 108 28 ("client")}
        {Lisp-Entry "get-pages" #f 112 18 112 27 ("pages")}
        {Lisp-Entry "get-page" #f 116 18 116 26 ("pages" "element" "n")}
        {Lisp-Entry "print-job" #f 125 18 125 27 ("print-document" "nb-copies" "repeat" "loop" "function" "with-document")}
        {Lisp-Entry "print-document" #f 132 11 132 25 ("length" "to" "1" "-" "from" "if" "naturals" "pages" "0" "surface" "print-page" "with-page" "no" "page" "function" "for-each")}
        {Lisp-Entry "with-orientation" #f 142 11 142 27 ("with-landscape" "rect-size" "page-size" "counterclockwise" "'counterclockwise" "orientation" "let" "not" "inverse-rect" "if" "with-clipper" "function" "print-landscape?" "landscape?" "let*" "proc" "clipper" "page" "surface")}
        {Lisp-Entry "print-page" #f 157 18 157 28 ("client" "setup-clipper" "clipper" "new-lv" "new-lh" "get-top" "top" "get-left" "left" "content" "get-v" "get-h" "-" "get-content-rect" "content-rect" "0" "Point" "acquire" "offset" "paint-drawing" "function" "with-orientation" "page-setup" "wrap-header/footer" "scale" "offset-rect" "printed-rect" "get-bounds" "printed-bounds" "printed-page" "printed" "scaling" "60" "resolution" "/" "*" "ratio" "1.0" "either" "zoom" "print-context" "context" "let*" "no" "page" "lv" "lh" "surface")}
        {Lisp-Entry "printed-page" #f 183 29 183 41 ("page-setup" "get-printable")}
        {Lisp-Entry "print-landscape?" #f 187 29 187 45 ("landscape" "'landscape" "page-setup" "get-orientation" "eq?")}
        {Lisp-Entry "print-context" #f 191 11 191 24 ("present-date-time" "print-time:" "local-date" "present-date-day" "print-date:" "pages" "length" "page-count:" "page-no:" "client-filename" "either" "filename:" "selection?" "print-selection?:" "print-black/white?:" "printing?:" "list" "no")}
        {Lisp-Entry "client-filename" #f 205 11 205 26 ("get-name" "get-controller" "get-moniker" "moniker" "Document" "is?" "when" "client" "get-guest" "guest" "let")}
        {Lisp-Entry "paginate" #f 218 11 218 19 ("client" "paginate" "paginate-height" "scaling" "60" "resolution" "*" "/" "ceiling" "paginate-width" "get-height" "height" "get-width" "width" "page-setup" "get-content" "content" "let*")}
        {Lisp-Entry "with-document" #f 232 18 232 31 ("end-document" "start-document" "proc")}
        {Lisp-Entry "start-document" #f 238 29 238 43 ()}
        {Lisp-Entry "end-document" #f 242 29 242 41 ()}
        {Lisp-Entry "with-page" #f 251 18 251 27 ("end-page" "start-page" "proc" "no")}
        {Lisp-Entry "start-page" #f 257 29 257 39 ("no")}
        {Lisp-Entry "end-page" #f 261 29 261 37 ("no")}}}})
"Print-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Print-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Print-Preferences" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Print-Preferences" #f 47 7 47 24 ("title:" "Preferences")
        {Lisp-Entry "color?" #f 50 12 50 18 ("generate")}
        {Lisp-Entry "can-rename-component?" #f 62 11 62 32 ()}
        {Lisp-Entry "can-delete-component?" #f 66 11 66 32 ()}
        {Lisp-Entry "can-move-component?" #f 70 11 70 30 ()}
        {Lisp-Entry "can-copy-component?" #f 74 11 74 30 ()}
        {Lisp-Entry "get-row-instance" #f 78 11 78 27 ("nextmethod" "else" "Boolean-Row" "new" "color?" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 84 11 84 37 ("color?")}}}})
"Printer-Job"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "Printer-Job.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.Printer-Job" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Printer-Job" #f 47 7 47 18 ("Print-Job")
        {Lisp-Entry "start-document" #f 55 11 55 25 ("DOCINFO-free" "surface" "get-surface" "cairo_win32_surface_get_dc" "StartDoc" "0" "DOCINFO-fwType-set!" "DOCINFO-lpszDocName-set!" "DOCINFO-sizeof" "DOCINFO-cbSize-set!" "DOCINFO-make" "rec" "let")}
        {Lisp-Entry "end-document" #f 64 11 64 23 ("surface" "get-surface" "cairo_win32_surface_get_dc" "EndDoc")}
        {Lisp-Entry "start-page" #f 73 11 73 21 ("surface" "get-surface" "cairo_win32_surface_get_dc" "StartPage" "no")}
        {Lisp-Entry "end-page" #f 77 11 77 19 ("surface" "get-surface" "cairo_win32_surface_get_dc" "EndPage" "no")}}}})
"Progress-Bar"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Progress-Bar.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Progress-Bar" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Progress-Bar" #f 47 7 47 19 ("View")
        {Lisp-Entry "Bar-Width" #f 50 14 50 23 ("12")}
        {Lisp-Entry "Bar-Spacing" #f 53 14 53 25 ("2")}
        {Lisp-Entry "infinite?" #f 57 12 57 21 ("set-infinite?" "get-infinite?")}
        {Lisp-Entry "pos" #f 60 8 60 11 ("0")}
        {Lisp-Entry "range" #f 61 8 61 13 ("9" "0" "Range")}
        {Lisp-Entry "step" #f 62 8 62 12 ("1")}
        {Lisp-Entry "bars" #f 63 8 63 12 ("0")}
        {Lisp-Entry "default-size" #f 66 11 66 23 ("20" "100" "Dimension")}
        {Lisp-Entry "get-infinite?" #f 75 18 75 31 ("infinite?")}
        {Lisp-Entry "set-infinite?" #f 79 18 79 31 ("infinite?" "set!" "flag")}
        {Lisp-Entry "get-pos" #f 83 18 83 25 ("pos")}
        {Lisp-Entry "set-pos" #f 87 18 87 25 ("invalidate-bars" "pos" "set!" "p")}
        {Lisp-Entry "delta-pos" #f 92 18 92 27 ("invalidate-bars" "range" "get-end" "modulo" "set!" "infinite?" "when" "pos" "increase!" "increment")}
        {Lisp-Entry "set-step" #f 99 18 99 26 ("step" "set!" "increment")}
        {Lisp-Entry "step-it" #f 103 18 103 25 ("step" "delta-pos")}
        {Lisp-Entry "set-done" #f 107 18 107 26 ("range" "get-end" "set-pos")}
        {Lisp-Entry "get-range" #f 111 18 111 27 ("range")}
        {Lisp-Entry "set-range" #f 115 18 115 27 ("invalidate-bars" "range" "set!" "rng")}
        {Lisp-Entry "invalidate-bars" #f 125 11 125 26 ("invalidate-view" "set!" "bars" "/=" "when" "calculate-bars" "n" "let")}
        {Lisp-Entry "calculate-bars" #f 132 11 132 25 ("Bar-Spacing" "Bar-Width" "quotient" "1" "pos" "*" "fxceiling/" "+" "right" "2" "get-width" "-" "width" "get-bounds" "bounds" "let*" "0" "=" "if" "get-end" "end" "range" "get-start" "start" "let")}
        {Lisp-Entry "draw" #f 148 11 148 15 ("0" "naturals" "Bar-Spacing" "increase!" "Focused-Selection" "name:" "Color" "min" "Rect" "new" "fill-rect" "=" "infinite?" "not" "or" "when" "Bar-Width" "+" "right" "let" "n" "function" "for-each" "1" "bars" "last" "3" "-" "max-right" "top" "2" "left" "get-height" "height" "get-width" "width" "let*" "rectangle" "'rectangle" "edges:" "sunken" "'sunken" "outer:" "get-bounds" "draw-edge" "lv" "lh" "context" "surface")}}}})
"Progress-Reporter"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Progress-Reporter.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Progress-Reporter" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Progress-Reporter" #f 48 7 48 24 ("on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-action" ":form" "Event-Handler" "action-handler:" "22" "90" "87" "319" "action" "88" "progress" "297" "70" "message" "16" "300" "23" "50" "invite" "name:" "Bitmap-Resource" "image-name:" ":large-icons" "portfolio:" "32" "20" "10" "Point" "position:" "128" "420" "Dimension" "size:" "title:" "Reporter" "View")
        {Lisp-Entry "cancelled?" #f 51 8 51 18 ()}
        {Lisp-Entry "done?" #f 52 8 52 13 ()}
        {Lisp-Entry "install" #f 64 11 64 18 ("action" "'action" "acquire-focus" "0" "set-pos" "'progress" "locate" "progress" "let" "nextmethod" "rest")}
        {Lisp-Entry "host-title" #f 76 16 76 26 ()}
        {Lisp-Entry "dialog-class" #f 81 16 81 28 ("Progress-Reporter-Dialog")}
        {Lisp-Entry "Progress-Reporter-Dialog" #f 86 14 86 38 ("Dialog")
          {Lisp-Entry "on-close" #f 89 13 89 21 ("processed" "guest" "request-cancel" "closable?" "when" "evt")}}
        {Lisp-Entry "disable-cancel" #f 100 11 100 25 ("action" "'action" "locate" "set-enabled?")}
        {Lisp-Entry "cancel-enabled?" #f 104 11 104 26 ("action" "'action" "locate" "get-enabled?")}
        {Lisp-Entry "cancel-requested?" #f 108 11 108 28 ("cancelled?")}
        {Lisp-Entry "test-cancelled" #f 112 11 112 25 ("throw-cancel" "cancel-requested?" "when")}
        {Lisp-Entry "on-action" #f 122 11 122 20 ("current-action" "evt")}
        {Lisp-Entry "on-return-press" #f 127 11 127 26 ("current-action" "evt")}
        {Lisp-Entry "escape-press" #f 132 11 132 23 ("request-cancel" "cancel-enabled?" "when" "key")}
        {Lisp-Entry "section-title" #f 142 11 142 24 ("set-message" "title")}
        {Lisp-Entry "set-message" #f 146 18 146 29 ("message" "'message" "locate" "set-title" "msg")}
        {Lisp-Entry "user-message" #f 150 18 150 30 ("format" "apply" "set-message" "rest" "fmt")}
        {Lisp-Entry "set-range" #f 154 18 154 27 ("progress" "'progress" "locate" "set-range" "range")}
        {Lisp-Entry "set-pos" #f 158 18 158 25 ("progress" "'progress" "locate" "set-pos" "pos")}
        {Lisp-Entry "delta-pos" #f 162 18 162 27 ("progress" "'progress" "locate" "delta-pos" "increment")}
        {Lisp-Entry "set-step" #f 166 18 166 26 ("progress" "'progress" "locate" "set-step" "increment")}
        {Lisp-Entry "step-it" #f 170 18 170 25 ("progress" "'progress" "locate" "step-it")}
        {Lisp-Entry "set-done" #f 174 18 174 26 ("set-default?" "done-title" "action" "'action" "set-title" "progress" "'progress" "locate" "set-done" "done?" "set!")}
        {Lisp-Entry "current-action" #f 186 11 186 25 ("request-cancel" "done-action" "done?" "if")}
        {Lisp-Entry "request-cancel" #f 193 26 193 40 ("set-message" "cancelled?" "set!")}
        {Lisp-Entry "done-title" #f 198 29 198 39 ()}
        {Lisp-Entry "done-action" #f 202 29 202 40 ("get-modal-result" "end-modal" "get-guest" "guest" "get-host" "dialog" "let*")}}}})
"Projects-Search"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Projects-Search.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Projects-Search" #f 37 19 37 49 ("Entries-Combo" "Catalog-Combo" "register-autoclass" "jazz")
      {Lisp-Entry "Projects-Search" #f 50 7 50 22 ("entries" "41" "45" "catalog" "Entry-Border" "Medium" "Color" "border-color:" "3" "2" "Rect" "border-insets:" "22" "155" "17" "163" "16" "46" "21" "115" "44" "references" "selected?:" "18" "100" "Dimension" "size:" "20" "13" "Point" "position:" "definitions" "title:" "domain" "name:" "Search-View")
        {Lisp-Entry "finish" #f 69 11 69 17 ("setup-catalogs" "nextmethod" "rest")}
        {Lisp-Entry "setup-catalogs" #f 74 11 74 25 ("entries" "'entries" "set-value" "collect-catalogs" "list" "cons" "set-choices" "catalog" "'catalog" "locate" "combo" "let")}
        {Lisp-Entry "collect-catalogs" #f 83 11 83 27 ("get-application" "get-cataloguer" "get-catalogs" "get-name" "->string" "list" "catalog" "function" "map")}
        {Lisp-Entry "set-session-properties" #f 94 11 94 33 ("set-ignore-case?" "set-whole-words?" "nextmethod" "config")}
        {Lisp-Entry "get-search-domains" #f 105 11 105 29 ("references" "definitions")}
        {Lisp-Entry "catalog-change" #f 115 11 115 25 ("catalog")}
        {Lisp-Entry "search-targets" #f 124 11 124 25 ("search-targets-references" "references" "search-targets-definitions" "definitions" "domain" "'domain" "locate" "get-content" "get-selected-element" "case" "targets")}
        {Lisp-Entry "search-targets-definitions" #f 132 11 132 37 ("select-results" "add-results" "set-references-target" "'definitions" "set-mode" "get-results" "results" "else" "edit" "case" "user-message" "bell" "begin" "null?" "ignore-case?:" "whole-words?:" "search-definitions" "definitions" "get-ignore-case?" "ignore-case?" "get-whole-words?" "whole-words?" "get-target" "string->symbol" "name" "get-application" "get-cataloguer" "cataloguer" "selected-catalog" "catalog" "car" "target" "let" "message-box" "1" "length" ">" "if" "targets")}
        {Lisp-Entry "search-targets-references" #f 157 11 157 36 ("select-results" "get-search-targets" "add-results" "set-references-target" "set-context" "'references" "set-mode" "get-results" "results" "else" "edit-reference" "case" "user-message" "bell" "begin" "null?" "get-references" "references" "get-target" "string->symbol" "name" "get-application" "get-cataloguer" "cataloguer" "selected-catalog" "catalog" "get-ignore-case?" "get-whole-words?" "not" "car" "target" "let" "message-box" "1" "length" ">" "if" "targets")}
        {Lisp-Entry "search-definitions" #f 190 21 190 39 ("select-results" "get-search-targets" "add-results" "->string" "list" "set-search-targets" "locate" "set-selected?" "set-references-target" "'definitions" "set-mode" "get-results" "results" "let" "definitions" "name")}
        {Lisp-Entry "search-references" #f 200 21 200 38 ("select-results" "get-search-targets" "add-results" "->string" "list" "set-search-targets" "locate" "set-selected?" "set-references-target" "set-context" "'references" "set-mode" "get-results" "results" "let" "ctx" "references" "name")}
        {Lisp-Entry "selected-catalog" #f 216 11 216 27 ("catalog" "'catalog" "locate" "get-value")}}
      {Lisp-Entry "Catalog-Combo" #f 225 7 225 20 ("Combo-Box")
        {Lisp-Entry "content-change" #f 228 11 228 25 ("get-value" "get-creator" "catalog-change" "origin")}}
      {Lisp-Entry "Entries-Combo" #f 240 7 240 20 ("Combo-Box")}}})
"Projects-Search-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Projects-Search-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Projects-Search-Preferences" #f 37 19 37 61 ("jazz")
      {Lisp-Entry "Projects-Search-Preferences" #f 46 7 46 34 ("title:" "Search-View-Preferences")}}})
"Prop-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Prop-Text-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Prop-Text-Preferences" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "Prop-Text-Preferences" #f 49 7 49 28 ("Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" #f 52 12 52 23 ("generate")}
        {Lisp-Entry "comment-color" #f 53 12 53 25 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 68 11 68 37 ("comment-color" "title-color")}
        {Lisp-Entry "get-row-instance" #f 72 11 72 27 ("nextmethod" "else" "Color-Row" "new" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Push-Button"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Push-Button.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Push-Button" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Push-Button" #f 49 7 49 18 ("View")
        {Lisp-Entry "default?" #f 52 12 52 20 ("set-default?" "get-default?")}
        {Lisp-Entry "flat?" #f 53 12 53 17 ("set-flat?" "get-flat?")}
        {Lisp-Entry "state" #f 56 8 56 13 ("inactive" "'inactive")}
        {Lisp-Entry "mouse-activate?" #f 59 11 59 26 ()}
        {Lisp-Entry "get-default?" #f 68 18 68 30 ("default?")}
        {Lisp-Entry "set-default?" #f 72 18 72 30 ("invalidate-view" "default?" "set!" "flag")}
        {Lisp-Entry "get-flat?" #f 77 18 77 27 ("flat?")}
        {Lisp-Entry "set-flat?" #f 81 18 81 27 ("flat?" "set!" "value")}
        {Lisp-Entry "get-state" #f 90 18 90 27 ("state")}
        {Lisp-Entry "set-state" #f 94 18 94 27 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "default-size" #f 104 11 104 23 ("22" "100" "Dimension")}
        {Lisp-Entry "preferred-size" #f 108 11 108 25 ("22" "50" "font" "text-extent" "get-width" "+" "Dimension" "new" "default-size" "not" "if" "localize" "title" "let")}
        {Lisp-Entry "mouse-enter" #f 120 11 120 22 ("pushed" "'pushed" "out-pushed" "highlighted" "'highlighted" "set-state" "inactive" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-leave" #f 127 11 127 22 ("out-pushed" "'out-pushed" "pushed" "inactive" "'inactive" "set-state" "highlighted" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-down" #f 134 11 134 21 ("pushed" "'pushed" "set-state" "get-enabled?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 139 11 139 18 ("inactive" "'inactive" "out-pushed" "highlighted" "'highlighted" "set-state" "pushed" "get-state" "case" "up" "unwind-protect" "get-enabled?" "when" "rest" "pos")}
        {Lisp-Entry "up" #f 148 11 148 13 ("self" "process-action" "pushed" "'pushed" "get-state" "eq?" "when")}
        {Lisp-Entry "draw" #f 158 11 158 15 ("+" "draw-text" "set-text-color" "v" "2" "-" "quotient" "h" "get-text-extent" "extent" "get-height" "height" "get-width" "width" "get-size" "size" "let*" "'pushed" "eq?" "draw-push-button" "rectangle" "'rectangle" "edges:" "raised" "'raised" "outer:" "draw-edge" "flat?" "-1" "inflate-rect" "set!" "Dark" "Black" "name:" "Color" "if" "frame-rect" "default?" "when" "get-enabled?" "enabled?" "get-bounds" "rect" "0" "else" "1" "pushed" "state" "case" "offset" "localize" "either" "title" "let" "lv" "lh" "context" "surface")}
        {Lisp-Entry "property-presentation" #f 184 16 184 37 ("nextmethod" "else" "flat?" "default?" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 191 11 191 27 ("nextmethod" "else" "Boolean-Row" "new" "flat?" "default?" "field-name" "case" "property")}}}})
"Push-Combo"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Push-Combo.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Push-Combo" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Push-Combo" #f 47 7 47 17 ("body" "name:" "22" "31" "Dimension" "size:" "Combo-View")}}})
"Push-Icon"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Push-Icon.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Push-Icon" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Push-Icon" #f 47 7 47 16 (":icons" "portfolio:" "tooltip?:" "22" "Dimension" "size:" "Push-Tool")
        {Lisp-Entry "get-combo" #f 59 18 59 27 ("parent")}
        {Lisp-Entry "get-enabled?" #f 68 11 68 23 ("parent" "get-enabled?")}
        {Lisp-Entry "get-state" #f 72 11 72 20 ("self" "parent" "child-state")}
        {Lisp-Entry "mouse-enter" #f 76 11 76 22 ("self" "parent" "enter-child")}
        {Lisp-Entry "mouse-leave" #f 80 11 80 22 ("self" "parent" "leave-child")}
        {Lisp-Entry "mouse-down" #f 84 11 84 21 ("self" "parent" "child-down" "pos")}
        {Lisp-Entry "drag-up" #f 88 11 88 18 ("self" "parent" "child-up" "rest" "pos")}}}})
"Push-Tool"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Push-Tool.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Push-Tool" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Push-Tool" #f 46 7 46 16 ("Image-Tool")
        {Lisp-Entry "default-size" #f 49 11 49 23 ("22" "Dimension")}
        {Lisp-Entry "up" #f 53 11 53 13 ("self" "process-action" "pushed" "'pushed" "get-state" "eq?" "when")}}}})
"Radio-Button"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Radio-Button.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Radio-Button" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Radio-Button" #f 50 7 50 19 ("Selectable" "Groupable" "View")
        {Lisp-Entry "box-size" #f 53 14 53 22 ("13")}
        {Lisp-Entry "group" #f 57 12 57 17 ("set-group" "get-group")}
        {Lisp-Entry "selected?" #f 58 12 58 21 ("set-selected?" "get-selected?")}
        {Lisp-Entry "tracking?" #f 61 8 61 17 ()}
        {Lisp-Entry "inside?" #f 62 8 62 15 ()}
        {Lisp-Entry "default-size" #f 65 11 65 23 ("16" "100" "Dimension")}
        {Lisp-Entry "get-group" #f 74 11 74 20 ("group")}
        {Lisp-Entry "set-group" #f 78 11 78 20 ("group" "set!" "value")}
        {Lisp-Entry "get-selected?" #f 87 11 87 24 ("selected?")}
        {Lisp-Entry "set-selected?" #f 91 11 91 24 ("not" "set-selected-state" "get-current-selection" "current" "let" "selected?" "neq?" "when" "flag")}
        {Lisp-Entry "unselect" #f 99 11 99 19 ("set-selected-state" "selected?" "when")}
        {Lisp-Entry "get-current-selection" #f 104 11 104 32 ("parent" "get-children" "get-selected?" "Radio-Button" "is?" "and" "child" "function" "find-if")}
        {Lisp-Entry "set-selected-state" #f 111 11 111 29 ("invalidate-view" "selected?" "set!" "flag")}
        {Lisp-Entry "draw" #f 121 11 121 15 ("draw-text" "Black" "name:" "Color" "set-text-color" "inside?" "tracking?" "and" "enabled?" "inactive?:" "selected?" "selected?:" "box-size" "1" "+" "0" "Rect" "new" "draw-radio-button" "2" "-" "quotient" "v" "18" "h" "get-text-extent" "get-height" "13" "empty-string?" "not" "or" "if" "height" "localize" "either" "title" "let*" "lv" "lh" "context" "surface")}
        {Lisp-Entry "mouse-down" #f 136 11 136 21 ("invalidate-view" "acquire-capture" "inside?" "tracking?" "set!" "enabled?" "when" "pos")}
        {Lisp-Entry "drag-move" #f 144 11 144 20 ("invalidate-view" "set!" "inside?" "neq?" "over-view?" "over?" "let" "tracking?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 152 11 152 18 ("self" "process-action" "set-modified?" "selected?" "not" "set-selected?" "inside?" "set!" "release-capture" "tracking?" "when" "rest" "pos")}
        {Lisp-Entry "cursor-update" #f 167 11 167 24 ("nextmethod" ":finger" "set-cursor" "alt-down?" "if" "pos")}
        {Lisp-Entry "mouse-copy" #f 173 11 173 21 ("title" "mouse-insert" "destination" "pos")}}}})
"Radio-Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Radio-Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Radio-Item" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Radio-Item" #f 45 7 45 17 ("Selectable" "Groupable" "Label-Item")
        {Lisp-Entry "group" #f 48 12 48 17 ("set-group" "get-group")}
        {Lisp-Entry "selected?" #f 49 12 49 21 ("set-selected?" "get-selected?")}
        {Lisp-Entry "get-group" #f 57 11 57 20 ("group")}
        {Lisp-Entry "set-group" #f 61 11 61 20 ("group" "set!" "value")}
        {Lisp-Entry "radio-group" #f 65 11 65 22 ("parent" "get-children" "group" "get-group" "eq?" "Radio-Item" "is?" "and" "component" "function" "collect-if")}
        {Lisp-Entry "find-selected" #f 72 11 72 24 ("radio-group" "get-selected?" "view" "function" "find-if")}
        {Lisp-Entry "get-selected?" #f 83 11 83 24 ("selected?")}
        {Lisp-Entry "set-selected?" #f 87 11 87 24 ("not" "set-selected-state" "find-selected" "current" "let" "selected?" "neq?" "when" "flag")}
        {Lisp-Entry "unselect" #f 95 11 95 19 ("set-selected-state" "selected?" "when")}
        {Lisp-Entry "set-selected-state" #f 100 11 100 29 ("invalidate-view" "selected?" "set!" "flag")}
        {Lisp-Entry "preferred-prefix-width" #f 110 11 110 33 ("0" "12" "selected?" "if")}
        {Lisp-Entry "draw-prefix" #f 119 11 119 22 ("Bitmap-Resource" "get-small-icons-cache" "draw-image" "2" "top" "5" "left" "get-application" "appl" "let" "selected?" "when" "context" "surface")}}}})
"Radio-Tool"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Radio-Tool.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.view.Radio-Tool" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Radio-Tool" #f 47 7 47 17 ("Selectable" "Groupable" "Image-Tool")
        {Lisp-Entry "group" #f 50 12 50 17 ("set-group" "get-group")}
        {Lisp-Entry "selected?" #f 51 12 51 21 ("set-selected?" "get-selected?")}
        {Lisp-Entry "default-size" #f 54 11 54 23 ("22" "Dimension")}
        {Lisp-Entry "preferred-size" #f 63 11 63 25 ("21" "24" "localize" "font" "text-width" "+" "Dimension" "new" "default-size" "title" "not" "if")}
        {Lisp-Entry "draw-frame" #f 74 11 74 21 ("nextmethod" "draw-pushed" "out-pushed" "highlighted" "inactive" "get-state" "memq?" "selected?" "and" "if" "surface")}
        {Lisp-Entry "draw-tool" #f 80 11 80 20 ("enabled?" "get-v" "get-h" "+" "draw-text" "Black" "name:" "Color" "set-text-color" "get-size" "justify" "center" "get-text-extent" "extent" "localize" "let*" "get-enabled?" "enabled?:" "image" "draw" "not" "1" "2" "pushed" "'pushed" "get-state" "eq?" "selected?" "or" "0" "title" "if" "offset" "let" "context" "surface")}
        {Lisp-Entry "draw-background" #f 91 11 91 26 ("nextmethod" "fill-rect" "Light-Background" "White" "name:" "Color" "title" "color" "get-bounds" "bounds" "let" "selected?" "if" "context" "surface")}
        {Lisp-Entry "up" #f 104 11 104 13 ("self" "process-action" "set-selected?" "find-pushed" "let" "selected?" "not" "pushed" "'pushed" "get-state" "eq?" "and" "when")}
        {Lisp-Entry "get-group" #f 118 11 118 20 ("group")}
        {Lisp-Entry "set-group" #f 122 11 122 20 ("group" "set!" "value")}
        {Lisp-Entry "radio-group" #f 126 11 126 22 ("parent" "get-children" "group" "get-group" "eq?" "Radio-Tool" "is?" "and" "component" "function" "collect-if")}
        {Lisp-Entry "find-pushed" #f 133 11 133 22 ("radio-group" "get-selected?" "view" "function" "find-if")}
        {Lisp-Entry "get-selected?" #f 144 11 144 24 ("selected?")}
        {Lisp-Entry "set-selected?" #f 148 11 148 24 ("not" "set-selected-state" "find-pushed" "current" "let" "selected?" "neq?" "when" "flag")}
        {Lisp-Entry "unselect" #f 156 11 156 19 ("set-selected-state" "selected?" "when")}
        {Lisp-Entry "set-selected-state" #f 161 11 161 29 ("invalidate-view" "selected?" "set!" "flag")}}}})
"Recorder-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Recorder-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Recorder-Menu" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Recorder-Menu" #f 46 7 46 20 ("play-recording-5" "play-recording-4" "play-recording-3" "play-recording-2" "play-recording-1" "play-recording-0" "play-recording" "set-active-recording" "output-recording" "register-recording" "present-recording" "resume-recording" "stop-recording" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "start-recording" "name:" "title:" "Menu")}}})
"Renderer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Renderer.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Renderer" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Renderer" #f 45 11 45 19 ()
        {Lisp-Entry "render" #f 48 35 48 41 ("sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface" "drawing")}}}})
"Ruler"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Ruler.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Ruler" #f 37 19 37 37 ("jazz")
      {Lisp-Entry "Ruler" #f 49 7 49 12 ("fill" "layout-type:" "content" "name:" "shown?:" "Header-View")
        {Lisp-Entry "get-header-height" #f 62 11 62 28 ("0" "22" "shown?" "if")}
        {Lisp-Entry "Tabbed-Color" #f 71 14 71 26 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "Untabbed-Color" #f 74 14 74 28 ("blue:" "green:" "90" "red:" "Color")}
        {Lisp-Entry "draw" #f 78 11 78 15 ("draw-ruler" "get-top" "<" "when" "get-header-height" "height" "get-width" "width" "get-logical-clipper" "clipper" "let" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-ruler" #f 86 11 86 21 ("draw-measurements" "draw-border" "height" "width" "surface")}
        {Lisp-Entry "draw-border" #f 91 11 91 22 ("Medium" "name:" "Color" "fill-rect" "rectangle" "'rectangle" "edges:" "raised" "'raised" "inner:" "draw-edge" "-1" "inflate-rect" "inner" "0" "Rect" "new" "outer" "let*" "height" "width" "surface")}
        {Lisp-Entry "draw-measurements" #f 98 11 98 28 ("naturals" "line-to" "move-to" "Untabbed-Color" "Tabbed-Color" "5" "if" "offset" "0" "modulo" "=" "major?" "memq?" "tab?" ">=" "unless" "+" "pixel" "*" "rank" "n" "function" "for-each" "Black" "name:" "Color" "set-color" "get-user-tabs" "tabs" "client" "get-left-padding" "left" "1" "-" "limit" "quotient" "number" "4" "major" "8" "unit" "let*" "height" "width" "surface")}
        {Lisp-Entry "cursor-update" #f 124 11 124 24 (":arrow" "set-cursor" "pos")}
        {Lisp-Entry "mouse-down" #f 133 11 133 21 ("pos")}
        {Lisp-Entry "drag-move" #f 137 11 137 20 ("pos")}
        {Lisp-Entry "drag-up" #f 141 11 141 18 ("rest" "pos")}}}})
"Run"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Run.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Run" #f 37 19 37 35 ("jazz")
      {Lisp-Entry "Run" #f 46 7 46 10 ("Object")
        {Lisp-Entry "string" #f 49 18 49 24 ("generate")}
        {Lisp-Entry "style" #f 50 18 50 23 ("generate")}
        {Lisp-Entry "height" #f 51 18 51 24 ("generate")}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("get-height" "height~self" "style~self" "string~self" "set!" "nextmethod" "style" "string")}
        {Lisp-Entry "print" #f 61 11 61 16 ("style" "string" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-length" #f 74 18 74 28 ("string" "cardinality" "cast")}
        {Lisp-Entry "compute-width" #f 83 18 83 31 ("self" "style" "run-width")}
        {Lisp-Entry "scan" #f 92 21 92 25 ("self" "style" "scan" "proc" "tabs" "end" "start" "h")}
        {Lisp-Entry "wrap" #f 101 21 101 25 ("self" "style" "wrap" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "height-update" #f 105 21 105 34 ("style" "height-update" "height")}
        {Lisp-Entry "draw-run" #f 114 21 114 29 ("string" "style" "draw-style" "enabled?" "left" "tabs" "line-height" "v" "h" "context" "surface")}}}})
"Runtime-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Runtime-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Runtime-Event" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Runtime-Event" #f 44 7 44 20 ("Event")}}})
"Runtime-Listener"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "listener" "Runtime-Listener.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.listener.Runtime-Listener" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Runtime-Listener" #f 45 11 45 27 ("Listener")
        {Lisp-Entry "on-thread-added" #f 48 35 48 50 ("evt")}
        {Lisp-Entry "on-thread-removed" #f 49 35 49 52 ("evt")}
        {Lisp-Entry "on-gc-marking" #f 50 35 50 48 ("evt")}
        {Lisp-Entry "on-gc-sweeping" #f 51 35 51 49 ("evt")}
        {Lisp-Entry "on-gc-completed" #f 52 35 52 50 ("evt")}
        {Lisp-Entry "on-zone-expanded" #f 53 35 53 51 ("evt")}
        {Lisp-Entry "on-zone-shrinked" #f 54 35 54 51 ("evt")}}}})
"Scrollbar"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Scrollbar.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Scrollbar" #f 38 19 38 41 ("jazz")
      {Lisp-Entry "Scrollbar" #f 51 7 51 16 ("View")
        {Lisp-Entry "autorepeat-delay" #f 54 14 54 30 ("0.3")}
        {Lisp-Entry "autorepeat-period" #f 57 14 57 31 ("0.001")}
        {Lisp-Entry "orientation" #f 61 12 61 23 ("set-orientation" "get-orientation" "vert" "'vert")}
        {Lisp-Entry "pos" #f 62 12 62 15 ("set-pos" "get-pos" "0")}
        {Lisp-Entry "range" #f 63 12 63 17 ("set-range" "get-range" "9" "0" "Range")}
        {Lisp-Entry "line-height" #f 64 12 64 23 ("set-line-height" "get-line-height" "1")}
        {Lisp-Entry "page-height" #f 65 12 65 23 ("set-page-height" "get-page-height" "3")}
        {Lisp-Entry "flat?" #f 66 12 66 17 ("set-flat?" "get-flat?")}
        {Lisp-Entry "style" #f 67 12 67 17 ("set-style" "get-style")}
        {Lisp-Entry "tracking?" #f 70 8 70 17 ()}
        {Lisp-Entry "tracking-start" #f 71 8 71 22 ()}
        {Lisp-Entry "tracking-start-pos" #f 72 8 72 26 ()}
        {Lisp-Entry "autorepeat-pulse" #f 73 8 73 24 ()}
        {Lisp-Entry "print" #f 76 11 76 16 ("range" "pos" "size" "position" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-orientation" #f 87 18 87 33 ("orientation")}
        {Lisp-Entry "set-orientation" #f 91 18 91 33 ("invalidate-view" "set!" "orientation" "neq?" "when" "or")}
        {Lisp-Entry "get-pos" #f 97 18 97 25 ("pos")}
        {Lisp-Entry "set-pos" #f 101 18 101 25 ("redraw-view-only" "set!" "pos" "/=" "when" "min-pos" "max-pos" "min" "max" "new-pos" "let" "redraw?" "p")}
        {Lisp-Entry "min-pos" #f 109 11 109 18 ("range" "get-start")}
        {Lisp-Entry "max-pos" #f 113 11 113 18 ("page-height" "range" "get-end" "-")}
        {Lisp-Entry "get-range" #f 117 18 117 27 ("range")}
        {Lisp-Entry "set-range" #f 121 18 121 27 ("invalidate-view" "set!" "/=" "range" "range=" "not" "when" "rg")}
        {Lisp-Entry "get-line-height" #f 127 18 127 33 ("line-height")}
        {Lisp-Entry "set-line-height" #f 131 18 131 33 ("invalidate-view" "set!" "line-height" "/=" "when" "height")}
        {Lisp-Entry "get-page-height" #f 137 18 137 33 ("page-height")}
        {Lisp-Entry "set-page-height" #f 141 18 141 33 ("invalidate-view" "set!" "page-height" "/=" "when" "height")}
        {Lisp-Entry "set-info" #f 147 18 147 26 ("set-page-height" "Range" "new" "set-range" "page" "max" "min")}
        {Lisp-Entry "get-flat?" #f 152 18 152 27 ("flat?")}
        {Lisp-Entry "set-flat?" #f 156 18 156 27 ("invalidate-view" "set!" "flat?" "neq?" "when" "value")}
        {Lisp-Entry "get-style" #f 162 18 162 27 ("style")}
        {Lisp-Entry "set-style" #f 166 18 166 27 ("invalidate-view" "set!" "style" "neq?" "when" "value")}
        {Lisp-Entry "get-client" #f 177 18 177 28 ("parent")}
        {Lisp-Entry "call-scroll" #f 186 11 186 22 ("on-hscroll" "horz" "on-vscroll" "vert" "orientation" "case" "get-client" "client" "let" "thumb-pos" "action")}
        {Lisp-Entry "line-up" #f 198 11 198 18 ("setup-autorepeat" "line-up" "'line-up" "call-scroll")}
        {Lisp-Entry "line-down" #f 203 11 203 20 ("setup-autorepeat" "line-down" "'line-down" "call-scroll")}
        {Lisp-Entry "page-up" #f 213 11 213 18 ("setup-autorepeat" "page-up" "'page-up" "call-scroll")}
        {Lisp-Entry "page-down" #f 218 11 218 20 ("setup-autorepeat" "page-down" "'page-down" "call-scroll")}
        {Lisp-Entry "get-breadth" #f 228 11 228 22 ("get-height" "horz" "get-width" "vert" "orientation" "case")}
        {Lisp-Entry "get-extent" #f 234 11 234 21 ("get-width" "horz" "get-height" "vert" "orientation" "case")}
        {Lisp-Entry "new-rect" #f 240 11 240 19 ("horz" "Rect" "new" "vert" "orientation" "case" "bottom" "right" "top" "left")}
        {Lisp-Entry "get-place" #f 246 11 246 20 ("get-h" "horz" "get-v" "vert" "orientation" "case" "point")}
        {Lisp-Entry "up-rect" #f 257 11 257 18 ("0" "new-rect" "get-breadth" "b" "let")}
        {Lisp-Entry "down-rect" #f 262 11 262 20 ("-" "0" "new-rect" "get-extent" "e" "get-breadth" "b" "let")}
        {Lisp-Entry "thumb-range" #f 268 11 268 22 ("values" "pos" "+" "thumb-pos" "page-height" "fl/" "1" "min" "*" "fxround" "6" "max" "thumb" "shaft" "let*" "0" ">" "when" "get-start" "range" "get-end" "-" "r" "get-extent" "e" "get-breadth" "b" "let")}
        {Lisp-Entry "thumb-rect" #f 279 11 279 21 ("0" "new-rect" "get-breadth" "b" "end" "start" "receive" "when" "thumb-range" "info" "let")}
        {Lisp-Entry "mouse-down" #f 292 11 292 21 ("page-down" ">=" "page-up" "<=" "end" "start" "receive" "when" "thumb-range" "info" "get-place" "place" "let" "else" "start-tracking" "thumb-rect" "line-down" "down-rect" "line-up" "up-rect" "in-rect?" "cond" "acquire-capture" "pos")}
        {Lisp-Entry "drag-move" #f 306 11 306 20 ("track-thumb" "tracking?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 311 11 311 18 ("end-tracking" "tracking?" "when" "release-capture" "kill-autorepeat" "rest" "pos")}
        {Lisp-Entry "start-tracking" #f 323 11 323 25 ("get-pos" "tracking-start-pos" "get-place" "tracking-start" "tracking?" "set!" "pos")}
        {Lisp-Entry "track-thumb" #f 329 11 329 22 ("tracking-start-pos" "+" "thumb-track" "'thumb-track" "call-scroll" "*" "quotient" "dp" "shaft" "tracking-start" "get-place" "dv" "get-start" "range" "get-end" "-" "r" "get-extent" "e" "get-breadth" "b" "let*" "pos")}
        {Lisp-Entry "end-tracking" #f 339 11 339 23 ("tracking?" "set!")}
        {Lisp-Entry "Flat-Color" #f 348 14 348 24 ()}
        {Lisp-Entry "Background-Color" #f 351 14 351 30 ()}
        {Lisp-Entry "get-flat-color" #f 355 11 355 25 ("flat-color" "set!" "Flat-Color" "unless")}
        {Lisp-Entry "flat-color" #f 361 11 361 21 ("166" "200" "176" "blue:" "188" "green:" "194" "red:" "Light" "name:" "Color" "white?" "if")}
        {Lisp-Entry "get-background-color" #f 367 11 367 31 ("background-color" "set!" "Background-Color" "unless")}
        {Lisp-Entry "background-color" #f 373 11 373 27 ("227" "blue:" "240" "green:" "242" "red:" "white?" "if" "Light" "name:" "Color" "color" "let")}
        {Lisp-Entry "flat-look?" #f 380 11 380 21 ("flat?" "else" "document/scrollbar/flat?" "'document/scrollbar/flat?" "document" "tool/scrollbar/flat?" "'tool/scrollbar/flat?" "get-look" "get-element" "tool" "style" "case")}
        {Lisp-Entry "draw" #f 387 11 387 15 ("7" "9" "4" "Dark" "6" "3" "line" "Light" "set-color" "8" "quotient" "get-top" "+" "v" "rect-height" "height" "let*" "Medium" "-" "inflate-rect" "inflated" "2" "1" "width" "rectangle" "'rectangle" "edges:" "outer:" "raised" "'raised" "inner:" "draw-edge" "draw-raised" "Entry-Border" "name:" "Color" "frame-rect" "when" "draw-scroll-bar" "else" "right" "'right" "down" "'down" "left" "'left" "horz" "up" "'up" "vert" "orientation" "case" "draw-button" "cond" "get-background-color" "cycle-debug-color!" "*debug-paint*" "if" "fill-rect" "flat-look?" "flat?" "thumb-rect" "down-rect" "up-rect" "get-bounds" "bounds" "let" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-button" #f 422 11 422 22 ("4" "get-top" "3" "get-left" "+" "draw-arrow-tip" "dv" "0" "1" "horz" "'horz" "orientation" "eq?" "if" "dh" "Black" "set-color" "Medium" "name:" "Color" "fill-rect" "-1" "inflate-rect" "inflated" "let" "draw-raised" "direction" "rect" "surface")}
        {Lisp-Entry "setup-autorepeat" #f 437 11 437 27 ("autorepeat-delay" "delay:" "pulse-action" "function" "autorepeat-period" "Pulse" "new" "set!" "autorepeat-pulse" "not" "when" "action")}
        {Lisp-Entry "kill-autorepeat" #f 442 11 442 26 ("set!" "close" "autorepeat-pulse" "when")}
        {Lisp-Entry "pulse-action" #f 453 11 453 23 ("page-down" "page-up" "line-down" "line-up" "case" "action")}
        {Lisp-Entry "get-class-image" #f 466 16 466 31 ("Bitmap-Resource")}}}})
"Scroller-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Scroller-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Scroller-View" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "scrollbar-size" #f 47 19 47 33 ("13")}
      {Lisp-Entry "Scroller-View" #f 51 7 51 20 ("Container")
        {Lisp-Entry "client" #f 54 12 54 18 ("set-client" "get-client")}
        {Lisp-Entry "vscroll?" #f 55 12 55 20 ("set-vscroll?" "get-vscroll?")}
        {Lisp-Entry "hscroll?" #f 56 12 56 20 ("set-hscroll?" "get-hscroll?")}
        {Lisp-Entry "flat?" #f 57 12 57 17 ("set-flat?" "get-flat?")}
        {Lisp-Entry "style" #f 58 12 58 17 ("set-style" "get-style")}
        {Lisp-Entry "vscroll" #f 61 8 61 15 ()}
        {Lisp-Entry "hscroll" #f 62 8 62 15 ()}
        {Lisp-Entry "default-name" #f 65 11 65 23 ("scroller" "'scroller")}
        {Lisp-Entry "finish" #f 69 11 69 17 ("get-scroll-client" "set-client" "get-content" "content" "let" "client" "not" "when" "nextmethod" "rest")}
        {Lisp-Entry "get-client" #f 81 18 81 28 ("client")}
        {Lisp-Entry "set-client" #f 85 18 85 28 ("layout-scrollee" "self" "set-scroller" "invalidate-layout" "set!" "client" "neq?" "when" "clt")}
        {Lisp-Entry "inner?" #f 99 11 99 17 ("hscroll" "vscroll" "eq?" "nextmethod" "or" "view")}
        {Lisp-Entry "content-inner?" #f 105 11 105 25 ("view")}
        {Lisp-Entry "size-change" #f 114 11 114 22 ("layout-scrollee-patch" "layout-scrollee" "get-content" "get-client" "eq?" "client" "and" "when" "nextmethod" "size")}
        {Lisp-Entry "layout" #f 128 11 128 17 ("hscroll-size" "hscroll-position" "hscroll" "vscroll-size" "vscroll-position" "vscroll" "layout-scrollee" "client" "content-size" "set-size" "content-position" "set-position" "when" "'content" "find-child" "content" "get-size" "size" "let")}
        {Lisp-Entry "content-position" #f 144 11 144 27 ("0" "Point" "size")}
        {Lisp-Entry "content-size" #f 148 11 148 23 ("hscroll" "get-height" "0" "scrollbar-size" "vscroll" "if" "get-width" "-" "Dimension" "new" "size")}
        {Lisp-Entry "vscroll-position" #f 154 11 154 27 ("0" "scrollbar-size" "get-width" "-" "Point" "new" "size")}
        {Lisp-Entry "vscroll-size" #f 158 11 158 23 ("0" "hscroll" "if" "get-height" "-" "scrollbar-size" "Dimension" "new" "size")}
        {Lisp-Entry "hscroll-position" #f 162 11 162 27 ("scrollbar-size" "get-height" "-" "0" "Point" "new" "size")}
        {Lisp-Entry "hscroll-size" #f 166 11 166 23 ("0" "scrollbar-size" "vscroll" "if" "get-width" "-" "Dimension" "new" "size")}
        {Lisp-Entry "set-scroll-pos" #f 175 11 175 25 ("hscroll" "horz" "set-pos" "vscroll" "when" "vert" "case" "redraw?" "pos" "part")}
        {Lisp-Entry "set-scroll-info" #f 181 11 181 26 ("hscroll" "horz" "set-info" "vscroll" "when" "vert" "case" "page" "max" "min" "part")}
        {Lisp-Entry "on-vscroll" #f 187 11 187 21 ("get-scrolled-position" "get-v" "thumb-track" "page-down" "get-page-size" "page-up" "-" "line-down" "get-line-size" "0" "Point" "new" "scroll" "line-up" "case" "client" "when" "orientation" "thumb-pos" "code")}
        {Lisp-Entry "on-hscroll" #f 197 11 197 21 ("get-scrolled-position" "get-h" "thumb-track" "page-down" "get-page-size" "page-up" "-" "line-down" "0" "get-line-size" "Point" "new" "scroll" "line-up" "case" "client" "when" "orientation" "thumb-pos" "code")}
        {Lisp-Entry "get-vscroll" #f 212 18 212 29 ("vscroll")}
        {Lisp-Entry "get-vscroll?" #f 216 18 216 30 ("vscroll?")}
        {Lisp-Entry "set-vscroll?" #f 220 18 220 30 ("vscroll?" "set!" "flag")}
        {Lisp-Entry "set-vscroll-needed?" #f 224 18 224 37 ("layout-view" "close" "style" "style:" "flat?" "flat?:" "vert" "'vert" "orientation:" "self" "parent:" "Scrollbar" "new" "set!" "not" "if" "vscroll" "boolean" "neq?" "vscroll?" "and" "when" "flag")}
        {Lisp-Entry "get-hscroll" #f 233 18 233 29 ("hscroll")}
        {Lisp-Entry "get-hscroll?" #f 237 18 237 30 ("hscroll?")}
        {Lisp-Entry "set-hscroll?" #f 241 18 241 30 ("hscroll?" "set!" "flag")}
        {Lisp-Entry "set-hscroll-needed?" #f 245 18 245 37 ("layout-view" "close" "style" "style:" "flat?" "flat?:" "horz" "'horz" "orientation:" "self" "parent:" "Scrollbar" "new" "set!" "not" "if" "hscroll" "boolean" "neq?" "hscroll?" "and" "when" "flag")}
        {Lisp-Entry "get-flat?" #f 254 18 254 27 ("flat?")}
        {Lisp-Entry "set-flat?" #f 258 18 258 27 ("flat?" "set!" "value")}
        {Lisp-Entry "get-style" #f 262 18 262 27 ("style")}
        {Lisp-Entry "set-style" #f 266 18 266 27 ("style" "set!" "value")}
        {Lisp-Entry "get-class-image" #f 275 16 275 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-row-instance" #f 279 11 279 27 ("nextmethod" "else" "Boolean-Row" "new" "flat?" "field-name" "case" "property")}}}})
"Search-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-Manager.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Search-Manager" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Search-Manager" #f 50 7 50 21 ("159" "848" "5" "4" "Point" "position:" "tab" "name:" "169" "857" "Dimension" "size:" "View")
        {Lisp-Entry "external-name" #f 58 16 58 29 ("search-manager" "'search-manager" "rest")}
        {Lisp-Entry "host-icon" #f 67 16 67 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-position" #f 71 16 71 29 ("220" "300" "Point")}
        {Lisp-Entry "host-size" #f 75 16 75 25 ("169" "857" "Dimension")}
        {Lisp-Entry "host-title" #f 79 16 79 26 ()}
        {Lisp-Entry "install" #f 88 11 88 18 ("load-session" "nextmethod" "rest")}
        {Lisp-Entry "load-session" #f 98 11 98 23 ("get-children" "get-content" "first-child" "set-session-properties" "when" "find-component" "sheet" "get-name" "name" "config" "function" "for-each" "set-selection-name" "'tab" "locate" "tab" "get-active" "active" "search-manager" "tools" "get-preferences" "pref" "let*")}
        {Lisp-Entry "confirm-close" #f 111 11 111 24 ("save-session" "rest")}
        {Lisp-Entry "save-session" #f 115 11 115 23 ("get-session-properties" "Search-Manager" "'Search-Manager" "set-property" "Opened-Windows" "'Opened-Windows" "properties" "push-property" "get-size" "size:" "get-position" "position:" "external-name" "list" "info" "let")}
        {Lisp-Entry "get-session-properties" #f 125 11 125 33 ("get-children" "get-content" "first-child" "get-session-properties" "get-name" "sheet" "function" "map" "get-selection-name" "cons" "'tab" "locate" "tab" "let")}
        {Lisp-Entry "guest-actions" #f 138 11 138 24 ("nextmethod" "search-manager" "'search-manager" "find-actions" "cons")}
        {Lisp-Entry "resize" #f 148 11 148 17 ("tab" "'tab" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-whole-words" #f 152 11 152 25 ("toggle-whole-words" "evt")}
        {Lisp-Entry "on-ignore-case" #f 156 11 156 25 ("toggle-ignore-case" "evt")}
        {Lisp-Entry "on-preserve-case" #f 160 11 160 27 ("toggle-preserve-case" "evt")}
        {Lisp-Entry "on-play-recording" #f 164 11 164 28 ("toggle-play-recording" "evt")}
        {Lisp-Entry "toggle-whole-words" #f 168 11 168 29 ("get-checked?" "not" "set-checked?" "whole-words?" "'whole-words?" "get-search" "locate" "checkbox" "let")}
        {Lisp-Entry "toggle-ignore-case" #f 173 11 173 29 ("get-checked?" "not" "set-checked?" "ignore-case?" "'ignore-case?" "get-search" "locate" "checkbox" "let")}
        {Lisp-Entry "toggle-preserve-case" #f 178 11 178 31 ("get-checked?" "not" "set-checked?" "preserve-case?" "'preserve-case?" "get-search" "locate" "checkbox" "let")}
        {Lisp-Entry "toggle-play-recording" #f 183 11 183 32 ("get-checked?" "not" "set-checked?" "play-recording?" "'play-recording?" "get-search" "locate" "checkbox" "let")}
        {Lisp-Entry "get-search" #f 193 18 193 28 ("get-sheet-search" "selected-sheet" "sheet" "'tab" "locate" "tab" "let*")}
        {Lisp-Entry "get-search-named" #f 199 18 199 34 ("get-sheet-search" "when" "child" "sheet" "'tab" "locate" "tab" "let*" "name")}
        {Lisp-Entry "get-searches" #f 206 18 206 30 ("get-children" "get-sheet-search" "map" "'tab" "locate" "tab" "let")}
        {Lisp-Entry "get-sheet-search" #f 211 11 211 27 ("get-content" "first-child" "sheet")}
        {Lisp-Entry "current-history-item" #f 220 11 220 31 ("get-search" "current-history-item")}
        {Lisp-Entry "install-history-item" #f 224 21 224 41 ("get-search" "install-history-item" "item")}
        {Lisp-Entry "edit-definitions" #f 233 18 233 34 ("tab" "'tab" "locate" "set-selection-name" "projects" "'projects" "get-search-named" "search-definitions" "definitions" "name")}
        {Lisp-Entry "edit-references" #f 238 18 238 33 ("tab" "'tab" "locate" "set-selection-name" "projects" "'projects" "get-search-named" "search-references" "context" "references" "name")}}}})
"Search-Manager-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-Manager-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Search-Manager-Actions" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Search-Manager-Actions" #f 46 7 46 29 ("on-play-recording" "play-recording" "on-preserve-case" "preserve-case" "on-ignore-case" "ignore-case" ":alt" "Shortcut" "shortcut:" "on-whole-words" ":guest" "Event-Handler" "action-handler:" "whole-words" "name:" "Actions")}}})
"Search-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-Menu.jazz"} 1245777538
    {Lisp-Entry "jazz.ui.search.Search-Menu" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Search-Menu" #f 46 7 46 18 ("replace-all-selected" "replace-all" "replace&find-forward" "replace" "replace-separator" "find-backward" "find-forward" "find-separator" "pop-results" "edit-current" "edit-previous" "edit-next" "edit-separator" "find-in-projects" "find-in-directories" "find-in-text" "Bitmap-Resource" "icon:" "application" "Action" "action:" "find" "name:" "title:" "Menu")}}})
"Search-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Search-Preferences" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Search-Preferences" #f 46 7 46 25 ("projects" "directories" "text" "name:" "Bitmap-Resource" "icon:" "title:" "Tool-Preferences")
        {Lisp-Entry "active" #f 49 12 49 18 ("generate")}
        {Lisp-Entry "get-addable-base" #f 64 11 64 27 ("Search-View-Preferences")}
        {Lisp-Entry "get-addable-details" #f 68 11 68 30 ("expression?" "play-recording?" "preserve-case?" "ignore-case?" "100" "whole-words?" "targets" "150" "name-info")}}}})
"Search-Results"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-Results.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Search-Results" #f 37 19 37 48 ("Stack-Combo" "register-autoclass" "jazz")
      {Lisp-Entry "Search-Results" #f 54 7 54 21 ("100" "type" "337" "width:" "title:" "name" "on-context-menu" ":form" "Event-Handler" "context-menu-handler:" "multiple-selection?:" "location" "filled-column:" "results" "header" "content" "scroller" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip?:" "22" "edit-as-jazz-text" "tail" "location:" "edit-as-jazz-text-separator" "stack" "166" "blue:" "188" "green:" "200" "red:" "Medium" "Color" "border-color:" "2" "Rect" "border-insets:" "21" "120" "0" "4" "Dimension" "size:" "tooltip-text:" "clear" "tools" "name:" "Navigable-Results")
        {Lisp-Entry "mode" #f 57 8 57 12 ()}
        {Lisp-Entry "context" #f 58 8 58 15 ()}
        {Lisp-Entry "references-target" #f 59 8 59 25 ()}
        {Lisp-Entry "current-results" #f 60 8 60 23 ()}
        {Lisp-Entry "results-stack" #f 61 8 61 21 ()}
        {Lisp-Entry "external-name" #f 89 16 89 29 ("search-results" "'search-results" "rest")}
        {Lisp-Entry "form-model" #f 93 11 93 21 ("nextmethod" "else" "Search-Results-Tree" "results" "get-name" "case" "form")}
        {Lisp-Entry "host-icon" #f 104 16 104 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 108 16 108 26 ()}
        {Lisp-Entry "get-mode" #f 117 18 117 26 ("mode")}
        {Lisp-Entry "set-mode" #f 121 18 121 26 ("mode" "set!" "value")}
        {Lisp-Entry "get-context" #f 125 18 125 29 ("context")}
        {Lisp-Entry "set-context" #f 129 18 129 29 ("context" "set!" "value")}
        {Lisp-Entry "get-references-target" #f 133 18 133 39 ("references-target")}
        {Lisp-Entry "set-references-target" #f 137 18 137 39 ("references-target" "set!" "value")}
        {Lisp-Entry "get-results-stack" #f 141 18 141 35 ("results-stack")}
        {Lisp-Entry "on-context-menu" #f 150 11 150 26 ("track-popup-menu" "function" "with-context-click" "when" "get-context-menu" "menu" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "get-context-menu" #f 161 11 161 27 ("Found-Menu" "new")}
        {Lisp-Entry "clear-results" #f 165 11 165 24 ("pop-results" "bell" "1" "results-stack" "length" "<=" "if")}
        {Lisp-Entry "edit-selection" #f 176 11 176 25 ("with-locked-update" "else" "1" "0" "length" "case" "get-stage" "first-view" "focus-host" "edit-item" "item" "function" "for-each" "edit" "define" "get-tree" "get-selection" "selection" "let" "forward?")}
        {Lisp-Entry "edit-item" #f 192 18 192 27 ("edit-document" "get-tree" "get-row" "get-user-data" "definition" "let" "focus?" "forward?" "item")}
        {Lisp-Entry "edit-document" #f 202 11 202 24 ("Moniker" "values" "set-visible?" "bring-to-front" "select-expr-backward" "select-expr" "Cell" "new" "set-caret" "number?" "Text-View" "when" "get-guest" "guest" "return-new?:" "visible?:" "class:" "edit-document" "new?" "frame" "receive" "Jazz-Text-View" "class" "edit-as-jazz-text" "'edit-as-jazz-text" "locate" "get-selected?" "jazz?" "get-application" "appl" "let*" "targets" "results" "source" "let" "target" "entry" "bind" "car" "pair?" "and" "edit" "else" "activate-focus?:" "references-target" "edit-reference" "references" "mode" "case" "Catalog-Entry" "is?" "if" "function" ":wait" "with-cursor" "focus?" "forward?" "info")}
        {Lisp-Entry "item-icon" #f 246 29 246 38 ("else" "Method-Entry" "Constructor-Entry" "Variable-Entry" "Instance-Init-Entry" "Static-Init-Entry" "Interface-Entry" "Bitmap-Resource" "Class-Entry" "is?" "cond" "info")}
        {Lisp-Entry "item-moniker" #f 257 29 257 41 ("cadr" "Moniker" "car" "get-moniker" "Catalog-Entry" "is?" "if" "info")}
        {Lisp-Entry "item-location" #f 265 29 265 42 ("present-location" "not" "if" "item-moniker" "moniker" "let" "info")}
        {Lisp-Entry "item-type" #f 272 29 272 38 ("else" "Method-Entry" "Constructor-Entry" "Variable-Entry" "Instance-Init-Entry" "Static-Init-Entry" "Interface-Entry" "Class-Entry" "is?" "cond" "info")}
        {Lisp-Entry "present-info" #f 283 18 283 30 ("->string" "present-name" "target" "pos" "moniker" "bind" "Moniker" "car" "present" "Catalog-Entry" "is?" "if" "info")}
        {Lisp-Entry "add-results" #f 292 18 292 29 ("update-stack-combo" "update-results" "cons" "results-stack" "list" "current-results" "set!" "preserve-current-selection" "target" "targets" "results")}
        {Lisp-Entry "pop-results" #f 300 11 300 22 ("update-stack-combo" "update-results" "update-search-targets" "car" "current-results" "cdr" "results-stack" "set!")}
        {Lisp-Entry "set-results" #f 308 11 308 22 ("update-stack-combo" "update-results" "update-search-targets" "current-results" "set!" "preserve-current-selection" "info")}
        {Lisp-Entry "preserve-current-selection" #f 316 11 316 37 ("get-tree" "get-selection" "set-fourth!" "current-results" "when")}
        {Lisp-Entry "update-search-targets" #f 321 11 321 32 ("set-search-targets" "end-search-edition" "get-application" "appl" "let" "current-results" "target" "targets" "results" "bind")}
        {Lisp-Entry "update-stack-combo" #f 328 11 328 29 ("current-results" "set-value" "results-stack" "first" "join" "list" "target" "targets" "results" "bind" "info" "function" "map" "set-choices" "stack" "'stack" "locate" "combo" "let")}
        {Lisp-Entry "update-results" #f 338 11 338 25 ("update-search-actions" "Search-Results" "select-palette" "with-locked-update" "list" "either" "set-selection" "0" "get-visible-count" ">" "and" "when" "present-info" "key:" "string<?" "sort" "target:" "add-item" "info" "for-each" "remove-every-row" "get-node-column" "set-toplevel-controls?" "else" "references" "mode" "case" "flag" "function" "with-update-locked" "get-tree" "tree" "get-application" "appl" "let" "current-results" "selection" "target" "targets" "results" "bind")}
        {Lisp-Entry "add-item" #f 361 11 361 19 ("user-data:" "list" "children:" "state:" "add-row" "cons" "user-data" "item-type" "type" "item-location" "Tree-Label" "location" "item-icon" "image:" "present-info" "title:" "Tree-Node" "new" "node" "collapsed" "'collapsed" "dynamic" "'dynamic" "references" "'references" "mode" "eq?" "if" "state" "get-tree" "tree" "let" "target" "target:" "father" "father:" "info")}
        {Lisp-Entry "update-tree-row" #f 371 21 371 36 ("present-info" "key:" "string<?" "sort" "target:" "father:" "add-item" "info" "function" "for-each" "context" "context:" "get-references" "definitions" "get-cataloguer" "cataloguer" "get-application" "appl" "get-name" "name" "let*" "get-user-data" "target" "entry" "bind" "references" "mode" "case" "row")}
        {Lisp-Entry "selected-files" #f 384 11 384 25 ("File" "car" "Pair" "is?" "and" "when" "get-row" "get-user-data" "info" "let" "rank" "function" "collect" "get-selection" "selection" "results" "'results" "locate" "tree" "let*")}}
      {Lisp-Entry "Stack-Combo" #f 399 7 399 18 ("Combo-Box")
        {Lisp-Entry "content-change" #f 402 11 402 25 ("get-value" "set-results" "origin")}}
      {Lisp-Entry "Found-Menu" #f 415 7 415 17 ("on-copy" ":focus" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "copy" "name:" "Context-Menu")}}})
"Search-Results-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-Results-Tree.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Search-Results-Tree" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Search-Results-Tree" #f 46 7 46 26 ("Tree-View")
        {Lisp-Entry "focus-actions" #f 54 11 54 24 ("nextmethod" "search-results-tree" "'search-results-tree" "find-actions" "cons")}
        {Lisp-Entry "get-search" #f 64 11 64 21 ("Search-Results" "find-ascendant")}
        {Lisp-Entry "return-press" #f 73 11 73 23 ("get-search" "edit-selection" "key")}
        {Lisp-Entry "copy-selection" #f 77 11 77 25 ("get-selection" "get-row" "get-user-data" "get-search" "present-info" "n" "function" "map" "format" "set-clipboard-text")}
        {Lisp-Entry "select-all" #f 85 11 85 21 ("rest")}
        {Lisp-Entry "on-edit-definitions" #f 89 11 89 30 ("get-search" "edit-selection" "evt")}
        {Lisp-Entry "update-row" #f 93 11 93 21 ("get-search" "update-tree-row" "row")}}}})
"Search-Results-Tree-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-Results-Tree-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Search-Results-Tree-Actions" #f 37 19 37 61 ("jazz")
      {Lisp-Entry "Search-Results-Tree-Actions" #f 46 7 46 34 ("F12" "on-edit-definitions" "edit-definitions" "Return" ":control" "Shortcut" "shortcut:" "on-action" ":focus" "Event-Handler" "action-handler:" "action" "name:" "Actions")}}})
"Search-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-View.jazz"} 1238329747
    {Lisp-Entry "jazz.ui.search.Search-View" #f 37 19 37 45 ("Search-Targets" "register-autoclass" "jazz")
      {Lisp-Entry "Search-View" #f 54 7 54 18 ("200" "388" "visible?:" "expression?" "483" "play-recording?" "375" "preserve-case?" "118" "ignore-case?" "18" "100" "114" "whole-words?" "173" "display-images?:" "toplevel-controls?:" "176" "width:" "15" "default-row-height:" "Label" "Font" "font:" "targets" "fill" "layout-type:" "vscroll?:" "style:" "edge" "border-type:" "91" "373" "370" "targets-border" "on-splitter-move" "move-handler:" "6" "362" "vertical" "97" "350" "8" "10" "domain" "default?:" "on-search" ":form" "Event-Handler" "action-handler:" "24" "80" "Dimension" "size:" "14" "755" "Point" "position:" "title:" "search" "name:" "Layout-View")
        {Lisp-Entry "next-radio" #f 78 18 78 28 ("length" "1" "+" "modulo" "element" "set-search-domain" "when" "find" "pos" "get-search-domains" "domains" "get-search-domain" "domain" "let*")}
        {Lisp-Entry "next-tab" #f 86 18 86 26 ("set-selection" "1" "+" "modulo" "new-selection" "get-selection" "old-selection" "get-children" "length" "max-selection" "get-manager" "manager" "let*")}
        {Lisp-Entry "finish" #f 99 11 99 17 ("get-columns" "1" "set-title-vertical-offset" "column" "function" "for-each" "targets" "'targets" "locate" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-session-properties" #f 112 26 112 48 ("get-expression?" "expression?" "'expression?" "get-play-recording?" "play-recording?" "'play-recording?" "get-preserve-case?" "preserve-case?" "'preserve-case?" "get-ignore-case?" "ignore-case?" "'ignore-case?" "get-whole-words?" "whole-words?" "'whole-words?" "get-search-targets" "targets" "'targets" "get-search-domain" "domain" "'domain" "list")}
        {Lisp-Entry "set-session-properties" #f 123 26 123 48 ("get-expression?" "set-expression?" "get-play-recording?" "set-play-recording?" "get-preserve-case?" "set-preserve-case?" "get-ignore-case?" "set-ignore-case?" "get-whole-words?" "set-whole-words?" "get-targets" "set-search-targets" "config")}
        {Lisp-Entry "get-manager" #f 137 11 137 22 ("3" "child")}
        {Lisp-Entry "get-results" #f 146 21 146 32 ("get-application" "get-search-results")}
        {Lisp-Entry "get-targets-tree" #f 150 18 150 34 ("targets" "'targets" "locate")}
        {Lisp-Entry "get-search-targets" #f 154 18 154 36 ("get-output" "naturals" "list" "put" "empty-string?" "and" "unless" "1" "repl" "0" "Cell" "get-cell-data" "get-title" "find" "let" "row" "function" "for-each" "in-edition?" "if" "List-Factory" "new" "fact" "get-visible-count" "height" "targets" "'targets" "locate" "tree" "let*")}
        {Lisp-Entry "set-search-targets" #f 170 18 170 36 ("0" "naturals" "invalidate-cell" "set-cell-title" "Cell" "new" "cell" "col" "target" "row" "line" "for-each" "function" "with-update-locked" "get-visible-count" "height" "get-columns-count" "width" "ensure-visible-count" "length" "count" "'targets" "locate" "tree" "let" "targets")}
        {Lisp-Entry "get-constituent-test" #f 196 29 196 49 ("word-constituent?")}
        {Lisp-Entry "get-find-targets" #f 200 18 200 34 ("get-search-targets" "constituent-test:" "ignore-case?:" "whole-words?:" "first" "make-search-context" "target" "function" "map" "get-constituent-test" "or" "get-ignore-case?" "ignore-case?" "get-whole-words?" "whole-words?" "let" "constituent-test")}
        {Lisp-Entry "get-replace-targets" #f 212 11 212 30 ("get-search-targets" "second" "map")}
        {Lisp-Entry "get-search-domain" #f 216 18 216 35 ("get-search-domains" "get-selected?" "and" "when" "find-component" "radio" "name" "function" "find-if" "domain" "'domain" "locate" "get-content" "group" "let")}
        {Lisp-Entry "set-search-domain" #f 225 18 225 35 ("get-children" "eq?" "set-selected?" "Radio-Button" "is?" "child" "function" "for-each" "when" "find-component" "radio" "'domain" "locate" "get-content" "group" "let*" "domain")}
        {Lisp-Entry "get-whole-words?" #f 235 18 235 34 ("whole-words?" "'whole-words?" "locate" "get-checked?")}
        {Lisp-Entry "set-whole-words?" #f 239 18 239 34 ("whole-words?" "'whole-words?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-ignore-case?" #f 243 18 243 34 ("ignore-case?" "'ignore-case?" "locate" "get-checked?")}
        {Lisp-Entry "set-ignore-case?" #f 247 18 247 34 ("ignore-case?" "'ignore-case?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-preserve-case?" #f 251 18 251 36 ("preserve-case?" "'preserve-case?" "locate" "get-checked?")}
        {Lisp-Entry "set-preserve-case?" #f 255 18 255 36 ("preserve-case?" "'preserve-case?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-play-recording?" #f 259 18 259 37 ("play-recording?" "'play-recording?" "locate" "get-checked?")}
        {Lisp-Entry "set-play-recording?" #f 263 18 263 37 ("play-recording?" "'play-recording?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-expression?" #f 267 18 267 33 ("expression?" "'expression?" "locate" "get-checked?")}
        {Lisp-Entry "set-expression?" #f 271 18 271 33 ("expression?" "'expression?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-search-domains" #f 280 26 280 44 ()}
        {Lisp-Entry "get-active-window-domain" #f 284 26 284 50 ()}
        {Lisp-Entry "on-search" #f 293 18 293 27 ("search-targets" "bell" "null?" "if" "get-find-targets" "find-targets" "end-edition" "'targets" "locate" "targets" "let" "get-player" "hide" "evt")}
        {Lisp-Entry "search-targets" #f 303 29 303 43 ("targets")}
        {Lisp-Entry "resize" #f 307 11 307 17 ("expression?" "'expression?" "play-recording?" "'play-recording?" "preserve-case?" "'preserve-case?" "ignore-case?" "'ignore-case?" "whole-words?" "'whole-words?" "targets-border" "'targets-border" "domain" "'domain" "size-figure" "0" "search" "'search" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-splitter-move" #f 319 11 319 27 ("update-view" "-" "targets-border" "'targets-border" "move-figure" "0" "domain" "'domain" "locate" "size-figure" "delta:" "get-property" "delta" "let" "evt")}
        {Lisp-Entry "on-return-press" #f 327 18 327 33 ("on-search" "evt")}
        {Lisp-Entry "on-find-forward" #f 331 18 331 33 ("bell" "follow-search-results?" "find-forward" "and" "unless" "get-search-domain" "domain" "get-target-text" "target" "get-find-targets" "find" "let" "evt")}
        {Lisp-Entry "on-find-backward" #f 339 18 339 34 ("bell" "follow-search-results?" "find-backward" "and" "unless" "get-search-domain" "domain" "get-target-text" "target" "get-find-targets" "find" "let" "evt")}
        {Lisp-Entry "on-replace" #f 347 18 347 28 ("bell" "replace" "and" "unless" "get-target-text" "target" "get-expression?" "expression?" "get-play-recording?" "play?" "get-preserve-case?" "case?" "get-ignore-case?" "ignore-case?" "get-application" "appl" "get-replace-targets" "repl" "get-find-targets" "find" "let*" "evt")}
        {Lisp-Entry "on-replace&find-forward" #f 360 18 360 41 ("bell" "replace&find-forward" "and" "unless" "get-target-text" "target" "follow-search-results?" "next?" "get-expression?" "expression?" "get-play-recording?" "play?" "get-preserve-case?" "case?" "get-ignore-case?" "ignore-case?" "get-application" "appl" "get-search-domain" "domain" "get-replace-targets" "repl" "get-find-targets" "find" "let*" "evt")}
        {Lisp-Entry "on-replace-all" #f 375 18 375 32 ("replace-all" "bell" "not" "if" "get-target-text" "target" "get-expression?" "expression?" "get-play-recording?" "play?" "get-preserve-case?" "case?" "get-ignore-case?" "ignore-case?" "get-application" "appl" "get-replace-targets" "repl" "get-find-targets" "find" "let*" "evt")}
        {Lisp-Entry "on-replace-all-selected" #f 389 18 389 41 ("format-plural" "format" "close" "increase!" "save" "get-modified?" "and" "when" "replace-all" "get-name" "user-message" "get-controller" "get-moniker" "moniker" "get-text-view" "target" "get-guest" "guest" "edit-item" "new?" "frame" "receive" "item" "function" "for-each" "0" "modified-count" "get-selection" "selection" "'results" "locate" "tree" "get-results" "results" "get-expression?" "expression?" "get-play-recording?" "play?" "get-preserve-case?" "case?" "get-ignore-case?" "ignore-case?" "get-application" "appl" "get-replace-targets" "repl" "get-find-targets" "find" "yes" "'yes" "auto-save/close?" "let*" "throw-cancel" "cancel" "'cancel" "eq?" "if" "confirmation" "'confirmation" "type:" "message-box" "code" "let" "evt")}
        {Lisp-Entry "get-target-text" #f 423 11 423 26 ("get-text-view" "Document" "get-guest" "guest" "Frame-Host" "is?" "when" "get-stage" "first-view" "frame" "let")}
        {Lisp-Entry "follow-search-results?" #f 431 11 431 33 ("get-active-window-domain" "neq?" "not" "or" "domain")}
        {Lisp-Entry "get-search-reporter" #f 440 21 440 40 ("show" "setup-search-reporter" "register-activity" "reporter" "get-activity-manager" "manager" "let*" "count")}
        {Lisp-Entry "setup-search-reporter" #f 448 29 448 50 ("count" "reporter")}
        {Lisp-Entry "determine-case" #f 457 11 457 25 ("capitalized" "'capitalized" "upper-case" "'upper-case" "upper-case?" "1" "cardinality" "=" "lower-case" "'lower-case" "0" "element" "lower-case?" "empty-string?" "or" "if" "str")}
        {Lisp-Entry "convert-case" #f 465 11 465 23 ("capitalize" "capitalized" "upcase" "upper-case" "downcase" "lower-case" "case" "cs" "str")}
        {Lisp-Entry "replace" #f 472 11 472 18 ("get-application" "get-recorder" "play-current-recording" "acquire-focus" "determine-case" "convert-case" "insert-string" "not" "element" "repl" "let" "when" "nu=?" "ci=?" "test:" "get-target" "context" "function" "key:" "find" "0" "if" "rank" "get-selected-string" "str" "let*" "expression?" "play?" "case?" "ignore-case?" "repl-list" "find-list" "target")}
        {Lisp-Entry "replace&find-forward" #f 486 11 486 31 ("find-forward" "replace" "next?" "expression?" "play?" "case?" "ignore-case?" "repl" "find" "target")}
        {Lisp-Entry "replace-all" #f 491 11 491 22 ("find-forward" "while" "replace" "expression?" "play?" "case?" "ignore-case?" "repl" "find" "target")}
        {Lisp-Entry "find-forward" #f 497 21 497 33 ("get-results" "edit-next" "essay" "select-next" "either" "next?" "targets" "target")}
        {Lisp-Entry "find-backward" #f 502 21 502 34 ("get-results" "edit-previous" "essay" "select-previous" "either" "previous?" "targets" "target")}
        {Lisp-Entry "search-in-file" #f 512 11 512 25 ("list" "put" "search-file" "info" "let" "step-it" "get-name" "user-message" "when" "cancel-requested?" "and" "unless" "reporter" "factory" "expression?" "file" "targets")}
        {Lisp-Entry "search-in-directories" #f 522 21 522 42 ("search-in-directory" "directory" "function" "for-each" "reporter" "factory" "expression?" "extensions" "directories" "targets")}
        {Lisp-Entry "search-in-directory" #f 528 21 528 40 ("ignored-directories:" "search-in-file" "512000" "get-size" "<=" "ci=?" "test:" "member?" "not" "and" "cond" "get-extension" "ext" "file" "function" "iterate-directory" "equal?" "all-extensions?" "let" "reporter" "factory" "expression?" "extensions" "directory" "targets")}
        {Lisp-Entry "search-file" #f 541 11 541 22 ("search-expressions" "quotation" "'quotation" "code" "'code" "get-extension" "ci=?" "mode" "end:" "start:" "Jazz-Explorer" "expl" "text-beginning" "beginning" "let*" "set-moniker" "Jazz-Text-View" "new" "text" "search-content" "read-content-string" "content" "let" "reader" "function" "cr-lf" "'cr-lf" "eol-encoding:" "char-encoding-errors:" "parse" "path:" "list" "call-with-input-file" "not" "if" "exists?" "when" "expression?" "targets" "file")}
        {Lisp-Entry "search-content" #f 556 11 556 25 ("multisearch" "targets" "content")}
        {Lisp-Entry "select-search" #f 565 26 565 39 ("0" "Cell" "select-cell" "'targets" "locate" "targets" "let")}
        {Lisp-Entry "current-history-item" #f 575 11 575 31 ("get-selection" "get-content" "get-expression?" "get-play-recording?" "get-preserve-case?" "get-ignore-case?" "get-whole-words?" "get-search-targets" "get-search-domain" "get-results" "get-mode" "History-Search-Item" "new" "results" "'results" "locate" "tree" "let")}
        {Lisp-Entry "install-history-item" #f 590 21 590 41 ("get-selection" "set-selection" "get-content" "set-content" "get-expression?" "set-expression?" "get-play-recording?" "set-play-recording?" "get-preserve-case?" "set-preserve-case?" "get-ignore-case?" "set-ignore-case?" "get-whole-words?" "set-whole-words?" "get-targets" "set-search-targets" "get-domain" "set-search-domain" "get-mode" "get-results" "set-mode" "results" "'results" "locate" "tree" "let" "item")}}
      {Lisp-Entry "Search-Targets" #f 609 7 609 21 ("Code" "name:" "Font" "font:" "Tree-View")
        {Lisp-Entry "mouse-down" #f 616 11 616 21 ("select-cell" "nextmethod" "not" "if" "uniform-height?:" "any?:" "view->tree" "cell" "let" "pos")}
        {Lisp-Entry "tab-stop-enter" #f 623 11 623 25 ("0" "Cell" "select-cell")}
        {Lisp-Entry "add-empty-row" #f 627 11 627 24 ("children:" "add-row" "columns" "new-empty-cell" "column" "function" "map" "children" "root-row" "either" "let" "father" "father:")}
        {Lisp-Entry "select-cell" #f 635 11 635 22 ("select-all" "acquire-focus" "layout-scrollee" "self" "set-tree" "set-client" "get-string-content" "set-title" "function" "end-proc:" "editor:" "edit-cell" "get-title" "set-string-content" "when" "font" "font:" "top-padding:" "left-padding:" "get-content" "Tree-Embedded-Search-Text-View" "text" "hscroll?:" "vscroll?:" "parent:" "Scroller-View" "scroller" "Medium" "name:" "Color" "border-color:" "solid" "'solid" "border-type:" "Border-View" "new" "editor" "3" "0" "get-col" "=" "if" "left" "get-cell-data" "data" "let*" "end-edition" "cell")}}}})
"Search-View-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Search-View-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Search-View-Preferences" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Search-View-Preferences" #f 47 7 47 30 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "targets" #f 50 12 50 19 ("generate")}
        {Lisp-Entry "whole-words?" #f 51 12 51 24 ("generate")}
        {Lisp-Entry "ignore-case?" #f 52 12 52 24 ("generate")}
        {Lisp-Entry "preserve-case?" #f 53 12 53 26 ("generate")}
        {Lisp-Entry "play-recording?" #f 54 12 54 27 ("generate")}
        {Lisp-Entry "expression?" #f 55 12 55 23 ("generate")}
        {Lisp-Entry "get-domain" #f 67 16 67 26 ("nextmethod" "else" "Boolean-Domain" "new" "expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "field-name" "case" "property")}
        {Lisp-Entry "property-presentation" #f 78 16 78 37 ("nextmethod" "else" "expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "targets" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 89 11 89 27 ("nextmethod" "else" "Boolean-Row" "new" "expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "field-name" "case" "property")}}}})
"Selectable"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Selectable.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Selectable" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Selectable" #f 45 11 45 21 ()
        {Lisp-Entry "get-selected?" #f 48 35 48 48 ()}
        {Lisp-Entry "set-selected?" #f 49 35 49 48 ("selected?")}
        {Lisp-Entry "unselect" #f 50 35 50 43 ()}}}})
"Selected-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Selected-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Selected-Event" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Selected-Event" #f 44 7 44 21 ("Event")
        {Lisp-Entry "owner" #f 47 8 47 13 ()}
        {Lisp-Entry "old" #f 48 8 48 11 ()}
        {Lisp-Entry "selected" #f 49 8 49 16 ()}
        {Lisp-Entry "force?" #f 50 8 50 14 ()}
        {Lisp-Entry "initialize" #f 53 11 53 21 ("force?~self" "selected~self" "old~self" "owner~self" "set!" "nextmethod" "user-origin?" "user-origin?:" "force?" "force?:" "selected" "old" "owner" "sender" "kind")}
        {Lisp-Entry "get-owner" #f 66 18 66 27 ("owner")}
        {Lisp-Entry "get-old" #f 70 18 70 25 ("old")}
        {Lisp-Entry "get-selected" #f 74 18 74 30 ("selected")}
        {Lisp-Entry "get-force?" #f 78 18 78 28 ("force?")}}}})
"Selection-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Selection-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Selection-Event" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Selection-Event" #f 44 7 44 22 ("Event")
        {Lisp-Entry "old" #f 47 8 47 11 ()}
        {Lisp-Entry "selection" #f 48 8 48 17 ()}
        {Lisp-Entry "origin" #f 49 8 49 14 ()}
        {Lisp-Entry "force-parent?" #f 50 8 50 21 ()}
        {Lisp-Entry "force?" #f 51 8 51 14 ()}
        {Lisp-Entry "user-origin?" #f 52 8 52 20 ()}
        {Lisp-Entry "initialize" #f 55 11 55 21 ("user-origin?~self" "force?~self" "force-parent?~self" "origin~self" "selection~self" "old~self" "set!" "nextmethod" "user-origin?" "user-origin?:" "force?" "force?:" "force-parent?" "force-parent?:" "origin" "origin:" "selection" "old" "sender" "kind")}
        {Lisp-Entry "print" #f 65 11 65 16 ("properties" "selection" "old" "kind" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-old" #f 79 18 79 25 ("old")}
        {Lisp-Entry "get-selection" #f 83 18 83 31 ("selection")}
        {Lisp-Entry "get-origin" #f 87 18 87 28 ("origin")}
        {Lisp-Entry "get-force-parent?" #f 91 18 91 35 ("force-parent?")}
        {Lisp-Entry "get-force?" #f 95 18 95 28 ("force?")}
        {Lisp-Entry "get-user-origin?" #f 99 18 99 34 ("user-origin?")}}}})
"Selection-Handler"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "handler" "Selection-Handler.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.handler.Selection-Handler" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Selection-Handler" #f 44 7 44 24 ("Event-Handler")
        {Lisp-Entry "force?" #f 47 8 47 14 ("generate")}
        {Lisp-Entry "initialize" #f 50 11 50 21 ("force?~self" "set!" "nextmethod" "apply" "others" "force?" "bind-keywords" "rest")}
        {Lisp-Entry "fold-literal" #f 56 11 56 23 ("properties" ",properties" "',properties" "properties:" "target" ",target" "',target" "target:" "execute" ",execute" "',execute" "execute:" "form-level" ",form-level" "',form-level" "form-level:" "force?" ",force?" "',force?" "force?:" "method-name" ",method-name" "',method-name" "method-name:" "target-name" ",target-name" "',target-name" "target-name:" "Selection-Handler" "new")}
        {Lisp-Entry "print" #f 67 11 67 16 ("properties" "null?" "if" "force?" "method-name" "target-name" "target" "either" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Selection-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "selection" "Selection-Manager.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.selection.Selection-Manager" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Selection-Manager" #f 46 7 46 24 ("Object")
        {Lisp-Entry "selection" #f 49 15 49 24 ("generate")}
        {Lisp-Entry "selection-anchor" #f 50 15 50 31 ("generate")}
        {Lisp-Entry "modifiers" #f 51 12 51 21 ("generate" "0")}
        {Lisp-Entry "shift?" #f 52 12 52 18 ("generate")}
        {Lisp-Entry "control?" #f 53 12 53 20 ("generate")}
        {Lisp-Entry "alt?" #f 54 12 54 16 ("generate")}
        {Lisp-Entry "multiple-selection?" #f 55 12 55 31 ("generate")}
        {Lisp-Entry "mouse-down-part" #f 56 12 56 27 ("generate")}
        {Lisp-Entry "mouse-down-view" #f 57 12 57 27 ("generate")}
        {Lisp-Entry "provider" #f 60 8 60 16 ()}
        {Lisp-Entry "current-operation" #f 61 8 61 25 ()}
        {Lisp-Entry "delay-selection?" #f 62 8 62 24 ()}
        {Lisp-Entry "initialize" #f 65 11 65 21 ("provider" "set!" "nextmethod" "p")}
        {Lisp-Entry "debug-current-operation" #f 75 18 75 41 ("current-operation")}
        {Lisp-Entry "mouse-down?" #f 79 18 79 29 ("mouse-down" "'mouse-down" "current-operation" "eq?")}
        {Lisp-Entry "mouse-up?" #f 83 18 83 27 ("mouse-up" "'mouse-up" "current-operation" "eq?")}
        {Lisp-Entry "mouse-double-down?" #f 87 18 87 36 ("mouse-double-down" "'mouse-double-down" "current-operation" "eq?")}
        {Lisp-Entry "mouse-double-up?" #f 91 18 91 34 ("mouse-double-up" "'mouse-double-up" "current-operation" "eq?")}
        {Lisp-Entry "keyboard?" #f 95 18 95 27 ("keyboard" "'keyboard" "current-operation" "eq?")}
        {Lisp-Entry "locked?" #f 99 18 99 25 ("locked" "'locked" "current-operation" "eq?")}
        {Lisp-Entry "set-modifiers" #f 103 11 103 24 ("alt?" "control?" "shift?" "set!" "a?" "c?" "s?")}
        {Lisp-Entry "with-locked-operation" #f 114 18 114 39 ("locked" "'locked" "set!" "begin" "unwind-protect" "current-operation" "old-operation" "let" "proc")}
        {Lisp-Entry "collapse?" #f 123 18 123 27 ("row")}
        {Lisp-Entry "expand?" #f 127 18 127 25 ("row")}
        {Lisp-Entry "end-delayed?" #f 131 18 131 30 ("mouse-up?" "content" "'content" "mouse-down-part" "eq?" "control?" "shift?" "not" "multiple-selection?" "and" "if")}
        {Lisp-Entry "allow-start-drag?" #f 137 18 137 35 ("mouse-down?" "content" "'content" "mouse-down-part" "eq?" "and")}
        {Lisp-Entry "mouse-down-part-control?" #f 142 18 142 42 ("control" "'control" "mouse-down-part" "eq?")}
        {Lisp-Entry "delay-selection" #f 151 18 151 33 ("delay-selection?" "set!")}
        {Lisp-Entry "change-selection?" #f 155 18 155 35 ("else" "mouse-up" "delay-selection?" "not" "mouse-down" "current-operation" "case")}
        {Lisp-Entry "mouse-down" #f 162 18 162 28 ("multiple-selection?" "set-modifiers" "mouse-down-part" "mouse-down-view" "mouse-down" "'mouse-down" "current-operation" "set!" "ms?" "alt?" "control?" "shift?" "part" "view")}
        {Lisp-Entry "mouse-up" #f 170 18 170 26 ("set-modifiers" "mouse-up" "'mouse-up" "mouse-double-up" "'mouse-double-up" "current-operation" "set!" "mouse-double-down?" "if" "alt?" "control?" "shift?")}
        {Lisp-Entry "double-click" #f 177 18 177 30 ("set-modifiers" "mouse-double-down" "'mouse-double-down" "current-operation" "set!" "alt?" "control?" "shift?")}
        {Lisp-Entry "keyboard" #f 182 18 182 26 ("set-modifiers" "keyboard" "'keyboard" "current-operation" "set!" "alt?" "control?" "shift?")}
        {Lisp-Entry "reset" #f 187 18 187 23 ("delay-selection?" "multiple-selection?" "set-modifiers" "mouse-down-part" "current-operation" "set!")}}}})
"Selection-Provider"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "selection" "Selection-Provider.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.selection.Selection-Provider" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Selection-Provider" #f 45 11 45 29 ()}}})
"Separator"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "layout" "Separator.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.layout.Separator" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Separator" #f 46 7 46 16 ("Figure")
        {Lisp-Entry "default-size" #f 49 11 49 23 ("0" "8" "Dimension")}}}})
"Separator-Item"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Separator-Item.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.menu.Separator-Item" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Separator-Item" #f 47 7 47 21 ("Item")
        {Lisp-Entry "default-size" #f 55 11 55 23 ("8" "100" "Dimension")}
        {Lisp-Entry "preferred-height" #f 59 11 59 27 ("8")}
        {Lisp-Entry "draw" #f 68 11 68 15 ("4" "Light" "3" "line" "Dark" "name:" "Color" "set-color" "get-width" "-" "right" "1" "left" "let" "lv" "lh" "context" "surface")}}}})
"Separator-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Separator-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Separator-View" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Separator-View" #f 47 7 47 21 ("View")
        {Lisp-Entry "draw" #f 55 11 55 15 ("Light" "0" "line" "Dark" "name:" "Color" "set-color" "1" "get-height" "-" "top" "get-size" "size" "let*" "lv" "lh" "context" "surface")}}}})
"Shortcut"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "action" "Shortcut.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.action.Shortcut" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Shortcut" #f 45 7 45 15 ("Object")
        {Lisp-Entry "modifiers" #f 48 8 48 17 ()}
        {Lisp-Entry "key" #f 49 8 49 11 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("standardize-key" "key~self" "standardize-modifiers" "modifiers~self" "set!" "nextmethod" "key" "modifiers")}
        {Lisp-Entry "standardize-key" #f 58 11 58 26 ("upcase" "char?" "if" "key")}
        {Lisp-Entry "standardize-modifiers" #f 64 11 64 32 (":control" ":shift" ":alt" "cons" "set!" "memq?" "when" "modifier" "function" "try" "standard" "let" "modifiers")}
        {Lisp-Entry "hash-object" #f 76 11 76 22 ("eqv-hash" "+" "modifiers" "key" "cons" "equal-hash")}
        {Lisp-Entry "compare-object" #f 83 11 83 25 (":not-equal" "else" ":equal" "get-key" "key" "get-modifiers" "modifiers" "=" "and" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "fold-literal" #f 93 11 93 23 ("key" ",key" "',key" "modifiers" ",modifiers" "',modifiers" "Shortcut" "new")}
        {Lisp-Entry "print" #f 97 11 97 16 ("key" "modifiers" "not-null?" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-modifiers" #f 110 18 110 31 ("modifiers")}
        {Lisp-Entry "get-key" #f 114 18 114 25 ("key")}
        {Lisp-Entry "present" #f 123 18 123 25 ("key" "modifiers" "format")}
        {Lisp-Entry "present-shortcut" #f 127 18 127 34 ("->string" "format" "key" "char?" "if" "localize-shortcut" ":shift" ":alt" "localize" "string-append" "set!" "modifiers" ":control" "memq?" "when" "str" "let")}
        {Lisp-Entry "Localized-Shortcuts" #f 138 14 138 33 ("Multiply" "Subtract" "Add" "Delete" "Insert" "Next" "Prior" "Down" "Right" "Up" "Left" "End" "Home" "Tab" "Space" "Return" "Backspace")}
        {Lisp-Entry "localize-shortcut" #f 158 11 158 28 ("cdr" "localize" "not" "if" "Localized-Shortcuts" "assq" "info" "let" "shortcut")}}}})
"Shortcut-Chooser"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Shortcut-Chooser.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Shortcut-Chooser" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Shortcut-Chooser" #f 47 7 47 23 ("ok" "buttons" "bindings-view" "title:" "title" "header" "name:" "Shortcut-Viewer")
        {Lisp-Entry "action-name" #f 50 12 50 23 ("generate")}
        {Lisp-Entry "host-title" #f 68 16 68 26 ()}
        {Lisp-Entry "setup-description" #f 77 11 77 28 ("action-name" "format" "description" "'description" "locate" "set-title")}
        {Lisp-Entry "choose-hook" #f 87 11 87 22 ("get-host" "end-modal" "begin" "null?" "if" "bindings" "shortcut")}}}})
"Shortcut-Viewer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Shortcut-Viewer.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Shortcut-Viewer" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Shortcut-Viewer" #f 51 7 51 22 ("on-cancel" "311" "cancel" "on-ok" ":host" "default?:" "90" "215" "ok" "on-choose" "action-handler:" "enabled?:" "120" "7" "choose" "south" "40" "buttons" "210" "on-context-menu" "context-menu-handler:" "on-double-click" "double-click-handler:" "on-escape-press" "escape-press-handler:" "on-return-press" ":form" "Event-Handler" "return-press-handler:" "bindings" "fill" "content" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "124" "396" "24" "bindings-border" "6" "center" "bindings-view" "2" "408" "54" "0" "Label" "27" "30" "description" "Caption" "Font" "font:" "16" "350" "9" "10" "Point" "position:" "title:" "title" "north" "location:" "56" "100" "Dimension" "size:" "header" "name:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "selected-shortcut" #f 54 8 54 25 ()}
        {Lisp-Entry "finish" #f 78 11 78 17 ("get-tree" "acquire-focus" "setup-chooser" "setup-description" "nextmethod" "rest")}
        {Lisp-Entry "host-title" #f 90 16 90 26 ()}
        {Lisp-Entry "host-size" #f 94 16 94 25 ("249" "408" "Dimension")}
        {Lisp-Entry "dialog-class" #f 98 16 98 28 ("Shortcut-Chooser-Dialog")}
        {Lisp-Entry "setup-description" #f 107 19 107 36 ("description" "'description" "locate" "set-title")}
        {Lisp-Entry "setup-chooser" #f 112 11 112 24 ("choose" "shortcut" "function" "get-application" "set-shortcut-hook")}
        {Lisp-Entry "get-tree" #f 124 11 124 19 ("bindings" "'bindings" "locate")}
        {Lisp-Entry "on-choose" #f 133 11 133 20 ("setup-chooser" "ok" "'ok" "choose" "'choose" "locate" "set-enabled?" "get-tree" "remove-every-row" "selected-shortcut" "set!" "evt")}
        {Lisp-Entry "on-double-click" #f 141 11 141 26 ("close-modal-dialog" "edit-action" "evt")}
        {Lisp-Entry "on-context-menu" #f 146 11 146 26 ("track-popup-menu" "when" "new-menu" "menu" "let" "function" "with-context-click" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-edit-action" #f 157 11 157 25 ("close-modal-dialog" "edit-action" "evt")}
        {Lisp-Entry "on-return-press" #f 162 11 162 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-escape-press" #f 168 11 168 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "get-modal-result" #f 173 11 173 27 ("selected-shortcut")}
        {Lisp-Entry "choose" #f 182 11 182 17 ("ok" "'ok" "choose" "'choose" "locate" "set-enabled?" "list" "'list" "view-bindings" "get-tree" "tree" "get-application" "get-bindings-designer" "designer" "selected-shortcut" "set!" "choose-hook" "when" "gather-bindings" "bindings" "let" "shortcut")}
        {Lisp-Entry "choose-hook" #f 193 29 193 40 ("bindings" "shortcut")}
        {Lisp-Entry "gather-bindings" #f 197 11 197 26 ("get-output" "get-bindings" "get-children" "put" "shortcut=?" "and" "when" "get-shortcut" "action-shortcut" "action" "actions" "function" "for-each" "List-Factory" "new" "fact" "let" "shortcut")}
        {Lisp-Entry "edit-action" #f 214 11 214 22 ("get-method-name" "get-application" "edit-definitions" "bell" "not" "if" "get-action-handler" "action-handler" "when" "get-tree" "get-single-selected-data" "action" "let")}
        {Lisp-Entry "new-menu" #f 228 11 228 19 ("self" "client:" "Action-Menu" "new" "when" "get-tree" "get-single-selected-data" "action" "let")}}
      {Lisp-Entry "Shortcut-Chooser-Dialog" #f 239 7 239 30 ("Dialog")
        {Lisp-Entry "destroy" #f 242 11 242 18 ("nextmethod" "get-application" "set-shortcut-hook")}}
      {Lisp-Entry "Header-View" #f 252 7 252 18 ("View")
        {Lisp-Entry "Header-Color" #f 255 14 255 26 ("255" "blue:" "green:" "120" "red:" "Color" "new")}
        {Lisp-Entry "draw" #f 259 11 259 15 ("Header-Color" "1" "White" "name:" "Color" "0" "list" "get-bounds" "gradient-fill" "lv" "lh" "context" "surface")}}
      {Lisp-Entry "Action-Menu" #f 268 7 268 18 ("shortcut-viewer" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "edit-action" "name:" "Context-Menu")}}})
"Shortcut-Viewer-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Shortcut-Viewer-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Shortcut-Viewer-Actions" #f 37 19 37 61 ("jazz")
      {Lisp-Entry "Shortcut-Viewer-Actions" #f 46 7 46 30 ("on-edit-action" ":guest" ":client" ":form" "Event-Handler" "action-handler:" "edit-action" "name:" "Actions")}}})
"Snap-Layout"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "layout" "Snap-Layout.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.layout.Snap-Layout" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Snap-Layout" #f 45 7 45 18 ("Layout")
        {Lisp-Entry "insets" #f 48 12 48 18 ("generate" "0" "Rect")}
        {Lisp-Entry "justification" #f 49 12 49 25 ("generate" "center" "'center")}
        {Lisp-Entry "padding" #f 50 12 50 19 ("generate" "0")}
        {Lisp-Entry "layout" #f 58 11 58 17 ("Dimension" "set-size-noevent" "move-figure" "b" "r" "t" "insets" "l" "get-bottom" "get-right" "max" "get-top" "get-left" "min" "east" "west" "south" "padding" "north" "get-location" "case" "h" "w" "for-each" "Point" "new" "set-position" "+" "-" "hh" "2" "fxfloor/" "hw" "get-height" "get-width" "set!" "when" "bottom" "right" "top" "left" "second" "cv" "first" "ch" "find-child-located" "get-visible?" "Figure" "is?" "and" "figure" "function" "collect-if" "visibles" "0" "justify" "integer?" "if" "else" "center" "'center" "fit" "'fit" "eq?" "pair?" "cond" "justification" "let" "part" "size" "justify-center" "define" "height" "width" "figures" "layout")}}}})
"Split-Layout"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "layout" "Split-Layout.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.layout.Split-Layout" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Split-Layout" #f 45 7 45 19 ("Layout")
        {Lisp-Entry "layout" #f 48 11 48 17 ("layout-split" "split" "layout-zoom" "zoom" "case" "layout-empty" "not" "if" "insets" "insets:" "division" "division:" "mode" "mode:" "orientation" "orientation:" "state" "state:" "separator" "separator:" "height" "width" "figures")}
        {Lisp-Entry "layout-empty" #f 56 11 56 23 ("set-visible?" "figure" "function" "for-each" "insets" "division" "mode" "orientation" "height" "width" "figures")}
        {Lisp-Entry "layout-zoom" #f 63 11 63 22 ("get-bottom" "get-right" "-" "Dimension" "set-size" "get-top" "get-left" "Point" "new" "set-position" "get-visible?" "when" "figure" "function" "for-each" "insets" "division" "mode" "orientation" "separator" "height" "width" "figures")}
        {Lisp-Entry "layout-split" #f 72 11 72 23 ("set-visible?" "Rect" "Dimension" "set-size" "Point" "new" "set-position" "second-height" "second-width" "first-height" "first-width" "positive?" "cast" "abs" "percent" "fxround" "pct" "relative" "get-bottom" "get-top" "quotient" "get-right" "-" ">" "get-left" "<" "or" "'horz" "if" "+" "set!" "negative?" "absolute" "1" "line" "2" "edge" "4" "resize" "splitter-size" "vert" "horz" "case" "size" "let" "error" "not" "unspecified" "bar" "'second" "second" "'first" "first" "get-location" "eq?" "figure" "find-if" "location" "function" "find" "let*" "when" "insets" "division" "mode" "orientation" "separator" "height" "width" "figures")}}}})
"Splitter"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Splitter.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Splitter" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Splitter" #f 47 7 47 15 ("View")
        {Lisp-Entry "orientation" #f 50 12 50 23 ("set-orientation" "get-orientation" "vert" "'vert")}
        {Lisp-Entry "move-handler" #f 51 12 51 24 ("set-move-handler" "get-move-handler")}
        {Lisp-Entry "dragging?" #f 54 8 54 17 ()}
        {Lisp-Entry "base-position" #f 55 8 55 21 ()}
        {Lisp-Entry "displacement" #f 56 8 56 20 ()}
        {Lisp-Entry "get-orientation" #f 64 18 64 33 ("orientation")}
        {Lisp-Entry "set-orientation" #f 68 18 68 33 ("orientation" "set!" "or")}
        {Lisp-Entry "cursor-update" #f 77 11 77 24 (":horizontal-splitter" "horz" ":vertical-splitter" "vert" "orientation" "case" "set-cursor" "pos")}
        {Lisp-Entry "mouse-down" #f 89 11 89 21 ("acquire-capture" "0" "Point" "displacement" "base-position" "dragging?" "set!" "pos")}
        {Lisp-Entry "drag-move" #f 96 11 96 20 ("get-v" "horz" "self" "process-move" "0" "get-h" "move-figure" "vert" "orientation" "case" "nu+" "displacement" "set!" "base-position" "nu-" "delta" "let" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 109 11 109 18 ("set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "get-move-handler" #f 120 18 120 34 ("move-handler")}
        {Lisp-Entry "set-move-handler" #f 124 18 124 34 ("move-handler" "set!" "value")}
        {Lisp-Entry "process-move" #f 128 26 128 38 ("self" "invoke" "delta:" ":move" "Event" "new" "evt" "let" "move-handler" "when" "delta" "sender")}
        {Lisp-Entry "get-row-class" #f 139 11 139 24 ("nextmethod" "else" "Handler-Row" "move-handler" "field-name" "case" "property")}}}})
"Splitter-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Splitter-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Splitter-Preferences" #f 37 19 37 58 ("jazz")
      {Lisp-Entry "Splitter-Preferences" #f 46 7 46 27 ("Bitmap-Resource" "icon:" "title:" "Figure-Preferences")
        {Lisp-Entry "separator" #f 49 12 49 21 ("generate" "resize" "'resize")}
        {Lisp-Entry "state" #f 50 12 50 17 ("generate")}
        {Lisp-Entry "zoomed" #f 51 12 51 18 ("generate")}
        {Lisp-Entry "orientation" #f 52 12 52 23 ("generate" "horz" "'horz")}
        {Lisp-Entry "mode" #f 53 12 53 16 ("generate" "absolute" "'absolute")}
        {Lisp-Entry "division" #f 54 12 54 20 ("generate")}
        {Lisp-Entry "insets" #f 55 12 55 18 ("generate" "0" "Rect")}
        {Lisp-Entry "apply-root" #f 67 11 67 21 ("get-root" "apply-to" "offscreen?:" "Splitter-View" "new" "set-root" "player")}
        {Lisp-Entry "apply-preferences" #f 72 11 72 28 ("parent:" "Splitter-View" "new" "apply-to" "assert" "parent")}
        {Lisp-Entry "apply-to" #f 77 11 77 19 ("zoom" "find-child-located" "zoomed-child" "let" "zoomed" "layout-view" "get-children" "get-guest" "host-install" "Host-View" "is?" "when" "child" "children" "apply-preferences" "pref" "function" "for-each" "location" "set-location" "get-visible?" "set-visible?" "insets" "set-insets" "division" "set-division" "mode" "set-mode" "orientation" "set-orientation" "state" "set-state" "separator" "set-separator" "remove-children" "splitter")}
        {Lisp-Entry "get-class-image" #f 105 16 105 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" #f 109 11 109 37 ("insets" "division" "mode" "orientation" "state" "location")}
        {Lisp-Entry "get-addable-classes" #f 113 11 113 30 ("Stage-Preferences" "Docked-Preferences" "Pad-Preferences" "Splitter-Preferences" "list")}}}})
"Splitter-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Splitter-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Splitter-View" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Splitter-View" #f 49 7 49 20 ("Medium" "name:" "Color" "background:" "View")
        {Lisp-Entry "separator" #f 52 12 52 21 ("generate" "resize" "'resize")}
        {Lisp-Entry "state" #f 53 12 53 17 ("generate")}
        {Lisp-Entry "orientation" #f 54 12 54 23 ("generate" "horz" "'horz")}
        {Lisp-Entry "mode" #f 55 12 55 16 ("generate" "absolute" "'absolute")}
        {Lisp-Entry "division" #f 56 12 56 20 ("generate" "100")}
        {Lisp-Entry "insets" #f 57 12 57 18 ("generate" "0" "Rect")}
        {Lisp-Entry "full?" #f 58 12 58 17 ("generate")}
        {Lisp-Entry "after-handler" #f 59 12 59 25 ("generate")}
        {Lisp-Entry "split-layout" #f 62 8 62 20 ("Split-Layout" "new")}
        {Lisp-Entry "bar-bounds" #f 63 8 63 18 ()}
        {Lisp-Entry "dragging?" #f 64 8 64 17 ()}
        {Lisp-Entry "previous" #f 65 8 65 16 ()}
        {Lisp-Entry "size-change" #f 77 11 77 22 ("layout-view" "nextmethod" "size")}
        {Lisp-Entry "layout" #f 82 11 82 17 ("insets" "insets:" "division" "division:" "mode:" "orientation" "orientation:" "state" "state:" "separator" "separator:" "get-height" "get-width" "children" "split-layout" "layout" "bar-bounds" "set!" "absolute" "'absolute" "dragging?" "if" "mode" "get-size" "size" "let")}
        {Lisp-Entry "remove-children" #f 93 18 93 33 ("children" "get-guest" "host-uninstall" "Host-View" "set-parent" "set-visible?" "close" "if" "Pad-View" "remove-children" "Splitter-View" "is?" "when" "child" "function" "for-each")}
        {Lisp-Entry "workspace-zoomable?" #f 113 18 113 37 ("workspace-minimisable?" "get-guest" "guest" "Host-View" "is-not?" "or" "brother" "let" "children" "neq?" "child" "function" "find-if" "get-brother" "define" "view")}
        {Lisp-Entry "zoom" #f 130 18 130 22 ("layout-view" "children" "eq?" "set-visible?" "child" "function" "for-each" "zoom" "'zoom" "state" "set!" "target")}
        {Lisp-Entry "unzoom" #f 138 18 138 24 ("layout-view" "children" "set-visible?" "child" "function" "for-each" "split" "'split" "state" "set!")}
        {Lisp-Entry "get-zoomed" #f 146 18 146 28 ("children" "get-visible?" "child" "function" "find-if" "zoom" "'zoom" "state" "eq?" "when")}
        {Lisp-Entry "cursor-update" #f 158 11 158 24 ("nextmethod" ":horizontal-splitter" "vert" ":vertical-splitter" "set-cursor" "horz" "orientation" "case" "in-rect?" "bar-bounds" "resize" "'resize" "separator" "eq?" "and" "if" "pos")}
        {Lisp-Entry "draw" #f 171 11 171 15 ("line" "top" "vert" "left" "edges:" "sunken" "'sunken" "outer:" "raised" "'raised" "inner:" "draw-edge" "horz" "orientation" "edge" "resize" "separator" "case" "bar-bounds" "split" "'split" "state" "eq?" "and" "when" "lv" "lh" "context" "surface")}
        {Lisp-Entry "absolute->relative" #f 190 11 190 29 ("percentage" "get-height" "vert" "get-width" "horz" "orientation" "case" "size" "let" "division")}
        {Lisp-Entry "relative->absolute" #f 197 11 197 29 ("-" "set!" "positive?" "if" "abs" "percent" "fxround" "pct" "get-height" "vert" "get-width" "horz" "orientation" "case" "size" "let*" "division")}
        {Lisp-Entry "mouse-down" #f 213 11 213 21 ("acquire-capture" "relative->absolute" "division" "relative" "'relative" "mode" "get-v" "vert" "get-h" "horz" "orientation" "case" "previous" "dragging?" "set!" "in-rect?" "bar-bounds" "resize" "'resize" "separator" "eq?" "and" "when" "pos")}
        {Lisp-Entry "drag-move" #f 222 11 222 20 ("call-after-handler" "update-view" "layout-view" "set!" "division" "increase!" "previous" "-" "delta" "get-v" "vert" "get-h" "horz" "orientation" "case" "n" "let*" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" #f 233 11 233 18 ("absolute->relative" "division" "set!" "relative" "'relative" "mode" "eq?" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "call-after-handler" #f 246 11 246 29 ("after:" "Event" "new" "self" "invoke" "after-handler" "when")}
        {Lisp-Entry "get-class-image" #f 256 16 256 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 260 16 260 37 ("nextmethod" "else" "after-handler" "insets" "division" "mode" "orientation" "state" "separator" "field-name" "case" "property")}}}})
"Stage"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Stage.jazz"} 1245777538
    {Lisp-Entry "jazz.ui.view.Stage" #f 37 19 37 37 ("jazz")
      {Lisp-Entry "Stage" #f 51 7 51 12 ("Dark" "name:" "Color" "background:" "View")
        {Lisp-Entry "maximized?" #f 54 8 54 18 ()}
        {Lisp-Entry "fullscreen?" #f 55 8 55 19 ()}
        {Lisp-Entry "get-border" #f 67 18 67 28 ("parent")}
        {Lisp-Entry "stage-activate" #f 76 26 76 40 ("client-deactivate" "view" "function" "for-each-docked" "get-toplevel" "set-caption" "maximized?" "when")}
        {Lisp-Entry "stage-deactivate" #f 84 26 84 42 ()}
        {Lisp-Entry "get-maximized?" #f 93 18 93 32 ("maximized?")}
        {Lisp-Entry "set-maximized?" #f 97 18 97 32 ("restore" "maximize" "if" "value")}
        {Lisp-Entry "toggle-maximized" #f 103 18 103 34 ("maximized?" "not" "set-maximized?")}
        {Lisp-Entry "maximize" #f 107 18 107 26 ("get-title" "set-caption" "children" "get-guest" "get-host" "maximize" "get-visible?" "frame" "for-each" "set-caption?" "set-maximized?" "when" "maximized?" "set!" "selected-workspace" "workspace" "first-view" "current" "get-menubar" "menubar" "get-application" "appl" "get-toplevel" "toplevel" "get-border" "border" "let*" "function" "with-locked-update")}
        {Lisp-Entry "restore" #f 132 18 132 25 ("children" "get-guest" "get-host" "restore" "get-visible?" "when" "frame" "for-each" "set-caption?" "selected-workspace" "set-maximized?" "maximized?" "set!" "get-menubar" "menubar" "get-application" "appl" "get-toplevel" "toplevel" "get-border" "border" "let*" "function" "with-locked-update")}
        {Lisp-Entry "get-fullscreen?" #f 157 18 157 33 ("fullscreen?")}
        {Lisp-Entry "set-fullscreen?" #f 161 18 161 33 ("get-size" "layout-stage" "get-border" "border" "let" "set!" "fullscreen?" "neq?" "when" "value")}
        {Lisp-Entry "install-wallpaper" #f 173 26 173 43 ()}
        {Lisp-Entry "size-change" #f 182 11 182 22 ("layout-frames" "nextmethod" "size")}
        {Lisp-Entry "layout-frames" #f 187 11 187 24 ("children" "get-host" "maximize-bounds" "get-visible?" "frame" "function" "for-each" "maximized?" "when" "size")}
        {Lisp-Entry "draw-children" #f 201 11 201 24 ("reverse" "paint" "rect-in-rect?" "opaque" "function" "some?" "unless" "cons" "size" "h/v/size->rect" "rect" "get-v" "get-h" "+" "get-position" "pos" "cdr" "get-visible?" "not" "if" "car" "drawing" "let" "not-null?" "when" "opaques" "children" "draw" "define" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "mouse-down" #f 225 11 225 21 ("acquire-focus" "pos")}}}})
"Stage-Border"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Stage-Border.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Stage-Border" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Stage-Border" #f 47 7 47 19 ("View")
        {Lisp-Entry "size-change" #f 50 11 50 22 ("layout-stage" "nextmethod" "size")}
        {Lisp-Entry "get-stage" #f 60 18 60 27 ("stage" "'stage" "child")}
        {Lisp-Entry "maximize" #f 69 18 69 26 ("get-size" "layout-stage")}
        {Lisp-Entry "restore" #f 73 18 73 25 ("get-size" "layout-stage")}
        {Lisp-Entry "layout-stage" #f 82 11 82 23 ("+" "Dimension" "-" "set-size" "Point" "new" "set-position" "2" "1" "0" "if" "width" "get-fullscreen?" "fullscreen?" "get-maximized?" "maximized?" "get-stage" "stage" "let*" "size")}
        {Lisp-Entry "Frame-Color" #f 96 14 96 25 ("blue:" "green:" "128" "red:" "Color")}
        {Lisp-Entry "draw" #f 100 11 100 15 ("White" "name:" "Color" "-" "1" "or" "unless" "get-fullscreen?" "fullscreen?" "get-maximized?" "maximized?" "get-stage" "stage" "let*" "Frame-Color" "get-bottom" "get-right" "0" "Rect" "new" "frame-rect" "get-bounds" "bounds" "let" "lv" "lh" "context" "surface")}}}})
"Stage-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Stage-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Stage-Preferences" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Stage-Preferences" #f 48 7 48 24 ("Bitmap-Resource" "icon:" "title:" "Figure-Preferences")
        {Lisp-Entry "apply-root" #f 60 11 60 21 ("apply-to" "get-root" "set-offscreen?" "get-stage" "get-parent" "set-root" "player")}
        {Lisp-Entry "apply-preferences" #f 66 11 66 28 ("apply-to" "set-parent" "get-stage" "get-parent" "stage-border" "let" "assert" "parent")}
        {Lisp-Entry "apply-to" #f 73 11 73 19 ("get-visible?" "set-visible?" "location" "set-location" "stage-border")}
        {Lisp-Entry "get-class-image" #f 83 16 83 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" #f 87 11 87 37 ("location")}}}})
"Standard-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "workspace" "Standard-Workspace.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.workspace.Standard-Workspace" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Standard-Workspace" #f 46 7 46 25 (":status" "-23" "line" "status" ":toolbar" "27" "second" "toolbar" ":menubar" "model-name:" "first" "vert" "orientation:" "split" "state:" "21" "division:" "edge" "separator:" "root" "location:" "menubar" "name:" "Workspace-Preferences")}}})
"Status-Label"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Status-Label.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.view.Status-Label" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Status-Label" #f 48 7 48 19 ("Medium" "name:" "Color" "background:" "View")
        {Lisp-Entry "icon" #f 51 12 51 16 ("set-icon" "get-icon")}
        {Lisp-Entry "mouse-activate?" #f 58 11 58 26 ()}
        {Lisp-Entry "get-icon" #f 67 18 67 26 ("icon")}
        {Lisp-Entry "set-icon" #f 71 18 71 26 ("icon" "set!" "icn")}
        {Lisp-Entry "set-title" #f 75 11 75 20 ("update-view" "nextmethod" "title~self" "empty-string?" "and" "unless" "title")}
        {Lisp-Entry "draw-background" #f 86 11 86 26 ("fill-rect" "-1" "inflate-rect" "rect" "get-bounds" "bounds" "let*" "background" "when" "context" "surface")}
        {Lisp-Entry "draw" #f 93 11 93 15 ("draw-body" "draw-icon" "rectangle" "'rectangle" "edges:" "sunken" "'sunken" "outer:" "get-bounds" "draw-edge" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-icon" #f 99 11 99 20 ("get-icons-cache" "draw-image" "top" "2" "left" "get-application" "appl" "let" "icon" "when" "context" "surface")}
        {Lisp-Entry "draw-body" #f 107 11 107 20 ("draw-text" "Black" "Color" "set-text-color" "Caption" "name:" "Font" "set-font" "4" "top" "3" "20" "icon" "if" "left" "localize" "let" "title" "when" "surface")}}}})
"Status-Toolbar"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Status-Toolbar.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Status-Toolbar" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Status-Toolbar" #f 49 7 49 21 ("Medium" "name:" "Color" "background:" "Toolbar")
        {Lisp-Entry "finish" #f 56 11 56 17 ("update-status" "when" "selected-workspace" "workspace" "let" "nextmethod" "rest")}
        {Lisp-Entry "host-install" #f 63 11 63 23 ("self" "set-status-bar" "get-application" "appl" "let")}
        {Lisp-Entry "host-uninstall" #f 68 11 68 25 ("set-status-bar" "get-application" "appl" "let")}
        {Lisp-Entry "layout" #f 78 11 78 17 ("get-height" "get-width" "children" "layout" "padding:" "2" "0" "Rect" "insets:" "Flow-Layout" "new" "flow" "let")}}}})
"String-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "String-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.String-Request" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "String-Request" #f 48 7 48 21 ("167" "cancel" "default?:" "on-ok" "action-handler:" "24" "80" "ok" "Entry-Border" "Color" "color:" "198" "52" "93" "message" "on-cancel" ":host" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-content-change" ":form" "Event-Handler" "content-change-handler:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "19" "183" "28" "108" "Label" "Font" "font:" "16" "70" "30" "Point" "position:" "title:" "prefix" "name:" "120" "322" "Dimension" "size:" "View")
        {Lisp-Entry "accepts-empty?" #f 51 12 51 26 ("set-accepts-empty?" "get-accepts-empty?")}
        {Lisp-Entry "unicity-domain" #f 52 12 52 26 ("set-unicity-domain" "get-unicity-domain")}
        {Lisp-Entry "validator" #f 53 12 53 21 ("set-validator" "get-validator")}
        {Lisp-Entry "get-accepts-empty?" #f 73 18 73 36 ("accepts-empty?")}
        {Lisp-Entry "set-accepts-empty?" #f 77 18 77 36 ("name-change" "accepts-empty?" "set!" "value")}
        {Lisp-Entry "get-unicity-domain" #f 82 18 82 36 ("unicity-domain")}
        {Lisp-Entry "set-unicity-domain" #f 86 18 86 36 ("name-change" "unicity-domain" "set!" "value")}
        {Lisp-Entry "get-validator" #f 91 18 91 31 ("validator")}
        {Lisp-Entry "set-validator" #f 95 18 95 31 ("name-change" "validator" "set!" "value")}
        {Lisp-Entry "host-title" #f 105 16 105 26 ()}
        {Lisp-Entry "on-content-change" #f 114 11 114 28 ("name-change" "evt")}
        {Lisp-Entry "on-return-press" #f 118 11 118 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "name-change" #f 124 11 124 22 ("null?" "let" "validator" "equal" "'equal" "sort-predicate" "test:" "member?" "unicity-domain" "empty-string?" "accepts-empty?" "continuation-return" "not" "if" "'message" "set-title" "ok" "'ok" "set-enabled?" "message" "enabled?" "proc" "get-string-content" "name" "'text" "locate" "text" "let*" "return" "function" "continuation-capture" "name-validated?" "when")}
        {Lisp-Entry "name-validated?" #f 145 11 145 26 ("validator" "unicity-domain" "accepts-empty?" "not" "or")}
        {Lisp-Entry "get-modal-result" #f 154 11 154 27 ("text" "'text" "locate" "get-string-content")}}}})
"Style"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Style.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Style" #f 37 19 37 37 ("jazz")
      {Lisp-Entry "Style" #f 44 7 44 12 ("bottom" "'bottom" "initialize" "alignment" "Exemplar")
        {Lisp-Entry "get-width" #f 56 26 56 35 ()}
        {Lisp-Entry "get-height" #f 60 26 60 36 ()}
        {Lisp-Entry "run-width" #f 64 26 64 35 ("run")}
        {Lisp-Entry "justify-element" #f 73 21 73 36 ("2" "fxceiling/" "center" "-" "0" "top" "bottom" "'bottom" "alignment" "either" "case" "height" "element-height")}
        {Lisp-Entry "propagate?" #f 85 26 85 36 ()}
        {Lisp-Entry "scan" #f 94 29 94 33 ("default-scan" "proc" "run" "tabs" "end" "start" "h")}
        {Lisp-Entry "default-scan" #f 98 11 98 23 ("2" "fxround/" "0" "+" "right" "get-width" "width" "let*" "proc" "run" "tabs" "end" "start" "h")}
        {Lisp-Entry "wrap" #f 109 29 109 33 ("else" "place-update" "<=" "cond" "get-width" "+" "right" "let" "run" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "place-update" #f 122 29 122 41 ("v" "h")}
        {Lisp-Entry "height-update" #f 126 29 126 42 ("height")}
        {Lisp-Entry "draw-style" #f 135 29 135 39 ("get-width" "enabled?" "left" "tabs" "line-height" "v" "h" "string" "context" "surface")}}}})
"Symbol-Completer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Symbol-Completer.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Symbol-Completer" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Symbol-Completer" #f 45 7 45 23 ("Object")
        {Lisp-Entry "domain" #f 48 8 48 14 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("domain~self" "set!" "nextmethod" "domain")}
        {Lisp-Entry "complete" #f 61 26 61 34 ("get-output" "domain" "put" "compare-n" "when" "target" "function" "for-each" "List-Factory" "new" "result" "cardinality" "length" "let" "eqv?" "test" "test:" "string")}}}})
"Symbol-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Symbol-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Symbol-Request" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Symbol-Request" #f 46 7 46 21 ("String-Request")
        {Lisp-Entry "form-model" #f 49 11 49 21 ("nextmethod" "else" "IDE-Text-View" "text" "get-name" "case" "form")}}}})
"Tab-Sheet"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Tab-Sheet.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Tab-Sheet" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Tab-Sheet" #f 45 7 45 16 ("Container")
        {Lisp-Entry "title-color" #f 48 12 48 23 ("set-title-color" "get-title-color")}
        {Lisp-Entry "borders" #f 51 18 51 25 ("generate")}
        {Lisp-Entry "get-title-color" #f 59 18 59 33 ("title-color")}
        {Lisp-Entry "set-title-color" #f 63 18 63 33 ("parent" "invalidate-view" "title-color" "set!" "value")}
        {Lisp-Entry "get-transparent?" #f 73 11 73 27 ()}
        {Lisp-Entry "layout" #f 82 11 82 17 ("21" "get-height" "2" "get-width" "-" "Dimension" "new" "set-size" "20" "1" "Point" "set-position" "get-size" "size" "when" "'content" "find-child" "content" "let")}
        {Lisp-Entry "get-class-image" #f 95 16 95 31 ("Bitmap-Resource")}}}})
"Tab-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Tab-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Tab-View" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Tab-View" #f 47 7 47 15 ("View")
        {Lisp-Entry "orientation" #f 50 12 50 23 ("set-orientation" "get-orientation" "top" "'top")}
        {Lisp-Entry "padding" #f 53 8 53 15 ("10")}
        {Lisp-Entry "headers-height" #f 54 8 54 22 ("20")}
        {Lisp-Entry "selection" #f 55 8 55 17 ("0")}
        {Lisp-Entry "add-child" #f 63 11 63 20 ("layout-view" "update-borders" "set-visible?" "not" "when" "nextmethod" "children" "null?" "first?" "let" "child")}
        {Lisp-Entry "get-orientation" #f 77 18 77 33 ("orientation")}
        {Lisp-Entry "set-orientation" #f 81 18 81 33 ("invalidate-view" "orientation" "set!" "o")}
        {Lisp-Entry "get-content" #f 86 18 86 29 ("content" "'content" "locate")}
        {Lisp-Entry "mouse-down" #f 95 11 95 21 ("set-selection" "when" "find-header" "header" "let" "pos")}
        {Lisp-Entry "update-borders" #f 106 11 106 25 ("children" "set!" "increase!" "cons" "set-borders" "font" "text-extent" "get-width" "padding" "+" "next" "get-title" "localize" "title" "let*" "header" "function" "for-each" "2" "h" "0" "n" "let")}
        {Lisp-Entry "find-header" #f 118 11 118 22 ("length" "0" "naturals" "children" "continuation-return" ">=" "and" "get-borders" "right" "left" "bind" "n" "header" "for-each" "return" "function" "continuation-capture" "headers-height" "<" "when" "get-v" "v" "get-h" "h" "let" "pt")}
        {Lisp-Entry "redraw-header" #f 133 11 133 24 ("headers-height" "+" "0" "2" "-" "Rect" "new" "invalidate-rect" "child-ranked" "get-borders" "rg" "lf" "bind" "n")}
        {Lisp-Entry "get-selection" #f 143 18 143 31 ("selection")}
        {Lisp-Entry "set-selection" #f 147 18 147 31 ("call-selection-handler" "update-view" "redraw-header" "set!" "child-ranked" "set-visible?" "old" "let" "selection" "/=" "when" "user-origin?" "user-origin?:" "force?" "force?:" "sel")}
        {Lisp-Entry "get-selection-name" #f 161 18 161 36 ("selected-sheet" "get-name")}
        {Lisp-Entry "set-selection-name" #f 165 18 165 36 ("set-selection" "child-rank" "rank" "child" "sheet" "let*" "name")}
        {Lisp-Entry "selected-sheet" #f 171 18 171 32 ("selection" "child-ranked")}
        {Lisp-Entry "all-sheets" #f 180 18 180 28 ("get-children")}
        {Lisp-Entry "remove-every-sheet" #f 184 18 184 36 ("close-children")}
        {Lisp-Entry "layout" #f 193 11 193 17 ("children" "set-size" "0" "Point" "set-position" "Tab-Sheet" "is?" "when" "child" "function" "for-each" "get-size" "size" "let")}
        {Lisp-Entry "draw" #f 207 11 207 15 ("draw-bottom" "bottom" "draw-top" "top" "orientation" "case" "get-size" "size" "let" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-top" #f 214 11 214 19 ("last" "cdr" "h" "let" "line" "length" "naturals" "5" "draw-text" "either" "set-text-color" "line-to-preserve" "3" "-" "Black" "1" "unless" "increase!" "decrease!" "when" "get-borders" "rg" "lf" "bind" "2" "selection" "=" "selected?" "get-title-color" "title-color" "get-title" "localize" "title" "n" "header" "function" "for-each" "line-to" "move-to" "Light" "Color" "set-color" "edges:" "outer:" "raised" "'raised" "inner:" "Rect" "new" "draw-edge" "Label" "name:" "Font" "set-font" "-1" "headers-height" "+" "children" "null?" "if" "content" "get-height" "bottom" "get-width" "right" "top" "0" "left" "let*" "size" "surface")}
        {Lisp-Entry "draw-bottom" #f 263 11 263 22 ("line-to" "move-to" "Label" "Font" "set-font" "Light" "name:" "Color" "set-color" "headers-height" "content" "get-height" "bottom" "1" "get-width" "-" "right" "top" "0" "left" "let*" "size" "surface")}
        {Lisp-Entry "get-class-image" #f 281 16 281 31 ("Bitmap-Resource")}}}})
"Table"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Table.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Table" #f 37 19 37 37 ("jazz")
      {Lisp-Entry "Table" #f 46 7 46 12 ("Object")
        {Lisp-Entry "rows" #f 49 18 49 22 ()}
        {Lisp-Entry "construct-literal" #f 53 16 53 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" #f 57 11 57 21 ("rows~self" "set!" "nextmethod" "rows" "rows:")}
        {Lisp-Entry "foldable?" #f 63 11 63 20 ()}
        {Lisp-Entry "fold-object" #f 68 11 68 22 ("rows" ":rows" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" #f 76 11 76 16 ("rows" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-rows" #f 87 18 87 26 ("rows")}}}})
"Table-Border"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Table-Border.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Table-Border" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Table-Border" #f 48 7 48 19 ("Label" "Font" "font:" ":icons" "portfolio:" "row-spacing:" "1" "column-spacing:" "filled-column:" "Entry-Border" "Color" "background:" "tree" "header" "fill" "layout-type:" "content" "vscroll?:" "document" "scroller" "name:" "entry" "style:" "edge" "border-type:" "Border-View")}}})
"Table-Cell"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Table-Cell.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Table-Cell" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Table-Cell" #f 48 7 48 17 ("Label" "Font" "font:" "text" "fill" "layout-type:" "content" "vscroll?:" "document" "scroller" "name:" "entry" "style:" "edge" "border-type:" "Border-View")}}})
"Table-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Table-Row.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Table-Row" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Table-Row" #f 45 7 45 16 ("Object")
        {Lisp-Entry "children" #f 48 18 48 26 ()}
        {Lisp-Entry "sons" #f 49 18 49 22 ()}
        {Lisp-Entry "construct-literal" #f 53 16 53 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" #f 57 11 57 21 ("sons~self" "children~self" "set!" "nextmethod" "sons" "children")}
        {Lisp-Entry "foldable?" #f 64 11 64 20 ()}
        {Lisp-Entry "fold-object" #f 69 11 69 22 ("sons" ":sons" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" #f 77 11 77 16 ("sons" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-sons" #f 88 18 88 26 ("sons")}}}})
"Table-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Table-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Table-Text-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Table-Text-View" #f 46 7 46 22 ("2" "top-padding:" "4" "left-padding:" "Formatted-Text-View")}}})
"Table-Tree-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Table-Tree-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Table-Tree-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Table-Tree-View" #f 45 7 45 22 ("Tree-View")}}})
"Text"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text" #f 37 19 37 36 ("jazz")
      {Lisp-Entry "Text" #f 45 7 45 11 ("Object")
        {Lisp-Entry "paragraphs" #f 48 18 48 28 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("paragraphs~self" "set!" "nextmethod" "paragraphs" "paragraphs:")}
        {Lisp-Entry "fold-literal" #f 56 11 56 23 ("paragraphs" ",paragraphs" "',paragraphs" "paragraphs:" "Text" "new")}
        {Lisp-Entry "print" #f 60 11 60 16 ("paragraphs" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-paragraphs" #f 71 18 71 32 ("paragraphs")}}}})
"Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Text-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Text-Actions" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Text-Actions" #f 46 7 46 19 ("next-aux" "prior-aux" "document-end-aux" "document-home-aux" "extend-end-aux" "end-aux" "extend-home-aux" "home-aux" "delete-word-aux" "delete-char-aux" "downward-compound-aux" "upward-compound-aux" "extend-forward-compound-aux" "forward-compound-aux" "extend-backward-compound-aux" "backward-compound-aux" "extend-downward-aux" "move-downward-aux" "extend-upward-aux" "move-upward-aux" "extend-forward-word-aux" "move-forward-word-aux" "extend-forward-char-aux" "move-forward-char-aux" "extend-backward-word-aux" "move-backward-word-aux" "extend-backward-char-aux" "move-backward-char-aux" "on-toggle-lock-anchor" "lock-anchor" "one/none" "one/no-space" "one" "one-space" "none" "keep:" "on-remove-spaces" "no-space" "on-display-info" "display-info" "on-top-caret" "top-caret" "on-center-caret" "center-caret" "on-capitalize-selection" "capitalize" "on-downcase-selection" "downcase" "on-upcase-selection" "upcase" "on-fill-to-column" "fill-to-column" "on-mark-column" "mark-column" "extend-mark" "on-jump-mark" "jump-mark" "on-set-mark" "set-mark" "Space" "on-select-outer" "select-outer" "on-goto-line" "goto-line" "on-find-backward" "find-backward" "on-find-forward" "find-forward" "on-search-backward-mode" "search-backward-mode" "on-search-forward-mode" "search-forward-mode" "on-paste" "paste" "Insert" "on-copy" "copy" "on-cut" "cut" "Backspace" "on-backspace-press" "backspace-word" "shift-tab" "Tab" "on-tab-press" "tab" "extend-next" "Next" "on-next" "next" "extend-prior" "Prior" "on-prior" "prior" "extend-document-end" "document-end" "extend-document-home" "document?:" "document-home" "extend-end" "End" "on-end" "end" "extend-home" "Home" "on-home" "home" "on-kill-line" "kill-line" "on-delete-word" "delete-word" "Delete" "on-delete-char" "delete-char" "on-downward-compound" "downward-compound" "on-upward-compound" "upward-compound" "extend-forward-compound" "on-forward-compound" "forward-compound" "extend-backward-compound" ":alt" "on-backward-compound" "backward-compound" "scroll-downward" "extend-downward" "Down" "down" "move-downward" "scroll?:" "scroll-upward" "extend-upward" "Up" "up" "move-upward" "extend-forward-word" "move-forward-word" "extend-forward-char" "Right" "right" "move-forward-char" "extend-backward-word" ":control" "move-backward-word" ":shift" "extend-backward-char" "Left" "Shortcut" "shortcut:" "word?:" "extend?:" "left" "direction:" "on-move" ":focus" "Event-Handler" "action-handler:" "move-backward-char" "name:" "Actions")}}})
"Text-Color-Combo"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Color-Combo.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Color-Combo" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Text-Color-Combo" #f 46 7 46 23 ("pick" "tooltip-text:" "tooltip?:" "body" "name:" "Push-Combo")
        {Lisp-Entry "form-model" #f 55 11 55 21 ("nextmethod" "else" "Color-Button" "body" "get-name" "case" "form")}
        {Lisp-Entry "popup-colors" #f 66 18 66 30 ("self" "initiator:" "action-handler" "action-handler:" "Color-Picker" "popup" "get-height" "get-width" "0" "Point" "new" "pos" "let" "geometry" "geometry:" "colors" "colors:")}}}})
"Text-Colorizer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Colorizer.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Colorizer" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Text-Colorizer" #f 45 7 45 21 ("Object")
        {Lisp-Entry "text" #f 48 8 48 12 ()}
        {Lisp-Entry "row" #f 49 8 49 11 ()}
        {Lisp-Entry "col" #f 50 8 50 11 ()}
        {Lisp-Entry "runs" #f 51 8 51 12 ()}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("List-Factory" "new" "runs" "0" "col" "text" "set!" "nextmethod" "t")}
        {Lisp-Entry "apply-style" #f 61 18 61 29 ("add-runs" "get-col" "add-run" "=" "if" "text" "get-style" "style" "er" "get-row" "sr" "let" "name/style" "end" "start")}
        {Lisp-Entry "add-run" #f 70 11 70 18 ("get-runs" "get-style" "subseq!" "put-run" "put" "if" "<" "and" "cardinality" "cast" "+" "to" "str" "run" "function" "for-each" "from" "let" ">" "get-string" "string" "text" "get-paragraph" "paragraph" "let*" "runs" "reset" "0" "col" "set!" "finish-current" "/=" "row" "not" "or" "when" "style" "end" "start" "n")}
        {Lisp-Entry "add-runs" #f 97 11 97 19 ("else" "0" "get-string" "cardinality" "get-col" "add-run" "=" "cond" "text" "get-paragraph" "paragraph" "to" "from" "n" "for" "loop" "limit" "get-row" "beginning" "let" "style" "end" "start")}
        {Lisp-Entry "put-run" #f 107 11 107 18 ("Run" "new" "runs" "put" "style" "string")}
        {Lisp-Entry "finish-current" #f 111 18 111 32 ("wrap-paragraph" "set-runs" "get-output" "let" "Default" "'Default" "get-style" "subseq!" "Run" "new" "put" "col" ">" "cardinality" "len" "get-string" "string" "text" "get-paragraph" "paragraph" "let*" "runs" "row" "and" "when")}}}})
"Text-Combo"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Combo.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Combo" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Text-Combo" #f 45 7 45 17 ("Combo-Box")
        {Lisp-Entry "client" #f 48 12 48 18 ("set-client" "get-client")}
        {Lisp-Entry "get-client" #f 56 18 56 28 ("client")}
        {Lisp-Entry "set-client" #f 60 18 60 28 ("client-update" "set!" "client" "neq?" "when" "value")}
        {Lisp-Entry "client-update" #f 66 29 66 42 ()}
        {Lisp-Entry "selection-change" #f 75 26 75 42 ()}}}})
"Text-Context-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Context-Menu.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Context-Menu" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Text-Context-Menu" #f 46 7 46 24 ("select-all" "paste" "copy" "view" "Action" "action:" "Bitmap-Resource" "icon:" "french:" "english:" "Locales" "title:" "cut" "name:" "Context-Menu")}}})
"Text-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "event" "Text-Event.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.event.Text-Event" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Text-Event" #f 44 7 44 17 ("Event")}}})
"Text-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Explorer.jazz"} 1245606997
    {Lisp-Entry "jazz.ui.text.Text-Explorer" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Text-Explorer" #f 48 7 48 20 ("Explorer")
        {Lisp-Entry "text" #f 51 8 51 12 ()}
        {Lisp-Entry "paragraphs" #f 52 8 52 18 ()}
        {Lisp-Entry "limit" #f 53 8 53 13 ()}
        {Lisp-Entry "beginning" #f 54 8 54 17 ()}
        {Lisp-Entry "ending" #f 55 8 55 14 ()}
        {Lisp-Entry "start" #f 56 8 56 13 ("0" "Cell" "new")}
        {Lisp-Entry "end" #f 57 8 57 11 ("0" "Cell" "new")}
        {Lisp-Entry "kind" #f 58 8 58 12 ()}
        {Lisp-Entry "line-hook" #f 59 8 59 17 ()}
        {Lisp-Entry "initialize" #f 62 11 62 21 ("set-end" "set-start" "or" "when" "set-range" "if" "set-direction" "text-ending" "ending" "text-beginning" "beginning" "get-limit" "limit" "get-paragraphs" "paragraphs" "text" "set!" "nextmethod" "range" "range:" "end" "end:" "start" "start:" "forward" "'forward" "direction" "direction:" "txt")}
        {Lisp-Entry "get-syntax" #f 77 29 77 39 ()}
        {Lisp-Entry "goto-beginning" #f 86 11 86 25 ("beginning" "set-start")}
        {Lisp-Entry "goto-ending" #f 90 11 90 22 ("ending" "set-end")}
        {Lisp-Entry "at-beginning?" #f 94 18 94 31 ("beginning" "start" "<=")}
        {Lisp-Entry "at-ending?" #f 98 18 98 28 ("ending" "end" ">=")}
        {Lisp-Entry "get-start" #f 102 18 102 27 ("start" "copy")}
        {Lisp-Entry "set-start" #f 106 18 106 27 ("get-col" "set-col" "get-row" "start" "set-row" "pos")}
        {Lisp-Entry "get-end" #f 111 18 111 25 ("end" "copy")}
        {Lisp-Entry "set-end" #f 115 18 115 25 ("get-col" "set-col" "get-row" "end" "set-row" "pos")}
        {Lisp-Entry "get-range" #f 120 18 120 27 ("end" "start" "copy" "Range$Cell$" "new")}
        {Lisp-Entry "set-range" #f 124 18 124 27 ("get-end" "set-end" "get-start" "set-start" "range")}
        {Lisp-Entry "set-pos" #f 129 18 129 25 ("set-end" "set-start" "pos")}
        {Lisp-Entry "get-line-hook" #f 134 18 134 31 ("line-hook")}
        {Lisp-Entry "set-line-hook" #f 138 18 138 31 ("line-hook" "set!" "value")}
        {Lisp-Entry "get-kind" #f 147 25 147 33 ("kind")}
        {Lisp-Entry "set-kind" #f 151 28 151 36 ("kind" "set!" "knd")}
        {Lisp-Entry "get-paragraph" #f 155 18 155 31 ("paragraphs" "element" "n")}
        {Lisp-Entry "paragraph-string" #f 159 18 159 34 ("get-paragraph" "get-string" "n")}
        {Lisp-Entry "paragraph-length" #f 163 18 163 34 ("paragraph-string" "cardinality" "n")}
        {Lisp-Entry "get-char" #f 167 18 167 26 ("element" "cardinality" "cast" "<" "if" "get-paragraph" "get-string" "string" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "get-range-string" #f 176 18 176 34 ("Range$Cell$" "new" "text" "get-string" "end" "start")}
        {Lisp-Entry "get-marked" #f 180 18 180 28 ("end" "start" "get-range-string")}
        {Lisp-Entry "get-symbol-string" #f 186 18 186 35 ("get-marked" "end" "1" "+" "get-range-string" "start" "get-char" "eqv?" "if")}
        {Lisp-Entry "find-marked-symbol" #f 192 18 192 36 ("get-marked" "find-symbol")}
        {Lisp-Entry "intern-marked-symbol" #f 196 18 196 38 ("get-marked" "string->symbol")}
        {Lisp-Entry "get-range-symbol" #f 200 18 200 34 ("get-range-string" "find-symbol" "end" "start")}
        {Lisp-Entry "get-mark" #f 204 18 204 26 ("get-range" "get-kind" "Explorer-Mark" "new")}
        {Lisp-Entry "next!" #f 213 11 213 16 ("else" "0" "set-col" "1" "+" "set-row" "limit" "increase-col" "paragraph-length" "<" "cond" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "previous!" #f 227 11 227 20 ("else" "paragraph-length" "set-col" "set-row" "1" "-" "previous-row" "-1" "increase-col" "0" ">" "cond" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "next-cell!" #f 242 11 242 21 ("next!" "when" "pos")}
        {Lisp-Entry "previous-cell!" #f 247 11 247 25 ("previous!" "when" "pos")}
        {Lisp-Entry "next-pos" #f 252 11 252 19 ("else" "1" "-" "next!" "0" "<=" "cond" "iterate" "copy" "let" "offset" "pos")}
        {Lisp-Entry "previous-pos" #f 263 11 263 23 ("else" "1" "-" "previous!" "0" "<=" "cond" "iterate" "copy" "let" "offset" "pos")}
        {Lisp-Entry "forward" #f 274 11 274 18 ("end" "next!")}
        {Lisp-Entry "backward" #f 278 11 278 19 ("start" "previous!")}
        {Lisp-Entry "next-char" #f 282 18 282 27 ("get-char" "next-in-text?" "and" "when" "next-pos" "let" "offset" "pos")}
        {Lisp-Entry "char-forward" #f 288 25 288 37 ("end" "next-char" "offset")}
        {Lisp-Entry "previous-char" #f 292 18 292 31 ("get-char" "when" "1" "+" "previous-pos" "let" "offset" "pos")}
        {Lisp-Entry "char-backward" #f 298 25 298 38 ("start" "previous-char" "offset")}
        {Lisp-Entry "in-text?" #f 302 11 302 19 ("paragraph-length" "<=" "=" "limit" "<" "or" "0" ">=" "and" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "next-in-text?" #f 308 11 308 24 ("paragraph-length" "=" "and" "in-text?" "limit" "<" "if" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "forward-while" #f 316 18 316 31 ("forward" "not" "if" "0" "char-forward" "c" "iterate" "let" "predicate")}
        {Lisp-Entry "backward-while" #f 328 18 328 32 ("backward" "not" "if" "0" "char-backward" "c" "iterate" "let" "predicate")}
        {Lisp-Entry "forward-until" #f 340 18 340 31 ("not" "c" "function" "forward-while" "predicate")}
        {Lisp-Entry "backward-until" #f 344 18 344 32 ("not" "c" "function" "backward-while" "predicate")}
        {Lisp-Entry "forward-to" #f 348 18 348 28 ("eqv?" "c" "function" "forward-until" "char")}
        {Lisp-Entry "backward-to" #f 352 18 352 29 ("eqv?" "c" "function" "backward-until" "char")}
        {Lisp-Entry "forward-whitespaces" #f 356 18 356 37 ("whitespace?" "forward-while")}
        {Lisp-Entry "backward-whitespaces" #f 360 18 360 38 ("whitespace?" "backward-while")}
        {Lisp-Entry "forward-word" #f 369 18 369 30 ("forward" "word-constituent?" "not" "or" "if" "0" "char-forward" "c" "iterate" "let")}
        {Lisp-Entry "forward-non-word" #f 378 18 378 34 ("forward" "word-constituent?" "not" "or" "if" "0" "char-forward" "c" "iterate" "let")}
        {Lisp-Entry "backward-word" #f 387 18 387 31 ("backward" "word-constituent?" "not" "or" "if" "0" "char-backward" "c" "iterate" "let")}
        {Lisp-Entry "backward-non-word" #f 396 18 396 35 ("backward" "word-constituent?" "not" "or" "if" "0" "char-backward" "c" "iterate" "let")}
        {Lisp-Entry "outer-expr" #f 405 26 405 36 ("backward-word" "forward-word" "rest")}
        {Lisp-Entry "text-constituent?" #f 415 18 415 35 ("text" "get-syntax" "text-constituent?" "char")}
        {Lisp-Entry "paragraph-start" #f 424 18 424 33 ("0" "start" "set-col")}
        {Lisp-Entry "paragraph-end" #f 428 18 428 31 ("get-row" "paragraph-length" "end" "set-col")}
        {Lisp-Entry "previous-paragraph" #f 432 18 432 36 ("0" "set-col" "-1" "start" "increase-row")}
        {Lisp-Entry "next-paragraph" #f 437 18 437 32 ("0" "set-col" "end" "increase-row")}
        {Lisp-Entry "paragraph-column" #f 442 18 442 34 ("eqv?" "c" "function" "forward-while")}
        {Lisp-Entry "backward-style" #f 451 18 451 32 ("backward" "get-style" "not" "or" "when" "start" "text" "get-run-at" "run" "iterate" "let" "predicate")}
        {Lisp-Entry "forward-style" #f 459 18 459 31 ("forward" "get-style" "not" "or" "text" "get-run-at" "run" "when" "1" "end" "next-pos" "next" "iterate" "let" "predicate")}
        {Lisp-Entry "select-style" #f 469 18 469 30 ("forward-style" "backward-style" "predicate")}}}})
"Text-File-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Text-File-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Text-File-Request" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Text-File-Request" #f 50 7 50 24 ("char-encoding" "166" "blue:" "188" "green:" "200" "red:" "Medium" "Color" "border-color:" "2" "Rect" "border-insets:" "22" "150" "0" "80" "auto-size?:" "3" "4" "Point" "position:" "title:" "24" "250" "Dimension" "size:" "buttonbar" "name:" "File-Request")
        {Lisp-Entry "host-title" #f 63 16 63 26 ()}
        {Lisp-Entry "finish" #f 67 11 67 17 ("update-char-encoding" "nextmethod" "rest")}
        {Lisp-Entry "Char-Encodings" #f 77 14 77 28 ("UTF-16" "UTF-8" "UTF" "ISO-8859-1" "ASCII")}
        {Lisp-Entry "update-char-encoding" #f 85 11 85 31 ("UTF" "'UTF" "set-value" "Char-Encodings" "set-choices" "char-encoding" "'char-encoding" "locate" "combo" "let")}
        {Lisp-Entry "get-modal-result" #f 96 11 96 27 ("char-encoding" "'char-encoding" "locate" "get-value" "nextmethod" "values")}}}})
"Text-Font-Combo"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Font-Combo.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Font-Combo" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Text-Font-Combo" #f 45 7 45 22 ("Text-Combo")
        {Lisp-Entry "font-list" #f 48 14 48 23 ()}
        {Lisp-Entry "client-update" #f 56 11 56 24 ("font-list" "list" "name" "function" "map" "set-choices")}
        {Lisp-Entry "selection-change" #f 67 11 67 27 ("get-font" "get-font-name" "set-content" "Text-Style" "is?" "if" "get-style-at" "style" "client" "get-end" "end" "let*")}
        {Lisp-Entry "combo-choice" #f 80 11 80 23 ("selection-change" "get-value" "client" "set-selection-font-name")}}}})
"Text-Palette"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Palette.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Palette" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Text-Palette" #f 51 7 51 19 ("on-insert-table" "insert-table" "table-separator" "on-insert-image" ":form" "insert-image" "image-separator" "on-toggle-ruler" "toggle-ruler" "ruler-separator" "on-pick-highlight-color" "Dark-Red" "on-highlight-color" "highlight-color" "0" "4" "on-pick-text-color" "pick" "Dark-Blue" "color:" "body" "on-text-color" "31" "text-color" "on-increase-indent" "increase-indent" "on-decrease-indent" "decrease-indent" "on-bulleted" "bulleted" "right" "justify-right" "centered" "justify-centered" "left" ":justification" "on-justify" "justification" "justify-left" "top" "selected?:" "alignment-top" "center" "alignment-center" "bottom" "alignment:" "on-alignment" "alignment" "group:" "alignment-bottom" "on-underline" "underline" "on-italic" "italic" "on-bold" ":focus" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "bold" "size" "40" "size-border" "font" "font-border" "enabled?:" "style" "166" "blue:" "188" "green:" "200" "red:" "Medium" "Color" "border-color:" "2" "Rect" "border-insets:" "21" "120" "Dimension" "size:" "style-border" "name:" "View")
        {Lisp-Entry "flow-layout" #f 54 8 54 19 ()}
        {Lisp-Entry "client" #f 55 8 55 14 ()}
        {Lisp-Entry "external-name" #f 102 16 102 29 ("text-palette" "'text-palette" "rest")}
        {Lisp-Entry "mouse-activate?" #f 106 11 106 26 ()}
        {Lisp-Entry "host-icon" #f 115 16 115 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 119 16 119 26 ()}
        {Lisp-Entry "host-install" #f 123 11 123 23 ("on-focus-change" "'on-focus-change" "method-name:" "self" "target:" "Event-Handler" "new" "add-focus-listener" "get-application" "appl" "let")}
        {Lisp-Entry "host-uninstall" #f 128 11 128 25 ("self" "remove-focus-listener" "get-application" "appl" "let")}
        {Lisp-Entry "finish" #f 138 11 138 17 ("layout-view" "0" "5" "4" "Rect" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "layout" #f 144 11 144 17 ("get-height" "get-width" "children" "flow-layout" "layout")}
        {Lisp-Entry "on-focus-change" #f 153 11 153 26 ("get-guest" "eq?" "get-host" "host" "or" "enable-buttons" "activate-text" "on-text" "'on-text" "method-name:" "target:" "Event-Handler" "new" "add-text-listener" "not" "remove-text-listener" "self" "text-listener?" "Formatted-Text-View" "is?" "and" "when" "get-new" "new-focus" "get-old" "old-focus" "get-application" "appl" "let" "evt")}
        {Lisp-Entry "on-text" #f 173 11 173 18 ("selection-change" ":selection-change" "get-kind" "case" "evt")}
        {Lisp-Entry "on-insert-image" #f 178 11 178 26 ("insert-styled" "moniker:" "Image-Style" "new" "style" "choose-file" "moniker" "let*" "title:" "form>>" "client" "insert-view" "evt")}
        {Lisp-Entry "on-insert-table" #f 186 11 186 26 ("2" "row-count:" "100" "width:" "columns:" "node-column?:" "header?:" "101" "304" "Dimension" "size:" "client" "insert-table" "evt")}
        {Lisp-Entry "enable-buttons" #f 190 29 190 43 ("insert-table" "'insert-table" "insert-image" "'insert-image" "toggle-ruler" "'toggle-ruler" "highlight-color" "'highlight-color" "text-color" "'text-color" "increase-indent" "'increase-indent" "decrease-indent" "'decrease-indent" "bulleted" "'bulleted" "numbered" "'numbered" "justify-right" "'justify-right" "justify-centered" "'justify-centered" "justify-left" "'justify-left" "alignment-top" "'alignment-top" "alignment-center" "'alignment-center" "alignment-bottom" "'alignment-bottom" "underline" "'underline" "italic" "'italic" "bold" "'bold" "size" "'size" "font" "'font" "style" "'style" "locate" "set-enabled?" "enabled?")}
        {Lisp-Entry "activate-text" #f 220 11 220 24 ("selection-change" "size" "'size" "font" "'font" "style" "'style" "locate" "set-client" "set!" "client" "neq?" "when" "text")}
        {Lisp-Entry "selection-change" #f 234 11 234 27 ("let" "else" "list" "get-application" "set-selected" "reference:" "class-of" "type-name" "model-name:" "'new" "action:" "Form" "form:" "Designer" "new" "designer" "get-view" "view" "View-Style" "typecase" "get-bulleted?" "bulleted" "'bulleted" "right" "'right" "justify-right" "'justify-right" "centered" "'centered" "justify-centered" "'justify-centered" "left" "'left" "get-justification" "justify-left" "'justify-left" "top" "'top" "alignment-top" "'alignment-top" "center" "'center" "alignment-center" "'alignment-center" "eq?" "alignment-bottom" "'alignment-bottom" "get-underline?" "underline" "'underline" "get-italic?" "italic" "'italic" "get-bold?" "bold" "'bold" "set-selected?" "get-font" "Text-Style" "is?" "essay" "bottom" "'bottom" "get-alignment" "either" "alignment" "get-style-at" "get-row" "get-paragraph" "get-format" "format" "client" "get-end" "end" "let*" "size" "'size" "font" "'font" "style" "'style" "locate" "selection-change")}}}})
"Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Text-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Text-Preferences" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Text-Preferences" #f 46 7 46 23 ("Bitmap-Resource" "icon:" "title:" "Document-Preferences")}}})
"Text-Request"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "Text-Request.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.Text-Request" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Text-Request" #f 47 7 47 19 ("209" "cancel" "default?:" "on-ok" "action-handler:" "24" "80" "143" "122" "title:" "ok" "on-cancel" "escape-press-handler:" "on-return" ":host" "Event-Handler" "return-press-handler:" "wrap?:" "top-padding:" "2" "left-padding:" "text" "fill" "layout-type:" "content" "name:" "vscroll?:" "hscroll?:" "edge" "border-type:" "121" "390" "7" "6" "Point" "position:" "180" "402" "Dimension" "size:" "View")
        {Lisp-Entry "dialog-class" #f 66 16 66 28 ("Text-Request-Dialog")}
        {Lisp-Entry "Text-Request-Dialog" #f 71 14 71 33 ("Dialog")
          {Lisp-Entry "focus-gain" #f 74 13 74 23 ("text" "'text" "guest" "locate" "acquire-focus" "nextmethod")}
          {Lisp-Entry "on-return" #f 79 13 79 22 ("get-modal-result" "end-modal" "text" "'text" "guest" "locate" "insert-newline" "get-shift?" "if" "evt")}
          {Lisp-Entry "get-modal-result" #f 85 13 85 29 ("text" "'text" "guest" "locate" "get-string-content")}}}}})
"Text-Search"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Text-Search.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.search.Text-Search" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Text-Search" #f 51 7 51 18 ("54" "user-files" "34" "jazz-files" "18" "120" "Dimension" "size:" "14" "13" "Point" "position:" "active-window" "title:" "domain" "name:" "Search-View")
        {Lisp-Entry "finish" #f 63 11 63 17 ("user-files" "'user-files" "get-user-label" "jazz-files" "'jazz-files" "locate" "set-title" "when" "get-jazz-label" "label" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "preferences" #f 74 11 74 22 ("text" "search-manager" "tools" "get-preferences")}
        {Lisp-Entry "get-search-domains" #f 83 11 83 29 ("user-files" "jazz-files" "active-window")}
        {Lisp-Entry "get-active-window-domain" #f 89 11 89 35 ("active-window" "'active-window")}
        {Lisp-Entry "search-targets" #f 98 11 98 25 ("thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "search-threaded" "else" "search-active-window" "active-window" "get-search-domain" "case" "targets")}
        {Lisp-Entry "search-threaded" #f 112 24 112 39 ("close-manager" "unregister-activity" "get-activity-manager" "manager" "when" "select-results" "get-search-targets" "add-results" "text" "'text" "set-mode" "get-results" "results" "let" "search" "found" "count-files" "get-search-reporter" "User-Reporter" "new" "reporter" "let*" "targets")}
        {Lisp-Entry "search" #f 126 11 126 17 ("search-user-files" "user-files" "search-jazz-files" "jazz-files" "get-search-domain" "case" "reporter" "targets")}
        {Lisp-Entry "get-constituent-test" #f 133 11 133 31 ("nextmethod" "else" "user-files" "jazz-constituent?" "jazz-files" "get-search-domain" "case")}
        {Lisp-Entry "set-session-properties" #f 145 11 145 33 ("get-active-domain" "set-search-domain" "nextmethod" "config")}
        {Lisp-Entry "Jazz-Count" #f 155 14 155 24 ()}
        {Lisp-Entry "count-jazz-files" #f 159 11 159 27 ("count-jazz-directories" "set!" "Jazz-Count" "unless")}
        {Lisp-Entry "count-jazz-directories" #f 165 11 165 33 ("ignored-directories:" "increase!" "ci=?" "test:" "get-extension" "member?" "when" "file" "iterate-directory" "directory" "function" "for-each" "default-search-extensions" "get-jazz-extensions" "extensions" "default-search-directories" "get-jazz-directories" "either" "filter-existing" "directories" "0" "count" "preferences" "pref" "let")}
        {Lisp-Entry "User-Count" #f 180 14 180 24 ()}
        {Lisp-Entry "count-user-files" #f 184 11 184 27 ("set!" "User-Count" "unless" "increase!" "get-extension" "member?" "when" "file" "iterate-directory" "directory" "for-each" "0" "function" "count" "default-search-extensions" "get-user-extensions" "extensions" "default-search-directories" "get-user-directories" "either" "filter-existing" "directories" "preferences" "pref" "let")}
        {Lisp-Entry "count-files" #f 203 11 203 22 ("count-user-files" "user-files" "count-jazz-files" "jazz-files" "get-search-domain" "case")}
        {Lisp-Entry "filter-existing" #f 209 11 209 26 ("exists?" "dir" "function" "collect-if" "directories")}
        {Lisp-Entry "default-search-directories" #f 215 11 215 37 ("User" "Directory" "list" "Jazz" "'Jazz" "is-alias?" "if" "append")}
        {Lisp-Entry "default-search-extensions" #f 222 11 222 36 ()}
        {Lisp-Entry "setup-search-reporter" #f 230 11 230 32 ("set-step" "set-pos" "1" "Range" "new" "set-range" "count" "reporter")}
        {Lisp-Entry "search-active-window" #f 241 11 241 31 ("acquire-focus" "bring-to-front" "find-forward" "get-start" "set-caret" "Text-View" "get-guest" "guest" "Frame-Host" "is?" "car" "frame" "1" "length" ">=" "when" "get-stage" "get-views" "frames" "let" "targets")}
        {Lisp-Entry "search-jazz-files" #f 254 11 254 28 ("get-output" "get-expression?" "search-in-directories" "default-search-extensions" "get-jazz-extensions" "extensions" "default-search-directories" "get-jazz-directories" "either" "filter-existing" "directories" "preferences" "pref" "List-Factory" "new" "factory" "let" "reporter" "targets")}
        {Lisp-Entry "search-user-files" #f 263 11 263 28 ("get-output" "get-expression?" "search-in-directories" "default-search-extensions" "get-user-extensions" "extensions" "default-search-directories" "get-user-directories" "either" "filter-existing" "directories" "preferences" "pref" "List-Factory" "new" "factory" "let" "reporter" "targets")}}}})
"Text-Search-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "search" "Text-Search-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.search.Text-Search-Preferences" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Text-Search-Preferences" #f 46 7 46 30 ("title:" "Search-View-Preferences")
        {Lisp-Entry "active-domain" #f 49 12 49 25 ("generate")}
        {Lisp-Entry "jazz-label" #f 50 12 50 22 ("generate")}
        {Lisp-Entry "jazz-directories" #f 51 12 51 28 ("generate")}
        {Lisp-Entry "jazz-extensions" #f 52 12 52 27 ("generate")}
        {Lisp-Entry "user-label" #f 53 12 53 22 ("generate")}
        {Lisp-Entry "user-directories" #f 54 12 54 28 ("generate")}
        {Lisp-Entry "user-extensions" #f 55 12 55 27 ("generate")}}}})
"Text-Size-Combo"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Size-Combo.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Size-Combo" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Text-Size-Combo" #f 45 7 45 22 ("Text-Combo")
        {Lisp-Entry "size-list" #f 48 14 48 23 ("72" "48" "36" "24" "18" "14" "12" "10" "9" "8")}
        {Lisp-Entry "client-update" #f 56 11 56 24 ("size-list" "->string" "list" "size" "function" "map" "set-choices")}
        {Lisp-Entry "selection-change" #f 67 11 67 27 ("get-font" "get-point-size" "->string" "set-content" "Text-Style" "is?" "if" "get-style-at" "style" "client" "get-end" "end" "let*")}
        {Lisp-Entry "combo-choice" #f 80 11 80 23 ("selection-change" "get-value" "client" "set-selection-point-size")}}}})
"Text-Style"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Style.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Style" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Text-Style" #f 46 7 46 17 ("frame" "highlight" "color" "font" "font-style" "font-weight" "font-size" "initialize" "font-family" "alignment" "Style")
        {Lisp-Entry "fold-literal" #f 60 11 60 23 ("Text-Style" "'Text-Style" "fold-exemplar")}
        {Lisp-Entry "get-height" #f 69 11 69 21 ("font" "get-metrics" "get-height")}
        {Lisp-Entry "run-width" #f 73 11 73 20 ("String" "coerce" "font" "text-width" "get-string" "string" "let" "run")}
        {Lisp-Entry "scan" #f 84 11 84 15 ("increase!" "font" "get-char-width" "2" "fxround/" "+" "-" "width" "cdr" "set!" "car" "<=" "while" "begin" "eqv?" "if" "element" "c" "min" "max" "below" "from" "n" "for" "loop" "cardinality" "len" "right" "mid" "left" "get-string" "string" "let" "proc" "run" "tabs" "end" "start" "h")}
        {Lisp-Entry "Break-Characters" #f 112 14 112 30 ()}
        {Lisp-Entry "wrap" #f 116 11 116 15 ("=" ">=" "if" "self" "subseq!" "Run" "new" "either" "let" "not" "or" ">" "and" "+" "Break-Characters" "memq?" "when" "set!" "right" "mid" "left" "n" "c" "function" "scan" "rightmost" "brk-right" "brk" "0" "offset" "1" "-" "end" "cardinality" "len" "get-string" "string" "start" "let*" "run" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "height-update" #f 148 11 148 24 ("height")}
        {Lisp-Entry "draw-style" #f 157 11 157 21 ("frame-rect" "Rect" "new" "rect" "frame" "when" "highlight" "draw-tabbed-text" "width" "let" "0" "String" "coerce" "draw-text" "begin" "not" "either" "Black" "'Black" "registered-color" "print-black/white?:" "getf" "if" "color" "justify-element" "+" "get-metrics" "get-height" "font-height" "let*" "font" "set-font" "enabled?" "left" "tabs" "line-height" "v" "h" "string" "context" "surface")}}}})
"Text-Style-Combo"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-Style-Combo.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.Text-Style-Combo" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Text-Style-Combo" #f 45 7 45 23 ("Text-Combo")
        {Lisp-Entry "client-update" #f 53 11 53 24 ("set-choices" "List" "->string" "list" "name" "function" "get-all-styles" "accumulate" "names" "let")}
        {Lisp-Entry "get-all-styles" #f 61 11 61 25 ("union" "get-styles" "styles" "exemplar-name" "client" "get-formats" "accumulate" "remove-nils" "formats" "let")}
        {Lisp-Entry "selection-change" #f 72 11 72 27 ("get-base" "get-name" "either" "->string" "set-content" "get-style-at" "style" "client" "get-end" "end" "let*")}
        {Lisp-Entry "combo-choice" #f 83 11 83 23 ("selection-change" "get-value" "client" "set-selection-style")}
        {Lisp-Entry "exemplar-name" #f 93 11 93 24 ("get-name" "exemplar")}}}})
"Text-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "syntax" "Text-Syntax.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.syntax.Text-Syntax" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Text-Syntax" #f 45 7 45 18 ("Object")
        {Lisp-Entry "comment-string" #f 53 26 53 40 ()}
        {Lisp-Entry "title-comment-string" #f 57 26 57 46 ()}
        {Lisp-Entry "get-constituent-test" #f 66 26 66 46 ("word-constituent?")}
        {Lisp-Entry "text-constituent?" #f 70 18 70 35 ("get-constituent-test" "proc" "let" "char")}
        {Lisp-Entry "get-catalog-context" #f 80 11 80 30 ("get-application" "get-catalog-context")}
        {Lisp-Entry "translate-key" #f 89 26 89 39 ("key")}
        {Lisp-Entry "auto-complete-characters" #f 98 26 98 50 ()}
        {Lisp-Entry "auto-complete-char?" #f 102 26 102 45 ("text-constituent?" "not" "auto-complete-characters" "memq?" "or" "last" "key")}}}})
"Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "Text-View.jazz"} 1245777538
    {Lisp-Entry "jazz.ui.text.Text-View" #f 38 19 38 41 ("jazz")
      {Lisp-Entry "Text-View" #f 65 7 65 16 ("16" "default-row-height:" "12" "left-padding:" "White" "name:" "Color" "background:" "Document" "Outline-View")
        {Lisp-Entry "Active-Selection-Color" #f 68 21 68 43 ("230" "blue:" "green:" "190" "red:" "Color")}
        {Lisp-Entry "Inactive-Selection-Color" #f 71 21 71 45 ("Unfocused-Selection" "name:" "Color")}
        {Lisp-Entry "Completion-Color" #f 75 21 75 37 ("blue:" "240" "green:" "128" "red:" "Color")}
        {Lisp-Entry "Caret-Color" #f 79 14 79 25 ("Black" "name:" "Color")}
        {Lisp-Entry "text" #f 84 22 84 26 ("set-text" "get-text")}
        {Lisp-Entry "text-content" #f 86 22 86 34 ("set-text-content" "get-text-content")}
        {Lisp-Entry "editable?" #f 87 22 87 31 ("set-editable?" "get-editable?")}
        {Lisp-Entry "selectable?" #f 88 22 88 33 ("set-selectable?" "get-selectable?")}
        {Lisp-Entry "wrap?" #f 89 22 89 27 ("set-wrap?" "get-wrap?")}
        {Lisp-Entry "default-format" #f 90 22 90 36 ("set-default-format" "get-default-format")}
        {Lisp-Entry "default-style" #f 91 22 91 35 ("set-default-style" "get-default-style")}
        {Lisp-Entry "paragraph-spacing" #f 92 22 92 39 ("set-paragraph-spacing" "get-paragraph-spacing" "0")}
        {Lisp-Entry "accepts-returns?" #f 93 22 93 38 ("set-accepts-returns?" "get-accepts-returns?")}
        {Lisp-Entry "focus-selects-all?" #f 94 22 94 40 ("set-focus-selects-all?" "get-focus-selects-all?")}
        {Lisp-Entry "show-unfocused-selection?" #f 95 22 95 47 ("set-show-unfocused-selection?" "get-show-unfocused-selection?")}
        {Lisp-Entry "active-selection-color" #f 96 22 96 44 ("set-active-selection-color" "get-active-selection-color" "Active-Selection-Color")}
        {Lisp-Entry "inactive-selection-color" #f 97 22 97 46 ("set-inactive-selection-color" "get-inactive-selection-color" "Inactive-Selection-Color")}
        {Lisp-Entry "completion-color" #f 98 22 98 38 ("set-completion-color" "get-completion-color" "Completion-Color")}
        {Lisp-Entry "caret-color" #f 99 22 99 33 ("set-caret-pen" "get-caret-pen" "Caret-Color")}
        {Lisp-Entry "char-encoding" #f 100 22 100 35 ("set-char-encoding" "get-char-encoding")}
        {Lisp-Entry "colorize?" #f 103 22 103 31 ("set-colorize?" "get-colorize?")}
        {Lisp-Entry "syntax" #f 106 18 106 24 ()}
        {Lisp-Entry "selection-anchor" #f 107 18 107 34 ()}
        {Lisp-Entry "locked-anchor?" #f 108 18 108 32 ()}
        {Lisp-Entry "mouse-selecting?" #f 109 18 109 34 ()}
        {Lisp-Entry "selection-mode" #f 110 18 110 32 ("char" "'char")}
        {Lisp-Entry "special-mode" #f 111 18 111 30 ()}
        {Lisp-Entry "virtual-h" #f 112 18 112 27 ()}
        {Lisp-Entry "caret-position" #f 113 18 113 32 ()}
        {Lisp-Entry "caret-pulse" #f 114 18 114 29 ()}
        {Lisp-Entry "caret-visible?" #f 115 18 115 32 ()}
        {Lisp-Entry "has-focus?" #f 116 18 116 28 ()}
        {Lisp-Entry "completion-active?" #f 117 18 117 36 ()}
        {Lisp-Entry "text-listeners" #f 118 18 118 32 ()}
        {Lisp-Entry "undoer" #f 119 18 119 24 ("self" "Undoer" "new")}
        {Lisp-Entry "user-tabs" #f 120 18 120 27 ()}
        {Lisp-Entry "tabs" #f 121 18 121 22 ()}
        {Lisp-Entry "mark" #f 122 18 122 22 ()}
        {Lisp-Entry "formats" #f 123 18 123 25 ("Exemplar-Domain" "new")}
        {Lisp-Entry "styles" #f 124 18 124 24 ("Exemplar-Domain" "new")}
        {Lisp-Entry "controller" #f 125 18 125 28 ()}
        {Lisp-Entry "previous-position" #f 126 18 126 35 ()}
        {Lisp-Entry "autoscroll-pulse" #f 127 18 127 34 ()}
        {Lisp-Entry "wrap-width" #f 128 18 128 28 ()}
        {Lisp-Entry "wrap-patch" #f 129 18 129 28 ()}
        {Lisp-Entry "contiguous-undo-range" #f 130 18 130 39 ()}
        {Lisp-Entry "verify-reload" #f 138 11 138 24 ()}
        {Lisp-Entry "current-history-item" #f 139 11 139 31 ()}
        {Lisp-Entry "prepare" #f 142 11 142 18 ("get-default-style" "add-style" "get-default-format" "add-format" "new-default-style" "default-style" "new-default-format" "default-format" "set!" "nextmethod" "rest")}
        {Lisp-Entry "install" #f 150 11 150 18 ("new-syntax" "syntax" "set!" "nextmethod" "rest")}
        {Lisp-Entry "install-child" #f 155 11 155 24 ("nextmethod" "else" "form->node" "set-text" "text" "get-model-name" "case" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "finish" #f 162 11 162 17 ("make-tabs" "tabs" "set!" "empty-content" "set-content" "text" "not" "when" "nextmethod" "rest")}
        {Lisp-Entry "destroy" #f 169 11 169 18 ("nextmethod" "show-text-cursor" "close" "controller" "when")}
        {Lisp-Entry "new-syntax" #f 176 29 176 39 ("Text-Syntax" "new")}
        {Lisp-Entry "get-syntax" #f 180 18 180 28 ("syntax")}
        {Lisp-Entry "set-syntax" #f 184 18 184 28 ("syntax~self" "set!" "syntax")}
        {Lisp-Entry "get-text-view" #f 188 11 188 24 ("self")}
        {Lisp-Entry "new-default-format" #f 192 11 192 29 ("formats" "domain:" "Default" "'Default" "name:" "Format" "new")}
        {Lisp-Entry "new-default-style" #f 196 11 196 28 ("Label" "Font" "font:" "styles" "domain:" "Default" "'Default" "name:" "Text-Style" "new")}
        {Lisp-Entry "get-editable?" #f 205 18 205 31 ("editable?")}
        {Lisp-Entry "set-editable?" #f 209 18 209 31 ("editable?" "set!" "value")}
        {Lisp-Entry "get-selectable?" #f 213 18 213 33 ("selectable?")}
        {Lisp-Entry "set-selectable?" #f 217 18 217 33 ("selectable?" "set!" "value")}
        {Lisp-Entry "get-wrap?" #f 221 18 221 27 ("wrap?")}
        {Lisp-Entry "set-wrap?" #f 225 18 225 27 ("wrap?" "set!" "value")}
        {Lisp-Entry "get-accepts-returns?" #f 229 18 229 38 ("accepts-returns?")}
        {Lisp-Entry "get-wrap-width" #f 233 18 233 32 ("wrap-width")}
        {Lisp-Entry "set-wrap-width" #f 237 18 237 32 ("wrap-width" "set!" "value")}
        {Lisp-Entry "set-accepts-returns?" #f 241 18 241 38 ("accepts-returns?" "set!" "flag")}
        {Lisp-Entry "get-focus-selects-all?" #f 245 18 245 40 ("focus-selects-all?")}
        {Lisp-Entry "set-focus-selects-all?" #f 249 18 249 40 ("focus-selects-all?" "set!" "flag")}
        {Lisp-Entry "get-show-unfocused-selection?" #f 253 18 253 47 ("show-unfocused-selection?")}
        {Lisp-Entry "set-show-unfocused-selection?" #f 257 18 257 47 ("show-unfocused-selection?" "set!" "value")}
        {Lisp-Entry "get-active-selection-color" #f 261 18 261 44 ("active-selection-color")}
        {Lisp-Entry "set-active-selection-color" #f 265 18 265 44 ("invalidate-view" "active-selection-color" "set!" "value")}
        {Lisp-Entry "set-inactive-selection-color" #f 270 18 270 46 ("invalidate-view" "inactive-selection-color" "set!" "value")}
        {Lisp-Entry "get-completion-color" #f 275 18 275 38 ("completion-color")}
        {Lisp-Entry "set-completion-color" #f 279 18 279 38 ("invalidate-view" "completion-color" "set!" "value")}
        {Lisp-Entry "get-colorize?" #f 284 18 284 31 ("colorize?")}
        {Lisp-Entry "set-colorize?" #f 288 18 288 31 ("colorize?" "set!" "value")}
        {Lisp-Entry "get-paragraphs" #f 292 21 292 35 ("root-row" "get-sons")}
        {Lisp-Entry "set-paragraphs" #f 296 21 296 35 ("root-row" "set-sons" "lst")}
        {Lisp-Entry "get-undoer" #f 300 18 300 28 ("undoer")}
        {Lisp-Entry "host-workspaces" #f 309 11 309 26 ("text")}
        {Lisp-Entry "install-in-host" #f 313 11 313 26 ("get-controller" "install-in-host" "nextmethod" "host")}
        {Lisp-Entry "focus-actions" #f 323 11 323 24 ("nextmethod" "text" "'text" "find-actions" "cons")}
        {Lisp-Entry "get-controller" #f 333 11 333 25 ("new-controller" "set!" "controller" "unless")}
        {Lisp-Entry "new-controller" #f 339 11 339 25 ("default-console?" "console?:" "default-tool?" "tool?:" "self" "Document-Controller" "new")}
        {Lisp-Entry "default-tool?" #f 343 29 343 42 ()}
        {Lisp-Entry "default-console?" #f 347 29 347 45 ()}
        {Lisp-Entry "save" #f 351 11 351 15 ("get-controller" "save")}
        {Lisp-Entry "save-as" #f 355 11 355 18 ("get-controller" "save-as")}
        {Lisp-Entry "save-all" #f 359 26 359 34 ("get-controller" "save-all")}
        {Lisp-Entry "get-moniker" #f 363 18 363 29 ("get-controller" "get-moniker")}
        {Lisp-Entry "set-moniker" #f 367 18 367 29 ("get-controller" "set-moniker" "moniker")}
        {Lisp-Entry "get-modified?" #f 371 11 371 24 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 375 11 375 24 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "get-read-only?" #f 379 11 379 25 ("get-controller" "get-read-only?")}
        {Lisp-Entry "write-allowed?" #f 383 11 383 25 ("get-controller" "write-allowed?" "editable?" "and")}
        {Lisp-Entry "update-status" #f 387 11 387 24 ("get-controller" "update-status")}
        {Lisp-Entry "update-moniker-time" #f 391 11 391 30 ("get-controller" "update-moniker-time" "moniker")}
        {Lisp-Entry "confirm-close" #f 395 11 395 24 ("get-controller" "confirm-close" "rest")}
        {Lisp-Entry "tool-update" #f 399 11 399 22 ("tool?")}
        {Lisp-Entry "console-update" #f 403 11 403 25 ("console?")}
        {Lisp-Entry "revert-saved" #f 407 11 407 23 ("get-controller" "revert-saved")}
        {Lisp-Entry "compare-saved" #f 411 11 411 24 ("get-controller" "compare-saved")}
        {Lisp-Entry "explorer-class" #f 420 26 420 40 ("Text-Explorer")}
        {Lisp-Entry "on-select-outer" #f 424 11 424 26 ("select-outer" "evt")}
        {Lisp-Entry "select-outer" #f 428 29 428 41 ("get-range" "set-selection" "reset-mode" "outer-expr" "when" "function" "with-safe-explore" "get-selection" "range:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "with-safe-explore" #f 437 11 437 28 ("ignore" "throw-cancel" "get-range" "set-selection" "yes" "'yes" "no:" "yes:" "question" "'question" "type:" "get-message" "message-box" "eq?" "when" "case" "err" "Explore-Error" "catch" "ask" "'ask" "action" "action:" "proc")}
        {Lisp-Entry "focus-gain" #f 455 11 455 21 ("selection" "invalidate-selection" "has-selection?" "select-all" "focus-selects-all?" "when" "update-caret" "has-focus?" "set!" "show-text-cursor" "nextmethod" "old")}
        {Lisp-Entry "focus-lose" #f 466 11 466 21 ("selection" "invalidate-selection" "has-selection?" "when" "end-completion" "hide-caret" "has-focus?" "set!" "show-text-cursor" "nextmethod" "view")}
        {Lisp-Entry "focus-activate" #f 476 11 476 25 ("focus-document")}
        {Lisp-Entry "focus-document" #f 480 11 480 25 ("acquire-focus")}
        {Lisp-Entry "mouse-leave" #f 484 11 484 22 ("show-text-cursor")}
        {Lisp-Entry "on-backspace-press" #f 488 11 488 29 ("get-property" "word?:" "backspace-press" "evt")}
        {Lisp-Entry "on-delete-press" #f 492 11 492 26 ("get-property" "word?:" "delete-press" "evt")}
        {Lisp-Entry "on-paragraph-style" #f 496 11 496 29 ("style:" "get-property" "set-selection-style" "evt")}
        {Lisp-Entry "on-numbered" #f 500 11 500 22 ("on-numbered" "'on-numbered" "unimplemented" "evt")}
        {Lisp-Entry "on-bulleted" #f 504 11 504 22 ("toggle-bulleted" "paragraph" "row" "function" "for-each-selected-paragraph" "evt")}
        {Lisp-Entry "on-decrease-indent" #f 510 11 510 29 ("-32" "indent-paragraph" "paragraph" "row" "function" "for-each-selected-paragraph" "evt")}
        {Lisp-Entry "on-increase-indent" #f 516 11 516 29 ("32" "indent-paragraph" "paragraph" "row" "function" "for-each-selected-paragraph" "evt")}
        {Lisp-Entry "on-justify" #f 522 11 522 21 ("set-justification" "paragraph" "row" "function" "for-each-selected-paragraph" "justification:" "get-property" "justification" "let" "evt")}
        {Lisp-Entry "on-alignment" #f 529 11 529 23 ("get-selection" "set-text-alignment" "alignment:" "get-property" "alignment" "let" "evt")}
        {Lisp-Entry "on-text-style" #f 534 11 534 24 ("bell" "evt")}
        {Lisp-Entry "on-text-font" #f 538 11 538 23 ("get-selection" "set-text-font" "close-popups" "initial-font:" "Font-Request" "get-modal" "font" "get-style" "get-font" "essay" "current" "get-col" "get-run" "run" "get-row" "get-paragraph" "par" "get-caret" "caret" "let*" "evt")}
        {Lisp-Entry "on-text-color" #f 548 11 548 24 ("get-selection" "set-text-color" "Black" "name:" "Color" "either" "get-body" "set-color" "when" "close-popups" "get-sender" "popup-initiator" "combo" "color:" "get-property" "color" "let" "evt")}
        {Lisp-Entry "on-pick-text-color" #f 557 11 557 29 ("get-sender" "pick-text-color" "evt")}
        {Lisp-Entry "on-highlight-color" #f 561 11 561 29 ("get-selection" "set-highlight-color" "White" "name:" "Color" "either" "get-body" "set-color" "when" "close-popups" "get-sender" "popup-initiator" "combo" "color:" "get-property" "color" "let" "evt")}
        {Lisp-Entry "on-pick-highlight-color" #f 570 11 570 34 ("get-sender" "pick-highlight-color" "evt")}
        {Lisp-Entry "add-text-listener" #f 579 18 579 35 ("add-listener" "text-listeners" "set!" "listener")}
        {Lisp-Entry "remove-text-listener" #f 583 18 583 38 ("remove-listener" "text-listeners" "set!" "listener")}
        {Lisp-Entry "text-listener?" #f 587 18 587 32 ("text-listeners" "listener?" "object")}
        {Lisp-Entry "process-selection-change" #f 591 18 591 42 ("invoke" "listener" "function" "for-each" "self" ":selection-change" "Text-Event" "new" "evt" "let" "text-listeners" "when")}
        {Lisp-Entry "key-press" #f 604 11 604 20 ("syntax" "translate-key" "char-press" "hide-text-cursor" "key")}
        {Lisp-Entry "backspace-press" #f 609 11 609 26 ("backspace" "word?" "word?:" "key")}
        {Lisp-Entry "delete-press" #f 613 11 613 23 ("delete-action" "word?" "word?:" "key")}
        {Lisp-Entry "on-delete-char" #f 617 11 617 25 ("delete-char" "evt")}
        {Lisp-Entry "on-delete-word" #f 621 11 621 25 ("delete-word" "evt")}
        {Lisp-Entry "on-kill-line" #f 625 11 625 23 ("list" "replace" "not" "get-clipboard-text" "neq?" "string-append" "actual" "append-clipboard" "kill-line" "'kill-line" "special-mode" "set!" "set-clipboard-text" "get-application" "add-clipboard" "replace-clipboard" "get-string" "string" "when" "range" "let" "0" "1" "+" "Cell" "Range" "new" "get-limit" "=" "if" "paragraph-length" "len" "get-col" "col" "get-row" "row" "forward" "'forward" "selection-tail" "pos" "let*" "kill-range" "define" "evt")}
        {Lisp-Entry "return-press" #f 657 11 657 23 ("insert-newline" "accepts-returns?" "when" "key")}
        {Lisp-Entry "escape-press" #f 662 11 662 23 ("remove-completion" "key")}
        {Lisp-Entry "tab-press" #f 666 11 666 20 ("insert-char" "else" "shift-key?" "navigate-view" "accepts-returns?" "not" "end-completion" "has-completion?" "cond" "modifiers" "key")}
        {Lisp-Entry "char-press" #f 675 26 675 36 ("insert-char" "auto-complete" "auto-complete?" "if" "translated" "key")}
        {Lisp-Entry "reset-mode" #f 681 11 681 21 ("virtual-h" "virtual" "'virtual" "eq?" "unless" "special-mode" "set!" "keep" "keep:")}
        {Lisp-Entry "on-insert" #f 687 11 687 20 ("insert-string" ":string" "call-key-press" ":char" ":key" "case" "content:" "get-property" "content" "get-kind" "kind" "let" "evt")}
        {Lisp-Entry "install-scroller?" #f 700 11 700 28 ()}
        {Lisp-Entry "default-extension" #f 704 11 704 28 ()}
        {Lisp-Entry "extensions" #f 708 11 708 21 ()}
        {Lisp-Entry "load-content" #f 712 11 712 23 ("update-status" "read-content" "set-content" "not" "if" "moniker")}
        {Lisp-Entry "empty-content" #f 719 29 719 42 ("list" "paragraphs:" "Text" "new")}
        {Lisp-Entry "get-content" #f 723 11 723 22 ("List" "paragraph->string" "get-paragraphs" "accumulate")}
        {Lisp-Entry "set-content" #f 727 11 727 22 ("set-unformatted-content" "lst")}
        {Lisp-Entry "set-unformatted-content" #f 731 11 731 34 ("complete-setup" "get-row-height" "increase!" "wrap-paragraph" "set!" "set-next" "set-previous" "make-string-paragraph" "paragraph" "let" "string" "function" "map" "rows" "root-row" "previous" "height" "0" "count" "get-paragraphs" "null/pair?" "if" "empty-content" "either" "let*" "lst")}
        {Lisp-Entry "get-string-content" #f 750 18 750 36 ("get-content" "join-lines")}
        {Lisp-Entry "set-string-content" #f 754 18 754 36 ("call-content-change" "colorize-syntax" "parse-string-content" "set-content" "content")}
        {Lisp-Entry "make-string-paragraph" #f 760 11 760 32 ("get-default-style" "cardinality" "cast" "0" "subseq!" "Run" "new" "list" "empty-string?" "if" "make-paragraph" "string" "format")}
        {Lisp-Entry "make-paragraph" #f 769 11 769 25 ("fix-view-style-parent" "get-default-style" "get-font" "get-metrics" "get-height" "set-row-height" "0" "set-level" "root-row" "set-father" "set-runs" "set-string" "get-default-format" "either" "set-format" "self" "set-parent" "Paragraph" "new" "paragraph" "let" "runs" "string" "format")}
        {Lisp-Entry "read-content" #f 782 26 782 38 ("colorize-syntax" "colorize?" "when" "update-moniker-time" "read-moniker" "set-content" "moniker")}
        {Lisp-Entry "read-moniker" #f 789 29 789 41 ("if" "char-encoding-errors:" "char-encoding" "char-encoding:" "load-lines" "moniker")}
        {Lisp-Entry "save-content" #f 793 11 793 23 ("undoer" "reset-save-depth" "set-modified?" "update-status" "get-modified?" "not" "if" "update-moniker-time" "save-to" "moniker")}
        {Lisp-Entry "save-to" #f 802 11 802 18 ("char-encoding" "char-encoding:" "save-lines" "get-content" "content" "let" "moniker")}
        {Lisp-Entry "reload-moniker" #f 807 11 807 25 ("update-moniker-time" "read-moniker" "reload-content" "when" "moniker")}
        {Lisp-Entry "reload-content" #f 813 18 813 32 ("update-status" "set-modified?" "0" "get-paragraphs" "cardinality" "min" "Cell" "new" "set-caret" "colorize-syntax" "set-content" "remove-every-row" "get-start" "get-row" "row" "let" "lst")}
        {Lisp-Entry "compare-moniker" #f 823 11 823 26 ("set-visible?" "Document-Moniker" "new" "get-guest" "compare-monikers" "host-visible?:" "Compare-Files" "'Compare-Files" "require-service" "new-frame" "frame" "let" "when" "moniker")}
        {Lisp-Entry "content-size-change" #f 835 11 835 30 ("wrap-content" "wrap?" "when" "get-width" "visible-width" "set!" "size")}
        {Lisp-Entry "hide-text-cursor" #f 846 18 846 34 ("hide-cursor" "mouse-over?" "selectable?" "editable?" "enabled?" "and" "when")}
        {Lisp-Entry "show-text-cursor" #f 851 18 851 34 ("show-cursor" "selectable?" "editable?" "enabled?" "and" "when")}
        {Lisp-Entry "cursor-update" #f 856 11 856 24 (":ibeam" ":left-arrow" "set-cursor" "paragraph-left" "get-h" "<" "if" "get-row" "get-paragraph" "par" "view->text" "pos" "let*" "selectable?" "enabled?" "and" "when" "show-text-cursor" "view")}
        {Lisp-Entry "get-caret-pen" #f 871 18 871 31 ("caret-color")}
        {Lisp-Entry "set-caret-pen" #f 875 18 875 31 ("caret-color" "set!" "value")}
        {Lisp-Entry "pulse-caret" #f 879 11 879 22 ("invalidate-caret" "not" "caret-visible?" "set!" "editable?" "when")}
        {Lisp-Entry "show-caret" #f 885 11 885 21 ("invalidate-caret" "pulse-caret" "0.5" "Pulse" "new" "caret-visible?" "set!" "caret-pulse" "not" "has-focus?" "editable?" "and" "when")}
        {Lisp-Entry "hide-caret" #f 892 11 892 21 ("invalidate-caret" "caret-visible?" "set!" "close" "caret-pulse" "editable?" "and" "when")}
        {Lisp-Entry "without-caret" #f 900 11 900 24 ("update-caret" "when" "hide-caret" "begin" "unwind-protect" "shown?" "let" "caret-pulse" "editable?" "not" "or" "if" "proc")}
        {Lisp-Entry "update-caret" #f 912 11 912 23 ("show-caret" "get-start" "set-caret-position" "hide-caret" "has-selection?" "if" "get-surrogate" "not" "has-focus?" "editable?" "player" "and" "when")}
        {Lisp-Entry "set-caret-position" #f 920 11 920 29 ("set!" "function" "without-caret" "caret-position" "nu/=?" "when" "pos")}
        {Lisp-Entry "invalidate-caret" #f 927 11 927 27 ("invalidate-rect" "1" "caret-position" "caret-rect" "rect" "let" "fit-caret" "editable?" "when")}
        {Lisp-Entry "caret-rect" #f 935 11 935 21 ("get-h" "Rect" "new" "-" "get-v" "+" "top" "get-height" "if" "height" "get-run" "run" "get-col" "get-line-at" "lne" "get-row" "get-paragraph" "par" "text->view" "pos" "let*" "when" "width" "caret-pos")}
        {Lisp-Entry "get-char-encoding" #f 951 18 951 35 ("char-encoding")}
        {Lisp-Entry "set-char-encoding" #f 955 18 955 35 ("char-encoding" "set!" "value")}
        {Lisp-Entry "mouse-down" #f 964 11 964 21 ("previous-position" "reset-mode" "update-caret" "set-caret" "change-selection" "focus-selects-all?" "set-anchor?:" "selection-line" "set-selection" "paragraph-left" "get-h" "<" "if" "get-row" "get-paragraph" "par" "reset-selection" "not" "shift-down?" "or" "unless" "char" "'char" "selection-mode" "mouse-selecting?" "set!" "unlock-anchor" "acquire-capture" "acquire-focus" "view->text" "pos" "has-focus?" "focus?" "let" "selectable?" "enabled?" "and" "when" "view")}
        {Lisp-Entry "mouse-up" #f 988 11 988 19 ("ensure-displayed" "pos")}
        {Lisp-Entry "drag-move" #f 992 11 992 20 ("drag-move-action" "mouse-selecting?" "when" "view")}
        {Lisp-Entry "drag-move-action" #f 997 11 997 27 ("calculate-autoscroll-amount" "setup-autoscroll" "get-scroller" "when" "drag-select" "view")}
        {Lisp-Entry "drag-up" #f 1003 11 1003 18 ("update-focus-actions" "play-current-recording" "get-recorder" "recorder" "not" "and" "get-selected-string" "function" "mouse-select-copy" "process-selection-change" "char" "'char" "selection-mode" "ensure-displayed" "empty-selection?" "update-caret" "previous-position" "set!" "drag-select" "kill-autoscroll" "release-capture" "get-application" "appl" "shift-down?" "shift?" "control-down?" "control?" "alt-down?" "alt?" "let" "mouse-selecting?" "when" "rest" "view")}
        {Lisp-Entry "drag-select" #f 1028 11 1028 22 ("region:" "redraw-window" "invalidate-region" "if" "multi-part-region" "region" "with-closed" "change-selection" "self" "get-delta" "sc" "dv" "dh" "receive" "get-root" "root" "get-player" "player" "selection" "range-difference" "parts" "selection-range" "range" "let*" "previous-position" "/=" "selection-line" "set!" "selection-anchor" "get-end" "cell>=" "get-row" "get-paragraph" "paragraph-left" "get-h" "<" "and" "when" "view->text" "pos" "let" "final?" "view")}
        {Lisp-Entry "double-click" #f 1050 11 1050 23 ("call-mouse-down" "previous-position" "reset-mode" "word" "'word" "selection-mode" "mouse-selecting?" "set!" "ensure-displayed?:" "set-anchor?:" "get-range" "set-selection" "outer-expr" "when" "function" "with-safe-explore" "end:" "start:" "self" "explorer-class" "new" "expl" "let" "select-paragraph" "paragraph-left" "get-h" "<" "get-row" "get-paragraph" "par" "view->text" "pos" "let*" "selectable?" "enabled?" "and" "if" "view")}
        {Lisp-Entry "middle-mouse-down" #f 1068 11 1068 28 ("mouse-down" "paste-clipboard-string" "text" "function" "middle-mouse-paste" "unless" "pos")}
        {Lisp-Entry "context-menu-click" #f 1075 21 1075 39 ("update-caret" "set-caret" "get-end" ">=" "get-start" "<" "always" "'always" "eq?" "or" "never" "'never" "neq?" "view->text" "text" "let" "acquire-focus" "selectable?" "enabled?" "and" "when" "move-caret" "move-caret:" "pos")}
        {Lisp-Entry "right-mouse-down" #f 1085 11 1085 27 ("context-menu-click" "pos")}
        {Lisp-Entry "context-menu" #f 1089 11 1089 23 ("track-popup-menu" "get-context-menu" "menu" "let" "selectable?" "enabled?" "and" "when" "pos")}
        {Lisp-Entry "get-context-menu" #f 1096 11 1096 27 ("self" "get-application" "text-menu")}
        {Lisp-Entry "new-text-context-menu" #f 1100 18 1100 39 ("layout-menu" "paste" "'paste" "cut" "'cut" "locate" "set-visible?" "editable?" "not" "when" "Text-Context-Menu" "new" "menu" "let")}
        {Lisp-Entry "new-range" #f 1109 25 1109 34 ("Range$Cell$" "new" "end" "start")}
        {Lisp-Entry "select-paragraph" #f 1113 11 1113 27 ("0" "Cell" "Range$Cell$" "new" "set-selection" "get-length" "len" "get-paragraph" "par" "let*" "<=" "when" "get-limit" "limit" "let" "row")}
        {Lisp-Entry "selection-line" #f 1121 11 1121 25 ("1" "+" "paragraph-length" "0" "Cell" "Range$Cell$" "new" "=" "if" "<=" "when" "get-limit" "limit" "let" "row")}
        {Lisp-Entry "selection-range" #f 1129 11 1129 26 ("minimum" "else" "get-end" "list" "maximum" "get-start" "Range$Cell$" "before?" "not" "cond" "get-range" "essay" "range" "outer-composite?:" "outer-expr" "kind" "end:" "start:" "self" "explorer-class" "new" "expl" "let*" "selection-anchor" "inside?" "if" "word" "selection-range-from-anchor" "char" "selection-mode" "case" "pos")}
        {Lisp-Entry "selection-range-from-anchor" #f 1149 11 1149 38 ("else" "get-start" "after?" "get-end" "Range$Cell$" "new" "selection-anchor" "before?" "cond" "pos")}
        {Lisp-Entry "range-difference" #f 1159 11 1159 27 ("get-output" "Range$Cell$" "put" "List-Factory" "new" "parts" "else" ">" "<" "or" "list" "cond" "=" "and" "if" "ey" "sy" "get-end" "ex" "get-start" "sx" "let" "y" "x")}
        {Lisp-Entry "multi-part-region" #f 1179 11 1179 28 ("or" "'or" "combine!" "and" "when" "second" "union" "let" "first" "region" "with-closed" "2" "car" "range-region" "1" "0" "length" "case" "sc" "dv" "dh" "parts")}
        {Lisp-Entry "calculate-autoscroll-amount" #f 1190 11 1190 38 ("Point" "new" "-" "get-height" "av" "else" "-8" "get-width" ">" "8" "0" "<" "cond" "ah" "get-default-height" "height" "get-v" "v" "get-h" "h" "get-display-size" "size" "view->display" "display" "let*" "view")}
        {Lisp-Entry "setup-autoscroll" #f 1201 11 1201 27 ("delay:" "autoscroll-action" "function" "0.01" "Pulse" "new" "set!" "autoscroll-pulse" "not" "when" "kill-autoscroll" "0" "Point" "nu=?" "if" "amount")}
        {Lisp-Entry "kill-autoscroll" #f 1208 11 1208 26 ("set!" "autoscroll-pulse" "close")}
        {Lisp-Entry "autoscroll-action" #f 1213 11 1213 28 ("update-view" "scroll" "mouse-position" "drag-move-action" "amount")}
        {Lisp-Entry "home-column" #f 1224 29 1224 40 ("get-column" "row")}
        {Lisp-Entry "on-home" #f 1228 18 1228 25 ("extend?:" "locked-anchor?" "or" "document?:" "get-property" "goto-home" "evt")}
        {Lisp-Entry "goto-home" #f 1233 18 1233 27 ("process-selection-change" "ensure-scrolled-left" "0" "get-col" "=" "Cell" "new" "start" "home-column" "col" "get-row" "row" "backward" "'backward" "selection-tail" "pos" "let*" "set-caret" "text-beginning" "change-selection" "if" "reset-mode" "extend?" "document?")}
        {Lisp-Entry "on-end" #f 1250 18 1250 24 ("extend?:" "locked-anchor?" "or" "document?:" "get-property" "goto-end" "evt")}
        {Lisp-Entry "goto-end" #f 1255 18 1255 26 ("process-selection-change" "extend-selection?:" "goto-paragraph-end" "set-caret" "text-ending" "change-selection" "if" "reset-mode" "extend?" "document?")}
        {Lisp-Entry "goto-paragraph-end" #f 1265 18 1265 36 ("set-caret" "change-selection" "if" "paragraph-length" "get-row" "Cell" "new" "end" "forward" "'forward" "selection-tail" "pos" "let*" "extend-selection?" "extend-selection?:")}
        {Lisp-Entry "on-move" #f 1273 11 1273 18 ("down-arrow-move" "down" "up-arrow-move" "up" "right-arrow-move" "right" "left-arrow-move" "left" "case" "scroll?:" "scroll?" "word?:" "word?" "extend?:" "locked-anchor?" "or" "extend?" "direction:" "get-property" "direction" "let" "self" "invoke" "arrow-press-handler" "if" "evt")}
        {Lisp-Entry "left-arrow-move" #f 1287 29 1287 44 ("process-selection-change" "get-start" "set-caret" "empty-selection?" "backward" "'backward" "selection-tail" "move-backward" "change-selection" "if" "reset-mode" "word?" "extend?")}
        {Lisp-Entry "right-arrow-move" #f 1297 29 1297 45 ("process-selection-change" "get-end" "set-caret" "empty-selection?" "forward" "'forward" "selection-tail" "move-forward" "change-selection" "if" "reset-mode" "word?" "extend?")}
        {Lisp-Entry "up-arrow-move" #f 1307 29 1307 42 ("process-selection-change" "reset-selection" "unless" "-1" "move-verticaly" ">" "else" "0" "Point" "new" "scroll" "get-default-height" "height" "let" "cond" "get-col" "col" "get-row" "row" "get-start" "backward" "'backward" "selection-tail" "if" "pos" "let*" "reset-mode-on-anchor" "scroll?" "extend?")}
        {Lisp-Entry "down-arrow-move" #f 1322 29 1322 44 ("process-selection-change" "reset-selection" "unless" "1" "move-verticaly" "get-limit" "<" "else" "-" "0" "Point" "new" "scroll" "get-default-height" "height" "let" "cond" "get-col" "col" "get-row" "row" "get-end" "forward" "'forward" "selection-tail" "if" "pos" "let*" "reset-mode-on-anchor" "scroll?" "extend?")}
        {Lisp-Entry "reset-mode-on-anchor" #f 1337 11 1337 31 ("virtual" "'virtual" "keep:" "reset-mode" "get-end" "selection-anchor" "get-start" "nu=?" "has-selection?" "and" "if")}
        {Lisp-Entry "move-verticaly" #f 1343 11 1343 25 ("else" "set!" ">" "get-top" "Point" "view->text" "get-col" "min" "move-caret" "virtual-h" "get-end" "get-start" "backward" "'backward" "eq?" "if" "set-caret" "not" "has-selection?" "and" "cond" "new-end" "paragraph-length" "new-len" "new-par" "+" "new-row" "Cell" "new" "text->view" "get-h" "h" "get-paragraph" "par" "let*" "shift?" "direction" "inc" "col" "row")}
        {Lisp-Entry "move-caret" #f 1361 29 1361 39 ("set-caret" "change-selection" "if" "backward" "-" "forward" "case" "0" "Point" "new" "scroll" "get-default-height" "height" "let" "cell-displayed?" "unless" "shift?" "direction" "pos")}
        {Lisp-Entry "on-backward-compound" #f 1370 11 1370 31 ("backward-compound" "evt")}
        {Lisp-Entry "on-forward-compound" #f 1374 11 1374 30 ("forward-compound" "evt")}
        {Lisp-Entry "on-upward-compound" #f 1378 11 1378 29 ("upward-compound" "evt")}
        {Lisp-Entry "on-downward-compound" #f 1382 11 1382 31 ("downward-compound" "evt")}
        {Lisp-Entry "backward-compound" #f 1386 29 1386 46 ("left-arrow-move")}
        {Lisp-Entry "forward-compound" #f 1390 29 1390 45 ("right-arrow-move")}
        {Lisp-Entry "upward-compound" #f 1394 29 1394 44 ("up-arrow-move")}
        {Lisp-Entry "downward-compound" #f 1398 29 1398 46 ("down-arrow-move")}
        {Lisp-Entry "prior-page" #f 1402 11 1402 21 ("set-caret" "change-selection" "if" "Cell" "dest" "display-v->row" "row" "vert" "'vert" "get-page-size" "0" "Point" "new" "scroll" "get-row" "row->display-v" "v" "get-start" "start" "let*" "shift?")}
        {Lisp-Entry "next-page" #f 1413 11 1413 20 ("set-caret" "change-selection" "if" "Cell" "dest" "display-v->row" "row" "vert" "'vert" "get-page-size" "-" "0" "Point" "new" "scroll" "get-row" "row->display-v" "v" "get-start" "start" "let*" "shift?")}
        {Lisp-Entry "row->display-v" #f 1424 11 1424 25 ("row->view" "v" "position" "get-v" "-" "top" "let" "row")}
        {Lisp-Entry "display-v->row" #f 1430 11 1430 25 ("get-row" "view->text" "text" "+" "left-padding" "Point" "new" "pos" "position" "get-v" "-" "top" "let*" "v")}
        {Lisp-Entry "selection-tail" #f 1437 11 1437 25 ("forward" "backward" "case" "else" "get-start" "before?" "get-end" "selection-anchor" "after?" "cond" "direction")}
        {Lisp-Entry "on-remove-spaces" #f 1450 18 1450 34 ("get-property" "keep:" "selection" "remove-spaces" "bell" "empty-selection?" "not" "if" "evt")}
        {Lisp-Entry "remove-spaces" #f 1456 18 1456 31 ("if" "one" "list" "none" "case" "replace" "1" "get-col" "+" "get-row" "=" "and" "one-left?" "get-range" "range" "let*" "forward-whitespaces" "backward-whitespaces" "get-end" "end:" "get-start" "start:" "self" "explorer-class" "new" "expl" "let" "one/none" "'one/none" "keep" "keep:" "pos")}
        {Lisp-Entry "on-display-info" #f 1469 18 1469 33 ("get-col" "1" "get-row" "+" "user-message" "get-end" "end" "get-start" "start" "let" "evt")}
        {Lisp-Entry "on-user-code" #f 1477 18 1477 30 ("self" "text-macro" "get-profile" "profile" "get-application" "appl" "let*" "evt")}
        {Lisp-Entry "range-region" #f 1488 11 1488 23 ("or" "'or" "combine!" "left-padding" "range-region" "sub" "with-closed" "end" "start" "paragraph" "function" "for-each-range" "Region" "new" "region" "let" "bottom" "bottom:" "top" "top:" "sc" "dv" "dh" "range")}
        {Lisp-Entry "row-range-rect" #f 1497 11 1497 25 ("get-default-height" "get-line-at" "get-height" "+" "get-width" "1" "max" "if" "row->view" "col->view" "get-h" "Rect" "new" "get-paragraph" "paragraph" "let" "end" "start" "row")}
        {Lisp-Entry "block-rect" #f 1506 11 1506 21 ("get-width" "row->view" "left-padding" "Rect" "new" "end" "start")}
        {Lisp-Entry "invalidate-row" #f 1514 18 1514 32 ("0" "row-range-rect" "invalidate-rect" "row")}
        {Lisp-Entry "invalidate-range" #f 1518 11 1518 27 ("invalidate-region" "range-region" "region" "with-closed" "self" "get-delta" "sc" "dv" "dh" "receive" "get-root" "root" "when" "get-player" "player" "let" "range")}
        {Lisp-Entry "text-selection-region" #f 1528 11 1528 32 ("bottom:" "top:" "selection" "range-region" "bottom" "top" "sc" "dv" "dh")}
        {Lisp-Entry "selection-region-all" #f 1532 11 1532 31 ("get-display-height" "0" "text-selection-region" "sc" "dv" "dh")}
        {Lisp-Entry "get-selection-color" #f 1536 29 1536 48 ("active-selection-color" "completion-color" "completion-active?" "if")}
        {Lisp-Entry "get-inactive-selection-color" #f 1542 29 1542 57 ("inactive-selection-color")}
        {Lisp-Entry "for-each-range" #f 1546 11 1546 25 ("else" "cond" "paragraph" "to" "from" "n" "for" "loop" "limit" "beginning" "get-col" "get-paragraph" "get-row" "=" "if" "/=" "when" "get-end" "end" "get-start" "start" "let" "proc" "range")}
        {Lisp-Entry "for-each-range-exact" #f 1561 11 1561 31 ("get-length" "0" "either" "end" "start" "paragraph" "function" "for-each-range" "proc" "range")}
        {Lisp-Entry "make-tabs" #f 1576 11 1576 20 ("512" "32" "0" "make-tabs-from")}
        {Lisp-Entry "make-tabs-from" #f 1580 18 1580 32 ("0" "naturals" "increase!" "prog1" "n" "function" "map" "stop" "let" "number" "tab-size" "from")}
        {Lisp-Entry "get-tabs" #f 1588 18 1588 26 ("tabs")}
        {Lisp-Entry "set-tabs" #f 1592 18 1592 26 ("tabs" "set!" "lst")}
        {Lisp-Entry "can-undo?" #f 1601 11 1601 20 ("undoer" "can-undo?")}
        {Lisp-Entry "can-redo?" #f 1605 11 1605 20 ("undoer" "can-redo?")}
        {Lisp-Entry "can-cut?" #f 1609 11 1609 19 ("has-selection?")}
        {Lisp-Entry "can-copy?" #f 1613 11 1613 20 ("has-selection?")}
        {Lisp-Entry "can-paste?" #f 1617 11 1617 21 ()}
        {Lisp-Entry "can-delete?" #f 1621 11 1621 22 ("has-selection?")}
        {Lisp-Entry "can-select-all?" #f 1625 11 1625 26 ()}
        {Lisp-Entry "undo" #f 1629 11 1629 15 ("get-application" "update-focus-actions" "undoer" "undo")}
        {Lisp-Entry "redo" #f 1634 11 1634 15 ("get-application" "update-focus-actions" "undoer" "redo")}
        {Lisp-Entry "cut-selection" #f 1639 11 1639 24 ("delete-selection" "copy-selection")}
        {Lisp-Entry "copy-selection" #f 1644 11 1644 25 ("selection-lines" "join-lines" "set-clipboard-text" "get-application" "add-clipboard" "bell" "empty-selection?" "if")}
        {Lisp-Entry "paste-clipboard" #f 1651 11 1651 26 ("paste-clipboard-string" "when" "get-clipboard-text" "text" "let")}
        {Lisp-Entry "paste-clipboard-string" #f 1657 18 1657 40 ("split-lines" "replace-selection" "string")}
        {Lisp-Entry "delete-selection" #f 1661 11 1661 27 ("list" "replace-selection")}
        {Lisp-Entry "select-all" #f 1665 11 1665 21 ("buffer-selection" "set-selection" "rest")}
        {Lisp-Entry "clear-all" #f 1669 18 1669 27 ("delete-selection" "select-all")}
        {Lisp-Entry "get-mark" #f 1679 18 1679 26 ("mark")}
        {Lisp-Entry "set-mark" #f 1683 18 1683 26 ("mark" "set!" "mrk")}
        {Lisp-Entry "on-set-mark" #f 1687 18 1687 29 ("user-message" "selection" "set-mark" "evt")}
        {Lisp-Entry "on-jump-mark" #f 1692 18 1692 30 ("get-selection" "set-mark" "new-mark" "let" "get-end" "maximum" "selection-anchor" "get-start" "list" "minimum" "Range$Cell$" "new" "set-selection" "extend?:" "get-property" "locked-anchor?" "or" "if" "mark" "when" "evt")}
        {Lisp-Entry "empty-selection" #f 1711 11 1711 26 ("text-beginning" "Range$Cell$" "new")}
        {Lisp-Entry "buffer-selection" #f 1715 11 1715 27 ("text-ending" "text-beginning" "Range$Cell$" "new")}
        {Lisp-Entry "row-selected?" #f 1719 11 1719 24 ("row")}
        {Lisp-Entry "text-beginning" #f 1723 18 1723 32 ("0" "Cell" "new")}
        {Lisp-Entry "text-ending" #f 1727 18 1727 29 ("paragraph-length" "Cell" "new" "get-limit" "limit" "let")}
        {Lisp-Entry "text-empty?" #f 1732 18 1732 29 ("text-ending" "text-beginning" "=")}
        {Lisp-Entry "get-start" #f 1736 25 1736 34 ("selection" "cast" "get-start")}
        {Lisp-Entry "get-end" #f 1740 25 1740 32 ("selection" "cast" "get-end")}
        {Lisp-Entry "get-selection" #f 1744 25 1744 38 ("selection")}
        {Lisp-Entry "set-selection" #f 1748 18 1748 31 ("get-application" "update-focus-actions" "self" "get-mouse-in" "mouse-down?" "ensure-displayed" "center-undisplayed-caret" "center-caret" "'center-caret" "eq?" "if" "mouse-selecting?" "unless" "update-caret" "update-selection" "set-selection-anchor" "selection-anchor" "not" "or" "selection" "cast" "/=" "and" "when" "validate-range" "set-anchor?" "set-anchor?:" "ensure-displayed?" "ensure-displayed?:" "range")}
        {Lisp-Entry "update-selection" #f 1765 18 1765 34 ("when" "invalidate-region" "xor" "'xor" "combine!" "begin" "and" "new" "selection-region-all" "old" "with-closed" "self" "get-delta" "sc" "dv" "dh" "receive" "get-root" "root" "selection" "set!" "not" "if" "get-player" "player" "let" "range")}
        {Lisp-Entry "reset-selection" #f 1784 18 1784 33 ("set-anchor?:" "set-selection" "Range$Cell$" "new" "range" "let" "pos")}
        {Lisp-Entry "fit-range" #f 1789 11 1789 20 ("either" "Range$Cell$" "new" "or" "e" ">" "when" "s" "get-end" "end" "get-start" "start" "text-ending" "ending" "let*" "range")}
        {Lisp-Entry "fit-selection" #f 1799 11 1799 24 ("selection" "set!" "when" "get-selection" "fit-range" "range" "let")}
        {Lisp-Entry "fit-anchor" #f 1805 11 1805 21 ("set!" "when" "selection-anchor" "fit-range" "range" "let")}
        {Lisp-Entry "get-selection-anchor" #f 1811 18 1811 38 ("selection-anchor")}
        {Lisp-Entry "set-selection-anchor" #f 1815 18 1815 38 ("copy" "selection-anchor" "set!" "range")}
        {Lisp-Entry "lock-anchor" #f 1819 18 1819 29 ("locked-anchor?" "set!")}
        {Lisp-Entry "unlock-anchor" #f 1823 18 1823 31 ("locked-anchor?" "set!")}
        {Lisp-Entry "change-selection" #f 1828 18 1828 34 ("set-anchor?:" "selection-range" "set-selection" "apply" "when" "others" "set-anchor?" "bind-keywords" "rest" "pos")}
        {Lisp-Entry "fit-caret" #f 1833 11 1833 20 (">" "paragraph-length" "len" "0" "1" "-" "Cell" "new" "set!" ">=" "if" "get-paragraphs" "cardinality" "count" "get-col" "col" "get-row" "row" "let" "caret-position" "when")}
        {Lisp-Entry "get-caret" #f 1845 18 1845 27 ("get-start")}
        {Lisp-Entry "set-caret" #f 1849 18 1849 27 ("Cell" "new" "reset-selection" "=" "and" "if" "get-length" "get-col" "col" "get-paragraph" "par" "get-limit" "get-row" "0" "max" "min" "row" "let*" "when" "pos")}
        {Lisp-Entry "has-selection?" #f 1861 18 1861 32 ("get-end" "get-start" "/=")}
        {Lisp-Entry "empty-selection?" #f 1865 18 1865 34 ("get-end" "get-start" "=")}
        {Lisp-Entry "at-beginning?" #f 1869 18 1869 31 ("text-beginning" "get-end" "get-start" "=" "and")}
        {Lisp-Entry "at-end?" #f 1874 18 1874 25 ("text-ending" "get-end" "get-start" "=" "and")}
        {Lisp-Entry "at-line-start?" #f 1879 18 1879 32 ("0" "get-start" "get-col" "=")}
        {Lisp-Entry "selected-lines" #f 1883 18 1883 32 ("+" "naturals" "1" "get-row" "-" "0" "get-col" "=" "if" "end-row" "get-end" "end" "get-start" "start" "let*")}
        {Lisp-Entry "invalidate-selection" #f 1890 11 1890 31 ("invalidate-range" "sel")}
        {Lisp-Entry "selection-region" #f 1894 11 1894 27 ("self" "range-region" "sc" "dv" "dh" "sel")}
        {Lisp-Entry "get-char" #f 1898 18 1898 26 ("element" "cardinality" "<" "if" "get-paragraph" "get-string" "string" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "get-string" #f 1907 18 1907 28 ("range-strings" "join-lines" "range")}
        {Lisp-Entry "next!" #f 1911 18 1911 23 ("else" "0" "set-col" "increase-row" "get-limit" "<" "increase-col" "get-row" "paragraph-length" "get-col" "/=" "cond" "pos")}
        {Lisp-Entry "previous!" #f 1923 18 1923 27 ("else" "paragraph-length" "set-col" "increase-row" "get-row" ">" "-1" "increase-col" "0" "get-col" "/=" "cond" "pos")}
        {Lisp-Entry "next-cell" #f 1935 18 1935 27 ("next!" "when" "copy" "cell" "let" "pos")}
        {Lisp-Entry "previous-cell" #f 1941 18 1941 31 ("previous!" "when" "copy" "cell" "let" "pos")}
        {Lisp-Entry "selection-lines" #f 1947 11 1947 26 ("selection" "range-strings")}
        {Lisp-Entry "get-selected-string" #f 1951 18 1951 37 ("get-selection" "get-string" "has-selection?" "when")}
        {Lisp-Entry "next-pos" #f 1956 18 1956 26 ("else" "1" "-" "next!" "0" "<=" "cond" "iterate" "copy" "let" "offset" "pos")}
        {Lisp-Entry "previous-pos" #f 1967 18 1967 30 ("else" "1" "-" "previous!" "0" "<=" "cond" "iterate" "copy" "let" "offset" "pos")}
        {Lisp-Entry "get-column" #f 1978 18 1978 28 ("get-col" "increase!" "get-char" "memq?" "while" "0" "Cell" "new" "pos" "let" "row")}
        {Lisp-Entry "current-name" #f 1985 26 1985 38 ("get-marked" "outer-expr" "when" "get-selection" "range:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "on-goto-line" #f 1991 11 1991 23 ("parse-integer" "-" "goto-line" "->string" "initial-value:" "prefix:" "title:" "request-string" "string" "1" "get-row" "+" "line" "get-start" "start" "let*" "evt")}
        {Lisp-Entry "goto-line" #f 1998 18 1998 27 ("+" "else" "paragraph-length" "let" "get-limit" ">=" "1" "Cell" "Range$Cell$" "new" "set-selection" "0" "<" "cond" "line")}
        {Lisp-Entry "added-update-selection" #f 2008 11 2008 33 ("count" "rank")}
        {Lisp-Entry "removed-update-selection" #f 2012 11 2012 35 ("count" "rank")}
        {Lisp-Entry "on-lock-anchor" #f 2019 18 2019 32 ("user-message" "lock-anchor" "evt")}
        {Lisp-Entry "on-unlock-anchor" #f 2024 18 2024 34 ("user-message" "unlock-anchor" "evt")}
        {Lisp-Entry "on-toggle-lock-anchor" #f 2029 18 2029 39 ("on-lock-anchor" "on-unlock-anchor" "locked-anchor?" "if" "evt")}
        {Lisp-Entry "layout-scrollee-patch" #f 2041 11 2041 32 ("update-displayed")}
        {Lisp-Entry "scrollee-width" #f 2050 11 2050 25 ("4000" "calculate-scrollee-width" "left-padding" "+" "dynamic-scrollee-width?" "width" "let" "visible-width" "get-display-width" "max" "fit-in-scroller?" "wrap-width" "either" "wrap?" "if")}
        {Lisp-Entry "scrollee-content-width" #f 2063 11 2063 33 ("calculate-scrollee-width" "left-padding" "+")}
        {Lisp-Entry "dynamic-scrollee-width?" #f 2068 11 2068 34 ("16" "visible-count" "<=")}
        {Lisp-Entry "calculate-scrollee-width" #f 2072 11 2072 35 ("set!" ">" "when" "compute-width" "paragraph-width" "paragraph" "row" "function" "for-each-paragraph" "0" "width" "let")}
        {Lisp-Entry "invalidate-update" #f 2087 11 2087 28 ("wrap-content" "nextmethod")}
        {Lisp-Entry "get-paragraph-spacing" #f 2097 18 2097 39 ("paragraph-spacing")}
        {Lisp-Entry "set-paragraph-spacing" #f 2101 18 2101 39 ("paragraph-spacing" "set!" "value")}
        {Lisp-Entry "get-length" #f 2105 18 2105 28 ("get-paragraphs" "cardinality")}
        {Lisp-Entry "get-limit" #f 2109 18 2109 27 ("1" "get-length" "-")}
        {Lisp-Entry "get-paragraph" #f 2113 18 2113 31 ("get-paragraphs" "element" "n")}
        {Lisp-Entry "paragraph-string" #f 2117 18 2117 34 ("get-paragraph" "get-string" "n")}
        {Lisp-Entry "paragraph-length" #f 2121 18 2121 34 ("paragraph-string" "cardinality" "n")}
        {Lisp-Entry "paragraph->string" #f 2125 11 2125 28 ("get-string" "paragraph")}
        {Lisp-Entry "get-print-area" #f 2134 11 2134 25 ("scrollee-height" "800" "0" "Rect" "new" "context")}
        {Lisp-Entry "paginate" #f 2138 11 2138 19 ("get-output" "get-keep-with-next?" "empty-string?" "not" "Rect" "put" "either" "effective-bottom" "let" "set!" "<=" "bot" "get-height" "height" "get-format" "format" "get-string" "string" "paragraph-top" "<" ">=" "and" "when" "paragraph" "rank" "function" "for-each-paragraph" "together" "bottom" "top" "page" "List-Factory" "new" "pages" "1" "get-limit" "get-end" "+" "end" "0" "get-start" "get-row" "if" "start" "has-selection?" "selected?" "let*" "page-height" "page-width")}
        {Lisp-Entry "setup-printing" #f 2169 11 2169 25 ("nextmethod" ":wrap-width" "cons" "wrap-content" "layout-scrollee" "50" "wrap-patch" "800" "set!" "wrap-width" "width" "let")}
        {Lisp-Entry "restore-printing" #f 2180 11 2180 27 ("wrap-content" "layout-scrollee" "wrap-patch" ":wrap-width" "getf" "wrap-width" "set!" "nextmethod" "preserved")}
        {Lisp-Entry "draw-enabled?" #f 2193 29 2193 42 ("enabled?")}
        {Lisp-Entry "get-drawing-background" #f 2197 11 2197 33 ("nextmethod" "Medium" "name:" "Color" "draw-enabled?" "not" "if" "context")}
        {Lisp-Entry "draw-outline" #f 2203 11 2203 23 ("draw-caret" "nextmethod" "draw-selection" "unless" "printing?:" "getf" "printing?" "bottom" "top" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "clipper" "context" "surface")}
        {Lisp-Entry "draw-selection" #f 2214 11 2214 25 ("get-inactive-selection-color" "Light-Orange" "name:" "Color" "search-backward" "search-forward" "get-mode" "memq?" "get-client" "self" "get-focus" "eq?" "and" "get-command-text" "command-text" "get-application" "appl" "let" "get-selection-color" "if" "fill-region" "1.0" "0.0" "text-selection-region" "region" "with-closed" "show-unfocused-selection?" "has-focus?" "or" "when" "bottom" "top" "surface")}
        {Lisp-Entry "draw-caret" #f 2233 11 2233 21 ("*" "fxround" "Rect" "new" "scaled" "if" "0" "get-caret" "caret-rect" "get-bottom" "get-right" "get-top" "get-left" "line" "caret-color" "set-color" "rect" "function" "proc" "let" "alt-down?" "mouse-down?" "not" "or" "empty-selection?" "caret-visible?" "and" "when" "sc?" "sc" "surface")}
        {Lisp-Entry "ensure-displayed" #f 2256 11 2256 27 ("ensure-range-displayed" "apply" "selection" "when" "rest")}
        {Lisp-Entry "ensure-cell-displayed" #f 2261 18 2261 39 ("get-scroll-context" "scroll-needed" "scroll" "get-height-at" "0" "Point" "new" "+" "end" "text->view" "start" "let*" "pos")}
        {Lisp-Entry "ensure-range-displayed" #f 2267 18 2267 40 ("get-scroll-context" "0" "Point" "new" "+" "text->view" "scroll-needed" "apply" "scroll" "get-height-at" "end-height" "get-end" "end" "get-start" "start" "let*" "player" "not" "update-locked?" "or" "unless" "rest" "range")}
        {Lisp-Entry "ensure-scrolled-left" #f 2275 18 2275 38 ("Point" "new" "scroll" "-" "<" "get-end" "text->view" "end" "get-display-h" "+" "tail" "*" "fxround" "if" "get-scroll-context" "cdr" "context" "get-display-width" "size" "let*" "get-position" "get-h" "0" "/=" "when" "player" "not" "update-locked?" "or" "unless")}
        {Lisp-Entry "cell-displayed?" #f 2287 18 2287 33 ("scroll-needed" "=" "get-height-at" "0" "Point" "new" "+" "end" "text->view" "start" "let*" "pos")}
        {Lisp-Entry "on-center-caret" #f 2293 11 2293 26 ("center-caret" "evt")}
        {Lisp-Entry "on-top-caret" #f 2297 11 2297 23 ("top-caret" "evt")}
        {Lisp-Entry "center-caret" #f 2301 18 2301 30 ("0" "Point" "new" "scroll-to" "2" "fxround/" "half" "let" ">=" "if" "top" "get-display-height" "height" "-" "size" "get-end" "get-top" "end" "get-start" "get-row" "get-bottom" "start" "let*")}
        {Lisp-Entry "center-undisplayed-caret" #f 2313 18 2313 42 ("center-caret" "get-end" "get-start" "cell-displayed?" "not" "or" "when")}
        {Lisp-Entry "top-caret" #f 2319 18 2319 27 ("-" "0" "Point" "new" "scroll-to" "get-start" "get-row" "get-top" "start" "let")}
        {Lisp-Entry "next-word" #f 2329 18 2329 27 ("get-end" "not" "c" "function" "forward-until" "get-constituent-test" "test" "end:" "start:" "self" "Text-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "previous-word" #f 2337 18 2337 31 ("get-start" "not" "c" "function" "backward-until" "get-constituent-test" "test" "end:" "start:" "self" "Text-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "get-constituent-test" #f 2350 18 2350 38 ("syntax" "get-constituent-test")}
        {Lisp-Entry "text-constituent?" #f 2354 18 2354 35 ("syntax" "text-constituent?" "char")}
        {Lisp-Entry "move-forward" #f 2363 18 2363 30 ("next-cell" "next-word" "if" "when" "word?" "pos")}
        {Lisp-Entry "move-backward" #f 2368 18 2368 31 ("previous-cell" "previous-word" "if" "when" "word?" "pos")}
        {Lisp-Entry "insert-char" #f 2378 18 2378 29 ("string" "insert-string" "c")}
        {Lisp-Entry "insert-string" #f 2382 18 2382 31 ("split-lines" "replace-selection" "str")}
        {Lisp-Entry "insert-styled" #f 2386 18 2386 31 ("Range$Cell$" "new" "set-style" "insert-string" "get-style" "else" "default-style" "not" "Style" "is?" "cond" "get-start" "start" "let" "style" "string")}
        {Lisp-Entry "insert-line" #f 2393 18 2393 29 ("list" "if" "replace-selection" "proper?" "line")}
        {Lisp-Entry "insert-bulleted-line" #f 2397 18 2397 38 ("toggle-bulleted" "insert-line" "get-start" "get-row" "row" "let" "line")}
        {Lisp-Entry "insert-newline" #f 2403 18 2403 32 ("insert-string" "end-completion")}
        {Lisp-Entry "insert-hyperlink" #f 2408 18 2408 34 ("insert-styled" "Color" "color:" "Hyperlink-Style" "new" "style" "Hyperlink" "name:" "Font" "either" "let*" "action" "action:" "anchor" "anchor:" "font" "font:" "string")}
        {Lisp-Entry "insert-image" #f 2414 18 2414 30 ("insert-styled" "moniker:" "Image-Style" "new" "style" "let" "moniker")}
        {Lisp-Entry "insert-view" #f 2419 18 2419 29 ("insert-styled" "view:" "View-Style" "new" "style" "let" "set-parent" "get-row" "get-paragraph" "paragraph" "get-end" "end" "instantiate" "View" "is?" "if" "view" "let*" "view/form")}
        {Lisp-Entry "create-table" #f 2433 18 2433 30 ("setup-rows" "setup-columns" "header" "'header" "set-shown?" "not" "set-size" "when" "'tree" "locate" "tree" "Table-Border" "new" "border" "let*" "row-count" "row-count:" "columns" "columns:" "node-column?" "node-column?:" "header?" "header?:" "size" "size:")}
        {Lisp-Entry "insert-table" #f 2445 18 2445 30 ("insert-view" "create-table" "apply" "table" "let" "rest")}
        {Lisp-Entry "setup-columns" #f 2451 11 2451 24 ("class:" "add-column" "" "apply" "set!" ":display-images?" "list" "others" "width:" "width" "title:" "getf" "title" "Tree-Label-Column" "Tree-Node-Column" "if" "class" "and" "node?" "let*" "column" "function" "for-each" "first?" "let" "columns" "node-column?" "tree")}
        {Lisp-Entry "setup-rows" #f 2464 11 2464 21 ("0" "naturals" "children:" "row-height:" "add-row" "Formatted-Text-View" "new" "column" "map" "children" "n" "function" "for-each" "cast" "quotient" "row-height" "16" "increase!" "not" "get-height" "height" "let" "when" "row-count" "columns" "header?" "tree")}
        {Lisp-Entry "get-table-cell" #f 2479 18 2479 32 ("get-cell-data" "cell" "table")}
        {Lisp-Entry "insert-table-of-content" #f 2488 26 2488 49 ()}
        {Lisp-Entry "backspace" #f 2497 18 2497 27 ("replace" "get-end" "get-start" "move-backward" "Range$Cell$" "new" "range" "let" "list" "replace-selection" "has-selection?" "if" "at-beginning?" "unless" "write-allowed?" "when" "word?")}
        {Lisp-Entry "delete-char" #f 2506 26 2506 37 ("delete-action")}
        {Lisp-Entry "delete-word" #f 2510 26 2510 37 ("delete-action")}
        {Lisp-Entry "delete-action" #f 2514 18 2514 31 ("replace" "get-end" "move-forward" "get-start" "Range$Cell$" "new" "range" "let" "list" "replace-selection" "has-selection?" "if" "at-end?" "unless" "write-allowed?" "when" "word?")}
        {Lisp-Entry "replace-selection" #f 2523 18 2523 35 ("selection" "replace" "strings")}
        {Lisp-Entry "replace" #f 2527 18 2527 25 ("show-caret" "set-caret" "when" "replace-text" "caret" "let" "strings" "range")}
        {Lisp-Entry "replace-text" #f 2534 21 2534 33 ("update-focus-actions" "call-content-change" "set-selection" "set-end" "list" "replace" "undoer" "register-undo" "Range$Cell$" "new" "let" "contiguous-undo-range" "not" "if" "set-modified?" "+" "-" "recolorize-text" "fit-caret" "fit-anchor" "fit-selection" "first-displayed-rank" "get-paragraph" "first-displayed" "set!" "update-displayed" "car" "cast" "cardinality" "1" "=" "and" "inserting-single-char?" "selection" "copy" "old-selection" "get-application" "appl" "replace-range" "caret" "outline" "get-first-displayed-rank" "get-row" "<=" "ufd?" "range-strings" "old" "length" "count" "get-end" "end" "get-start" "start" "let*" "function" "without-caret" "write-allowed?" "when" "strings" "range")}
        {Lisp-Entry "replace-range" #f 2580 11 2580 24 ("replace-paragraphs" "function" "with-update-locked" "-" "<=" "car" "get-col" "replace-paragraph" "1" "get-row" "=" "and" "if" "length" "count" "get-end" "end" "get-start" "start" "let" "strings" "range")}
        {Lisp-Entry "replace-paragraph" #f 2593 11 2593 28 ("+" "Cell" "new" "invalidate-replacement" "replace-range" "get-bottom" "top" "cardinality" "inserted" "get-paragraph" "paragraph" "let*" "string" "end" "start" "row")}
        {Lisp-Entry "invalidate-replacement" #f 2602 11 2602 33 ("invalidate-paragraph" "scroll-view" "get-height" "get-width" "Rect" "new" "rect" "get-size" "size" "0" "/=" "layout-scrollee" "dynamic-scrollee-width?" "wrap?" "or" "when" "wrap-paragraph" "delta" "let" "top" "paragraph")}
        {Lisp-Entry "replace-paragraphs" #f 2616 11 2616 29 ("Cell" "new" "invalidate-replacements" "replace-ending" "replace-beginning" "get-next" "root-row" "replace-sons" "=" "if" "caret-col" "-1" "caret-row" "last" "cast" "cardinality" "last-length" "get-length" "last-runs" "get-col" "0" "range-runs" "first-runs" "strings->paragraphs" "paragraphs" "get-bottom" "bottom" "last-par" "get-paragraph" "first-par" "range-height" "before" "length" "inserted" "1" "-" "+" "replaced" "er" "get-row" "sr" "get-end" "end" "get-start" "start" "let*" "strings" "range")}
        {Lisp-Entry "invalidate-replacements" #f 2640 11 2640 34 ("invalidate-paragraph" "scroll-view" "get-height" "get-width" "Rect" "new" "rect" "get-size" "size" "let" "0" "/=" "when" "layout-scrollee" "visible-height" "visible-count" "increase!" "-" "delta" "paragraphs-height" "after" "let*" "wrap-paragraph-lowlevel" "paragraph" "function" "for-each" "before" "bottom" "inserted" "replaced" "paragraphs")}
        {Lisp-Entry "invalidate-paragraph" #f 2656 11 2656 31 ("invalidate-drawing" "paragraph")}
        {Lisp-Entry "paragraph-height" #f 2660 11 2660 27 ("get-row-height" "paragraph")}
        {Lisp-Entry "range-height" #f 2664 11 2664 23 ("get-next" "set!" "do" "paragraph-height" "sum" "to" "from" "n" "for" "get-row" "row" "with" "loop" "end" "start")}
        {Lisp-Entry "paragraphs-height" #f 2671 11 2671 28 ("car" "paragraph-height" "+" "cdr" "null?" "if" "0" "sum" "iterate" "let" "paragraphs")}
        {Lisp-Entry "strings->paragraphs" #f 2679 11 2679 30 ("make-string-paragraph" "string" "function" "map" "get-format" "last-format" "let" "strings" "first-par")}
        {Lisp-Entry "colorize-syntax" #f 2691 29 2691 44 ("rest")}
        {Lisp-Entry "colorize-comments" #f 2695 29 2695 46 ("rest")}
        {Lisp-Entry "colorize-declarations" #f 2699 29 2699 50 ("rest")}
        {Lisp-Entry "recolorize-text" #f 2703 29 2703 44 ("end-row" "start")}
        {Lisp-Entry "get-text" #f 2712 18 2712 26 ("text")}
        {Lisp-Entry "set-text" #f 2716 18 2716 26 ("text" "set!" "parse-text-content" "set-content" "value")}
        {Lisp-Entry "parse-text-content" #f 2721 11 2721 29 ("class-of" "type-name" "error" "else" "parse-jml-content" "JML-Node" "parse-formatted-content" "Formatted-Text-View" "self" "is?" "null/pair?" "and" "parse-string-content" "string?" "empty-content" "not" "cond" "content")}
        {Lisp-Entry "parse-string-content" #f 2734 11 2734 31 ("split-lines" "paragraphs:" "Text" "new" "content")}
        {Lisp-Entry "parse-formatted-content" #f 2738 11 2738 34 ("paragraphs:" "styles:" "get-output" "formats:" "Formatted-Text" "parse-paragraph" "par" "map" "paragraphs" "style" "intern-style" "put" "when" "format" "function" "intern-format" "styles" "List-Factory" "new" "formats" "let*" "content")}
        {Lisp-Entry "parse-paragraph" #f 2758 11 2758 26 ("parse-runs" "parse-format" "format" "iterate-sequence" "scan" "let*" "list" "cons" "string?" "if" "intern-style" "intern-format" "par")}
        {Lisp-Entry "parse-format" #f 2766 11 2766 23 ("unget" "else" "32" "*" "get-left-margin" "+" "n" "indent:" "16" "set-left-margin" "set-bulleted?" ":bulleted" "case" "get-next" "target" "let" "done?" "and" "while" "out?" "Format" "new" "set!" "not" "when" "proc" "function" "add-formatting" "format" "let*" "scan")}
        {Lisp-Entry "parse-runs" #f 2789 11 2789 21 ("error" "else" "iterate-sequence" "parse-run" "pair?" "list" "string?" "cond" "run" "function" "accumulate" "intern-style" "scan")}
        {Lisp-Entry "parse-run" #f 2800 11 2800 20 ("list" "error" "string?" "if" "else" "scaled?:" "scaling:" "eq?" "peek" "next" "scaling" "moniker" "moniker:" "image-name:" "portfolio:" "Image-Style" "get-application" "get-icons-cache" "portfolio" "image" "image:" "set-font" "Font" "font" "font:" "set-highlight" "highlight" "highlight:" "set-color" "Color" "dispatch" "symbol?" "color" "color:" "new-hyperlink-style" "action" ":hyperlink" "get-style" "name" "style:" "case" "get-next" "target" "let" "done?" "while" "Default" "'Default" "base:" "Text-Style" "new" "set!" "not" "when" "proc" "function" "add-styling" "style" "string" "let*" "intern-style" "scan")}
        {Lisp-Entry "new-hyperlink-style" #f 2853 29 2853 48 ("action:" "Hyperlink" "Color" "color:" "Hyperlink-Small" "name:" "Font" "font:" "Hyperlink-Style" "new" "action")}
        {Lisp-Entry "formatted-start-delimiter" #f 2862 14 2862 39 ()}
        {Lisp-Entry "formatted-end-delimiter" #f 2865 14 2865 37 ()}
        {Lisp-Entry "insert-formatted-line" #f 2869 11 2869 32 ("process-formatted" "call-with-input-string" "line")}
        {Lisp-Entry "process-formatted" #f 2874 11 2874 28 ("else" "process-formatted-directive" "read-formatted-parameter" "directive" "cond" "not" "and" "when" "process" "read-char" "write-char" "Output" "'Output" "get-output-string" "insert-styled" "formatted-end-delimiter" "formatted-start-delimiter" "eqv?" "eof-object?" "or" "if" "peek-char" "c" "iterate" "open-output-string" "output" "let" "process-string" "define" "input")}
        {Lisp-Entry "with-formatted-range" #f 2901 11 2901 31 ("Range$Cell$" "new" "end" "error" "eof-object?" "if" "read-char" "end-char" "process-formatted" "get-start" "start" "let" "proc" "input")}
        {Lisp-Entry "process-formatted-directive" #f 2911 29 2911 56 ("error" "else" "registered-font" "set-text-font" "font" "registered-color" "set-text-color" "read-formatted-parameter" "let" "color" "toggle-underline" "underline" "toggle-italic" "italic" "toggle-bold" "range" "function" "with-formatted-range" "bold" "at-line-start?" "unless" "$" "insert-newline" "%" "case" "input" "directive")}
        {Lisp-Entry "read-formatted-parameter" #f 2944 11 2944 35 ("read-char" "read" "prog1" "input")}
        {Lisp-Entry "parse-jml-content" #f 2975 11 2975 28 ("paragraphs:" "styles:" "get-output" "formats:" "Formatted-Text" "get-children" "parse-jml-paragraph" "par" "map" "paragraphs" "style" "intern-style" "put" "when" "format" "function" "intern-format" "styles" "List-Factory" "new" "formats" "let*" "node")}
        {Lisp-Entry "parse-jml-paragraph" #f 2995 11 2995 30 ("error" "else" "parse-p-tag" "p" "case" "get-tag" "tag" "let" "get-text" "list" "cons" "JML-Text" "is?" "if" "intern-style" "intern-format" "node")}
        {Lisp-Entry "parse-p-tag" #f 3004 11 3004 22 ("parse-p-runs" "cons" "parse-p-format" "format" "let" "intern-style" "intern-format" "node")}
        {Lisp-Entry "parse-p-format" #f 3009 11 3009 25 ("16" "set-left-margin" "set-bulleted?" "bulleted?" "'bulleted?" "get-property" "Format" "new" "set!" "not" "when" "proc" "function" "add-formatting" "format" "let*" "node")}
        {Lisp-Entry "parse-p-runs" #f 3024 11 3024 23 ("get-children" "parse-p-run" "function" "map" "intern-style" "node")}
        {Lisp-Entry "parse-p-run" #f 3030 11 3030 22 ("error" "else" "parse-style-tag" "style" "case" "get-tag" "tag" "let" "get-text" "list" "JML-Text" "is?" "if" "intern-style" "node")}
        {Lisp-Entry "parse-style-tag" #f 3039 11 3039 26 ("list" "get-properties" "error" "else" "parse-color" "set-color" "color" "set-font-weight" "font-weight" "case" "value" "property" "function" "for-each-property" "Default" "'Default" "base:" "Text-Style" "new" "style" "first-child" "get-text" "string" "let" "intern-style" "node")}
        {Lisp-Entry "parse-color" #f 3051 11 3051 22 ("Color" "dispatch" "color")}
        {Lisp-Entry "get-text-content" #f 3060 18 3060 34 ("text-content")}
        {Lisp-Entry "set-text-content" #f 3064 18 3064 34 ("set-content" "text-content" "set!" "value")}
        {Lisp-Entry "patch-formatted-bug" #f 3074 18 3074 37 ("get-runs" "get-style" "intern-style" "set-style" "run" "for-each" "get-format" "intern-format" "set-format" "paragraph" "row" "function" "for-each-paragraph" "styles" "formats" "empty-content")}
        {Lisp-Entry "read-formatted" #f 3085 21 3085 35 ("read" "jazz-readtable" "readtable:" "cr-lf" "'cr-lf" "eol-encoding:" "parse" "path:" "list" "call-with-input-file" "moniker")}
        {Lisp-Entry "save-formatted" #f 3090 21 3090 35 ("print-formatted" "printer" "function" "parse" "call-with-output-file" "moniker")}
        {Lisp-Entry "print-formatted" #f 3096 21 3096 36 ("range-paragraph-runs" "get-style" "style-reference" "get-string" "run" "for-each" "get-format" "format-reference" "set!" "paragraph" "function" "iterate" "range-paragraphs" "get-paragraphs" "not" "if" "paragraphs" "first?" "print-styles" "print-formats" "format" "styles" "collect-persistent" "formats" "let" "range" "printer")}
        {Lisp-Entry "range-paragraph-runs" #f 3123 11 3123 31 ("range-runs" "get-length" "end" "0" "get-col" "either" "start" "and" "when" "get-end" "last?" "get-start" "get-row" "get-paragraph" "eq?" "first?" "let" "get-runs" "not" "if" "range" "paragraph")}
        {Lisp-Entry "print-formats" #f 3135 11 3135 24 ("set!" "if" "fmt" "function" "for-each" "first?" "let" "format" "printer" "formats")}
        {Lisp-Entry "print-styles" #f 3147 11 3147 23 ("set!" "if" "style" "function" "for-each" "first?" "let" "format" "printer" "styles")}
        {Lisp-Entry "get-formatted-content" #f 3159 18 3159 39 ("get-formatted-paragraphs" "paragraphs:" "styles:" "List" "coerce" "formats:" "Formatted-Text" "new" "styles" "collect-persistent" "formats" "let")}
        {Lisp-Entry "get-formatted-paragraphs" #f 3168 11 3168 35 ("get-output" "get-runs" "get-style" "style-reference" "get-string" "list" "run" "map" "get-format" "format-reference" "cons" "put" "paragraph" "row" "function" "for-each-paragraph" "List-Factory" "new" "fact" "let" "styles" "formats")}
        {Lisp-Entry "set-formatted-content" #f 3179 18 3179 39 ("error" "else" "set-unformatted-content" "Text" "complete-setup" "get-row-height" "increase!" "wrap-paragraph" "set!" "set-next" "set-previous" "make-paragraph" "paragraph" "make-runs" "run-infos->string" "string" "reference-format" "essay" "runs" "format" "bind" "info" "function" "accumulate" "rows" "root-row" "previous" "height" "0" "count" "setup-style" "setup-format" "map" "let*" "get-paragraphs" "paragraphs" "get-styles" "styles" "get-formats" "formats" "let" "Formatted-Text" "typecase" "text")}
        {Lisp-Entry "complete-setup" #f 3211 11 3211 25 ("invalidate-update" "selection-anchor" "empty-selection" "selection" "get-width" "visible-width" "visible-height" "visible-count" "set!" "Axis" "coerce" "set-paragraphs" "height" "count" "rows")}
        {Lisp-Entry "wrap-content" #f 3221 18 3221 30 ("invalidate-view" "layout-scrollee" "visible-height" "set!" "get-row-height" "increase!" "wrap-paragraph" "paragraph" "function" "get-paragraphs" "iterate" "0" "height" "let" "update-locked?" "unless" "context")}
        {Lisp-Entry "wrap-paragraph" #f 3236 21 3236 35 ("visible-height" "increase!" "-" "delta" "wrap-paragraph-lowlevel" "get-row-height" "before" "let" "paragraph" "context")}
        {Lisp-Entry "wrap-paragraph-lowlevel" #f 3244 21 3244 44 ("wrap" "get-paragraph-width" "width" "let" "flatten" "wrap?" "not" "if" "paragraph" "context")}
        {Lisp-Entry "get-paragraph-width" #f 3251 11 3251 30 ("get-format" "get-left-margin" "left-padding" "get-display-width" "wrap-patch" "wrap-width" "if" "-" "40" "max" "paragraph")}
        {Lisp-Entry "range-paragraphs" #f 3255 11 3255 27 ("get-output" "set!" "eq?" "unless" "put" "not" "if" "get-paragraph" "paragraph" "get-end" "to" "get-start" "get-row" "from" "row" "for" "loop" "List-Factory" "new" "fact" "last" "let" "range")}
        {Lisp-Entry "copy-formatted-selection" #f 3268 11 3268 35 ("jazz-formatted-text" "'jazz-formatted-text" "format:" "set-clipboard-text" "get-output-string" "output" "get-selection" "print-formatted" "open-output-string" "printer" "let" "bell" "empty-selection?" "if" "copy-formatted-selection" "'copy-formatted-selection" "unimplemented")}
        {Lisp-Entry "paste-formatted-clipboard" #f 3279 11 3279 36 ("replace-selection" "split-lines" "strings" "let" "get-selection" "replace-formatted" "apply" "read-string-content" "info" "format:" "get-clipboard-text" "text" "let*" "jazz-formatted-text" "'jazz-formatted-text" "clipboard-format-available?" "if")}
        {Lisp-Entry "replace-formatted" #f 3288 18 3288 35 ("set-caret" "when" "error" "else" "split-lines" "replace-text" "Text" "replace-formatted-text" "run-infos->string" "runs" "format" "bind" "run-info" "function" "strings" "setup-style" "intern-style" "interned-styles" "setup-format" "intern-format" "map" "interned-formats" "get-paragraphs" "paragraphs" "get-styles" "styles" "get-formats" "formats" "let*" "Formatted-Text" "typecase" "caret" "let" "info" "range")}
        {Lisp-Entry "replace-formatted-text" #f 3310 21 3310 43 ("update-focus-actions" "call-content-change" "set-selection" "replace-formatted" "copy" "selection" "let" "undoer" "register-undo" "set-modified?" "1" "+" "-" "recolorize-text" "fit-caret" "fit-anchor" "fit-selection" "first-displayed-rank" "get-paragraph" "first-displayed" "set!" "update-displayed" "Range$Cell$" "new" "apply-formats/styles" "get-application" "appl" "replace-range" "caret" "outline" "get-first-displayed-rank" "get-row" "<=" "ufd?" "range-formatted-text" "old" "length" "count" "get-end" "end" "get-start" "start" "let*" "function" "without-caret" "write-allowed?" "when" "paragraphs" "styles" "formats" "strings" "range")}
        {Lisp-Entry "apply-formats/styles" #f 3345 21 3345 41 ("set-row" "fix-view-style-parent" "reference-format" "set-format" "0" "inside?" "and" "when" "1" "get-length" "-" "line-length" "get-paragraph" "full-paragraph" "Range$Cell$" "set-style" "cardinality" "cast" "+" "set-col" "car" "reference-style" "style" "let" "ref" "string" "run" "runs" "format" "bind" "paragraph" "function" "for-each" "end" "get-col" "get-start" "get-row" "Cell" "new" "start" "let*" "paragraphs" "styles" "formats" "range")}
        {Lisp-Entry "range-formatted-text" #f 3369 21 3369 41 ("get-output-string" "read-string-content" "car" "print-formatted" "open-output-string" "printer" "let" "range-formatted-text" "'range-formatted-text" "unimplemented" "range")}
        {Lisp-Entry "toggle-bulleted" #f 3382 18 3382 33 ("16" "-16" "if" "+" "set-left-margin" "not" "set-bulleted?" "get-bulleted?" "bulleted?" "get-left-margin" "left-margin" "let" "format" "function" "get-paragraph" "modify-format" "row")}
        {Lisp-Entry "indent-paragraph" #f 3391 18 3391 34 ("+" "set-left-margin" "get-left-margin" "left" "let" "format" "function" "modify-format" "delta" "paragraph" "row")}
        {Lisp-Entry "set-justification" #f 3398 11 3398 28 ("set-justification" "format" "function" "modify-format" "justification" "paragraph" "row")}
        {Lisp-Entry "modify-format" #f 3404 11 3404 24 ("set-paragraph-format" "get-format" "extend" "format" "let" "proc" "paragraph")}
        {Lisp-Entry "set-paragraph-format" #f 3410 11 3410 31 ("invalidate-view" "layout-scrollee" "set-modified?" "wrap-paragraph" "intern-format" "set-format" "format" "paragraph")}
        {Lisp-Entry "apply-style" #f 3418 18 3418 29 ("get-style" "stylize" "end" "start" "name")}
        {Lisp-Entry "stylize" #f 3422 18 3422 25 ("get-style" "Range$Cell$" "set-text-style" "paragraph-length" "get-row" "Cell" "new" "set!" "not" "when" "end" "start" "name/style")}
        {Lisp-Entry "set-style" #f 3428 18 3428 27 ("invalidate-view" "layout-scrollee" "set-modified?" "wrap-paragraph" "set-style" "end" "start" "paragraph" "function" "for-each-range-exact" "intern-style" "let" "style" "range")}
        {Lisp-Entry "set-text-alignment" #f 3439 18 3439 36 ("invalidate-view" "layout-scrollee" "set-modified?" "wrap-paragraph" "set-text-alignment" "end" "start" "paragraph" "function" "for-each-range-exact" "alignment" "range")}
        {Lisp-Entry "set-text-font" #f 3449 18 3449 31 ("invalidate-view" "layout-scrollee" "set-modified?" "wrap-paragraph" "set-text-font" "end" "start" "paragraph" "function" "for-each-range-exact" "font" "range")}
        {Lisp-Entry "set-text-style" #f 3459 18 3459 32 ("set-modified?" "invalidate-drawing" "wrap-paragraph" "set-style" "end" "start" "paragraph" "function" "for-each-range-exact" "intern-style" "let" "style" "range")}
        {Lisp-Entry "set-text-color" #f 3469 18 3469 32 ("set-modified?" "invalidate-drawing" "wrap-paragraph" "set-text-color" "end" "start" "paragraph" "function" "for-each-range-exact" "color" "range")}
        {Lisp-Entry "set-highlight-color" #f 3478 18 3478 37 ("set-modified?" "invalidate-drawing" "wrap-paragraph" "set-highlight-color" "end" "start" "paragraph" "function" "for-each-range-exact" "color" "range")}
        {Lisp-Entry "toggle-bold" #f 3487 18 3487 29 ("invalidate-drawing" "wrap-paragraph" "toggle-bold" "end" "start" "paragraph" "function" "for-each-range-exact" "range")}
        {Lisp-Entry "toggle-italic" #f 3495 18 3495 31 ("invalidate-drawing" "wrap-paragraph" "toggle-italic" "end" "start" "paragraph" "function" "for-each-range-exact" "range")}
        {Lisp-Entry "toggle-underline" #f 3503 18 3503 34 ("invalidate-drawing" "wrap-paragraph" "toggle-underline" "end" "start" "paragraph" "function" "for-each-range-exact" "range")}
        {Lisp-Entry "for-each-paragraph" #f 3511 18 3511 36 ("element" "below" "from" "row" "for" "loop" "get-paragraphs" "paragraphs" "let" "get-length" "end" "end:" "0" "start" "start:" "proc")}
        {Lisp-Entry "for-each-selected-paragraph" #f 3517 18 3517 45 ("1" "get-end" "+" "end:" "get-start" "get-row" "start:" "for-each-paragraph" "get-selection" "selection" "let" "proc")}
        {Lisp-Entry "get-default-format" #f 3529 18 3529 36 ("default-format")}
        {Lisp-Entry "set-default-format" #f 3533 18 3533 36 ("copy" "setup-format" "formats" "set-domain" "default-format" "set!" "value")}
        {Lisp-Entry "get-formats" #f 3539 18 3539 29 ("formats" "get-content")}
        {Lisp-Entry "get-named-formats" #f 3543 18 3543 35 ("get-formats" "get-name" "format" "function" "collect-if")}
        {Lisp-Entry "setup-format" #f 3549 11 3549 23 ("modify-from" "intern-format" "not" "if" "error?:" "formats" "locate" "essay" "actual" "get-name" "name" "let*" "format")}
        {Lisp-Entry "add-format" #f 3558 18 3558 28 ("modify-from" "register" "set-persistent?" "set-domain" "copy" "let" "not" "if" "error?:" "formats" "locate" "essay" "actual" "get-name" "name" "let*" "format")}
        {Lisp-Entry "get-format" #f 3570 18 3570 28 ("formats" "locate" "error?" "error?:" "name")}
        {Lisp-Entry "intern-format" #f 3574 18 3574 31 ("register" "set-domain" "begin" "formats" "similar" "either" "format")}
        {Lisp-Entry "format-reference" #f 3582 11 3582 27 ("get-name" "get-rank" "either" "formats" "format")}
        {Lisp-Entry "reference-format" #f 3587 11 3587 27 ("element" "get-format" "symbol?" "if" "reference" "formats")}
        {Lisp-Entry "get-default-style" #f 3598 18 3598 35 ("default-style")}
        {Lisp-Entry "set-default-style" #f 3602 18 3602 35 ("copy" "setup-style" "styles" "set-domain" "default-style" "set!" "value")}
        {Lisp-Entry "propagate-styles?" #f 3608 26 3608 43 ()}
        {Lisp-Entry "patch-default-style-height" #f 3614 18 3614 44 ("get-line" "set-height" "set-row-height" "default-style" "get-font" "get-metrics" "get-height" "height" "0" "get-paragraph" "paragraph" "let" "text-empty?" "when")}
        {Lisp-Entry "get-styles" #f 3623 18 3623 28 ("styles" "get-content")}
        {Lisp-Entry "get-named-styles" #f 3627 18 3627 34 ("get-styles" "get-name" "style" "function" "collect-if")}
        {Lisp-Entry "setup-style" #f 3633 11 3633 22 ("modify-from" "intern-style" "not" "if" "error?:" "styles" "locate" "essay" "actual" "get-name" "name" "let*" "style")}
        {Lisp-Entry "add-style" #f 3642 18 3642 27 ("modify-from" "register" "set-persistent?" "set-domain" "copy" "let" "not" "if" "error?:" "styles" "locate" "essay" "actual" "get-name" "name" "let*" "style")}
        {Lisp-Entry "get-style" #f 3654 18 3654 27 ("styles" "locate" "Style" "is?" "if" "error?" "error?:" "name/style")}
        {Lisp-Entry "intern-style" #f 3660 18 3660 30 ("register" "set-domain" "begin" "styles" "similar" "either" "style")}
        {Lisp-Entry "style-reference" #f 3668 11 3668 26 ("get-name" "get-rank" "either" "styles" "style")}
        {Lisp-Entry "reference-style" #f 3673 11 3673 26 ("element" "get-style" "symbol?" "if" "reference" "styles")}
        {Lisp-Entry "fix-view-style-parent" #f 3679 11 3679 32 ("set-parent" "get-view" "view" "View-Style" "is?" "when" "get-style" "style" "run" "function" "for-each" "get-runs" "runs" "let" "paragraph")}
        {Lisp-Entry "commented?" #f 3689 26 3689 36 ("pos")}
        {Lisp-Entry "comment-style?" #f 3693 26 3693 40 ("style")}
        {Lisp-Entry "string-style?" #f 3697 26 3697 39 ("style")}
        {Lisp-Entry "textual-style?" #f 3701 26 3701 40 ("style")}
        {Lisp-Entry "run-infos->string" #f 3710 11 3710 28 ("get-output-string" "format" "car" "string" "info" "function" "for-each" "open-output-string" "printer" "let" "infos")}
        {Lisp-Entry "make-runs" #f 3719 11 3719 20 ("Run" "new" "set!" "reference-style" "get-default-style" "not" "if" "style" "subseq!" "subseq" "cardinality" "cast" "+" "limit" "let*" "cdr" "rank" "bind-optionals" "car" "str" "info" "function" "map" "0" "offset" "let" "infos" "styles" "string")}
        {Lisp-Entry "get-default-height" #f 3737 18 3737 36 ("default-style" "get-height")}
        {Lisp-Entry "get-height-at" #f 3741 18 3741 31 ("get-col" "get-row" "get-paragraph" "get-line-at" "get-height" "pos")}
        {Lisp-Entry "compute-width" #f 3750 18 3750 31 ("set!" ">" "when" "compute-width" "w" "paragraph" "rank" "function" "for-each-paragraph" "0" "width" "let")}
        {Lisp-Entry "get-headers" #f 3765 26 3765 37 ()}
        {Lisp-Entry "get-chapters" #f 3769 26 3769 38 ("get-output" "1" "list" "put" "get-chapter-label" "label" "paragraph-string" "string" "get-column" "=" "when" "get-col" "col" "get-row" "row" "get-target" "header" "let" "pos" "context" "bind" "info" "function" "for-each" "List-Factory" "new" "chapters" "make-search-context" "map" "text-multisearch-all" "occurrences" "get-headers" "headers" "let*")}
        {Lisp-Entry "get-chapter-label" #f 3786 26 3786 43 ("cardinality" "+" "subseq" "header" "col" "string")}
        {Lisp-Entry "get-first-special?" #f 3790 26 3790 44 ()}
        {Lisp-Entry "get-first-chapter" #f 3794 26 3794 43 ("get-name" "not" "text-beginning" "0" "list" "get-moniker" "file" "let" "car" "null?" "get-first-special?" "if" "lst")}
        {Lisp-Entry "get-remaining-chapters" #f 3806 26 3806 48 ("cdr" "null?" "get-first-special?" "if" "lst")}
        {Lisp-Entry "current-expr" #f 3817 26 3817 38 ()}
        {Lisp-Entry "current-expr-range" #f 3821 26 3821 44 ()}
        {Lisp-Entry "current-expr-string" #f 3825 18 3825 37 ("get-string" "when" "current-expr-range" "range" "let")}
        {Lisp-Entry "mouse-insert" #f 3836 11 3836 23 ("insert-string" "function" "with-update-locked" "last" "text-ending" "string-append" "set!" "memv?" "not" "0" "element" "text-constituent?" "and" "previous-cell" "get-char" "sc" "text-beginning" "/=" "when" "get-end" "end" "get-start" "start" "let" "copy")}
        {Lisp-Entry "range-strings" #f 3855 11 3855 24 ("get-output" "0" "1" "+" "naturals" "map" "put-sequence" "put" "List-Factory" "new" "dest" "get-col" "paragraph-string" "subseq" "list" "get-row" "=" "if" "get-end" "end" "get-start" "start" "let" "range")}
        {Lisp-Entry "Marked-Column" #f 3872 14 3872 27 ()}
        {Lisp-Entry "on-mark-column" #f 3876 11 3876 25 ("mark-column" "evt")}
        {Lisp-Entry "on-fill-to-column" #f 3880 11 3880 28 ("fill-to-column" "evt")}
        {Lisp-Entry "mark-column" #f 3884 11 3884 22 ("user-message" "Marked-Column" "set!" "get-col" "col" "get-start" "start" "let*")}
        {Lisp-Entry "fill-to-column" #f 3891 11 3891 25 ("make-string" "insert-string" "1" "sign" "case" "-" "delta" "get-col" "col" "get-row" "row" "get-start" "start" "let*" "bell" "Marked-Column" "not" "has-selection?" "or" "if")}
        {Lisp-Entry "position-offset" #f 3907 11 3907 26 ("1" "paragraph-length" "+" "increase!" "below" "from" "n" "for" "loop" "0" "offset" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "offset-position" #f 3916 11 3916 26 ("set!" "-" "Cell" "new" "continuation-return" ">" "if" "1" "get-string" "cardinality" "+" "next" "paragraph" "rank" "for-each-paragraph" "return" "function" "continuation-capture" "0" "scan" "let" "offset")}
        {Lisp-Entry "on-upcase-selection" #f 3933 11 3933 30 ("get-selected-string" "upcase" "insert-string" "function" "with-preserved-selection" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-downcase-selection" #f 3941 11 3941 32 ("get-selected-string" "downcase" "insert-string" "function" "with-preserved-selection" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-capitalize-selection" #f 3949 11 3949 34 ("get-selected-string" "capitalize" "insert-string" "function" "with-preserved-selection" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "with-preserved-selection" #f 3957 11 3957 35 ("set-selection" "get-selection" "selection" "let" "proc")}
        {Lisp-Entry "get-run-at" #f 3968 18 3968 28 ("get-col" "get-run" "get-row" "get-paragraph" "paragraph" "let" "pos")}
        {Lisp-Entry "get-style-at" #f 3973 18 3973 30 ("get-style" "get-default-style" "not" "if" "get-run-at" "run" "let" "pos")}
        {Lisp-Entry "uncolorize-row" #f 3980 18 3980 32 ("invalidate-paragraph" "default-style" "remove-coloring" "when" "get-paragraph" "paragraph" "let" "row")}
        {Lisp-Entry "colorize" #f 3986 18 3986 26 ("Range$Cell$" "set-text-color" "paragraph-length" "get-row" "Cell" "new" "set!" "not" "when" "end" "start" "color")}
        {Lisp-Entry "fill" #f 3992 18 3992 22 ("set-highlight-color" "1" "+" "Range$Cell$" "new" "range" "let" "pos" "color")}
        {Lisp-Entry "unfill" #f 3997 18 3997 24 ("set-highlight-color" "1" "+" "Range$Cell$" "new" "range" "let" "pos")}
        {Lisp-Entry "new-colorizer" #f 4007 18 4007 31 ("Text-Colorizer" "new" "text")}
        {Lisp-Entry "view->text" #f 4016 18 4016 28 ("get-position" "-" "view->col" "new" "get-paragraph" "par" "get-limit" "v->row" "visible-height" "row" "let*" "Cell" "0" "<" "if" "get-v" "v" "let" "pos")}
        {Lisp-Entry "text->view" #f 4025 18 4025 28 ("get-v" "row->view" "+" "get-h" "Point" "new" "get-col" "col->view" "view" "get-row" "get-paragraph" "par" "let*" "pos")}
        {Lisp-Entry "row->view" #f 4033 11 4033 20 ("get-position" "get-v" "get-paragraph" "par" "let" "row")}
        {Lisp-Entry "string-width" #f 4038 11 4038 23 ("Code" "name:" "Font" "get-all-widths" "JzStringWidth" "string-width" "'string-width" "unimplemented" "end" "start" "string")}
        {Lisp-Entry "validate-range" #f 4050 11 4050 25 ("error" "get-row" ">" "or" "when" "get-end" "end" "get-start" "start" "get-limit" "limit" "let" "range")}
        {Lisp-Entry "set-selection-safe" #f 4059 18 4059 36 ("restrict-range" "set-selection" "apply" "rest" "range")}
        {Lisp-Entry "restrict-range" #f 4063 18 4063 32 ("get-end" "get-start" "Range$Cell$" "paragraph-length" "len" "get-col" "col" "row" "restrict-col" "0" "Cell" "new" "get-row" ">" "if" "cell" "restrict-row" "define" "get-limit" "limit" "let" "range")}
        {Lisp-Entry "set-selection-style" #f 4088 18 4088 37 ("invalidate-view" "layout-scrollee" "set-modified?" "set-paragraph-format" "else" "1" "+" "end:" "start:" "get-length" "0" "Cell" "Range$Cell$" "new" "set-text-style" "paragraph" "row" "function" "for-each-paragraph" "empty-selection?" "or" "cond" "when" "get-row" "get-paragraph" "neq?" "span?" "get-end" "end" "get-start" "start" "get-selection" "selection" "get-style" "style" "error?:" "get-format" "format" "let*" "name")}
        {Lisp-Entry "on-bold" #f 4115 11 4115 18 ("get-selection" "toggle-bold" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-italic" #f 4121 11 4121 20 ("get-selection" "toggle-italic" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-underline" #f 4127 11 4127 23 ("get-selection" "toggle-underline" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "get-ruler" #f 4138 26 4138 35 ()}
        {Lisp-Entry "on-toggle-ruler" #f 4142 11 4142 26 ("get-shown?" "set-shown?" "bell" "not" "if" "get-ruler" "ruler" "let" "evt")}
        {Lisp-Entry "set-selection-font-name" #f 4154 18 4154 41 ("invalidate-view" "layout-scrollee" "set-modified?" "wrap-paragraph" "set-font-name" "end" "start" "paragraph" "function" "get-selection" "for-each-range-exact" "name")}
        {Lisp-Entry "set-selection-point-size" #f 4164 18 4164 42 ("invalidate-view" "layout-scrollee" "set-modified?" "wrap-paragraph" "set-point-size" "end" "start" "paragraph" "function" "get-selection" "for-each-range-exact" "size")}
        {Lisp-Entry "pick-text-color" #f 4179 11 4179 26 ("8" "3" "Cell" "geometry:" "get-parent" "popup-colors" "sender")}
        {Lisp-Entry "pick-highlight-color" #f 4183 11 4183 31 ("8" "3" "Cell" "geometry:" "get-parent" "popup-colors" "sender")}
        {Lisp-Entry "has-completion?" #f 4192 21 4192 36 ("has-selection?" "completion-active?" "and")}
        {Lisp-Entry "set-completion" #f 4196 21 4196 35 ("set-selection" "completion-active?" "set!" "range")}
        {Lisp-Entry "remove-completion" #f 4201 11 4201 28 ("set!" "list" "replace-selection" "completion-active?" "when")}
        {Lisp-Entry "end-completion" #f 4207 21 4207 35 ("get-end" "set-caret" "set!" "completion-active?" "when")}
        {Lisp-Entry "auto-complete?" #f 4213 29 4213 43 ()}
        {Lisp-Entry "favorite-completions" #f 4217 29 4217 49 ()}
        {Lisp-Entry "completion-name" #f 4221 29 4221 44 ("postfix" "pos")}
        {Lisp-Entry "alphabetize-completion" #f 4225 11 4225 33 ("String" "coerce" "element" "string-length" ">" "if" "completion" "function" "map" "char<?" "sort" "remove-duplicates" "alphabet-char" "let" "offset" "completions")}
        {Lisp-Entry "completion-string" #f 4234 11 4234 28 ("else" "alphabetize-completion" "alphabet" "offset" "completions-prefix" "common" "5" ">" "user-message" "car" "found" "null?" "cond" "length" "count" "symbol-completions" "completions" "complete-name?" "cdr" "subseq" "either" "concatenate" "clear-user-message" "begin" "if" "get-application" "macro-playing?" "not" "feedback?" "string=?" "test:" "associate" "favorite" "favorite-completions" "favorites" "string-length" "size" "let*" "when" "completion-name" "name" "let" "postfix" "pos")}
        {Lisp-Entry "complete-name?" #f 4274 29 4274 43 ("2" ">=" "size")}
        {Lisp-Entry "symbol-completions" #f 4278 29 4278 47 ("favorites" "name")}
        {Lisp-Entry "completions-prefix" #f 4282 29 4282 47 ("prefix" "completions")}
        {Lisp-Entry "auto-complete" #f 4286 29 4286 42 ("insert-char/backspace" "end-completion" "list" "replace-selection" "auto-complete-characters" "memq?" "completion-active?" "and" "when" "subseq" "replacement-string" "find" "offset" "selection-lines" "join-lines" "completion-string" "string" "complete-current" "syntax" "auto-complete-char?" "not" "if" "self" "class-of" "class" "1" "-" "get-char" "0" "get-col" ">" "essay" "last" "get-end" "end" "let*" "get-start" "get-style-at" "key")}
        {Lisp-Entry "complete-current" #f 4303 11 4303 27 ("cardinality" "cast" "+" "next-cell" "set-completion" "insert-string" "list" "get-end" "get-start" "previous-cell" "Range$Cell$" "new" "replace-text" "end-completion" "begin" "not" "completion-string" "string" "let" "insert-char/backspace" "get-style-at" "textual-style?" "if" "inserted?" "back?" "postfix" "pos" "key")}
        {Lisp-Entry "convert-completion" #f 4317 21 4317 39 ("set-anchor?:" "Range$Cell$" "new" "set-selection" "end-completion" "get-end" "end" "get-start" "start" "let" "completion-active?" "when")}
        {Lisp-Entry "insert-char/backspace" #f 4325 21 4325 42 ("flash-matching-character" "backspace" "list" "replace-selection" "completion-active?" "insert-char" "eqv?" "not" "if" "when" "word?" "word?:" "c")}
        {Lisp-Entry "flash-character?" #f 4341 29 4341 45 ("char")}
        {Lisp-Entry "flash-matching-character" #f 4345 29 4345 53 ()}
        {Lisp-Entry "on-search-forward-mode" #f 4354 11 4354 33 ("get-selection" "get-string" "has-selection?" "essay" "search-forward" "'search-forward" "get-application" "select-command-mode" "evt")}
        {Lisp-Entry "on-search-backward-mode" #f 4359 11 4359 34 ("get-selection" "get-string" "has-selection?" "essay" "search-backward" "'search-backward" "get-application" "select-command-mode" "evt")}
        {Lisp-Entry "on-find-forward" #f 4369 18 4369 33 ("on-find-forward" "bell" "select-next" "unless" "get-constituent-test" "get-find-targets" "targets" "not" "if" "active-search" "search" "get-application" "appl" "let" "evt")}
        {Lisp-Entry "on-find-backward" #f 4379 18 4379 34 ("on-find-backward" "bell" "select-previous" "unless" "get-constituent-test" "get-find-targets" "targets" "not" "if" "active-search" "search" "get-application" "appl" "let" "evt")}
        {Lisp-Entry "find-context" #f 4389 11 4389 23 ("application-search-context" "not" "if" "current-expr-string" "get-selected-string" "either" "string" "let")}
        {Lisp-Entry "application-search-context" #f 4396 11 4396 37 ("get-constituent-test" "constituent-test:" "get-ignore-case?" "ignore-case?:" "get-whole-words?" "whole-words?:" "make-search-context" "get-application" "appl" "let" "string")}
        {Lisp-Entry "on-find-next" #f 4404 18 4404 30 ("list" "select-next" "unless" "get-selected-string" "application-search-context" "context" "let" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-find-previous" #f 4412 18 4412 34 ("list" "select-previous" "unless" "get-selected-string" "application-search-context" "context" "let" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "select-next" #f 4420 26 4420 37 ("ensure-scrolled-left" "ensure-displayed" "cardinality" "position-offset" "+" "offset-position" "Range$Cell$" "new" "set-selection" "get-target" "target" "pos" "context" "bind" "when" "reverse?:" "get-end" "start:" "text-multisearch" "found" "let" "contexts")}
        {Lisp-Entry "select-previous" #f 4431 26 4431 41 ("ensure-scrolled-left" "ensure-displayed" "cardinality" "position-offset" "+" "offset-position" "Range$Cell$" "new" "set-selection" "get-target" "target" "pos" "context" "bind" "when" "reverse?:" "get-start" "start:" "text-multisearch" "found" "let" "contexts")}
        {Lisp-Entry "select-expr" #f 4442 26 4442 37 ("select-next" "text-beginning" "set-caret" "contexts")}
        {Lisp-Entry "select-expr-backward" #f 4447 26 4447 46 ("select-previous" "text-ending" "set-caret" "contexts")}
        {Lisp-Entry "text-multisearch" #f 4457 18 4457 34 ("+" "1" "-" "Cell" "new" "paragraph-string" "string" "<=" "0" ">=" "n" "iter" "get-col" "col" "get-row" "row" "limit" "text-beginning" "text-ending" "either" "pos" "offset-position" "cons" "offset" "bind" "when" "position-offset" "multisearch" "found" "get-string-content" "content" "let" "get-target" "search" "context" "function" "some?" "if" "reverse?" "reverse?:" "get-limit" "end" "end:" "start" "start:" "contexts")}
        {Lisp-Entry "text-multisearch-all" #f 4482 18 4482 38 ("queue-list" "multisearch-all" "Cell" "new" "cons" "enqueue" "pos" "context" "bind" "found" "for-each" "get-string" "line" "paragraph" "row" "function" "for-each-paragraph" "new-queue" "queue" "let" "contexts")}
        {Lisp-Entry "text-search" #f 4494 18 4494 29 ("cdr" "if" "make-search-context" "list" "text-multisearch" "found" "let" "string")}
        {Lisp-Entry "text-search-all" #f 4501 18 4501 33 ("make-search-context" "list" "text-multisearch-all" "cdr" "map" "string")}
        {Lisp-Entry "text-expression-search" #f 4505 18 4505 40 ("car" "when" "position" "search-expressions" "found" "quotation" "'quotation" "code" "'code" "get-extension" "ci=?" "not" "or" "if" "mode" "get-moniker" "moniker" "text-beginning" "self" "explorer-class" "new" "expl" "let*" "reverse?" "reverse?:" "get-limit" "end" "end:" "start" "start:" "string")}
        {Lisp-Entry "get-class-image" #f 4519 16 4519 31 ("Bitmap-Resource")}
        {Lisp-Entry "component-surrogate" #f 4523 11 4523 30 ("Text-Surrogate")}
        {Lisp-Entry "save-component-properties" #f 4527 11 4527 36 ("set-modified?" "design-events?:" "get-content" "text-content" "'text-content" "self" "set-property" "get-modified?" "when" "designer")}
        {Lisp-Entry "property-presentation" #f 4533 16 4533 37 ("nextmethod" "else" "caret-color" "inactive-selection-color" "active-selection-color" "default-style" "default-format" "focus-selects-all?" "accepts-returns?" "wrap?" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 4546 11 4546 27 ("nextmethod" "else" "Boolean-Row" "focus-selects-all?" "accepts-returns?" "wrap?" "Color-Row" "inactive-selection-color" "active-selection-color" "Selection-Row" "new" "selection" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 4554 11 4554 37 ("caret-color" "inactive-selection-color" "active-selection-color" "background" "default-style" "default-format" "focus-selects-all?" "accepts-returns?" "wrap?" "name-info" "class-info")}}
      {Lisp-Entry "Selection-Row" #f 4566 7 4566 20 ("Range-Row")
        {Lisp-Entry "present" #f 4569 11 4569 18 ("get-col" "get-row" "format" "get-end" "end" "get-start" "start" "let" "range")}}}})
"TextToHTML-Exporter"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "TextToHTML-Exporter.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.TextToHTML-Exporter" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "TextToHTML-Exporter" #f 45 7 45 26 ("Object")
        {Lisp-Entry "text" #f 48 8 48 12 ()}
        {Lisp-Entry "printer" #f 49 8 49 15 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("printer~self" "text~self" "set!" "nextmethod" "printer" "text")}
        {Lisp-Entry "export-html" #f 58 18 58 29 ("print-footer" "text" "to-html" "print-header")}
        {Lisp-Entry "to-html" #f 64 11 64 18 ("error" "else" "text" "'text" "to-html" "Table-Cell" "header" "'header" "get-shown?" "tree" "'tree" "locate" "Table-Border" "tree-column->html" "Tree-Label-Column" "tree-label->html" "Tree-Label" "row->html" "Tree-Row" "tree->html" "Tree-View" "paragraph->html" "Paragraph" "text->html" "Text-View" "typecase" "in-table?" "element")}
        {Lisp-Entry "paragraph->html" #f 78 11 78 26 ("unless" "get-runs" "run->html" "run" "function" "for-each" "64" "16" "get-left-margin" "-" "/" "printer" "format" "when" "get-bulleted?" "bulleted?" "get-format" "fmt" "let*" "in-table?" "paragraph")}
        {Lisp-Entry "run->html" #f 94 11 94 20 ("get-string" "printer" "format" "not-null?" "not" "when" "color:" "get-value" "color" "Default" "'Default" "get-name" "eqv?" "default?" "get-style" "style" "let*" "in-table?" "run")}
        {Lisp-Entry "run->html" #f 108 11 108 20 ("else" "Heading3" "Heading2" "Heading1" "Heading0" "case" "Text-Style" "printer" "format" "Hyperlink-Style" "typecase" "get-string" "string" "get-name" "name" "get-view" "to-html" "View-Style" "is?" "if" "get-style" "style" "let" "in-table?" "run")}
        {Lisp-Entry "text->html" #f 126 11 126 21 ("get-paragraphs" "paragraph->html" "paragraph" "function" "for-each" "in-table?" "element")}
        {Lisp-Entry "tree->html" #f 132 11 132 21 ("row->html" "for-each-row" "get-columns" "to-html" "column" "function" "for-each" "when" "printer" "format" "header?" "tree")}
        {Lisp-Entry "row->html" #f 148 11 148 20 ("get-children" "set!" "to-html" "0" "get-level" "/=" "and" "when" "child" "function" "for-each" "first?" "in-table?" "let" "printer" "format" "rank" "row")}
        {Lisp-Entry "tree-label->html" #f 163 11 163 27 ("printer" "format" "empty-string?" "if" "get-title" "localize" "string" "let" "cell")}
        {Lisp-Entry "tree-column->html" #f 170 11 170 28 ("get-title" "localize" "printer" "format" "column")}
        {Lisp-Entry "print-header" #f 174 18 174 30 ("centered?:" "print-title" "localize" "/=" "when" "printer" "format" "style-sheet" "style-sheet:" "2" "header-level" "header-level:" "header?" "header?:" "name" "name:")}
        {Lisp-Entry "print-footer" #f 191 18 191 30 ("printer" "format")}}}})
"Threeway-Checkbox"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Threeway-Checkbox.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Threeway-Checkbox" #f 41 19 41 49 ("jazz")
      {Lisp-Entry "Threeway-Checkbox" #f 51 7 51 24 ("Check-Box")
        {Lisp-Entry "type" #f 54 12 54 16 ("set-type" "get-type")}
        {Lisp-Entry "property_" #f 55 12 55 21 ("set-property" "get-property")}
        {Lisp-Entry "state" #f 56 12 56 17 ("set-state" "get-state" "none" "'none")}
        {Lisp-Entry "get-type" #f 59 11 59 19 ("type")}
        {Lisp-Entry "set-type" #f 63 11 63 19 ("type" "set!" "value")}
        {Lisp-Entry "get-property" #f 67 11 67 23 ("property_")}
        {Lisp-Entry "set-property" #f 71 11 71 23 ("property_" "set!" "value")}
        {Lisp-Entry "get-state" #f 75 11 75 20 ("state")}
        {Lisp-Entry "set-state" #f 79 11 79 20 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "change-state" #f 84 11 84 23 ("invalidate-view" "next-state" "previous-state" "if" "state" "set!" "reverse?")}
        {Lisp-Entry "previous-state" #f 89 11 89 25 ("'none" "displayed" "'displayed" "validated" "'validated" "none" "case" "state")}
        {Lisp-Entry "next-state" #f 96 11 96 21 ("'none" "validated" "'validated" "displayed" "'displayed" "none" "case" "state")}
        {Lisp-Entry "Validated-Color" #f 103 14 103 29 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "Validated-Color-Grayed" #f 106 14 106 36 ("blue:" "101" "green:" "154" "red:" "Color")}
        {Lisp-Entry "draw-check" #f 110 11 110 21 ("draw-check" "state-color" "set-color" "none" "'none" "state" "eq?" "unless" "grayed?" "v" "h" "surface")}
        {Lisp-Entry "state-color" #f 116 11 116 22 ("Validated-Color" "Validated-Color-Grayed" "validated" "Black" "Dark" "name:" "Color" "if" "displayed" "state" "case" "grayed?")}}}})
"Toggle-Tool"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Toggle-Tool.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Toggle-Tool" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Toggle-Tool" #f 47 7 47 18 ("Image-Tool")
        {Lisp-Entry "selected?" #f 50 12 50 21 ("set-selected?" "get-selected?")}
        {Lisp-Entry "default-size" #f 53 11 53 23 ("22" "Dimension")}
        {Lisp-Entry "draw-frame" #f 62 11 62 21 ("nextmethod" "draw-pushed" "out-pushed" "highlighted" "inactive" "get-state" "memq?" "selected?" "and" "if" "surface")}
        {Lisp-Entry "draw-tool" #f 68 11 68 20 ("enabled?:" "image" "disabled-image" "draw" "not" "get-enabled?" "enabled?" "1" "2" "pushed" "'pushed" "get-state" "eq?" "selected?" "or" "if" "offset" "let" "context" "surface")}
        {Lisp-Entry "draw-background" #f 76 11 76 26 ("nextmethod" "Light-Background" "name:" "Color" "fill-rect" "get-bounds" "bounds" "selected?" "if" "get-state" "state" "let" "context" "surface")}
        {Lisp-Entry "up" #f 89 11 89 13 ("self" "process-action" "toggle-selected?" "pushed" "'pushed" "get-state" "eq?" "when")}
        {Lisp-Entry "get-selected?" #f 100 18 100 31 ("selected?")}
        {Lisp-Entry "set-selected?" #f 104 18 104 31 ("invalidate-view" "set!" "selected?" "neq?" "when" "flag")}
        {Lisp-Entry "toggle-selected?" #f 110 18 110 34 ("selected?" "not" "set-selected?")}}}})
"Tool-Button"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Tool-Button.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Tool-Button" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Tool-Button" #f 48 7 48 18 ("Layout-View")
        {Lisp-Entry "state" #f 55 8 55 13 ("inactive" "'inactive")}
        {Lisp-Entry "default-size" #f 58 11 58 23 ("22" "100" "Dimension")}
        {Lisp-Entry "mouse-activate?" #f 62 11 62 26 ()}
        {Lisp-Entry "get-state" #f 71 26 71 35 ("state")}
        {Lisp-Entry "set-state" #f 75 26 75 35 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "set-enabled?" #f 85 11 85 23 ("nextmethod" "inactive" "'inactive" "state" "set!" "not" "when" "flag")}
        {Lisp-Entry "draw" #f 96 11 96 15 ("draw-tool" "draw-frame" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-frame" #f 101 29 101 39 ("draw-out-pushed" "out-pushed" "draw-pushed" "pushed" "draw-highlighted" "highlighted" "draw-inactive" "inactive" "get-state" "case" "surface")}
        {Lisp-Entry "draw-inactive" #f 109 29 109 42 ("surface")}
        {Lisp-Entry "draw-highlighted" #f 113 29 113 45 ("dark-color" "light-color" "draw-border" "surface")}
        {Lisp-Entry "draw-pushed" #f 117 29 117 40 ("light-color" "dark-color" "draw-border" "surface")}
        {Lisp-Entry "light-color" #f 121 29 121 40 ("Light" "name:" "Color")}
        {Lisp-Entry "dark-color" #f 125 29 125 39 ("Dark" "name:" "Color")}
        {Lisp-Entry "draw-out-pushed" #f 129 29 129 44 ("surface")}
        {Lisp-Entry "draw-border" #f 133 11 133 22 ("line-to-no-stroke" "line-to" "move-to" "set-color" "get-bottom" "bottom" "1" "get-right" "-" "right" "top" "0" "left" "get-bounds" "rect" "let" "lower" "upper" "surface")}
        {Lisp-Entry "draw-tool" #f 149 29 149 38 ("context" "surface")}
        {Lisp-Entry "mouse-enter" #f 158 11 158 22 ("pushed" "'pushed" "out-pushed" "highlighted" "'highlighted" "set-state" "inactive" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-leave" #f 165 11 165 22 ("out-pushed" "'out-pushed" "pushed" "inactive" "'inactive" "set-state" "highlighted" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "and" "when")}
        {Lisp-Entry "mouse-down" #f 172 11 172 21 ("invalidate-view" "down" "pushed" "'pushed" "state" "set!" "get-enabled?" "when" "pos")}
        {Lisp-Entry "down" #f 179 26 179 30 ()}
        {Lisp-Entry "drag-up" #f 183 11 183 18 ("inactive" "'inactive" "out-pushed" "highlighted" "'highlighted" "set-state" "pushed" "get-state" "case" "up" "unwind-protect" "get-enabled?" "when" "rest" "pos")}
        {Lisp-Entry "up" #f 192 26 192 28 ()}}}})
"Tool-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tool" "Tool-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tool.Tool-Preferences" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Tool-Preferences" #f 46 7 46 23 ("title:" "Frame-Preferences")
        {Lisp-Entry "can-rename-component?" #f 58 11 58 32 ()}
        {Lisp-Entry "can-delete-component?" #f 62 11 62 32 ()}
        {Lisp-Entry "can-move-component?" #f 66 11 66 30 ()}
        {Lisp-Entry "can-copy-component?" #f 70 11 70 30 ()}}}})
"Tool-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tool" "Tool-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tool.Tool-View" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Tool-View" #f 45 7 45 16 ("Layout-View")
        {Lisp-Entry "install-in-host" #f 53 11 53 26 ("get-process" "apply-preferences" "when" "tool-preferences" "preferences" "let" "nextmethod" "host")}
        {Lisp-Entry "confirm-close" #f 65 11 65 24 ("save-session" "rest")}
        {Lisp-Entry "save-session" #f 69 11 69 23 ("get-host" "save-preferences" "get-application" "get-preferences-designer" "designer" "when" "tool-preferences" "pref" "let")}}}})
"Toolbar"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Toolbar.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Toolbar" #f 37 19 37 39 ("jazz")
      {Lisp-Entry "Toolbar" #f 45 7 45 14 ("View")
        {Lisp-Entry "flow-layout" #f 48 8 48 19 ()}
        {Lisp-Entry "install" #f 51 11 51 18 ("layout-view" "layout-insets" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "rest")}
        {Lisp-Entry "mouse-activate?" #f 57 11 57 26 ()}
        {Lisp-Entry "layout-insets" #f 61 29 61 42 ("0" "3" "2" "Rect")}
        {Lisp-Entry "layout" #f 65 11 65 17 ("get-height" "get-width" "children" "flow-layout" "layout")}}}})
"Toolbar-Host"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "hosting" "Toolbar-Host.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.hosting.Toolbar-Host" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Toolbar-Host" #f 49 7 49 19 ("Host-View")
        {Lisp-Entry "size-change" #f 57 11 57 22 ("2" "Rect" "insets:" "invalidate-border" "invalidate-top" "nextmethod" "size")}
        {Lisp-Entry "on-close" #f 63 11 63 19 ("selection" "'selection" "first-child" "Pad-View" "close" "get-location" "set-location" "layout-view" "zoom" "'zoom" "set-mode" "begin" "Workspace-Splitter" "if" "when" "first-view" "other" "let" "Splitter-View" "is?" "cond" "get-toplevel" "set-parent" "set-visible?" "function" "with-locked-update" "grand" "get-parent" "parent" "get-host" "host" "let*" "evt")}
        {Lisp-Entry "mouse-activate?" #f 94 11 94 26 ()}
        {Lisp-Entry "activate-focus" #f 98 11 98 25 ("invalidate-caption" "nextmethod")}
        {Lisp-Entry "deactivate-focus" #f 103 11 103 27 ("invalidate-caption" "nextmethod")}
        {Lisp-Entry "layout" #f 113 11 113 17 ("Dimension" "new" "set-size" "0" "Point" "set-position" "get-height" "height" "get-width" "width" "let" "guest" "when")}
        {Lisp-Entry "menu-rect" #f 126 11 126 20 ("25" "1" "Rect" "new")}
        {Lisp-Entry "caption-rect" #f 130 11 130 23 ("24" "2" "get-width" "-" "1" "Rect" "new")}
        {Lisp-Entry "top-rect" #f 134 11 134 19 ("25" "2" "get-width" "-" "1" "Rect" "new")}
        {Lisp-Entry "invalidate-top" #f 143 11 143 25 ("top-rect" "invalidate-rect")}
        {Lisp-Entry "invalidate-caption" #f 147 11 147 29 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "mouse-down" #f 156 11 156 21 ("toggle-docked" "caption-rect" "select-menu" "menu-rect" "in-rect?" "cond" "pos")}
        {Lisp-Entry "toggle-docked" #f 163 11 163 24 ("select-next" "function" "with-locked-update" "get-h" "<" "text-width" "28" "+" "h" "Label" "name:" "Font" "font" "get-title" "title" "Pad-View" "is?" "when" "get-parent" "parent" "get-host" "host" "let*" "pos")}
        {Lisp-Entry "double-click" #f 176 11 176 23 ("unzoom" "zoom" "split" "'split" "get-state" "=" "function" "with-locked-update" "Splitter-View" "when" "splitter" "Pad-View" "is?" "if" "target" "get-parent" "parent" "get-host" "host" "let*" "pos")}
        {Lisp-Entry "select-menu" #f 194 11 194 22 ("25" "2" "Point" "track-popup-menu" "layout-menu" "host:" "list" "properties:" "on-select" "'on-select" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "icon:" "title:" "parent:" "Label-Item" "class-of" "host-icon" "icon" "get-title" "title" "get-guest" "guest" "docked" "function" "for-each" "Context-Menu" "new" "menu" "let" "when" "collect-others" "others" "get-host" "host" "let*")}
        {Lisp-Entry "collect-others" #f 209 11 209 25 ("get-children" "/=" "hst" "function" "collect-if" "Pad-View" "is?" "when" "get-host" "get-parent" "pad" "let" "host")}
        {Lisp-Entry "on-select" #f 217 11 217 20 ("focus-host" "set-selection" "function" "with-locked-update" "host:" "get-property" "host" "get-host" "get-parent" "parent" "let" "evt")}}}})
"Toolbar-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Toolbar-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Toolbar-Preferences" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Toolbar-Preferences" #f 47 7 47 26 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "model-name" #f 50 12 50 22 ("generate")}
        {Lisp-Entry "presentation-property?" #f 62 11 62 33 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 66 11 66 27 ("name" "format" "title" "either")}
        {Lisp-Entry "set-presentation" #f 70 11 70 27 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "apply-preferences" #f 79 11 79 28 ("set-visible?" "get-guest" "client-activate" "location" "set-location" "set-title" "title" "when" "set-parent" "name" "singleton-toolbar" "host" "get-class" "class" "let*" "assert" "parent")}
        {Lisp-Entry "get-class" #f 91 11 91 20 ("either" "autoload-class" "cdr" "and" "name" "model-name" "assq" "pair" "get-toolbar-classes" "classes" "workspaces" "'workspaces" "get-preferences" "pref" "let*")}
        {Lisp-Entry "get-class-image" #f 104 16 104 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" #f 108 11 108 37 ("model-name" "location")}}}})
"Tools-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tool" "Tools-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tool.Tools-Preferences" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Tools-Preferences" #f 46 7 46 24 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" #f 58 11 58 32 ()}
        {Lisp-Entry "can-delete-component?" #f 62 11 62 32 ()}
        {Lisp-Entry "can-move-component?" #f 66 11 66 30 ()}
        {Lisp-Entry "can-copy-component?" #f 70 11 70 30 ()}}}})
"Tooltip"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Tooltip.jazz"} 1245732632
    {Lisp-Entry "jazz.ui.window.Tooltip" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Tooltip" #f 46 7 46 14 ("Transient")}}})
"Tooltip-Context"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Tooltip-Context.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Tooltip-Context" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Tooltip-Context" #f 45 7 45 22 ("Object")
        {Lisp-Entry "view" #f 48 8 48 12 ()}
        {Lisp-Entry "text" #f 49 8 49 12 ()}
        {Lisp-Entry "bounds" #f 50 8 50 14 ()}
        {Lisp-Entry "position" #f 51 8 51 16 ()}
        {Lisp-Entry "font" #f 52 8 52 12 ()}
        {Lisp-Entry "tooltip" #f 53 8 53 15 ()}
        {Lisp-Entry "initialize" #f 56 11 56 21 ("font~self" "position~self" "bounds~self" "text~self" "view~self" "set!" "nextmethod" "font" "font:" "position" "position:" "bounds" "bounds:" "text" "text:" "view" "view:")}
        {Lisp-Entry "print" #f 65 11 65 16 ("font" "position" "bounds" "text" "view" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-view" #f 76 18 76 26 ("view")}
        {Lisp-Entry "get-text" #f 80 18 80 26 ("text")}
        {Lisp-Entry "get-bounds" #f 84 18 84 28 ("bounds")}
        {Lisp-Entry "get-position" #f 88 18 88 30 ("position")}
        {Lisp-Entry "get-font" #f 92 18 92 26 ("font")}
        {Lisp-Entry "get-tooltip" #f 96 18 96 29 ("tooltip")}
        {Lisp-Entry "set-tooltip" #f 100 18 100 29 ("tooltip" "set!" "tt")}}}})
"Tooltip-Label"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Tooltip-Label.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.view.Tooltip-Label" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Tooltip-Label" #f 48 7 48 20 ("Caption" "name:" "Font" "font:" "View")
        {Lisp-Entry "preferred-size" #f 55 11 55 25 ("length" "13" "*" "3" "get-width" "+" "new" "localize" "font" "text-extent" "str" "function" "map" "maximum" "extent" "20" "100" "Dimension" "null?" "if" "standard-title" "title" "let")}
        {Lisp-Entry "standard-title" #f 68 11 68 25 ("equal?" "test:" "list" "title" "null/pair?" "if" "remove-trailing")}
        {Lisp-Entry "Background-Color" #f 81 14 81 30 ("Tooltip" "name:" "Color")}
        {Lisp-Entry "draw" #f 85 11 85 15 ("13" "increase!" "localize" "draw-text" "str" "function" "for-each" "font" "set-font" "standard-title" "title" "1" "v" "2" "h" "let" "Black" "name:" "Color" "set-text-color" "Background-Color" "get-bounds" "fill-rect" "lv" "lh" "context" "surface")}}}})
"Tooltip-Text"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Tooltip-Text.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Tooltip-Text" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Tooltip-Text" #f 48 7 48 19 ("editable?:" "Tooltip" "Color" "background:" "text" "content" "name:" "flat?:" "vscroll?:" "hscroll?:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "get-text" #f 63 18 63 26 ("text" "'text" "locate")}}}})
"Tooltip-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Tooltip-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Tooltip-Text-View" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Tooltip-Text-View" #f 48 7 48 24 ("Label" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "4" "left-padding:" "Formatted-Text-View")
        {Lisp-Entry "install" #f 55 11 55 18 ("Variable" "Code" "Dark-Blue" "Hyperlink" "Reference" "Purple" "Comment" "Dark-Red" "Color" "color:" "Title" "Doc-Heading2" "Doc-Heading1" "Font" "font:" "Text-Style" "add-style" "Heading2" "Heading1" "Default" "base:" "Heading0" "name:" "Format" "add-format" "nextmethod" "rest")}
        {Lisp-Entry "get-context-menu" #f 73 11 73 27 ("new-text-context-menu")}}}})
"Toplevel"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Toplevel.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.Toplevel" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Toplevel" #f 49 7 49 15 ("visible?:" "Overlapped")
        {Lisp-Entry "fullscreen?" #f 52 12 52 23 ("set-fullscreen?" "get-fullscreen?")}
        {Lisp-Entry "caption-base" #f 53 12 53 24 ("set-caption-base" "get-caption-base")}
        {Lisp-Entry "caption" #f 54 12 54 19 ("set-caption" "get-caption")}
        {Lisp-Entry "caption?" #f 55 12 55 20 ("set-caption?" "get-caption?")}
        {Lisp-Entry "workspace-preferences" #f 58 8 58 29 ()}
        {Lisp-Entry "on-activate" #f 70 11 70 22 ("nextmethod" "toplevel-deactivate" "inactive" "'inactive" "eq?" "when" "kind")}
        {Lisp-Entry "prepare-root" #f 81 11 81 23 ()}
        {Lisp-Entry "get-workspace-preferences" #f 90 18 90 43 ("workspace-preferences")}
        {Lisp-Entry "set-workspace-preferences" #f 94 18 94 43 ("workspace-preferences" "set!" "preferences")}
        {Lisp-Entry "mouse-activate?" #f 103 11 103 26 ()}
        {Lisp-Entry "activate-app" #f 107 11 107 23 ("processed" "activate" "deactivate" "0" "=" "if" "get-application" "appl" "let" "Cancel-Signal" "catch" "status")}
        {Lisp-Entry "show" #f 116 11 116 15 ("simulate-mouse-move" "update-window" "workspace-installed" "show-undisplayed-message" "get-application" "appl" "show-restored" "show-maximized" "maximized" "restored" "'restored" "get-toplevel-state" "if" "case" "handle" "assert" "error?:" "get-preferences" "pref" "let" "set-visible-flag")}
        {Lisp-Entry "close-with-confirm" #f 130 11 130 29 ("get-process" "exit-process")}
        {Lisp-Entry "get-fullscreen?" #f 139 18 139 33 ("fullscreen?")}
        {Lisp-Entry "set-fullscreen?" #f 143 18 143 33 ("set!" "fullscreen?" "neq?" "when" "value")}
        {Lisp-Entry "get-caption-base" #f 153 18 153 34 ("caption-base")}
        {Lisp-Entry "set-caption-base" #f 157 18 157 34 ("invalidate-title" "caption-base" "set!" "value")}
        {Lisp-Entry "get-caption" #f 167 18 167 29 ("caption")}
        {Lisp-Entry "set-caption" #f 171 18 171 29 ("invalidate-title" "caption" "set!" "value")}
        {Lisp-Entry "get-caption?" #f 176 18 176 30 ("caption?")}
        {Lisp-Entry "set-caption?" #f 180 18 180 30 ("invalidate-title" "caption?" "set!" "value")}
        {Lisp-Entry "invalidate-title" #f 190 11 190 27 ("effective-title" "set-title")}
        {Lisp-Entry "effective-title" #f 194 29 194 44 ("format" "caption-base" "localize" "caption?" "caption" "not" "or" "if")}
        {Lisp-Entry "get-palettes" #f 205 18 205 30 ("children" "get-visible?" "Palette" "is?" "and" "window" "function" "collect-if")}}}})
"Transient"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Transient.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.Transient" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Transient" #f 45 7 45 16 ("Popup")}}})
"Tree-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Actions" #f 38 19 38 44 ("jazz")
      {Lisp-Entry "Tree-Actions" #f 47 7 47 19 ("next-aux" "prior-aux" "end-aux" "home-aux" "move-downward-aux" "move-upward-aux" "Return" ":alt" "on-properties" "properties" "Subtract" "on-collapse" "collapse" "Multiply" "on-expand-all" "expand-all" "Add" "on-expand" "expand" "Next" "on-next" "next" "Prior" "on-prior" "prior" "extend-end" "End" "on-end" "end" ":shift" "extend-home" "Home" "extend?:" "on-home" "home" "Down" "down" "move-downward" "Up" "Shortcut" "shortcut:" "up" "direction:" "on-move" ":focus" "Event-Handler" "action-handler:" "move-upward" "name:" "Actions")}}})
"Tree-Cell"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Cell.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Cell" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Tree-Cell" #f 45 7 45 16 ("Object")
        {Lisp-Entry "background" #f 48 18 48 28 ()}
        {Lisp-Entry "frame-color" #f 49 18 49 29 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("frame-color~self" "background~self" "set!" "nextmethod" "frame-color" "frame-color:" "background" "background:")}
        {Lisp-Entry "print" #f 58 11 58 16 ("frame-color" "background" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-background" #f 69 18 69 32 ("background")}
        {Lisp-Entry "set-background" #f 73 18 73 32 ("background" "set!" "value")}
        {Lisp-Entry "get-frame-color" #f 77 18 77 33 ("frame-color")}
        {Lisp-Entry "set-frame-color" #f 81 18 81 33 ("frame-color" "set!" "color")}}}})
"Tree-Cell-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Cell-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Cell-View" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Tree-Cell-View" #f 46 7 46 21 ("fill" "layout-type:" "Layout-View")
        {Lisp-Entry "draw-preserved?" #f 49 12 49 27 ("generate")}
        {Lisp-Entry "preserved-data" #f 50 12 50 26 ("generate")}
        {Lisp-Entry "edition-end-proc" #f 51 12 51 28 ("generate")}
        {Lisp-Entry "get-editor" #f 63 18 63 28 ("children" "car")}
        {Lisp-Entry "draw" #f 72 11 72 15 ("lv" "lh" "context" "surface")}}}})
"Tree-Column"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Column.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Column" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Tree-Column" #f 48 7 48 18 ("Component")
        {Lisp-Entry "title" #f 51 22 51 27 ("set-title" "get-title")}
        {Lisp-Entry "width" #f 52 22 52 27 ("set-width" "get-width" "0")}
        {Lisp-Entry "background" #f 53 22 53 32 ("set-background" "get-background")}
        {Lisp-Entry "justification" #f 54 22 54 35 ("set-justification" "get-justification" "head" "'head")}
        {Lisp-Entry "down?" #f 57 18 57 23 ()}
        {Lisp-Entry "title-vertical-offset" #f 58 18 58 39 ("2")}
        {Lisp-Entry "print" #f 61 11 61 16 ("width" "title" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-title" #f 74 18 74 27 ("title")}
        {Lisp-Entry "set-title" #f 78 18 78 27 ("self" "invalidate-column-header" "get-header" "header" "let" "parent" "get-player" "when" "title" "set!" "value")}
        {Lisp-Entry "get-width" #f 86 18 86 27 ("0" "width" "get-visible?" "if")}
        {Lisp-Entry "set-width" #f 90 18 90 27 ("invalidate-view" "parent" "invalidate-columns" "width" "set!" "value")}
        {Lisp-Entry "get-background" #f 96 18 96 32 ("background")}
        {Lisp-Entry "set-background" #f 100 18 100 32 ("parent" "invalidate-view" "background" "set!" "value")}
        {Lisp-Entry "get-justification" #f 105 18 105 35 ("justification")}
        {Lisp-Entry "set-justification" #f 109 18 109 35 ("parent" "invalidate-view" "justification" "set!" "just")}
        {Lisp-Entry "set-visible?" #f 114 18 114 30 ("invalidate-view" "parent" "invalidate-columns" "nextmethod" "flag")}
        {Lisp-Entry "set-title-vertical-offset" #f 120 18 120 43 ("title-vertical-offset" "set!" "offset")}
        {Lisp-Entry "new-empty-cell" #f 129 26 129 40 ()}
        {Lisp-Entry "find-part" #f 138 26 138 35 ("content" "'content" "pos" "cell")}
        {Lisp-Entry "content-rect" #f 147 29 147 41 ("0" "Rect" "new" "get-level" "content-h" "h" "let" "height" "width" "cell" "row")}
        {Lisp-Entry "content-h" #f 152 29 152 38 ("0" "level")}
        {Lisp-Entry "text-h" #f 156 29 156 35 ("0" "level")}
        {Lisp-Entry "sort-value" #f 165 29 165 39 ("get-sort-value" "cell" "row")}
        {Lisp-Entry "get-header-tooltip" #f 174 26 174 44 ("self" "parent" "get-column-tooltip")}
        {Lisp-Entry "get-cell-tooltip" #f 178 26 178 42 ("cell")}
        {Lisp-Entry "header-down" #f 187 26 187 37 ("self" "parent" "get-header" "invalidate-column-header" "down?" "set!" "pos")}
        {Lisp-Entry "header-move" #f 192 26 192 37 ("pos")}
        {Lisp-Entry "header-up" #f 196 26 196 35 ("header-click" "self" "parent" "get-header" "invalidate-column-header" "down?" "set!" "pos")}
        {Lisp-Entry "header-double-click" #f 202 26 202 45 ("header-down" "pos")}
        {Lisp-Entry "mouse-down" #f 206 26 206 36 ("complete-mouse-down" "parent" "acquire-focus" "control?" "shift?" "pos" "cell")}
        {Lisp-Entry "complete-mouse-down" #f 211 26 211 45 ("parent" "process-selection" "control?" "shift?" "pos" "cell")}
        {Lisp-Entry "drag-move" #f 215 26 215 35 ("pos" "cell")}
        {Lisp-Entry "drag-up" #f 219 26 219 33 ("pos" "cell")}
        {Lisp-Entry "double-click" #f 223 26 223 38 ("pos" "cell")}
        {Lisp-Entry "context-menu" #f 227 26 227 38 ("parent" "call-context-menu" "pos" "cell")}
        {Lisp-Entry "layout-cell" #f 236 26 236 37 ("Dimension" "set-size" "Point" "new" "set-position" "View" "is?" "when" "height" "width" "v" "h" "cell" "row")}
        {Lisp-Entry "Text-Color" #f 247 14 247 24 ("Black" "name:" "Color")}
        {Lisp-Entry "paint-cell" #f 251 18 251 28 ("draw-cell" "function" "with-transform" "selected?:" "getf" "selected?" "let" "sc?" "sc" "sv" "sh" "cell" "row" "height" "width" "v" "h" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-cell" #f 258 26 258 35 ("0" "draw-at" "height" "width" "cell" "row" "context" "surface")}
        {Lisp-Entry "draw-at" #f 262 26 262 33 ("draw-background" "height" "width" "v" "h" "cell" "row" "context" "surface")}
        {Lisp-Entry "draw-background" #f 266 26 266 41 ("frame-rect" "get-frame-color" "frame-color" "Tree-Cell" "is?" "when" "fill-rect" "background-color" "cycle-debug-color!" "*debug-paint*" "if" "color" "0" "Rect" "new" "rect" "let" "height" "width" "cell" "row" "context" "surface")}
        {Lisp-Entry "background-color" #f 276 11 276 27 ("White" "name:" "Color" "get-cell-background" "get-background" "Tree-Cell" "is?" "essay" "either" "parent" "selection-color" "cell-selected?" "and" "if" "selected?:" "getf" "selected?" "let" "context" "cell")}
        {Lisp-Entry "cell-selected?" #f 285 21 285 35 ("row" "0" "node" "get-selection" "get-col" "get-row" "=" "and" "function" "some?" "self" "column-rank" "col-rank" "row-rank:" "getf" "row-rank" "let" "cell" "parent" "get-selection-mode" "case" "context")}
        {Lisp-Entry "draw-header" #f 298 26 298 37 ("down?" "title" "localize" "draw-header-at" "flat?" "spaced?" "sorted" "height" "width" "v" "h" "context" "surface")}
        {Lisp-Entry "draw-header-at" #f 302 11 302 25 ("draw-raised-button" "draw-sunken-button" "if" "flat?" "spaced?" "sorted" "down?" "title" "height" "width" "v" "h" "surface")}
        {Lisp-Entry "draw-raised-button" #f 308 11 308 29 ("draw-sorted" "draw-text" "Black" "name:" "Color" "set-text-color" "parent" "header-color" "background" "either" "fill-rect" "rect" "bottom" "right" "outer:" "rectangle" "'rectangle" "left" "top" "edges:" "raised" "'raised" "inner:" "draw-edge" "smaller" "header-title-h" "text-h" "0" "1" "expand-rect" "inner" "+" "Rect" "new" "outer" "let*" "-2" "-1" "if" "thick" "let" "flat?" "spaced?" "sorted" "title" "height" "width" "v" "h" "surface")}
        {Lisp-Entry "header-title-h" #f 328 29 328 43 ("justification" "4" "-" "justify-title" "2" "+" "title" "width" "surface")}
        {Lisp-Entry "justify-title" #f 332 21 332 34 ("get-width" "justify" "get-text-extent" "extent" "let" "justification" "title" "width" "surface")}
        {Lisp-Entry "draw-sorted" #f 337 11 337 22 ("down" "'down" "descending" "up" "'up" "draw-arrow-tip" "ascending" "case" "4" "size" "6" "+" "get-text-width" "width" "let*" "Dark" "name:" "Color" "set-color" "when" "sorted" "title" "v" "h" "surface")}
        {Lisp-Entry "draw-sunken-button" #f 349 11 349 29 ("draw-sorted" "2" "draw-text" "Black" "set-text-color" "parent" "header-color" "background" "either" "fill-rect" "frame-rect" "Dark" "name:" "Color" "set-color" "1" "header-title-h" "text-h" "-1" "inflate-rect" "inner" "+" "Rect" "new" "outer" "let*" "flat?" "spaced?" "sorted" "title" "height" "width" "v" "h" "surface")}
        {Lisp-Entry "get-class-image" #f 366 16 366 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-debugged" #f 375 26 375 38 ("values" "pos" "cell")}}}})
"Tree-Drag-Source"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Drag-Source.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Drag-Source" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Tree-Drag-Source" #f 45 7 45 23 ("Drag-Source")
        {Lisp-Entry "row" #f 48 8 48 11 ()}
        {Lisp-Entry "col" #f 49 8 49 11 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("col~self" "row~self" "set!" "nextmethod" "apply" "others" "col" "row" "bind-keywords" "rest")}
        {Lisp-Entry "get-row" #f 64 18 64 25 ("row")}
        {Lisp-Entry "get-col" #f 68 18 68 25 ("col")}
        {Lisp-Entry "get-cell" #f 72 18 72 26 ("col" "row" "view" "row-rank" "Cell" "new")}}}})
"Tree-Drop-Target"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Drop-Target.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Drop-Target" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Tree-Drop-Target" #f 45 7 45 23 ("Drop-Target")
        {Lisp-Entry "row" #f 48 8 48 11 ()}
        {Lisp-Entry "col" #f 49 8 49 11 ()}
        {Lisp-Entry "quarter" #f 50 8 50 15 ()}
        {Lisp-Entry "part" #f 51 8 51 12 ()}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("part~self" "quarter~self" "col~self" "row~self" "set!" "nextmethod" "apply" "others" "'row" "part" "quarter" "col" "row" "bind-keywords" "rest")}
        {Lisp-Entry "print" #f 63 11 63 16 ("part" "quarter" "col" "row" "view" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-row" #f 74 18 74 25 ("row")}
        {Lisp-Entry "get-col" #f 78 18 78 25 ("col")}
        {Lisp-Entry "get-cell" #f 82 18 82 26 ("col" "row" "view" "row-rank" "Cell" "new")}
        {Lisp-Entry "get-quarter" #f 86 18 86 29 ("quarter")}
        {Lisp-Entry "get-part" #f 90 18 90 26 ("part")}}}})
"Tree-Embedded-Presentation-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Embedded-Presentation-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Embedded-Presentation-Text-View" #f 37 19 37 68 ("jazz")
      {Lisp-Entry "Tree-Embedded-Presentation-Text-View" #f 48 7 48 43 ("Label" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Plain-Text-View")
        {Lisp-Entry "tree" #f 51 8 51 12 ()}
        {Lisp-Entry "set-tree" #f 63 18 63 26 ("tree" "set!" "t")}
        {Lisp-Entry "get-tree" #f 72 11 72 19 ("tree")}
        {Lisp-Entry "get-cell" #f 76 11 76 19 ("get-tree" "get-edited-cell")}
        {Lisp-Entry "get-cell-row" #f 80 11 80 23 ("get-cell" "get-row")}
        {Lisp-Entry "get-cell-col" #f 84 11 84 23 ("get-cell" "get-col")}
        {Lisp-Entry "return-press" #f 93 11 93 23 ("end-edition" "key")}
        {Lisp-Entry "tab-press" #f 97 11 97 20 ("modifiers" "key")}
        {Lisp-Entry "up-arrow-move" #f 102 11 102 24 ("get-cell-col" "get-cell-row" "Cell" "new" "get-tree" "select-up" "scroll?" "extend?")}
        {Lisp-Entry "down-arrow-move" #f 106 11 106 26 ("get-cell-col" "get-cell-row" "Cell" "new" "get-tree" "select-down" "scroll?" "extend?")}
        {Lisp-Entry "end-edition" #f 110 11 110 22 ("get-tree" "end-edition" "player" "when")}
        {Lisp-Entry "focus-validate" #f 121 11 121 25 ("select-all" "message-box" "end-edition" "begin" "empty-string?" "not" "if" "get-string-content" "text" "let" "view")}}}})
"Tree-Embedded-Search-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Embedded-Search-Text-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Embedded-Search-Text-Actions" #f 37 19 37 65 ("jazz")
      {Lisp-Entry "Tree-Embedded-Search-Text-Actions" #f 46 7 46 40 ("Return" ":control" "Shortcut" "shortcut:" "on-end-edition" ":focus" "Event-Handler" "action-handler:" "end-edition" "name:" "Actions")}}})
"Tree-Embedded-Search-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Embedded-Search-Text-View.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Embedded-Search-Text-View" #f 37 19 37 62 ("jazz")
      {Lisp-Entry "Tree-Embedded-Search-Text-View" #f 48 7 48 37 ("IDE-Text-View")
        {Lisp-Entry "tree" #f 51 8 51 12 ()}
        {Lisp-Entry "set-tree" #f 59 18 59 26 ("tree" "set!" "t")}
        {Lisp-Entry "get-tree" #f 68 11 68 19 ("tree")}
        {Lisp-Entry "get-cell" #f 72 11 72 19 ("get-tree" "get-edited-cell")}
        {Lisp-Entry "get-cell-values" #f 76 11 76 26 ("get-col" "get-row" "values" "get-cell" "cell" "let")}
        {Lisp-Entry "focus-actions" #f 86 11 86 24 ("nextmethod" "tree-embedded-search-text" "'tree-embedded-search-text" "find-actions" "cons")}
        {Lisp-Entry "upward-compound" #f 92 11 92 26 ("get-guest" "toggle-ignore-case")}
        {Lisp-Entry "focus-lose" #f 101 11 101 21 ("end-edition" "nextmethod" "view")}
        {Lisp-Entry "return-press" #f 106 11 106 23 ("on-search" "bell" "get-find-targets" "null?" "if" "get-guest" "get-search" "search" "end-edition" "get-frame" "frame" "let" "evt")}
        {Lisp-Entry "on-end-edition" #f 115 11 115 25 ("end-edition" "key")}
        {Lisp-Entry "tab-press" #f 119 11 119 20 ("end-edition" "select-cell" "when" "Cell" "new" "cell" "+" "modulo" "else" "-1" "cond" "row-direction" "1" "-" "max-col" "navigate-tab" "0" "=" "get-cell-values" "col" "row" "receive" "get-visible-count" "height" "get-columns-count" "width" "neq?" "to-navigable?" "navigated-view" "to-view" "find-tab-manager" "tab-manager" "get-tree" "tree" "let*" "end-completion" "not" "has-completion?" "and" "if" "shift-key?" "shift?" "let" "modifiers" "key")}
        {Lisp-Entry "left-arrow-move" #f 145 11 145 26 ("nextmethod" "get-cell" "get-tree" "select-left" "if" "word?" "extend?")}
        {Lisp-Entry "right-arrow-move" #f 151 11 151 27 ("nextmethod" "get-cell" "get-tree" "select-right" "if" "word?" "extend?")}
        {Lisp-Entry "up-arrow-move" #f 157 11 157 24 ("get-cell" "get-tree" "select-up" "scroll?" "extend?")}
        {Lisp-Entry "down-arrow-move" #f 161 11 161 26 ("get-cell" "get-tree" "select-down" "scroll?" "extend?")}
        {Lisp-Entry "end-edition" #f 165 11 165 22 ("get-tree" "end-edition" "player" "when")}}}})
"Tree-Header"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Header.jazz"} 1245800477
    {Lisp-Entry "jazz.ui.tree.Tree-Header" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Tree-Header" #f 55 7 55 18 ("Header-View")
        {Lisp-Entry "resizing?" #f 58 18 58 27 ()}
        {Lisp-Entry "resize-last-h" #f 59 18 59 31 ()}
        {Lisp-Entry "resized-column" #f 60 18 60 32 ()}
        {Lisp-Entry "resized-column-ref" #f 61 18 61 36 ("0")}
        {Lisp-Entry "finish" #f 64 11 64 17 ("get-scroll-client" "client" "set!" "'content" "child" "content" "let" "invalidate-layout" "nextmethod" "rest")}
        {Lisp-Entry "get-column" #f 76 18 76 28 ("get-columns" "element" "n")}
        {Lisp-Entry "column-rank" #f 80 18 80 29 ("get-columns" "find" "column")}
        {Lisp-Entry "borders-left" #f 89 11 89 23 ("car" "borders")}
        {Lisp-Entry "borders-right" #f 93 11 93 24 ("cdr" "borders")}
        {Lisp-Entry "get-borders" #f 97 18 97 29 ("get-columns-borders" "element" "col")}
        {Lisp-Entry "column-width" #f 101 18 101 30 ("-" "get-borders" "right" "left" "bind" "col")}
        {Lisp-Entry "get-columns" #f 111 11 111 22 ("client" "get-columns")}
        {Lisp-Entry "get-columns-count" #f 115 11 115 28 ("client" "get-columns-count")}
        {Lisp-Entry "get-columns-borders" #f 119 11 119 30 ("client" "get-columns-borders")}
        {Lisp-Entry "invalidate-columns" #f 123 11 123 29 ("client" "invalidate-columns")}
        {Lisp-Entry "invalidate-borders" #f 127 11 127 29 ("client" "invalidate-borders")}
        {Lisp-Entry "layout-column" #f 131 11 131 24 ("client" "layout-column" "column")}
        {Lisp-Entry "end-resizing" #f 135 11 135 23 ("invalidate-view" "layout-scrollee" "client" "when")}
        {Lisp-Entry "size-change" #f 146 11 146 22 ("layout-scrollee" "client" "when" "nextmethod" "size")}
        {Lisp-Entry "set-scroller" #f 157 11 157 23 ("client" "set-scroller" "view")}
        {Lisp-Entry "get-scroll-client" #f 161 11 161 28 ("client" "get-scroll-client")}
        {Lisp-Entry "get-hscroll-amount" #f 165 11 165 29 ("0" "get-position" "get-h" "client" "if")}
        {Lisp-Entry "on-vscroll" #f 170 11 170 21 ("on-vscroll" "client" "when" "orientation" "thumb-pos" "code")}
        {Lisp-Entry "on-hscroll" #f 176 11 176 21 ("on-hscroll" "client" "when" "orientation" "thumb-pos" "code")}
        {Lisp-Entry "draw" #f 186 11 186 15 ("get-columns" "+" "increase!" "draw-header" "descending" "'descending" "ascending" "'ascending" "=" "and" "if" "sorted" "get-width" "width" "column" "function" "for-each" "rank" "flat-look?" "flat?" "0" "/=" "spaced?" "get-sort-ascending?" "sort-ascending?" "get-sorted-column" "sorted-column" "get-column-spacing" "cs" "get-hscroll-amount" "h" "let*" "client" "Dark" "name:" "Color" "fill-rect" "get-top" "<" "when" "get-header-height" "height" "get-logical-clipper" "clipper" "let" "lv" "lh" "context" "surface")}
        {Lisp-Entry "cursor-update" #f 213 11 213 24 (":arrow" ":west-east" "set-cursor" "get-hscroll-amount" "get-h" "-" "resized-col" "resizing?" "or" "if" "pos")}
        {Lisp-Entry "calculate-tooltip-bounds" #f 224 11 224 35 ("0" "header-rect" "offset-rect" "get-hscroll-amount" "hscrolled" "let" "column")}
        {Lisp-Entry "get-tooltip-bounds" #f 229 11 229 29 ("get-column" "calculate-tooltip-bounds" "when" "h->col" "col" "get-h" "-" "h" "get-hscroll-amount" "hscrolled" "let*" "pos")}
        {Lisp-Entry "get-tooltip-context" #f 237 11 237 30 ("bounds:" "text:" "self" "view:" "Tooltip-Context" "new" "0" "header-rect" "offset-rect" "rect" "get-header-tooltip" "text" "get-column" "column" "let" "h->col" "col" "get-h" "-" "h" "get-hscroll-amount" "hscrolled" "let*" "when" "pos")}
        {Lisp-Entry "mouse-down" #f 258 11 258 21 ("resized-column-ref" "resized-column" "resize-last-h" "resizing?" "set!" "header-coordinates" "header-down" "get-column" "column" "h->col" "not" "if" "resized-col" "col" "get-v" "v" "get-hscroll-amount" "get-h" "-" "h" "let" "acquire-capture" "when" "pos")}
        {Lisp-Entry "drag-move" #f 275 11 275 20 ("update-view" "get-height" "2" "Rect" "new" "scroll-view" "layout-column" "invalidate-borders" "invalidate-columns" "set-width" ">=" "resized-column" "get-width" "new-width" "set!" "0" "/=" "resized-column-ref" "get-borders" "borders-right" "+" "left" "resize-last-h" "delta" "header-coordinates" "header-move" "get-column" "column" "h->col" "col" "resizing?" "not" "if" "get-v" "v" "get-hscroll-amount" "get-h" "-" "h" "let" "when" "pos")}
        {Lisp-Entry "drag-up" #f 298 11 298 18 ("release-capture" "end-resizing" "get-client" "set-filled-column" "resized-column" "set!" "header-coordinates" "header-up" "get-column" "column" "h->col" "col" "resizing?" "not" "if" "get-v" "v" "get-hscroll-amount" "get-h" "-" "h" "let" "when" "rest" "pos")}
        {Lisp-Entry "double-click" #f 314 11 314 23 ("header-coordinates" "header-double-click" "get-column" "column" "h->col" "col" "get-v" "v" "get-hscroll-amount" "get-h" "-" "h" "let" "when" "pos")}
        {Lisp-Entry "header-coordinates" #f 324 11 324 29 ("header-position" "point-" "pos" "col")}
        {Lisp-Entry "resized-col" #f 328 11 328 22 ("continuation-return" "4" "near?" "when" "right" "left" "bind" "get-columns-count" "below" "0" "from" "col" "get-columns-borders" "in" "borders" "for" "loop" "return" "function" "continuation-capture" "h")}
        {Lisp-Entry "invalidate-column-header" #f 344 18 344 42 ("invalidate-rect" "header-rect" "rect" "let" "get-finished?" "when" "column")}
        {Lisp-Entry "header-rect" #f 350 18 350 29 ("get-height" "0" "Rect" "new" "column-rank" "get-borders" "right" "left" "bind" "column")}
        {Lisp-Entry "header-position" #f 360 11 360 26 ("0" "get-borders" "borders-left" "Point" "new" "col")}
        {Lisp-Entry "h->col" #f 364 11 364 17 ("continuation-return" "<=" ">=" "and" "when" "right" "left" "bind" "get-columns-count" "below" "0" "from" "n" "get-columns-borders" "in" "borders" "for" "loop" "return" "function" "continuation-capture" "h")}
        {Lisp-Entry "get-class-image" #f 380 16 380 31 ("Bitmap-Resource")}}}})
"Tree-Highlight"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Highlight.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Highlight" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Tree-Highlight" #f 45 7 45 21 ("Object")
        {Lisp-Entry "row" #f 48 8 48 11 ("generate")}
        {Lisp-Entry "col" #f 49 8 49 11 ("generate")}
        {Lisp-Entry "insert" #f 50 8 50 14 ("generate")}
        {Lisp-Entry "outer-color" #f 51 8 51 19 ("generate")}
        {Lisp-Entry "inner-color" #f 52 8 52 19 ("generate")}
        {Lisp-Entry "initialize" #f 55 11 55 21 ("inner-color~self" "outer-color~self" "insert~self" "col~self" "row~self" "set!" "nextmethod" "inner-color" "inner-color:" "outer-color" "outer-color:" "insert" "insert:" "col" "row")}
        {Lisp-Entry "compare-object" #f 64 11 64 25 (":not-equal" "else" ":equal" "get-insert" "insert" "get-col" "col" "=" "get-row" "row" "eq?" "and" ":incompatible" "Tree-Highlight" "is-not?" "cond" "target")}}}})
"Tree-Image"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Image.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Image" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Tree-Image" #f 45 7 45 17 ("Tree-Label")
        {Lisp-Entry "image" #f 48 18 48 23 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("image~self" "set!" "nextmethod" "apply" "others" "image" "bind-keywords" "rest")}
        {Lisp-Entry "print" #f 57 11 57 16 ("image" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-image" #f 68 18 68 27 ("image")}
        {Lisp-Entry "set-image" #f 72 18 72 27 ("image" "set!" "value")}
        {Lisp-Entry "get-sort-value" #f 81 11 81 25 ("image")}}}})
"Tree-Image-Column"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Image-Column.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Image-Column" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Tree-Image-Column" #f 45 7 45 24 ("Tree-Label-Column")
        {Lisp-Entry "draw-cell" #f 53 11 53 20 ("draw-title" "draw-image" "1" "2" "16" "-" "quotient" "+" "0" "if" "h" "get-title" "title" "get-icons-cache" "icons" "get-application" "appl" "let*" "when" "get-image" "image" "let" "draw-background" "height" "width" "cell" "row" "context" "surface")}
        {Lisp-Entry "title-h" #f 66 11 66 18 ("18" "title" "width" "surface")}
        {Lisp-Entry "sort-value" #f 75 11 75 21 ("get-name" "not" "if" "get-image" "image" "let" "get-title" "either" "cell" "row")}}}})
"Tree-Label"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Label.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Label" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Tree-Label" #f 45 7 45 17 ("Tree-Cell")
        {Lisp-Entry "title" #f 48 18 48 23 ()}
        {Lisp-Entry "font" #f 49 18 49 22 ()}
        {Lisp-Entry "color" #f 50 18 50 23 ()}
        {Lisp-Entry "initialize" #f 53 11 53 21 ("color~self" "font~self" "set!" "set-title" "nextmethod" "apply" "others" "color" "font" "title" "bind-keywords" "rest")}
        {Lisp-Entry "print" #f 61 11 61 16 ("title" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-title" #f 72 18 72 27 ("title")}
        {Lisp-Entry "set-title" #f 76 18 76 27 ("->string" "Locales" "is?" "if" "essay" "title" "set!" "value")}
        {Lisp-Entry "get-font" #f 80 18 80 26 ("font")}
        {Lisp-Entry "set-font" #f 84 18 84 26 ("font" "set!" "value")}
        {Lisp-Entry "get-color" #f 88 18 88 27 ("color")}
        {Lisp-Entry "set-color" #f 92 18 92 27 ("color" "set!" "c")}
        {Lisp-Entry "get-sort-value" #f 101 11 101 25 ("title")}}}})
"Tree-Label-Column"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Label-Column.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Label-Column" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Tree-Label-Column" #f 47 7 47 24 ("Tree-Column")
        {Lisp-Entry "padding" #f 50 22 50 29 ("set-padding" "get-padding" "0")}
        {Lisp-Entry "new-empty-cell" #f 58 11 58 25 ("title:" "Tree-Label" "new")}
        {Lisp-Entry "get-padding" #f 67 18 67 29 ("padding")}
        {Lisp-Entry "set-padding" #f 71 18 71 29 ("parent" "invalidate-view" "padding" "set!" "value")}
        {Lisp-Entry "get-cell-tooltip" #f 81 11 81 27 ("get-title" "Tree-Label" "is?" "when" "cell")}
        {Lisp-Entry "Default-Color" #f 91 14 91 27 ("Black" "name:" "Color")}
        {Lisp-Entry "draw-at" #f 95 11 95 18 ("draw-title" "nextmethod" "height" "width" "v" "h" "cell" "row" "context" "surface")}
        {Lisp-Entry "draw-title" #f 100 29 100 39 ("title-vertical-offset" "0" "else" "-1" "-" "tail" "padding" "1" "head" "justification" "case" "title-h" "+" "draw-text" "set-font" "when" "cell-color" "set-text-color" "get-color" "color" "get-font" "font" "get-title" "either" "localize" "title" "let" "height" "width" "v" "h" "cell" "row" "context" "surface")}
        {Lisp-Entry "title-h" #f 110 29 110 36 ("justification" "justify-title" "title" "width" "surface")}
        {Lisp-Entry "cell-color" #f 114 21 114 31 ("Default-Color" "selected-text-color" "if" "parent" "focused?" "determine-color" "essay" "either" "cell-selected?" "selected?:" "getf" "and" "selected?" "enabled?" "let" "context" "color")}
        {Lisp-Entry "text-h" #f 122 11 122 17 ("1" "level")}}}})
"Tree-Node"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Node.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Node" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Tree-Node" #f 45 7 45 16 ("Tree-Label")
        {Lisp-Entry "image" #f 48 18 48 23 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("image~self" "set!" "break" "title:" "getf" "not" "when" "nextmethod" "apply" "others" "image" "bind-keywords" "rest")}
        {Lisp-Entry "get-image" #f 65 18 65 27 ("image")}
        {Lisp-Entry "set-image" #f 69 18 69 27 ("image" "set!" "img")}}}})
"Tree-Node-Column"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Node-Column.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Node-Column" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Tree-Node-Column" #f 48 7 48 23 ("Tree-Label-Column")
        {Lisp-Entry "controls?" #f 51 22 51 31 ("set-controls?" "get-controls?")}
        {Lisp-Entry "toplevel-controls?" #f 52 22 52 40 ("set-toplevel-controls?" "get-toplevel-controls?")}
        {Lisp-Entry "display-images?" #f 53 22 53 37 ("set-display-images?" "get-display-images?")}
        {Lisp-Entry "image-offset" #f 56 8 56 20 ("1")}
        {Lisp-Entry "get-controls?" #f 64 18 64 31 ("controls?")}
        {Lisp-Entry "set-controls?" #f 68 18 68 31 ("parent" "invalidate-view" "controls?" "set!" "flag")}
        {Lisp-Entry "get-toplevel-controls?" #f 73 18 73 40 ("toplevel-controls?")}
        {Lisp-Entry "set-toplevel-controls?" #f 77 18 77 40 ("parent" "invalidate-view" "toplevel-controls?" "set!" "flag")}
        {Lisp-Entry "get-display-images?" #f 82 18 82 37 ("display-images?")}
        {Lisp-Entry "set-display-images?" #f 86 18 86 37 ("parent" "invalidate-view" "display-images?" "set!" "flag")}
        {Lisp-Entry "set-image-offset" #f 91 18 91 34 ("parent" "invalidate-view" "image-offset" "set!" "offset")}
        {Lisp-Entry "new-empty-cell" #f 101 11 101 25 ("title:" "Tree-Node" "new")}
        {Lisp-Entry "complete-mouse-down" #f 110 11 110 30 ("process-selection" "content" "expand/collapse" "control" "find-part" "case" "parent" "get-row" "row" "let" "control?" "shift?" "pos" "cell")}
        {Lisp-Entry "double-click" #f 117 11 117 23 ("get-row" "parent" "expand/collapse" "pos" "cell")}
        {Lisp-Entry "find-part" #f 126 11 126 20 ("content" "'content" "control" "'control" "13" "<" "4" "+" ">=" "toplevel-controls?" "controls?" "and" "if" "parent" "get-row" "get-level" "level-h" "base" "get-v" "v" "get-h" "h" "let" "pos" "cell")}
        {Lisp-Entry "row-text-left" #f 140 21 140 34 ("1" "get-level" "text-h" "-" "row")}
        {Lisp-Entry "text-rect" #f 144 21 144 30 ("4" "+" "0" "Rect" "new" "get-columns-count" "<=" "or" "if" "min" "get-width" "title-width" "text-extent" "extent" "let" "parent" "get-font" "either" "font" "2" "max" "1" "get-level" "text-h" "-" "h" "get-title" "localize" "title" "let*" "force-node?" "height" "width" "cell" "row")}
        {Lisp-Entry "control-rect" #f 160 21 160 33 ("13" "4" "+" "Rect" "new" "get-level" "control-h" "h" "let" "top" "row")}
        {Lisp-Entry "plus/minus-rect" #f 165 21 165 36 ("12" "5" "+" "Rect" "new" "get-level" "control-h" "h" "let" "top" "row")}
        {Lisp-Entry "image-rect" #f 170 21 170 31 ("16" "0" "+" "Rect" "new" "get-level" "image-h" "h" "let" "top" "row")}
        {Lisp-Entry "layout-cell" #f 180 11 180 22 ("-" "Dimension" "set-size" "+" "Point" "new" "set-position" "get-level" "image-h" "offset" "let" "View" "is?" "when" "height" "width" "v" "h" "cell" "row")}
        {Lisp-Entry "Line-Color" #f 192 14 192 24 ("Dark" "name:" "Color")}
        {Lisp-Entry "draw-cell" #f 196 11 196 20 ("0" "draw-title" "draw-image" "draw-control" "draw-level" "draw-background" "height" "width" "cell" "row" "context" "surface")}
        {Lisp-Entry "draw-background" #f 204 11 204 26 ("frame-rect" "get-frame-color" "frame-color" "gradient-fill" "" "apply" "pair?" "selection-color" "get-left" "r" "when" "get-background" "background" "text-rect" "cell-selected?" "and" "selected?:" "getf" "selected?" "White" "name:" "Color" "parent" "get-cell-background" "either" "cycle-debug-color!" "*debug-paint*" "if" "fill-rect" "0" "Rect" "new" "rect" "let" "height" "width" "cell" "row" "context" "surface")}
        {Lisp-Entry "draw-level" #f 227 18 227 28 ("Black" "name:" "Color" "solid" "'solid" "get-father" "set!" "19" "horz-adjusted" "odd?" "and" "half-adjusted" "-1" "top-adjusted" "2" "fxround/" "half" "let*" "8" "+" "line" "0" "even?" "adjust" "when" "/=" "if" "visible-sibling-follows?" "sf?" "level-h" "h" "1" "downto" "from" "n" "for" "loop" "get-position" "get-v" "row-v" "get-level" "level" "let" "Line-Color" "set-color" "alternate" "'alternate" "set-style" "height" "width" "cell" "row" "surface")}
        {Lisp-Entry "draw-control" #f 250 21 250 33 ("expanded" "'expanded" "get-state" "neq?" "11" "8" "6" "line" "Black" "set-color" "White" "name:" "Color" "fill-rect" "12" "5" "parent" "get-background" "background" "Line-Color" "frame-rect" "13" "4" "+" "Rect" "new" "rect" "control-h" "h" "let" "toplevel-controls?" "not" "or" "controls?" "expandable?" "and" "when" "0" "=" "toplevel?" "get-level" "level" "let*" "height" "width" "cell" "row" "surface")}
        {Lisp-Entry "draw-image" #f 267 11 267 21 ("0" "parent" "get-portfolio" "draw-image" "display-images?" "and" "when" "get-image" "image" "get-level" "image-h" "h" "let" "height" "width" "cell" "row" "context" "surface")}
        {Lisp-Entry "draw-title" #f 274 11 274 21 ("title-vertical-offset" "draw-text" "set-font" "when" "get-color" "cell-color" "set-text-color" "get-font" "font" "get-level" "text-h" "get-title" "either" "localize" "title" "let" "height" "width" "v" "h" "cell" "row" "context" "surface")}
        {Lisp-Entry "level-h" #f 284 11 284 18 ("16" "toplevel-controls?" "0" "=" "or" "if" "parent" "get-indentation" "*" "-" "level")}
        {Lisp-Entry "control-h" #f 289 11 289 20 ("level-h" "level")}
        {Lisp-Entry "image-h" #f 293 18 293 25 ("image-offset" "display-images?" "16" "toplevel-controls?" "0" "/=" "or" "if" "control-h" "+" "level")}
        {Lisp-Entry "content-h" #f 297 11 297 20 ("0" "14" "display-images?" "if" "image-h" "+" "level")}
        {Lisp-Entry "text-h" #f 301 11 301 17 ("4" "3" "0" "16" "display-images?" "if" "image-h" "+" "level")}
        {Lisp-Entry "get-debugged" #f 310 11 310 23 ("find-part" "values" "pos" "cell")}}}})
"Tree-Path"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Path.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Path" #f 37 19 37 41 ("jazz")
      {Lisp-Entry "Tree-Path" #f 45 7 45 16 ("Tree-Label")
        {Lisp-Entry "father-row" #f 48 18 48 28 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("update-path-title" "father-row~self" "set!" "nextmethod" "apply" "rest" "father-row")}
        {Lisp-Entry "get-father-row" #f 62 18 62 32 ("father-row")}
        {Lisp-Entry "update-path-title" #f 71 18 71 35 ("list" "join" "if" "set-title" "father-path" "get-title" "father-title" "get-path-child" "path-cell" "get-node-child" "title-cell" "let*" "0" "get-level" ">" "father-row" "when")}}}})
"Tree-Path-Column"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Path-Column.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Path-Column" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Tree-Path-Column" #f 45 7 45 23 ("Tree-Label-Column")}}})
"Tree-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "Tree-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.Tree-Preferences" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Tree-Preferences" #f 47 7 47 23 ("Bitmap-Resource" "icon:" "title:" "Preferences")
        {Lisp-Entry "sort-case-sensitive?" #f 50 12 50 32 ("generate")}
        {Lisp-Entry "can-rename-component?" #f 62 11 62 32 ()}
        {Lisp-Entry "can-delete-component?" #f 66 11 66 32 ()}
        {Lisp-Entry "can-move-component?" #f 70 11 70 30 ()}
        {Lisp-Entry "can-copy-component?" #f 74 11 74 30 ()}
        {Lisp-Entry "get-categorized-properties" #f 78 11 78 37 ("sort-case-sensitive?")}
        {Lisp-Entry "property-presentation" #f 82 16 82 37 ("nextmethod" "else" "sort-case-sensitive?" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 88 11 88 27 ("nextmethod" "else" "Boolean-Row" "new" "sort-case-sensitive?" "field-name" "case" "property")}}}})
"Tree-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-Row.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.tree.Tree-Row" #f 37 19 37 40 ("jazz")
      {Lisp-Entry "Tree-Row" #f 46 7 46 15 ("Outline-Row")
        {Lisp-Entry "user-data" #f 49 22 49 31 ("set-user-data" "get-user-data")}
        {Lisp-Entry "node-width" #f 52 18 52 28 ("generate")}
        {Lisp-Entry "default-size" #f 55 11 55 23 ("17" "100" "Dimension")}
        {Lisp-Entry "initialize" #f 64 11 64 21 ("set-visible-flag" "set-finished?" "set-installed?" "user-data~self" "set-children" "row-height~self" "state~self" "level~self" "father~self" "parent~self" "set!" "nextmethod" "user-data" "user-data:" "visible?" "visible?:" "children" "children:" "row-height" "row-height:" "collapsed" "'collapsed" "state" "state:" "level" "level:" "father" "father:" "parent" "parent:")}
        {Lisp-Entry "get-tree" #f 83 18 83 26 ("parent")}
        {Lisp-Entry "get-user-data" #f 87 18 87 31 ("user-data")}
        {Lisp-Entry "set-user-data" #f 91 18 91 31 ("user-data" "set!" "data")}
        {Lisp-Entry "set-children" #f 100 11 100 23 ("add-child" "self" "set-parent" "View" "if" "child" "function" "for-each" "get-title" "localize" "parent" "get-font" "text-width" "node-width" "set!" "Tree-Node" "is?" "car" "node" "let" "not-null?" "when" "list")}
        {Lisp-Entry "replace-child" #f 112 11 112 24 ("parent" "layout-scrollee" "insert!" "self" "begin" "remove!" "set!" "set-parent" "View" "is?" "if" "children" "element" "current" "let" "child" "rank")}
        {Lisp-Entry "get-child" #f 125 18 125 27 ("children" "element" "rank")}
        {Lisp-Entry "get-node-child" #f 129 18 129 32 ("children" "Tree-Node" "is?" "child" "function" "find-if")}
        {Lisp-Entry "get-path-child" #f 135 18 135 32 ("children" "Tree-Path" "is?" "child" "function" "find-if")}
        {Lisp-Entry "flatten" #f 146 18 146 25 ("sons" "flatten" "disconnect" "flatten-row?" "if" "son" "function" "for-each" "get-tree" "tree" "let" "root-row")}
        {Lisp-Entry "disconnect" #f 155 18 155 28 ("0" "set-descendants-level" "position:" "change-father" "get-spine" "first" "son-rank" "position" "get-tree" "get-root-row" "root-row" "get-father-row" "essay" "father-row" "get-path-child" "path" "let*")}
        {Lisp-Entry "reconnect" #f 164 18 164 27 ("change-father" "get-level" "1" "+" "set-descendants-level" "get-father-row" "father-row" "let")}
        {Lisp-Entry "disconnected?" #f 170 26 170 39 ("father" "/=" "essay" "get-father-row" "father-row" "let")}
        {Lisp-Entry "get-father-row" #f 175 26 175 40 ("get-father-row" "essay" "get-path-child" "path" "let")}
        {Lisp-Entry "auto-collapsable?" #f 185 26 185 43 ("collapsable?")}
        {Lisp-Entry "layout" #f 194 18 194 24 ("get-columns" "+" "increase!" "self" "layout-cell" "get-width" "width" "cell" "column" "function" "for-each" "get-effective-height" "height" "get-column-spacing" "cs" "0" "h" "children" "and" "when" "get-tree" "tree" "let")}
        {Lisp-Entry "get-effective-width" #f 208 11 208 30 ("node-width")}
        {Lisp-Entry "context-menu" #f 217 26 217 38 ("pos")}
        {Lisp-Entry "double-click" #f 221 26 221 38 ("pos")}
        {Lisp-Entry "draw-children" #f 230 11 230 24 ("children" "get-columns" "increase!" "get-v" "get-h" "paint-drawing" "get-position" "pos" "draw-control" "draw-level" "Tree-Node-Column" "get-preserved-data" "get-draw-preserved?" "Tree-Cell-View" "is?" "and" "self" "+" "paint-cell" "View" "is-not?" "if" "get-width" "width" "let" "get-visible?" "when" "cell" "column" "function" "for-each" "get-height" "height" "get-column-spacing" "cs" "get-tree" "tree" "v" "0" "h" "let*" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-selection" #f 253 11 253 25 ("surface")}
        {Lisp-Entry "find-by-title" #f 262 18 262 31 ("sons" "first-child" "get-title" "string=?" "row" "function" "find-if" "title")}
        {Lisp-Entry "auto-inplace?" #f 273 26 273 39 ()}
        {Lisp-Entry "auto-expand" #f 277 26 277 37 ("self" "parent" "expand/collapse" "expandable?" "when")}
        {Lisp-Entry "auto-select" #f 282 26 282 37 ()}
        {Lisp-Entry "auto-collapse" #f 286 26 286 39 ("self" "parent" "collapse" "collapsable?" "when")}}}})
"Tree-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "tree" "Tree-View.jazz"} 1246096647
    {Lisp-Entry "jazz.ui.tree.Tree-View" #f 38 19 38 41 ("jazz")
      {Lisp-Entry "Tree-View" #f 66 7 66 16 ("White" "name:" "Color" "background:" "Selection-Provider" "Outline-View")
        {Lisp-Entry "delayed-autorow" #f 69 14 69 29 ()}
        {Lisp-Entry "portfolio" #f 73 22 73 31 ("set-portfolio" "get-portfolio")}
        {Lisp-Entry "show-header?" #f 74 22 74 34 ("set-show-header?" "get-show-header?")}
        {Lisp-Entry "selection-mode" #f 76 22 76 36 ("set-selection-mode" "get-selection-mode" "row" "'row")}
        {Lisp-Entry "multiple-selection?" #f 77 22 77 41 ("set-multiple-selection?" "get-multiple-selection?")}
        {Lisp-Entry "can-select-empty?" #f 78 22 78 39 ("set-can-select-empty?" "get-can-select-empty?")}
        {Lisp-Entry "show-unfocused-selection?" #f 79 22 79 47 ("set-show-unfocused-selection?" "get-show-unfocused-selection?")}
        {Lisp-Entry "auto-expand/collapse?" #f 80 22 80 43 ("set-auto-expand/collapse?" "get-auto-expand/collapse?")}
        {Lisp-Entry "cell-background" #f 81 22 81 37 ("set-cell-background" "get-cell-background")}
        {Lisp-Entry "empty-background" #f 82 22 82 38 ("set-empty-background" "get-empty-background")}
        {Lisp-Entry "filled-column" #f 83 22 83 35 ("set-filled-column" "get-filled-column")}
        {Lisp-Entry "column-spacing" #f 84 22 84 36 ("set-column-spacing" "get-column-spacing" "0")}
        {Lisp-Entry "reorderable?" #f 85 22 85 34 ("set-reorderable?" "get-reorderable?")}
        {Lisp-Entry "content" #f 86 22 86 29 ("set-content" "get-content")}
        {Lisp-Entry "columns" #f 89 18 89 25 ()}
        {Lisp-Entry "node-column" #f 90 18 90 29 ()}
        {Lisp-Entry "sorted-column" #f 91 18 91 31 ("generate")}
        {Lisp-Entry "sort-ascending?" #f 92 18 92 33 ("generate")}
        {Lisp-Entry "selection-pivot" #f 93 18 93 33 ()}
        {Lisp-Entry "highlighted" #f 94 18 94 29 ()}
        {Lisp-Entry "indentation" #f 95 18 95 29 ("16")}
        {Lisp-Entry "columns-borders" #f 96 18 96 33 ("generate")}
        {Lisp-Entry "columns-right" #f 97 18 97 31 ("generate" "0")}
        {Lisp-Entry "has-focus?" #f 98 18 98 28 ()}
        {Lisp-Entry "edited-cell" #f 99 18 99 29 ()}
        {Lisp-Entry "cell-editor" #f 100 18 100 29 ()}
        {Lisp-Entry "close-cell-editor?" #f 101 18 101 36 ()}
        {Lisp-Entry "auto-expanded-row" #f 102 18 102 35 ()}
        {Lisp-Entry "locator" #f 103 18 103 25 ("self" "Tree-Locator" "new")}
        {Lisp-Entry "selection-manager" #f 104 18 104 35 ("self" "Selection-Manager" "new")}
        {Lisp-Entry "finish" #f 116 11 116 17 ("invalidate-columns" "nextmethod" "rest")}
        {Lisp-Entry "destroy-component" #f 121 11 121 28 ("nextmethod" "end-edition")}
        {Lisp-Entry "add-child" #f 131 11 131 20 ("list" "append!" "columns" "set!" "Tree-Column" "is?" "when" "nextmethod" "child")}
        {Lisp-Entry "remove-child" #f 137 11 137 23 ("remove!" "columns" "set!" "Tree-Column" "is?" "when" "nextmethod" "child")}
        {Lisp-Entry "get-columns" #f 148 18 148 29 ("columns")}
        {Lisp-Entry "get-portfolio" #f 152 18 152 31 ("child" "set!" "Portfolio" "is?" "if" "portfolio" "when")}
        {Lisp-Entry "set-portfolio" #f 160 18 160 31 ("invalidate-view" "portfolio" "set!" "object")}
        {Lisp-Entry "get-show-header?" #f 165 18 165 34 ("show-header?")}
        {Lisp-Entry "set-show-header?" #f 169 18 169 34 ("show-header?" "set!" "value")}
        {Lisp-Entry "get-multiple-selection?" #f 173 18 173 41 ("multiple-selection?")}
        {Lisp-Entry "set-multiple-selection?" #f 177 18 177 41 ("invalidate-view" "multiple-selection?" "set!" "flag")}
        {Lisp-Entry "get-can-select-empty?" #f 182 18 182 39 ("can-select-empty?")}
        {Lisp-Entry "set-can-select-empty?" #f 186 18 186 39 ("invalidate-view" "can-select-empty?" "set!" "flag")}
        {Lisp-Entry "get-show-unfocused-selection?" #f 191 18 191 47 ("show-unfocused-selection?")}
        {Lisp-Entry "set-show-unfocused-selection?" #f 195 18 195 47 ("invalidate-view" "show-unfocused-selection?" "set!" "flag")}
        {Lisp-Entry "get-selection-mode" #f 200 18 200 36 ("selection-mode")}
        {Lisp-Entry "set-selection-mode" #f 204 18 204 36 ("invalidate-view" "selection-mode" "set!" "value")}
        {Lisp-Entry "get-auto-expand/collapse?" #f 209 18 209 43 ("auto-expand/collapse?")}
        {Lisp-Entry "set-auto-expand/collapse?" #f 213 18 213 43 ("auto-expand/collapse?" "set!" "flag")}
        {Lisp-Entry "get-filled-column" #f 217 18 217 35 ("filled-column")}
        {Lisp-Entry "set-filled-column" #f 221 18 221 35 ("filled-column" "set!" "value")}
        {Lisp-Entry "get-cell-background" #f 225 18 225 37 ("cell-background")}
        {Lisp-Entry "set-cell-background" #f 229 18 229 37 ("invalidate-view" "cell-background" "set!" "color")}
        {Lisp-Entry "get-empty-background" #f 234 18 234 38 ("empty-background")}
        {Lisp-Entry "set-empty-background" #f 238 18 238 38 ("invalidate-view" "empty-background" "set!" "color")}
        {Lisp-Entry "get-column-spacing" #f 243 18 243 36 ("column-spacing")}
        {Lisp-Entry "set-column-spacing" #f 247 18 247 36 ("invalidate-view" "column-spacing" "set!" "spacing")}
        {Lisp-Entry "get-reorderable?" #f 252 18 252 34 ("reorderable?")}
        {Lisp-Entry "set-reorderable?" #f 256 18 256 34 ("reorderable?" "set!" "flag")}
        {Lisp-Entry "get-indentation" #f 260 18 260 33 ("indentation")}
        {Lisp-Entry "get-cell-editor" #f 264 18 264 33 ("cell-editor")}
        {Lisp-Entry "focus-gain" #f 273 11 273 21 ("selection" "invalidate-selection" "has-focus?" "set!" "nextmethod" "old")}
        {Lisp-Entry "focus-lose" #f 279 11 279 21 ("selection" "invalidate-selection" "has-focus?" "set!" "nextmethod" "view")}
        {Lisp-Entry "selection-color" #f 285 18 285 33 ("unfocused-color" "focused-color" "focused?" "if")}
        {Lisp-Entry "focused-color" #f 291 29 291 42 ("Focused-Selection" "name:" "Color")}
        {Lisp-Entry "unfocused-color" #f 295 29 295 44 ("Unfocused-Selection" "name:" "Color")}
        {Lisp-Entry "selected-text-color" #f 299 18 299 37 ("Unfocused-Selected-Text" "Focused-Selected-Text" "name:" "Color" "focused?" "if")}
        {Lisp-Entry "focused?" #f 305 26 305 34 ("self" "has-parent?" "and" "get-focus" "focus" "let" "has-focus?" "or")}
        {Lisp-Entry "focus-and-select" #f 311 18 311 34 ("set-single-selection" "0" "get-visible-count" ">" "when" "acquire-focus")}
        {Lisp-Entry "focus-actions" #f 322 11 322 24 ("nextmethod" "tree" "'tree" "find-actions" "cons")}
        {Lisp-Entry "on-expand" #f 332 11 332 20 ("expand" "bell" "not" "if" "get-selected-row" "row" "let" "evt")}
        {Lisp-Entry "on-expand-all" #f 339 11 339 24 ("expand-all" "bell" "not" "if" "get-selected-row" "row" "let" "evt")}
        {Lisp-Entry "on-collapse" #f 346 11 346 22 ("collapse" "bell" "not" "if" "get-selected-row" "row" "let" "evt")}
        {Lisp-Entry "on-properties" #f 353 29 353 42 ("evt")}
        {Lisp-Entry "get-header" #f 362 18 362 28 ("Tree-Header" "is?" "when" "parent" "get-parent" "header" "let")}
        {Lisp-Entry "invalidate-header" #f 368 18 368 35 ("invalidate-view" "when" "get-header" "header" "let")}
        {Lisp-Entry "layout-column" #f 379 21 379 34 ("row-spacing" "increase!" "set!" "columns-right" "Dimension" "new" "set-size" "+" "rb" "get-effective-height" "height" "let*" "while" "0" "rt" "root-row" "get-next" "row" "let" "column")}
        {Lisp-Entry "layout-scrollee" #f 396 11 396 26 ("get-display-size" "fill-column" "filled-column" "when" "nextmethod")}
        {Lisp-Entry "scrollee-width" #f 402 11 402 25 ("get-display-width" "max" "fit-in-scroller?" "column-spacing" "visible-width" "+" "columns-right" "show-header?" "if" "width" "let")}
        {Lisp-Entry "update-visible" #f 416 11 416 25 ("update-visible-width" "update-visible-height")}
        {Lisp-Entry "update-visible-height" #f 421 11 421 32 ("visible-height" "visible-count" "row-spacing" "set!" "if" "get-effective-height" "increase!" "rank" "row" "function" "for-each-visible-row" "first?" "height" "0" "count" "let")}
        {Lisp-Entry "update-visible-width" #f 438 11 438 31 ("set-width" "cons" "list" "columns-borders" "columns-right" "visible-width" "set!" ">" "get-level" "text-h" "w" "get-node-width" "either" "+" "nw" "3" "highlight-border" "let*" "rank" "row" "function" "for-each-visible-row" "Tree-Node-Column" "node-column" "is?" "0" "width" "let" "show-header?" "not" "when")}
        {Lisp-Entry "scroll-invalidate" #f 456 11 456 28 ("invalidate-header" "nextmethod" "dv" "dh")}
        {Lisp-Entry "Highlighted-Outer-Color" #f 466 14 466 37 ("128" "blue:" "green:" "0" "red:" "Color" "new")}
        {Lisp-Entry "Highlighted-Inner-Color" #f 469 14 469 37 ("255" "blue:" "green:" "218" "red:" "Color" "new")}
        {Lisp-Entry "Highlighted-Insert-Color" #f 472 14 472 38 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "draw-outline" #f 476 11 476 23 ("draw-highlighted" "cycle-debug-color!" "*debug-paint*" "fill-rect" "0" "*" "fxround" "if" "Rect" "new" "rect" "let" "columns-right" "<=" "empty-background" "and" "when" "get-height" "height" "get-right" "right" "get-h" "get-left" "+" "left" "get-position" "pos" "let*" "nextmethod" "sc?" "sc" "sv" "sh" "lv" "lh" "clipper" "context" "surface")}
        {Lisp-Entry "draw-empty" #f 490 11 490 21 ("cycle-debug-color!" "*debug-paint*" "fill-rect" "*" "if" "fxround" "0" "Rect" "new" "rect" "let" "<=" "empty-background" "and" "when" "width" "rt" "sc?" "sc" "sv" "sh" "bottom" "top" "surface")}
        {Lisp-Entry "draw-highlighted" #f 496 11 496 27 ("highlighted" "Highlighted-Insert-Color" "fill-rect" "highlighted-insert-rect" "rect" "draw-highlighted-cell" "not" "if" "get-insert" "insert" "get-col" "col" "get-row" "row" "let" "highlight" "function" "for-each-reversed" "surface")}
        {Lisp-Entry "draw-highlighted-cell" #f 508 29 508 50 ("highlight-inner?" "when" "frame-rect" "highlighted-inner-color" "get-inner-color" "inner-color" "highlighted-outer-color" "get-outer-color" "either" "outer-color" "let" "1" "inflate-rect" "outer-rect" "highlighted-target-rect" "inner-rect" "let*" "highlight" "col" "row" "surface")}
        {Lisp-Entry "highlighted-outer-color" #f 518 29 518 52 ("Highlighted-Outer-Color")}
        {Lisp-Entry "highlighted-inner-color" #f 522 29 522 52 ("Highlighted-Inner-Color")}
        {Lisp-Entry "highlight-inner?" #f 526 29 526 45 ()}
        {Lisp-Entry "header-color" #f 530 26 530 38 ("Medium" "name:" "Color")}
        {Lisp-Entry "get-highlighted" #f 539 18 539 33 ("highlighted")}
        {Lisp-Entry "set-highlighted" #f 543 18 543 33 ("invalidate-highlighted" "set!" "old" "let" "highlighted" "equal?" "not" "when" "Tree-Highlight" "is?" "object" "function" "every?" "assert" "value")}
        {Lisp-Entry "invalidate-highlighted" #f 552 11 552 33 ("highlighted-insert-rect" "invalidate-rect" "invalidate-highlighted-cell" "not" "if" "get-insert" "insert" "get-col" "col" "get-row" "row" "let" "highlight" "function" "for-each" "highlighted")}
        {Lisp-Entry "invalidate-highlighted-cell" #f 563 29 563 56 ("invalidate-region" "2" "Rect" "insets:" "frame-region" "region" "1" "inflate-rect" "outer" "highlighted-target-rect" "inner" "with-closed" "col" "row")}
        {Lisp-Entry "highlighted-target-rect" #f 570 11 570 34 ("cell-rect" "0" "row-rank" "Cell" "new" "cell-text-rect" "not" "if" "col" "row")}
        {Lisp-Entry "highlighted-insert-rect" #f 576 11 576 34 ("get-bottom" "get-top" "case" "get-right" "get-left" "Rect" "bottom" "+" "top" "v" "function" "proc" "else" "-2" "cond" "offset" "2" "row-spacing" "fxround/" "half-spacing" "after" "'after" "1" "visible-count" "-" "after-last?" "before" "'before" "eq?" "=" "and" "before-first?" "0" "Cell" "new" "cell-content-rect" "row-rect" "rect" "row-rank" "rank" "get-height" "height" "let*" "insert" "row")}
        {Lisp-Entry "update-visible-width-incremental" #f 602 11 602 43 ("set!" "visible-width" ">" "when" "node-column" "text-h" "+" "let" "width" "level")}
        {Lisp-Entry "remove-row" #f 609 11 609 21 ("nextmethod" "close-auto-expanded-row" "auto-expanded-row" "eq?" "attached?" "and" "when" "row")}
        {Lisp-Entry "remove-every-row" #f 615 11 615 27 ("nextmethod" "highlighted" "set!" "set-sorted" "close-auto-expanded-row")}
        {Lisp-Entry "allow-start-drag?" #f 627 11 627 28 ("selection-manager" "allow-start-drag?" "nextmethod" "and" "pos")}
        {Lisp-Entry "mouse-down" #f 632 11 632 21 ("column" "set-selection" "can-select-empty?" "when" "not" "if" "control?" "shift?" "let" "acquire-capture" "acquire-focus" "get-multiple-selection?" "alt-down?" "control-down?" "shift-down?" "selection-manager" "mouse-down" "get-col" "get-column" "find-part" "part" "cell-coordinates" "essay" "pos" "view->tree" "cell" "let*" "view")}
        {Lisp-Entry "drag-move" #f 650 11 650 20 ("drag-move" "get-col" "get-column" "column" "cell-coordinates" "pos" "when" "view->tree" "cell" "let" "view")}
        {Lisp-Entry "drag-up" #f 658 11 658 18 ("reset" "self" "process-action" "release-capture" "drag-up" "focus-delegate" "auto-select" "auto-expand/collapse?" "complete-mouse-down" "mouse-down-part-control?" "get-col" "get-column" "column" "get-row" "row" "cell-coordinates" "pos" "not" "and" "when" "set-selection" "or" "control?" "shift?" "get-mouse-down-view" "unless" "either" "view->tree" "cell" "let" "alt-down?" "control-down?" "shift-down?" "selection-manager" "mouse-up" "dragging?" "view")}
        {Lisp-Entry "call-double-click" #f 682 11 682 28 ("double-click" "else" "nextmethod" "content" "mouse-down" "control" "case" "find-part" "part" "get-col" "get-column" "column" "cell-coordinates" "pos" "let*" "when" "view->tree" "cell" "let" "view")}
        {Lisp-Entry "double-click" #f 694 11 694 23 ("find-part" "part" "get-col" "get-column" "column" "cell-coordinates" "pos" "let*" "when" "view->tree" "cell" "let" "alt-down?" "control-down?" "shift-down?" "selection-manager" "double-click" "view")}
        {Lisp-Entry "context-menu" #f 704 11 704 23 ("self" "acquire" "context-menu" "get-row" "row" "when" "view->tree" "cell" "let" "view")}
        {Lisp-Entry "cell-coordinates" #f 711 11 711 27 ("cell-position" "-" "pos" "cell")}
        {Lisp-Entry "key-press" #f 720 11 720 20 ("locator" "enter" "0" "visible-count" ">" "alphanumeric?" "and" "when" "key")}
        {Lisp-Entry "locate-prefix" #f 730 18 730 31 ("locator" "locate" "prefix")}
        {Lisp-Entry "header-click" #f 739 26 739 38 ("ensure-displayed" "column-rank" "sort-column" "column")}
        {Lisp-Entry "set-sorted" #f 744 11 744 21 ("sort-ascending?" "set!" "get-column" "invalidate-column-header" "not" "and" "when" "sorted-column" "eqv?" "same?" "get-header" "header" "let" "ascending?" "column")}
        {Lisp-Entry "sort-column" #f 755 18 755 29 ("ensure-displayed?:" "root-row" "with-update-locked" "with-preserved-selection" "iterate" "reorder-sons" "get-sons" "sort-rows" "sorted" "let" "row" "function" "proc" "if" "direction" "letrec" "sort-predicates" "greater" "smaller" "equal" "receive" "sort-ascending?" "/=" "sorted-column" "not" "or" "set-sorted" "column")}
        {Lisp-Entry "sort-rows" #f 771 11 771 20 ("and" "or" "ny" "localize" "nx" "cy" "get-children" "cx" "let*" "ry" "rx" "sort" "get-column" "sort-value" "either" "element" "cell" "n" "children" "row" "function" "get-node" "0" "/=" "dual?" "let" "direction" "equal" "column" "rows")}
        {Lisp-Entry "get-content" #f 794 18 794 29 ("content")}
        {Lisp-Entry "set-content" #f 798 18 798 29 ("invalidate-cell" "set-title" "get-cell-data" "data" "Cell" "new" "cell" "let*" "do" "j" "info" "0" "from" "i" "in" "row" "for" "loop" "value")}
        {Lisp-Entry "with-context-click" #f 814 11 814 29 ("update-view" "auto-select" "auto-expand/collapse?" "memq?" "else" "list" "get-selection" "member?" "unless" "selection-mode" "case" "get-row" "row" "set-selection" "can-select-empty?" "when" "not" "if" "view->tree" "cell" "let" "acquire-focus" "proc" "pos")}
        {Lisp-Entry "flattened?" #f 839 18 839 28 ("get-visible?" "and" "get-path-column" "path-column" "let")}
        {Lisp-Entry "flatten/unflatten" #f 844 18 844 35 ("flatten" "unflatten" "with-update-locked" "function" "with-preserved-selection" "get-display-size" "fill-column" "set-visible?" "error" "not" "if" "flattened?" "get-path-column" "path-column" "let*")}
        {Lisp-Entry "get-path-column" #f 860 18 860 33 ("columns" "Tree-Path-Column" "is?" "column" "function" "find-if")}
        {Lisp-Entry "flatten-row?" #f 866 26 866 38 ("row")}
        {Lisp-Entry "flatten" #f 870 18 870 25 ("set-visible?" "disconnected?" "unless" "flatten" "disconnect" "flatten-row?" "if" "son" "function" "iterate" "root-row" "get-sons" "sons" "let")}
        {Lisp-Entry "unflatten" #f 883 18 883 27 ("set-visible?" "get-visible?" "unless" "reconnect" "disconnected?" "when" "son" "function" "root-row" "get-sons" "iterate")}
        {Lisp-Entry "get-tooltip?" #f 899 11 899 23 ()}
        {Lisp-Entry "calculate-tooltip-bounds" #f 903 11 903 35 ("cell-rect" "cell")}
        {Lisp-Entry "get-tooltip-bounds" #f 907 11 907 29 ("calculate-tooltip-bounds" "when" "view->tree" "cell" "let" "pos")}
        {Lisp-Entry "get-tooltip-context" #f 913 11 913 30 ("font:" "get-tooltip-position" "position:" "bounds:" "split-lines" "text:" "self" "view:" "Tooltip-Context" "new" "-2" "2" "=" "get-level" "content-h" "h" "calculate-tooltip-bounds" "rect" "rect-width" ">" "cell-tooltips?" "or" "5" "font" "+" "0" "text-width" "get-formatted-tooltip?" "formatted?" "content-rect" "get-height" "height" "column-width" "width" "let*" "get-cell-tooltip" "localize" "text" "get-col" "get-column" "column" "get-row" "row" "when" "view->tree" "cell" "let" "nextmethod" "get-tooltip-text" "if" "pos")}
        {Lisp-Entry "cell-tooltips?" #f 938 29 938 43 ()}
        {Lisp-Entry "get-cell-tooltip" #f 942 29 942 45 ("get-cell-tooltip" "get-cell-data" "data" "get-col" "get-column" "column" "let" "cell")}
        {Lisp-Entry "get-tooltip-position" #f 948 29 948 49 ("5" "rect-height" "10" "-" "Point" "new" "rect-position" "+" "v" "h" "rect" "text")}
        {Lisp-Entry "get-column-tooltip" #f 952 29 952 47 ("column")}
        {Lisp-Entry "get-drag-drop" #f 961 11 961 24 ("nextmethod" "mouse-down-point" "view->tree" "when")}
        {Lisp-Entry "get-drag-source" #f 971 11 971 26 ("get-drag-cell-source" "get-col" "col" "get-row" "row" "view->tree" "cell" "get-drag-position" "pos" "let*")}
        {Lisp-Entry "get-drag-cell-source" #f 979 29 979 49 ("col:" "row:" "get-drag-image" "image:" "position:" "self" "view:" "Tree-Drag-Source" "new" "col" "row" "pos")}
        {Lisp-Entry "get-drag-hotspot" #f 983 11 983 27 ("Point" "new" "get-position" "get-v" "top" "get-level" "node-column" "image-h" "left" "get-row" "row" "mouse-down-point" "view->tree" "cell" "let*")}
        {Lisp-Entry "get-drag-image" #f 991 11 991 25 ("get-node-image" "get-row" "row" "view->tree" "cell" "let*" "pos")}
        {Lisp-Entry "get-node-image" #f 997 18 997 32 ("image-name:" "portfolio:" "Image" "add-masked-bitmap" "no" "masked?:" "height:" "width:" "Portfolio" "get-bitmap" "set!" "2" "19" "draw-text" "Black" "set-text-color" "font" "set-font" "draw-mask" "portfolio" "draw-image" "White" "name:" "Color" "Rect" "fill-rect" "maskdc" "keep-bitmap?:" "Dimension" "size:" "Memory-Surface" "memdc" "with-closed" "mask" "unspecified" "bitmap" "get-height" "height" "get-node-column-index" "column-width" "width" "get-title" "title" "get-image" "image" "0" "Cell" "get-cell-data" "cell" "get-row" "row" "player" "Client-Surface" "new" "cdc" "let*" "n")}
        {Lisp-Entry "current-drop" #f 1031 11 1031 23 ("get-tree-target" "get-reorder-target" "get-source" "get-view" "self" "eq?" "reorderable?" "and" "nextmethod" "get-surrogate" "if" "pos" "drag-drop")}
        {Lisp-Entry "get-reorder-target" #f 1039 11 1039 29 ("get-row-reorder-target" "get-quarter" "eqv?" "get-view" "self" "eq?" "and" "if" "row" "get-target" "current" "get-row-quarter" "quarter" "get-row" "rank" "let*" "when" "height" "v" "cell" "function" "call-with-view->tree" "pos" "drag-drop")}
        {Lisp-Entry "get-row-quarter" #f 1052 11 1052 26 ("else" "3" "-" "1" "<" "cond" "2" "middle" "4" "/" "quarter" "let" "height" "v")}
        {Lisp-Entry "get-row-reorder-target" #f 1061 29 1061 51 ("part:" "row:" "self" "view:" "Tree-Drop-Target" "new" "after" "'after" "before" "'before" "=" "part" "let" "when" "cdr" "/=" "and" "not" "or" "accept?" "+" "2" "1" "if" "current-rank" "dst-rank" "get-user-data" "dst" "contiguous-range" "src-range" "get-source" "get-view" "get-selection" "src-selection" "selection" "row-rank" "memq?" "same-row?" "let*" "quarter" "row" "drag-drop")}
        {Lisp-Entry "get-tree-target" #f 1074 29 1074 44 ("get-tree-row-target" "pos" "drag-drop")}
        {Lisp-Entry "get-tree-row-target" #f 1078 21 1078 40 ("get-row-target" "get-view" "self" "eq?" "and" "if" "get-target" "current" "get-row" "row" "let" "when" "height" "v" "cell" "function" "call-with-view->tree" "pos" "drag-drop")}
        {Lisp-Entry "get-tree-cell-target" #f 1089 18 1089 38 ("get-cell-target" "=" "eq?" "and" "if" "/=" "self" "get-view" "neq?" "or" "get-target" "current" "get-source" "source" "get-col" "col" "get-row" "row" "let" "when" "height" "v" "cell" "function" "call-with-view->tree" "pos" "drag-drop")}
        {Lisp-Entry "get-row-target" #f 1103 29 1103 43 ("row" "drag-drop")}
        {Lisp-Entry "get-cell-target" #f 1107 29 1107 44 ("col" "row" "drag-drop")}
        {Lisp-Entry "highlight-drop" #f 1111 11 1111 25 ("get-highlighted" "cons" "set-highlighted" "Highlighted-Inner-Color" "inner-color:" "Highlighted-Outer-Color" "outer-color:" "insert:" "Tree-Highlight" "new" "highlight" "'after" "after" "'before" "before" "case" "insert" "get-part" "part" "get-col" "col" "get-row" "row" "let*" "Tree-Drop-Target" "is?" "when" "get-target" "target" "let" "pos" "drag-drop")}
        {Lisp-Entry "unhighlight-drop" #f 1127 11 1127 27 ("get-highlighted" "cdr" "set-highlighted" "drag-drop")}
        {Lisp-Entry "tab-stop-enter" #f 1136 11 1136 25 ()}
        {Lisp-Entry "on-move" #f 1145 11 1145 18 ("down-arrow-action" "down" "up-arrow-action" "up" "case" "get-modifiers" "modifiers" "direction:" "get-property" "direction" "let" "self" "invoke" "arrow-press-handler" "if" "evt")}
        {Lisp-Entry "on-home" #f 1155 18 1155 25 ("home-action" "evt")}
        {Lisp-Entry "home-action" #f 1159 18 1159 29 ("else" "Cell" "new" "list" "set-selection" "get-col" "selection-pivot" "if" "col" "cell" "selection-mode" "case" "0" ">" "when" "get-visible-count" "count" "let")}
        {Lisp-Entry "on-end" #f 1170 18 1170 24 ("end-action" "evt")}
        {Lisp-Entry "end-action" #f 1174 18 1174 28 ("else" "1" "-" "Cell" "new" "list" "set-selection" "get-col" "selection-pivot" "if" "col" "cell" "selection-mode" "case" "0" ">" "when" "get-visible-count" "count" "let")}
        {Lisp-Entry "left-arrow-press" #f 1185 11 1185 27 ("left-arrow-action" "modifiers")}
        {Lisp-Entry "left-arrow-action" #f 1189 18 1189 35 ("get-father" "row-rank" "list" "set-selection" "get-level" "expand/collapse" "expanded?" "bell" "not" "if" "get-selected-row" "row" "left" "'left" "1" "-" "get-row" "Cell" "new" "move-cell" "0" "get-col" ">" "selection-pivot" "let" "selection" "not-null?" "when" "cell" "selection-mode" "case" "user?" "modifiers")}
        {Lisp-Entry "up-arrow-press" #f 1206 11 1206 25 ("up-arrow-action" "modifiers")}
        {Lisp-Entry "up-arrow-action" #f 1210 18 1210 33 ("car" "row" "backward" "'backward" "move-selection" "null?" "if" "get-visible-count" "count" "else" "up" "'up" "get-col" "1" "-" "Cell" "new" "move-cell" "0" "get-row" ">" "selection-pivot" "let" "selection" "not-null?" "when" "cell" "selection-mode" "case" "user?" "modifiers")}
        {Lisp-Entry "right-arrow-press" #f 1227 11 1227 28 ("right-arrow-action" "modifiers")}
        {Lisp-Entry "right-arrow-action" #f 1231 18 1231 36 ("expand/collapse" "expanded?" "unless" "bell" "not" "if" "get-selected-row" "row" "else" "right" "'right" "+" "get-row" "Cell" "new" "move-cell" "1" "get-columns-count" "-" "get-col" "<" "selection-pivot" "let" "selection" "not-null?" "when" "cell" "selection-mode" "case" "user?" "modifiers")}
        {Lisp-Entry "down-arrow-press" #f 1246 11 1246 27 ("down-arrow-action" "modifiers")}
        {Lisp-Entry "down-arrow-action" #f 1250 18 1250 35 ("car" "row" "forward" "'forward" "move-selection" "0" ">" "null?" "if" "else" "down" "'down" "get-col" "+" "Cell" "new" "move-cell" "get-row" "<" "selection-pivot" "let" "selection" "not-null?" "when" "cell" "selection-mode" "case" "1" "-" "last" "get-visible-count" "count" "let*" "user?" "modifiers")}
        {Lisp-Entry "move-selection" #f 1268 11 1268 25 ("update-view" "auto-select" "auto-expand/collapse?" "user-origin?:" "list" "set-selection" "get-row" "row" "let" "acquire-focus" "when" "user?" "direction" "n")}
        {Lisp-Entry "move-cell" #f 1278 11 1278 20 ("update-view" "get-bottom" "down" "forward" "'forward" "get-right" "right" "get-top" "vertical-scroll-needed" "up" "0" "backward" "'backward" "get-left" "horizontal-scroll-needed" "Point" "new" "scroll" "left" "case" "cell-rect" "rect" "let" "user-origin?:" "ensure-displayed?:" "list" "set-selection" "acquire-focus" "when" "user?" "direction" "cell")}
        {Lisp-Entry "row-displayed?" #f 1291 11 1291 25 ("get-v" "=" "0" "Point" "new" "scroll-needed" "needed" "get-bottom" "bottom" "get-top" "top" "get-row" "row" "let*" "n")}
        {Lisp-Entry "cell-displayed?" #f 1299 11 1299 26 ("get-v" "0" "get-h" "=" "and" "get-bottom" "get-right" "get-top" "get-left" "Point" "new" "scroll-needed" "needed" "cell-rect" "rect" "let*" "cell")}
        {Lisp-Entry "select-all" #f 1306 11 1306 21 ("visible-count" "0" "naturals" "set-selection" "multiple-selection?" "when" "user-origin?" "user-origin?:")}
        {Lisp-Entry "fill-column" #f 1316 18 1316 29 ("invalidate-header" "Rect" "new" "invalidate-rect" "get-height" "bottom" "right" "top" "0" "2" "min" "left" "set-width" "columns-right" "increase!" "1" "tail" "set-cdr!" "car" "set-car!" "pair" "function" "for-each" "+" "new-right" "cdr" "old-right" "borders-right" "space-after-column" "get-width" "borders-width" "-" "max" "delta" "element" "filled-borders" "let*" "length" "<" "column-rank" "rank" "find-filled-column" "column" "let" "columns-borders" "not-null?" "filled-column" "and" "when" "size")}
        {Lisp-Entry "find-filled-column" #f 1342 11 1342 29 ("get-name" "column" "function" "find-if" "else" "last" "not-null?" "essay" "eq?" "columns" "element" "integer?" "cond" "name")}
        {Lisp-Entry "space-after-column" #f 1350 11 1350 29 ("1" "+" "columns-borders" "tail" "borders-width" "increase!" "borders" "function" "for-each" "0" "total" "let" "rank")}
        {Lisp-Entry "add-column" #f 1358 18 1358 28 ("invalidate-header" "get-display-size" "fill-column" "set-title" "set-width" "node-column" "set!" "Tree-Node-Column" "is?" "when" "self" "parent:" "new" "apply" "column" "let" "others" "width" "title" "Tree-Column" "class" "bind-keywords" "rest")}
        {Lisp-Entry "remove-column" #f 1372 18 1372 31 ("invalidate-header" "get-display-size" "fill-column" "invalidate-columns" "node-column" "eq?" "when" "remove!" "columns" "set!" "column")}
        {Lisp-Entry "remove-columns" #f 1381 18 1381 32 ("remove-all-columns" "remove-columns-preserving" "or" "if" "preserve" "preserve:" "preserve-node-column?" "preserve-node-column?:")}
        {Lisp-Entry "remove-all-columns" #f 1387 11 1387 29 ("invalidate-header" "node-column" "0" "columns-right" "columns-borders" "columns" "set!" "set-children" "remove-every-row")}
        {Lisp-Entry "remove-columns-preserving" #f 1397 11 1397 36 ("invalidate-header" "get-columns" "remove-column" "get-name" "memq?" "Tree-Node-Column" "is?" "and" "or" "unless" "column" "function" "for-each" "remove-every-row" "preserve" "preserve-node-column?")}
        {Lisp-Entry "invalidate-columns" #f 1407 11 1407 29 ("invalidate-borders" "invalidate-node-column" "columns" "not-null?" "when")}
        {Lisp-Entry "invalidate-node-column" #f 1413 11 1413 33 ("columns" "Tree-Node-Column" "is?" "column" "function" "find-if" "node-column" "set!")}
        {Lisp-Entry "invalidate-borders" #f 1419 21 1419 39 ("last" "borders-right" "columns-right" "columns" "column-spacing" "get-visible?" "when" "cons" "prog1" "+" "right" "get-width" "width" "let*" "column" "function" "map" "columns-borders" "set!" "0" "left" "let")}
        {Lisp-Entry "get-columns-count" #f 1432 18 1432 35 ("columns" "length")}
        {Lisp-Entry "get-column" #f 1436 18 1436 28 ("columns" "element" "n")}
        {Lisp-Entry "get-node-column" #f 1440 18 1440 33 ("node-column")}
        {Lisp-Entry "find-column" #f 1444 18 1444 29 ("find-component" "name")}
        {Lisp-Entry "get-node-column-index" #f 1448 18 1448 39 ("node-column" "column-rank")}
        {Lisp-Entry "column-rank" #f 1452 18 1452 29 ("columns" "find" "column")}
        {Lisp-Entry "row-class" #f 1461 11 1461 20 ("Tree-Row")}
        {Lisp-Entry "update-father-control" #f 1465 11 1465 32 ("image-rect" "node-column" "control-rect" "invalidate-rect" "get-height" "<" "row-top" "top" "row-rank" "rank" "let*" "row-visible?" "root-row" "neq?" "update-locked?" "not" "and" "when" "father")}
        {Lisp-Entry "add-empty-row" #f 1474 11 1474 24 ("columns" "new-empty-cell" "column" "function" "map" "children:" "add-row" "root-row" "either" "let" "father" "father:")}
        {Lisp-Entry "row-selected?" #f 1481 11 1481 24 ("memq?" "else" "selection" "get-row" "=" "function" "some?" "cell" "selection-mode" "case" "row")}
        {Lisp-Entry "row-draw-selected?" #f 1487 11 1487 29 ("show-unfocused-selection?" "has-focus?" "or" "nextmethod" "and" "row")}
        {Lisp-Entry "row-index" #f 1497 18 1497 27 ("continuation-return" "eq?" "when" "rank" "row" "for-each-visible-row" "return" "function" "continuation-capture" "target")}
        {Lisp-Entry "user-data-row" #f 1507 18 1507 31 ("continuation-return" "get-user-data" "when" "rank" "row" "for-each-row" "for-each-visible-row" "if" "return" "function" "continuation-capture" "visible?" "visible?:" "eqv?" "test" "test:" "data")}
        {Lisp-Entry "user-data-rows" #f 1517 18 1517 32 ("get-output" "put" "member?" "when" "get-user-data" "user-data" "rank" "row" "function" "for-each-row" "for-each-visible-row" "if" "List-Factory" "new" "fact" "let" "visible?" "visible?:" "eqv?" "test" "test:" "data-list")}
        {Lisp-Entry "user-data-index" #f 1528 18 1528 33 ("continuation-return" "get-user-data" "when" "rank" "row" "for-each-visible-row" "return" "function" "continuation-capture" "eqv?" "test" "test:" "data")}
        {Lisp-Entry "user-data-indexes" #f 1539 18 1539 35 ("get-output" "put" "member?" "when" "get-user-data" "user-data" "rank" "row" "function" "for-each-visible-row" "List-Factory" "new" "fact" "let" "eqv?" "test" "test:" "data-list")}
        {Lisp-Entry "select-user-data-row" #f 1549 18 1549 38 ("row-rank" "set-single-selection" "error" "not" "if" "user-data-row" "row" "let" "data")}
        {Lisp-Entry "get-cell-data" #f 1561 18 1561 31 ("get-child" "error" "selection" "set!" "get-children" "length" "get-col" ">=" "when" "get-row" "row" "let" "cell")}
        {Lisp-Entry "set-cell-data" #f 1570 18 1570 31 ("get-col" "get-children" "set-element!" "get-row" "row" "let" "data" "cell")}
        {Lisp-Entry "get-cell-title" #f 1575 18 1575 32 ("Tree-Cell-View" "get-title" "Tree-Label" "is?" "cond" "when" "get-cell-data" "data" "let" "cell")}
        {Lisp-Entry "set-cell-title" #f 1584 18 1584 32 ("Tree-Cell-View" "set-title" "Tree-Label" "is?" "cond" "when" "get-cell-data" "data" "let" "title" "cell")}
        {Lisp-Entry "invalidate-cell" #f 1593 18 1593 33 ("cell-rect" "invalidate-rect" "cell")}
        {Lisp-Entry "redraw-cell" #f 1597 18 1597 29 ("update-view" "cell-rect" "invalidate-rect" "cell")}
        {Lisp-Entry "expand/collapse" #f 1607 11 1607 26 ("nextmethod" "else" "dynamic-expand" "dynamic" "get-state" "case" "node-column" "control-rect" "invalidate-rect" "get-position" "get-v" "top" "let" "row")}
        {Lisp-Entry "dynamic-expand" #f 1615 18 1615 32 ("expand" "update-row" "row")}
        {Lisp-Entry "invalidate-expand" #f 1620 11 1620 28 ("plus/minus-rect" "control-rect" "0" "get-sons" "cardinality" "=" "and" "if" "node-column" "image-rect" "invalidate-rect" "dynamic?" "top" "row")}
        {Lisp-Entry "invalidate-collapse" #f 1627 11 1627 30 ("plus/minus-rect" "row-rect" "if" "node-column" "image-rect" "invalidate-rect" "selected?" "top" "row" "rank")}
        {Lisp-Entry "collapse-selection" #f 1634 11 1634 29 ("car" "not-null?" "selection-pivot" "row-selected?" "not" "and" "else" "cons" "set!" "selection" "member?" "unless" "get-col" "Cell" "new" "let" "when" "cell" "selection-mode" "case" "removed" "rank")}
        {Lisp-Entry "auto-expand/collapse" #f 1648 18 1648 38 ("rows->selection" "else" "not" "auto-collapse" "close-delayed-row" "if" "mouse-up?" "auto-toggle" "auto-inplace?" "delayed-autorow" "set!" "force?:" "get-spine" "essay" "new-spine:" "close-auto-expanded" "neq?" "auto-expanded-row" "and" "when" "selection-manager" "mouse-down?" "cond" "selection" "selection->rows" "selected-rows" "let" "function" "with-update-locked" "auto-toggle?" "auto-toggle?:" "close-auto-expanded?" "close-auto-expanded?:" "row")}
        {Lisp-Entry "auto-toggle" #f 1676 11 1676 22 ("auto-expand" "auto-expanded-row" "set!" "auto-collapse" "when" "expanded?" "if" "auto-toggle?" "row")}
        {Lisp-Entry "close-delayed-row" #f 1685 18 1685 35 ("auto-collapse" "memq?" "and" "if" "unless" "row" "function" "for-each-reversed" "set!" "done?" "get-spine" "old-spine" "let" "delayed-autorow" "when" "new-spine" "new-spine:")}
        {Lisp-Entry "close-auto-expanded" #f 1698 18 1698 37 ("auto-collapse" "auto-inplace?" "or" "memq?" "and" "if" "unless" "row" "function" "for-each-reversed" "set!" "done?" "get-spine" "old-spine" "let" "auto-expanded-row" "when" "force?" "force?:" "new-spine" "new-spine:")}
        {Lisp-Entry "close-auto-expanded-row" #f 1714 11 1714 34 ("set!" "auto-collapse" "auto-expanded-row" "when")}
        {Lisp-Entry "set-auto-expanded-row" #f 1721 18 1721 39 ("auto-expanded-row" "set!" "row")}
        {Lisp-Entry "set-dynamic" #f 1725 18 1725 29 ("node-column" "control-rect" "invalidate-rect" "row-top" "top" "row-rank" "rank" "let*" "set-state" "dynamic" "'dynamic" "get-state" "neq?" "when" "row")}
        {Lisp-Entry "ensure-displayed" #f 1738 11 1738 27 ("selection-row" "ensure-row-displayed" "car" "ensure-cell-displayed" "cell" "'cell" "selection-mode" "eq?" "if" "selection" "not-null?" "when" "rest")}
        {Lisp-Entry "ensure-cell-displayed" #f 1745 11 1745 32 ("get-scroll-context" "scroll-needed" "scroll" "rect-position" "pos" "cell-rect" "rect" "let*" "cell")}
        {Lisp-Entry "process-selection" #f 1757 18 1757 35 ("delay-selection" "selection-manager" "allow-start-drag?" "last" "car" "null?" "when" "cons" "equal?" "test:" "remove" "<" "1" "+" "naturals" ">" "=" "0" "either" "pivot" "'cell" "eq?" "user-origin?:" "set-pivot?:" "list" "set-selection" "selection" "member?" "unless" "selection-pivot" "set!" "cond" "or" "multiple-selection?" "and" "if" "get-row" "else" "selection-mode" "case" "element" "let" "control?" "shift?" "cell")}
        {Lisp-Entry "get-selection" #f 1784 18 1784 31 ("selection")}
        {Lisp-Entry "get-ordered-selection" #f 1788 18 1788 39 ("selection" "<" "sort")}
        {Lisp-Entry "set-selection" #f 1792 18 1792 31 ("ensure-displayed" "end-delayed?" "auto-select" "auto-toggle?:" "auto-expand/collapse" "multiple-selection?" "auto-expand/collapse?" "and" "selection-row" "get-row" "essay" "auto-row" "selection-change" "invalidate-selection" "not-null?" "car" "null?" "if" "selection-pivot" "set!" "selection" "old-selection" "let" "change-selection?" "when" "locator" "reset" "selection-manager" "locked?" "unless" "user-origin?" "user-origin?:" "generate-event?" "generate-event?:" "auto-expand?" "auto-expand?:" "ensure-displayed?" "ensure-displayed?:" "set-pivot?" "set-pivot?:" "force?" "force?:" "sel")}
        {Lisp-Entry "selection-change" #f 1822 29 1822 45 ("selection" "call-selection-handler" "function" "selection-manager" "with-locked-operation" "user-origin?" "force?" "old-selection")}
        {Lisp-Entry "remember-selection" #f 1828 11 1828 29 ("else" "get-col" "cons" "map" "cell" "selection-mode" "get-user-data" "function" "data" "identity" "rank" "get-row" "row" "case" "proc" "let" "selection" "use")}
        {Lisp-Entry "restore-selection" #f 1840 11 1840 28 ("else" "Cell" "new" "when" "col" "bind" "pair" "map" "cell" "selection-mode" "remove-nils" "test:" "user-data-index" "function" "data" "identity" "rank" "row-rank" "row" "case" "proc" "let" "test" "saved-sel" "use")}
        {Lisp-Entry "with-preserved-selection" #f 1856 18 1856 42 ("auto-expand?:" "set-selection" "row-rank" "set-row" "edited-cell" "get-row" "neq?" "cell-editor" "get-parent" "edition-row" "in-edition?" "else" "null?" "car" "pair?" "cond" "set!" "pivot" "when" "restore-selection" "selection" "list" "selection-pivot" "and" "saved-pivot" "get-selection" "remember-selection" "saved-sel" "let" "generate-event?" "generate-event?:" "ensure-displayed?" "ensure-displayed?:" "eqv?" "test" "test:" "row" "'row" "use" "use:" "proc")}
        {Lisp-Entry "get-single-selection" #f 1876 18 1876 38 ("car" "selection" "null?" "if")}
        {Lisp-Entry "set-single-selection" #f 1882 18 1882 38 ("list" "set-selection" "apply" "Cell" "is?" "integer?" "or" "assert" "rest" "sel")}
        {Lisp-Entry "auto-select-first" #f 1887 18 1887 35 ("list" "set-selection" "0" "get-visible-count" ">" "selection" "null?" "and" "when")}
        {Lisp-Entry "selected-row-proc" #f 1892 11 1892 28 ("else" "get-row" "function" "cell" "selection-mode" "case")}
        {Lisp-Entry "get-selected-row" #f 1901 18 1901 34 ("selected-row-proc" "when" "get-single-selection" "selection" "let")}
        {Lisp-Entry "get-selected-rows" #f 1907 18 1907 35 ("selection" "selected-row-proc" "map")}
        {Lisp-Entry "get-selected-data" #f 1911 18 1911 35 ("get-selected-rows" "get-user-data" "row" "function" "map")}
        {Lisp-Entry "get-single-selected-data" #f 1917 18 1917 42 ("get-user-data" "when" "get-selected-row" "row" "let")}
        {Lisp-Entry "get-selection-data" #f 1923 18 1923 36 ("get-user-data" "get-row" "row" "let" "n" "function" "map" "selection")}
        {Lisp-Entry "with-deleted-selection" #f 1930 18 1930 40 ("set-single-selection" "1" "-" "previous" "0" ">" "when" "set-selection" "length" "=" "and" "if" "user-data-index" "map" "remove-nils" "sel" "min" "apply" "smallest" "get-selection-data" "essay" "data" "let" "can-survive?" "can-survive?:" "proc" "selection")}
        {Lisp-Entry "selection->rows" #f 1942 11 1942 26 ("else" "get-col" "get-row" "get-visible-row" "cons" "function" "map" "cell" "selection-mode" "case" "selection")}
        {Lisp-Entry "rows->selection" #f 1952 11 1952 26 ("else" "row-index" "Cell" "new" "col" "row" "bind" "pair" "function" "map" "remove-nils" "cell" "selection-mode" "case" "rows")}
        {Lisp-Entry "added-update-selection" #f 1964 11 1964 33 ("new-pivot" "selection-pivot" "map" "selection" "set!" "else" "get-col" "Cell" "new" "if" "r" "function" "cell" "selection-mode" "case" "proc" "let" "+" "set-row" "get-row" ">=" "edited-cell" "and" "when" "count" "rank")}
        {Lisp-Entry "removed-update-selection" #f 1985 11 1985 35 ("car" "not-null?" "pivot" "selection-pivot" "or" "unless" "old" "collect" "selection" "set!" "else" "get-col" "Cell" "new" "<" "cond" "r" "function" "cell" "selection-mode" "case" "proc" "removed" "+" "end-rank" "let" "-" "set-row" "get-row" ">=" "edited-cell" "and" "when" "count" "rank")}
        {Lisp-Entry "selection-region" #f 2018 11 2018 27 ("or" "'or" "combine!" "selection-element-region" "row-region" "with-closed" "in" "element" "for" "loop" "Region" "new" "region" "let" "sc" "dv" "dh" "sel")}
        {Lisp-Entry "selection-element-region" #f 2026 11 2026 35 ("selection-row-region" "else" "cell-rect" "acquire-delta" "rect:" "Region" "new" "cell" "selection-mode" "case" "sc" "dv" "dh" "element")}
        {Lisp-Entry "selection-row-rect" #f 2032 11 2032 29 ("get-height" "+" "3" "-" "Rect" "new" "columns-right" "right" "get-position" "get-v" "top" "second" "car" "min" "1" "columns-borders" "length" ">" "if" "left" "node-column" "row-text-left" "node-left" "get-row" "row" "let*" "n")}
        {Lisp-Entry "selection-row" #f 2043 11 2043 24 ("else" "get-row" "cell" "selection-mode" "case" "element")}
        {Lisp-Entry "cell-visible?" #f 2054 18 2054 31 ("get-columns-count" "get-col" "visible-count" "get-row" "<" "and" "cell")}
        {Lisp-Entry "borders-left" #f 2064 11 2064 23 ("car" "borders")}
        {Lisp-Entry "borders-right" #f 2068 11 2068 24 ("cdr" "borders")}
        {Lisp-Entry "borders-width" #f 2072 11 2072 24 ("borders-left" "borders-right" "-" "borders")}
        {Lisp-Entry "get-borders" #f 2076 18 2076 29 ("columns-borders" "element" "col")}
        {Lisp-Entry "column-width" #f 2080 18 2080 30 ("-" "get-borders" "right" "left" "bind" "col")}
        {Lisp-Entry "row-rect" #f 2091 11 2091 19 ("get-height" "+" "Rect" "new" "columns-right" "right" "get-position" "get-v" "top" "columns-borders" "car" "borders-left" "left" "get-row" "row" "let*" "n")}
        {Lisp-Entry "cell-position" #f 2099 18 2099 31 ("get-top" "get-left" "Point" "new" "cell-rect" "rect" "let" "cell")}
        {Lisp-Entry "cell-rect" #f 2104 18 2104 27 ("get-height" "+" "borders-right" "borders-left" "Rect" "new" "get-position" "get-v" "top" "get-row" "row" "get-col" "get-borders" "borders" "let*" "cell")}
        {Lisp-Entry "cell-region" #f 2111 18 2111 29 ("cell-rect" "rect:" "Region" "new" "cell")}
        {Lisp-Entry "cell-content-rect" #f 2115 11 2115 28 ("get-height" "get-column" "content-rect" "offset-rect" "borders-left" "left" "get-borders" "borders" "column-width" "width" "get-cell-data" "get-position" "get-v" "top" "row" "get-col" "col" "get-row" "n" "let*" "cell")}
        {Lisp-Entry "cell-text-rect" #f 2127 11 2127 25 ("0" "get-height" "get-column" "text-rect" "offset-rect" "get-node-column-index" "column-width" "width" "get-cell-data" "get-position" "get-v" "top" "row" "get-col" "col" "get-row" "n" "let*" "cell")}
        {Lisp-Entry "view->tree" #f 2137 18 2137 28 ("cell-visible?" "Cell" "new" "cell" "0" ">=" "and" "when" "get-h" "h->col" "col" "v->row" "default-row-height" "get-v" "quotient" "if" "row" "let" "uniform-height?" "uniform-height?:" "any?" "any?:" "pos")}
        {Lisp-Entry "call-with-view->tree" #f 2148 18 2148 38 ("cell-visible?" "Cell" "new" "cell" "0" ">=" "and" "get-h" "h->col" "col" "let" "if" "height" "v" "row" "function" "get-v" "call-with-v->row" "proc" "pos")}
        {Lisp-Entry "tree->view" #f 2162 18 2162 28 ("get-row" "row->v" "get-col" "col->h" "Point" "new" "cell")}
        {Lisp-Entry "h->col" #f 2168 18 2168 24 ("continuation-return" "/=" "<=" ">=" "and" "when" "right" "left" "bind" "get-columns-count" "below" "0" "from" "n" "columns-borders" "in" "borders" "for" "loop" "return" "function" "continuation-capture" "h")}
        {Lisp-Entry "col->h" #f 2179 11 2179 17 ("get-borders" "borders-left" "n")}
        {Lisp-Entry "in-edition?" #f 2188 18 2188 29 ("edited-cell")}
        {Lisp-Entry "get-edited-cell" #f 2192 18 2192 33 ("edited-cell")}
        {Lisp-Entry "edit-cell" #f 2196 18 2196 27 ("close-cell-editor?" "cell-editor" "edited-cell" "set!" "invalidate-rect" "get-top" "-" "offset-rect" "expand-rect" "set-bounds" "replace-cell" "player" "set-player" "list" "children:" "edition-end-proc:" "get-cell-data" "preserved-data:" "get-v" "get-h" "get-left" "+" "Tree-Cell-View" "new" "view" "cell-editor-rect" "bounds" "let" "layout-scrollee-content" "update-displayed" "update-locked?" "get-row" "ensure-row-exists" "end-edition" "get-columns-count" "get-col" "<" "when" "end-proc" "end-proc:" "close-editor?" "close-editor?:" "draw-preserved?" "draw-preserved?:" "0" "Point" "location" "location:" "editor" "editor:" "cell")}
        {Lisp-Entry "end-edition" #f 2222 18 2222 29 ("invalidate-rect" "set!" "cell" "set-parent" "close" "close-cell-editor?" "if" "get-preserved-data" "replace-cell" "cell-editor" "get-edition-end-proc" "end-proc" "cell-editor-rect" "bounds" "let" "edited-cell" "when")}
        {Lisp-Entry "replace-cell" #f 2238 18 2238 30 ("get-col" "get-row" "replace-child" "child" "cell")}
        {Lisp-Entry "cell-editor-rect" #f 2242 11 2242 27 ("offset-rect" "get-height" "content-rect" "rect" "get-level" "text-h" "h" "borders-left" "left" "get-borders" "borders" "get-width" "column-width" "show-header?" "if" "width" "get-cell-data" "get-position" "get-v" "top" "get-column" "column" "row" "get-col" "col" "get-row" "n" "let*" "cell")}
        {Lisp-Entry "select-up" #f 2257 26 2257 35 ("Cell" "new" "select-cell" "end-edition" "0" ">=" "when" "get-col" "col" "1" "get-row" "-" "row" "let" "cell")}
        {Lisp-Entry "select-down" #f 2265 26 2265 37 ("Cell" "new" "select-cell" "end-edition" "get-visible-count" "<" "not" "or" "when" "get-col" "col" "1" "get-row" "+" "row" "let" "validate?" "cell")}
        {Lisp-Entry "select-left" #f 2273 26 2273 37 ("Cell" "new" "select-cell" "end-edition" "0" ">=" "when" "1" "get-col" "-" "col" "get-row" "row" "let" "cell")}
        {Lisp-Entry "select-right" #f 2281 26 2281 38 ("Cell" "new" "select-cell" "end-edition" "get-columns-count" "<" "when" "1" "get-col" "+" "col" "get-row" "row" "let" "cell")}
        {Lisp-Entry "select-cell" #f 2289 26 2289 37 ("get-row" "set-single-selection" "cell")}
        {Lisp-Entry "get-class-image" #f 2298 16 2298 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 2302 16 2302 37 ("nextmethod" "else" "reorderable?" "column-spacing" "filled-column" "cell-background" "auto-expand/collapse?" "show-unfocused-selection?" "can-select-empty?" "multiple-selection?" "selection-mode" "show-header?" "portfolio" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 2318 11 2318 27 ("nextmethod" "else" "Boolean-Row" "new" "reorderable?" "auto-expand/collapse?" "show-unfocused-selection?" "can-select-empty?" "multiple-selection?" "show-header?" "field-name" "case" "property")}}
      {Lisp-Entry "Tree-Locator" #f 2329 7 2329 19 ("Locator")
        {Lisp-Entry "tree" #f 2332 8 2332 12 ()}
        {Lisp-Entry "column" #f 2333 8 2333 14 ()}
        {Lisp-Entry "initialize" #f 2336 11 2336 21 ("nextmethod" "apply" "tree~self" "set!" "rest" "tree")}
        {Lisp-Entry "iterate" #f 2341 11 2341 18 ("wrap?:" "get-next" "prefix" "if" "when" "start:" "get-title" "title" "node" "let*" "rank" "function" "tree" "for-each-visible-row" "prepare-iterate" "proc2" "row" "bind" "proc")}
        {Lisp-Entry "select" #f 2352 11 2352 17 ("else" "column" "Cell" "new" "set-single-selection" "cell" "tree" "get-selection-mode" "case" "rank")}
        {Lisp-Entry "prepare-iterate" #f 2358 11 2358 26 ("car" "else" "get-children" "element" "row" "function" "get-row" "essay" "cons" "0" "get-col" "if" "column" "set!" "cell" "get-selection-mode" "case" "tree" "get-single-selection" "sel" "let")}}}})
"Tree-Widget"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "widget" "Tree-Widget.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.widget.Tree-Widget" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Tree-Widget" #f 47 7 47 18 ("200" "120" "width:" "title:" ":icons" "portfolio:" "top-tree" "top-head" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "document" "top-scroll" "entry" "style:" "edge" "border-type:" "first" "location:" "366" "128" "Dimension" "size:" "descendants-border" "name:" "Outline-View")}}})
"User-Reporter"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "User-Reporter.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.User-Reporter" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "User-Reporter" #f 45 7 45 20 ("Reporter" "Object")
        {Lisp-Entry "section-title" #f 48 11 48 24 ("set-message" "title")}
        {Lisp-Entry "set-message" #f 52 11 52 22 ("get-application" "set-status-message" "msg")}
        {Lisp-Entry "user-message" #f 56 11 56 23 ("format" "apply" "set-message" "rest" "fmt")}
        {Lisp-Entry "set-range" #f 60 11 60 20 ("range")}
        {Lisp-Entry "set-pos" #f 64 11 64 18 ("pos")}
        {Lisp-Entry "delta-pos" #f 68 11 68 20 ("increment")}
        {Lisp-Entry "set-step" #f 72 11 72 19 ("increment")}
        {Lisp-Entry "step-it" #f 76 11 76 18 ()}
        {Lisp-Entry "set-done" #f 80 11 80 19 ()}
        {Lisp-Entry "disable-cancel" #f 84 11 84 25 ()}
        {Lisp-Entry "cancel-requested?" #f 88 11 88 28 ()}
        {Lisp-Entry "test-cancelled" #f 92 11 92 25 ()}}}})
"Vertical-Line"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Vertical-Line.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Vertical-Line" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Vertical-Line" #f 47 7 47 20 ("View")
        {Lisp-Entry "default-size" #f 50 11 50 23 ("100" "8" "Dimension")}
        {Lisp-Entry "draw" #f 59 11 59 15 ("left" "edges:" "sunken" "'sunken" "outer:" "raised" "'raised" "inner:" "2" "0" "Rect" "new" "draw-edge" "Medium" "name:" "Color" "color" "get-height" "height" "let" "lv" "lh" "context" "surface")}}}})
"View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "View.jazz"} 1246096647
    {Lisp-Entry "jazz.ui.view.View" #f 38 19 38 36 ("jazz")
      {Lisp-Entry "View" #f 59 7 59 11 ("Context-Provider" "Actionable" "Drawing")
        {Lisp-Entry "title" #f 62 12 62 17 ("set-title" "get-title")}
        {Lisp-Entry "font" #f 63 12 63 16 ("set-font" "get-font" "Label" "name:" "Font")}
        {Lisp-Entry "background" #f 64 12 64 22 ("set-background" "get-background")}
        {Lisp-Entry "auto-size?" #f 65 12 65 22 ("set-auto-size?" "get-auto-size?")}
        {Lisp-Entry "tooltip?" #f 66 12 66 20 ("set-tooltip?" "get-tooltip?")}
        {Lisp-Entry "tooltip-text" #f 67 12 67 24 ("set-tooltip-text" "get-tooltip-text")}
        {Lisp-Entry "draggable?" #f 68 12 68 22 ("set-draggable?" "get-draggable?")}
        {Lisp-Entry "drag-tolerance" #f 69 12 69 26 ("set-drag-tolerance" "get-drag-tolerance" "5")}
        {Lisp-Entry "enabled?" #f 70 12 70 20 ("set-enabled?" "get-enabled?")}
        {Lisp-Entry "action" #f 71 12 71 18 ("set-action" "get-action")}
        {Lisp-Entry "outline-view" #f 72 12 72 24 ("set-outline-view" "get-outline-view")}
        {Lisp-Entry "offscreen?" #f 73 12 73 22 ("set-offscreen?" "get-offscreen?")}
        {Lisp-Entry "layer" #f 75 12 75 17 ("set-layer" "get-layer" "0")}
        {Lisp-Entry "effect" #f 76 12 76 18 ("set-effect" "get-effect")}
        {Lisp-Entry "user-data" #f 77 12 77 21 ("set-user-data" "get-user-data")}
        {Lisp-Entry "cursor-update-handler" #f 80 12 80 33 ("set-cursor-update-handler" "get-cursor-update-handler")}
        {Lisp-Entry "mouse-enter-handler" #f 81 12 81 31 ("set-mouse-enter-handler" "get-mouse-enter-handler")}
        {Lisp-Entry "mouse-hover-handler" #f 82 12 82 31 ("set-mouse-hover-handler" "get-mouse-hover-handler")}
        {Lisp-Entry "mouse-leave-handler" #f 83 12 83 31 ("set-mouse-leave-handler" "get-mouse-leave-handler")}
        {Lisp-Entry "mouse-down-handler" #f 84 12 84 30 ("set-mouse-down-handler" "get-mouse-down-handler")}
        {Lisp-Entry "mouse-move-handler" #f 85 12 85 30 ("set-mouse-move-handler" "get-mouse-move-handler")}
        {Lisp-Entry "mouse-up-handler" #f 86 12 86 28 ("set-mouse-up-handler" "get-mouse-up-handler")}
        {Lisp-Entry "drag-move-handler" #f 87 12 87 29 ("set-drag-move-handler" "get-drag-move-handler")}
        {Lisp-Entry "drag-up-handler" #f 88 12 88 27 ("set-drag-up-handler" "get-drag-up-handler")}
        {Lisp-Entry "double-click-handler" #f 89 12 89 32 ("set-double-click-handler" "get-double-click-handler")}
        {Lisp-Entry "current-drop-handler" #f 90 12 90 32 ("set-current-drop-handler" "get-current-drop-handler")}
        {Lisp-Entry "receive-drop-handler" #f 91 12 91 32 ("set-receive-drop-handler" "get-receive-drop-handler")}
        {Lisp-Entry "receive-files-handler" #f 92 12 92 33 ("set-receive-files-handler" "get-receive-files-handler")}
        {Lisp-Entry "context-menu-handler" #f 93 12 93 32 ("set-context-menu-handler" "get-context-menu-handler")}
        {Lisp-Entry "key-press-handler" #f 94 12 94 29 ("set-key-press-handler" "get-key-press-handler")}
        {Lisp-Entry "arrow-press-handler" #f 95 12 95 31 ("set-arrow-press-handler" "get-arrow-press-handler")}
        {Lisp-Entry "escape-press-handler" #f 96 12 96 32 ("set-escape-press-handler" "get-escape-press-handler")}
        {Lisp-Entry "backspace-press-handler" #f 97 12 97 35 ("set-backspace-press-handler" "get-backspace-press-handler")}
        {Lisp-Entry "return-press-handler" #f 98 12 98 32 ("set-return-press-handler" "get-return-press-handler")}
        {Lisp-Entry "tab-press-handler" #f 99 12 99 29 ("set-tab-press-handler" "get-tab-press-handler")}
        {Lisp-Entry "content-change-handler" #f 100 12 100 34 ("set-content-change-handler" "get-content-change-handler")}
        {Lisp-Entry "selection-handler" #f 101 12 101 29 ("set-selection-handler" "get-selection-handler")}
        {Lisp-Entry "action-handler" #f 102 12 102 26 ("set-action-handler" "get-action-handler")}
        {Lisp-Entry "player" #f 105 8 105 14 ()}
        {Lisp-Entry "offscreen" #f 106 8 106 17 ()}
        {Lisp-Entry "scroller" #f 107 8 107 16 ()}
        {Lisp-Entry "renderer" #f 108 8 108 16 ()}
        {Lisp-Entry "scaled?" #f 109 8 109 15 ()}
        {Lisp-Entry "scaling" #f 110 8 110 15 ("1.0")}
        {Lisp-Entry "previous-size" #f 111 8 111 21 ()}
        {Lisp-Entry "update-locked?" #f 112 8 112 22 ()}
        {Lisp-Entry "scrollee-locked?" #f 113 8 113 24 ()}
        {Lisp-Entry "modified?" #f 114 8 114 17 ()}
        {Lisp-Entry "hover-history" #f 115 8 115 21 ()}
        {Lisp-Entry "hover-pulse" #f 116 8 116 19 ()}
        {Lisp-Entry "tools-info" #f 117 8 117 18 ()}
        {Lisp-Entry "inhibit-context-menu?" #f 120 14 120 35 ()}
        {Lisp-Entry "shortcut-update" #f 123 11 123 26 ("action-item")}
        {Lisp-Entry "conclude" #f 131 11 131 19 ("layout-scrollee" "layout" "nextmethod" "rest")}
        {Lisp-Entry "print" #f 137 11 137 16 ("size" "position" "title" "name" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "close-with-confirm" #f 148 26 148 44 ("close")}
        {Lisp-Entry "close" #f 152 11 152 16 ("nextmethod" "set-focus" "get-focus" "focus" "call-mouse-leave" "set-mouse-in" "self" "has-ascendant?" "and" "when" "get-mouse-in" "mouse-in" "let")}
        {Lisp-Entry "destroy" #f 163 11 163 18 ("invalidate-rect" "View" "is?" "player" "set!" "close" "offscreen" "self" "view-destroyed" "when" "get-host" "host" "get-rect" "rect" "parent" "let" "nextmethod")}
        {Lisp-Entry "component-alias" #f 183 11 183 26 ("nextmethod" "else" "popup-initiator" ":initiator" "get-root" ":root" "get-guest" ":guest" "get-host" ":host" "case" "name")}
        {Lisp-Entry "get-player" #f 197 11 197 21 ("get-player" "parent" "essay" "set!" "player" "unless")}
        {Lisp-Entry "set-player" #f 203 18 203 28 ("set-player" "view" "function" "for-each-view" "call-mouse-leave" "set-mouse-in" "get-mouse-in" "self" "eq?" "not" "and" "when" "player" "set!" "plr")}
        {Lisp-Entry "in-player?" #f 213 18 213 28 ("get-player" "boolean")}
        {Lisp-Entry "get-overlapped" #f 217 18 217 32 ("get-overlapped" "when" "get-player" "player" "let")}
        {Lisp-Entry "different-overlapped?" #f 223 18 223 39 ("get-overlapped" "neq?" "not" "or" "window")}
        {Lisp-Entry "get-host" #f 232 26 232 34 ("Host-View" "find-ascendant")}
        {Lisp-Entry "get-guest" #f 236 26 236 35 ("get-guest" "essay" "get-host" "host" "let")}
        {Lisp-Entry "install-in-host" #f 241 26 241 41 ("host")}
        {Lisp-Entry "uninstall-from-host" #f 245 26 245 45 ("host")}
        {Lisp-Entry "save-guest" #f 249 26 249 36 ("session" "designer")}
        {Lisp-Entry "add-guest-preferences" #f 253 18 253 39 ("select?:" "design-events?:" "add-child" "cons" "initargs:" "self" "class-of" "type-name" "name:" "get-size" "size:" "get-position" "position:" "Guest-Preferences" "new" "pref" "get-host" "host" "let*" "add-guest-preferences" "'add-guest-preferences" "unimplemented" "initargs" "session" "designer")}
        {Lisp-Entry "host-activate" #f 267 26 267 39 ()}
        {Lisp-Entry "host-deactivate" #f 271 26 271 41 ()}
        {Lisp-Entry "focus-default" #f 275 26 275 39 ("acquire-focus")}
        {Lisp-Entry "get-text-view" #f 279 26 279 39 ()}
        {Lisp-Entry "frame-guest?" #f 283 18 283 30 ("self" "get-guest" "eq?" "Frame-Host" "is?" "and" "get-host" "host" "let")}
        {Lisp-Entry "dialog-class" #f 294 34 294 46 ("Dialog")}
        {Lisp-Entry "frame-class" #f 298 34 298 45 ("Frame-Host")}
        {Lisp-Entry "palette-class" #f 302 34 302 47 ("Palette")}
        {Lisp-Entry "docked-class" #f 306 34 306 46 ("Docked-Host")}
        {Lisp-Entry "toolbar-class" #f 310 34 310 47 ("Toolbar-Host")}
        {Lisp-Entry "host-icon" #f 314 34 314 43 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 318 34 318 44 ()}
        {Lisp-Entry "host-position" #f 322 34 322 47 ()}
        {Lisp-Entry "host-size" #f 326 34 326 43 ()}
        {Lisp-Entry "host-workspaces" #f 330 26 330 41 ()}
        {Lisp-Entry "effective-host-workspaces" #f 334 18 334 43 ("assq" "essay" "either" "filter-inexistant-workspaces" "error?:" "external-name" "external" "get-associations" "associations" "workspaces" "'workspaces" "get-preferences" "pref" "let*" "host-workspaces")}
        {Lisp-Entry "filter-inexistant-workspaces" #f 345 11 345 39 ("memq?" "name" "function" "collect-if" "get-children" "component-name" "map" "names" "let" "workspaces" "pref")}
        {Lisp-Entry "for-each-palette" #f 352 18 352 34 ("children" "else" "get-children" "Pad-View" "for-each-palette" "Splitter-View" "is?" "cond" "child" "function" "for-each" "proc")}
        {Lisp-Entry "find-palette" #f 363 18 363 30 ("continuation-return" "get-guest" "view" "let" "Host-View" "is?" "when" "palette" "for-each-palette" "return" "function" "continuation-capture" "type")}
        {Lisp-Entry "find-host" #f 375 18 375 27 ("children" "get-guest" "Host-View" "is?" "and" "view" "function" "find-if" "guest-type")}
        {Lisp-Entry "find-guest" #f 382 18 382 28 ("get-guest" "when" "find-host" "host" "let" "guest-type")}
        {Lisp-Entry "collect-guest" #f 388 18 388 31 ("children" "get-guest" "guest" "let" "Host-View" "is?" "when" "view" "function" "collect" "guest-type")}
        {Lisp-Entry "get-frame" #f 397 11 397 20 ("get-host")}
        {Lisp-Entry "guest-icon" #f 401 26 401 36 ("self" "class-of" "host-icon")}
        {Lisp-Entry "focus-activate" #f 405 26 405 40 ()}
        {Lisp-Entry "focus-deactivate" #f 409 26 409 42 ()}
        {Lisp-Entry "maximize" #f 413 26 413 34 ()}
        {Lisp-Entry "restore" #f 417 26 417 33 ()}
        {Lisp-Entry "tool-preferences" #f 426 26 426 42 ()}
        {Lisp-Entry "get-tools-info" #f 435 11 435 25 ("eq?" "test:" "make-table" "set!" "tools-info" "unless")}
        {Lisp-Entry "get-tool-info" #f 441 26 441 39 ("get-tools-info" "table-ref" "tool-name")}
        {Lisp-Entry "set-tool-info" #f 445 26 445 39 ("get-tools-info" "table-set!" "info" "tool-name")}
        {Lisp-Entry "host-install" #f 454 26 454 38 ()}
        {Lisp-Entry "host-uninstall" #f 458 26 458 40 ()}
        {Lisp-Entry "client-activate" #f 462 26 462 41 ()}
        {Lisp-Entry "client-deactivate" #f 466 26 466 43 ()}
        {Lisp-Entry "get-tools-view" #f 475 26 475 40 ()}
        {Lisp-Entry "workspace-minimisable?" #f 479 26 479 48 ()}
        {Lisp-Entry "validate-dialog" #f 488 26 488 41 ()}
        {Lisp-Entry "get-modal-result" #f 492 26 492 42 ()}
        {Lisp-Entry "has-dialog-result?" #f 496 26 496 44 ()}
        {Lisp-Entry "get-editor-view" #f 505 26 505 41 ()}
        {Lisp-Entry "content-valid?" #f 514 26 514 40 ()}
        {Lisp-Entry "validate-content" #f 518 26 518 42 ()}
        {Lisp-Entry "set-parent" #f 527 11 527 21 ("get-player" "if" "set-player" "nextmethod" "parent")}
        {Lisp-Entry "outer-view" #f 537 18 537 28 ("get-parent" "set!" "neq?" "inner?" "and" "while" "self" "view" "parent" "outer" "let" "limit")}
        {Lisp-Entry "inner?" #f 546 26 546 32 ("view")}
        {Lisp-Entry "get-title" #f 555 26 555 35 ("title")}
        {Lisp-Entry "set-title" #f 559 26 559 35 ("adjust-size" "title" "set!" "value")}
        {Lisp-Entry "show" #f 569 11 569 15 ("invalidate-view" "nextmethod")}
        {Lisp-Entry "hide" #f 574 11 574 15 ("invalidate-view" "nextmethod")}
        {Lisp-Entry "update-displayed" #f 579 29 579 45 ()}
        {Lisp-Entry "get-enabled?" #f 588 26 588 38 ("enabled?")}
        {Lisp-Entry "set-enabled?" #f 592 26 592 38 ("invalidate-view" "enabled?" "set!" "flag")}
        {Lisp-Entry "get-scaled?" #f 602 11 602 22 ("scaled?")}
        {Lisp-Entry "set-scaled?" #f 606 11 606 22 ("invalidate-view" "parent" "if" "update-scrollbars" "update-displayed" "scaled?" "set!" "value")}
        {Lisp-Entry "get-scaling" #f 617 11 617 22 ("scaling")}
        {Lisp-Entry "set-scaling" #f 621 11 621 22 ("1000" "*" "round" "/" "scaling" "set!" "value")}
        {Lisp-Entry "get-action" #f 630 18 630 28 ("action")}
        {Lisp-Entry "set-action" #f 634 18 634 28 ("self" "register-actionable" "when" "require-action-item" "action-item" "let" "action" "set!" "value")}
        {Lisp-Entry "enabled-update" #f 646 11 646 25 ("get-enabled?" "set-enabled?" "action-item")}
        {Lisp-Entry "get-outline-view" #f 655 18 655 34 ("outline-view")}
        {Lisp-Entry "set-outline-view" #f 659 18 659 34 ("outline-view" "set!" "value")}
        {Lisp-Entry "outline-select" #f 663 18 663 32 ("list" "set-selection" "acquire-focus" "when" "0" "Cell" "new" "cell" "'cell" "get-selection-mode" "eq?" "Tree-View" "is?" "and" "if" "elem" "outline-view" "row-rank" "rank" "outline-row" "row" "let*" "focus?" "focus?:")}
        {Lisp-Entry "outline-row" #f 672 18 672 29 ("Outline-Row" "find-ascendant")}
        {Lisp-Entry "get-offscreen?" #f 681 11 681 25 ("offscreen?")}
        {Lisp-Entry "set-offscreen?" #f 685 11 685 25 ("offscreen?" "set!" "flag")}
        {Lisp-Entry "get-layer" #f 694 11 694 20 ("layer")}
        {Lisp-Entry "set-layer" #f 698 11 698 20 ("layer" "set!" "value")}
        {Lisp-Entry "get-effect" #f 707 11 707 21 ("effect")}
        {Lisp-Entry "set-effect" #f 711 11 711 21 ("effect" "set!" "value")}
        {Lisp-Entry "get-user-data" #f 720 18 720 31 ("user-data")}
        {Lisp-Entry "set-user-data" #f 724 18 724 31 ("user-data" "set!" "value")}
        {Lisp-Entry "get-lie-parent" #f 733 11 733 25 ("get-v" "scaling" "*" "position" "get-h" "+" "get-lie-parent" "nextmethod" "scaled?" "parent" "not" "or" "if" "sc" "v" "h")}
        {Lisp-Entry "get-global" #f 744 18 744 28 ("get-lie" "player" "get-position-in-root" "+")}
        {Lisp-Entry "get-delta" #f 753 11 753 20 ("nextmethod" "get-v" "get-h" "*" "values" "get-global" "-" "delta" "1.0" "0.0" "get-lie-parent" "sc" "v" "h" "receive" "neq?" "player" "and" "if" "get-player" "origin-player" "let" "origin")}
        {Lisp-Entry "default-position" #f 767 11 767 27 ("0" "Point")}
        {Lisp-Entry "set-position" #f 771 11 771 23 ("position-change" "invalidate-rect" "new" "set!" "self" "acquire" "old" "get-bounds" "essay" "bounds" "let*" "View" "parent" "is?" "player" "and" "inval?" "let" "position" "/=" "when" "pos")}
        {Lisp-Entry "default-size" #f 791 11 791 23 ("100" "Dimension")}
        {Lisp-Entry "minimal-size" #f 795 26 795 38 ()}
        {Lisp-Entry "preferred-size" #f 799 26 799 40 ("get-size")}
        {Lisp-Entry "fit-size" #f 803 26 803 34 ()}
        {Lisp-Entry "invaled-size" #f 807 11 807 23 ("rect-union" "self" "acquire" "size-rect" "new" "get-bounds" "old" "let" "View" "parent" "is?" "player" "and" "when" "sz")}
        {Lisp-Entry "set-size" #f 814 11 814 19 ("parent" "invalidate-rect" "content-size-change" "scroller" "unless" "size-change" "set!" "invaled-size" "let" "size" "/=" "when" "sz")}
        {Lisp-Entry "set-size-noevent" #f 825 11 825 27 ("parent" "invalidate-rect" "set!" "invaled-size" "let" "size" "/=" "when" "sz")}
        {Lisp-Entry "set-preferred-size" #f 833 18 833 36 ("preferred-size" "set-size")}
        {Lisp-Entry "layout-view" #f 842 18 842 29 ("layout-drawing")}
        {Lisp-Entry "front-view" #f 851 18 851 28 ("children" "last")}
        {Lisp-Entry "back-view" #f 855 18 855 27 ("children" "first")}
        {Lisp-Entry "send-before" #f 859 11 859 22 ("invalidate-view" "nextmethod" "target")}
        {Lisp-Entry "bring-to-front" #f 864 11 864 25 ("invalidate-view" "nextmethod")}
        {Lisp-Entry "send-to-back" #f 869 11 869 23 ("invalidate-view" "nextmethod")}
        {Lisp-Entry "send-child-to-front" #f 874 11 874 30 ("move-to-tail!" "children" "set!" "child")}
        {Lisp-Entry "send-child-to-back" #f 878 11 878 29 ("move-to-head!" "children" "set!" "child")}
        {Lisp-Entry "scrollee-width" #f 887 29 887 43 ("get-width")}
        {Lisp-Entry "scrollee-height" #f 891 29 891 44 ("get-height")}
        {Lisp-Entry "get-update-locked?" #f 900 18 900 36 ("update-locked?")}
        {Lisp-Entry "with-update-locked" #f 904 18 904 36 ("invalidate-update" "set!" "begin" "unwind-protect" "update-locked?" "if" "proc")}
        {Lisp-Entry "invalidate-update" #f 915 29 915 46 ("update-scrollbars" "invalidate-view")}
        {Lisp-Entry "get-renderer" #f 925 18 925 30 ("renderer")}
        {Lisp-Entry "set-renderer" #f 929 18 929 30 ("renderer" "set!" "value")}
        {Lisp-Entry "render" #f 933 11 933 17 ("nextmethod" "self" "render" "renderer" "if" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-background" #f 944 11 944 26 ("fill-rect" "get-bounds" "bounds" "when" "get-drawing-background" "background" "let" "context" "surface")}
        {Lisp-Entry "get-drawing-background" #f 951 26 951 48 ("background" "context")}
        {Lisp-Entry "draw-content" #f 955 11 955 23 ("draw" "font" "set-font" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface")}
        {Lisp-Entry "get-offscreen" #f 965 11 965 24 ("new-offscreen" "set!" "close" "when" "new-context" "begin" "<=" "get-size" "offscreen" "and" "if" "get-height" "height" "size" "get-width" "width" "let" "surface")}
        {Lisp-Entry "new-offscreen" #f 982 15 982 28 ("Dimension" "size:" "Memory-Surface" "new" "height" "width" "surface")}
        {Lisp-Entry "get-page-setup" #f 991 26 991 40 ("get-application" "default-page-setup")}
        {Lisp-Entry "get-page-setup-designer" #f 995 26 995 49 ("get-application" "default-page-setup-designer")}
        {Lisp-Entry "get-page-setup-for" #f 999 18 999 36 ("set-active-branch" "when" "find-component" "branch" "get-page-setup" "page-setup" "let*" "name")}
        {Lisp-Entry "print-document" #f 1012 26 1012 40 ("self" "platform-print-document")}
        {Lisp-Entry "print-picture" #f 1016 26 1016 39 ("self" "platform-print-picture")}
        {Lisp-Entry "print-layout" #f 1020 26 1020 38 ("acquire-focus" "get-guest" "pane" "client:" "host-title:" "Page-Editor" "new-frame" "frame" "layout-view" "not" "print-preview" "'print-preview" "locate" "set-visible?" "Page-Toolbar" "find-palette" "toolbar" "get-toplevel" "toplevel" "apply-preferences" "previous:" "page" "'page" "name:" "Page-Workspace" "new" "ws" "selected-workspace" "current" "current-document" "client" "let*" "function" "with-locked-update" "from-preview?" "from-preview?:")}
        {Lisp-Entry "print-preview" #f 1036 26 1036 39 ("acquire-focus" "layout-view" "not" "print-layout" "'print-layout" "locate" "set-visible?" "Preview-Toolbar" "find-palette" "toolbar" "get-toplevel" "toplevel" "apply-preferences" "pane:" "previous:" "preview" "'preview" "name:" "Preview-Workspace" "new" "ws" "selected-workspace" "current" "get-guest" "pane" "self" "client:" "host-visible?:" "host-title:" "Preview-Pane" "new-frame" "frame" "let*" "function" "with-locked-update" "from-layout?" "from-layout?:")}
        {Lisp-Entry "get-print-area" #f 1052 26 1052 40 ("scrollee-size" "0" "Point" "position/size->rect" "context")}
        {Lisp-Entry "paginate" #f 1056 26 1056 34 ("get-output" "0" "naturals" "put" "Rect" "page" "get-top" "v" "*" "get-left" "+" "h" "col" "row" "function" "for-each" "List-Factory" "new" "pages" "rows" "fxceiling/" "cols" "rect-height" "height" "rect-width" "width" "get-print-area" "area" "let*" "page-height" "page-width")}
        {Lisp-Entry "with-printing" #f 1074 21 1074 34 ("restore-printing" "when" "setup-printing" "set!" "begin" "unwind-protect" "preserved" "let" "proc")}
        {Lisp-Entry "setup-printing" #f 1084 29 1084 43 ("scaled?:" "position:" "list" "update-displayed" "0" "Point" "new" "set!" "scaled?" "sc?" "position" "pos" "let")}
        {Lisp-Entry "restore-printing" #f 1093 29 1093 45 ("update-displayed" "scaled?:" "scaled?" "position:" "getf" "position" "set!" "preserved")}
        {Lisp-Entry "export-picture" #f 1104 18 1104 32 ("default-extension:" "choose-new-file" "either" "export-to-png" "1.0" "paint-drawing" "get-height" "get-width" "0" "Rect" "setup-clipper" "get-size" "size:" "Memory-Surface" "new" "surface" "with-closed" "destination" "destination:" "file" "'file" "where" "where:" "context" "context:")}
        {Lisp-Entry "export-picture" #f 1112 18 1112 32 ("move-pathname" "exists?" "when" "extensions:" "default-extension:" "choose-new-file" "either" "dest" "delete-file" "Cancel-Signal" "catch" "delete-metafile" "set-clipboard-metafile" "'clipboard" "eq?" "if" "get-metafile" "set!" "1.0" "get-top" "get-left" "paint-drawing" "with-clipper" "offset-rect" "content" "get-v" "lv" "get-h" "lh" "get-lie" "lie" "get-print-area" "area" "let*" "with-printing" "file:" "Picture" "new" "picture" "with-closed" "metafile" "function" ":wait" "with-cursor" "create-temporary-file" "clipboard" "case" "let" "destination" "destination:" "file" "'file" "where" "where:" "context" "context:")}
        {Lisp-Entry "get-scroller" #f 1147 18 1147 30 ("scroller")}
        {Lisp-Entry "set-scroller" #f 1151 26 1151 38 ("scroller" "set!" "view")}
        {Lisp-Entry "set-scroll-pos" #f 1155 26 1155 40 ("set-scroll-pos" "scroller" "when" "redraw?" "pos" "part")}
        {Lisp-Entry "set-scroll-info" #f 1160 26 1160 41 ("set-scroll-info" "scroller" "when" "page" "max" "min" "part")}
        {Lisp-Entry "update-scrollbars" #f 1165 18 1165 35 ("get-hscroll?" "set-hscroll-needed?" "horz" "'horz" "13" "if" "get-width" "-" "set-scroll-info" "get-vscroll?" ">" "set-vscroll-needed?" "vert" "'vert" "get-page-size" "page" "get-height" "max" "0" "min" "let" "update-locked?" "not" "scroller" "and" "when")}
        {Lisp-Entry "vscroll-needed?" #f 1181 18 1181 33 ("vert" "'vert" "get-page-size" "get-height" ">")}
        {Lisp-Entry "hscroll-needed?" #f 1185 18 1185 33 ("horz" "'horz" "get-page-size" "0" "13" "scroller" "get-vscroll?" "if" "get-width" "-" ">")}
        {Lisp-Entry "scroll" #f 1189 18 1189 24 ("get-scrolled-position" "+" "scroll-to" "0" "Point" "=" "unless" "delta")}
        {Lisp-Entry "scroll2" #f 1194 18 1194 25 ("get-scrolled-position" "+" "scroll-to2" "0" "Point" "=" "unless" "delta")}
        {Lisp-Entry "scroll-to" #f 1199 18 1199 27 ("clip-rect:" "scroll-view" "get-clipper" "self" "acquire" "clip-rect" "get-bounds" "rect" "scroller" "invalidate-view" "scroll-invalidate" "dv" "dh" "update-scrollbars" "vert" "'vert" "horz" "'horz" "set-scroll-pos" "scrolled" "set!" "position" "*" "Point" "new" "new-pos" "get-v" "v" "get-h" "max" "min" "fxround" "h" "max-v" "0" "max-h" "get-height" "min-v" "get-width" "/" "-" "min-h" "1.0" "scaling" "scaled?" "if" "sc" "display-size" "get-display" "display" "get-size" "size" "let*" "/=" "when" "get-scrolled-position" "pos" "let" "dest")}
        {Lisp-Entry "scroll-to2" #f 1232 18 1232 28 ("get-bounds" "scroll-view2" "scroller" "invalidate-view" "scroll-invalidate" "dv" "dh" "update-scrollbars" "vert" "'vert" "horz" "'horz" "set-scroll-pos" "scrolled" "set!" "position" "*" "Point" "new" "new-pos" "get-v" "v" "get-h" "max" "min" "fxround" "h" "max-v" "0" "max-h" "get-height" "min-v" "get-width" "/" "-" "min-h" "1.0" "scaling" "scaled?" "if" "sc" "display-size" "get-display" "display" "get-size" "size" "let*" "/=" "when" "get-scrolled-position" "pos" "let" "dest")}
        {Lisp-Entry "redraw-scrollbars" #f 1263 29 1263 46 ()}
        {Lisp-Entry "scroll-invalidate" #f 1267 29 1267 46 ("dv" "dh")}
        {Lisp-Entry "scroll-view" #f 1271 18 1271 29 ("*" "fxround" "scroll-window" "1.0" "0.0" "get-lie-parent" "sc" "v" "h" "receive" "get-display-rect" "either" "self" "acquire" "acquired" "view-visible?" "and" "when" "get-display" "display" "get-root" "root" "get-player" "player" "let" "clip-rect" "clip-rect:" "rect" "dv" "dh")}
        {Lisp-Entry "scroll-view2" #f 1282 18 1282 30 ("scroll-offscreen" "get-clipper" "clip-rect" "self" "acquire" "acquired" "when" "get-root" "root" "get-player" "player" "let" "rect" "dv" "dh")}
        {Lisp-Entry "scroll-offscreen" #f 1291 11 1291 27 (">" "+" "Rect" "new" "invalidate-rect" "0" "<" "when" "get-bottom" "mb" "get-right" "mr" "get-top" "mt" "get-left" "ml" "let" "fill" "draw-rectangle" "set-source-surface" "get-offscreen" "offscreen" "new-clipper" "rect-union" "modified-rect" "offset-rect" "dst-rect" "rect-intersection" "let*" "get-surface" "surface" "with-closed" "clip-rect" "src-rect" "dv" "dh")}
        {Lisp-Entry "get-scrolled-position" #f 1318 18 1318 39 ("get-display-position" "-")}
        {Lisp-Entry "get-scrolled-h" #f 1322 18 1322 32 ("get-scrolled-position" "get-h")}
        {Lisp-Entry "get-scrolled-v" #f 1326 18 1326 32 ("get-scrolled-position" "get-v")}
        {Lisp-Entry "set-scrolled-position" #f 1330 18 1330 39 ("set-position" "scroller" "when" "pos")}
        {Lisp-Entry "get-scroll-client" #f 1335 26 1335 43 ("self")}
        {Lisp-Entry "get-line-size" #f 1339 26 1339 39 ("8" "horz" "13" "vert" "case" "orientation")}
        {Lisp-Entry "get-page-size" #f 1345 26 1345 39 ("scaling" "/" "fxround" "scaled?" "not" "if" "get-width" "horz" "parent" "get-height" "vert" "case" "size" "let" "orientation")}
        {Lisp-Entry "with-scrollee-locked" #f 1355 18 1355 38 ("set!" "begin" "unwind-protect" "scrollee-locked?" "if" "proc")}
        {Lisp-Entry "layout-scrollee" #f 1365 26 1365 41 ("update-scrollbars" "function" "with-scrollee-locked" "scrollee-locked?" "unless" "fit-in-scroller" "set-size" "scrollee-size" "size" "let" "layout-scrollee-content" "scroller" "if" "update-locked?" "not" "when")}
        {Lisp-Entry "layout-scrollee-patch" #f 1385 26 1385 47 ()}
        {Lisp-Entry "layout-scrollee-content" #f 1389 26 1389 49 ()}
        {Lisp-Entry "fit-in-scroller" #f 1393 11 1393 26 ("get-display-width" "get-right" "right" "-" "0" "Point" "new" "scroll" "<" "when" "get-display-height" "fit" "get-bottom" "bottom" "let")}
        {Lisp-Entry "scrollee-size" #f 1404 26 1404 39 ("get-size")}
        {Lisp-Entry "on-vscroll" #f 1408 26 1408 36 ("orientation" "thumb-pos" "code")}
        {Lisp-Entry "on-hscroll" #f 1412 26 1412 36 ("orientation" "thumb-pos" "code")}
        {Lisp-Entry "content-size-change" #f 1424 26 1424 45 ("size")}
        {Lisp-Entry "get-display" #f 1428 18 1428 29 ("self" "parent" "scroller" "if")}
        {Lisp-Entry "get-display-position" #f 1434 18 1434 38 ("0" "get-v" "scaling" "get-h" "/" "fxround" "Point" "new" "scaled?" "not" "get-position" "-" "pos" "let" "scroller" "if")}
        {Lisp-Entry "get-display-h" #f 1445 18 1445 31 ("get-display-position" "get-h")}
        {Lisp-Entry "get-display-v" #f 1449 18 1449 31 ("get-display-position" "get-v")}
        {Lisp-Entry "get-display-size" #f 1453 18 1453 34 ("get-height" "scaling" "get-width" "/" "fxround" "Dimension" "new" "scaled?" "not" "parent" "get-size" "size" "let" "scroller" "if")}
        {Lisp-Entry "get-display-width" #f 1462 18 1462 35 ("get-display-size" "get-width" "scroller" "if")}
        {Lisp-Entry "get-display-height" #f 1468 18 1468 36 ("get-display-size" "get-height" "scroller" "if")}
        {Lisp-Entry "get-display-rect" #f 1474 18 1474 34 ("parent" "get-bounds" "scroller" "if")}
        {Lisp-Entry "view->display" #f 1480 18 1480 31 ("get-v" "scaling" "/" "get-h" "fxround" "Point" "new" "position" "+" "scaled?" "not" "scroller" "if" "pos")}
        {Lisp-Entry "h-view->display" #f 1488 18 1488 33 ("get-scrolled-position" "get-h" "+" "scroller" "if" "h")}
        {Lisp-Entry "v-view->display" #f 1494 18 1494 33 ("get-scrolled-position" "get-v" "+" "scroller" "if" "v")}
        {Lisp-Entry "display->view" #f 1500 18 1500 31 ("get-scrolled-position" "-" "scroller" "if" "pos")}
        {Lisp-Entry "h-display->view" #f 1506 18 1506 33 ("get-scrolled-position" "get-h" "-" "scroller" "if" "h")}
        {Lisp-Entry "v-display->view" #f 1512 18 1512 33 ("get-scrolled-position" "get-v" "-" "scroller" "if" "v")}
        {Lisp-Entry "scroll-needed" #f 1518 18 1518 31 ("get-height" "cdr" "get-v" "get-width" "car" "essay" "get-h" "Point" "new" "else" "<" "head" "'head" "eq?" "not" "and" "tail" "'tail" "neq?" "cond" "0" "*" "fxround" "if" "use-head?" "proc" ">" "big-range?" "+" "end-offset" "-" "start-offset" "let*" "force-direction" "size" "pos" "function" "needed" "get-display-size" "display-size" "get-display-position" "display-pos" "let" "reposition?" "reposition?:" "force-horizontal" "force-horizontal:" "force-vertical" "force-vertical:" "context" "end" "start")}
        {Lisp-Entry "horizontal-scroll-needed" #f 1539 18 1539 42 (">" "forward" "0" "-" "<" "if" "backward" "case" "get-display-width" "+" "end" "get-display-h" "start" "let*" "direction" "target")}
        {Lisp-Entry "vertical-scroll-needed" #f 1553 18 1553 40 (">" "forward" "0" "-" "<" "if" "backward" "case" "get-display-height" "+" "end" "get-display-v" "start" "let*" "direction" "target")}
        {Lisp-Entry "get-font" #f 1572 18 1572 26 ("font")}
        {Lisp-Entry "set-font" #f 1576 26 1576 34 ("adjust-size" "font" "set!" "fnt")}
        {Lisp-Entry "get-background" #f 1586 18 1586 32 ("background")}
        {Lisp-Entry "set-background" #f 1590 18 1590 32 ("invalidate-view" "background" "set!" "color")}
        {Lisp-Entry "get-auto-size?" #f 1600 18 1600 32 ("auto-size?")}
        {Lisp-Entry "set-auto-size?" #f 1604 18 1604 32 ("adjust-size" "auto-size?" "set!" "value")}
        {Lisp-Entry "adjust-size" #f 1609 18 1609 29 ("set-preferred-size" "invalidate-view" "auto-size?" "not" "if")}
        {Lisp-Entry "for-each-view" #f 1620 18 1620 31 ("get-visible?" "or" "View" "is?" "and" "when" "children" "in" "child" "for" "loop" "include-invisibles?" "include-invisibles?:" "proc")}
        {Lisp-Entry "for-each-view-reversed" #f 1627 18 1627 40 ("children" "for-each-reversed" "get-visible?" "or" "View" "is?" "and" "when" "child" "function" "let" "include-invisibles?" "include-invisibles?:" "proc")}
        {Lisp-Entry "find-mouse-view" #f 1641 18 1641 33 ("find-drawing" "get-captured-view" "either" "pos")}
        {Lisp-Entry "first-view" #f 1651 18 1651 28 ("first" "null?" "if" "get-views" "views" "let")}
        {Lisp-Entry "second-view" #f 1658 18 1658 29 ("second" "2" "length" ">=" "if" "get-views" "views" "let")}
        {Lisp-Entry "last-view" #f 1665 18 1665 27 ("last" "null?" "if" "get-views" "views" "let")}
        {Lisp-Entry "get-views" #f 1672 18 1672 27 ("get-children" "get-visible?" "or" "View" "is?" "and" "child" "function" "collect-if" "reverse!" "include-invisibles?" "include-invisibles?:")}
        {Lisp-Entry "front-view?" #f 1680 18 1680 29 ("parent" "first-view" "self" "eq?")}
        {Lisp-Entry "focus-actions" #f 1689 11 1689 24 ("nextmethod" "view" "'view" "find-actions" "cons")}
        {Lisp-Entry "guest-actions" #f 1694 11 1694 24 ("nextmethod" "guest" "'guest" "find-actions" "cons")}
        {Lisp-Entry "get-content-change-handler" #f 1704 18 1704 44 ("content-change-handler")}
        {Lisp-Entry "set-content-change-handler" #f 1708 18 1708 44 ("content-change-handler" "set!" "value")}
        {Lisp-Entry "call-content-change" #f 1712 11 1712 30 ("invoke" "origin:" "list" "self" ":change" "Event" "new" "event" "let" "content-change" "content-change-handler" "not" "if" "origin")}
        {Lisp-Entry "content-change" #f 1719 26 1719 40 ("origin")}
        {Lisp-Entry "get-selection-handler" #f 1728 18 1728 39 ("selection-handler")}
        {Lisp-Entry "set-selection-handler" #f 1732 18 1732 39 ("selection-handler" "set!" "handler")}
        {Lisp-Entry "call-selection-handler" #f 1736 18 1736 40 ("user-origin?:" "force?:" ":selection-change" "Selection-Event" "new" "self" "invoke" "selection-handler" "when" "user-origin?" "force?" "selection" "old")}
        {Lisp-Entry "get-modified?" #f 1746 26 1746 39 ("modified?")}
        {Lisp-Entry "set-modified?" #f 1750 26 1750 39 ("set!" "modified?" "neq?" "when" "state")}
        {Lisp-Entry "position-change" #f 1760 26 1760 41 ("position")}
        {Lisp-Entry "size-change" #f 1764 26 1764 37 ("call-layout" "get-finished?" "invalidate-layout" "resize" "0" "/=" "or" "dv" "-" "dh" "when" "set!" "height" "width" "get-height" "ph" "get-width" "previous-size" "essay" "pw" "let" "size")}
        {Lisp-Entry "resize" #f 1780 29 1780 35 ("dv" "dh")}
        {Lisp-Entry "acquire-focus" #f 1789 18 1789 31 ("self" "set-focus")}
        {Lisp-Entry "call-focus-gain" #f 1793 18 1793 33 ("focus-gain" "self" "get-focus-actions" "get-application" "set-focus-actions" "old")}
        {Lisp-Entry "call-focus-lose" #f 1798 18 1798 33 ("focus-lose" "get-application" "set-focus-actions" "view")}
        {Lisp-Entry "focus-lose" #f 1803 26 1803 36 ("view")}
        {Lisp-Entry "focus-master" #f 1807 26 1807 38 ("self")}
        {Lisp-Entry "focus-gain" #f 1811 26 1811 36 ("old")}
        {Lisp-Entry "focus-delegate" #f 1815 26 1815 40 ()}
        {Lisp-Entry "focus-update-actions" #f 1819 26 1819 46 ()}
        {Lisp-Entry "get-action-handler" #f 1828 18 1828 36 ("action-handler")}
        {Lisp-Entry "set-action-handler" #f 1832 26 1832 44 ("action-handler" "set!" "x")}
        {Lisp-Entry "process-action" #f 1836 26 1836 40 ("notify-action" "action-properties" "properties" "sender")}
        {Lisp-Entry "action-properties" #f 1840 29 1840 46 ()}
        {Lisp-Entry "notify-action" #f 1844 18 1844 31 ("self" "invoke" ":action" "Action-Event" "new" "apply" "event" "get-properties" "either" "let*" "call-action" "action" "when" "action-handler" "not" "if" "properties" "sender")}
        {Lisp-Entry "get-receive-files-handler" #f 1858 18 1858 43 ("receive-files-handler")}
        {Lisp-Entry "set-receive-files-handler" #f 1861 18 1861 43 ("receive-files-handler" "set!" "handler")}
        {Lisp-Entry "dispatch-receive-files" #f 1865 21 1865 43 ("call-receive-files" "self" "acquire" "view-pos" "when" "find-mouse-view" "view" "let" "files" "pos")}
        {Lisp-Entry "call-receive-files" #f 1872 18 1872 36 ("receive-files" "files:" "position:" ":receive-files" "Event" "new" "self" "invoke" "receive-files-handler" "if" "files" "pos")}
        {Lisp-Entry "receive-files" #f 1878 26 1878 39 ("receive-files" "get-application" "appl" "let" "pathnames" "pos")}
        {Lisp-Entry "get-cursor-update-handler" #f 1888 18 1888 43 ("cursor-update-handler")}
        {Lisp-Entry "set-cursor-update-handler" #f 1892 18 1892 43 ("cursor-update-handler" "set!" "handler")}
        {Lisp-Entry "call-cursor-update" #f 1896 18 1896 36 ("invoke" "self" ":set-cursor" "Cursor-Event" "new" "event" "let" "cursor-update" "cursor-update-handler" "not" "if" "pos")}
        {Lisp-Entry "cursor-update" #f 1903 26 1903 39 (":arrow" "set-cursor" "current-drag-drop" "unless" "pos")}
        {Lisp-Entry "mouse-pressed?" #f 1908 18 1908 32 ("mouse-down?")}
        {Lisp-Entry "mouse-right-pressed?" #f 1912 18 1912 38 ("get-mouse-right-down?")}
        {Lisp-Entry "mouse-in?" #f 1916 18 1916 27 ("get-mouse-in" "self" "eq?")}
        {Lisp-Entry "mouse-over?" #f 1920 18 1920 29 ("mouse-position" "over-view?")}
        {Lisp-Entry "over-view?" #f 1924 18 1924 28 ("in-rect?" "get-bounds" "bounds" "let" "point")}
        {Lisp-Entry "mouse-position" #f 1929 18 1929 32 ("mouse-position" "acquire" "get-root" "root" "get-player" "player" "let")}
        {Lisp-Entry "get-mouse-enter-handler" #f 1940 18 1940 41 ("mouse-enter-handler")}
        {Lisp-Entry "set-mouse-enter-handler" #f 1943 18 1943 41 ("mouse-enter-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-hover-handler" #f 1947 18 1947 41 ("mouse-hover-handler")}
        {Lisp-Entry "set-mouse-hover-handler" #f 1950 18 1950 41 ("mouse-hover-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-leave-handler" #f 1954 18 1954 41 ("mouse-leave-handler")}
        {Lisp-Entry "set-mouse-leave-handler" #f 1957 18 1957 41 ("mouse-leave-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-down-handler" #f 1961 18 1961 40 ("mouse-down-handler")}
        {Lisp-Entry "set-mouse-down-handler" #f 1964 18 1964 40 ("mouse-down-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-move-handler" #f 1968 18 1968 40 ("mouse-move-handler")}
        {Lisp-Entry "set-mouse-move-handler" #f 1971 18 1971 40 ("mouse-move-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-up-handler" #f 1975 18 1975 38 ("mouse-up-handler")}
        {Lisp-Entry "set-mouse-up-handler" #f 1978 18 1978 38 ("mouse-up-handler" "set!" "handler")}
        {Lisp-Entry "get-drag-move-handler" #f 1982 18 1982 39 ("drag-move-handler")}
        {Lisp-Entry "set-drag-move-handler" #f 1985 18 1985 39 ("drag-move-handler" "set!" "handler")}
        {Lisp-Entry "get-drag-up-handler" #f 1989 18 1989 37 ("drag-up-handler")}
        {Lisp-Entry "set-drag-up-handler" #f 1992 18 1992 37 ("drag-up-handler" "set!" "handler")}
        {Lisp-Entry "get-double-click-handler" #f 1996 18 1996 42 ("double-click-handler")}
        {Lisp-Entry "set-double-click-handler" #f 1999 18 1999 42 ("double-click-handler" "set!" "handler")}
        {Lisp-Entry "call-mouse-hover" #f 2003 11 2003 27 ("popup-tooltip" "get-tooltip?" "when" "mouse-hover" ":mouse-hover" "Mouse-Event" "new" "self" "invoke" "mouse-hover-handler" "if" "pos")}
        {Lisp-Entry "dispatch-mouse-down" #f 2011 21 2011 40 ("call-cursor-update" "call-mouse-down" "mouse-activate" "focused-host?" "not" "and" "get-host" "host" "mouse-activate?" "set-mouse-down-point" "set-mouse-down-view" "set-mouse-down?" "self" "acquire" "acquired" "let" "mouse-down" "'mouse-down" "event:" "close-popups" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "call-mouse-down" #f 2028 18 2028 33 ("mouse-down" ":mouse-down" "Mouse-Event" "new" "self" "invoke" "mouse-down-handler" "if" "pos")}
        {Lisp-Entry "dispatch-mouse-move" #f 2034 21 2034 40 ("process-mouse-move" "process-drag-move" "call-cursor-update" "self" "mouse-down-view" "acquire" "acquired" "mouse-down?" "if" "track-tooltip" "current-drag-drop" "*current-tooltip-context*" "call-mouse-enter" "set-mouse-in" "cancel-tooltip-tracking" "in-tooltip?" "get-player" "or" "call-mouse-leave" "get-mouse-in" "neq?" "Tooltip" "get-overlapped" "is?" "unless" "when" "find-mouse-view" "view" "Point" "new" "pos" "let" "v" "h")}
        {Lisp-Entry "process-mouse-move" #f 2058 11 2058 29 ("call-mouse-move" "process-tooltip" "*current-tooltip-context*" "when" "pos")}
        {Lisp-Entry "call-mouse-move" #f 2064 11 2064 26 ("mouse-move" "invoke" "self" ":mouse-move" "Mouse-Event" "new" "event" "let" "mouse-move-handler" "if" "pos")}
        {Lisp-Entry "dispatch-mouse-up" #f 2071 21 2071 38 ("set-delayed-mouse-action" "action" "get-delayed-mouse-action" "process-mouse-up" "call-cursor-update" "acquired" "let" "self" "acquire" "mouse-down-view" "process-drag-up" "mouse-down?" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "process-mouse-up" #f 2086 11 2086 27 ("call-mouse-up" "drag-drop" "current-drag-drop" "when" "pos")}
        {Lisp-Entry "call-mouse-up" #f 2092 11 2092 24 ("mouse-up" ":mouse-up" "Mouse-Event" "new" "self" "invoke" "mouse-up-handler" "if" "pos")}
        {Lisp-Entry "process-drag-move" #f 2098 11 2098 28 ("call-drag-move" "drag-follow" "get-drag-hotspot" "mouse-down-point" "nu-" "drag-start" "get-drag-drop" "drag-drop" "let" "allow-start-drag?" "when" "begin" "get-source" "get-view" "current-drag-drop" "not" "or" "get-draggable?" "mouse-down-view" "self" "eq?" "and" "if" "pos")}
        {Lisp-Entry "allow-start-drag?" #f 2110 29 2110 46 ("drag-tolerance" "mouse-down-point" "near?" "current-drag-drop" "not" "mouse-down?" "and" "pos")}
        {Lisp-Entry "call-drag-move" #f 2114 11 2114 25 ("drag-move" ":drag-move" "Mouse-Event" "new" "self" "invoke" "drag-move-handler" "if" "pos")}
        {Lisp-Entry "process-drag-up" #f 2120 11 2120 26 ("call-drag-up" "player" "when" "set-mouse-down-point" "set-mouse-down-view" "set-mouse-down?" "current-drag-drop" "dragging?" "pos")}
        {Lisp-Entry "call-drag-up" #f 2128 11 2128 23 ("drag-up" ":drag-up" "Mouse-Event" "new" "self" "invoke" "drag-up-handler" "if" "dragging?" "pos")}
        {Lisp-Entry "dispatch-double-click" #f 2134 21 2134 42 ("call-double-click" "mouse-activate" "focused-host?" "not" "and" "get-host" "host" "mouse-activate?" "set-mouse-down-point" "set-mouse-down-view" "set-mouse-down?" "self" "acquire" "acquired" "let" "double-click" "'double-click" "event:" "close-popups" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "call-double-click" #f 2150 26 2150 43 ("double-click" ":double-click" "Mouse-Event" "new" "self" "invoke" "double-click-handler" "if" "pos")}
        {Lisp-Entry "dispatch-context-menu" #f 2156 21 2156 42 ("self" "acquire" "call-context-menu" "context-menu" "'context-menu" "event:" "close-popups" "get-enabled?" "and" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "set!" "inhibit-context-menu?" "if" "v" "h")}
        {Lisp-Entry "call-context-menu" #f 2166 18 2166 35 ("context-menu" ":context-menu" "Mouse-Event" "new" "self" "invoke" "context-menu-handler" "if" "pos")}
        {Lisp-Entry "dispatch-middle-mouse-down" #f 2172 21 2172 47 ("self" "acquire" "middle-mouse-down" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "dispatch-middle-mouse-up" #f 2179 21 2179 45 ("self" "acquire" "middle-mouse-up" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "dispatch-right-mouse-down" #f 2186 21 2186 46 ("self" "acquire" "right-mouse-down" "when" "set-mouse-right-down?" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "dispatch-right-mouse-up" #f 2194 21 2194 44 ("self" "acquire" "right-mouse-up" "when" "set-mouse-right-down?" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "call-mouse-enter" #f 2202 11 2202 27 ("mouse-enter" ":mouse-enter" "Mouse-Event" "new" "self" "invoke" "mouse-enter-handler" "if")}
        {Lisp-Entry "call-mouse-leave" #f 2208 11 2208 27 ("mouse-leave" ":mouse-leave" "Mouse-Event" "new" "self" "invoke" "mouse-leave-handler" "if" "close-self-tooltip" "cancel-hovering")}
        {Lisp-Entry "mouse-hover" #f 2216 26 2216 37 ("pos")}
        {Lisp-Entry "mouse-wheel" #f 2220 26 2220 37 ("inhibit-context-menu?" "set!" "get-mouse-right-down?" "0" "3" "quotient" "Point" "new" "scroll" "begin" "shift-down?" "if" "get-scroller" "when" "delta" "pos")}
        {Lisp-Entry "mouse-enter" #f 2230 26 2230 37 ()}
        {Lisp-Entry "mouse-leave" #f 2234 26 2234 37 ()}
        {Lisp-Entry "mouse-down" #f 2238 26 2238 36 ("pos")}
        {Lisp-Entry "mouse-move" #f 2242 26 2242 36 ("pos")}
        {Lisp-Entry "mouse-up" #f 2246 26 2246 34 ("pos")}
        {Lisp-Entry "drag-move" #f 2250 26 2250 35 ("pos")}
        {Lisp-Entry "drag-up" #f 2254 26 2254 33 ("rest" "pos")}
        {Lisp-Entry "double-click" #f 2258 26 2258 38 ("call-mouse-down" "pos")}
        {Lisp-Entry "with-context-click" #f 2262 26 2262 44 ("proc" "pos")}
        {Lisp-Entry "context-menu" #f 2266 26 2266 38 ("pos")}
        {Lisp-Entry "get-context-menu" #f 2270 26 2270 42 ()}
        {Lisp-Entry "middle-mouse-down" #f 2274 26 2274 43 ("mouse-down" "pos")}
        {Lisp-Entry "middle-mouse-up" #f 2278 26 2278 41 ("mouse-up" "pos")}
        {Lisp-Entry "right-mouse-down" #f 2282 26 2282 42 ("pos")}
        {Lisp-Entry "right-mouse-up" #f 2286 26 2286 40 ("pos")}
        {Lisp-Entry "mouse-activate?" #f 2290 26 2290 41 ()}
        {Lisp-Entry "mouse-view" #f 2294 18 2294 28 ("get-mouse-in" "get-captured-view" "either")}
        {Lisp-Entry "Hovering-Tolerance" #f 2303 14 2303 32 ("3")}
        {Lisp-Entry "Hovering-Time" #f 2306 14 2306 27 ("0.5")}
        {Lisp-Entry "Hovering-Steps" #f 2309 14 2309 28 ("5")}
        {Lisp-Entry "track-hovering" #f 2313 18 2313 32 ("0" "delay:" "check-hovering" "function" "Pulse" "new" "hover-pulse" "hover-history" "set!" "Hovering-Steps" "/" "period" "mouse-position" "start" "let" "cancel-hovering" "Hovering-Time" "time" "time:")}
        {Lisp-Entry "cancel-hovering" #f 2321 18 2321 33 ("hover-history" "set!" "close" "hover-pulse" "when")}
        {Lisp-Entry "check-hovering" #f 2328 11 2328 25 ("1" "-" "tail" "set-cdr!" "call-mouse-hover" "begin" "Hovering-Tolerance" "distance" "point" "function" "every?" "cons" "set!" "Hovering-Steps" "length" "<" "mouse-position" "pos" "let" "hover-history" "when" "cancel-hovering" "self" "mouse-view" "neq?" "if" "start")}
        {Lisp-Entry "*current-tooltip-context*" #f 2350 14 2350 39 ()}
        {Lisp-Entry "*recent-tooltip-close*" #f 2353 14 2353 36 ()}
        {Lisp-Entry "*last-tooltip-position*" #f 2356 14 2356 37 ()}
        {Lisp-Entry "track-tooltip" #f 2360 11 2360 24 ("0.1" "time:" "track-hovering" "if" "get-player" "get-tooltip?" "when" "current-time" "time->seconds" "<" "*recent-tooltip-close*" "and" "recently-closed?" "define")}
        {Lisp-Entry "cancel-tooltip-tracking" #f 2370 11 2370 34 ("close-tooltip" "cancel-hovering")}
        {Lisp-Entry "reset-tooltip" #f 2375 18 2375 31 ("cancel-tooltip-tracking")}
        {Lisp-Entry "in-tooltip?" #f 2379 11 2379 22 ("self" "acquire" "in-rect?" "get-bounds" "rect" "get-view" "view" "let" "*current-tooltip-context*" "when" "pos")}
        {Lisp-Entry "process-tooltip" #f 2387 11 2387 26 ("reset-tooltip" "nu=?" "eq?" "and" "get-tooltip-bounds" "new-bounds" "get-bounds" "bounds" "*current-tooltip-context*" "get-view" "view" "Tooltip" "is?" "unless" "get-overlapped" "overlapped" "let" "pos")}
        {Lisp-Entry "popup-tooltip" #f 2398 11 2398 24 ("reset-tooltip" "set-tooltip" "get-position" "get-font" "get-tooltip-context" "*current-tooltip-context*" "set!" "close-tooltip" "in-tooltip?" "current-drag-drop" "mouse-down?" "or" "unless" "border:" "Tooltip" "class:" "padding:" "popup" "either" "get-cursor-height" "0" "padding" "set-preferred-size" "set-font" "when" "solid" "'solid" "border-type:" "Border-View" "border" "let" "position" "font" "new-tooltip" "title:" "Tooltip-Label" "2" "scrollee-content-size" "nu+" "set-size" "set-text" "get-text" "text-view" "100" "4000" "Dimension" "size:" "Tooltip-Text" "new" "view" "let*" "pair?" "get-formatted-tooltip?" "if" "text" "new-tooltip-view" "nu=?" "*last-tooltip-position*" "and" "same-position?" "define" "pos")}
        {Lisp-Entry "update-tooltip" #f 2435 18 2435 32 ("layout-view" "get-size" "6" "scrollee-content-size" "nu+" "set-text" "100" "4000" "Dimension" "set-size" "get-text" "text-view" "view" "get-root" "first-child" "border" "get-tooltip" "tooltip" "let*" "*current-tooltip-context*" "when" "text")}
        {Lisp-Entry "close-self-tooltip" #f 2448 19 2448 37 ("close-tooltip" "get-view" "self" "eq?" "*current-tooltip-context*" "and" "when")}
        {Lisp-Entry "close-tooltip" #f 2453 11 2453 24 ("0.5" "current-time" "time->seconds" "+" "*recent-tooltip-close*" "set!" "close-popup" "opened?" "and" "get-tooltip" "tooltip" "let" "*current-tooltip-context*" "when")}
        {Lisp-Entry "get-cursor-height" #f 2462 11 2462 28 ("21" "else" "9" ":ibeam" "case" "get-cursor" "cursor" "let")}
        {Lisp-Entry "get-selected-element" #f 2474 18 2474 38 ("get-name" "when" "children" "get-selected?" "get-group" "eq?" "not" "or" "is?" "and" "child" "function" "find-if" "element" "let" "group" "group:" "Radio-Button" "class" "class:")}
        {Lisp-Entry "set-selected-element" #f 2485 18 2485 38 ("error" "unless" "children" "set!" "set-selected?" "get-name" "selected?" "get-group" "eq?" "not" "or" "is?" "and" "when" "child" "function" "for-each" "found?" "let" "group" "group:" "Radio-Button" "class" "class:" "name")}
        {Lisp-Entry "unselect-elements" #f 2499 18 2499 35 ("children" "unselect" "get-group" "eq?" "not" "or" "is?" "and" "when" "child" "function" "for-each" "group" "group:" "Radio-Button" "class" "class:")}
        {Lisp-Entry "get-context-menu-handler" #f 2512 18 2512 42 ("context-menu-handler")}
        {Lisp-Entry "set-context-menu-handler" #f 2515 18 2515 42 ("context-menu-handler" "set!" "handler")}
        {Lisp-Entry "track-popup-menu" #f 2519 18 2519 34 ("Menu-Transient" "class:" "popup" "let" "all-invisible?" "unless" "error" "Context-Menu" "is-not?" "if" "self" "initiator" "initiator:" "alternate-position" "alternate-position:" "pos" "menu")}
        {Lisp-Entry "all-invisible?" #f 2527 11 2527 25 ("get-children" "get-visible?" "not" "item" "function" "every?" "menu")}
        {Lisp-Entry "get-context-text" #f 2538 11 2538 27 ()}
        {Lisp-Entry "mouse-copy" #f 2547 26 2547 36 ("destination" "pos")}
        {Lisp-Entry "mouse-insert" #f 2551 26 2551 38 ("object")}
        {Lisp-Entry "to-desktop" #f 2560 18 2560 28 ("self" "acquire" "get-root" "root" "get-player" "player" "get-desktop" "desktop" "let" "shape")}
        {Lisp-Entry "from-desktop" #f 2567 18 2567 30 ("acquire" "get-root" "root" "get-player" "player" "get-desktop" "desktop" "let" "shape")}
        {Lisp-Entry "popup" #f 2579 18 2579 23 ("fade-in" "set-effect" "layout-view" "set-visible?" "set-size" "Point" "set-position" "get-root" "set-parent" "set-initiator" "size:" "fit-point" "position:" "popup" "raised" "'raised" "border-type:" "'border" "name:" "Border-View" "new" "0" "either" "4" "Dimension" "get-size" "+" "size" "to-desktop" "essay" "alternate" "get-work-area" "rect-size" "max" "get-player" "player" "get-toplevel" "toplevel" "let*" "close-root?" "close-root?:" "effect" "effect:" "fade-speed" "fade-speed:" "border" "border:" "Popup" "class" "class:" "self" "initiator" "initiator:" "alternate-position" "alternate-position:" "padding" "padding:" "position" "view")}
        {Lisp-Entry "close-popups" #f 2601 26 2601 38 ("close-popups" "player" "when" "exclude" "exclude:" "all?" "all?:" "event" "event:")}
        {Lisp-Entry "popup-destroy" #f 2606 26 2606 39 ("popup")}
        {Lisp-Entry "popup-initiator" #f 2610 18 2610 33 ("get-initiator" "Popup" "is?" "when" "get-overlapped" "overlapped" "let")}
        {Lisp-Entry "owned?" #f 2616 18 2616 24 ("get-overlapped" "get-owners" "memq?" "overlapped")}
        {Lisp-Entry "get-draggable?" #f 2625 26 2625 40 ("draggable?")}
        {Lisp-Entry "set-draggable?" #f 2629 18 2629 32 ("draggable?" "set!" "flag")}
        {Lisp-Entry "get-drag-tolerance" #f 2633 18 2633 36 ("drag-tolerance")}
        {Lisp-Entry "set-drag-tolerance" #f 2637 18 2637 36 ("drag-tolerance" "set!" "tolerance")}
        {Lisp-Entry "get-drag-drop" #f 2641 26 2641 39 ("source:" "DnD" "new" "when" "get-drag-source" "source" "let")}
        {Lisp-Entry "get-drag-hotspot" #f 2647 26 2647 42 ("0" "Point")}
        {Lisp-Entry "get-drag-source" #f 2651 26 2651 41 ("get-drag-image" "image:" "position:" "self" "view:" "Drag-Source" "new" "get-drag-position" "pos" "let")}
        {Lisp-Entry "get-drag-position" #f 2656 26 2656 43 ("mouse-down-point")}
        {Lisp-Entry "get-drag-image" #f 2660 26 2660 40 ("pos")}
        {Lisp-Entry "drag-start" #f 2664 11 2664 21 ("process-drag-feedback" "hide-drag-image" "get-desktop" "ImageList_DragEnter" "to-desktop" "global" "get-v" "get-h" "get-handle" "ImageList_BeginDrag" "get-image-name" "image-name" "get-portfolio" "portfolio" "get-image" "image" "let*" "acquire-capture" "acquire-focus" ":no" "set-cursor" "get-source" "get-view" "view" "let" "set-current-drag-drop" "drag-drop" "hotspot" "pos")}
        {Lisp-Entry "drag-follow" #f 2681 11 2681 22 ("process-drag-feedback" "get-v" "get-h" "ImageList_DragMove" "to-desktop" "global" "get-source" "get-view" "view" "drag-drop" "let*" "current-drag-drop" "when" "pos")}
        {Lisp-Entry "drag-drop" #f 2690 11 2690 20 ("drop" "get-target" "when" "drag-end" "pos" "drag-drop")}
        {Lisp-Entry "drag-end" #f 2696 11 2696 19 ("set-current-drag-drop" "get-source" "get-view" "release-capture" "get-desktop" "get-handle" "ImageList_DragLeave" "ImageList_EndDrag" "unhighlight-current" "hide-drag-image" "drag-drop" "let" "current-drag-drop" "when")}
        {Lisp-Entry "process-drag-feedback" #f 2707 11 2707 32 ("show-drag-image" "highlight-current" "set-target" "unhighlight-current" "hide-drag-image" ":no" ":move" "if" "set-cursor" "get-target" "neq?" "call-current-drop" "target" "to-view" "local" "when" "set-view" "find-view" "view" "get-desktop" "desktop" "get-view" "current" "current-drag-drop" "drag-drop" "let*" "global")}
        {Lisp-Entry "hide-drag-image" #f 2727 11 2727 26 ("ImageList_DragShowNolock")}
        {Lisp-Entry "show-drag-image" #f 2731 11 2731 26 ("ImageList_DragShowNolock")}
        {Lisp-Entry "highlight-current" #f 2735 11 2735 28 ("highlight-drop" "local" "view" "drag-drop")}
        {Lisp-Entry "unhighlight-current" #f 2739 11 2739 30 ("get-view" "unhighlight-drop" "when" "get-target" "current-target" "let" "drag-drop")}
        {Lisp-Entry "highlight-drop" #f 2745 26 2745 40 ("pos" "drag-drop")}
        {Lisp-Entry "unhighlight-drop" #f 2749 26 2749 42 ("drag-drop")}
        {Lisp-Entry "get-current-drop-handler" #f 2758 18 2758 42 ("current-drop-handler")}
        {Lisp-Entry "set-current-drop-handler" #f 2761 18 2761 42 ("current-drop-handler" "set!" "handler")}
        {Lisp-Entry "call-current-drop" #f 2765 18 2765 35 ("current-drop" ":drop-target" "Drop-Event" "new" "self" "invoke" "current-drop-handler" "if" "pos" "drag-drop")}
        {Lisp-Entry "current-drop" #f 2771 26 2771 38 ("pos" "drag-drop")}
        {Lisp-Entry "standard-current-drop" #f 2775 18 2775 39 ("current-drop" "criteria:" "position:" "view:" "Drop-Target" "new" "accepts?" "function" "find-if" "criteria" "let" "neq?" "if" "cons" "drag-info" "drag-over" "get-source" "get-view" "drag-start" "get-target" "current" "get-drag-drop" "drag-drop" "get-position" "pos" "get-sender" "sender" "let*" "handler" "handler:" "acceptance" "evt")}
        {Lisp-Entry "get-receive-drop-handler" #f 2791 18 2791 42 ("receive-drop-handler")}
        {Lisp-Entry "set-receive-drop-handler" #f 2794 18 2794 42 ("receive-drop-handler" "set!" "handler")}
        {Lisp-Entry "drop" #f 2798 26 2798 30 ("acquire" "self" "call-receive-drop" "when" "get-handler" "either" "dst" "get-target" "trg" "get-source" "get-view" "src" "let*" "pos" "drag-drop")}
        {Lisp-Entry "call-receive-drop" #f 2806 18 2806 35 ("receive-drop" ":receive-drop" "Drop-Event" "new" "self" "invoke" "receive-drop-handler" "if" "drag-drop" "pos" "sender")}
        {Lisp-Entry "receive-drop" #f 2812 26 2812 38 ("drag-drop" "pos" "sender")}
        {Lisp-Entry "get-key-press-handler" #f 2821 18 2821 39 ("key-press-handler")}
        {Lisp-Entry "set-key-press-handler" #f 2825 18 2825 39 ("key-press-handler" "set!" "handler")}
        {Lisp-Entry "call-key-press" #f 2829 21 2829 35 ("record" "record-event?" "content:" ":key" "char?" "Event" "event" "on-insert" ":focus" "Event-Handler" "handler" "get-recorder" "recorder" "macro-recording?" "when" "get-application" "appl" "let" "key-press" ":char" "Keyboard-Event" "new" "self" "invoke" "key-press-handler" "if" "key")}
        {Lisp-Entry "get-arrow-press-handler" #f 2843 18 2843 41 ("arrow-press-handler")}
        {Lisp-Entry "set-arrow-press-handler" #f 2847 18 2847 41 ("arrow-press-handler" "set!" "handler")}
        {Lisp-Entry "get-escape-press-handler" #f 2851 18 2851 42 ("escape-press-handler")}
        {Lisp-Entry "set-escape-press-handler" #f 2855 18 2855 42 ("escape-press-handler" "set!" "handler")}
        {Lisp-Entry "get-backspace-press-handler" #f 2859 18 2859 45 ("backspace-press-handler")}
        {Lisp-Entry "set-backspace-press-handler" #f 2863 18 2863 45 ("backspace-press-handler" "set!" "handler")}
        {Lisp-Entry "get-return-press-handler" #f 2867 18 2867 42 ("return-press-handler")}
        {Lisp-Entry "set-return-press-handler" #f 2871 18 2871 42 ("return-press-handler" "set!" "handler")}
        {Lisp-Entry "get-tab-press-handler" #f 2875 18 2875 39 ("tab-press-handler")}
        {Lisp-Entry "set-tab-press-handler" #f 2879 18 2879 39 ("tab-press-handler" "set!" "handler")}
        {Lisp-Entry "on-arrow" #f 2883 11 2883 19 ("call-arrow-press" "evt")}
        {Lisp-Entry "call-arrow-press" #f 2887 11 2887 27 ("get-modifiers" "direction:" "get-property" "arrow-press" "self" "invoke" "arrow-press-handler" "if" "evt")}
        {Lisp-Entry "arrow-press" #f 2893 26 2893 37 ("down-arrow-press" "down" "up-arrow-press" "up" "right-arrow-press" "right" "left-arrow-press" "left" "case" "modifiers" "direction")}
        {Lisp-Entry "left-arrow-press" #f 2901 26 2901 42 ("modifiers")}
        {Lisp-Entry "right-arrow-press" #f 2905 26 2905 43 ("modifiers")}
        {Lisp-Entry "up-arrow-press" #f 2909 26 2909 40 ("modifiers")}
        {Lisp-Entry "down-arrow-press" #f 2913 26 2913 42 ("modifiers")}
        {Lisp-Entry "on-escape-press" #f 2917 26 2917 41 ("call-escape-press" "evt")}
        {Lisp-Entry "call-escape-press" #f 2921 11 2921 28 ("escape-press" ":char" "Keyboard-Event" "new" "self" "invoke" "escape-press-handler" "if" "key")}
        {Lisp-Entry "escape-press" #f 2927 26 2927 38 ("key")}
        {Lisp-Entry "on-backspace-press" #f 2931 26 2931 44 ("call-backspace-press" "evt")}
        {Lisp-Entry "call-backspace-press" #f 2935 11 2935 31 ("backspace-press" ":char" "Keyboard-Event" "new" "self" "invoke" "backspace-press-handler" "if" "key")}
        {Lisp-Entry "backspace-press" #f 2941 26 2941 41 ("rest" "key")}
        {Lisp-Entry "on-return-press" #f 2945 26 2945 41 ("call-return-press" "evt")}
        {Lisp-Entry "call-return-press" #f 2949 11 2949 28 ("return-press" ":char" "Keyboard-Event" "new" "self" "invoke" "return-press-handler" "if" "key")}
        {Lisp-Entry "return-press" #f 2955 26 2955 38 ("key")}
        {Lisp-Entry "on-tab-press" #f 2959 26 2959 38 ("call-tab-press" "evt")}
        {Lisp-Entry "call-tab-press" #f 2963 11 2963 25 ("modifiers-keys" "tab-press" ":char" "Keyboard-Event" "new" "self" "invoke" "tab-press-handler" "if" "key")}
        {Lisp-Entry "tab-press" #f 2969 26 2969 35 ("shift-key?" "navigate-view" "modifiers" "key")}
        {Lisp-Entry "on-key-press" #f 2973 18 2973 30 ("key:" "get-property" "key-press" "evt")}
        {Lisp-Entry "key-press" #f 2977 26 2977 35 ("key")}
        {Lisp-Entry "dispatch-key-press" #f 2981 21 2981 39 ("call-key-press" "when" "get-focus" "view" "let" "complete-drag-up" "drag-end" "begin" "=" "current-drag-drop" "and" "if" "key")}
        {Lisp-Entry "find-tab-manager" #f 2996 18 2996 34 ("find-tab-manager" "self" "parent" "not" "get-tab-stops" "or" "if")}
        {Lisp-Entry "navigate-tab" #f 3002 18 3002 30 ("tab-stop-enter" "acquire-focus" "tab-stop-exit" "neq?" "and" "when" "navigated-view" "to" "let" "backward?" "from")}
        {Lisp-Entry "navigated-view" #f 3010 18 3010 32 ("element" "+" "modulo" "1" "-" "0" "=" "if" "new-rank" "find" "rank" "length" "count" "when" "get-tab-stops" "stops" "let" "backward?" "from")}
        {Lisp-Entry "on-next-view" #f 3020 26 3020 38 ("self" "navigate-tab" "find-tab-manager" "manager" "let" "evt")}
        {Lisp-Entry "on-previous-view" #f 3025 26 3025 42 ("self" "navigate-tab" "find-tab-manager" "manager" "let" "evt")}
        {Lisp-Entry "navigate-view" #f 3030 21 3030 34 ("self" "navigate-tab" "find-tab-manager" "manager" "let" "backward?")}
        {Lisp-Entry "get-tab-stops" #f 3035 26 3035 39 ()}
        {Lisp-Entry "tab-stop-enter" #f 3039 26 3039 40 ("select-all")}
        {Lisp-Entry "tab-stop-exit" #f 3043 26 3043 39 ()}
        {Lisp-Entry "on-undo" #f 3052 11 3052 18 ("undo" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-redo" #f 3058 11 3058 18 ("redo" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-cut" #f 3064 11 3064 17 ("cut-selection" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-copy" #f 3070 11 3070 18 ("copy-selection" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-paste" #f 3076 11 3076 19 ("paste-clipboard" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-paste-properties" #f 3082 11 3082 30 ("paste-properties" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-delete" #f 3088 11 3088 20 ("delete-selection" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-rename" #f 3094 11 3094 20 ("rename-selection" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-select-all" #f 3100 11 3100 24 ("select-all" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "can-undo?" #f 3106 26 3106 35 ("can-undo?" "surrogate" "if")}
        {Lisp-Entry "can-redo?" #f 3112 26 3112 35 ("can-redo?" "surrogate" "if")}
        {Lisp-Entry "can-cut?" #f 3118 26 3118 34 ("can-cut?" "surrogate" "if")}
        {Lisp-Entry "can-copy?" #f 3124 26 3124 35 ("can-copy?" "surrogate" "if")}
        {Lisp-Entry "can-paste?" #f 3130 26 3130 36 ("can-paste?" "surrogate" "if")}
        {Lisp-Entry "can-paste-properties?" #f 3136 26 3136 47 ("can-paste-properties?" "surrogate" "if")}
        {Lisp-Entry "can-delete?" #f 3142 26 3142 37 ("can-delete?" "surrogate" "if")}
        {Lisp-Entry "can-rename?" #f 3148 26 3148 37 ("can-rename?" "surrogate" "if")}
        {Lisp-Entry "can-select-all?" #f 3154 26 3154 41 ("can-select-all?" "surrogate" "if")}
        {Lisp-Entry "undo" #f 3160 26 3160 30 ()}
        {Lisp-Entry "redo" #f 3164 26 3164 30 ()}
        {Lisp-Entry "cut-selection" #f 3168 26 3168 39 ()}
        {Lisp-Entry "copy-selection" #f 3172 26 3172 40 ()}
        {Lisp-Entry "paste-clipboard" #f 3176 26 3176 41 ()}
        {Lisp-Entry "paste-properties" #f 3180 26 3180 42 ()}
        {Lisp-Entry "delete-selection" #f 3184 26 3184 42 ()}
        {Lisp-Entry "rename-selection" #f 3188 26 3188 42 ()}
        {Lisp-Entry "select-all" #f 3192 26 3192 36 ("rest")}
        {Lisp-Entry "acquire-capture" #f 3201 18 3201 33 ("get-player" "acquire-capture" "self" "set-captured-view")}
        {Lisp-Entry "release-capture" #f 3206 18 3206 33 ("get-player" "release-capture" "set-captured-view")}
        {Lisp-Entry "get-tooltip?" #f 3216 26 3216 38 ("tooltip?")}
        {Lisp-Entry "set-tooltip?" #f 3220 18 3220 30 ("set!" "tooltip?" "neq?" "when" "flag")}
        {Lisp-Entry "get-tooltip-text" #f 3225 26 3225 42 ("present-shortcut" "format" "require-action-item" "get-shortcut" "shortcut" "action" "not" "or" "if" "tooltip-text" "localize" "text" "let")}
        {Lisp-Entry "set-tooltip-text" #f 3235 18 3235 34 ("tooltip-text" "set!" "text")}
        {Lisp-Entry "get-formatted-tooltip?" #f 3240 26 3240 48 ()}
        {Lisp-Entry "get-tooltip-bounds" #f 3244 26 3244 44 ("pos")}
        {Lisp-Entry "get-tooltip-context" #f 3248 26 3248 45 ("bounds:" "text:" "self" "view:" "Tooltip-Context" "new" "when" "get-tooltip-bounds" "bounds" "get-tooltip-text" "text" "let" "pos")}
        {Lisp-Entry "get-translated-clipper" #f 3260 11 3260 33 ("rect-intersection" "get-bottom" "set-bottom" "get-right" "set-right" "get-top" "set-top" "get-left" "/" "set-left" "when" "get-v" "position" "get-h" "*" "-" "get-translated-clipper" "p" "with" "1.0" "scaling" "scaled?" "sc" "let" "parent" "not" "if" "fxround" "offset-rect" "r" "get-bounds" "b" "let*" "v" "h")}
        {Lisp-Entry "get-surface" #f 3280 18 3280 29 ("get-bounds" "setup-clipper" "1.0" "0" "get-height" "get-width" "get-v" "get-h" "set-transform" "get-lie" "lie" "get-player" "get-window-surface" "Surface" "new" "surface" "let")}
        {Lisp-Entry "invalidate-view" #f 3293 18 3293 33 ("invalidate-rect" "get-bounds" "bounds" "with")}
        {Lisp-Entry "invalidate-rect" #f 3298 18 3298 33 ("invalidate-rect" "self" "acquire" "acquired" "with" "get-root" "root" "when" "get-player" "player" "let" "rect")}
        {Lisp-Entry "invalidate-region" #f 3307 18 3307 35 ("invalidate-region" "get-v" "get-h" "offset!" "get-lie" "-" "delta" "get-root" "root" "let*" "when" "get-player" "player" "let" "region")}
        {Lisp-Entry "redraw-view" #f 3316 18 3316 29 ("get-bounds" "bounds" "else" "get-v" "get-h" "offset!" "get-lie" "-" "delta" "redraw-window" "self" "acquire" "acquired" "with" "cond" "get-root" "root" "when" "get-player" "player" "let" "region" "region:" "rect" "rect:")}
        {Lisp-Entry "redraw-view-only" #f 3335 18 3335 34 ("self" "platform-redraw-view-only" "get-handle" "hwnd" "when" "get-player" "player" "let")}
        {Lisp-Entry "update-view" #f 3342 18 3342 29 ("update-window" "set-effect" "when" "get-player" "player" "let" "effect" "effect:")}
        {Lisp-Entry "invalidate-border" #f 3354 18 3354 35 ("invalidate-region" "border-region" "region" "with-closed" "get-finished?" "when" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "redraw-border" #f 3360 18 3360 31 ("region:" "redraw-view" "border-region" "region" "with-closed" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "border-region" #f 3365 18 3365 31 ("frame-region" "get-bounds" "bounds" "with" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "on-save" #f 3375 18 3375 25 ("save" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-save-as" #f 3381 18 3381 28 ("save-as" "evt")}
        {Lisp-Entry "on-revert-saved" #f 3385 18 3385 33 ("revert-saved" "evt")}
        {Lisp-Entry "on-compare-saved" #f 3389 18 3389 34 ("compare-saved" "evt")}
        {Lisp-Entry "save" #f 3393 26 3393 30 ()}
        {Lisp-Entry "save-as" #f 3397 26 3397 33 ()}
        {Lisp-Entry "save-to" #f 3401 26 3401 33 ("moniker")}
        {Lisp-Entry "revert-saved" #f 3405 26 3405 38 ()}
        {Lisp-Entry "compare-saved" #f 3409 26 3409 39 ()}
        {Lisp-Entry "get-class-image" #f 3418 16 3418 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 3422 16 3422 37 ("nextmethod" "else" "user-data" "effect" "layer" "offscreen?" "outline-view" "action" "enabled?" "drag-tolerance" "draggable?" "tooltip-text" "tooltip?" "auto-size?" "background" "font" "title" "field-name" "case" "property")}
        {Lisp-Entry "install-surrogate?" #f 3442 11 3442 29 ()}
        {Lisp-Entry "component-surrogate" #f 3446 11 3446 30 ("View-Surrogate")}
        {Lisp-Entry "addable-class?" #f 3450 11 3450 25 ("View" "subtype?" "class")}
        {Lisp-Entry "get-row-class" #f 3454 11 3454 24 ("nextmethod" "else" "action-handler" "selection-handler" "content-change-handler" "tab-press-handler" "return-press-handler" "backspace-press-handler" "escape-press-handler" "arrow-press-handler" "key-press-handler" "context-menu-handler" "receive-files-handler" "receive-drop-handler" "current-drop-handler" "double-click-handler" "drag-up-handler" "drag-move-handler" "mouse-up-handler" "mouse-move-handler" "mouse-down-handler" "mouse-leave-handler" "mouse-hover-handler" "mouse-enter-handler" "Handler-Row" "cursor-update-handler" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 3482 11 3482 27 ("nextmethod" "else" "enabled?" "draggable?" "tooltip?" "offscreen?" "transparent?" "String-Row" "tooltip-text" "Boolean-Row" "auto-size?" "Color-Row" "background" "Font-Row" "font" "Dimension-Row" "size" "Point-Row" "position" "Localized-Row" "new" "title" "field-name" "case" "property")}}}})
"View-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "View-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.View-Actions" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "View-Actions" #f 46 7 46 19 ("redo-aux" "undo-aux" "scroll-down" "extend-down" "Down" "down" "move-down" "extend-right" "Right" "right" "move-right" "scroll-up" "extend-up" "Up" "up" "move-up" "extend-left" "Left" "left" "direction:" "on-arrow" "move-left" "on-select-all" "select-all" "Delete" "on-delete" "delete" "on-paste-properties" "paste-properties" "on-paste" "paste" "on-copy" "copy" "on-cut" "cut" "on-redo" "redo" "on-undo" "undo" "on-previous-view" "previous-view" "Tab" "on-next-view" "next-view" "control-shift-return" ":control" "control-return" "shift-return" "Return" "on-return-press" "return" "shift-backspace" "Backspace" "on-backspace-press" "backspace" ":shift" "shift-escape" "Escape" "Shortcut" "shortcut:" "on-escape-press" ":focus" "Event-Handler" "action-handler:" "escape" "name:" "Actions")}}})
"View-Player"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "View-Player.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.window.View-Player" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "View-Player" #f 50 7 50 18 ("Window")
        {Lisp-Entry "close-root?" #f 53 12 53 23 ("set-close-root?" "get-close-root?")}
        {Lisp-Entry "root" #f 56 8 56 12 ()}
        {Lisp-Entry "previously-focused-view" #f 57 8 57 31 ("generate")}
        {Lisp-Entry "prepare" #f 65 11 65 18 ("destroy-mandatory" "prepare-root" "nextmethod" "rest")}
        {Lisp-Entry "prepare-root" #f 71 29 71 41 ("new-root" "set-root")}
        {Lisp-Entry "new-root" #f 75 29 75 37 ("offscreen?:" "Host-View" "new")}
        {Lisp-Entry "find-to-modify" #f 79 11 79 25 ("nextmethod" "get-root" "root" "'root" "eq?" "if" "test" "name")}
        {Lisp-Entry "get-components" #f 85 11 85 25 ("get-children" "root" "cons")}
        {Lisp-Entry "destroy" #f 94 11 94 18 ("nextmethod" "close-root")}
        {Lisp-Entry "close-root" #f 99 29 99 39 ("set!" "set-player" "root" "close" "close-root?" "if")}
        {Lisp-Entry "erase-background" #f 111 11 111 27 ("nextmethod" "processed" "get-offscreen?" "root" "and" "if" "surface")}
        {Lisp-Entry "get-close-root?" #f 122 18 122 33 ("close-root?")}
        {Lisp-Entry "set-close-root?" #f 126 18 126 33 ("close-root?" "set!" "value")}
        {Lisp-Entry "get-root" #f 130 18 130 26 ("root")}
        {Lisp-Entry "set-root" #f 134 18 134 26 ("layout-window" "self" "set-player" "set-offscreen?" "'root" "set-name" "set!" "root" "neq?" "when" "value")}
        {Lisp-Entry "size-change" #f 148 11 148 22 ("layout-window" "nextmethod" "size")}
        {Lisp-Entry "layout" #f 153 11 153 17 ("get-size" "set-size" "0" "Point" "set-position" "root" "when")}
        {Lisp-Entry "in-error?" #f 164 8 164 17 ()}
        {Lisp-Entry "get-in-error?" #f 167 18 167 31 ("in-error?")}
        {Lisp-Entry "set-in-error?" #f 171 18 171 31 ("invalidate-window" "in-error?" "set!" "flag")}
        {Lisp-Entry "Error-Color" #f 176 14 176 25 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "paint-in-error" #f 180 11 180 25 ("Error-Color" "fill-rect" "bounds" "surface")}
        {Lisp-Entry "paint" #f 189 11 189 16 ("1.0" "0" "root" "paint" "set!" "paint-in-error" "in-error?" "setup-clipper" "get-box" "Rect" "is?" "if" "clipper" "let" "surface" "function" "self" "with-platform-painting" "platform-data" "region")}
        {Lisp-Entry "receive-files" #f 206 11 206 24 ("processed" "root" "dispatch-receive-files" "in-error?" "unless" "files" "pos")}
        {Lisp-Entry "mouse-down" #f 217 11 217 21 ("processed" "root" "dispatch-mouse-down" "bell" "in-error?" "if" "v" "h")}
        {Lisp-Entry "mouse-move" #f 224 11 224 21 ("processed" "root" "dispatch-mouse-move" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "simulate-mouse-move" #f 230 11 230 30 ("get-v" "get-h" "root" "dispatch-mouse-move" "when" "find-view" "view" "mouse-position" "pos" "let")}
        {Lisp-Entry "mouse-up" #f 237 11 237 19 ("processed" "root" "dispatch-mouse-up" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "double-click" #f 243 11 243 23 ("processed" "root" "dispatch-double-click" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "context-menu" #f 249 11 249 23 ("processed" "root" "dispatch-context-menu" "set-in-error?" "in-error?" "if" "v" "h")}
        {Lisp-Entry "middle-mouse-down" #f 256 11 256 28 ("processed" "root" "dispatch-middle-mouse-down" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "middle-mouse-up" #f 262 11 262 26 ("processed" "root" "dispatch-middle-mouse-up" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "right-mouse-down" #f 268 11 268 27 ("processed" "root" "dispatch-right-mouse-down" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "right-mouse-up" #f 274 11 274 25 ("unprocessed" "root" "dispatch-right-mouse-up" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "for-each-palette" #f 285 18 285 34 ("for-each-palette" "root" "when" "proc")}
        {Lisp-Entry "find-palette" #f 290 18 290 30 ("find-palette" "root" "when" "type")}
        {Lisp-Entry "popup" #f 300 18 300 23 ("get-popups" "cons" "set-popups" "new-popup" "popup" "let" "initargs" "class")}
        {Lisp-Entry "new-popup" #f 306 11 306 20 ("visible?:" "get-overlapped" "owner:" "new" "apply" "initargs" "class")}
        {Lisp-Entry "close-popups" #f 313 18 313 30 ("close-popup" "memq?" "or" "popup" "function" "for-each" "get-owners" "owners" "get-overlapped" "overlapped" "let*" "get-passing-through?" "not" "get-popups" "and" "when" "exclude" "exclude:" "all?" "all?:")}
        {Lisp-Entry "focus-gain" #f 328 11 328 21 ("processed" "acquire-focus" "previously-focused-view" "when" "self" "set-focused-window")}
        {Lisp-Entry "focus-lose" #f 335 11 335 21 ("processed" "set-focused-window" "set-focus" "previously-focused-view" "set!" "self" "get-player" "eq?" "and" "when" "get-focus" "focus" "let" "receiving")}
        {Lisp-Entry "key-press" #f 349 11 349 20 ("processed" "close-popups" "car" "popup-key-press" "unless" "root" "dispatch-key-press" "get-popups" "null?" "if" "Key-Hook" "not" "or" "when" "char")}}}})
"View-Style"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "text" "View-Style.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.text.View-Style" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "View-Style" #f 45 7 45 17 ("Style")
        {Lisp-Entry "properties" #f 49 14 49 24 ("form:" "alignment:")}
        {Lisp-Entry "form" #f 55 18 55 22 ()}
        {Lisp-Entry "view" #f 56 18 56 22 ()}
        {Lisp-Entry "construct-literal" #f 60 16 60 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" #f 64 11 64 21 ("view~self" "set!" "nextmethod" "apply" "others" "view" "bind-keywords" "rest")}
        {Lisp-Entry "compare-object" #f 70 11 70 25 ("else" ":not-equal" "get-view" "view" "eq?" "if" ":equal" "case" "nextmethod" "result" "let" "target")}
        {Lisp-Entry "print" #f 81 11 81 16 ("view" "alignment" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-value" #f 89 11 89 20 ("nextmethod" "else" "form" "form:" "case" "property")}
        {Lisp-Entry "set-value" #f 96 11 96 20 ("nextmethod" "else" "form" "set!" "form:" "case" "value" "property")}
        {Lisp-Entry "get-form" #f 108 18 108 26 ("form")}
        {Lisp-Entry "get-view" #f 112 18 112 26 ("view")}
        {Lisp-Entry "set-view" #f 117 18 117 26 ("view" "set!" "value")}
        {Lisp-Entry "get-width" #f 126 11 126 20 ("view" "get-width")}
        {Lisp-Entry "get-height" #f 130 11 130 21 ("view" "get-height")}
        {Lisp-Entry "run-width" #f 134 11 134 20 ("get-width" "run")}
        {Lisp-Entry "propagate?" #f 143 11 143 21 ()}
        {Lisp-Entry "place-update" #f 152 11 152 23 ("Point" "new" "view" "set-position" "v" "h")}
        {Lisp-Entry "height-update" #f 156 11 156 24 ("Point" "new" "set-position" "get-height" "justify-element" "get-v" "+" "v" "get-h" "h" "view" "get-position" "pos" "let*" "height")}}}})
"Wallpaper-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Wallpaper-Actions.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Wallpaper-Actions" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Wallpaper-Actions" #f 46 7 46 24 ("on-display-info" "display-info" "on-previous" "previous" "on-change" "change" "on-paused" "paused" "on-random" "random" "on-delete-file" "delete-file" "on-add-to-favorite" "add-to-favorite" "stretched" "stretched-mode" "filled" "filled-mode" "tiled" "tiled-mode" ":alt" "centered" "mode:" "on-change-mode" "centered-mode" "Next" "on-next" "next" "Prior" "on-prior" "prior" "End" "on-end" "end" "Home" "on-home" "home" "Space" "Shortcut" "shortcut:" "on-empty" ":stage" "Event-Handler" "action-handler:" "empty" "name:" "Actions")}}})
"Wallpaper-Stage"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "Wallpaper-Stage.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.view.Wallpaper-Stage" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Wallpaper-Stage" #f 52 7 52 22 ("tooltip?:" "Stage")
        {Lisp-Entry "image" #f 55 8 55 13 ()}
        {Lisp-Entry "previous" #f 56 8 56 16 ()}
        {Lisp-Entry "wallpapers" #f 57 8 57 18 ()}
        {Lisp-Entry "mode" #f 58 8 58 12 ()}
        {Lisp-Entry "random?" #f 59 8 59 15 ()}
        {Lisp-Entry "browse?" #f 60 8 60 15 ()}
        {Lisp-Entry "configuration" #f 61 8 61 21 ()}
        {Lisp-Entry "choices" #f 62 8 62 15 ()}
        {Lisp-Entry "locator" #f 63 8 63 15 ("1.0" "max-delay:" "Wallpaper-Locator" "new")}
        {Lisp-Entry "changer" #f 64 8 64 15 ()}
        {Lisp-Entry "threads" #f 65 8 65 15 ()}
        {Lisp-Entry "paused?" #f 66 8 66 15 ()}
        {Lisp-Entry "done?" #f 67 8 67 13 ()}
        {Lisp-Entry "preferences" #f 74 11 74 22 ("error?:" "wallpaper" "'wallpaper" "get-preferences")}
        {Lisp-Entry "install-wallpaper" #f 78 11 78 28 ("child" "install-configuration" "get-active" "active" "when" "preferences" "pref" "let")}
        {Lisp-Entry "install-configuration" #f 86 11 86 32 ("get-period" "setup-changer" "changer" "and" "get-startup" "startup-file" "set-source" "get-favorites" "setup-favorites" "get-recursive?" "setup-wallpapers" "Directory" "is?" "dir?" "get-directory" "wallpaper" "let" "get-size" "set-view-size" "get-random?" "set-random?" "get-mode" "set-mode" "cache?:" "Image" "new" "invalidate-view" "wallpapers" "image" "begin" "not" "if" "browse?" "set!" "configuration" "neq?" "when" "brws?" "config")}
        {Lisp-Entry "context-menu" #f 111 11 111 23 ("new-stage-menu" "track-popup-menu" "acquire-focus" "nextmethod" "preferences" "get-children" "null?" "if" "pos")}
        {Lisp-Entry "new-stage-menu" #f 118 11 118 25 ("layout-menu" "if" "set-title" "member?" "favorite?" "get-favorites" "favorites" "get-name" "name" "configuration" "and" "when" "favorite-separator" "'favorite-separator" "favorite" "'favorite" "set-visible?" "get-source" "source" "manage" "'manage" "locate" "get-content" "manage-menu" "Stage-Menu" "new" "menu" "let*")}
        {Lisp-Entry "on-change" #f 134 11 134 20 ("change-wallpaper" "evt")}
        {Lisp-Entry "on-previous" #f 138 11 138 22 ("show-previous" "evt")}
        {Lisp-Entry "on-add-to-favorite" #f 142 11 142 29 ("format" "flash-message" "'favorites" "set-preference" "cons" "remove!" "new-favorites" "member?" "favorite?" "get-favorites" "favorites" "get-name" "name" "let*" "bell" "configuration" "not" "or" "if" "get-source" "source" "let" "evt")}
        {Lisp-Entry "on-delete-file" #f 154 11 154 25 ("change-wallpaper" "choices" "=" "test:" "remove!" "wallpapers" "set!" "get-name" "format" "flash-message" "delete-file" "get-source" "source" "let" "image" "when" "evt")}
        {Lisp-Entry "on-change-mode" #f 165 11 165 25 ("mode:" "get-property" "set-mode" "evt")}
        {Lisp-Entry "size-change" #f 169 11 169 22 ("update-image" "set-view-size" "image" "when" "nextmethod" "size")}
        {Lisp-Entry "update-image" #f 176 11 176 23 ("invalidate-view" "image" "update-image")}
        {Lisp-Entry "get-tooltip-text" #f 181 11 181 27 ("get-mode" "get-height" "get-width" "format" "list" "get-size" "image-size" "get-source" "source" "let" "alt-down?" "control-down?" "image" "and" "when")}
        {Lisp-Entry "get-source" #f 194 11 194 21 ("get-source" "image" "when")}
        {Lisp-Entry "set-source" #f 199 11 199 21 ("update-view" "invalidate-view" "format" "message-box" "else" "exists?" "image" "set-source" "not" "cond" "get-source" "previous" "set!" "file")}
        {Lisp-Entry "set-mode" #f 212 11 212 19 ("invalidate-view" "set-mode" "image" "when" "mode~self" "set!" "mode")}
        {Lisp-Entry "set-random?" #f 219 11 219 22 ("random?" "set!" "flag")}
        {Lisp-Entry "setup-wallpapers" #f 223 11 223 27 ("get-name" "key:" "ci<?" "sort" "wallpapers" "recursive?:" "cons" "set!" "image-file?" "when" "file" "function" "iterate-directory" "files" "let" "recursive?" "dir")}
        {Lisp-Entry "image-file?" #f 233 11 233 22 ("ci=?" "test:" "get-extension" "member?" "file")}
        {Lisp-Entry "setup-favorites" #f 238 11 238 26 ("wallpaper-file" "favorite" "function" "map" "choices" "set!" "favorites" "dir")}
        {Lisp-Entry "startup-file" #f 244 11 244 23 ("next-wallpaper" "else" "wallpaper-file" ":empty" "eq?" "if" "background" "not" "cond" "startup" "dir" "dir?")}
        {Lisp-Entry "setup-changer" #f 250 11 250 24 ("change-wallpaper" "paused?" "unless" "sleep" "done?" "not" "while" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "changer" "set!" "unimplemented" "period")}
        {Lisp-Entry "wallpaper-file" #f 264 11 264 25 ("new-file" "name" "dir")}
        {Lisp-Entry "change-wallpaper" #f 268 18 268 34 ("next-wallpaper" "set-source" "configuration" "when")}
        {Lisp-Entry "show-first" #f 273 11 273 21 ("car" "set-source" "wallpapers" "when" "random?" "unless")}
        {Lisp-Entry "show-last" #f 279 11 279 20 ("last" "set-source" "wallpapers" "when" "random?" "unless")}
        {Lisp-Entry "show-previous" #f 285 11 285 24 ("previous" "set!" "set-source" "when" "previous-wallpaper" "wallpaper" "let")}
        {Lisp-Entry "next-wallpaper" #f 292 11 292 25 ("remove!" "random-element" "wallpaper" "copy" "set!" "choices" "null?" "when" "length" "1" "wallpaper-rank" "+" "modulo" "element" "wallpapers" "car" "get-source" "source" "let" "random?" "not" "if")}
        {Lisp-Entry "previous-wallpaper" #f 306 11 306 29 ("previous" "1" "-" "element" "0" "=" "wallpaper-rank" "rank" "length" "count" "last" "wallpapers" "essay" "get-source" "source" "let" "random?" "not" "if")}
        {Lisp-Entry "wallpaper-rank" #f 319 11 319 25 ("=" "test:" "wallpapers" "find" "wallpaper")}
        {Lisp-Entry "focus-actions" #f 329 11 329 24 ("nextmethod" "wallpaper" "'wallpaper" "find-actions" "cons")}
        {Lisp-Entry "on-empty" #f 339 11 339 19 ("install-configuration" "evt")}
        {Lisp-Entry "on-home" #f 343 11 343 18 ("show-first" "evt")}
        {Lisp-Entry "on-end" #f 347 11 347 17 ("show-last" "evt")}
        {Lisp-Entry "on-prior" #f 351 11 351 19 ("show-previous" "evt")}
        {Lisp-Entry "on-next" #f 355 11 355 18 ("change-wallpaper" "evt")}
        {Lisp-Entry "on-random" #f 359 11 359 20 ("if" "flash-message" "change-wallpaper" "when" "not" "random?" "set!" "evt")}
        {Lisp-Entry "on-paused" #f 366 11 366 20 ("if" "flash-message" "not" "paused?" "set!" "evt")}
        {Lisp-Entry "on-display-info" #f 371 11 371 26 ("2.0" "delay:" "format" "member?" "favorite?" "configuration" "get-favorites" "favorites" "get-name" "name" "let*" "Bitmap-Resource" "not" "if" "flash-message" "get-source" "source" "let" "evt")}
        {Lisp-Entry "flash-message" #f 383 11 383 24 ("clear-user-message" "sleep" "user-message" "thread" "synchronized" "function" "execute:" "self" "context:" "name:" "Thread" "new" "unimplemented" "1.0" "delay" "delay:" "message")}
        {Lisp-Entry "key-press" #f 400 11 400 20 ("locator" "enter" "wallpapers" "alphanumeric?" "and" "when" "key")}
        {Lisp-Entry "draw" #f 410 11 410 15 ("size:" "0" "draw" "image" "when" "get-size" "size" "let" "nextmethod" "lv" "lh" "context" "surface")}
        {Lisp-Entry "on-configure" #f 422 18 422 30 ("install-configuration" "browse-configuration" "eq?" "if" "configuration:" "get-property" "configuration" "let" "evt")}
        {Lisp-Entry "browse-configuration" #f 429 11 429 31 ("get-mode" "mode:" "get-period" "configuration" "essay" "period:" "choose-directory" "directory:" "Wallpaper-Configuration" "new" "install-configuration")}}
      {Lisp-Entry "Wallpaper-Locator" #f 443 7 443 24 ("Locator")
        {Lisp-Entry "iterate" #f 447 11 447 18 ("length" "0" "naturals" "wallpapers" "get-name" "title" "let" "rank" "wallpaper" "function" "for-each" "proc")}
        {Lisp-Entry "select" #f 456 11 456 17 ("wallpapers" "element" "set-source" "rank")}}
      {Lisp-Entry "Stage-Menu" #f 465 7 465 17 ("manage" "manage-separator" "previous" "change" "paused" "slide-separator" "random" "random-separator" "stretched-mode" "stretched" "filled-mode" "filled" "tiled-mode" "tiled" "centered-mode" "wallpaper" "Action" "action:" "centered" "Bitmap-Resource" "icon:" "title:" "configure" "name:" "Context-Menu")
        {Lisp-Entry "finish" #f 489 11 489 17 ("get-name" "set-title" "or" "paused?" "random?" "set-checked?" "manage" "'manage" "manage-separator" "'manage-separator" "previous" "'previous" "change" "'change" "paused" "'paused" "slide-separator" "'slide-separator" "random" "'random" "random-separator" "'random-separator" "set-visible?" "begin" "not" "if" "get-source" "source" "let" "locate" "set-selected?" "mode" "when" "nextmethod" "rest")}}
      {Lisp-Entry "Configure-Menu" #f 515 7 515 21 ("Context-Menu")
        {Lisp-Entry "finish" #f 519 11 519 17 ("update-menu" "nextmethod" "rest")}
        {Lisp-Entry "update-menu" #f 525 18 525 29 ("get-presentation" "get-active?" "config" "function" "for-each" "self" "parent:" "Separator-Item" "new" "when" "preferences" "get-children" "children" "let" "Bitmap-Resource" "insert-item")}
        {Lisp-Entry "insert-item" #f 539 11 539 22 ("configuration:" "list" "properties:" "on-configure" "'on-configure" "method-name:" ":stage" "target-name:" "Event-Handler" "action-handler:" "icon:" "selected?:" "title:" "self" "parent:" "Radio-Item" "new" "configuration" "eq?" "browse?" "if" "selected?" "let" "browse-item?" "config" "icon" "title")}}
      {Lisp-Entry "Manage-Menu" #f 551 7 551 18 ("title:" "delete-file" "favorite-separator" "add-to-favorite" "wallpaper" "Action" "action:" "Bitmap-Resource" "icon:" "favorite" "name:" "Context-Menu")}}})
"Window"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "Window.jazz"} 1245777538
    {Lisp-Entry "jazz.ui.window.Window" #f 39 19 39 40 ("jazz")
      {Lisp-Entry "Window" #f 52 7 52 13 ("Figure")
        {Lisp-Entry "title" #f 55 12 55 17 ("set-title" "get-title")}
        {Lisp-Entry "handle" #f 58 8 58 14 ()}
        {Lisp-Entry "initially-visible?" #f 66 11 66 29 ()}
        {Lisp-Entry "setup-handle" #f 70 11 70 23 ("set-handle" "self" "set-window" "handle")}
        {Lisp-Entry "default-parent" #f 75 11 75 25 ("self" "window-default-parent")}
        {Lisp-Entry "prepare" #f 79 11 79 18 ("self" "prepare-handle" "setup-handle" "nextmethod" "rest")}
        {Lisp-Entry "conclude" #f 84 11 84 19 ("get-size" "size-change" "nextmethod" "rest")}
        {Lisp-Entry "open?" #f 89 18 89 23 ("handle" "boolean")}
        {Lisp-Entry "show" #f 93 11 93 15 ("show-window" "handle" "assert" "nextmethod")}
        {Lisp-Entry "hide" #f 99 11 99 15 ("hide-window" "handle" "assert" "nextmethod")}
        {Lisp-Entry "minimize" #f 105 18 105 26 ("minimize-window" "handle" "assert")}
        {Lisp-Entry "set-state" #f 110 18 110 27 ("error" "else" "restore-window" "restored" "maximize-window" "maximized" "minimize-window" "minimized" "case" "handle" "assert" "state")}
        {Lisp-Entry "close" #f 119 11 119 16 ("set-handle" "set-window" "handle" "destroy-window" "destroy-component" "set-visible?")}
        {Lisp-Entry "print" #f 127 11 127 16 ("empty-string?" "title" "or" "get-size" "size" "get-position" "position" "let" "format" "handle" "not" "if" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "add-child" #f 144 11 144 20 ("cons" "children" "set!" "child")}
        {Lisp-Entry "add-form" #f 148 11 148 19 ("add-child" "child-form" "parent-form")}
        {Lisp-Entry "unprocessed-message" #f 157 29 157 48 ("unprocessed")}
        {Lisp-Entry "erase-background" #f 166 29 166 45 ("platform-erase-background" "assert" "handle")}
        {Lisp-Entry "paint" #f 171 29 171 34 ("paint-window" "platform-data" "region")}
        {Lisp-Entry "paint-window" #f 175 21 175 33 ("draw" "surface" "function" "self" "with-platform-painting" "platform-data")}
        {Lisp-Entry "*colors*" #f 181 14 181 22 ("Dark-Purple" "Dark-Blue" "Dark-Green" "Dark-Yellow" "Dark-Orange" "Dark-Red" "name:" "Color")}
        {Lisp-Entry "*nb-colors*" #f 189 14 189 25 ("*colors*" "length")}
        {Lisp-Entry "*current-color*" #f 192 14 192 29 ("0")}
        {Lisp-Entry "draw-placeholder" #f 196 11 196 27 ("paint" "cycle-debug-color!" "set-color" "surface")}
        {Lisp-Entry "draw" #f 201 29 201 33 ("surface")}
        {Lisp-Entry "mouse-wheel" #f 210 29 210 40 ("unprocessed" "processed" "mouse-wheel" "acquired" "if" "get-mouse-in" "view" "let" "delta" "v" "h")}
        {Lisp-Entry "mouse-down" #f 219 29 219 39 ("unprocessed" "v" "h")}
        {Lisp-Entry "mouse-move" #f 223 29 223 39 ("unprocessed" "v" "h")}
        {Lisp-Entry "mouse-up" #f 227 29 227 37 ("unprocessed" "v" "h")}
        {Lisp-Entry "double-click" #f 231 29 231 41 ("mouse-down" "v" "h")}
        {Lisp-Entry "middle-mouse-down" #f 235 29 235 46 ("unprocessed" "v" "h")}
        {Lisp-Entry "middle-mouse-up" #f 239 29 239 44 ("unprocessed" "v" "h")}
        {Lisp-Entry "right-mouse-down" #f 243 29 243 45 ("unprocessed" "v" "h")}
        {Lisp-Entry "right-mouse-up" #f 247 29 247 43 ("unprocessed" "v" "h")}
        {Lisp-Entry "call-context-menu" #f 252 11 252 28 ("get-v" "get-h" "context-menu" "Point" "new" "get-desktop" "acquire" "pos" "let" "v" "h")}
        {Lisp-Entry "context-menu" #f 257 29 257 41 ("unprocessed" "v" "h")}
        {Lisp-Entry "acquire-capture" #f 266 18 266 33 ("set-capture" "handle" "assert")}
        {Lisp-Entry "release-capture" #f 271 18 271 33 ("unset-capture")}
        {Lisp-Entry "cursor-update" #f 280 29 280 42 ("unprocessed" "processed" "if" "hit")}
        {Lisp-Entry "system-key-down" #f 291 11 291 26 ("unprocessed")}
        {Lisp-Entry "system-key-up" #f 295 11 295 24 ("unprocessed")}
        {Lisp-Entry "key-down" #f 299 11 299 19 ("unprocessed" "wparam")}
        {Lisp-Entry "key-up" #f 303 11 303 17 ("unprocessed" "wparam")}
        {Lisp-Entry "call-key-press" #f 307 11 307 25 ("key-press" "char")}
        {Lisp-Entry "key-press" #f 311 26 311 35 ("unprocessed" "char")}
        {Lisp-Entry "timer-pulse" #f 320 29 320 40 ("thread-yield!")}
        {Lisp-Entry "call-position-change" #f 329 18 329 38 ("Point" "new" "position-change" "v" "h")}
        {Lisp-Entry "position-change" #f 333 29 333 44 ("unprocessed" "position")}
        {Lisp-Entry "call-size-change" #f 337 18 337 34 ("unprocessed" "Dimension" "new" "size-change" "get-installed?" "if" "height" "width")}
        {Lisp-Entry "size-change" #f 343 29 343 40 ("unprocessed" "size")}
        {Lisp-Entry "mouse-activate?" #f 347 29 347 44 ()}
        {Lisp-Entry "on-mouse-activate" #f 351 29 351 46 ("unprocessed")}
        {Lisp-Entry "on-activate" #f 356 29 356 40 ("unprocessed" "on-activate-palette" "on-deactivate-palette" "inactive" "'inactive" "eq?" "if" "kind")}
        {Lisp-Entry "on-activate-palette" #f 363 29 363 48 ()}
        {Lisp-Entry "on-deactivate-palette" #f 367 29 367 50 ()}
        {Lisp-Entry "activate-app" #f 373 29 373 41 ("unprocessed" "status")}
        {Lisp-Entry "on-close" #f 377 29 377 37 ("close-with-confirm" "evt")}
        {Lisp-Entry "close-with-confirm" #f 381 26 381 44 ("close")}
        {Lisp-Entry "focus-gain" #f 385 29 385 39 ("unprocessed")}
        {Lisp-Entry "focus-lose" #f 389 29 389 39 ("unprocessed" "receiving")}
        {Lisp-Entry "drop-files" #f 398 11 398 21 ("self" "platform-drop-files" "wparam")}
        {Lisp-Entry "receive-files" #f 402 29 402 42 ("files" "pos")}
        {Lisp-Entry "fade-in" #f 415 18 415 25 ("set-layered?" "set!" "fl/" "-" "*" "fxceiling" "+" "<" "while" "start" "current-time" "time->seconds" "now" "0.15" "delay" "255" "max" "let*" "update-window" "set-visible?" "0" "handle" "set-alpha-blending" "fade-speed" "fade-speed:")}
        {Lisp-Entry "fade-out" #f 432 18 432 26 ("=" "unless" "set!" "handle" "set-alpha-blending" "by" "from" "n" "for" "loop" "alpha" "let" "5" "step" "step:" "0" "to" "to:")}
        {Lisp-Entry "get-handle" #f 447 18 447 28 ("handle")}
        {Lisp-Entry "set-handle" #f 451 18 451 28 ("handle" "set!" "hw")}
        {Lisp-Entry "opened?" #f 455 18 455 25 ("handle" "boolean")}
        {Lisp-Entry "set-parent" #f 459 18 459 28 ("platform-set-parent" "handle" "assert" "nextmethod" "parent")}
        {Lisp-Entry "get-frame" #f 465 11 465 20 ("get-frame" "parent" "when" "Frame" "self" "is?" "if")}
        {Lisp-Entry "get-overlapped" #f 472 18 472 32 ("parent" "get-overlapped" "Overlapped" "self" "is?" "if")}
        {Lisp-Entry "get-title" #f 478 26 478 35 ("title")}
        {Lisp-Entry "set-title" #f 482 26 482 35 ("localize" "set-window-title" "handle" "assert" "title" "set!" "value")}
        {Lisp-Entry "get-window-title" #f 488 18 488 34 ("get-window-handle-title" "handle" "assert")}
        {Lisp-Entry "acquire" #f 493 18 493 25 ("error" "else" "acquire-rect" "Rect" "get-handle" "acquire-point" "Point" "typecase" "handle" "assert" "shape" "window")}
        {Lisp-Entry "get-position-in-root" #f 504 18 504 38 ("get-position" "platform-translate-to-root" "handle" "assert")}
        {Lisp-Entry "get-position" #f 509 11 509 23 ("platform-get-position" "handle" "assert")}
        {Lisp-Entry "set-position" #f 514 11 514 23 ("platform-set-position" "get-position" "nu=?" "unless" "handle" "assert" "pos")}
        {Lisp-Entry "move-window" #f 520 18 520 29 ("get-v" "get-h" "+" "Point" "new" "set-position" "get-position" "pos" "let" "dv" "dh")}
        {Lisp-Entry "get-size" #f 525 11 525 19 ("platform-get-size" "handle" "assert")}
        {Lisp-Entry "set-size" #f 530 11 530 19 ("get-window-size" "nu+" "set-window-size" "0" "Dimension" "nu=?" "unless" "platform-get-size" "nu-" "delta" "let" "handle" "assert" "new-size")}
        {Lisp-Entry "size-window" #f 537 18 537 29 ("get-height" "get-width" "+" "Dimension" "new" "set-size" "get-size" "size" "let" "dheight" "dwidth")}
        {Lisp-Entry "get-window-size" #f 542 18 542 33 ("platform-get-window-size" "handle" "assert")}
        {Lisp-Entry "set-window-size" #f 547 18 547 33 ("platform-set-window-size" "handle" "assert" "size")}
        {Lisp-Entry "set-bounds" #f 552 18 552 28 ("platform-set-bounds" "handle" "assert" "rect")}
        {Lisp-Entry "grow-bounds" #f 557 18 557 29 ("set-position" "set-window-size" "Dimension" "get-window-size" "size" "Point" "new" "get-position" "+" "pos" "let" "dheight" "dwidth" "dv" "dh")}
        {Lisp-Entry "get-width" #f 564 18 564 27 ("get-size" "get-width")}
        {Lisp-Entry "get-height" #f 568 18 568 28 ("get-size" "get-height")}
        {Lisp-Entry "get-rect" #f 572 18 572 26 ("get-handle" "get-parent" "if" "platform-get-rect" "handle" "assert")}
        {Lisp-Entry "get-bounds" #f 577 18 577 28 ("platform-get-bounds" "handle" "assert")}
        {Lisp-Entry "ensure-displayed" #f 582 18 582 34 ("set-position" "set-size" "8" "padding:" "fit-within" "new-size" "new-position" "receive" "get-rect" "rect" "get-desktop" "get-size" "parent" "not" "if" "outer" "let")}
        {Lisp-Entry "mouse-position" #f 590 18 590 32 ("platform-mouse-position" "get-desktop" "acquire")}
        {Lisp-Entry "mouse-window" #f 594 18 594 30 ("mouse-position" "find-window")}
        {Lisp-Entry "mouse-in-window?" #f 598 18 598 34 ("mouse-position" "point-in-window?")}
        {Lisp-Entry "point-in-window?" #f 602 18 602 34 ("get-height" "get-v" "get-width" "0" "get-h" "in-interval?" "and" "get-window-size" "size" "let" "point")}
        {Lisp-Entry "find-window" #f 608 18 608 29 ("platform-window-from-point" "get-window" "point")}
        {Lisp-Entry "flash-window" #f 612 18 612 30 (".1" "sleep" "handle" "FlashWindow" "3" "repeat" "loop" "flash-window" "'flash-window" "unimplemented")}
        {Lisp-Entry "move" #f 622 18 622 22 ("platform-move-window" "handle" "assert" "cy" "cx" "y" "x")}
        {Lisp-Entry "acquire-focus" #f 627 18 627 31 ("self" "set-window-focus")}
        {Lisp-Entry "get-enabled?" #f 631 18 631 30 ("platform-window-enabled?" "handle" "assert")}
        {Lisp-Entry "enable-window" #f 636 18 636 31 ("platform-enable-window" "handle" "assert")}
        {Lisp-Entry "disable-window" #f 641 18 641 32 ("platform-disable-window" "handle" "assert")}
        {Lisp-Entry "get-client-rect" #f 646 18 646 33 ("platform-get-client-rect" "handle" "assert")}
        {Lisp-Entry "scroll-window" #f 651 18 651 31 ("platform-scroll-window" "handle" "assert" "clip-rect" "clip-rect:" "rect" "dv" "dh")}
        {Lisp-Entry "invalidate-rect" #f 656 18 656 33 ("platform-invalidate-rect" "handle" "assert" "rect")}
        {Lisp-Entry "invalidate-region" #f 661 18 661 35 ("platform-invalidate-region" "handle" "assert" "region")}
        {Lisp-Entry "invalidate-window" #f 666 18 666 35 ("platform-invalidate-window" "handle" "assert")}
        {Lisp-Entry "redraw-window" #f 671 18 671 31 ("get-client-rect" "platform-redraw-window" "or" "if" "handle" "assert" "region" "region:" "rect" "rect:")}
        {Lisp-Entry "invalidate-border" #f 678 18 678 35 ("invalidate-region" "border-region" "region" "with-closed" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "redraw-border" #f 683 18 683 31 ("region:" "redraw-window" "border-region" "region" "with-closed" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "border-region" #f 688 18 688 31 ("get-client-rect" "frame-region" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "update-window" #f 692 18 692 31 ("platform-update-window" "handle" "assert")}
        {Lisp-Entry "show-noactivate" #f 697 18 697 33 ("platform-show-noactivate" "handle" "assert")}
        {Lisp-Entry "hide-noactivate" #f 702 18 702 33 ("platform-hide-noactivate" "handle" "assert")}
        {Lisp-Entry "first-window" #f 712 18 712 30 ("first" "null?" "if" "get-windows" "windows" "let")}
        {Lisp-Entry "get-windows" #f 719 18 719 29 ("get-children" "get-visible?" "or" "Window" "is?" "and" "child" "function" "collect-if" "include-invisibles?" "include-invisibles?:")}
        {Lisp-Entry "front-window?" #f 726 18 726 31 ("parent" "first-window" "self" "eq?")}
        {Lisp-Entry "bring-to-front" #f 735 11 735 25 ("platform-bring-window-to-front" "handle" "assert" "nextmethod")}
        {Lisp-Entry "send-to-back" #f 741 11 741 23 ("platform-send-window-to-back" "handle" "assert" "nextmethod")}
        {Lisp-Entry "get-location" #f 752 11 752 23 ("location")}
        {Lisp-Entry "set-location" #f 756 11 756 23 ("location" "set!" "loc")}
        {Lisp-Entry "layout-window" #f 760 18 760 31 ("layout")}
        {Lisp-Entry "layout" #f 764 26 764 32 ()}
        {Lisp-Entry "mouse-view" #f 773 18 773 28 ("mouse-position" "find-view")}
        {Lisp-Entry "find-view" #f 777 18 777 27 ("self" "acquire" "find-drawing" "get-root" "root" "View-Player" "is?" "when" "find-window" "window" "let" "pos")}
        {Lisp-Entry "to-view" #f 784 18 784 25 ("get-root" "self" "acquire" "acquired" "get-player" "player" "let*" "view" "shape")}
        {Lisp-Entry "debug-window" #f 795 26 795 38 ("self" "Development" "set-%" "debug-window" "'debug-window" "unimplemented" "pos")}
        {Lisp-Entry "describe-window" #f 801 26 801 41 ("WINEXSTYLE" "get-ex-style" "WINSTYLE" "bits->symbolic" "get-client-rect" "get-bounds" "get-size" "get-position" "WS_CLIPSIBLINGS" "WS_CLIPCHILDREN" "get-style" "mask-bit-set?" "get-class-background" "get-name" "self" "class-of" ":console" "format" "describe-window" "'describe-window" "unimplemented" "pos")}}}})
"Window-Advanced-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Window-Advanced-Menu.jazz"} 1245732655
    {Lisp-Entry "jazz.ui.menu.Window-Advanced-Menu" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Window-Advanced-Menu" #f 46 7 46 27 ("current-frame" "application" "Action" "action:" "tile-separator" "before:" "title:" "current" "name:" "Window-Menu")}}})
"Window-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Window-Menu.jazz"} 1245732655
    {Lisp-Entry "jazz.ui.menu.Window-Menu" #f 37 19 37 43 ("jazz")
      {Lisp-Entry "Window-Menu" #f 48 7 48 18 ("tile-vertically" "tile-horizontally" "tile-separator" "previous-frame" "previous" "next-frame" "application" "Action" "action:" "Bitmap-Resource" "icon:" "next" "name:" "title:" "Menu")
        {Lisp-Entry "base-items" #f 51 8 51 18 ()}
        {Lisp-Entry "finish" #f 63 11 63 17 ("get-children" "length" "base-items" "set!" "nextmethod" "rest")}
        {Lisp-Entry "collect-palettes" #f 68 11 68 27 ("get-windows" "Palette" "is?" "window" "function" "collect-if" "get-toplevel" "toplevel" "let")}
        {Lisp-Entry "collect-frames" #f 75 11 75 25 ("get-views" "get-controller" "get-tool?" "not" "Document" "get-guest" "guest" "Frame-Host" "is-not?" "or" "frame" "function" "collect-if" "get-stage" "stage" "let")}
        {Lisp-Entry "update" #f 85 11 85 17 ("layout-menu" "Palette" "palette" "window:" "list" "properties:" "on-select-window" "'on-select-window" "method-name:" ":application" "target-name:" "Event-Handler" "action-handler:" "icon:" "get-title" "present-title" "title:" "Label-Item" "get-guest" "guest-icon" "Frame-Host" "is?" "if" "icon" "frame" "self" "parent:" "Separator-Item" "new" "not-null?" "when" "base-items" "get-children" "tail" "close" "item" "function" "for-each" "collect-frames" "frames" "collect-palettes" "palettes" "let")}
        {Lisp-Entry "present-title" #f 106 11 106 24 ("empty-string?" "null?" "or" "if" "title")}}}})
"Windows-Look"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "look" "Windows-Look.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.look.Windows-Look" #f 37 19 37 44 ("jazz")
      {Lisp-Entry "Windows-Look" #f 45 7 45 19 ("Look")
        {Lisp-Entry "present" #f 53 11 53 18 ()}
        {Lisp-Entry "get-element" #f 62 11 62 22 ("document/scrollbar/flat?" "document/header/flat?" "tool/scrollbar/flat?" "tool/header/flat?" "group/border/flat?" "outline/edge/flat?" "entry/edge/flat?" "case" "name")}}}})
"Wipe-Effect"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "effect" "Wipe-Effect.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.effect.Wipe-Effect" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Wipe-Effect" #f 45 7 45 18 ("Effect")
        {Lisp-Entry "direction" #f 48 8 48 17 ()}
        {Lisp-Entry "delay" #f 49 8 49 13 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("delay~self" "direction~self" "set!" "nextmethod" "delay" "delay:" "direction" "direction:")}
        {Lisp-Entry "animate" #f 58 11 58 18 ("up" "v" "get-height" "down" "left" "get-v" "get-h" "-" "Point" "new" "1" "*" "h" "let*" "get-width" "below" "0" "from" "n" "for" "loop" "right" "direction" "case" "destination:" "size:" "position:" "bit-blit" "wait" "delay" "when" "p" "function" "blit" "let" "size" "pos" "dst" "src")}}}})
"Workspace-Button"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "workspace" "Workspace-Button.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.workspace.Workspace-Button" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Workspace-Button" #f 47 7 47 23 ("Radio-Tool")
        {Lisp-Entry "visit?" #f 50 12 50 18 ("generate")}
        {Lisp-Entry "problem?" #f 51 12 51 20 ("generate")}
        {Lisp-Entry "set-visit?" #f 59 18 59 28 ("invalidate-view" "set!" "visit?" "neq?" "when" "flag")}
        {Lisp-Entry "set-problem?" #f 65 18 65 30 ("invalidate-view" "set!" "problem?" "neq?" "when" "flag")}
        {Lisp-Entry "notify" #f 71 18 71 24 ("invalidate-view" "problem?~self" "visit?~self" "set!" "problem?" "visit?")}
        {Lisp-Entry "preferred-size" #f 82 11 82 25 ("22" "localize" "font" "text-width" "32" "+" "Dimension" "new" "default-size" "title" "not" "if")}
        {Lisp-Entry "problem-border" #f 93 14 93 28 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "visit-start" #f 96 14 96 25 ("Light-Red" "name:" "Color")}
        {Lisp-Entry "visit-end" #f 99 14 99 23 ("Red" "name:" "Color")}
        {Lisp-Entry "draw-frame" #f 103 11 103 21 ("nextmethod" "pixel-to" "Medium" "name:" "Color" "set-color" "problem-border" "frame-rect" "get-bottom" "bottom" "1" "get-right" "-" "right" "get-top" "top" "get-left" "left" "get-bounds" "rect" "let*" "problem?" "if" "surface")}
        {Lisp-Entry "draw-tool" #f 119 11 119 20 ("enabled?" "get-v" "20" "draw-text" "Black" "name:" "Color" "set-text-color" "get-h" "+" "get-size" "justify" "center" "get-text-extent" "24" "Dimension" "nu+" "extent" "localize" "0" "let*" "get-enabled?" "enabled?:" "image" "draw" "title" "not" "1" "2" "pushed" "'pushed" "get-state" "eq?" "selected?" "or" "if" "offset" "let" "context" "surface")}
        {Lisp-Entry "draw-background" #f 132 11 132 26 ("nextmethod" "vertical" "'vertical" "direction:" "1" "visit-end" "0.5" "visit-start" "0" "list" "get-bounds" "gradient-fill" "visit?" "if" "context" "surface")}}}})
"Workspace-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Workspace-Menu.jazz"} 1245777538
    {Lisp-Entry "jazz.ui.menu.Workspace-Menu" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Workspace-Menu" #f 46 7 46 21 ("previous-workspace" "previous" "next-workspace" "next" "next-separator" "full-screen" "maximize/restore" "zoom-vertically" "application" "zoom-horizontally" "zoom-separator" "select-sql" "sql" "select-groupware" "groupware" "select-debugger" "debugger" "select-text" "text" "select-home" "jedi" "Action" "action:" "selected?:" "workspace" "group:" "Bitmap-Resource" "icon:" "home" "name:" "title:" "Menu")}}})
"Workspace-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "workspace" "Workspace-Preferences.jazz"} 1245732655
    {Lisp-Entry "jazz.ui.workspace.Workspace-Preferences" #f 37 19 37 58 ("jazz")
      {Lisp-Entry "Workspace-Preferences" #f 51 7 51 28 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "shortcut" #f 54 12 54 20 ("generate")}
        {Lisp-Entry "frame-model" #f 55 12 55 23 ("generate")}
        {Lisp-Entry "fullscreen?" #f 56 12 56 23 ("generate")}
        {Lisp-Entry "maximized?" #f 57 12 57 22 ("generate")}
        {Lisp-Entry "preserve-visibility?" #f 58 12 58 32 ("generate")}
        {Lisp-Entry "to-restore" #f 61 8 61 18 ()}
        {Lisp-Entry "apply-preferences" #f 73 11 73 28 ("activate" "set-locked-activations?" "begin" "unwind-protect" "deactivate" "get-guest" "set!" "Docked-Host" "is?" "get-focused-host" "host" "selected-workspace" "when" "palette" "let" "rest")}
        {Lisp-Entry "activate" #f 92 11 92 19 ("fullscreen?" "focus-host" "first-view" "first" "focus?:" "class-of" "select-palette" "if" "workspace:" "activate" "'activate" "workspace" "'workspace" "process-application-event" "update-status" "update-menubar-buttons" "process-activation" "maximized?" "set-maximized?" "set-selected-workspace" "self" "set-workspace-preferences" "close" "'offscreen" "slot-value" "offscreen" "apply-root" "when" "root" "'root" "find-child-located" "root-preferences" "get-root" "previous-root" "process-frames" "collect-visibility" "visibility" "full-screen-stage" "close-palettes" "function" "with-locked-update" "get-toplevel" "toplevel" "get-stage" "stage" "get-application" "appl" "let" "palette")}
        {Lisp-Entry "update-status" #f 127 18 127 31 ("get-icon" "set-icon" "get-title" "set-title" "when" "workspace" "'workspace" "find-component" "essay" "label" "get-status-bar" "status" "get-application" "appl" "let*")}
        {Lisp-Entry "collect-visibility" #f 136 11 136 29 ("cons" "null?" "to-restore" "preserve-visibility?" "not" "name" "memq?" "and" "or" "effective-host-workspaces" "list" "if" "lst" "get-workspace" "ws" "when" "get-guest" "guest" "get-visible?" "visible?" "let" "frame" "function" "collect" "get-children" "frames" "get-stage" "stage" "let*")}
        {Lisp-Entry "process-frames" #f 152 11 152 25 ("ensure-displayed" "maximized?" "unless" "set-visible?" "eq?" "when" "visible?" "frame" "bind" "info" "function" "for-each" "flag" "visibility")}
        {Lisp-Entry "process-activation" #f 163 11 163 29 ("client-activate" "view" "function" "for-each-docked" "stage-activate" "null?" "if" "get-views" "frames" "get-stage" "stage" "let*")}
        {Lisp-Entry "deactivate" #f 173 11 173 21 ("get-visible?" "frame" "function" "collect-if" "to-restore" "set!" "get-children" "frames" "get-stage" "stage" "let*" "preserve-visibility?" "when" "workspace:" "self" "deactivate" "'deactivate" "workspace" "'workspace" "get-application" "process-application-event")}
        {Lisp-Entry "get-domain" #f 188 16 188 26 ("nextmethod" "else" "Boolean-Domain" "new" "preserve-visibility?" "maximized?" "fullscreen?" "field-name" "case" "property")}
        {Lisp-Entry "property-presentation" #f 194 16 194 37 ("nextmethod" "else" "preserve-visibility?" "frame-model" "shortcut" "maximized?" "fullscreen?" "field-name" "case" "property")}
        {Lisp-Entry "get-addable-classes" #f 204 11 204 30 ("Stage-Preferences" "Docked-Preferences" "Pad-Preferences" "Splitter-Preferences" "list")}
        {Lisp-Entry "get-categorized-properties" #f 213 11 213 37 ("preserve-visibility?" "frame-model" "shortcut" "maximized?" "fullscreen?" "icon" "title")}
        {Lisp-Entry "get-row-instance" #f 217 11 217 27 ("nextmethod" "else" "Boolean-Row" "new" "preserve-visibility?" "maximized?" "fullscreen?" "field-name" "case" "property")}}}})
"Workspaces-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "Workspaces-Menu.jazz"} 1245777538
    {Lisp-Entry "jazz.ui.menu.Workspaces-Menu" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "popup-workspaces-menu" #f 47 20 47 41 ("Workspaces-Menu" "new" "track-popup-menu" "2" "length" ">=" "get-children" "when" "error?:" "workspaces" "'workspaces" "get-preferences" "preferences" "let" "pos" "view")}
      {Lisp-Entry "Workspaces-Menu" #f 55 7 55 22 ("Context-Menu")
        {Lisp-Entry "install" #f 58 11 58 18 ("insert-workspaces" "nextmethod" "rest")}
        {Lisp-Entry "insert-workspaces" #f 63 11 63 28 ("Separator" "is?" "if" "unless" "workspace" "function" "for-each" "self" "parent:" "Separator-Item" "new" "eq?" "insert-workspace" "when" "'default" "find-component" "default" "get-visible-children" "workspaces" "'workspaces" "get-preferences" "preferences" "selected-workspace" "selected" "let*")}
        {Lisp-Entry "insert-workspace" #f 79 11 79 27 ("set-selected?" "when" "workspace:" "list" "properties:" "on-action" "'on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "icon:" "title:" "self" "parent:" "Radio-Item" "new" "item" "Bitmap-Resource" "get-icon" "icon" "get-presentation" "if" "title" "let*" "selected?" "workspace")}
        {Lisp-Entry "on-action" #f 87 11 87 20 ("apply-preferences" "workspace:" "get-property" "workspace" "let" "evt")}}}})
"Workspaces-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "workspace" "Workspaces-Preferences.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.workspace.Workspaces-Preferences" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "Workspaces-Preferences" #f 47 7 47 29 ("title:" "Preferences")
        {Lisp-Entry "active" #f 50 12 50 18 ("generate")}
        {Lisp-Entry "toolbar-classes" #f 51 12 51 27 ("generate")}
        {Lisp-Entry "associations" #f 52 12 52 24 ("generate")}
        {Lisp-Entry "walk-form" #f 65 16 65 25 ("push-reference" "in-manifest?" "when" "cdr" "toolbar-class" "info" "function" "for-each" "'toolbar-classes" "get-property" "toolbar-classes" "let" "form" "analyser")}
        {Lisp-Entry "can-rename-component?" #f 79 11 79 32 ()}
        {Lisp-Entry "can-delete-component?" #f 83 11 83 32 ()}
        {Lisp-Entry "can-move-component?" #f 87 11 87 30 ()}
        {Lisp-Entry "can-copy-component?" #f 91 11 91 30 ()}
        {Lisp-Entry "get-addable-classes" #f 95 11 95 30 ("Workspace-Preferences" "list")}
        {Lisp-Entry "get-addable-details" #f 100 11 100 30 ("preserve-visibility?" "maximized?" "100" "fullscreen?" "frame-model" "shortcut" "150" "name-info")}
        {Lisp-Entry "get-row-instance" #f 104 11 104 27 ("nextmethod" "else" "Association-List-Row" "associations" "Toolbar-Class-List-Row" "new" "toolbar-classes" "field-name" "case" "property")}}
      {Lisp-Entry "Toolbar-Class-List-Row" #f 116 7 116 29 ("List-Row")
        {Lisp-Entry "get-subrow-class" #f 119 11 119 27 ("Toolbar-Class-Row")}
        {Lisp-Entry "add-value" #f 123 11 123 20 ("class:" "cdr" "car" "self" "add-row" "class" "value")}
        {Lisp-Entry "new-value" #f 127 11 127 20 ()}}
      {Lisp-Entry "Toolbar-Class-Row" #f 136 7 136 24 ("Value-Row")
        {Lisp-Entry "present" #f 144 11 144 18 ("format" "model")}}
      {Lisp-Entry "Association-List-Row" #f 153 7 153 27 ("List-Row")
        {Lisp-Entry "get-subrow-class" #f 156 11 156 27 ("Association-Row")}
        {Lisp-Entry "add-value" #f 160 11 160 20 ("class:" "cdr" "car" "self" "add-row" "class" "value")}
        {Lisp-Entry "new-value" #f 164 11 164 20 ()}}
      {Lisp-Entry "Association-Row" #f 173 7 173 22 ("Value-Row")
        {Lisp-Entry "present" #f 181 11 181 18 ("format" "model")}}}})
"_activity"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "activity" "_activity.jazz"} 1237033582
    {Lisp-Entry "jazz.ui.activity" #f 37 9 37 25 ("jazz")
      {Lisp-Entry "Manager" #f 48 12 48 19 ()}
      {Lisp-Entry "get-activity-manager" #f 52 20 52 40 ("new-manager" "set!" "Manager" "unless" "visible?" "visible?:")}
      {Lisp-Entry "new-manager" #f 58 13 58 24 ("visible?:" "manager-position" "position:" "Activity-Manager" "new" "visible?")}
      {Lisp-Entry "manager-position" #f 63 13 63 29 ("acquire" "79" "get-height" "543" "get-width" "-" "Point" "new" "pos" "get-size" "size" "get-toplevel" "toplevel" "get-desktop" "desktop" "let*")}
      {Lisp-Entry "destroy-manager" #f 71 13 71 28 ("Manager" "set!")}}})
"_clipboard"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "clipboard" "_clipboard.jazz"} 1237033583
    {Lisp-Entry "jazz.ui.clipboard" #f 37 9 37 26 ("jazz")
      {Lisp-Entry "jazz-formatted-text" #f 54 12 54 31 ()}
      {Lisp-Entry "jazz-parcels" #f 57 12 57 24 ()}
      {Lisp-Entry "prefixed-format" #f 61 13 61 28 ("get-application" "clipboard-prefix" "append" "format")}
      {Lisp-Entry "register-jazz-clipboard-formats" #f 67 20 67 51 ("jazz-parcels" "'jazz-parcels" "prefixed-format" "jazz-formatted-text" "'jazz-formatted-text" "register-clipboard-format")}
      {Lisp-Entry "get-jazz-parcels" #f 73 20 73 36 ("format:" "get-clipboard-text" "read-string-element" "jazz-parcels" "'jazz-parcels" "clipboard-format-available?" "when")}
      {Lisp-Entry "Clipboard-Parcel" #f 83 7 83 23 ("Object")
        {Lisp-Entry "process-id" #f 86 8 86 18 ()}
        {Lisp-Entry "object-id" #f 87 8 87 17 ()}
        {Lisp-Entry "content" #f 88 8 88 15 ()}
        {Lisp-Entry "initialize" #f 91 11 91 21 ("content~self" "object-id~self" "process-id~self" "set!" "nextmethod" "content" "object-id" "process-id")}
        {Lisp-Entry "get-process-id" #f 103 18 103 32 ("process-id")}
        {Lisp-Entry "get-object-id" #f 107 18 107 31 ("object-id")}
        {Lisp-Entry "get-content" #f 111 18 111 29 ("content")}}}})
"_dialog"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "_dialog.jazz"} 1237033583
    {Lisp-Entry "jazz.ui.dialog" #f 37 9 37 23 ("jazz")
      {Lisp-Entry "*current-modal*" #f 55 12 55 27 ()}
      {Lisp-Entry "current-modal" #f 59 20 59 33 ("*current-modal*")}
      {Lisp-Entry "set-current-modal" #f 62 20 62 37 ("*current-modal*" "set!" "dialog")}
      {Lisp-Entry "in-modal?" #f 66 20 66 29 ("current-modal")}
      {Lisp-Entry "end-modal-dialog" #f 70 20 70 36 ("current-modal" "end-modal" "result")}
      {Lisp-Entry "close-modal-dialog" #f 74 20 74 38 ("close-modal" "when" "current-modal" "dialog" "let" "action")}}})
"_history"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "history" "_history.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.history" #f 37 9 37 24 ("jazz")
      {Lisp-Entry "track-history" #f 50 20 50 33 ("initiator:" "direction:" "manager:" "History-Menu" "track-popup-menu" "bell" "null?" "if" "get-history" "history" "get-size" "get-height" "0" "Point" "new" "pos" "let" "direction" "manager" "initiator" "sender")}
      {Lisp-Entry "get-history" #f 58 13 58 24 ("get-forward-history" "forward" "get-backward-history" "backward" "case" "direction" "manager")}}})
"_image"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "image" "_image.jazz"} 1237033583
    {Lisp-Entry "jazz.ui.image" #f 37 9 37 22 ("jazz")
      {Lisp-Entry "load-image" #f 49 20 49 30 ("else" "Icon-Resource" "find-icon-file" "integer?" "cond" "icon" "error" "18" "cairo_surface_status" "=" "when" "cairo_image_surface_create_from_png" "handle" "parse" "ident" "find-bitmap-file" "resource?" "if" "let*" "bitmap" "case" "rest" "image" "type")}
      {Lisp-Entry "find-bitmap-file" #f 69 20 69 36 ("get-name" "bitmap" "'bitmap" "get-application" "get-resource" "object")}
      {Lisp-Entry "find-icon-file" #f 73 20 73 34 ("get-name" "icon" "'icon" "get-application" "get-resource" "object")}}})
"_look"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "look" "_look.jazz"} 1237033583
    {Lisp-Entry "jazz.ui.look" #f 37 9 37 21 ("jazz")
      {Lisp-Entry "Active-Look" #f 40 12 40 23 ()}
      {Lisp-Entry "Installed-Looks" #f 44 12 44 27 ()}
      {Lisp-Entry "get-look" #f 48 20 48 28 ("Active-Look")}
      {Lisp-Entry "set-look" #f 52 20 52 28 ("look-update" "Active-Look" "set!" "look")}
      {Lisp-Entry "get-looks" #f 57 20 57 29 ("Installed-Looks")}
      {Lisp-Entry "set-looks" #f 61 20 61 29 ("Installed-Looks" "set!" "looks")}
      {Lisp-Entry "look-update" #f 70 13 70 24 ("Active-Look" "select-look")}
      {Lisp-Entry "select-look" #f 74 13 74 24 ("present" "set-title" "'look" "locate-component" "label" "let" "when" "get-status-bar" "status" "get-application" "appl" "let*" "look")}}})
"_menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "menu" "_menu.jazz"} 1245777538
    {Lisp-Entry "jazz.ui.menu" #f 37 9 37 21 ("jazz")
      {Lisp-Entry "popup-workspaces-menu" #f 46 20 46 41 ("Workspaces-Menu" "new" "track-popup-menu" "get-visible-children" "when" "error?:" "workspaces" "'workspaces" "get-preferences" "preferences" "let" "pos" "view")}}})
"_offscreen"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "offscreen" "_offscreen.jazz"} 1237033583
    {Lisp-Entry "jazz.ui.offscreen" #f 37 9 37 26 ("jazz")
      {Lisp-Entry "effect-offscreen" #f 52 12 52 28 ()}
      {Lisp-Entry "get-effect-offscreen" #f 57 20 57 40 ("new-offscreen" "set!" "close" "when" "get-height" "get-width" "<=" "get-size" "size" "let" "effect-offscreen" "and" "if" "height" "width" "surface")}}})
"_picker"
 ({Lisp-File-Entry {File jazz.ui "src" "jazz" "ui" "picker" "_picker.jazz"} 1246096647
    {Lisp-Entry "jazz.ui.picker" #f 37 9 37 23 ("jazz")
      {Lisp-Entry "In-Pick?" #f 57 12 57 20 ()}
      {Lisp-Entry "All-Pickers" #f 60 12 60 23 ()}
      {Lisp-Entry "*highlighted-picker*" #f 63 12 63 32 ()}
      {Lisp-Entry "pick-figure" #f 67 20 67 31 ("cons" "invalidate-view" "install-picker" "picker" "memq?" "not" "or" "and" "overlapped" "for-each" "All-Pickers" "set!" "setup-pick" "not-null?" "when" "process-windows" "windows" "let" "function" "with-locked-update" "In-Pick?" "unless" "tooltips?" "tooltips?:" "obscure-unhighlighted?" "obscure-unhighlighted?:" "report-figure?" "report-figure?:" "highlight-root-only?" "highlight-root-only?:" "highlight" "highlight:" "menu" "menu:" "click" "click:" "exclude" "exclude:" "include" "include:")}
      {Lisp-Entry "install-picker" #f 93 13 93 27 ("tooltips?:" "obscure-unhighlighted?:" "report-figure?:" "highlight-root-only?:" "highlight:" "menu:" "click:" "get-size" "size:" "0" "Point" "position:" "parent:" "Picker-Overlay" "new" "get-root" "root" "let" "tooltips?" "obscure-unhighlighted?" "report-figure?" "highlight-root-only?" "highlight" "menu" "click" "overlapped")}
      {Lisp-Entry "remove-picker" #f 108 13 108 26 ("close" "picker")}
      {Lisp-Entry "shortcut-hook" #f 112 13 112 26 ("get-click" "click" "Return" "previous-brother" "Left" "eq?" "View" "type:" "next-brother" "brother" "Right" "first-view" "first" "Down" "bell" "if" "get-parent" "parent" "Up" "user-message" "view-describe" "display-description" "update-tooltip" "default-highlight" "acquire" "pos" "view" "setup-view" "define" "get-highlighted-position" "highlighted-position" "get-highlighted-view" "highlighted-view" "let" "else" "*highlighted-picker*" "not" "clear-user-message" "end-pick" "function" "with-locked-update" "Escape" "Shortcut" "shortcut=?" "cond" "shortcut")}
      {Lisp-Entry "display-description" #f 163 13 163 32 ("format" ":bulleted" "list" "value" "name" "bind" "info" "function" "map" "cons" "description")}
      {Lisp-Entry "find-picker" #f 171 13 171 24 ("Picker-Overlay" "find-type" "view")}
      {Lisp-Entry "setup-pick" #f 175 13 175 23 ("shortcut-hook" "get-application" "set-shortcut-hook")}
      {Lisp-Entry "end-pick" #f 179 13 179 21 ("close-pickers" "get-application" "set-shortcut-hook" "In-Pick?" "set!")}
      {Lisp-Entry "close-pickers" #f 185 13 185 26 ("set!" "All-Pickers" "remove-picker" "for-each")}
      {Lisp-Entry "Picker-Overlay" #f 195 7 195 21 ("View")
        {Lisp-Entry "click" #f 198 12 198 17 ("generate")}
        {Lisp-Entry "menu" #f 199 12 199 16 ("generate")}
        {Lisp-Entry "highlight" #f 200 12 200 21 ("generate")}
        {Lisp-Entry "highlight-root-only?" #f 201 12 201 32 ("generate")}
        {Lisp-Entry "report-figure?" #f 202 12 202 26 ("generate")}
        {Lisp-Entry "obscure-unhighlighted?" #f 203 12 203 34 ("generate")}
        {Lisp-Entry "tooltips?" #f 204 12 204 21 ("generate")}
        {Lisp-Entry "highlighted-view" #f 207 8 207 24 ("generate")}
        {Lisp-Entry "highlighted-rect" #f 208 8 208 24 ("generate")}
        {Lisp-Entry "highlighted-position" #f 209 8 209 28 ("generate")}
        {Lisp-Entry "last-mouse-position" #f 210 8 210 27 ("generate")}
        {Lisp-Entry "cursor-update" #f 218 11 218 24 (":spy" "set-cursor" "pos")}
        {Lisp-Entry "close-self-tooltip" #f 227 11 227 29 ("close-tooltip" "*current-tooltip-context*" "when")}
        {Lisp-Entry "get-tooltip?" #f 232 11 232 23 ("tooltips?")}
        {Lisp-Entry "get-formatted-tooltip?" #f 236 11 236 33 ()}
        {Lisp-Entry "calculate-tooltip-bounds" #f 240 11 240 35 ("get-bounds" "acquire" "get-display" "display" "let" "get-tooltip-bounds" "or" "when" "pos" "view")}
        {Lisp-Entry "get-tooltip-bounds" #f 247 11 247 29 ("calculate-tooltip-bounds" "find-view-info" "view" "receive" "pos")}
        {Lisp-Entry "get-tooltip-context" #f 252 11 252 30 ("Label" "name:" "Font" "font:" "calculate-tooltip-bounds" "bounds:" "view-describe" "display-description" "text:" "view:" "Tooltip-Context" "new" "when" "find-view-info" "view" "receive" "pos")}
        {Lisp-Entry "mouse-move" #f 267 11 267 21 ("self" "user-message" "not" "if" "report-figure?" "when" "else" "default-highlight" "highlight" "case" "find-view-info" "view" "receive" "set!" "nu=?" "last-mouse-position" "and" "unless" "nextmethod" "pos")}
        {Lisp-Entry "mouse-up" #f 282 11 282 19 ("click" "end-pick" "function" "with-locked-update" "find-view-info" "view" "receive" "nextmethod" "pos")}
        {Lisp-Entry "find-view-info" #f 291 11 291 25 ("values" "essay" "view-pos" "list" "ignore:" "find-drawing" "view" "self" "acquire" "root-pos" "get-root" "root" "let*" "pos")}
        {Lisp-Entry "default-highlight" #f 304 11 304 28 ("highlighted-position" "set!" "old-view" "old-picker" "highlighted-rect" "nu=?" "highlighted-view" "*highlighted-picker*" "eq?" "and" "unless" "receive" "redraw-view" "rect:" "redraw-window" "1" "inflate-rect" "player" "when" "same-picker?" "redraw" "values" "calculate-tooltip-bounds" "acquire" "get-bounds" "highlight-root-only?" "if" "rect" "find-picker" "picker" "get-player" "get-root" "root" "let" "highlight-info" "define" "pos" "view")}
        {Lisp-Entry "context-menu" #f 342 11 342 23 ("processed" "acquire" "track-popup-menu" "setup-actions" "get-root" "root" "let" "find-view-info" "view" "receive" "close-popups" "nextmethod" "menu" "not" "if" "pos")}
        {Lisp-Entry "setup-actions" #f 354 11 354 24 ("get-children" "execute:" "Event-Handler" "set-action-handler" "invoke" "self" ":action" "Action-Event" "new" "apply" "get-properties" "pos:" "view:" "augment" "properties" "when" "end-pick" "event" "execute" "get-action-handler" "action-handler" "let*" "item" "function" "for-each" "pos" "view" "menu")}
        {Lisp-Entry "Overlay-Color" #f 372 14 372 27 ("0.25" "alpha:" "Black" "name:" "Color")}
        {Lisp-Entry "Highlight-Color" #f 375 14 375 29 ("177" "blue:" "green:" "109" "red:" "Color")}
        {Lisp-Entry "draw" #f 379 11 379 15 ("rectangle" "highlighted-rect" "Overlay-Color" "get-bounds" "fill-rect" "obscure-unhighlighted?" "when" "get-root" "neq?" "*highlighted-picker*" "not" "or" "cond" "Highlight-Color" "set-color" "2" "set-line-width" "solid" "'solid" "set-style" "highlighter" "define" "lv" "lh" "context" "surface")}}}})
"_print"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "_print.jazz"} 1237033583
    {Lisp-Entry "jazz.ui.print" #f 37 9 37 22 ("jazz")}})
"_resizer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "resizer" "_resizer.jazz"} 1237033583
    {Lisp-Entry "jazz.ui.resizer" #f 37 9 37 24 ("jazz")
      {Lisp-Entry "Border-Size" #f 52 10 52 21 ("4")}
      {Lisp-Entry "Handle-Size" #f 53 10 53 21 ("16")}
      {Lisp-Entry "Part-Array" #f 56 10 56 20 ("1" "0" "-1")}
      {Lisp-Entry "find-resize-part" #f 69 20 69 36 ("get-width" "get-h" "get-height" "get-v" "Part-Array" "element" "2" "else" ">" "4" "-" ">=" "1" "0" "<" "cond" "3" "quotient" "Handle-Size" "min" "handle" "Border-Size" "border" "s" "n" "function" "p" "let" "size" "pt")}
      {Lisp-Entry "get-resize-cursor" #f 82 20 82 37 ("Part-Cursor" "assoc-value" "part")}
      {Lisp-Entry "resize-client" #f 86 20 86 33 ("*" "cdr" "rv" "mv" "car" "rh" "mh" "receive" "0" "1" "values" "-1" "case" "r" "function" "p" "let" "proc" "part" "dv" "dh")}}})
"_ui"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "_ui.jazz"} 1237033582
    {Lisp-Entry "jazz.ui" #f 37 9 37 16 ("jazz")
      {Lisp-Entry "default-disabled-resource" #f 49 20 49 45 ("get-name" "format" "class-of" "new" "resource")}
      {Lisp-Entry "shortcut=?" #f 59 20 59 30 ("get-key" "eqv?" "get-modifiers" "equal?" "and" "s2" "s1")}
      {Lisp-Entry "shortcut-hash" #f 64 20 64 33 ("eqv-hash" "+" "get-modifiers" "get-key" "cons" "equal-hash" "shortcut")}}})
"_view"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "view" "_view.jazz"} 1245586217
    {Lisp-Entry "jazz.ui.view" #f 37 9 37 21 ("jazz")
      {Lisp-Entry "mouse-in" #f 53 12 53 20 ()}
      {Lisp-Entry "mouse-down?" #f 54 12 54 23 ()}
      {Lisp-Entry "mouse-right-down?" #f 55 12 55 29 ()}
      {Lisp-Entry "mouse-down-view" #f 56 12 56 27 ()}
      {Lisp-Entry "mouse-down-point" #f 57 12 57 28 ()}
      {Lisp-Entry "delayed-mouse-action" #f 62 12 62 32 ()}
      {Lisp-Entry "get-delayed-mouse-action" #f 66 20 66 44 ("delayed-mouse-action")}
      {Lisp-Entry "set-delayed-mouse-action" #f 69 20 69 44 ("delayed-mouse-action" "set!" "action")}
      {Lisp-Entry "get-mouse-in" #f 73 20 73 32 ("mouse-in")}
      {Lisp-Entry "set-mouse-in" #f 76 20 76 32 ("mouse-in" "set!" "view")}
      {Lisp-Entry "get-mouse-down?" #f 80 20 80 35 ("mouse-down?")}
      {Lisp-Entry "set-mouse-down?" #f 83 20 83 35 ("mouse-down?" "set!" "flag")}
      {Lisp-Entry "get-mouse-right-down?" #f 87 20 87 41 ("mouse-right-down?")}
      {Lisp-Entry "set-mouse-right-down?" #f 90 20 90 41 ("mouse-right-down?" "set!" "flag")}
      {Lisp-Entry "get-mouse-down-view" #f 94 20 94 39 ("mouse-down-view")}
      {Lisp-Entry "set-mouse-down-view" #f 97 20 97 39 ("mouse-down-view" "set!" "view")}
      {Lisp-Entry "get-mouse-down-point" #f 101 20 101 40 ("mouse-down-point")}
      {Lisp-Entry "set-mouse-down-point" #f 104 20 104 40 ("mouse-down-point" "set!" "point")}
      {Lisp-Entry "mouse-view" #f 108 20 108 30 ("mouse-in" "Captured-View" "either")}
      {Lisp-Entry "toplevel-deactivate" #f 115 20 115 39 ("mouse-down-point" "mouse-down-view" "mouse-down?" "set!")}
      {Lisp-Entry "with-cursor" #f 126 20 126 31 ("update-cursor" "sleep" "when" "set-cursor" "begin" "unwind-protect" "duration" "duration:" "proc" "cursor")}
      {Lisp-Entry "update-cursor" #f 136 20 136 33 ("mouse-position" "call-cursor-update" "in-player?" "mouse-in" "and" "when")}
      {Lisp-Entry "Current-Drag-Drop" #f 146 12 146 29 ()}
      {Lisp-Entry "current-drag-drop" #f 150 20 150 37 ("Current-Drag-Drop")}
      {Lisp-Entry "set-current-drag-drop" #f 153 20 153 41 ("Current-Drag-Drop" "set!" "drag-drop")}
      {Lisp-Entry "Captured-View" #f 162 12 162 25 ()}
      {Lisp-Entry "get-captured-view" #f 166 20 166 37 ("Captured-View")}
      {Lisp-Entry "set-captured-view" #f 169 20 169 37 ("Captured-View" "set!" "view")}
      {Lisp-Entry "release-captured-view" #f 173 13 173 34 ("unset-capture" "set!" "Captured-View" "when")}
      {Lisp-Entry "external-name" #f 185 20 185 33 ("type-name" "identifier-name" "guest-class")}
      {Lisp-Entry "get-focused-host" #f 194 20 194 36 ("get-host" "when" "get-focus" "focus" "let")}
      {Lisp-Entry "focused-host?" #f 200 20 200 33 ("get-focused-host" "eq?" "host")}
      {Lisp-Entry "new-guest" #f 209 13 209 22 ("new" "apply" "rest" "guest-class")}
      {Lisp-Entry "get-modal" #f 218 20 218 29 ("process-modal" "not" "if" "host-visible?:" "new-dialog" "apply" "dialog/result" "process?" "receive" "rest" "guest-class")}
      {Lisp-Entry "new-dialog" #f 225 20 225 30 ("get-handle" "select-foreground-window" "set-visible?" "get-modal-result" "values" "has-dialog-result?" "if" "when" "set-guest" "set-position" "set-size" "set-title" "center-dialog" "host-position" "pos" "get-size" "host-size" "size" "new-guest" "either" "get-root" "host" "visible?:" "closable?:" "sizable?:" "dialog-class" "new" "player" "let*" "others" "initialize" "guest" "host-visible?" "host-closable?" "host-sizable?" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "center-dialog" #f 248 20 248 33 ("50" "get-v" "-" "get-h" "Point" "new" "center" "pos" "get-desktop" "get-size" "outer" "let*" "inner")}
      {Lisp-Entry "Palettes" #f 259 12 259 20 ("eq?" "test:" "make-table")}
      {Lisp-Entry "singleton-palette" #f 263 20 263 37 ("table-set!" "host-visible?:" "new-palette" "procedure?" "if" "palette" "Palettes" "table-ref" "type-name" "either" "ref" "let" "rest" "name" "guest-class")}
      {Lisp-Entry "new-palette" #f 275 20 275 31 ("fade-in" "layout-view" "set-guest" "new-guest" "let" "set-size" "set-position" "when" "either" "set-title" "get-root" "host" "visible?:" "palette-class" "new" "player" "let*" "others" "initialize" "guest" "host-visible?" "host-size" "host-position" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "show-palette" #f 298 20 298 32 ("fade-in" "unless" "bring-to-front" "get-visible?" "visible?" "client-activate" "when" ":initialize" "getf" "initialize" "get-guest" "guest" "new-palette" "apply" "not" "if" "get-toplevel" "get-root" "find-host" "palette" "let" "rest" "guest-class")}
      {Lisp-Entry "reset-palettes" #f 314 13 314 27 ("eq?" "test:" "make-table" "Palettes" "set!")}
      {Lisp-Entry "Dockeds" #f 323 12 323 19 ("eq?" "test:" "make-table")}
      {Lisp-Entry "singleton-docked" #f 327 20 327 36 ("table-set!" "name:" "new-docked" "palette" "Dockeds" "table-ref" "external-name" "either" "ref" "let" "rest" "name" "guest-class")}
      {Lisp-Entry "new-docked" #f 335 20 335 30 ("new-guest" "set-guest" "set-location" "when" "either" "set-title" "visible?:" "Docked-Host" "new" "host" "let" "others" "host-location" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "reset-dockeds" #f 345 13 345 26 ("eq?" "test:" "make-table" "Dockeds" "set!")}
      {Lisp-Entry "new-event" #f 354 20 354 29 ("new-frame" "apply" "rest" "guest-class")}
      {Lisp-Entry "new-frame" #f 358 20 358 29 ("focus-host" "set-visible?" "bring-to-front" "ensure-displayed" "set-guest" "new-guest" "set-workspace" "set-size" "set-position" "when" "either" "set-title" "visible?:" "get-stage" "parent:" "Frame-Host" "new" "host" "let" "others" "initialize" "guest" "host-focus?" "host-visible?" "host-workspace" "host-size" "host-position" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "Toolbars" #f 390 12 390 20 ("eq?" "test:" "make-table")}
      {Lisp-Entry "singleton-toolbar" #f 394 20 394 37 ("table-set!" "name:" "new-toolbar" "palette" "Toolbars" "table-ref" "type-name" "either" "ref" "let" "rest" "name" "guest-class")}
      {Lisp-Entry "new-toolbar" #f 402 20 402 31 ("new-guest" "set-guest" "set-location" "when" "either" "set-title" "visible?:" "Toolbar-Host" "new" "host" "let" "others" "host-location" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "reset-toolbars" #f 412 13 412 27 ("eq?" "test:" "make-table" "Toolbars" "set!")}
      {Lisp-Entry "with-progress" #f 421 13 421 26 ("process-modal" "end-modal" "signal-modal" "signal" "forwardable?" "Signal" "catch" "unwind-protect" "set!" "sig" "abnormal" "resignal" "result" "let*" "thread" "function" "execute:" "self" "context:" "either" "Thread" "disable-cancel" "when" "get-guest" "reporter" "let" "context" "guest-context:" "host-closable?:" "new-dialog" "dialog" "process?" "receive" "User-Reporter" "new" "not" "if" "with-progress" "'with-progress" "unimplemented" "abnormal-cleanup" "abnormal-cleanup:" "cancelable?" "cancelable?:" "Progress-Reporter" "progress-reporter" "progress-reporter:" "name" "name:" "threaded?" "threaded?:" "proc")}
      {Lisp-Entry "message-box" #f 462 20 462 31 ("process-box" "get-guest" "guest" "let" "host-sizable?:" "host-visible?:" "Message-Box" "either" "new-dialog" "dialog" "process?" "receive" "sizable?" "sizable?:" "process-keys?" "process-keys?:" "default-button" "default-button:" "actions" "actions:" "cancel" "cancel:" "no" "no:" "yes" "yes:" "selection" "selection:" "default" "'default" "sound" "sound:" "content" "content:" "icon" "icon:" "size" "size:" "title" "title:" "message" "'message" "type" "type:" "class" "class:" "text")}
      {Lisp-Entry "with-safe-execution" #f 486 20 486 39 ("no" "yes" "no:" "question" "'question" "type:" "case" "exit" "yes:" "message-box" "begin" "either" "not" "if" "text" "get-message" "message" "format" "invite" "let" "err" "function" "Error" "call-with-catch" "continue-handler" "continue-handler:" "continue-text" "continue-text:" "thunk" "context")}
      {Lisp-Entry "request-string" #f 520 20 520 34 ("empty-string?" "process-modal" "string" "let" "acquire-focus" "select-all" "->string" "if" "set-string-content" "set-validator" "set-unicity-domain" "set-accepts-empty?" "either" "set-title" "'text" "text" "'prefix" "locate" "prfx" "get-guest" "view" "let*" "new-dialog" "dialog" "process?" "receive" "validator" "validator:" "unicity-domain" "unicity-domain:" "accepts-empty?" "accepts-empty?:" "initial-value" "initial-value:" "prefix" "prefix:" "title" "title:" "String-Request" "class" "class:")}
      {Lisp-Entry "request-name" #f 539 20 539 32 ("string->symbol" "not" "if" "request-string" "apply" "string" "either" "let*" "others" "prefix" "prefix:" "title" "title:")}
      {Lisp-Entry "request-text" #f 548 20 548 32 ("empty-string?" "if" "process-modal" "string" "let" "acquire-focus" "select-all" "set-string-content" "either" "set-title" "'text" "locate" "text" "get-guest" "view" "let*" "new-dialog" "dialog" "process?" "receive" "request-text" "'request-text" "unimplemented" "initial-text" "initial-text:" "title" "title:" "Text-Request" "class" "class:")}
      {Lisp-Entry "request-date" #f 564 20 564 32 ("Date" "parse-string" "empty-string?" "process-modal" "string" "let" "acquire-focus" "select-all" "present" "if" "set-string-content" "either" "set-title" "'text" "text" "'prefix" "locate" "prfx" "get-guest" "view" "let*" "new-dialog" "dialog" "process?" "receive" "request-date" "'request-date" "unimplemented" "initial-date" "initial-date:" "prefix" "prefix:" "title" "title:" "Date-Request" "class" "class:")}
      {Lisp-Entry "get-workspace-preferences" #f 587 20 587 45 ("get-toplevel" "get-workspace-preferences")}
      {Lisp-Entry "set-workspace-preferences" #f 590 20 590 45 ("get-toplevel" "set-workspace-preferences" "preferences")}
      {Lisp-Entry "get-stage-border" #f 594 20 594 36 ("get-stage" "get-parent")}
      {Lisp-Entry "get-output-log" #f 598 20 598 34 ("get-application" "get-output-log")}
      {Lisp-Entry "get-active-results" #f 602 20 602 38 ("get-application" "get-active-results")}
      {Lisp-Entry "find-palette" #f 606 20 606 32 ("find-palette" "find-type" "either" "when" "get-toplevel" "toplevel" "let" "class")}
      {Lisp-Entry "select-palette" #f 613 20 613 34 ("workspaces" "'workspaces" "list" "get-preferences" "apply-preferences" "focus-host" "unzoom" "get-zoomed" "neq?" "zoom" "'zoom" "get-state" "eq?" "and" "splitter" "Splitter-View" "if" "for-each-splitter" "set-selection" "Pad-View" "is?" "get-parent" "parent" "get-host" "host" "let*" "when" "view" "function" "proc" "find-palette" "guest" "let" "focus?" "focus?:" "home" "'home" "workspace" "workspace:" "name" "name:" "class")}
      {Lisp-Entry "for-each-docked" #f 637 20 637 35 ("get-guest" "Docked-Host" "is?" "when" "palette" "function" "get-toplevel" "for-each-palette" "proc")}
      {Lisp-Entry "for-each-splitter" #f 644 20 644 37 ("set!" "is?" "while" "Splitter-View" "splitter-class" "get-parent" "splitter" "let" "proc" "view")}
      {Lisp-Entry "current-frame" #f 653 20 653 33 ("first-view" "when" "get-stage" "stage" "let")}
      {Lisp-Entry "current-document" #f 659 20 659 36 ("get-guest" "Frame-Host" "is?" "when" "current-frame" "frame" "let")}
      {Lisp-Entry "current-guest" #f 665 20 665 33 ("get-guest" "when" "get-focused-host" "host" "let")}
      {Lisp-Entry "focus-guest" #f 671 20 671 31 ("get-guest" "when" "get-focus" "focus" "let")}
      {Lisp-Entry "*focused-window*" #f 685 12 685 28 ()}
      {Lisp-Entry "get-focused-window" #f 689 20 689 38 ("*focused-window*")}
      {Lisp-Entry "set-focused-window" #f 692 20 692 38 ("*focused-window*" "set!" "window")}
      {Lisp-Entry "*focus*" #f 696 12 696 19 ()}
      {Lisp-Entry "get-focus" #f 700 20 700 29 ("*focus*")}
      {Lisp-Entry "set-focus" #f 704 20 704 29 ("get-application" "process-focus-change" "process-active?" "activate-focus" "host" "call-focus-gain" "call-focus-lose" "set!" "focus" "deactivate-focus" "get-host" "old-host" "old" "set-window-focus" "set-previously-focused-view" "begin" "*focused-window*" "and" "if" "get-player" "essay" "player" "let" "*focus*" "neq?" "when" "view")}
      {Lisp-Entry "get-focus-actions" #f 730 20 730 37 ("focus-actions" "view")}
      {Lisp-Entry "refresh-focus-actions" #f 734 20 734 41 ("get-focus-actions" "get-application" "set-focus-actions" "get-focus" "eq?" "when" "view")}
      {Lisp-Entry "*debug-paint*" #f 744 12 744 25 ()}
      {Lisp-Entry "*debug-colors*" #f 748 12 748 26 ("Dark-Purple" "Dark-Blue" "Dark-Green" "Dark-Yellow" "Dark-Orange" "Dark-Red" "name:" "Color")}
      {Lisp-Entry "*nb-debug-colors*" #f 756 12 756 29 ("*debug-colors*" "length")}
      {Lisp-Entry "*current-debug-color*" #f 759 12 759 33 ("0")}
      {Lisp-Entry "cycle-debug-color!" #f 763 20 763 38 ("*nb-debug-colors*" "1" "+" "modulo" "set!" "*current-debug-color*" "*debug-colors*" "element" "prog1")}
      {Lisp-Entry "debug-paint?" #f 768 20 768 32 ("car" "set!" "*debug-paint*" "null?" "if" "rest")}
      {Lisp-Entry "cleanup-mouse-processing" #f 779 20 779 44 ("complete-drag-up" "complete-drag-and-drop" "release-captured-view")}
      {Lisp-Entry "complete-drag-and-drop" #f 785 13 785 35 ("get-source" "get-view" "drag-end" "Current-Drag-Drop" "when")}
      {Lisp-Entry "complete-drag-up" #f 790 13 790 29 ("process-drag-up" "mouse-down-view" "mouse-position" "pos" "let" "mouse-down?" "when" "dragging?")}}})
"_window"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "_window.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.window" #f 37 9 37 23 ("jazz")
      {Lisp-Entry "get-toplevel" #f 63 20 63 32 ("get-application" "get-toplevel")}
      {Lisp-Entry "get-stage" #f 67 20 67 29 ("get-application" "get-stage")}
      {Lisp-Entry "desktop" #f 76 12 76 19 ()}
      {Lisp-Entry "Desktop-DC" #f 79 12 79 22 ()}
      {Lisp-Entry "desktop-dc" #f 82 20 82 30 ("Memory-Surface" "new" "set!" "Desktop-DC" "unless")}
      {Lisp-Entry "get-desktop" #f 88 20 88 31 ("Desktop" "new" "set!" "desktop" "unless")}
      {Lisp-Entry "select-foreground-window" #f 99 20 99 44 ("platform-select-foreground-window" "assert" "handle")}
      {Lisp-Entry "get-window-handle-title" #f 104 20 104 43 ("platform-get-window-handle-title" "assert" "handle")}
      {Lisp-Entry "process-events" #f 114 13 114 27 ("thread-stop-loop" "get-exception-debugger" "with-exception-debugger" "thread-read" "thunk" "Cancel-Signal" "catch" "function" "present-event-loop-restart" "resume-loop" "'resume-loop" "with-restart-catcher" "loop" "unwind-protect" "thread-start!" "thread-start-loop" "when" "prime-message-pump" "pump" "let" "process-events-single-threaded" "get-events-single-threaded?" "if" "proper-tail-calls" "declare")}
      {Lisp-Entry "process-events-single-threaded" #f 135 13 135 43 ("get-exception-debugger" "with-exception-debugger" "eof-object?" "not" "when" "thread-read-non-blocking" "thunk" "process-messages-single-threaded" "Cancel-Signal" "catch" "function" "present-event-loop-restart" "resume-loop" "'resume-loop" "with-restart-catcher" "loop" "let" "proper-tail-calls" "declare")}
      {Lisp-Entry "present-event-loop-restart" #f 152 13 152 39 ("0" "=" "if" "format" "get-level" "level" "when" "current-loop" "loop" "let")}
      {Lisp-Entry "locked-update?" #f 167 12 167 26 ()}
      {Lisp-Entry "with-locked-update" #f 171 20 171 38 ("update-window" "when" "set!" "get-handle" "platform-lock-window-update" "begin" "unwind-protect" "get-toplevel" "toplevel" "let" "locked-update?" "if" "proc")}
      {Lisp-Entry "Key-Hook" #f 191 12 191 20 ()}
      {Lisp-Entry "get-key-hook" #f 195 20 195 32 ("Key-Hook")}
      {Lisp-Entry "set-key-hook" #f 199 20 199 32 ("Key-Hook" "set!" "hook")}
      {Lisp-Entry "Active-Frame" #f 208 12 208 24 ()}
      {Lisp-Entry "get-active-frame" #f 212 13 212 29 ("Active-Frame")}
      {Lisp-Entry "set-active-frame" #f 215 13 215 29 ("Active-Frame" "set!" "frame")}
      {Lisp-Entry "activate-front" #f 219 13 219 27 ("activate-frame" "deactivate-frame" "neq?" "or" "when" "Active-Frame" "active" "get-stage" "first-view" "front" "let" "force?" "force?:")}
      {Lisp-Entry "frame-region" #f 234 20 234 32 ("or" "'or" "combine!" "b" "-" "r" "t" "bottom:" "+" "right:" "top:" "left:" "l" "with-closed" "Region" "region" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "left" "let" "1" "Rect" "new" "insets" "insets:" "frame")}
      {Lisp-Entry "Overlappeds" #f 256 12 256 23 ()}
      {Lisp-Entry "get-overlappeds" #f 260 20 260 35 ("Overlappeds")}
      {Lisp-Entry "set-overlappeds" #f 263 20 263 35 ("Overlappeds" "set!" "lst")}
      {Lisp-Entry "register-overlapped" #f 267 20 267 39 ("get-overlappeds" "cons" "set-overlappeds" "overlapped")}
      {Lisp-Entry "unregister-overlapped" #f 270 20 270 41 ("get-overlappeds" "remove!" "set-overlappeds" "overlapped")}
      {Lisp-Entry "Passing-Through?" #f 279 12 279 28 ()}
      {Lisp-Entry "get-passing-through?" #f 283 20 283 40 ("Passing-Through?")}
      {Lisp-Entry "set-passing-through?" #f 286 20 286 40 ("Passing-Through?" "set!" "flag")}
      {Lisp-Entry "Popups" #f 290 12 290 18 ()}
      {Lisp-Entry "get-popups" #f 294 20 294 30 ("Popups")}
      {Lisp-Entry "set-popups" #f 297 20 297 30 ("Popups" "set!" "lst")}
      {Lisp-Entry "close-all-popups" #f 301 20 301 36 ("Popups" "close-popup" "for-each")}
      {Lisp-Entry "close-popup" #f 305 20 305 31 ("remove!" "Popups" "set!" "close" "popup")}
      {Lisp-Entry "process-windows" #f 315 20 315 35 ("get-overlappeds" "get-visible?" "or" "overlapped" "function" "collect-if" "include-invisibles?" "include-invisibles?:")}
      {Lisp-Entry "get-window-focus" #f 326 13 326 29 ("get-window" "when" "platform-get-focus" "focus" "let")}
      {Lisp-Entry "set-window-focus" #f 332 13 332 29 ("get-handle" "if" "platform-set-focus" "window")}}})
"_workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "workspace" "_workspace.jazz"} 1237033584
    {Lisp-Entry "jazz.ui.workspace" #f 37 9 37 26 ("jazz")
      {Lisp-Entry "Selected-Workspace" #f 48 12 48 30 ()}
      {Lisp-Entry "Locked-Activations?" #f 51 12 51 31 ()}
      {Lisp-Entry "get-workspace" #f 55 20 55 33 ("error" "workspaces" "'workspaces" "get-preferences" "find-component" "either" "name")}
      {Lisp-Entry "selected-workspace" #f 60 20 60 38 ("Selected-Workspace")}
      {Lisp-Entry "set-selected-workspace" #f 63 20 63 42 ("Selected-Workspace" "set!" "workspace")}
      {Lisp-Entry "get-locked-activations?" #f 67 20 67 43 ("Locked-Activations?")}
      {Lisp-Entry "set-locked-activations?" #f 70 20 70 43 ("Locked-Activations?" "set!" "flag")}
      {Lisp-Entry "close-palettes" #f 74 13 74 27 ("get-children" "client-deactivate" "set-visible?" "get-visible?" "Palette" "is?" "and" "when" "child" "function" "for-each" "get-toplevel" "toplevel" "let")}}})
"aliases"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "aliases.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.aliases" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Aliases-Preferences" #f 52 7 52 26 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" #f 64 11 64 32 ()}
        {Lisp-Entry "can-delete-component?" #f 68 11 68 32 ()}
        {Lisp-Entry "can-move-component?" #f 72 11 72 30 ()}
        {Lisp-Entry "can-copy-component?" #f 76 11 76 30 ()}
        {Lisp-Entry "get-addable-classes" #f 80 11 80 30 ("Alias-Configuration" "list")}
        {Lisp-Entry "get-addable-details" #f 85 11 85 30 ("300" "directory" "150" "alias")}}
      {Lisp-Entry "Alias-Configuration" #f 94 7 94 26 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "alias" #f 97 12 97 17 ("generate")}
        {Lisp-Entry "directory" #f 98 12 98 21 ("generate")}
        {Lisp-Entry "get-domain" #f 110 16 110 26 ("nextmethod" "else" "field-name" "case" "property")}
        {Lisp-Entry "get-class-presentation" #f 120 16 120 38 ()}
        {Lisp-Entry "property-presentation" #f 124 16 124 37 ("nextmethod" "else" "directory" "alias" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" #f 131 11 131 33 ("alias" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 135 11 135 27 ("alias")}
        {Lisp-Entry "set-presentation" #f 139 11 139 27 ("string->symbol" ":alias" "self" "set-property" "presentation" "designer")}
        {Lisp-Entry "get-row-instance" #f 143 11 143 27 ("nextmethod" "else" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 149 11 149 37 ("directory" "alias")}}}})
"autoload"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "autoload.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.autoload" #f 37 19 37 35 ("jazz")}})
"carbon"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "platform" "carbon.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.platform.carbon" #f 37 19 37 49 ("process-control-message" "set-process-control-message" "process-window-message" "set-process-window-message" "jazz")
      {Lisp-Entry "unprocessed" #f 51 19 51 30 ("unprocessed")}
      {Lisp-Entry "processed" #f 52 19 52 28 ("processed")}
      {Lisp-Entry "desktop" #f 55 12 55 19 ()}
      {Lisp-Entry "processed-result" #f 58 13 58 29 ("cadr" "0" "cdr" "null?" "processed" "'processed" "car" "eq?" "pair?" "and" "if" "return")}
      {Lisp-Entry "is-window-HIView?" #f 66 13 66 30 ("Desktop" "Toplevel" "is?" "or" "not" "window")}
      {Lisp-Entry "Windows-Table" #f 76 19 76 32 ("eqv?" "test:" "make-table")}
      {Lisp-Entry "Window-Title-Table" #f 80 19 80 37 ("eqv?" "test:" "make-table")}
      {Lisp-Entry "get-window" #f 84 27 84 37 ("Windows-Table" "table-ref" "foreign-address" "foreign?" "if" "let" "hwnd")}
      {Lisp-Entry "set-window" #f 89 27 89 37 ("foreign-address" "Windows-Table" "table-set!" "window" "hwnd")}
      {Lisp-Entry "platform-get-window-handle-title" #f 93 27 93 59 ("Window-Title-Table" "table-ref" "handle")}
      {Lisp-Entry "set-window-title" #f 97 27 97 43 ("Window-Title-Table" "table-set!" "title" "handle")}
      {Lisp-Entry "window-parent" #f 101 13 101 26 ("get-handle" "if" "get-parent" "parent" "let" "window")}
      {Lisp-Entry "window-default-parent" #f 108 13 108 34 ("else" "get-stage" "Frame" "get-toplevel" "Popup" "typecase" "window")}
      {Lisp-Entry "prepare-handle" #f 115 13 115 27 ("InstallControlEventHandler" "HIViewGetContent" "handle" "create-window-handle" "window-handle" "let*" "create-HIView-handle" "is-window-HIView?" "if" "rest" "window")}
      {Lisp-Entry "create-HIView-handle" #f 124 13 124 33 ("InstallControlEventHandler" "500.0" "0.0" "HIViewSetFrame" "0" "kHIViewFeatureAllowsSubviews" "HIViewChangeFeatures" "HIViewAddSubview" "HIViewCreate" "new-handle" "window-parent" "parent" "let*" "rest" "window")}
      {Lisp-Entry "create-window-handle" #f 134 13 134 33 ("fxfloor" "kWindowStructureRgn" "WindowSetBounds" "HIWindowGetAvailablePositioningBounds" "h" "w" "y" "x" "receive" "desktop" "set!" "Desktop" "is?" "when" "InstallWindowEventHandler" "500" "0" "kWindowCompositingAttribute" "kWindowLiveResizeAttribute" "kWindowStandardHandlerAttribute" "kWindowStandardDocumentAttributes" "bitwise-ior" "kDocumentWindowClass" "CreateNewWindow" "handle" "let" "rest" "window")}
      {Lisp-Entry "destroy-window" #f 152 13 152 27 ("HIViewGetWindow" "DestroyWindow" "DestroyView" "is-window-HIView?" "if" "focus-lose" "platform-get-focus" "=" "when" "get-window" "window" "let" "handle")}
      {Lisp-Entry "dispatch-message" #f 162 13 162 29 ("process-window-message" "msg" "window")}
      {Lisp-Entry "setup-events" #f 171 13 171 25 ()}
      {Lisp-Entry "prime-message-pump" #f 180 13 180 31 ("message-pump" "'message-pump" "process-messages" "function" "new-thread")}
      {Lisp-Entry "process-messages" #f 186 13 186 29 ("RunApplicationEventLoop")}
      {Lisp-Entry "process-messages-single-threaded" #f 190 13 190 45 ("RunApplicationEventLoop" "thunk")}
      {Lisp-Entry "show-window" #f 194 13 194 24 ("SelectWindow" "HIViewGetWindow" "ShowWindow" "HIViewSetVisible" "is-window-HIView?" "Desktop" "get-window" "is?" "if" "handle")}
      {Lisp-Entry "show-maximized" #f 204 13 204 27 ("show-window" "handle")}
      {Lisp-Entry "show-restored" #f 208 13 208 26 ("show-window" "handle")}
      {Lisp-Entry "hide-window" #f 212 13 212 24 ("HIViewGetWindow" "HideWindow" "HIViewSetVisible" "get-window" "is-window-HIView?" "if" "handle")}
      {Lisp-Entry "bring-window-to-top" #f 218 13 218 32 ("platform-bring-window-to-front" "handle")}
      {Lisp-Entry "minimize-window" #f 222 13 222 28 ("minimize-window" "'minimize-window" "unimplemented" "handle")}
      {Lisp-Entry "maximize-window" #f 226 13 226 28 ("maximize-window" "'maximize-window" "unimplemented" "handle")}
      {Lisp-Entry "restore-window" #f 230 13 230 27 ("restore-window" "'restore-window" "unimplemented" "handle")}
      {Lisp-Entry "platform-erase-background" #f 234 13 234 38 ("platform-erase-background" "'platform-erase-background" "unimplemented" "handle")}
      {Lisp-Entry "convert-key" #f 238 13 238 24 ("else" "Down" "'Down" "Top" "'Top" "Right" "'Right" "Left" "'Left" "Tab" "'Tab" "Space" "'Space" "Return" "'Return" "Backspace" "'Backspace" "Escape" "'Escape" "F8" "'F8" "100" "F7" "'F7" "98" "F6" "'F6" "97" "F5" "'F5" "96" "F4" "'F4" "118" "F3" "'F3" "99" "F2" "'F2" "120" "F1" "'F1" "122" "case" "keycode" "char")}
      {Lisp-Entry "current-mouse-x" #f 261 12 261 27 ("0")}
      {Lisp-Entry "current-mouse-y" #f 262 12 262 27 ("0")}
      {Lisp-Entry "process-window-message" #f 265 13 265 35 ("get-current-focus" "call-key-press" "char?" "and" "Space" "'Space" "eq?" "Shortcut" "new" "get-application" "dispatch-shortcut" "not" ":alt" "optionKeyBit" ":control" "controlKeyBit" ":shift" "cons" "shiftKeyBit" "bit-set?" "when" "mods" "convert-key" "eventKeyUnicode" "unicode" "unmodifiedKey" "unmodified" "eventKeyMods" "state" "eventKeyboardType" "keyboard" "eventKeyCode" "keycode" "kEventRawKeyDown" "kEventClassKeyboard" "mouse-down" "kEventMouseDown" "mouse-up" "kEventMouseUp" "inexact->exact" "mouse-move" "HIViewGetRoot" "convertCoordinates" "if" "get-window" "win" "HIViewForPoint" "view" "let*" "current-mouse-y" "current-mouse-x" "set!" "convertPointToGlobal" "glo-y" "glo-x" "eventMouseLocation" "y" "x" "receive" "eventWindowRef" "window" "kEventMouseMoved" "kEventClassMouse" "eventNotHandledErr" "else" "kEventWindowBoundsChanged" "noErr" "QuitApplicationEventLoop" "kEventWindowClose" "kEventClassWindow" "=" "cond" "GetEventKind" "type" "GetEventClass" "class" "let" "userdata" "event" "handler")}
      {Lisp-Entry "process-control-message" #f 338 13 338 36 ("eventNotHandledErr" "else" "call-position-change" "inexact->exact" "call-size-change" "show-window" "Docked-Host" "is?" "if" "HIViewGetBounds" "height" "width" "top" "left" "receive" "kEventControlBoundsChanged" "noErr" "eventControlRgn" "handle:" "Region" "new" "get-window" "paint" "EventCGContext" "context" "kEventControlDraw" "=" "cond" "void*->HIViewRef" "handle" "GetEventKind" "type" "let" "userdata" "event" "handler")}
      {Lisp-Entry "get-toplevel" #f 362 13 362 25 ("get-toplevel" "when" "get-application" "appl" "let")}
      {Lisp-Entry "get-toplevel-hwnd" #f 368 13 368 30 ("get-handle" "when" "get-toplevel" "toplevel" "let")}
      {Lisp-Entry "get-stage" #f 379 13 379 22 ("get-stage" "when" "get-application" "appl" "let")}
      {Lisp-Entry "set-capture" #f 390 13 390 24 ("handle")}
      {Lisp-Entry "unset-capture" #f 394 13 394 26 ()}
      {Lisp-Entry "with-platform-painting" #f 398 13 398 35 ("close" "unwind-protect" "get-height" "get-width" "cairo_quartz_surface_create_for_cg_context" "Surface" "new" "surface" "car" "context" "let*" "proc" "platform-data" "window")}
      {Lisp-Entry "get-window-surface" #f 406 20 406 38 ("get-height" "get-width" "get-handle" "cairo_xlib_surface_create" "XDefaultVisual" "visual" "default-x11-display" "XDefaultScreen" "screen-no" "let*" "get-window-surface" "'get-window-surface" "unimplemented" "window")}
      {Lisp-Entry "set-alpha-blending" #f 414 13 414 31 ("RDW_INVALIDATE" "RDW_ERASE" "bitwise-ior" "NULL" "RedrawWindow" "LWA_ALPHA" "0" "SetLayeredWindowAttributes" "set-layered?" "n" "handle")}
      {Lisp-Entry "platform-set-parent" #f 427 13 427 32 ("get-handle" "HIViewAddSubview" "HIViewRemoveFromSuperview" "HIViewGetSuperview" "when" "parent" "handle")}
      {Lisp-Entry "platform-get-first-child" #f 433 13 433 37 ("XGetChildHandle" "0" "=" "if" "default-x11-display" "XNumberOfChildren" "num-of-children" "let" "platform-get-first-child" "'platform-get-first-child" "unimplemented" "handle")}
      {Lisp-Entry "platform-get-first-visible-child" #f 442 13 442 45 ("1" "+" "platform-is-window-visible?" "XGetChildHandle" "child-handle" "n" "loop" "0" "=" "if" "default-x11-display" "XNumberOfChildren" "num-of-children" "let" "platform-get-first-visible-child" "'platform-get-first-visible-child" "unimplemented" "handle")}
      {Lisp-Entry "platform-is-window-visible?" #f 457 13 457 40 ("IsViewable" "XWindowAttributes-map_state-ref" "=" "default-x11-display" "XGetWindowAttributes" "XWindowAttributes-make" "infos" "let" "platform-is-window-visible?" "'platform-is-window-visible?" "unimplemented" "handle")}
      {Lisp-Entry "acquire-point" #f 465 13 465 26 ("exact->inexact" "convertCoordinates" "get-v" "y" "get-h" "x" "let" "shape" "from-handle" "to-handle")}
      {Lisp-Entry "acquire-point" #f 471 13 471 26 ("inexact->exact" "Point" "new" "exact->inexact" "convertCoordinates" "receive" "get-v" "y" "get-h" "x" "let" "shape" "from-handle" "to-handle")}
      {Lisp-Entry "acquire-rect" #f 478 13 478 25 ("RECT->rect" "2" "RECT->POINTS" "MapWindowPoints" "rect->RECT" "acquired" "let" "acquire-rect" "'acquire-rect" "unimplemented" "shape" "from-handle" "to-handle")}
      {Lisp-Entry "platform-translate-to-root" #f 486 13 486 39 ("platform-translate-to-root" "'platform-translate-to-root" "unimplemented" "pt" "handle")}
      {Lisp-Entry "platform-get-position-in-root" #f 490 13 490 42 ("+" "inexact->exact" "Point" "new" "kWindowContentRgn" "WindowGetBounds" "h" "w" "t" "l" "0.0" "convertCoordinates" "y" "x" "receive" "HIViewGetRoot" "root" "HIViewGetWindow" "window" "let*" "handle")}
      {Lisp-Entry "platform-get-position" #f 497 13 497 34 ("inexact->exact" "Point" "new" "platform-get-system-rect" "height" "width" "top" "left" "receive" "parent-handle" "handle")}
      {Lisp-Entry "platform-set-position" #f 502 13 502 34 ("kWindowContentRgn" "HIViewGetWindow" "WindowSetBounds" "exact->inexact" "HIViewSetFrame" "get-window" "is-window-HIView?" "if" "get-v" "get-h" "let" "platform-get-system-rect" "height" "width" "top" "left" "receive" "pos" "handle")}
      {Lisp-Entry "platform-get-size" #f 511 13 511 30 ("inexact->exact" "Dimension" "new" "platform-get-system-rect" "height" "width" "top" "left" "receive" "handle")}
      {Lisp-Entry "platform-get-window-size" #f 516 13 516 37 ("platform-get-size" "handle")}
      {Lisp-Entry "platform-get-system-rect" #f 520 13 520 37 ("kWindowContentRgn" "HIViewGetWindow" "WindowGetBounds" "else" "HIViewGetFrame" "get-window" "is-window-HIView?" "cond" "handle")}
      {Lisp-Entry "platform-set-window-size" #f 527 13 527 37 ("kWindowContentRgn" "HIViewGetWindow" "WindowSetBounds" "exact->inexact" "HIViewSetFrame" "get-window" "is-window-HIView?" "if" "get-height" "get-width" "let" "platform-get-system-rect" "height" "width" "top" "left" "receive" "size" "handle")}
      {Lisp-Entry "platform-set-position-size" #f 536 13 536 39 ("get-height" "get-width" "get-v" "get-h" "default-x11-display" "XMoveResizeWindow" "platform-set-position-size" "'platform-set-position-size" "unimplemented" "size" "pos" "handle")}
      {Lisp-Entry "platform-set-bounds" #f 542 13 542 32 ("SWP_NOACTIVATE" "SWP_NOZORDER" "bitwise-ior" "rect-height" "rect-width" "get-top" "get-left" "NULL" "SetWindowPos" "platform-set-bounds" "'platform-set-bounds" "unimplemented" "rect" "handle")}
      {Lisp-Entry "platform-get-rect" #f 548 13 548 30 ("+" "Rect" "new" "platform-get-system-rect" "height" "width" "top" "left" "receive" "parent-handle" "handle")}
      {Lisp-Entry "platform-get-bounds" #f 553 13 553 32 ("RECT-bottom-ref" "RECT-right-ref" "RECT-top-ref" "RECT-left-ref" "Rect" "new" "2" "NULL" "MapWindowPoints" "GetWindowRect" "RECT-make" "rect" "with" "platform-get-bounds" "'platform-get-bounds" "unimplemented" "handle")}
      {Lisp-Entry "platform-mouse-position" #f 562 13 562 36 ("current-mouse-y" "current-mouse-x" "Point" "new")}
      {Lisp-Entry "platform-window-from-point" #f 566 13 566 39 ("WindowFromPoint" "get-v" "POINT-y-set!" "get-h" "POINT-x-set!" "POINT-make" "pt" "with" "point")}
      {Lisp-Entry "platform-child-window-from-point" #f 575 13 575 45 ("CWP_SKIPTRANSPARENT" "CWP_SKIPDISABLED" "CWP_SKIPINVISIBLE" "bitwise-ior" "ChildWindowFromPointEx" "get-v" "POINT-y-set!" "get-h" "POINT-x-set!" "POINT-make" "pt" "with" "point" "handle")}
      {Lisp-Entry "platform-move-window" #f 584 13 584 33 ("MoveWindow" "platform-move-window" "'platform-move-window" "unimplemented" "cy" "cx" "y" "x" "handle")}
      {Lisp-Entry "platform-window-enabled?" #f 590 13 590 37 ("IsWindowEnabled" "platform-window-enabled?" "'platform-window-enabled?" "unimplemented" "handle")}
      {Lisp-Entry "platform-enable-window" #f 596 13 596 35 ("platform-enable-window" "'platform-enable-window" "warn-unimplemented" "handle")}
      {Lisp-Entry "platform-disable-window" #f 600 13 600 36 ("platform-disable-window" "'platform-disable-window" "warn-unimplemented" "handle")}
      {Lisp-Entry "platform-get-client-rect" #f 604 13 604 37 ("get-height" "get-width" "0" "Rect" "new" "platform-get-size" "size" "let" "handle")}
      {Lisp-Entry "platform-scroll-window" #f 609 13 609 35 ("platform-update-window" "platform-invalidate-rect" "clip-rect" "rect" "dv" "dh" "handle")}
      {Lisp-Entry "platform-invalidate-rect" #f 615 13 615 37 ("-" "HIViewSetNeedsDisplayInRect" "0" "=" "and" "unless" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "exact->inexact" "left" "let" "if" "rect" "handle")}
      {Lisp-Entry "platform-invalidate-region" #f 626 13 626 39 ("get-rectangles" "platform-invalidate-rect" "rect" "function" "for-each" "region" "handle")}
      {Lisp-Entry "platform-invalidate-window" #f 632 13 632 39 ("platform-invalidate-rect" "handle")}
      {Lisp-Entry "platform-redraw-window" #f 636 13 636 35 ("platform-update-window" "HIViewGetWindow" "HIWindowFlush" "HIViewRender" "platform-invalidate-region" "platform-invalidate-rect" "if" "region" "rect" "handle")}
      {Lisp-Entry "platform-get-update-rect" #f 646 13 646 37 ("RECT->rect" "GetUpdateRect" "RECT-make" "rect" "with" "platform-get-update-rect" "'platform-get-update-rect" "unimplemented" "handle")}
      {Lisp-Entry "platform-get-update-region" #f 654 13 654 39 ("get-handle" "GetUpdateRgn" "Region" "new" "region" "let" "platform-get-update-region" "'platform-get-update-region" "unimplemented" "handle")}
      {Lisp-Entry "platform-redraw-view-only" #f 662 13 662 38 ("platform-invalidate-rect" "get-height" "get-width" "0" "Rect" "new" "rct" "platform-get-size" "size" "let*" "handle" "view")}
      {Lisp-Entry "platform-update-window" #f 668 13 668 35 ("platform-invalidate-rect" "get-height" "get-width" "0" "Rect" "new" "rct" "platform-get-size" "size" "let*" "when" "HIViewGetWindow" "HIWindowFlush" "HIViewRender" "HIViewSetNeedsDisplay" "handle")}
      {Lisp-Entry "platform-show-noactivate" #f 679 13 679 37 ("show-window" "handle")}
      {Lisp-Entry "platform-hide-noactivate" #f 683 13 683 37 ("hide-window" "handle")}
      {Lisp-Entry "platform-bring-window-to-front" #f 687 13 687 43 ("HIViewGetWindow" "SelectWindow" "kHIViewZOrderAbove" "HIViewSetZOrder" "get-window" "is-window-HIView?" "if" "handle")}
      {Lisp-Entry "platform-send-window-to-back" #f 693 13 693 41 ("HIViewGetWindow" "SendBehind" "kHIViewZOrderBelow" "HIViewSetZOrder" "get-window" "is-window-HIView?" "if" "handle")}
      {Lisp-Entry "platform-select-foreground-window" #f 699 20 699 53 ("HIViewGetWindow" "SelectWindow" "makeFrontProcess" "handle")}
      {Lisp-Entry "actions-store" #f 709 12 709 25 ("make-table")}
      {Lisp-Entry "add-position-action" #f 712 13 712 32 ("cdr" "and" "cons" "table-set!" "actions-store" "table-ref" "action" "let" "position" "window")}
      {Lisp-Entry "add-size-action" #f 717 13 717 28 ("car" "and" "cons" "table-set!" "actions-store" "table-ref" "action" "let" "size" "window")}
      {Lisp-Entry "platform-lock-window-update" #f 722 13 722 40 ("process-window-actions" "begin" "*locked-update*" "set!" "if" "handle")}
      {Lisp-Entry "process-window-actions" #f 732 13 732 35 ("make-table" "set!" "show-window" "platform-set-window-size" "platform-set-position" "platform-set-position-size" "and" "if" "cdr" "size" "car" "position" "hide-window" "get-handle" "handle" "let" "when" "action" "window" "function" "actions-store" "iterate-table")}
      {Lisp-Entry "platform-get-focus" #f 753 13 753 31 ("default-x11-display" "XGetInputFocus" "state" "win" "receive" "platform-get-focus" "'platform-get-focus" "unimplemented")}
      {Lisp-Entry "current-focus" #f 760 12 760 25 ()}
      {Lisp-Entry "get-current-focus" #f 762 13 762 30 ("get-toplevel" "set!" "current-focus" "unless")}
      {Lisp-Entry "platform-set-focus" #f 767 13 767 31 ("HIViewGetWindow" "SetUserFocusWindow" "get-window" "current-focus" "set!" "handle")}
      {Lisp-Entry "Current-Cursor" #f 777 19 777 33 ()}
      {Lisp-Entry "Cursors" #f 782 19 782 26 (":horizontal-splitter" ":vertical-splitter" ":left-arrow" ":spy" ":zoom-out" ":zoom-in" ":zoom" ":closed-hand" ":opened-hand" "Cursor-Resource" "new" ":move" "IDC_NO" ":no" "IDC_SIZEWE" ":west-east" "IDC_SIZEALL" ":all" "IDC_HAND" ":finger" "IDC_CROSS" ":cross" "IDC_IBEAM" ":ibeam" "IDC_WAIT" ":wait" "IDC_ARROW" ":arrow" "list")}
      {Lisp-Entry "load-cursor" #f 804 13 804 24 ("load-cursor" "'load-cursor" "unimplemented" "cursor")}
      {Lisp-Entry "get-named-cursor" #f 808 13 808 29 ("cadr" "error" "not" "if" "Cursors" "assq" "info" "let" "get-named-cursor" "'get-named-cursor" "unimplemented" "name")}
      {Lisp-Entry "get-cursor" #f 817 20 817 30 ("Current-Cursor")}
      {Lisp-Entry "set-cursor" #f 821 20 821 30 ("load-cursor" "SetCursor" "get-named-cursor" "symbol?" "if" "let" "set!" "Current-Cursor" "=" "unless" "cursor")}
      {Lisp-Entry "hide-cursor" #f 830 20 830 31 ()}
      {Lisp-Entry "show-cursor" #f 834 20 834 31 ()}
      {Lisp-Entry "platform-get-desktop" #f 843 13 843 33 ("XDefaultScreen" "default-x11-display" "XRootWindow" "platform-get-desktop" "'platform-get-desktop" "unimplemented")}
      {Lisp-Entry "get-work-area" #f 850 20 850 33 ("desktop" "get-handle" "platform-get-rect")}
      {Lisp-Entry "platform-drop-files" #f 859 13 859 32 ("platform-drop-files" "'platform-drop-files" "unimplemented" "temp")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "resizer" "platform" "carbon.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.resizer.platform.carbon" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Part-Cursor" #f 43 10 43 21 ()}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "platform" "carbon.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.platform.carbon" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "platform-print-document" #f 49 20 49 43 ("view")}
      {Lisp-Entry "platform-print-picture" #f 52 20 52 42 ("view")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "platform" "carbon.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.platform.carbon" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "choose-file" #f 54 20 54 31 ("host-title:" "File-Request" "get-modal" "anchors" "anchors:" "multiple-selection?" "multiple-selection?:" "extensions" "extensions:" "filenames" "filenames:" "directory" "directory:" "title" "title:")}
      {Lisp-Entry "choose-new-file" #f 74 20 74 35 ("host-title:" "NewFile-Request" "get-modal" "anchors" "anchors:" "default-extension" "default-extension:" "initial-filename" "initial-filename:" "extensions" "extensions:" "filenames" "filenames:" "directory" "directory:" "title" "title:")}
      {Lisp-Entry "choose-directory" #f 96 20 96 36 ("host-title:" "Directory-Request" "get-modal" "anchors" "anchors:" "directory" "directory:" "title" "title:")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "clipboard" "platform" "carbon.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.clipboard.platform.carbon" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "initialize-clipboard" #f 48 20 48 40 ()}
      {Lisp-Entry "internal-clipboard" #f 52 12 52 30 ()}
      {Lisp-Entry "get-clipboard-text" #f 55 20 55 38 ("internal-clipboard" "format" "format:")}
      {Lisp-Entry "set-clipboard-text" #f 59 20 59 38 ("internal-clipboard" "set!" "format" "format:" "text")}
      {Lisp-Entry "register-clipboard-format" #f 63 20 63 45 ("Formats" "table-set!" "RegisterClipboardFormat" "id" "let" "format" "name")}
      {Lisp-Entry "clipboard-format-available?" #f 69 20 69 47 ("available-clipboard-formats" "member?" "error" "Formats" "table-ref" "either" "get-format" "define" "format")}
      {Lisp-Entry "available-clipboard-formats" #f 79 20 79 47 ("get-output" "put" "/=" "when" "EnumClipboardFormats" "format" "0" "previous" "iter" "List-Factory" "new" "formats" "let" "function" "with-opened-clipboard")}
      {Lisp-Entry "mouse-select-copy" #f 98 20 98 37 ("proc")}
      {Lisp-Entry "middle-mouse-paste" #f 102 20 102 38 ("proc")}}})
"development"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "development.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.development" #f 37 9 37 28 ("get-image" "get-columns-right" "get-columns-borders" "get-node-column" "not" "set-%u" "set-%o" "set-%d" "get-cell-data" "data" "get-debugged" "part" "receive" "get-user-data" "user-data" "get-children" "car" "node" "get-column" "column" "cell-coordinates" "view->tree" "cell" "format" "get-controller" "set-%c" "set-%k" "essay" "set-%i" "get-style-at" "set-%y" "get-col" "get-line-at" "set-%n" "get-format" "set-%f" "set-%p" "set-%e" "set-%s" "string-length" "substring" "starts-with?" "if" "filename" "Jazz" "Directory" "parse" "jazzdir" "path" "git-filename" "define" "get-paragraph" "paragraph" "get-moniker" "moniker" "get-end" "end" "get-start" "start" "get-visible-height" "get-visible-width" "get-visible-count" "set-%r" "get-row" "row" "let" "when" "v->row" "r" "get-v" "v" "let*" "get-icon" "get-disabled-image-name" "get-image-name" "list" "nextmethod" "append" "pos" "view" "jazz")
      {Lisp-Entry "debug-window" #f 61 9 61 21 ("acquire" "view-debug" "nextmethod" "not" "if" "root" "find-drawing" "view" "let" "pos")}
      {Lisp-Entry "describe-window" #f 69 9 69 24 ("acquire" "view-describe" "when" "root" "find-drawing" "view" "let" "pos")}
      {Lisp-Entry "view-debug" #f 80 10 80 20 ("set-%g" "set-%h" "set-%r" "set-%m" "set-%" "get-guest" "Host-View" "is?" "and" "guest" "get-host" "host" "get-root" "root" "let*" "pos" "view")}
      {Lisp-Entry "view-describe" #f 91 10 91 23 ("get-action-handler" "get-action" "get-size" "get-position" "get-name" "class-of" "list" "pos" "view")}
      {Lisp-Entry "view-describe-state" #f 104 10 104 29 ("pos" "view")}
      {Lisp-Entry "view-outline" #f 109 13 109 25 (":console" "list" "print-to" "newline" "get-height" "get-width" "get-v" "get-h" "format" "output" "get-size" "size" "get-position" "position" "get-lie" "lie" "class-of" "type-name" "type" "let" "View" "is?" "when" "level" "function" "for-each-descendant" "3" "border:" "Aligned-Column" "properties" "Indented-Column" "classes" "Columns-Display" "new" "display" "let*" "view")}
      {Lisp-Entry "view-describe" #f 139 11 139 24 ()}
      {Lisp-Entry "view-describe" #f 151 11 151 24 ()}
      {Lisp-Entry "view-debug" #f 162 11 162 21 ()}
      {Lisp-Entry "view-describe" #f 171 11 171 24 ()}
      {Lisp-Entry "view-debug" #f 184 11 184 21 ()}
      {Lisp-Entry "view-describe" #f 208 11 208 24 ()}
      {Lisp-Entry "view-debug" #f 219 11 219 21 ()}
      {Lisp-Entry "view-describe" #f 239 11 239 24 ()}}})
"favorites"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "favorites.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.favorites" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Favorites-Preferences" #f 52 7 52 28 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" #f 64 11 64 32 ()}
        {Lisp-Entry "can-delete-component?" #f 68 11 68 32 ()}
        {Lisp-Entry "can-move-component?" #f 72 11 72 30 ()}
        {Lisp-Entry "can-copy-component?" #f 76 11 76 30 ()}
        {Lisp-Entry "get-addable-classes" #f 80 11 80 30 ("Favorite-Configuration" "list")}
        {Lisp-Entry "get-addable-details" #f 85 11 85 30 ("300" "file" "100" "shortcut")}}
      {Lisp-Entry "Favorite-Configuration" #f 94 7 94 29 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "shortcut" #f 97 12 97 20 ("generate")}
        {Lisp-Entry "file" #f 98 12 98 16 ("generate")}
        {Lisp-Entry "get-domain" #f 110 16 110 26 ("nextmethod" "else" "String-Domain" "new" "shortcut" "field-name" "case" "property")}
        {Lisp-Entry "get-class-presentation" #f 121 16 121 38 ()}
        {Lisp-Entry "property-presentation" #f 125 16 125 37 ("nextmethod" "else" "file" "shortcut" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" #f 132 11 132 33 ("shortcut" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 136 11 136 27 ("shortcut")}
        {Lisp-Entry "set-presentation" #f 140 11 140 27 ("shortcut:" "self" "set-property" "shortcut" "designer")}
        {Lisp-Entry "get-row-instance" #f 144 11 144 27 ("nextmethod" "else" "File-Row" "file" "String-Row" "new" "shortcut" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 151 11 151 37 ("file" "shortcut")}}}})
"independant"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "platform" "independant.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.platform.independant" #f 38 19 38 54 ("jazz")
      {Lisp-Entry "*events-single-threaded?*" #f 46 12 46 37 ()}
      {Lisp-Entry "get-events-single-threaded?" #f 50 13 50 40 ("*events-single-threaded?*")}
      {Lisp-Entry "set-events-single-threaded?" #f 54 13 54 40 ("*events-single-threaded?*" "set!" "flag")}
      {Lisp-Entry "event-thread" #f 63 12 63 24 ("primordial-thread")}
      {Lisp-Entry "event-thread?" #f 67 13 67 26 ("event-thread" "current-thread" "eq?")}
      {Lisp-Entry "post-event" #f 71 13 71 23 ("post-event" "'post-event" "event-thread" "thread-post" "thunk")}
      {Lisp-Entry "execute-event" #f 76 13 76 26 ("execute-event" "'execute-event" "event-thread" "thread-execute" "thunk")}
      {Lisp-Entry "call-event" #f 81 13 81 23 ("call-event" "'call-event" "event-thread" "thread-call" "thunk")}}})
"wallpaper"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "preference" "wallpaper.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.preference.wallpaper" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Wallpaper-Preferences" #f 52 7 52 28 ("title:" "Preferences")
        {Lisp-Entry "active" #f 55 12 55 18 ("generate")}
        {Lisp-Entry "can-rename-component?" #f 67 11 67 32 ()}
        {Lisp-Entry "can-delete-component?" #f 71 11 71 32 ()}
        {Lisp-Entry "can-move-component?" #f 75 11 75 30 ()}
        {Lisp-Entry "can-copy-component?" #f 79 11 79 30 ()}
        {Lisp-Entry "get-addable-classes" #f 83 11 83 30 ("Wallpaper-Configuration" "list")}
        {Lisp-Entry "get-addable-details" #f 88 11 88 30 ("active?" "random?" "recursive?" "period" "favorites" "startup" "mode" "directory" "100" "name-info")}}
      {Lisp-Entry "Wallpaper-Configuration" #f 105 7 105 30 ("300000" "period:" "favorites:" "startup:" "Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "directory" #f 108 12 108 21 ("generate")}
        {Lisp-Entry "mode" #f 109 12 109 16 ("generate")}
        {Lisp-Entry "startup" #f 110 12 110 19 ("generate")}
        {Lisp-Entry "favorites" #f 111 12 111 21 ("generate")}
        {Lisp-Entry "period" #f 112 12 112 18 ("generate")}
        {Lisp-Entry "recursive?" #f 113 12 113 22 ("generate")}
        {Lisp-Entry "random?" #f 114 12 114 19 ("generate")}
        {Lisp-Entry "active?" #f 115 12 115 19 ("generate")}
        {Lisp-Entry "get-domain" #f 127 16 127 26 ("nextmethod" "else" "Boolean-Domain" "new" "active?" "random?" "recursive?" "field-name" "case" "property")}
        {Lisp-Entry "get-class-presentation" #f 138 16 138 38 ()}
        {Lisp-Entry "property-presentation" #f 142 16 142 37 ("nextmethod" "else" "active?" "random?" "recursive?" "period" "favorites" "startup" "mode" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 155 11 155 27 ("nextmethod" "else" "Boolean-Row" "active?" "random?" "recursive?" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 162 11 162 37 ("active?" "random?" "recursive?" "period" "favorites" "startup" "mode" "directory")}}}})
"windows"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "platform" "windows.jazz"} 1244896779
    {Lisp-Entry "jazz.ui.window.platform.windows" #f 39 19 39 50 ("message-callback" "set-process-hwnd-message" "GetDesktopWindow" "desktop" "WS_EX_DLGMODALFRAME" "WS_EX_APPWINDOW" "WS_EX_TOOLWINDOW" "window" "closable?:" "0" "WS_THICKFRAME" "not-found:" "sizable?:" "getf" "if" "WS_DLGFRAME" "WS_CAPTION" "WS_OVERLAPPED" "WS_BORDER" "dialog" "WS_MINIMIZEBOX" "toplevel" "WS_OVERLAPPEDWINDOW" "palette" "WS_POPUP" "popup" "WS_CLIPSIBLINGS" "WS_CLIPCHILDREN" "WS_SYSMENU" "WS_CHILD" "bitwise-ior" "rest" "frame" "register-window-class" "jazz")
      {Lisp-Entry "unprocessed" #f 62 19 62 30 ("unprocessed")}
      {Lisp-Entry "processed" #f 63 19 63 28 ("processed")}
      {Lisp-Entry "processed-result" #f 66 13 66 29 ("cadr" "0" "cdr" "null?" "processed" "'processed" "car" "eq?" "pair?" "and" "if" "return")}
      {Lisp-Entry "Windows-Table" #f 79 19 79 32 ("eqv?" "test:" "make-table")}
      {Lisp-Entry "get-window" #f 83 27 83 37 ("Windows-Table" "table-ref" "foreign-address" "foreign?" "if" "let" "hwnd")}
      {Lisp-Entry "set-window" #f 88 27 88 37 ("foreign-address" "Windows-Table" "table-set!" "window" "hwnd")}
      {Lisp-Entry "in-creation" #f 93 12 93 23 ()}
      {Lisp-Entry "set-in-creation" #f 96 13 96 28 ("in-creation" "set!" "in")}
      {Lisp-Entry "get-in-creation" #f 100 13 100 28 ("in-creation")}
      {Lisp-Entry "window-class" #f 104 10 104 22 ("CLASS_ATOM" "window")}
      {Lisp-Entry "class-style" #f 108 13 108 24 ("CS_DBLCLKS" "bitwise-ior")}
      {Lisp-Entry "class-background" #f 112 13 112 29 ("COLOR_BTNFACE" "GetSysColorBrush")}
      {Lisp-Entry "get-class-background" #f 116 13 116 33 ("GCL_HBRBACKGROUND" "GetClassLong" "handle")}
      {Lisp-Entry "platform-erase-background" #f 120 13 120 38 ("unprocessed" "handle")}
      {Lisp-Entry "CLASS_ATOM" #f 124 12 124 22 ()}
      {Lisp-Entry "register-window-class" #f 128 13 128 34 ("RegisterClassEx" "CLASS_ATOM" "set!" "16" "WNDCLASSEX-hIconSm-set!" "WNDCLASSEX-lpszClassName-set!" "WNDCLASSEX-lpszMenuName-set!" "WNDCLASSEX-hbrBackground-set!" "NULL" "WNDCLASSEX-hCursor-set!" "32" "load-product-icon" "WNDCLASSEX-hIcon-set!" "WNDCLASSEX-hInstance-set!" "WNDCLASSEX-cbWndExtra-set!" "0" "WNDCLASSEX-cbClsExtra-set!" "call-process-hwnd-message" "WNDCLASSEX-lpfnWndProc-set!" "class-style" "WNDCLASSEX-style-set!" "WNDCLASSEX-sizeof" "WNDCLASSEX-cbSize-set!" "WNDCLASSEX-make" "wc" "class-background" "background" "current-instance" "instance" "let")}
      {Lisp-Entry "load-product-icon" #f 147 13 147 30 ("LR_LOADFROMFILE" "IMAGE_ICON" "NULL" "LoadImage" "file-exists?" "if" "format" "kernel-install" "string-append" "file" "jazz" "'jazz" "jazz-product" "either" "product" "let" "cy" "cx")}
      {Lisp-Entry "window-style" #f 158 10 158 22 ("WS_CLIPSIBLINGS" "WS_CLIPCHILDREN" "WS_CHILD" "bitwise-ior" "rest" "window")}
      {Lisp-Entry "window-style" #f 164 11 164 23 ()}
      {Lisp-Entry "window-style" #f 171 11 171 23 ()}
      {Lisp-Entry "window-style" #f 176 11 176 23 ()}
      {Lisp-Entry "window-style" #f 182 11 182 23 ()}
      {Lisp-Entry "window-style" #f 191 11 191 23 ()}
      {Lisp-Entry "window-ex-style" #f 203 10 203 25 ("0" "rest" "window")}
      {Lisp-Entry "window-ex-style" #f 207 11 207 26 ()}
      {Lisp-Entry "window-ex-style" #f 211 11 211 26 ()}
      {Lisp-Entry "window-ex-style" #f 215 11 215 26 ()}
      {Lisp-Entry "window-ex-style" #f 219 11 219 26 ()}
      {Lisp-Entry "window-parent" #f 223 13 223 26 ("NULL" "get-handle" "if" "get-parent" "parent" "let" "window")}
      {Lisp-Entry "window-default-parent" #f 230 13 230 34 ("else" "get-toplevel" "Dialog" "get-stage" "Frame" "typecase" "window")}
      {Lisp-Entry "create-handle" #f 237 10 237 23 ("current-instance" "window-parent" "500" "0" "window-style" "NULL" "window-class" "CLASS_ATOM" "window-ex-style" "CreateWindowEx" "rest" "window")}
      {Lisp-Entry "create-handle" #f 252 11 252 24 ()}
      {Lisp-Entry "prepare-handle" #f 256 13 256 27 ("DragAcceptFiles" "GetLastError" "window-parent" "parent:" "window-ex-style" "ex-style:" "window-style" "style:" "window-class" "class:" "list" "error" "not" "if" "create-handle" "let" "set-in-creation" "others" "hwnd" "bind-keywords" "rest" "window")}
      {Lisp-Entry "bring-window-to-top" #f 268 13 268 32 ("BringWindowToTop" "hwnd")}
      {Lisp-Entry "show-window" #f 272 13 272 24 ("SW_SHOWNORMAL" "ShowWindow" "handle")}
      {Lisp-Entry "show-maximized" #f 276 13 276 27 ("SW_MAXIMIZE" "ShowWindow" "handle")}
      {Lisp-Entry "show-restored" #f 280 13 280 26 ("SW_RESTORE" "ShowWindow" "handle")}
      {Lisp-Entry "hide-window" #f 284 13 284 24 ("SW_HIDE" "ShowWindow" "handle")}
      {Lisp-Entry "minimize-window" #f 288 13 288 28 ("SW_MINIMIZE" "ShowWindow" "handle")}
      {Lisp-Entry "maximize-window" #f 292 13 292 28 ("SW_MAXIMIZE" "ShowWindow" "handle")}
      {Lisp-Entry "restore-window" #f 296 13 296 27 ("SW_RESTORE" "ShowWindow" "handle")}
      {Lisp-Entry "destroy-window" #f 300 13 300 27 ("DestroyWindow" "handle")}
      {Lisp-Entry "dispatch-message" #f 304 13 304 29 ("processed-result" "get-handle" "DefWindowProc" "unprocessed" "eq?" "if" "process-window-message" "return" "let" "lparam" "wparam" "msg" "window")}
      {Lisp-Entry "setup-events" #f 316 13 316 25 ("event-thread" "thread-priority-boost-set!" "NULL" "0" "get-toplevel-hwnd" "SetTimer" "get-events-single-threaded?" "if" "1" "events-heartbeat" "define")}
      {Lisp-Entry "prime-message-pump" #f 331 13 331 31 ("message-pump" "'message-pump" "process-messages" "function" "new-thread")}
      {Lisp-Entry "process-messages" #f 337 13 337 29 ("thread-loop?" "when" "read" "loop" "current-thread" "thread" "QS_ALLINPUT" "open-event-queue" "port" "MSG-free" "PM_REMOVE" "0" "NULL" "PeekMessage" "while" "MSG-make" "let" "proper-tail-calls" "declare" "DispatchMessage" "TranslateMessage" "translate-shortcut" "unless" "function" "execute-event" "msg" "process-message" "define")}
      {Lisp-Entry "process-messages-single-threaded" #f 367 13 367 45 ("MSG-free" "0" "NULL" "GetMessage" "when" "loop" "MSG-make" "let" "proper-tail-calls" "declare" "DispatchMessage" "TranslateMessage" "translate-shortcut" "unless" "msg" "process-message" "define" "thunk")}
      {Lisp-Entry "callback-level" #f 389 12 389 26 ("0")}
      {Lisp-Entry "callback-thread-mutex" #f 392 12 392 33 ("callback-thread-mutex" "'callback-thread-mutex" "make-mutex")}
      {Lisp-Entry "callback-thread-condition" #f 395 12 395 37 ("callback-thread-condition" "'callback-thread-condition" "make-condition")}
      {Lisp-Entry "message-callback" #f 399 13 399 29 ("callback-thread-condition" "current-thread" "interleaved-problem-detected" "'interleaved-problem-detected" "terminal" "decrease!" "=" "iterate" "call-event" "unwind-protect" "mutex-unlock!" "prog1" "callback-level" "increase!" "callback-thread-mutex" "mutex-lock!" "begin" "level" "1" "exit" "reason:" "snapshot-process" "primordial-thread?" "get-events-single-threaded?" "dispatch-message" "DefWindowProc" "if" "set-in-creation" "set-window" "set-handle" "set!" "get-in-creation" "not" "and" "when" "get-window" "window" "let" "process" "define" "lparam" "wparam" "msg" "hwnd")}
      {Lisp-Entry "Symbolic-Keys" #f 454 19 454 32 ("eqv?" "test:" "Divide" "'Divide" "VK_DIVIDE" "Multiply" "'Multiply" "VK_MULTIPLY" "Subtract" "'Subtract" "VK_SUBTRACT" "Add" "'Add" "VK_ADD" "Delete" "'Delete" "VK_DELETE" "Pause" "'Pause" "VK_PAUSE" "Insert" "'Insert" "VK_INSERT" "Next" "'Next" "VK_NEXT" "Prior" "'Prior" "VK_PRIOR" "Down" "'Down" "VK_DOWN" "Right" "'Right" "VK_RIGHT" "Up" "'Up" "VK_UP" "Left" "'Left" "VK_LEFT" "End" "'End" "VK_END" "Home" "'Home" "VK_HOME" "Tab" "'Tab" "VK_TAB" "Space" "'Space" "VK_SPACE" "Return" "'Return" "VK_RETURN" "Backspace" "'Backspace" "VK_BACK" "Escape" "'Escape" "VK_ESCAPE" "F12" "'F12" "VK_F12" "F11" "'F11" "VK_F11" "F10" "'F10" "VK_F10" "F9" "'F9" "VK_F9" "F8" "'F8" "VK_F8" "F7" "'F7" "VK_F7" "F6" "'F6" "VK_F6" "F5" "'F5" "VK_F5" "F4" "'F4" "VK_F4" "F3" "'F3" "VK_F3" "F2" "'F2" "VK_F2" "F1" "'F1" "VK_F1" "VK_OEM_7" "VK_OEM_6" "VK_OEM_5" "VK_OEM_4" "VK_OEM_3" "VK_OEM_2" "VK_OEM_1" "VK_OEM_PERIOD" "VK_OEM_COMMA" "VK_OEM_PLUS" "VK_OEM_MINUS" "cons" "list" "list->table")}
      {Lisp-Entry "translate-shortcut" #f 503 13 503 31 ("Shortcut" "new" "dispatch-shortcut" "MSG-wParam-ref" "WM_SYSKEYDOWN" "WM_KEYDOWN" "=" "MSG-message-ref" "message" "not" "if" "get-application" "appl" "integer->char" "Symbolic-Keys" "table-ref" "or" "VK_MENU" "VK_CONTROL" "VK_SHIFT" "/=" "and" "code" "key" ":control" "control-down?" ":shift" "shift-down?" ":alt" "alt-down?" "cons" "set!" "when" "modifier" "down?" "function" "try" "let" "modifiers" "define" "msg")}
      {Lisp-Entry "get-x-lparam" #f 540 12 540 24 ("signed-loword")}
      {Lisp-Entry "get-y-lparam" #f 541 12 541 24 ("signed-hiword")}
      {Lisp-Entry "get-wheel-delta-wparam" #f 542 12 542 34 ("signed-hiword")}
      {Lisp-Entry "process-window-message" #f 545 13 545 35 ("unprocessed-message" "else" "timer-pulse" "WM_TIMER" "settings-change" "WM_SETTINGCHANGE" "drop-files" "WM_DROPFILES" "get-window" "focus-lose" "WM_KILLFOCUS" "focus-gain" "WM_SETFOCUS" "on-close" "WM_CLOSE" "activate-app" "WM_ACTIVATEAPP" "on-activate" "active" "'active" "inactive" "'inactive" "WA_INACTIVE" "kind" "WM_ACTIVATE" "MA_NOACTIVATE" "processed" "'processed" "list" "on-mouse-activate" "mouse-activate?" "WM_MOUSEACTIVATE" "call-size-change" "0" "/=" "or" "height" "width" "let" "WM_SIZE" "call-position-change" "WM_MOVE" "integer->char" "call-key-press" "WM_CHAR" "key-up" "WM_KEYUP" "key-down" "WM_KEYDOWN" "system-key-up" "WM_SYSKEYUP" "unprocessed" "system-key-down" "VK_MENU" "if" "WM_SYSKEYDOWN" "call-context-menu" "WM_CONTEXTMENU" "right-mouse-up" "WM_RBUTTONUP" "right-mouse-down" "WM_RBUTTONDOWN" "middle-mouse-up" "WM_MBUTTONUP" "middle-mouse-down" "WM_MBUTTONDOWN" "double-click" "WM_LBUTTONDBLCLK" "mouse-up" "WM_LBUTTONUP" "mouse-down" "WM_LBUTTONDOWN" "get-wheel-delta-wparam" "mouse-wheel" "WM_MOUSEWHEEL" "get-y-lparam" "get-x-lparam" "mouse-move" "WM_MOUSEMOVE" "HTCLIENT" "loword" "=" "cursor-update" "WM_SETCURSOR" "paint" "get-handle" "platform-get-update-region" "region" "with-closed" "WM_PAINT" "erase-background" "WM_ERASEBKGND" "ecase" "lparam" "wparam" "msg" "window")}
      {Lisp-Entry "set-capture" #f 589 13 589 24 ("SetCapture" "handle")}
      {Lisp-Entry "unset-capture" #f 593 13 593 26 ("ReleaseCapture")}
      {Lisp-Entry "with-platform-painting" #f 597 13 597 35 ("processed" "PAINTSTRUCT-free" "EndPaint" "close" "unwind-protect" "cairo_win32_surface_create" "Surface" "new" "surface" "BeginPaint" "hdc" "PAINTSTRUCT-make" "ps" "with" "get-handle" "handle" "let" "proc" "platform-data" "window")}
      {Lisp-Entry "get-window-surface" #f 610 20 610 38 ("get-handle" "GetDC" "cairo_win32_surface_create" "window")}
      {Lisp-Entry "settings-change" #f 614 13 614 28 ("set-fullscreen?" "Toplevel" "is?" "when" "SPI_SETWORKAREA" "ecase" "wparam" "window")}
      {Lisp-Entry "get-style" #f 627 13 627 22 ("GWL_STYLE" "GetWindowLong" "handle")}
      {Lisp-Entry "set-style" #f 631 13 631 22 ("GWL_STYLE" "SetWindowLong" "style" "handle")}
      {Lisp-Entry "get-ex-style" #f 635 13 635 25 ("GWL_EXSTYLE" "GetWindowLong" "handle")}
      {Lisp-Entry "set-ex-style" #f 639 13 639 25 ("GWL_EXSTYLE" "SetWindowLong" "style" "handle")}
      {Lisp-Entry "child-window?" #f 643 13 643 26 ("WS_CHILD" "get-style" "mask-bit-set?" "handle")}
      {Lisp-Entry "get-toplevel-hwnd" #f 652 13 652 30 ("get-handle" "when" "get-toplevel" "toplevel" "let")}
      {Lisp-Entry "get-stage" #f 663 13 663 22 ("get-stage" "when" "get-application" "appl" "let")}
      {Lisp-Entry "get-layered?" #f 674 13 674 25 ("WS_EX_LAYERED" "get-ex-style" "mask-bit-set?" "handle")}
      {Lisp-Entry "set-layered?" #f 678 13 678 25 ("WS_EX_LAYERED" "GetWindowLong" "mask-bit-set" "GWL_EXSTYLE" "SetWindowLong" "flag" "handle")}
      {Lisp-Entry "set-alpha-blending" #f 682 13 682 31 ("RDW_INVALIDATE" "RDW_ERASE" "bitwise-ior" "NULL" "RedrawWindow" "LWA_ALPHA" "0" "SetLayeredWindowAttributes" "set-layered?" "n" "handle")}
      {Lisp-Entry "track-mouse-event" #f 693 13 693 30 ("TRACKMOUSEEVENT-free" "TrackMouseEvent" "TRACKMOUSEEVENT-dwHoverTime-set!" "TRACKMOUSEEVENT-hwndTrack-set!" "TRACKMOUSEEVENT-dwFlags-set!" "size-of-TRACKMOUSEEVENT" "TRACKMOUSEEVENT-cbSize-set!" "TRACKMOUSEEVENT-make" "rec" "with" "HOVER_DEFAULT" "time" "time:" "flags" "handle")}
      {Lisp-Entry "platform-set-parent" #f 708 13 708 32 ("NULL" "get-handle" "if" "SetParent" "parent" "handle")}
      {Lisp-Entry "set-window-title" #f 712 13 712 29 ("SetWindowText" "title" "handle")}
      {Lisp-Entry "get-window-owner-handle" #f 716 13 716 36 ("GW_OWNER" "GetWindow" "handle")}
      {Lisp-Entry "platform-get-first-child" #f 720 13 720 37 ("GW_CHILD" "GetWindow" "handle")}
      {Lisp-Entry "platform-get-first-visible-child" #f 724 13 724 45 ("platform-get-next-window-handle" "platform-is-window-visible?" "if" "platform-get-first-child" "child-handle" "loop" "let" "handle")}
      {Lisp-Entry "platform-get-next-window-handle" #f 733 13 733 44 ("GW_HWNDNEXT" "GetWindow" "handle")}
      {Lisp-Entry "platform-is-window-visible?" #f 737 13 737 40 ("IsWindowVisible" "handle")}
      {Lisp-Entry "get-top-window-handle" #f 741 13 741 34 ("GetTopWindow" "handle")}
      {Lisp-Entry "acquire-point" #f 745 13 745 26 ("POINT-free" "POINT->point" "prog1" "1" "MapWindowPoints" "point->POINT" "acquired" "let" "error" "not" "when" "shape" "from-handle" "to-handle")}
      {Lisp-Entry "acquire-rect" #f 754 13 754 25 ("RECT-free" "RECT->rect" "prog1" "2" "RECT->POINTS" "MapWindowPoints" "rect->RECT" "acquired" "let" "shape" "from-handle" "to-handle")}
      {Lisp-Entry "platform-translate-to-root" #f 761 13 761 39 ("POINT-free" "POINT-y-ref" "POINT-x-ref" "Point" "new" "prog1" "1" "NULL" "MapWindowPoints" "point->POINT" "pos" "with" "pt" "handle")}
      {Lisp-Entry "platform-get-position" #f 768 13 768 34 ("RECT-free" "RECT-top-ref" "RECT-left-ref" "Point" "new" "prog1" "2" "RECT->POINTS" "NULL" "MapWindowPoints" "child-window?" "and" "when" "GetWindowRect" "RECT-make" "rect" "with" "parent-handle" "handle")}
      {Lisp-Entry "platform-set-position" #f 777 13 777 34 ("SWP_NOACTIVATE" "SWP_NOZORDER" "SWP_NOSIZE" "bitwise-ior" "0" "get-v" "get-h" "NULL" "SetWindowPos" "pos" "handle")}
      {Lisp-Entry "platform-get-size" #f 781 13 781 30 ("RECT-free" "RECT-bottom-ref" "RECT-right-ref" "Dimension" "new" "prog1" "GetClientRect" "RECT-make" "rect" "with" "handle")}
      {Lisp-Entry "platform-get-window-size" #f 788 13 788 37 ("RECT-free" "RECT-top-ref" "RECT-bottom-ref" "RECT-left-ref" "RECT-right-ref" "-" "Dimension" "new" "prog1" "GetWindowRect" "RECT-make" "rect" "let" "handle")}
      {Lisp-Entry "platform-set-window-size" #f 796 13 796 37 ("SWP_NOACTIVATE" "SWP_NOZORDER" "SWP_NOMOVE" "SWP_NOCOPYBITS" "bitwise-ior" "get-height" "get-width" "0" "NULL" "SetWindowPos" "size" "handle")}
      {Lisp-Entry "platform-set-bounds" #f 800 13 800 32 ("SWP_NOACTIVATE" "SWP_NOZORDER" "bitwise-ior" "rect-height" "rect-width" "get-top" "get-left" "NULL" "SetWindowPos" "rect" "handle")}
      {Lisp-Entry "platform-get-rect" #f 804 13 804 30 ("RECT-free" "RECT-bottom-ref" "RECT-right-ref" "RECT-top-ref" "RECT-left-ref" "Rect" "new" "prog1" "2" "RECT->POINTS" "NULL" "MapWindowPoints" "when" "GetWindowRect" "RECT-make" "rect" "with" "parent-handle" "handle")}
      {Lisp-Entry "platform-get-bounds" #f 813 13 813 32 ("RECT-free" "RECT-bottom-ref" "RECT-right-ref" "RECT-top-ref" "RECT-left-ref" "Rect" "new" "prog1" "2" "NULL" "MapWindowPoints" "GetWindowRect" "RECT-make" "rect" "with" "handle")}
      {Lisp-Entry "platform-mouse-position" #f 821 13 821 36 ("POINT-free" "POINT-y-ref" "POINT-x-ref" "Point" "new" "prog1" "GetCursorPos" "POINT-make" "point" "with")}
      {Lisp-Entry "platform-window-from-point" #f 828 13 828 39 ("POINT-free" "WindowFromPoint" "prog1" "get-v" "POINT-y-set!" "get-h" "POINT-x-set!" "POINT-make" "pt" "with" "point")}
      {Lisp-Entry "platform-child-window-from-point" #f 836 13 836 45 ("POINT-free" "CWP_SKIPTRANSPARENT" "CWP_SKIPDISABLED" "CWP_SKIPINVISIBLE" "bitwise-ior" "ChildWindowFromPointEx" "prog1" "get-v" "POINT-y-set!" "get-h" "POINT-x-set!" "POINT-make" "pt" "with" "point" "handle")}
      {Lisp-Entry "platform-move-window" #f 844 13 844 33 ("MoveWindow" "cy" "cx" "y" "x" "handle")}
      {Lisp-Entry "platform-window-enabled?" #f 848 13 848 37 ("IsWindowEnabled" "handle")}
      {Lisp-Entry "platform-enable-window" #f 852 13 852 35 ("EnableWindow" "handle")}
      {Lisp-Entry "platform-disable-window" #f 856 13 856 36 ("EnableWindow" "handle")}
      {Lisp-Entry "platform-get-client-rect" #f 860 13 860 37 ("RECT-free" "RECT->rect" "prog1" "GetClientRect" "RECT-make" "rect" "with" "handle")}
      {Lisp-Entry "platform-scroll-window" #f 867 13 867 35 ("RECT-free" "NULL" "ScrollWindowEx" "prog1" "rect->RECT" "with" "SW_INVALIDATE" "flags" "let" "clip-rect" "rect" "dv" "dh" "handle")}
      {Lisp-Entry "platform-invalidate-rect" #f 876 13 876 37 ("RECT-free" "InvalidateRect" "prog1" "rect->RECT" "with" "when" "rect" "handle")}
      {Lisp-Entry "platform-invalidate-region" #f 884 13 884 39 ("get-handle" "InvalidateRgn" "when" "region" "handle")}
      {Lisp-Entry "platform-invalidate-window" #f 890 13 890 39 ("NULL" "InvalidateRect" "when" "handle")}
      {Lisp-Entry "platform-redraw-window" #f 896 13 896 35 ("RECT-free" "get-handle" "RedrawWindow" "prog1" "rect->RECT" "NULL" "not" "if" "with" "RDW_ALLCHILDREN" "RDW_INVALIDATE" "RDW_UPDATENOW" "RDW_ERASENOW" "bitwise-ior" "flags" "let" "when" "region" "rect" "handle")}
      {Lisp-Entry "platform-get-update-rect" #f 908 13 908 37 ("RECT-free" "RECT->rect" "prog1" "GetUpdateRect" "RECT-make" "rect" "with" "handle")}
      {Lisp-Entry "platform-get-update-region" #f 915 13 915 39 ("get-handle" "GetUpdateRgn" "Region" "new" "region" "let" "handle")}
      {Lisp-Entry "platform-update-window" #f 921 13 921 35 ("UpdateWindow" "handle")}
      {Lisp-Entry "platform-show-noactivate" #f 925 13 925 37 ("SWP_NOSIZE" "SWP_NOMOVE" "SWP_NOACTIVATE" "SWP_SHOWWINDOW" "bitwise-ior" "0" "HWND_TOP" "SetWindowPos" "handle")}
      {Lisp-Entry "platform-hide-noactivate" #f 929 13 929 37 ("SWP_NOSIZE" "SWP_NOMOVE" "SWP_NOACTIVATE" "SWP_HIDEWINDOW" "bitwise-ior" "0" "SetWindowPos" "handle")}
      {Lisp-Entry "platform-bring-window-to-front" #f 933 13 933 43 ("BringWindowToTop" "handle")}
      {Lisp-Entry "platform-send-window-to-back" #f 937 13 937 41 ("SWP_NOSIZE" "SWP_NOMOVE" "bitwise-ior" "0" "HWND_BOTTOM" "SetWindowPos" "handle")}
      {Lisp-Entry "platform-select-foreground-window" #f 941 13 941 46 ("SetForegroundWindow" "handle")}
      {Lisp-Entry "platform-get-window-handle-title" #f 945 13 945 45 ("1" "+" "GetWindowText" "str" "ret" "receive" "make-string" "string" "GetWindowTextLength" "size" "let*" "handle")}
      {Lisp-Entry "platform-lock-window-update" #f 952 13 952 40 ("LockWindowUpdate" "handle")}
      {Lisp-Entry "platform-get-focus" #f 961 13 961 31 ("GetFocus")}
      {Lisp-Entry "platform-set-focus" #f 965 13 965 31 ("SetFocus" "handle")}
      {Lisp-Entry "Current-Cursor" #f 976 19 976 33 ()}
      {Lisp-Entry "Cursors" #f 980 19 980 26 (":horizontal-splitter" ":vertical-splitter" ":left-arrow" ":spy" ":zoom-out" ":zoom-in" ":zoom" ":closed-hand" ":opened-hand" "Cursor-Resource" ":move" "IDC_NO" ":no" "IDC_SIZEWE" ":west-east" "IDC_SIZEALL" ":all" "IDC_HAND" ":finger" "IDC_CROSS" ":cross" "IDC_IBEAM" ":ibeam" "IDC_WAIT" ":wait" "IDC_ARROW" ":arrow" "list")}
      {Lisp-Entry "load-cursor" #f 1002 13 1002 24 ("LR_LOADFROMFILE" "0" "IMAGE_CURSOR" "NULL" "LoadImage" "parse" "ident" "get-name" "'cursor" "get-application" "get-resource" "file?" "let*" "LoadCursorInt" "number?" "if" "cursor")}
      {Lisp-Entry "get-named-cursor" #f 1010 13 1010 29 ("cadr" "error" "not" "if" "Cursors" "assq" "info" "let" "name")}
      {Lisp-Entry "get-cursor" #f 1017 20 1017 30 ("Current-Cursor")}
      {Lisp-Entry "set-cursor" #f 1021 20 1021 30 ("load-cursor" "SetCursor" "get-named-cursor" "symbol?" "if" "let" "set!" "Current-Cursor" "=" "unless" "cursor")}
      {Lisp-Entry "hide-cursor" #f 1028 20 1028 31 ("0" "ShowCursor" ">=" "while")}
      {Lisp-Entry "show-cursor" #f 1033 20 1033 31 ("0" "ShowCursor" "<" "while")}
      {Lisp-Entry "platform-redraw-view-only" #f 1043 13 1043 38 ("DeleteObject" "InvalidateRgn" "redraw-view" "NULL" "ValidateRect" "GetUpdateRgn" "0" "CreateRectRgn" "hrgn" "with" "hwnd" "view")}
      {Lisp-Entry "platform-get-desktop" #f 1056 13 1056 33 ("GetDesktopWindow")}
      {Lisp-Entry "get-work-area" #f 1065 20 1065 33 ("RECT-free" "RECT->rect" "adjust-work-area-with-taskbar" "prog1" "0" "SPI_GETWORKAREA" "SystemParametersInfo" "RECT-make" "area" "with")}
      {Lisp-Entry "adjust-work-area-with-taskbar" #f 1073 13 1073 42 ("ABE_BOTTOM" "-1" "ABE_RIGHT" "ABE_TOP" "0" "1" "expand-rect" "ABE_LEFT" "ecase" "ABS_ALWAYSONTOP" "ABS_AUTOHIDE" "mask-bit-set?" "and" "if" "get-taskbar-edge" "edge" "get-taskbar-state" "state" "let" "rect")}
      {Lisp-Entry "get-taskbar-state" #f 1087 20 1087 37 ("ABM_GETSTATE" "SHAppBarMessage" "size-of" "cbSize" "'cbSize" "set" "APPBARDATA" "new" "data" "with" "get-taskbar-state" "'get-taskbar-state" "unimplemented")}
      {Lisp-Entry "get-taskbar-edge" #f 1095 20 1095 36 ("uEdge" "'uEdge" "get" "ABM_GETTASKBARPOS" "SHAppBarMessage" "size-of" "cbSize" "'cbSize" "set" "APPBARDATA" "new" "data" "with" "get-taskbar-edge" "'get-taskbar-edge" "unimplemented")}
      {Lisp-Entry "platform-drop-files" #f 1109 13 1109 32 ("POINT-free" "get-toplevel-hwnd" "platform-select-foreground-window" "prog1" "receive-files" "POINT->point" "pos" "DragFinish" "DragQueryPoint" "POINT-make" "pt" "received-files" "files" "WPARAM->HDROP" "hdrop" "let" "wparam" "window")}
      {Lisp-Entry "received-files" #f 1121 13 1121 27 ("naturals" "WCHAR-array-free" "anchorize" "prog1" "tokenise-windows" "File" "else" "Directory" "directory" "pathname-type" "case" "new" "pathname" "WCHAR-string" "filename" "WCHAR-array-set!" "WCHAR-array-make" "buffer" "MAX_PATH" "size" "let*" "n" "function" "map" "0" "NULL" "#xFFFFFFFF" "DragQueryFile" "count" "let" "hdrop")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "resizer" "platform" "windows.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.resizer.platform.windows" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Part-Cursor" #f 43 10 43 21 ("IDC_ARROW" "IDC_SIZEWE" "IDC_SIZENESW" "1" "IDC_SIZENS" "0" "IDC_SIZENWSE" "-1" "cons" "list")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "platform" "windows.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.platform.windows" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "platform-print-document" #f 53 20 53 43 ("print-job" "nb-copies:" "to:" "essay" "from:" "selection?:" "Printer-Job" "job" "let" "10000" "0" "Rect" "setup-clipper" "LOGPIXELSX" "GetDeviceCaps" "resolution" "printer" "'printer" "get-page-setup-for" "page-setup" "cairo_win32_surface_create" "Surface" "new" "surface" "let*" "print-picture" "if" "print-dialog" "orientation" "nb-copies" "to" "from" "pages?" "selection?" "print-to-file?" "hdc" "receive" "view")}
      {Lisp-Entry "delete-existing" #f 65 13 65 28 ("recursive?:" "delete-file" "get-name" "matches?" "when" "file" "function" "iterate-directory" "format" "Regular-Expression" "new" "regexp" "let" "filename" "directory")}
      {Lisp-Entry "platform-print-picture" #f 74 20 74 42 ("message-box" "print-job" "Picture-Job" "new" "job" "LOGPIXELSX" "desktop-dc" "GetDeviceCaps" "resolution" "file" "'file" "get-page-setup-for" "page-setup" "let*" "delete-existing" "filename" "choose-directory" "directory" "let" "view")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "platform" "windows.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.platform.windows" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "print-dialog" #f 55 20 55 32 ("PRINTDLG-free" "error" "throw-cancel" "=" "CommDlgExtendedError" "code" "DEVMODE-dmOrientation-ref" "PRINTDLG-nCopies-ref" "PRINTDLG-nToPage-ref" "PRINTDLG-nFromPage-ref" "PD_PAGENUMS" "PD_SELECTION" "PD_PRINTTOFILE" "mask-bit-set?" "PRINTDLG-hDC-ref" "values" "VOID*->DEVMODE" "devmode" "GlobalLock" "pointer" "PRINTDLG-hDevMode-ref" "handle" "PRINTDLG-Flags-ref" "flags" "let*" "PrintDlg" "if" "prog1" "10" "PRINTDLG-nMaxPage-set!" "1" "PRINTDLG-nMinPage-set!" "PRINTDLG-nToPage-set!" "0" "PRINTDLG-nFromPage-set!" "PD_RETURNDC" "PD_USEDEVMODECOPIESANDCOLLATE" "PD_NOSELECTION" "PD_HIDEPRINTTOFILE" "bitwise-ior" "PRINTDLG-Flags-set!" "get-application" "get-toplevel" "get-handle" "PRINTDLG-hwndOwner-set!" "PRINTDLG-sizeof" "PRINTDLG-lStructSize-set!" "PRINTDLG-make" "rec" "let" "close-all-popups" "rest")}
      {Lisp-Entry "page-setup-dialog" #f 78 20 78 37 ("DEVMODE-free" "PAGESETUPDLG-free" "error" "throw-cancel" "=" "CommDlgExtendedError" "code" "GlobalUnlock" "DEVMODE-dmDefaultSource-ref" "DEVMODE-dmPaperSize-ref" "DEVMODE-dmOrientation-ref" "PAGESETUPDLG-rtMinMargin-ref" "RECT->rect" "PAGESETUPDLG-ptPaperSize-ref" "POINT->dimension" "values" "VOID*->DEVMODE" "GlobalLock" "pointer" "PAGESETUPDLG-hDevMode-ref" "handle" "let*" "PageSetupDlg" "prog1" "get-bottom" "RECT-bottom-set!" "get-right" "RECT-right-set!" "get-top" "RECT-top-set!" "get-left" "PAGESETUPDLG-rtMargin-ref" "RECT-left-set!" "when" "PSD_DISABLEPRINTER" "0" "PSD_MARGINS" "if" "PSD_INTHOUSANDTHSOFINCHES" "PAGESETUPDLG-Flags-set!" "DEVMODE->HANDLE" "PAGESETUPDLG-hDevMode-set!" "get-application" "get-toplevel" "get-handle" "PAGESETUPDLG-hwndOwner-set!" "PAGESETUPDLG-sizeof" "PAGESETUPDLG-lStructSize-set!" "DM_DEFAULTSOURCE" "DM_PAPERSIZE" "DM_ORIENTATION" "bitwise-ior" "DEVMODE-dmFields-set!" "DEVMODE-dmDefaultSource-set!" "DEVMODE-dmPaperSize-set!" "DEVMODE-dmOrientation-set!" "DEVMODE-sizeof" "DEVMODE-dmSize-set!" "DEVMODE-make" "devmode" "PAGESETUPDLG-make" "rec" "let" "close-all-popups" "paper-source" "paper-source:" "paper-size" "paper-size:" "orientation" "orientation:" "margins" "margins:")}
      {Lisp-Entry "choose-file" #f 122 20 122 31 ("WCHAR-array-free" "OPENFILENAME-free" "error" "throw-cancel" "CommDlgExtendedError" "code" "append" "map" "dirlist" "dir" "bind" "list" "1" "length" "=" "parse-choose-file-string" "tokens" "tokenise-windows" "File" "new" "WCHAR-string" "filename" "not" "begin" "GetOpenFileName" "prog1" "pathname" "function" "anchorize" "OPENFILENAME-lpfnHook-set!" "OPENFILENAME-lCustData-set!" "OPENFILENAME-lpstrDefExt-set!" "OFN_ENABLESIZING" "OFN_FILEMUSTEXIST" "OFN_ENABLEHOOK" "OFN_HIDEREADONLY" "OFN_ALLOWMULTISELECT" "OFN_EXPLORER" "bitwise-ior" "OPENFILENAME-Flags-set!" "either" "OPENFILENAME-lpstrTitle-set!" "parse" "OPENFILENAME-lpstrInitialDir-set!" "OPENFILENAME-nMaxFile-set!" "OPENFILENAME-lpstrFile-set!" "OPENFILENAME-lpstrFilter-set!" "get-handle" "get-toplevel" "toplevel" "OPENFILENAME-hwndOwner-set!" "OPENFILENAME-sizeof" "OPENFILENAME-lStructSize-set!" "get-dialog-proc" "fake-dialog-proc" "get-current-directory" "fake-current-directory" "NULL" "extensions-filter" "fake-extensions-filter" "0" "WCHAR-array-set!" "WCHAR-array-make" "buffer" "OPENFILENAME-make" "r" "with" "50" "64" "*" "MAX_PATH" "+" "size" "let" "host-title:" "File-Request" "Text-File-Request" "get-modal" "use-generic-dialogs?" "if" "text?" "text?:" "anchors" "anchors:" "multiple-selection?" "multiple-selection?:" "extensions" "extensions:" "filenames" "filenames:" "directory" "directory:" "title" "title:")}
      {Lisp-Entry "map-WCHAR-array" #f 185 13 185 28 ("0" "naturals" "WCHAR-array-ref" "char" "let" "n" "function" "map" "size" "buffer")}
      {Lisp-Entry "choose-new-file" #f 192 20 192 35 ("WCHAR-array-free" "OPENFILENAME-free" "error" "throw-cancel" "=" "CommDlgExtendedError" "code" "tokenise-windows" "File" "new" "anchorize" "after-GetSaveFileName" "'after-GetSaveFileName" "WCHAR-string" "filename" "GetSaveFileName" "prog1" "map-WCHAR-array" "before-GetSaveFileName" "'before-GetSaveFileName" "debug" "OPENFILENAME-lpfnHook-set!" "OPENFILENAME-lCustData-set!" "either" "OPENFILENAME-lpstrDefExt-set!" "OFN_OVERWRITEPROMPT" "OFN_ENABLESIZING" "OFN_FILEMUSTEXIST" "OFN_ENABLEHOOK" "OFN_EXPLORER" "bitwise-ior" "OPENFILENAME-Flags-set!" "parse" "OPENFILENAME-lpstrInitialDir-set!" "OPENFILENAME-nMaxFile-set!" "OPENFILENAME-lpstrFile-set!" "OPENFILENAME-lpstrFilter-set!" "get-handle" "get-toplevel" "toplevel" "OPENFILENAME-hwndOwner-set!" "OPENFILENAME-sizeof" "OPENFILENAME-lStructSize-set!" "get-dialog-proc" "fake-dialog-proc" "get-current-directory" "fake-current-directory" "NULL" "extensions-filter" "fake-extensions-filter" "let" "WCHAR-copy" "0" "WCHAR-array-set!" "not" "MAX_PATH" "WCHAR-array-make" "buffer" "OPENFILENAME-make" "r" "with" "create-directories" "when" "host-title:" "NewFile-Request" "get-modal" "use-generic-dialogs?" "if" "anchors" "anchors:" "default-extension" "default-extension:" "initial-filename" "initial-filename:" "extensions" "extensions:" "filenames" "filenames:" "directory" "directory:" "title" "title:")}
      {Lisp-Entry "choose-directory" #f 248 20 248 36 ("tokenise-windows" "Directory" "new" "anchorize" "WCHAR-string" "throw-cancel" "not" "SHBrowseForFolder" "items" "BROWSEINFO-iImage-set!" "BROWSEINFO-lParam-set!" "get-browse-callback" "BROWSEINFO-lpfn-set!" "BROWSEINFO-ulFlags-set!" "either" "BROWSEINFO-lpszTitle-set!" "BROWSEINFO-pszDisplayName-set!" "BROWSEINFO-pidlRoot-set!" "NULL" "get-handle" "get-toplevel" "toplevel" "BROWSEINFO-hwndOwner-set!" "0" "WCHAR-array-set!" "MAX_PATH" "WCHAR-array-make" "buffer" "BROWSEINFO-make" "r" "with" "set-current-directory" "when" "get-current-directory" "preserved" "let" "host-title:" "Directory-Request" "get-modal" "use-generic-dialogs?" "if" "anchors" "anchors:" "directory" "directory:" "title" "title:")}
      {Lisp-Entry "parse-choose-file-string" #f 286 13 286 37 ("1" "+" "loop" "WCHAR-subarray" "WCHAR-string" "cons" "if" "WCHAR-array-ref" "eq?" "end-of-string?" "start-of-string?" "0" "offset" "iterate" "let" "buffer")}
      {Lisp-Entry "extensions-filter" #f 300 20 300 37 ("get-output" "join" "cdr" "car" "put" "ext" "function" "for-each" "1" "make-string" "separator" "List-Factory" "new" "dst" "let" "not" "if" "NULL" "extensions")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "clipboard" "platform" "windows.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.clipboard.platform.windows" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "initialize-clipboard" #f 44 20 44 40 ()}
      {Lisp-Entry "get-clipboard-text" #f 53 20 53 38 ("read-line" "input" "cr-lf" "'cr-lf" "eol-encoding:" "UCS-2" "'UCS-2" "char-encoding:" "init:" "list" "call-with-input-u8vector" "u8vector?" "not" "if" "get-clipboard-format" "GetClipboardText" "u8vect" "let" "function" "with-opened-clipboard" "CF_UNICODETEXT" "format" "format:")}
      {Lisp-Entry "set-clipboard-text" #f 64 20 64 38 ("empty?:" "get-clipboard-format" "SetClipboardText" "get-output-u8vector" "u8vect" "display" "cr-lf" "'cr-lf" "eol-encoding:" "UCS-2" "'UCS-2" "char-encoding:" "list" "open-output-u8vector" "output" "let" "function" "with-opened-clipboard" "CF_UNICODETEXT" "format" "format:" "text")}
      {Lisp-Entry "mouse-select-copy" #f 79 20 79 37 ("proc")}
      {Lisp-Entry "middle-mouse-paste" #f 83 20 83 38 ("proc")}
      {Lisp-Entry "get-clipboard-metafile" #f 92 20 92 42 ("CF_ENHMETAFILE" "GetClipboardData" "function" "with-opened-clipboard" "get-clipboard-metafile" "'get-clipboard-metafile" "unimplemented")}
      {Lisp-Entry "set-clipboard-metafile" #f 100 20 100 42 ("empty?:" "CF_ENHMETAFILE" "SetClipboardData" "function" "with-opened-clipboard" "set-clipboard-metafile" "'set-clipboard-metafile" "unimplemented" "metafile")}
      {Lisp-Entry "with-opened-clipboard" #f 114 20 114 41 ("CloseClipboard" "EmptyClipboard" "when" "set!" "NULL" "OpenClipboard" "begin" "unwind-protect" "opened?" "let" "empty?" "empty?:" "proc")}
      {Lisp-Entry "Formats" #f 132 12 132 19 ("eq?" "test:" "make-table")}
      {Lisp-Entry "register-clipboard-format" #f 136 20 136 45 ("Formats" "table-set!" "RegisterClipboardFormat" "id" "let" "format" "name")}
      {Lisp-Entry "get-clipboard-format" #f 141 13 141 33 ("error" "Formats" "table-ref" "either" "integer?" "if" "format")}
      {Lisp-Entry "clipboard-format-available?" #f 148 20 148 47 ("available-clipboard-formats" "get-clipboard-format" "member?" "format")}
      {Lisp-Entry "available-clipboard-formats" #f 152 20 152 47 ("get-output" "put" "/=" "when" "EnumClipboardFormats" "format" "0" "previous" "iter" "List-Factory" "new" "formats" "let" "function" "with-opened-clipboard")}}})
"x11"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "window" "platform" "x11.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.window.platform.x11" #f 38 19 38 46 ("jazz")
      {Lisp-Entry "unprocessed" #f 55 19 55 30 ("unprocessed")}
      {Lisp-Entry "processed" #f 56 19 56 28 ("processed")}
      {Lisp-Entry "processed-result" #f 59 13 59 29 ("cadr" "0" "cdr" "null?" "processed" "'processed" "car" "eq?" "pair?" "and" "if" "return")}
      {Lisp-Entry "*locked-update*" #f 67 12 67 27 ()}
      {Lisp-Entry "alt-key" #f 72 17 72 24 ("Mod2Mask")}
      {Lisp-Entry "alt-key" #f 75 17 75 24 ("Mod1Mask")}
      {Lisp-Entry "Symbolic-Keys" #f 79 19 79 32 ("Mode" "'Mode" "XK_Mode_switch" "Divide" "'Divide" "XK_KP_Divide" "Multiply" "'Multiply" "XK_KP_Decimal" "Subtract" "'Subtract" "XK_KP_Subtract" "Add" "'Add" "XK_KP_Add" "Delete" "'Delete" "XK_Delete" "Pause" "'Pause" "XK_Pause" "Insert" "'Insert" "XK_Insert" "Next" "'Next" "XK_Next" "Prior" "'Prior" "XK_Prior" "Down" "'Down" "XK_Down" "Right" "'Right" "XK_Right" "Up" "'Up" "XK_Up" "Left" "'Left" "XK_Left" "End" "'End" "XK_End" "Home" "'Home" "XK_Home" "Tab" "'Tab" "XK_Tab" "Space" "'Space" "XK_space" "XK_KP_Enter" "Return" "'Return" "XK_Return" "XK_grave" "XK_underscore" "XK_asciicircum" "XK_bar" "XK_braceright" "XK_braceleft" "XK_at" "XK_question" "XK_asterisk" "XK_parenright" "XK_parenleft" "XK_ampersand" "XK_percent" "XK_dollar" "XK_numbersign" "XK_quotedbl" "XK_exclam" "XK_apostrophe" "XK_bracketright" "XK_backslash" "XK_bracketleft" "XK_asciitilde" "XK_slash" "XK_greater" "XK_equal" "XK_less" "XK_semicolon" "XK_colon" "XK_period" "XK_comma" "XK_plus" "XK_minus" "Backspace" "'Backspace" "XK_BackSpace" "Escape" "'Escape" "XK_Escape" "F12" "'F12" "XK_F12" "F11" "'F11" "XK_F11" "F10" "'F10" "XK_F10" "F9" "'F9" "XK_F9" "F8" "'F8" "XK_F8" "F7" "'F7" "XK_F7" "F6" "'F6" "XK_F6" "F5" "'F5" "XK_F5" "F4" "'F4" "XK_F4" "F3" "'F3" "XK_F3" "F2" "'F2" "XK_F2" "F1" "'F1" "XK_F1" "XK_9" "XK_8" "XK_7" "XK_6" "XK_5" "XK_4" "XK_3" "XK_2" "XK_1" "XK_0" "XK_Z" "XK_Y" "XK_X" "XK_W" "XK_V" "XK_U" "XK_T" "XK_S" "XK_R" "XK_Q" "XK_P" "XK_O" "XK_N" "XK_M" "XK_L" "XK_K" "XK_J" "XK_I" "XK_H" "XK_G" "XK_F" "XK_E" "XK_D" "XK_C" "XK_B" "XK_A" "XK_z" "XK_y" "XK_x" "XK_w" "XK_v" "XK_u" "XK_t" "XK_s" "XK_r" "XK_q" "XK_p" "XK_o" "XK_n" "XK_m" "XK_l" "XK_k" "XK_j" "XK_i" "XK_h" "XK_g" "XK_f" "XK_e" "XK_d" "XK_c" "XK_b" "XK_a" "cons" "list")}
      {Lisp-Entry "Windows-Table" #f 216 19 216 32 ("eqv?" "test:" "make-table")}
      {Lisp-Entry "Window-Title-Table" #f 220 19 220 37 ("eqv?" "test:" "make-table")}
      {Lisp-Entry "XIC-Table" #f 224 19 224 28 ("eqv?" "test:" "make-table")}
      {Lisp-Entry "last-click" #f 228 12 228 22 ("current-time" "time->seconds")}
      {Lisp-Entry "get-window" #f 232 27 232 37 ("Windows-Table" "table-ref" "handle")}
      {Lisp-Entry "set-window" #f 236 27 236 37 ("Windows-Table" "table-set!" "window" "handle")}
      {Lisp-Entry "get-xic" #f 240 27 240 34 ("XIC-Table" "table-ref" "handle")}
      {Lisp-Entry "set-xic" #f 244 27 244 34 ("XIC-Table" "table-set!" "xic" "handle")}
      {Lisp-Entry "clear-xic" #f 248 27 248 36 ("XIC-Table" "table-set!" "handle")}
      {Lisp-Entry "platform-get-window-handle-title" #f 252 20 252 52 ("Window-Title-Table" "table-ref" "handle")}
      {Lisp-Entry "set-window-title" #f 256 20 256 36 ("default-x11-display" "XSetWMName" "Window-Title-Table" "table-set!" "title" "handle")}
      {Lisp-Entry "window-parent" #f 261 13 261 26 ("XDefaultScreen" "default-x11-display" "XRootWindow" "get-handle" "if" "get-parent" "parent" "let" "window")}
      {Lisp-Entry "window-default-parent" #f 268 13 268 34 ("else" "get-stage" "Frame" "typecase" "window")}
      {Lisp-Entry "prepare-handle" #f 274 13 274 27 ("error" "not" "if" "create-handle" "let" "others" "handle" "bind-keywords" "rest" "window")}
      {Lisp-Entry "create-handle" #f 282 13 282 26 ("create-xic" "set-xic" "KeyPressMask" "PointerMotionMask" "ExposureMask" "StructureNotifyMask" "ButtonPressMask" "ButtonReleaseMask" "FocusChangeMask" "XSelectInput" "WM_DELETE_WINDOW" "get-default-x11-display" "XSetWMProtocols" "XdndVersion" "XdndAware" "get-handle" "XSetTransientForHint" "get-toplevel" "_NET_WM_STATE_FULLSCREEN" "wm-change-state" "set-modal" "when" "else" "_NET_WM_WINDOW_TYPE_DIALOG" "Dialog" "_NET_WM_WINDOW_TYPE_TOOLTIP" "Tooltip" "_NET_WM_WINDOW_TYPE_NORMAL" "Menu-Transient" "cond" "u32vector" "PropModeReplace" "XA_ATOM" "_NET_WM_WINDOW_TYPE" "ChangeProperty" "CWBackPixel" "CWOverrideRedirect" "CWBitGravity" "+" "InputOutput" "CopyFromParent" "500" "0" "XCreateWindow" "handle" "let" "platform-get-desktop" "Desktop" "if" "216" "233" "236" "rgb-pixel" "XSetWindowAttributes-background_pixel-set!" "Popup" "is?" "XSetWindowAttributes-override_redirect-set!" "StaticGravity" "XSetWindowAttributes-bit_gravity-set!" "XDefaultVisual" "visual" "XSetWindowAttributes-make" "attr" "window-parent" "parent" "XScreenOfDisplay" "screen" "default-x11-display" "XDefaultScreen" "screen-no" "let*" "rest" "window")}
      {Lisp-Entry "wm-change-state" #f 332 13 332 28 ("XEvent-free" "SubstructureNotifyMask" "SubstructureRedirectMask" "bitwise-ior" "XDefaultScreen" "XRootWindow" "XSendEvent" "terminal" "4" "3" "2" "1" "_NET_WM_STATE_ADD" "0" "long*-set!" "XClientMessageEvent-l-ref" "l" "let" "32" "XClientMessageEvent-format-set!" "_NET_WM_STATE" "XClientMessageEvent-message_type-set!" "XClientMessageEvent-window-set!" "ClientMessage" "XClientMessageEvent-type-set!" "XEvent-xclient-ref" "ev" "XEvent-make" "msg" "let*" "atom" "handle" "display")}
      {Lisp-Entry "destroy-window" #f 354 13 354 27 ("default-x11-display" "XDestroyWindow" "get-handle" "platform-set-focus" "get-parent" "parent" "focus-lose" "platform-get-focus" "=" "when" "clear-xic" "expose-store" "table-set!" "get-window" "window" "let" "handle")}
      {Lisp-Entry "dispatch-message" #f 365 13 365 29 ("process-window-message" "msg" "window")}
      {Lisp-Entry "show-window" #f 369 13 369 24 ("default-x11-display" "XMapWindow" "handle")}
      {Lisp-Entry "show-maximized" #f 373 13 373 27 ("show-window" "rect-size" "platform-set-window-size" "get-work-area" "rect-position" "platform-set-position" "handle")}
      {Lisp-Entry "show-restored" #f 379 13 379 26 ("show-window" "handle")}
      {Lisp-Entry "hide-window" #f 383 13 383 24 ("default-x11-display" "XUnmapWindow" "handle")}
      {Lisp-Entry "bring-window-to-top" #f 387 13 387 32 ("default-x11-display" "XRaiseWindow" "handle")}
      {Lisp-Entry "minimize-window" #f 391 13 391 28 ("minimize-window" "'minimize-window" "unimplemented" "handle")}
      {Lisp-Entry "maximize-window" #f 395 13 395 28 ("maximize-window" "'maximize-window" "unimplemented" "handle")}
      {Lisp-Entry "restore-window" #f 399 13 399 27 ("restore-window" "'restore-window" "unimplemented" "handle")}
      {Lisp-Entry "platform-erase-background" #f 403 13 403 38 ("platform-erase-background" "'platform-erase-background" "unimplemented" "handle")}
      {Lisp-Entry "setup-events" #f 412 13 412 25 ()}
      {Lisp-Entry "expose-store" #f 416 12 416 24 ("make-table")}
      {Lisp-Entry "process-message" #f 419 13 419 28 ("dispatch-message" "when" "get-window" "window" "let" "XAnyEvent-window-ref" "handle" "XEvent-xany-ref" "any-event" "let*" "function" "execute-event" "msg")}
      {Lisp-Entry "process-expose" #f 429 13 429 27 ("paint" "when" "table-set!" "region" "win" "expose-store" "iterate-table" "function" "execute-event")}
      {Lisp-Entry "prime-message-pump" #f 439 13 439 31 ("message-pump" "'message-pump" "process-messages" "function" "new-thread")}
      {Lisp-Entry "process-messages" #f 445 13 445 29 ("current-thread" "thread-loop?" "process-expose" "XPending" "0" "=" "when" "process-message" "default-x11-display" "XNextEvent" "loop" "let" "XEvent-make" "msg" "with" "proper-tail-calls" "declare")}
      {Lisp-Entry "process-messages-single-threaded" #f 457 13 457 45 ("free-fdset" "XEvent-free" "current-thread" "thread-loop?" "process-expose" "when" "process-message" "XNextEvent" "0.01" "thread-sleep!" "default-x11-display" "XPending" "=" "if" "1000" "0" "1" "+" "select" "process-inval-rects" "loop" "let" "setup-fdset" "fdset" "get-default-x11-display" "ConnectionNumber" "display-fd" "XEvent-make" "msg" "with" "proper-tail-calls" "declare" "thunk")}
      {Lisp-Entry "process-window-message" #f 483 13 483 35 ("unprocessed" "else" "process-client-message-message" "ClientMessage" "process-selection-request-message" "SelectionRequest" "process-configure-notify-message" "ConfigureNotify" "process-key-press-message" "KeyPress" "process-motion-notify-message" "MotionNotify" "process-focus-out-message" "FocusOut" "process-focus-in-message" "FocusIn" "process-button-release-message" "ButtonRelease" "process-button-press-message" "ButtonPress" "process-expose-message" "Expose" "XEvent-type-ref" "ecase" "msg" "window")}
      {Lisp-Entry "process-expose-message" #f 498 13 498 35 ("processed" "rect-union" "table-set!" "if" "0" "nu=?" "unless" "expose-store" "table-ref" "old-region" "Rect" "new" "region" "XExposeEvent-height-ref" "bottom" "XExposeEvent-width-ref" "+" "right" "XExposeEvent-y-ref" "top" "XExposeEvent-x-ref" "left" "XEvent-xexpose-ref" "let*" "msg" "window")}
      {Lisp-Entry "process-button-press-message" #f 513 13 513 41 ("-120" "Button7" "Button5" "120" "mouse-wheel" "Button6" "Button4" "or" "get-v" "get-h" "call-context-menu" "Point" "new" "get-handle" "platform-get-desktop" "acquire-point" "pt" "right-mouse-down" "Button3" "middle-mouse-down" "Button2" "mouse-down" "0" "set!" "double-click" "begin" "0.2" "last-click" "-" "<" "if" "current-time" "time->seconds" "click" "let" "Button1" "=" "cond" "x11-set-timestamp" "XButtonEvent-time-ref" "stamp" "XButtonEvent-button-ref" "button" "XButtonEvent-y-ref" "v" "XButtonEvent-x-ref" "h" "XEvent-xbutton-ref" "let*" "msg" "window")}
      {Lisp-Entry "process-button-release-message" #f 540 13 540 43 ("right-mouse-up" "Button3" "middle-mouse-up" "Button2" "mouse-up" "Button1" "=" "cond" "x11-set-timestamp" "XButtonEvent-time-ref" "stamp" "XButtonEvent-button-ref" "button" "XButtonEvent-y-ref" "v" "XButtonEvent-x-ref" "h" "XEvent-xbutton-ref" "let*" "msg" "window")}
      {Lisp-Entry "process-focus-in-message" #f 555 13 555 37 ("1" "activate-app" "focus-gain" "NotifyNonlinear" "NotifyInferior" "NotifyAncestor" "=" "or" "when" "XFocusChangeEvent-detail-ref" "detail" "XEvent-xfocus-ref" "let*" "msg" "window")}
      {Lisp-Entry "process-focus-out-message" #f 565 13 565 38 ("focus-lose" "NotifyNonlinear" "NotifyInferior" "NotifyAncestor" "=" "or" "when" "XFocusChangeEvent-detail-ref" "detail" "XEvent-xfocus-ref" "let*" "msg" "window")}
      {Lisp-Entry "process-motion-notify-message" #f 574 13 574 42 ("process-expose" "mouse-move" "XMotionEvent-y-ref" "v" "XMotionEvent-x-ref" "h" "XEvent-xmotion-ref" "let*" "MotionNotify" "default-x11-display" "XCheckTypedEvent" "when" "loop" "let" "msg" "window")}
      {Lisp-Entry "process-key-press-message" #f 585 13 585 38 ("unprocessed" "call-key-press" "c" "function" "iterate" "if" "get-handle" "get-xic" "Xutf8LookupString" "str" "sym" "receive" "None" "XFilterEvent" "translate-shortcut" "or" "unless" ":alt" "alt-key" ":control" "ControlMask" ":shift" "cons" "set!" "ShiftMask" "bit-set?" "when" "x11-set-timestamp" "XKeyEvent-time-ref" "stamp" "mod" "XKeyEvent-state-ref" "state" "0" "integer->char" "default-x11-display" "XKeycodeToKeysym" "keysym" "XKeyEvent-keycode-ref" "keycode" "XEvent-xkey-ref" "key-msg" "let*" "msg" "window")}
      {Lisp-Entry "process-configure-notify-message" #f 607 13 607 45 ("call-position-change" "call-size-change" "XConfigureEvent-y-ref" "y" "XConfigureEvent-x-ref" "x" "XConfigureEvent-height-ref" "height" "XConfigureEvent-width-ref" "width" "XEvent-xconfigure-ref" "let*" "msg" "window")}
      {Lisp-Entry "process-selection-request-message" #f 617 13 617 46 ("get-handle" "default-x11-display" "XSendClipboardSelection" "XSelectionRequestEvent-time-ref" "time" "XSelectionRequestEvent-property-ref" "property" "XSelectionRequestEvent-target-ref" "target" "XSelectionRequestEvent-selection-ref" "selection" "XSelectionRequestEvent-requestor-ref" "requestor" "XEvent-xselectionrequest-ref" "let*" "msg" "window")}
      {Lisp-Entry "process-client-message-message" #f 627 13 627 43 ("process-xdnd-leave" "XdndLeave" "process-xdnd-drop" "XdndDrop" "process-xdnd-position" "XdndPosition" "process-xdnd-enter" "XdndEnter" "process-wm-protocols" "WM_PROTOCOLS" "equal?" "cond" "XClientMessageEvent-message_type-ref" "type" "XEvent-xclient-ref" "let*" "msg" "window")}
      {Lisp-Entry "process-wm-protocols" #f 642 13 642 33 ("on-close" "WM_DELETE_WINDOW" "equal?" "cond" "0" "long*-ref" "protocol" "XClientMessageEvent-l-ref" "data" "let*" "msg" "window")}
      {Lisp-Entry "DndSource" #f 649 12 649 21 ()}
      {Lisp-Entry "DndAccept?" #f 650 12 650 22 ()}
      {Lisp-Entry "DndPosition" #f 651 12 651 23 ()}
      {Lisp-Entry "Dnd-type-supported?" #f 654 13 654 32 ("1" "+" "ulong*-ref" "equal?" "=" "if" "0" "i" "loop" "let" "size" "typelist" "type")}
      {Lisp-Entry "process-xdnd-enter" #f 663 13 663 31 ("text/uri-list" "Dnd-type-supported?" "DndAccept?" "uint8*->ulong*" "let" "XA_ATOM" "100000" "XdndTypeList" "default-x11-display" "XGetWindowProperty" "prop_return" "bytes_after_return" "nitems_return" "actual_format_return" "actual_type_return" "receive" "set!" "DndSource" "XdndVersion" ">" "or" "unless" "#x00000001" "=" "typelist?" "-24" "#xff000000" "1" "bitwise-and" "arithmetic-shift" "version" "0" "long*-ref" "source" "XClientMessageEvent-l-ref" "data" "let*" "msg" "window")}
      {Lisp-Entry "process-xdnd-position" #f 675 13 675 34 ("XEvent-free" "default-x11-display" "XSendEvent" "None" "XdndActionCopy" "4" "3" "#x00000000" "#x00000001" "DndAccept?" "#x00000002" "bitwise-ior" "1" "get-handle" "long*-set!" "32" "XClientMessageEvent-format-set!" "XdndStatus" "XClientMessageEvent-message_type-set!" "XClientMessageEvent-window-set!" "ClientMessage" "XClientMessageEvent-type-set!" "l" "XEvent-xclient-ref" "mess" "XEvent-make" "ev" "#x0000ffff" "-16" "#xffff0000" "bitwise-and" "arithmetic-shift" "Point" "new" "DndPosition" "set!" "begin" "DndSource" "equal?" "if" "2" "position" "0" "long*-ref" "source" "XClientMessageEvent-l-ref" "data" "let*" "msg" "window")}
      {Lisp-Entry "process-xdnd-drop" #f 698 13 698 30 ("XEvent-free" "XSendEvent" "XdndActionCopy" "#x00000001" "1" "long*-set!" "32" "XClientMessageEvent-format-set!" "XdndFinished" "XClientMessageEvent-message_type-set!" "XClientMessageEvent-window-set!" "XClientMessageEvent-display-set!" "ClientMessage" "XClientMessageEvent-type-set!" "l" "XEvent-xclient-ref" "mess" "XEvent-make" "ev" "h" "DndAccept?" "set!" "DndPosition" "platform-get-desktop" "acquire-point" "receive-files" "XFree" "uint8*->char-string" "tokenise-windows" "File" "else" "Directory" "directory" "cadr" "pathname-type" "case" "new" "car" "split" "splitted" "not" "and" "x" "function" "collect" "files" "let" "text/uri-list" "XdndSelection" "get-handle" "default-x11-display" "XRetrieveSelection" "prop_return" "bytes_after_return" "nitems_return" "actual_format_return" "actual_type_return" "receive" "DndSource" "equal?" "when" "2" "stamp" "0" "long*-ref" "source" "XClientMessageEvent-l-ref" "data" "let*" "msg" "window")}
      {Lisp-Entry "process-xdnd-leave" #f 730 13 730 31 ("DndPosition" "DndAccept?" "set!" "DndSource" "equal?" "when" "0" "long*-ref" "source" "XClientMessageEvent-l-ref" "data" "let*" "msg" "window")}
      {Lisp-Entry "translate-shortcut" #f 739 13 739 31 ("Shortcut" "new" "dispatch-shortcut" "and" "if" "get-application" "app" "Symbolic-Keys" "assv-value" "key" "let" "keysym" "mods")}
      {Lisp-Entry "get-toplevel" #f 752 13 752 25 ("get-toplevel" "when" "get-application" "appl" "let")}
      {Lisp-Entry "get-toplevel-hwnd" #f 758 13 758 30 ("get-handle" "when" "get-toplevel" "toplevel" "let")}
      {Lisp-Entry "get-stage" #f 769 13 769 22 ("get-stage" "when" "get-application" "appl" "let")}
      {Lisp-Entry "set-capture" #f 780 13 780 24 ("handle")}
      {Lisp-Entry "unset-capture" #f 785 13 785 26 ()}
      {Lisp-Entry "with-platform-painting" #f 795 13 795 35 ("processed" "close" "unwind-protect" "get-height" "get-width" "get-handle" "cairo_xlib_surface_create" "Surface" "new" "surface" "with" "XDefaultVisual" "visual" "default-x11-display" "XDefaultScreen" "screen-no" "let*" "proc" "platform-data" "window")}
      {Lisp-Entry "get-window-surface" #f 805 20 805 38 ("get-height" "get-width" "get-handle" "cairo_xlib_surface_create" "XDefaultVisual" "visual" "default-x11-display" "XDefaultScreen" "screen-no" "let*" "window")}
      {Lisp-Entry "set-alpha-blending" #f 811 13 811 31 ("RDW_INVALIDATE" "RDW_ERASE" "bitwise-ior" "NULL" "RedrawWindow" "LWA_ALPHA" "0" "SetLayeredWindowAttributes" "set-layered?" "n" "handle")}
      {Lisp-Entry "platform-set-parent" #f 824 13 824 32 ("0" "get-handle" "default-x11-display" "XReparentWindow" "parent" "handle")}
      {Lisp-Entry "platform-get-first-child" #f 828 13 828 37 ("XGetChildHandle" "0" "=" "if" "default-x11-display" "XNumberOfChildren" "num-of-children" "let" "handle")}
      {Lisp-Entry "platform-get-first-visible-child" #f 835 13 835 45 ("1" "+" "platform-is-window-visible?" "XGetChildHandle" "child-handle" "n" "loop" "0" "=" "if" "default-x11-display" "XNumberOfChildren" "num-of-children" "let" "handle")}
      {Lisp-Entry "platform-is-window-visible?" #f 848 13 848 40 ("XWindowAttributes-free" "IsViewable" "XWindowAttributes-map_state-ref" "=" "prog1" "default-x11-display" "XGetWindowAttributes" "XWindowAttributes-make" "infos" "let" "handle")}
      {Lisp-Entry "acquire-point" #f 855 13 855 26 ("Point" "new" "get-v" "get-h" "default-x11-display" "XTranslateCoordinates" "y" "x" "receive" "shape" "from-handle" "to-handle")}
      {Lisp-Entry "acquire-rect" #f 860 13 860 25 ("corners->rect" "get-bottom" "get-right" "right-bottom" "get-top" "get-left" "Point" "new" "acquire-point" "left-top" "let" "shape" "from-handle" "to-handle")}
      {Lisp-Entry "platform-translate-to-root" #f 866 13 866 39 ("Point" "new" "get-v" "get-h" "XDefaultScreen" "XRootWindow" "default-x11-display" "XTranslateCoordinates" "y" "x" "receive" "pt" "handle")}
      {Lisp-Entry "platform-get-position-in-root" #f 871 13 871 42 ("platform-translate-to-root" "platform-get-position" "pt" "let" "handle")}
      {Lisp-Entry "platform-get-position" #f 876 13 876 34 ("Point" "new" "XWindowAttributes-free" "XWindowAttributes-y-ref" "y" "XWindowAttributes-x-ref" "x" "let*" "default-x11-display" "XGetWindowAttributes" "XWindowAttributes-make" "infos" "let" "parent-handle" "handle")}
      {Lisp-Entry "platform-set-position" #f 885 13 885 34 ("XEvent-free" "process-message" "StructureNotifyMask" "XWindowEvent" "get-v" "get-h" "default-x11-display" "XMoveWindow" "XEvent-make" "event" "let" "pos" "handle")}
      {Lisp-Entry "platform-get-size" #f 893 13 893 30 ("Dimension" "new" "XWindowAttributes-free" "XWindowAttributes-height-ref" "height" "XWindowAttributes-width-ref" "width" "let" "default-x11-display" "XGetWindowAttributes" "XWindowAttributes-make" "infos" "with" "handle")}
      {Lisp-Entry "platform-get-window-size" #f 902 13 902 37 ("platform-get-size" "handle")}
      {Lisp-Entry "platform-set-window-size" #f 906 13 906 37 ("XEvent-free" "process-message" "StructureNotifyMask" "XWindowEvent" "get-height" "get-width" "default-x11-display" "XResizeWindow" "XEvent-make" "event" "let" "size" "handle")}
      {Lisp-Entry "platform-set-bounds" #f 914 13 914 32 ("SWP_NOACTIVATE" "SWP_NOZORDER" "bitwise-ior" "rect-height" "rect-width" "get-top" "get-left" "NULL" "SetWindowPos" "platform-set-bounds" "'platform-set-bounds" "unimplemented" "rect" "handle")}
      {Lisp-Entry "platform-get-rect" #f 920 13 920 30 ("Rect" "new" "get-height" "b" "get-width" "+" "r" "get-v" "t" "get-h" "l" "let*" "platform-get-size" "size" "platform-get-position" "position" "let" "parent-handle" "handle")}
      {Lisp-Entry "platform-get-bounds" #f 930 13 930 32 ("RECT-bottom-ref" "RECT-right-ref" "RECT-top-ref" "RECT-left-ref" "Rect" "new" "2" "NULL" "MapWindowPoints" "GetWindowRect" "RECT-make" "rect" "with" "platform-get-bounds" "'platform-get-bounds" "unimplemented" "handle")}
      {Lisp-Entry "platform-mouse-position" #f 939 13 939 36 ("Point" "new" "XDefaultScreen" "XRootWindow" "default-x11-display" "XMousePosition" "y" "x" "receive")}
      {Lisp-Entry "platform-window-from-point" #f 944 13 944 39 ("XDefaultScreen" "XRootWindow" "default-x11-display" "XMouseWindow" "get-window" "point")}
      {Lisp-Entry "platform-move-window" #f 948 13 948 33 ("MoveWindow" "platform-move-window" "'platform-move-window" "unimplemented" "cy" "cx" "y" "x" "handle")}
      {Lisp-Entry "platform-window-enabled?" #f 954 13 954 37 ("IsWindowEnabled" "platform-window-enabled?" "'platform-window-enabled?" "unimplemented" "handle")}
      {Lisp-Entry "platform-enable-window" #f 960 13 960 35 ("handle")}
      {Lisp-Entry "platform-disable-window" #f 965 13 965 36 ("handle")}
      {Lisp-Entry "platform-get-client-rect" #f 970 13 970 37 ("0" "Rect" "new" "XWindowAttributes-free" "XWindowAttributes-height-ref" "height" "XWindowAttributes-width-ref" "width" "default-x11-display" "XGetWindowAttributes" "XWindowAttributes-make" "infos" "let" "handle")}
      {Lisp-Entry "scroll-invalidate" #f 979 13 979 30 (">" "+" "Rect" "new" "platform-invalidate-rect" "0" "<" "when" "get-bottom" "mb" "get-right" "mr" "get-top" "mt" "get-left" "ml" "let" "rect-union" "modified-rect" "offset-rect" "dst-rect" "rect-intersection" "let*" "clip-rect" "src-rect" "dv" "dh" "handle")}
      {Lisp-Entry "platform-scroll-window" #f 998 13 998 35 ("platform-update-window" "scroll-invalidate" "XRectangle-free" "XFreeGC" "+" "XCopyArea" "1" "XSetClipRectangles" "get-top" "get-bottom" "XRectangle-height-set!" "get-left" "get-right" "-" "XRectangle-width-set!" "XRectangle-x-set!" "XRectangle-make" "xrect" "0" "default-x11-display" "XCreateGC" "gc" "let" "platform-invalidate-rect" "clip-rect" "rect" "dv" "dh" "handle")}
      {Lisp-Entry "inval-rects" #f 1015 12 1015 23 ("make-table")}
      {Lisp-Entry "validate-inval-rect" #f 1018 13 1018 32 ("new" "or" "h" "-" "w" "get-height" "get-bottom" "b" "get-width" "get-right" ">" "r" "get-top" "t" "get-left" "<" "l" "get-size" "size" "let" "0" "Rect" "=" "if" "window" "rect")}
      {Lisp-Entry "process-inval-rects" #f 1037 13 1037 32 ("default-x11-display" "XInvalidateRect" "h" "-" "w" "get-bottom" "b" "get-right" "r" "get-top" "t" "get-left" "l" "when" "get-window" "window" "let" "table-set!" "rect" "handle" "function" "inval-rects" "iterate-table")}
      {Lisp-Entry "platform-invalidate-rect" #f 1052 13 1052 37 ("rect-union" "cond" "table-set!" "or" "get-window" "validate-inval-rect" "new-rect" "inval-rects" "table-ref" "old-rect" "let" "and" "when" "rect" "handle")}
      {Lisp-Entry "platform-invalidate-region" #f 1066 13 1066 39 ("get-rectangles" "platform-invalidate-rect" "rect" "function" "for-each" "region" "handle")}
      {Lisp-Entry "platform-invalidate-window" #f 1072 13 1072 39 ("get-height" "get-width" "0" "Rect" "new" "platform-invalidate-rect" "platform-get-size" "size" "let" "handle")}
      {Lisp-Entry "platform-redraw-window" #f 1077 13 1077 35 ("get-rectangles" "get-window" "paint" "function" "for-each" "if" "region" "rect" "handle")}
      {Lisp-Entry "platform-get-update-rect" #f 1084 13 1084 37 ("RECT->rect" "GetUpdateRect" "RECT-make" "rect" "with" "platform-get-update-rect" "'platform-get-update-rect" "unimplemented" "handle")}
      {Lisp-Entry "platform-get-update-region" #f 1092 13 1092 39 ("get-handle" "GetUpdateRgn" "Region" "new" "region" "let" "platform-get-update-region" "'platform-get-update-region" "unimplemented" "handle")}
      {Lisp-Entry "platform-redraw-view-only" #f 1100 13 1100 38 ("platform-invalidate-rect" "get-height" "get-width" "0" "Rect" "new" "rct" "platform-get-size" "size" "let*" "redraw-view" "handle" "view")}
      {Lisp-Entry "platform-update-window" #f 1108 13 1108 35 ("get-window" "paint" "table-set!" "when" "inval-rects" "table-ref" "rect" "let" "handle")}
      {Lisp-Entry "platform-show-noactivate" #f 1115 13 1115 37 ("show-window" "handle")}
      {Lisp-Entry "platform-hide-noactivate" #f 1119 13 1119 37 ("hide-window" "handle")}
      {Lisp-Entry "platform-bring-window-to-front" #f 1123 13 1123 43 ("default-x11-display" "XRaiseWindow" "handle")}
      {Lisp-Entry "platform-send-window-to-back" #f 1127 13 1127 41 ("default-x11-display" "XLowerWindow" "handle")}
      {Lisp-Entry "platform-select-foreground-window" #f 1131 13 1131 46 ("default-x11-display" "XRaiseWindow" "handle")}
      {Lisp-Entry "platform-lock-window-update" #f 1140 13 1140 40 ("handle")}
      {Lisp-Entry "platform-get-focus" #f 1148 13 1148 31 ("default-x11-display" "XGetInputFocus" "state" "win" "receive")}
      {Lisp-Entry "platform-set-focus" #f 1153 13 1153 31 ("CurrentTime" "RevertToNone" "XSetInputFocus" "platform-is-window-visible?" "and" "when" "default-x11-display" "XFlush" "handle")}
      {Lisp-Entry "Current-Cursor" #f 1164 19 1164 33 ()}
      {Lisp-Entry "load-cursor" #f 1168 13 1168 24 ("load-cursor" "'load-cursor" "unimplemented" "cursor")}
      {Lisp-Entry "get-named-cursor" #f 1172 13 1172 29 ("cadr" "essay" "Cursors" "assq" "info" "let" "name")}
      {Lisp-Entry "get-cursor" #f 1177 20 1177 30 ("Current-Cursor")}
      {Lisp-Entry "set-cursor" #f 1181 20 1181 30 ("get-handle" "default-x11-display" "XDefineCursor" "Current-Cursor" "set!" "get-toplevel" "toplevel" "get-named-cursor" "let" "symbol?" "when" "cursor")}
      {Lisp-Entry "hide-cursor" #f 1193 20 1193 31 ()}
      {Lisp-Entry "show-cursor" #f 1197 20 1197 31 ()}
      {Lisp-Entry "platform-get-desktop" #f 1206 13 1206 33 ("XDefaultScreen" "default-x11-display" "XRootWindow")}
      {Lisp-Entry "get-work-area" #f 1210 20 1210 33 ("get-dock-height" "get-height" "-" "get-width" "0" "Rect" "new" "platform-get-desktop" "platform-get-size" "size" "let")}
      {Lisp-Entry "get-dock-height" #f 1218 16 1218 31 ("135")}
      {Lisp-Entry "get-dock-height" #f 1221 16 1221 31 ("0")}
      {Lisp-Entry "platform-drop-files" #f 1230 13 1230 32 ("platform-drop-files" "'platform-drop-files" "unimplemented" "temp")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "resizer" "platform" "x11.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.resizer.platform.x11" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Part-Cursor" #f 43 10 43 21 ()}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "print" "platform" "x11.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.print.platform.x11" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "platform-print-document" #f 49 20 49 43 ("view")}
      {Lisp-Entry "platform-print-picture" #f 52 20 52 42 ("view")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "dialog" "platform" "x11.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.dialog.platform.x11" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "choose-file" #f 54 20 54 31 ("host-title:" "File-Request" "Text-File-Request" "if" "get-modal" "text?" "text?:" "anchors" "anchors:" "multiple-selection?" "multiple-selection?:" "extensions" "extensions:" "filenames" "filenames:" "directory" "directory:" "title" "title:")}
      {Lisp-Entry "choose-new-file" #f 75 20 75 35 ("host-title:" "NewFile-Request" "get-modal" "anchors" "anchors:" "default-extension" "default-extension:" "initial-filename" "initial-filename:" "extensions" "extensions:" "filenames" "filenames:" "directory" "directory:" "title" "title:")}
      {Lisp-Entry "choose-directory" #f 97 20 97 36 ("host-title:" "Directory-Request" "get-modal" "anchors" "anchors:" "directory" "directory:" "title" "title:")}}}
  {Lisp-File-Entry {File Jazz "lib" "jazz.ui" "src" "jazz" "ui" "clipboard" "platform" "x11.jazz"} 1238328026
    {Lisp-Entry "jazz.ui.clipboard.platform.x11" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "initialize-clipboard" #f 52 24 52 44 ("carbon-initialize-clipboard")}
      {Lisp-Entry "initialize-clipboard" #f 55 24 55 44 ()}
      {Lisp-Entry "get-clipboard-text" #f 61 24 61 42 ("read-line" "input" "function" "cr" "'cr" "eol-encoding:" "UTF-16" "'UTF-16" "char-encoding:" "init:" "list" "call-with-input-u8vector" "u8vector?" "not" "if" "carbon-get-clipboard-text" "u8vect" "let" "format" "format:")}
      {Lisp-Entry "get-clipboard-text" #f 69 23 69 41 ("get-application" "get-toplevel" "get-handle" "default-x11-display" "XGetClipboardString" "XA_CLIPBOARD" "selection" "selection:" "format" "format:")}
      {Lisp-Entry "set-clipboard-text" #f 75 24 75 42 ("carbon-set-clipboard-text" "get-output-u8vector" "u8vect" "display" "cr" "'cr" "eol-encoding:" "UTF-16" "'UTF-16" "char-encoding:" "list" "open-output-u8vector" "output" "let" "format" "format:" "text")}
      {Lisp-Entry "set-clipboard-text" #f 81 23 81 41 ("get-toplevel" "get-handle" "default-x11-display" "XSetClipboardString" "XA_CLIPBOARD" "selection" "selection:" "format" "format:" "text")}
      {Lisp-Entry "mouse-select-copy" #f 92 24 92 41 ("proc")}
      {Lisp-Entry "mouse-select-copy" #f 95 24 95 41 ("XA_PRIMARY" "selection:" "set-clipboard-text" "not" "if" "text" "let" "proc")}
      {Lisp-Entry "middle-mouse-paste" #f 105 24 105 42 ("proc")}
      {Lisp-Entry "middle-mouse-paste" #f 108 24 108 42 ("not" "if" "XA_PRIMARY" "selection:" "get-clipboard-text" "text" "let" "proc")}
      {Lisp-Entry "register-clipboard-format" #f 121 20 121 45 ("Formats" "table-set!" "RegisterClipboardFormat" "id" "let" "format" "name")}
      {Lisp-Entry "clipboard-format-available?" #f 127 20 127 47 ("available-clipboard-formats" "member?" "error" "Formats" "table-ref" "either" "get-format" "define" "format")}
      {Lisp-Entry "available-clipboard-formats" #f 137 20 137 47 ("get-output" "put" "/=" "when" "EnumClipboardFormats" "format" "0" "previous" "iter" "List-Factory" "new" "formats" "let" "function" "with-opened-clipboard")}}})
