"Game-Pages"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.sample.gameserver" "src" "jazz" "sample" "gameserver" "Game-Pages.jazz"} 1248797036
    {Lisp-Entry "jazz.sample.gameserver.Game-Pages" library #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Game-Pages" class #f 44 7 44 17 ("HTTP-Pages")
        {Lisp-Entry "play-players" method #f 52 11 52 23 ("one" "'one" "unless" "computer-move" "play-move" "begin" "computer?" "if" "get-next-player" "player" "play" "'play" "get-status" "eq?" "when" "loop" "let" "move" "game")}
        {Lisp-Entry "effective-players" method #f 71 11 71 28 ("either" "players")}
        {Lisp-Entry "effective-current" method #f 75 11 75 28 ("string->number" "empty-string?" "not" "or" "if" "value")}
        {Lisp-Entry "effective-goto" method #f 81 11 81 25 ("string->number" "empty-string?" "not" "or" "if" "value" "game")}
        {Lisp-Entry "serialize-game" method #f 92 11 92 25 ("serialize-moves" "game")}
        {Lisp-Entry "deserialize-game" method #f 96 11 96 27 ("deserialize-moves" "current" "goto" "game" "request")}
        {Lisp-Entry "serialize-moves" method #f 100 11 100 26 ("serialize-move" "value:" "format" "name:" "type:" "collect" "0" "from" "rank" "get-moves" "in" "move" "for" "loop" "game")}
        {Lisp-Entry "deserialize-moves" method #f 107 11 107 28 ("1" "+" "<" "append-forward-history" "play-move" "<=" "not" "or" "if" "deserialize-move" "move" "when" "error?:" "format" "get-parameter" "value" "0" "rank" "loop" "let" "current" "goto" "game" "request")}
        {Lisp-Entry "serialize-move" method #f 119 29 119 43 ("move")}
        {Lisp-Entry "deserialize-move" method #f 123 29 123 45 ("value" "game")}}}})
"Game-Server"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.sample.gameserver" "src" "jazz" "sample" "gameserver" "Game-Server.jazz"} 1248797036
    {Lisp-Entry "jazz.sample.gameserver.Game-Server" library #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Game-Server" class #f 46 7 46 18 ("Web-Server")
        {Lisp-Entry "Pages-Associations" definition #f 54 14 54 32 ("Gomoku-Pages" "C4-Pages" "Games-Pages")}
        {Lisp-Entry "get-pages-associations" method #f 60 11 60 33 ("Pages-Associations")}}}})
"Games-Pages"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.sample.gameserver" "src" "jazz" "sample" "gameserver" "Games-Pages.jazz"} 1248797036
    {Lisp-Entry "jazz.sample.gameserver.Games-Pages" library #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Games-Pages" class #f 44 7 44 18 ("HTTP-Pages")
        {Lisp-Entry "Pattern-Associations" definition #f 47 14 47 34 ()}
        {Lisp-Entry "get-pattern-associations" method #f 51 11 51 35 ("Pattern-Associations")}
        {Lisp-Entry "games" method #f 60 12 60 17 ("debug-info" "href:" "tag" "bind" "node")}}}})
"_gameserver"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.sample.gameserver" "src" "jazz" "sample" "gameserver" "_gameserver.jazz"} 1236190769
    {Lisp-Entry "jazz.sample.gameserver" library #f 38 9 38 31 ("jazz")}})
"autoload"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.sample.gameserver" "src" "jazz" "sample" "gameserver" "autoload.jazz"} 1238328026
    {Lisp-Entry "jazz.sample.gameserver.autoload" library #f 37 19 37 50 ("jazz")}})
"imagemagick"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.sample.gameserver" "src" "jazz" "sample" "gameserver" "imagemagick.jazz"} 1246999448
    {Lisp-Entry "jazz.sample.gameserver.imagemagick" library #f 37 9 37 43 ("jazz")
      {Lisp-Entry "image-convert" definition #f 40 20 40 33 ("error" "0" "/=" "when" "format" "shell-command" "status" "let" "cmd")}
      {Lisp-Entry "image-composite" definition #f 46 20 46 35 ("error" "0" "/=" "when" "format" "shell-command" "status" "let" "cmd")}}})
"run"
 ({Lisp-File-Entry {File jazz.sample.gameserver "src" "jazz" "sample" "gameserver" "run.jazz"} 1249913822
    {Lisp-Entry "jazz.sample.gameserver.run" library #f 37 9 37 35 ("gameserver-panel" "initialize-aliases" "descriptor" "function" "jazz.sample.gameserver" "'jazz.sample.gameserver" "register-product-run" "jazz")}})
"server-panel"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.sample.gameserver" "src" "jazz" "sample" "gameserver" "server-panel.jazz"} 1246999448
    {Lisp-Entry "jazz.sample.gameserver.server-panel" library #f 37 9 37 44 ("jazz")
      {Lisp-Entry "gameserver-panel" definition #f 49 20 49 36 ("format" "panel-loop" "default-resource:" "Jazz" "Directory" "root-directory:" "8080" "service:" "name:" "Game-Server" "new" "server" "car" "equal?" "null?" "or" "if" "command-line" "cdr" "command-arguments" "let" "1" "exit" "force-output" "newline" "display" "message" "fatal" "define")}
      {Lisp-Entry "version" definition #f 69 12 69 19 ()}
      {Lisp-Entry "prompt" definition #f 72 12 72 18 ()}
      {Lisp-Entry "display-backtrace?" definition #f 75 12 75 30 ()}
      {Lisp-Entry "panel-loop" definition #f 79 13 79 23 ("continuation-return" "display-continuation-backtrace" "cont" "display-backtrace?" "display-exception" "exc" "with-exception-handler" "continuation-capture" "empty-string?" "read-line" "prompt" "display" "newline" "newline?" "loop" "version" "set-debug?" "debug?" "-" "make-string" "class" "resource" "bind" "for-each" "string-length" "map" "apply" "max" "not-null?" "when" "get-pages-associations" "associations" "get-hits" "get-unauthentified-resource" "get-default-resource" "get-root-directory" "server-service" "server-host" "class-of" "type-name" "server-name" "wait-stopped" "started" "error?:" "wait-started" "stopped" "get-state" "state" "exit" "force-output" "format" "car" "get-debug?" "not" "null?" "if" "server-debug" "server-pages" "server-info" "restart-server" "stop-server" "start-server" "error" "else" "quit-command" "quit" "help-command" "?" "help" "debug-command" "debug" "pages-command" "pages" "info-command" "info" "restart-command" "restart" "stop-command" "stop" "start-command" "start" "case" "read-all" "arguments" "read" "let" "function" "call-with-input-string" "command" "process-command" "console-output-port" "output" "console-input-port" "input" "define" "server")}}})
