"Add-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "menu" "Add-Menu.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.menu.Add-Menu" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Add-Menu" #f 46 20 46 28 ()
        {Lisp-Entry "add-components" #f 49 21 49 35 ("class:" "client:" "list" "properties:" "on-add" "'on-add" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "icon:" "Label-Item" "get-class-presentation" "localize" "format" "title" "get-class-image" "icon" "self" "parent:" "Separator-Item" "new" "not" "if" "class" "for-each" "addable-classes" "classes" "let" "function" "with-update-locked" "client")}
        {Lisp-Entry "on-add" #f 63 11 63 17 ("add-component-class" "class:" "class" "client:" "get-property" "client" "let" "evt")}}}})
"Book-Controller"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "book" "Book-Controller.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.book.Book-Controller" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Book-Controller" #f 43 20 43 35 ()
        {Lisp-Entry "get-modified?" #f 46 11 46 24 ("continuation-return" "get-editor" "get-modified?" "when" "section" "name" "document" "for-each-section" "return" "function" "continuation-capture")}
        {Lisp-Entry "set-modified?" #f 56 11 56 24 ("update-status" "get-editor" "set-modified?" "section" "name" "function" "document" "for-each-section" "state")}}}})
"Book-Section"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "book" "Book-Section.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.book.Book-Section" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Book-Section" #f 40 20 40 32 ()
        {Lisp-Entry "title" #f 43 8 43 13 ()}
        {Lisp-Entry "model-name" #f 44 8 44 18 ()}
        {Lisp-Entry "client" #f 45 8 45 14 ()}
        {Lisp-Entry "designer" #f 46 8 46 16 ()}
        {Lisp-Entry "editor" #f 47 8 47 14 ()}
        {Lisp-Entry "initialize" #f 50 11 50 21 ("editor~self" "designer~self" "client~self" "model-name~self" "title~self" "set!" "nextmethod" "editor" "editor:" "designer" "designer:" "client" "client:" "model-name" "model-name:" "title" "title:")}
        {Lisp-Entry "print" #f 63 11 63 16 ("title" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-title" #f 74 18 74 27 ("title")}
        {Lisp-Entry "set-title" #f 78 18 78 27 ("title" "set!" "value")}
        {Lisp-Entry "get-model-name" #f 82 18 82 32 ("model-name")}
        {Lisp-Entry "set-model-name" #f 86 18 86 32 ("model-name" "set!" "value")}
        {Lisp-Entry "get-client" #f 90 18 90 28 ("client")}
        {Lisp-Entry "set-client" #f 94 18 94 28 ("set-client" "editor" "when" "designer" "client" "set!" "value")}
        {Lisp-Entry "get-designer" #f 101 18 101 30 ("editor" "get-designer" "set!" "designer" "unless")}
        {Lisp-Entry "set-designer" #f 107 18 107 30 ("designer" "set!" "value")}
        {Lisp-Entry "get-editor" #f 111 18 111 28 ("editor")}
        {Lisp-Entry "set-editor" #f 115 18 115 28 ("editor" "set!" "value")}}}})
"Book-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "book" "Book-View.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.book.Book-View" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Book-View" #f 47 20 47 29 ("eq?" "test:" "make-table" "initialize")
        {Lisp-Entry "sections" #f 50 8 50 16 ()}
        {Lisp-Entry "book" #f 51 8 51 12 ()}
        {Lisp-Entry "controller" #f 52 8 52 18 ()}
        {Lisp-Entry "default-extension" #f 55 11 55 28 ()}
        {Lisp-Entry "extensions" #f 56 11 56 21 ()}
        {Lisp-Entry "focus-document" #f 57 11 57 25 ()}
        {Lisp-Entry "current-history-item" #f 58 11 58 31 ()}
        {Lisp-Entry "compare-moniker" #f 59 11 59 26 ("moniker")}
        {Lisp-Entry "destroy" #f 62 11 62 18 ("nextmethod" "controller" "close")}
        {Lisp-Entry "get-book" #f 67 18 67 26 ("book")}
        {Lisp-Entry "set-book" #f 71 18 71 26 ("book" "set!" "value")}
        {Lisp-Entry "get-version" #f 80 18 80 29 ("book" "get-version")}
        {Lisp-Entry "get-properties" #f 84 18 84 32 ("book" "get-properties")}
        {Lisp-Entry "get-description" #f 88 18 88 33 ("book" "get-description")}
        {Lisp-Entry "get-book-name" #f 92 18 92 31 ("book" "get-book-name")}
        {Lisp-Entry "add-section" #f 101 18 101 29 ("sections" "table-set!" "book" "get-client" "when" "section" "name")}
        {Lisp-Entry "remove-section" #f 106 18 106 32 ("sections" "table-set!" "book" "get-client" "when" "name")}
        {Lisp-Entry "get-section" #f 111 18 111 29 ("error" "sections" "table-ref" "either" "name")}
        {Lisp-Entry "get-client" #f 116 18 116 28 ("get-section" "get-client" "name")}
        {Lisp-Entry "get-designer" #f 120 18 120 30 ("get-section" "get-designer" "name")}
        {Lisp-Entry "get-editor" #f 124 18 124 28 ("get-section" "get-editor" "name")}
        {Lisp-Entry "for-each-section" #f 128 18 128 34 ("book" "get-names" "get-section" "name" "function" "for-each" "proc")}
        {Lisp-Entry "set-client-from-forms" #f 139 18 139 39 ("clients-update" "set-client" "book" "book:" "instantiate" "client" "let" "form" "name" "function" "for-each-property" "client-forms")}
        {Lisp-Entry "clients-update" #f 147 26 147 40 ("set-client" "get-section" "section" "let" "client" "name" "function" "book" "for-each-client")}
        {Lisp-Entry "update-names" #f 154 11 154 23 ("branch:" "set-name" "get-designer" "designer" "get-client" "client" "let" "section" "name" "function" "for-each-section" "book-name")}
        {Lisp-Entry "new-event" #f 168 16 168 25 ("set-visible?" "bring-to-front" "update-names" "clients-update" "update-status" "set-newname" "List-Factory" "new" "fact" "get-controller" "controller" "collect-names" "unique-domain-name" "book-name" "get-guest" "book-view" "rest" "new-frame" "apply" "frame" "let*" "host-visible?" "host-visible?:")}
        {Lisp-Entry "collect-names" #f 184 16 184 29 ("get-children" "get-book-name" "neq?" "and" "get-guest" "guest" "Frame-Host" "is?" "when" "frame" "function" "collect" "get-stage" "stage" "class-of" "model" "let" "book")}
        {Lisp-Entry "empty-sections" #f 200 18 200 32 ("clients-update" "set-name" "get-designer" "designer" "let" "set-client" "self" "book:" "instantiate" "client" "get-model-name" "model-name:" "'new" "action:" "textual?:" "Form" "new" "form" "get-name" "old-name" "get-client" "old-client" "get-section" "section" "let*" "name" "function" "for-each" "sections")}
        {Lisp-Entry "install-in-host" #f 219 11 219 26 ("get-controller" "install-in-host" "nextmethod" "host")}
        {Lisp-Entry "get-controller" #f 229 11 229 25 ("new-controller" "set!" "controller" "unless")}
        {Lisp-Entry "new-controller" #f 235 11 235 25 ("self" "Book-Controller" "new")}
        {Lisp-Entry "save" #f 239 11 239 15 ("get-controller" "save")}
        {Lisp-Entry "save-as" #f 243 11 243 18 ("get-controller" "save-as")}
        {Lisp-Entry "save-to" #f 247 11 247 18 ("get-controller" "save-to" "moniker")}
        {Lisp-Entry "save-all" #f 251 26 251 34 ("get-controller" "save-all")}
        {Lisp-Entry "install-scroller?" #f 255 11 255 28 ()}
        {Lisp-Entry "get-moniker" #f 259 11 259 22 ("get-controller" "get-moniker")}
        {Lisp-Entry "set-moniker" #f 263 11 263 22 ("get-controller" "set-moniker" "moniker")}
        {Lisp-Entry "verify-reload" #f 267 11 267 24 ()}
        {Lisp-Entry "reload-moniker" #f 271 11 271 25 ("update-moniker-time" "reload-content" "function" "with-locked-update" "when" "moniker")}
        {Lisp-Entry "reload-content" #f 279 11 279 25 ("update-status" "set-modified?" "load-content" "empty-content" "moniker")}
        {Lisp-Entry "empty-content" #f 286 29 286 42 ()}
        {Lisp-Entry "get-modified?" #f 290 11 290 24 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 294 11 294 24 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "update-status" #f 298 11 298 24 ("get-controller" "update-status")}
        {Lisp-Entry "update-moniker-time" #f 302 11 302 30 ("get-controller" "update-moniker-time" "moniker")}
        {Lisp-Entry "confirm-close" #f 306 11 306 24 ("get-controller" "confirm-close" "rest")}
        {Lisp-Entry "tool-update" #f 310 11 310 22 ("tool?")}
        {Lisp-Entry "console-update" #f 314 11 314 25 ("console?")}
        {Lisp-Entry "load-content" #f 323 11 323 23 ("update-status" "clients-update" "book" "load-content" "moniker")}
        {Lisp-Entry "save-content" #f 334 11 334 23 ("process-saved" "update-status" "set-modified?" "update-moniker-time" "-1" "print-to" "format" "get-title" "output-section" "set!" "output-properties" "output-version" "get-description" "output-header" "when" "first?" "printer" "UTF-8" "'UTF-8" "char-encoding:" "parse" "path:" "list" "call-with-output-file" "get-editor" "process-saving" "branch:" "get-client" "set-name" "get-form" "set-origin" "get-designer" "designer" "section" "name" "for-each-section" "get-base" "base" "let" "function" ":wait" "with-cursor" "moniker")}
        {Lisp-Entry "output-version" #f 366 11 366 25 ("get-version" "format" "printer")}
        {Lisp-Entry "output-properties" #f 370 11 370 28 ("null?" "if" "format" "get-properties" "properties" "let" "printer")}}}})
"Boolean-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Boolean-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Boolean-Domain" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Boolean-Domain" #f 44 7 44 21 ()
        {Lisp-Entry "validate-value" #f 52 11 52 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "memq?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 62 11 62 18 ("if" "value")}
        {Lisp-Entry "setup-entry" #f 73 11 73 22 ("self" "domain:" "parent:" "Boolean-Entry" "new" "client" "view")}}}})
"Boolean-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Boolean-Entry.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.entry.Boolean-Entry" #f 37 19 37 52 ("Entry-Check-Box" "register-autoclass" "jazz")
      {Lisp-Entry "Boolean-Entry" #f 45 7 45 20 ("focusable?:" "checkbox" "name:" "auto-size?:")
        {Lisp-Entry "preferred-size" #f 53 11 53 25 ("16" "Dimension")}
        {Lisp-Entry "finish" #f 57 11 57 17 ("self" "checkbox" "'checkbox" "locate" "set-editor" "nextmethod" "rest")}
        {Lisp-Entry "tab-view" #f 67 11 67 19 ("checkbox" "'checkbox" "locate")}
        {Lisp-Entry "validate" #f 76 11 76 19 ("domain")}
        {Lisp-Entry "get-value" #f 85 11 85 20 ("checkbox" "'checkbox" "locate" "get-checked?")}
        {Lisp-Entry "set-value" #f 89 11 89 20 ("nil?" "if" "checkbox" "'checkbox" "locate" "set-checked?" "value")}
        {Lisp-Entry "get-modified?" #f 93 11 93 24 ("checkbox" "'checkbox" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 97 11 97 24 ("checkbox" "'checkbox" "locate" "set-modified?" "value")}
        {Lisp-Entry "set-editable?" #f 106 11 106 24 ("checkbox" "'checkbox" "locate" "set-editable?" "value")}}
      {Lisp-Entry "Entry-Check-Box" #f 115 7 115 22 ("initialize")
        {Lisp-Entry "editor" #f 118 12 118 18 ()}
        {Lisp-Entry "get-editor" #f 118 43 118 51 ()}
        {Lisp-Entry "set-editor" #f 118 43 118 51 ()}
        {Lisp-Entry "focus-gain" #f 121 11 121 21 ("editor-focus-gain" "get-manager" "manager" "let" "editable?" "editor" "and" "when" "nextmethod" "old")}
        {Lisp-Entry "focus-lose" #f 129 11 129 21 ("editor-focus-lose" "get-manager" "manager" "let" "editable?" "editor" "and" "when" "nextmethod" "view")}}}})
"Boolean-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Boolean-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Boolean-Row" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Boolean-Row" #f 43 20 43 31 ()
        {Lisp-Entry "initialize" #f 46 11 46 21 ("set-choices" "nextmethod" "apply" "rest")}
        {Lisp-Entry "double-click" #f 51 11 51 23 ("focus-editor" "value" "not" "set-edited-value" "enter-edited-value" "pos")}}}})
"Branches-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "branch" "Branches-Editor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.branch.Branches-Editor" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Branches-Editor" #f 47 20 47 35 ("183" "width:" "branch" "tree" "shown?:" "header" "content" "flat?:" "vscroll?:" "hscroll?:" "scroller" "on-new-default" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "Dimension" "size:" "new-default" "tools" "name:" "fill" "layout-type:")
        {Lisp-Entry "external-name" #f 62 16 62 29 ("branches-editor" "'branches-editor" "rest")}
        {Lisp-Entry "host-icon" #f 71 16 71 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 75 16 75 26 ()}
        {Lisp-Entry "client-activate" #f 79 11 79 26 ("get-designer" "set-designer" "get-client" "set-client" "set-editor" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "client-deactivate" #f 87 11 87 28 ("set-designer" "set-client" "set-editor")}
        {Lisp-Entry "focus-default" #f 98 11 98 24 ("auto-select-first" "acquire-focus" "'tree" "locate" "tree" "let")}
        {Lisp-Entry "get-tools-view" #f 104 11 104 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "install-in-host" #f 113 11 113 26 ("2" "0" "Rect" "set-layout-insets" "fill" "'fill" "get-root" "set-layout-type" "nextmethod" "host")}
        {Lisp-Entry "get-tree" #f 126 18 126 26 ("tree" "'tree" "locate")}
        {Lisp-Entry "on-new-default" #f 135 11 135 25 ("new-default" "evt")}
        {Lisp-Entry "new-default" #f 144 29 144 40 ("get-tree" "new-default-branch")}
        {Lisp-Entry "get-editor" #f 153 18 153 28 ("get-tree" "get-editor")}
        {Lisp-Entry "set-editor" #f 157 18 157 28 ("get-tree" "set-editor" "editor")}
        {Lisp-Entry "get-client" #f 166 18 166 28 ("get-tree" "get-client")}
        {Lisp-Entry "set-client" #f 170 18 170 28 ("get-tree" "set-client" "client")}
        {Lisp-Entry "get-designer" #f 179 18 179 30 ("get-tree" "get-designer")}
        {Lisp-Entry "set-designer" #f 183 18 183 30 ("get-tree" "set-designer" "designer")}}}})
"Branches-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "branch" "Branches-Tree.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.branch.Branches-Tree" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Branches-Tree" #f 49 20 49 33 ("157" "width:" "title:" "branch" "name:" "on-selection-change" ":form" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "multiple-selection?:" "initialize")
        {Lisp-Entry "editor" #f 52 8 52 14 ()}
        {Lisp-Entry "client" #f 53 8 53 14 ()}
        {Lisp-Entry "designer" #f 54 8 54 16 ()}
        {Lisp-Entry "context-menu" #f 67 11 67 23 ("track-popup-menu" "layout-menu" "action-handler:" "title:" "icon:" "Label-Item" "class:" "list" "properties:" "on-add-branch" "'on-add-branch" "method-name:" "self" "target:" "Event-Handler" "handler" "title" "get-class-image" "icon" "Separator-Item" "not" "class" "for-each" "parent:" "Context-Menu" "submenu" "get-class-presentation" "format" "set-title" "get-addable-default-branch" "default" "let" "eqv?" "if" "rename" "'rename" "close" "'close" "Branch" "is-not?" "separator" "'separator" "set-visible?" "null?" "with-update-locked" "when" "selected-branch" "branch" "get-addable-branches" "client" "essay" "classes" "add" "'add" "locate" "item" "Branch-Menu" "new" "menu" "let*" "function" "with-context-click" "pos")}
        {Lisp-Entry "on-add-branch" #f 103 11 103 24 ("add-branch" "selected-branch" "parent" "client" "get-addable-default-branch" "class:" "get-property" "either" "class" "let" "evt")}
        {Lisp-Entry "new-default-branch" #f 109 18 109 36 ("add-branch" "selected-branch" "either" "parent" "get-addable-branches" "add-here?" "get-addable-default-branch" "class" "let*" "client" "when")}
        {Lisp-Entry "add-branch" #f 118 18 118 28 ("rename-branch" "branch-index" "set-single-selection" "update-tree" "install" "'install" "action:" "textual?:" "Form" "client-form:" "set-property" "branch:" "add-child" "editor" "get-designer" "designer" "parent:" "new" "branch" "get-branches" "branch-presentation-request" "presentation" "let" "parent" "class")}
        {Lisp-Entry "branch-presentation-request" #f 131 29 131 56 ("validator:" "unicity-domain:" "not" "accepts-empty?:" "get-class-presentation" "format" "title:" "request-string" "presentation" "branch-name-validator" "name-validator" "get-presentation" "component" "function" "map" "essay" "unicity-domain" "get-name-unicity?" "name-unicity?" "get-name-mandatory?" "name-mandatory?" "let*" "initial-value" "initial-value:" "brothers" "class")}
        {Lisp-Entry "branch-name-validator" #f 140 29 140 50 ()}
        {Lisp-Entry "on-close-branch" #f 144 11 144 26 ("delete-selection" "evt")}
        {Lisp-Entry "delete-selection" #f 148 11 148 27 ("remove-branch" "bell" "Branch" "is-not?" "if" "selected-branch" "branch" "let")}
        {Lisp-Entry "remove-branch" #f 155 29 155 42 ("update-tree" "remove-child" "select-branch" "editor" "get-designer" "designer" "get-client" "client" "let" "branch")}
        {Lisp-Entry "on-rename-branch" #f 163 11 163 27 ("rename-selected-branch" "evt")}
        {Lisp-Entry "rename-selected-branch" #f 167 11 167 33 ("rename-branch" "get-presentation" "initial-value:" "get-brothers" "class-of" "branch-presentation-request" "presentation" "selected-branch" "branch" "let*")}
        {Lisp-Entry "rename-branch" #f 173 11 173 24 ("branch-index" "set-single-selection" "update-tree" "set-presentation" "editor" "get-designer" "designer" "get-client" "Branch" "is?" "if" "client" "let" "presentation" "branch")}
        {Lisp-Entry "on-branch-properties" #f 181 11 181 31 (":select-palette?" "show-properties" "evt")}
        {Lisp-Entry "show-properties" #f 185 11 185 26 ("workspace:" "Properties-Manager" "select-palette" "when" "focus?:" "force?:" "self" "origin:" "list" "if" "editor" "set-selection" "selected-branch" "branch" "let" "select-palette?" "select-palette?:")}
        {Lisp-Entry "maybe-show-properties" #f 192 11 192 32 ("show-properties" "Branch" "is?" "get-client" "eq?" "car" "1" "length" "=" "and" "null?" "or" "get-selection" "selection" "selected-branch" "branch" "let" "editor" "when")}
        {Lisp-Entry "get-editor" #f 209 18 209 28 ("editor")}
        {Lisp-Entry "set-editor" #f 213 18 213 28 ("on-editor" "'on-editor" "method-name:" "target:" "Event-Handler" "new" "add-editor-listener" "set!" "self" "remove-editor-listener" "editor" "neq?" "when" "edt")}
        {Lisp-Entry "on-editor" #f 222 11 222 20 ("branch:" "branch-changed" ":branch-changed" "designer:" "set-designer" ":designer-change" "client:" "get-property" "set-client" ":client-change" "get-kind" "case" "evt")}
        {Lisp-Entry "branch-changed" #f 229 11 229 25 ("branch-index" "set-single-selection" "branch")}
        {Lisp-Entry "get-designer" #f 238 18 238 30 ("designer")}
        {Lisp-Entry "set-designer" #f 242 26 242 38 ("install-listener" "set!" "uninstall-listener" "designer" "neq?" "when" "dsg")}
        {Lisp-Entry "install-listener" #f 251 11 251 27 ("add-designer-listener" "on-designer" "'on-designer" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "designer")}
        {Lisp-Entry "uninstall-listener" #f 256 11 256 29 ("self" "remove-designer-listener" "designer")}
        {Lisp-Entry "on-designer" #f 260 11 260 22 ("presentation:" "component:" "get-property" "presentation-change" ":presentation-change" "get-kind" "case" "evt")}
        {Lisp-Entry "presentation-change" #f 265 11 265 30 ("invalidate-cell" "get-cell-data" "set-title" "0" "Cell" "cell" "let" "client" "eq?" "when" "presentation" "component")}
        {Lisp-Entry "get-client" #f 277 18 277 28 ("client")}
        {Lisp-Entry "set-client" #f 281 18 281 28 ("update-selection" "update-tree" "set!" "client" "neq?" "when" "clt")}
        {Lisp-Entry "update" #f 293 11 293 17 ("update-selection" "update-tree")}
        {Lisp-Entry "update-tree" #f 298 11 298 22 ("get-branches" "sort-branches" "insert-branch" "branch" "function" "for-each" "insert-client" "node" "let" "client" "when" "remove-every-row")}
        {Lisp-Entry "sort-branches" #f 307 29 307 42 ("branches")}
        {Lisp-Entry "update-selection" #f 311 11 311 27 ("set-single-selection" "either" "user-data-index" "index" "get-active-branch" "branch" "let*" "generate-event?:" "set-selection" "client" "not" "if")}
        {Lisp-Entry "insert-client" #f 321 11 321 24 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "add-row" "component-image" "image" "client" "get-presentation" "title" "let")}
        {Lisp-Entry "insert-branch" #f 327 11 327 24 ("sort-branches" "insert-branch" "child" "function" "for-each" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "handle" "component-image" "image" "component-presentation" "title" "get-children" "children" "let" "branch" "node")}
        {Lisp-Entry "component-presentation" #f 337 29 337 51 ("get-presentation" "component")}
        {Lisp-Entry "component-image" #f 341 29 341 44 ("get-component-image" "component")}
        {Lisp-Entry "can-undo?" #f 350 11 350 20 ()}
        {Lisp-Entry "can-redo?" #f 354 11 354 20 ()}
        {Lisp-Entry "can-delete?" #f 358 11 358 22 ("Branch" "is?" "selected-branch" "branch" "let")}
        {Lisp-Entry "on-selection-change" #f 368 11 368 30 ("get-application" "update-focus-actions" "maybe-show-properties" "client" "selected-branch" "either" "select-branch" "evt")}
        {Lisp-Entry "selected-branch" #f 374 18 374 33 ("get-row" "get-user-data" "when" "get-single-selection" "selection" "let")}
        {Lisp-Entry "select-branch" #f 380 11 380 24 ("editor" "process-branch-changing" "function" ":wait" "with-cursor" "client" "get-active-branch" "either" "neq?" "and" "when" "branch")}
        {Lisp-Entry "branch-index" #f 387 11 387 23 ("user-data-index" "branch")}}
      {Lisp-Entry "Branch-Menu" #f 396 7 396 18 ("branch-properties" "properties" "rename-branch" "rename" "close-branch" "close" "separator" "add-branch" "branches-tree" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "add" "name:")}}})
"Branches-Tree-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "branch" "Branches-Tree-Actions.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.branch.Branches-Tree-Actions" #f 37 19 37 61 ("jazz")
      {Lisp-Entry "Branches-Tree-Actions" #f 46 20 46 41 ("on-branch-properties" "properties" "F2" "on-rename-branch" "rename" "Delete" "Shortcut" "shortcut:" "on-close-branch" "close" "on-add-branch" ":focus" "Event-Handler" "action-handler:" "add" "name:")}}})
"Branches-Viewer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "branch" "Branches-Viewer.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.branch.Branches-Viewer" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Branches-Viewer" #f 47 20 47 35 ("183" "width:" "branch" "tree" "shown?:" "header" "content" "flat?:" "vscroll?:" "hscroll?:" "scroller" "name:" "fill" "layout-type:")
        {Lisp-Entry "host-icon" #f 65 16 65 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 69 16 69 26 ()}
        {Lisp-Entry "client-activate" #f 73 11 73 26 ("current-document" "set-client")}
        {Lisp-Entry "client-deactivate" #f 77 11 77 28 ("set-client")}
        {Lisp-Entry "focus-default" #f 86 11 86 24 ("auto-select-first" "acquire-focus" "'tree" "locate" "tree" "let")}
        {Lisp-Entry "install-in-host" #f 97 11 97 26 ("2" "0" "Rect" "set-layout-insets" "fill" "'fill" "get-root" "set-layout-type" "nextmethod" "host")}
        {Lisp-Entry "get-tree" #f 108 18 108 26 ("tree" "'tree" "locate")}
        {Lisp-Entry "get-client" #f 117 18 117 28 ("get-tree" "get-client")}
        {Lisp-Entry "set-client" #f 121 18 121 28 ("get-tree" "set-client" "client")}}
      {Lisp-Entry "Viewer-Tree" #f 130 7 130 18 ("initialize" "157" "width:" "title:" "branch" "name:" "on-selection-change" ":self" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "multiple-selection?:")
        {Lisp-Entry "client" #f 138 8 138 14 ()}
        {Lisp-Entry "get-client" #f 146 18 146 28 ("client")}
        {Lisp-Entry "set-client" #f 150 18 150 28 ("update-tree" "set!" "client" "neq?" "when" "clt")}
        {Lisp-Entry "update-tree" #f 156 11 156 22 ("get-branches" "insert-branch" "branch" "function" "for-each" "insert-client" "node" "let" "client" "when" "remove-every-row")}
        {Lisp-Entry "insert-client" #f 165 11 165 24 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "add-row" "component-image" "image" "client" "get-presentation" "title" "let")}
        {Lisp-Entry "insert-branch" #f 171 11 171 24 ("insert-branch" "child" "function" "for-each" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "handle" "component-image" "image" "get-presentation" "title" "get-children" "children" "let" "branch" "node")}
        {Lisp-Entry "component-image" #f 181 29 181 44 ("get-component-image" "component")}
        {Lisp-Entry "on-selection-change" #f 190 11 190 30 ("client" "selected-branch" "either" "select-branch" "evt")}
        {Lisp-Entry "selected-branch" #f 194 18 194 33 ("get-row" "get-user-data" "when" "get-single-selection" "selection" "let")}
        {Lisp-Entry "select-branch" #f 200 11 200 24 ("client" "set-active-branch" "when" "branch")}}}})
"Card"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "card" "Card.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.card.Card" #f 37 19 37 42 ("jazz")
      {Lisp-Entry "Card" #f 45 20 45 24 ("initialize")
        {Lisp-Entry "editor" #f 48 8 48 14 ()}
        {Lisp-Entry "client" #f 49 8 49 14 ()}
        {Lisp-Entry "designer" #f 50 8 50 16 ()}
        {Lisp-Entry "destroy" #f 58 11 58 18 ("nextmethod" "set-editor" "set-designer")}
        {Lisp-Entry "get-editor" #f 69 26 69 36 ("editor")}
        {Lisp-Entry "set-editor" #f 73 26 73 36 ("on-editor" "'on-editor" "method-name:" "target:" "Event-Handler" "new" "add-editor-listener" "set!" "self" "remove-editor-listener" "editor" "neq?" "when" "edt")}
        {Lisp-Entry "on-editor" #f 82 29 82 38 ("get-force?" "force?:" "get-selection" "car" "set-client" ":selection-changed" "designer:" "get-property" "set-designer" ":designer-change" "get-kind" "case" "evt")}
        {Lisp-Entry "get-client" #f 93 26 93 36 ("client")}
        {Lisp-Entry "set-client" #f 97 26 97 36 ("client-update" "set!" "client" "neq?" "or" "when" "force?" "force?:" "clt")}
        {Lisp-Entry "client-update" #f 103 26 103 39 ()}
        {Lisp-Entry "get-designer" #f 112 26 112 38 ("designer")}
        {Lisp-Entry "set-designer" #f 116 26 116 38 ("set!" "install-listener" "uninstall-listener" "designer" "neq?" "when" "dsg")}
        {Lisp-Entry "on-designer" #f 125 11 125 22 ("call-property-change" ":property-change" "get-kind" "case" "evt")}
        {Lisp-Entry "call-property-change" #f 131 29 131 49 ("value:" "property:" "property-change" "client" "eq?" "when" "component:" "get-property" "component" "let" "evt")}
        {Lisp-Entry "property-change" #f 137 26 137 41 ("value" "property" "component")}
        {Lisp-Entry "install-listener" #f 146 11 146 27 ("add-designer-listener" "on-designer" "'on-designer" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "designer")}
        {Lisp-Entry "uninstall-listener" #f 151 11 151 29 ("self" "remove-designer-listener" "designer")}
        {Lisp-Entry "enter-value" #f 160 26 160 37 ("designer" "set-property" "client" "when" "value" "property")}}}})
"Cell-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Cell-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Cell-Row" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Cell-Row" #f 43 20 43 28 ()
        {Lisp-Entry "present" #f 51 11 51 18 ("get-col" "get-row" "format" "cell")}
        {Lisp-Entry "get-edited-value" #f 62 11 62 27 ("Cell" "new" "col" "row" "bind" "editor" "get-string-content" "read-delimited-string" "list" "let")}
        {Lisp-Entry "edit" #f 68 11 68 15 ("get-tree" "expand/collapse" "get-col" "value" "get-row" "self" "add-row" "edit-in-cell")}
        {Lisp-Entry "close-editor" #f 75 11 75 23 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" #f 80 11 80 22 ("0" "get-sons" "cardinality" ">" "nextmethod" "or")}}}})
"Children-Descriptor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "descriptor" "Children-Descriptor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.descriptor.Children-Descriptor" #f 37 19 37 63 ("jazz")
      {Lisp-Entry "Children-Descriptor" #f 43 20 43 39 ()
        {Lisp-Entry "get-class-descriptor" #f 52 16 52 36 ("Descriptors.Children-Descriptor")}}}})
"Children-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Children-Tree.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.editor.Children-Tree" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Children-Tree" #f 48 20 48 33 ("on-selection-change" ":self" "Event-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" ":icons" "portfolio:" "reorderable?:" "draggable?:" "set-details" "get-details" "set-base" "get-base" "initialize")
        {Lisp-Entry "base" #f 51 12 51 16 ()}
        {Lisp-Entry "details" #f 52 12 52 19 ()}
        {Lisp-Entry "get-base" #f 64 18 64 26 ("base")}
        {Lisp-Entry "set-base" #f 68 18 68 26 ("base" "set!" "value")}
        {Lisp-Entry "get-details" #f 72 18 72 29 ("details")}
        {Lisp-Entry "set-details" #f 76 18 76 29 ("details" "set!" "value")}
        {Lisp-Entry "branch-changed" #f 85 11 85 25 ("update")}
        {Lisp-Entry "update" #f 94 11 94 17 ("insert-rows" "setup-columns" "function" "with-update-locked" "selected-components" "selected-components:" "get-expand-state" "expand-state" "expand-state:")}
        {Lisp-Entry "setup-columns" #f 101 11 101 24 ("width:" "title:" "name:" "Tree-Label-Column" "class:" "self" "context:" "add-column" "set-width" "set-title" "set-name" "get-node-column" "column" "begin" "when" "detail-presentation" "title" "category-field" "property" "let*" "filled?" "width" "name" "bind" "detail" "function" "for-each" "first?" "node-column" "get-name" "details" "null?" "not" "or" "if" "preserve-node-column?:" "remove-columns" "set-filled-column" "get-addable-base" "client" "essay" "base" "set!" "get-header" "header" "let")}
        {Lisp-Entry "insert-rows" #f 126 11 126 22 ("update-selection" "insert-components" "get-recursive-details?" "recursive?" "let" "client" "when" "remove-every-row" "selected-components" "expand-state")}
        {Lisp-Entry "insert-components" #f 134 11 134 28 ("get-presentation" "key:" "<" "sort" "sort-components?" "if" "insert-component" "Group" "is?" "unless" "child" "function" "for-each" "get-components" "components" "let" "recursive?" "father" "component")}
        {Lisp-Entry "insert-component" #f 144 29 144 45 ("insert-components" "user-data:" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "cons" "children" "title" "value" "property" "filled?" "width" "name" "Tree-Label" "if" "detail" "function" "map" "labels" "image:" "title:" "Tree-Node" "new" "node" "get-component-image" "ni" "present-property" "nt" "read-property" "nv" "category-field" "np" "car" "nn" "let*" "filled" "name-info" "set!" "not" "is?" "based?" "rest" "first" "bind" "details" "base" "and" "when" "row" "let" "recursive?" "father" "component")}
        {Lisp-Entry "present-location" #f 172 11 172 27 ("get-presentation" "localize" "ascendant" "function" "map" "join" "null?" "if" "collect-ascendants" "cdr" "ascendants" "let" "component")}
        {Lisp-Entry "on-designer" #f 184 11 184 22 ("value:" "property:" "component:" "property-change" ":property-change" "child-remove" ":child-remove" "parent:" "child:" "get-property" "child-add" ":child-add" "get-kind" "case" "evt")}
        {Lisp-Entry "child-add" #f 191 11 191 20 ("insert-component" "function" "with-update-locked" "client" "neq?" "Group" "is?" "or" "unless" "parent" "child")}
        {Lisp-Entry "child-remove" #f 198 11 198 23 ("remove-row" "function" "with-update-locked" "when" "component-row" "row" "let" "client" "get-parent" "neq?" "Group" "is?" "or" "unless" "child")}
        {Lisp-Entry "property-change" #f 207 11 207 26 ("invalidate-cell" "set-title" "present-property" "title" "get-cell-data" "data" "Cell" "new" "cell" "let*" "get-user-data" "eq?" "rank" "row" "function" "for-each-visible-row" "when" "car" "key:" "field-name" "details" "find" "col" "let" "client" "get-parent" "neq?" "Group" "is?" "or" "unless" "value" "property" "component")}}}})
"Class-Descriptor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "descriptor" "Class-Descriptor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.descriptor.Class-Descriptor" #f 37 19 37 60 ("jazz")
      {Lisp-Entry "Class-Descriptor" #f 43 20 43 36 ("initialize")
        {Lisp-Entry "title" #f 46 12 46 17 ()}
        {Lisp-Entry "get-title" #f 46 53 46 61 ()}
        {Lisp-Entry "set-title" #f 46 53 46 61 ()}
        {Lisp-Entry "image" #f 47 12 47 17 ()}
        {Lisp-Entry "get-image" #f 47 53 47 61 ()}
        {Lisp-Entry "set-image" #f 47 53 47 61 ()}
        {Lisp-Entry "name-prohibited?" #f 48 12 48 28 ()}
        {Lisp-Entry "get-name-prohibited?" #f 48 53 48 61 ()}
        {Lisp-Entry "set-name-prohibited?" #f 48 53 48 61 ()}
        {Lisp-Entry "name-mandatory?" #f 49 12 49 27 ()}
        {Lisp-Entry "get-name-mandatory?" #f 49 53 49 61 ()}
        {Lisp-Entry "set-name-mandatory?" #f 49 53 49 61 ()}
        {Lisp-Entry "name-unicity?" #f 50 12 50 25 ()}
        {Lisp-Entry "get-name-unicity?" #f 50 53 50 61 ()}
        {Lisp-Entry "set-name-unicity?" #f 50 53 50 61 ()}
        {Lisp-Entry "get-class-descriptor" #f 59 16 59 36 ("Descriptors.Class-Descriptor")}}}})
"Classpath-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Classpath-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Classpath-Row" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Classpath-Row" #f 43 20 43 33 ()
        {Lisp-Entry "present" #f 51 11 51 18 ("else" "join" "List" "is?" "not" "nullable?" "and" "cond" "value")}
        {Lisp-Entry "get-edited-value" #f 62 11 62 27 ("split" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-string-content" "string" "let")}}}})
"Color-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editors" "Color-Editor.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.editors.Color-Editor" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Color-Editor" #f 45 20 45 32 ("2" "1" "Rect" "layout-insets:" "15" "14" "Dimension" "size:" "color-contour" "name:" "set-value-row" "get-value-row" "initialize")
        {Lisp-Entry "value-row" #f 48 12 48 21 ()}
        {Lisp-Entry "get-value-row" #f 56 18 56 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 60 18 60 31 ("body" "'body" "locate" "set-value-row" "value-row" "set!" "value")}
        {Lisp-Entry "content-change" #f 65 11 65 25 ("nextmethod" "value-row" "editor-return" "origin")}}}})
"Color-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Color-Row.jazz"} 1251729948
    {Lisp-Entry "jazz.designer.row.Color-Row" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Color-Row" #f 47 20 47 29 ()
        {Lisp-Entry "present" #f 55 11 55 18 ("present" "get-name" "format" "Color" "is-not?" "not" "if" "color")}
        {Lisp-Entry "update-color" #f 69 18 69 30 ("get-edited-value" "color" "'color" "editor" "locate" "set-background")}
        {Lisp-Entry "draw-data" #f 78 11 78 20 ("get-bottom" "get-left" "get-top" "1" "get-right" "line" "set-color" "fill-rect" "if" "Black" "name:" "Color" "frame-rect" "-1" "inflate-rect" "inner" "-" "13" "3" "2" "Rect" "new" "outer" "let*" "0" "15" "draw-at" "height" "width" "data" "row" "column" "value" "context" "surface")}
        {Lisp-Entry "new-editor" #f 94 11 94 21 ("self" "value-row:" "editor-class" "new")}
        {Lisp-Entry "editor-class" #f 99 11 99 23 ("Color-Row-Editor")}
        {Lisp-Entry "get-edited-value" #f 103 11 103 27 ("Color" "parse-string" "body" "'body" "editor" "locate" "get-string-content" "content" "let")}
        {Lisp-Entry "set-edited-value" #f 108 11 108 27 ("color" "'color" "set-background" "present" "body" "'body" "editor" "locate" "set-string-content" "value")}
        {Lisp-Entry "get-edited-modified?" #f 113 11 113 31 ("body" "'body" "editor" "locate" "get-controller" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" #f 117 11 117 31 ("body" "'body" "editor" "locate" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" #f 121 11 121 22 ("body" "'body" "editor" "locate" "show-text-cursor")}
        {Lisp-Entry "focused-editor" #f 125 11 125 25 ("body" "'body" "editor" "locate")}}
      {Lisp-Entry "Color-Row-Editor" #f 134 7 134 23 ("set-value-row" "get-value-row" "initialize" "2" "1" "Rect" "layout-insets:" "15" "14" "Dimension" "size:" "color-contour" "name:")
        {Lisp-Entry "value-row" #f 142 12 142 21 ()}
        {Lisp-Entry "form-model" #f 145 11 145 21 ("nextmethod" "else" "Color-Value-Text-View" "body" "get-name" "case" "form")}
        {Lisp-Entry "get-value-row" #f 151 18 151 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 155 18 155 31 ("body" "'body" "locate" "set-value-row" "value-row" "set!" "value")}
        {Lisp-Entry "content-change" #f 160 11 160 25 ("nextmethod" "enter-edited-value" "popup" "value-row" "editor-return" "return" "case" "origin")}}
      {Lisp-Entry "Color-Value-Text-View" #f 172 7 172 28 ("set-value-row" "get-value-row" "initialize")
        {Lisp-Entry "value-row" #f 175 12 175 21 ()}
        {Lisp-Entry "get-value-row" #f 183 18 183 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 187 18 187 31 ("value-row" "set!" "value")}
        {Lisp-Entry "up-arrow-move" #f 196 11 196 24 ("value-row" "editor-up-arrow" "scroll?" "extend?")}
        {Lisp-Entry "down-arrow-move" #f 200 11 200 26 ("value-row" "editor-down-arrow" "scroll?" "extend?")}
        {Lisp-Entry "document-menu" #f 204 11 204 24 ()}
        {Lisp-Entry "focus-validate" #f 214 11 214 25 ("value-row" "editor-focus-validate" "view")}
        {Lisp-Entry "focus-lose" #f 218 11 218 21 ("value-row" "editor-focus-lose" "nextmethod" "view")}
        {Lisp-Entry "focus-master" #f 223 11 223 23 ("value-row" "get-tree")}}}})
"Column-Detail"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "choosers" "Column-Detail.jazz"} 1250272407
    {Lisp-Entry "jazz.designer.choosers.Column-Detail" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Column-Detail" #f 43 20 43 33 ("0" "initialize")
        {Lisp-Entry "name" #f 46 12 46 16 ()}
        {Lisp-Entry "get-name" #f 46 47 46 55 ()}
        {Lisp-Entry "set-name" #f 46 47 46 55 ()}
        {Lisp-Entry "width" #f 47 12 47 17 ()}
        {Lisp-Entry "get-width" #f 47 47 47 55 ()}
        {Lisp-Entry "set-width" #f 47 47 47 55 ()}
        {Lisp-Entry "filled?" #f 48 12 48 19 ()}
        {Lisp-Entry "get-filled?" #f 48 47 48 55 ()}
        {Lisp-Entry "set-filled?" #f 48 47 48 55 ()}
        {Lisp-Entry "displayed?" #f 49 12 49 22 ()}
        {Lisp-Entry "get-displayed?" #f 49 47 49 55 ()}
        {Lisp-Entry "set-displayed?" #f 49 47 49 55 ()}
        {Lisp-Entry "construct-literal" #f 53 16 53 33 ("self" "new" "displayed?" "filled?" "width" "name" "context")}
        {Lisp-Entry "initialize" #f 57 11 57 21 ("displayed?" "filled?" "width" "name" "set!" "nextmethod" "d?" "f?" "w" "n")}
        {Lisp-Entry "copy-object" #f 65 11 65 22 ("displayed?" "filled?" "width" "name" "Column-Detail" "new" "deep?")}
        {Lisp-Entry "print" #f 69 11 69 16 ("displayed?" "filled?" "width" "name" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Combo-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Combo-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Combo-Row" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Combo-Row" #f 43 20 43 29 ("set-kind" "get-kind" "set-choices" "get-choices" "set-condensed?" "get-condensed?")
        {Lisp-Entry "condensed?" #f 46 12 46 22 ()}
        {Lisp-Entry "choices" #f 47 12 47 19 ()}
        {Lisp-Entry "kind" #f 48 12 48 16 ()}
        {Lisp-Entry "initialize" #f 56 11 56 21 ("set-kind" "set-choices" "set-condensed?" "entry-test:" "not-found:" "getf" "nullable?:" "self" "value-row:" "editor-class" "new" "editor" "set!" "nextmethod" "apply" "others" "condensed?" "entry-test" "pick" "'pick" "kind" "choices" "bind-keywords" "rest")}
        {Lisp-Entry "editor-class" #f 65 11 65 23 ("Combo-Row-Editor")}
        {Lisp-Entry "get-condensed?" #f 74 18 74 32 ("editor" "get-condensed?")}
        {Lisp-Entry "set-condensed?" #f 78 18 78 32 ("editor" "set-condensed?" "value")}
        {Lisp-Entry "get-choices" #f 82 18 82 29 ("editor" "get-choices")}
        {Lisp-Entry "set-choices" #f 86 18 86 29 ("editor" "set-choices" "when" "value")}
        {Lisp-Entry "set-choices-updater" #f 91 18 91 37 ("editor" "set-choices-updater" "value")}
        {Lisp-Entry "get-kind" #f 95 18 95 26 ("editor" "get-kind")}
        {Lisp-Entry "set-kind" #f 99 18 99 26 ("editor" "set-kind" "value")}
        {Lisp-Entry "enter-combo-choice" #f 108 11 108 29 ("focus-editor" "enter-edited-value")}
        {Lisp-Entry "present" #f 118 11 118 18 ("editor" "present-value" "value")}
        {Lisp-Entry "default-value" #f 127 11 127 24 ("get-choices" "caar")}
        {Lisp-Entry "close-editor?" #f 136 11 136 24 ()}
        {Lisp-Entry "get-edited-value" #f 140 11 140 27 ("get-value" "limit-to-list?" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-content" "string" "let")}
        {Lisp-Entry "set-edited-value" #f 149 11 149 27 ("editor" "set-value" "value")}
        {Lisp-Entry "get-edited-modified?" #f 153 11 153 31 ("editor" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" #f 157 11 157 31 ("editor" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" #f 161 11 161 22 ("editor" "get-body" "show-text-cursor")}
        {Lisp-Entry "focused-editor" #f 165 11 165 25 ("editor" "get-body")}
        {Lisp-Entry "combo-choose" #f 169 29 169 41 ()}}}})
"Combo-Row-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Combo-Row-Editor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Combo-Row-Editor" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Combo-Row-Editor" #f 44 20 44 36 ("set-value-row" "get-value-row" "initialize")
        {Lisp-Entry "value-row" #f 47 12 47 21 ()}
        {Lisp-Entry "form-model" #f 50 11 50 21 ("nextmethod" "else" "Combo-Value-Text-View" "body" "get-name" "case" "form")}
        {Lisp-Entry "get-value-row" #f 56 18 56 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 60 18 60 31 ("body" "'body" "locate" "set-value-row" "value-row" "set!" "value")}
        {Lisp-Entry "button-action" #f 65 11 65 24 ("nextmethod" "value-row" "combo-choose" "unless")}
        {Lisp-Entry "content-change" #f 70 11 70 25 ("nextmethod" "enter-edited-value" "popup" "editor-return" "validate-value" "value-row" "get-limit-to-list?" "and" "when" "return" "case" "origin")}
        {Lisp-Entry "combo-choice" #f 77 11 77 23 ("value-row" "enter-combo-choice")}}
      {Lisp-Entry "Combo-Value-Text-View" #f 86 7 86 28 ("set-value-row" "get-value-row" "initialize")
        {Lisp-Entry "value-row" #f 89 12 89 21 ()}
        {Lisp-Entry "get-value-row" #f 97 18 97 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 101 18 101 31 ("value-row" "set!" "value")}
        {Lisp-Entry "up-arrow-move" #f 110 11 110 24 ("value-row" "editor-up-arrow" "scroll?" "extend?")}
        {Lisp-Entry "down-arrow-move" #f 114 11 114 26 ("value-row" "editor-down-arrow" "scroll?" "extend?")}
        {Lisp-Entry "tab-press" #f 118 11 118 20 ("value-row" "editor-tab" "end-completion" "has-completion?" "if" "modifiers" "key")}
        {Lisp-Entry "document-menu" #f 124 11 124 24 ()}
        {Lisp-Entry "focus-validate" #f 134 11 134 25 ("value-row" "editor-focus-validate" "view")}
        {Lisp-Entry "focus-lose" #f 138 11 138 21 ("value-row" "editor-focus-lose" "nextmethod" "view")}
        {Lisp-Entry "focus-master" #f 143 11 143 23 ("value-row" "get-tree")}}}})
"Component-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "menu" "Component-Menu.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.menu.Component-Menu" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Component-Menu" #f 46 20 46 34 ("properties" "before-properties" "rename" "components-tree" "rename-component" "delete" "delete-selection" "end-edit-group" "paste-properties" "paste" "copy" "view" "Action" "action:" "cut" "end-add-group" "add-menu" "Bitmap-Resource" "icon:" "title:" "add-item" "name:")
        {Lisp-Entry "finish" #f 65 11 65 17 ("self" "client" "update-menu" "nextmethod" "rest")}}}})
"Component-Parcel"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "clipboard" "Component-Parcel.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.clipboard.Component-Parcel" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "Component-Parcel" #f 43 20 43 36 ()
        {Lisp-Entry "get-master" #f 51 18 51 28 ("content" "car")}
        {Lisp-Entry "get-master-model" #f 55 18 55 34 ("autoload" "in-manifest?" "when" "get-model-name" "model-name" "get-master" "master" "let*" "get-master-model" "'get-master-model" "unimplemented")}
        {Lisp-Entry "get-master-name" #f 66 18 66 33 ("get-name" "get-master" "master" "let")}}}})
"Component-Surrogate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "surrogate" "Component-Surrogate.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.surrogate.Component-Surrogate" #f 37 19 37 62 ("jazz")
      {Lisp-Entry "Component-Surrogate" #f 43 20 43 39 ("initialize")
        {Lisp-Entry "client" #f 46 18 46 24 ()}
        {Lisp-Entry "editor" #f 47 18 47 24 ()}
        {Lisp-Entry "initialize" #f 55 11 55 21 ("set-client" "editor~self" "set!" "nextmethod" "editor" "editor:" "client" "client:")}
        {Lisp-Entry "install-handlers" #f 66 26 66 42 ()}
        {Lisp-Entry "remove-handlers" #f 70 26 70 41 ()}
        {Lisp-Entry "get-client" #f 79 18 79 28 ("client")}
        {Lisp-Entry "set-client" #f 83 18 83 28 ("client" "set!" "clt")}
        {Lisp-Entry "outer-client" #f 87 26 87 38 ("client")}
        {Lisp-Entry "get-editor" #f 96 18 96 28 ("editor")}
        {Lisp-Entry "invalidate-border" #f 105 26 105 43 ()}
        {Lisp-Entry "redraw-border" #f 109 26 109 39 ()}
        {Lisp-Entry "select" #f 118 26 118 32 ("focus?" "rank")}
        {Lisp-Entry "unselect" #f 122 26 122 34 ()}
        {Lisp-Entry "get-selected?" #f 126 18 126 31 ("get-selection" "client" "memq?")}
        {Lisp-Entry "selection-rank" #f 130 18 130 32 ("client" "get-selection" "find")}
        {Lisp-Entry "get-selection" #f 134 18 134 31 ("editor" "get-selection")}
        {Lisp-Entry "set-selection" #f 138 18 138 31 ("editor" "set-selection" "selection")}
        {Lisp-Entry "acquire-selection" #f 142 18 142 35 ("client" "list" "set-selection")}
        {Lisp-Entry "get-component-selection" #f 146 26 146 49 ("get-selection")}
        {Lisp-Entry "close-selection" #f 150 26 150 41 ("get-client" "get-editor" "get-designer" "remove-child" "surrogate" "get-surrogate" "outer-client" "outer" "for-each" "1" "length" "=" "if" "set-selection" "get-parent" "client" "function" "map" "remove-duplicates" "parents" "get-component-selection" "selection" "let*")}}}})
"Components-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Components-Tree.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.editor.Components-Tree" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Components-Tree" #f 52 20 52 35 ("initialize")
        {Lisp-Entry "last-class" #f 55 8 55 18 ()}
        {Lisp-Entry "focus-actions" #f 63 11 63 24 ("nextmethod" "components-tree" "'components-tree" "find-actions" "cons")}
        {Lisp-Entry "get-last-class" #f 73 18 73 32 ("last-class")}
        {Lisp-Entry "on-delete-selection" #f 82 11 82 30 ("delete-selection" "evt")}
        {Lisp-Entry "on-rename-component" #f 86 11 86 30 ("rename-selection" "evt")}
        {Lisp-Entry "on-export-text" #f 90 11 90 25 ("user-message" "export-text" "function" ":wait" "with-cursor" "bell" "not" "if" "selected-component" "component" "let" "evt")}
        {Lisp-Entry "on-properties" #f 100 11 100 24 ("show-properties" "evt")}
        {Lisp-Entry "focus-gain" #f 109 11 109 21 ("selected-components" "get-editor" "get-application" "set-selected" "nextmethod" "old")}
        {Lisp-Entry "focus-update-actions" #f 114 11 114 31 ("can-rename?" "rename" "components-tree" "Action" "set-action-enabled?")}
        {Lisp-Entry "on-editor" #f 123 11 123 20 ("nextmethod" "else" "get-user-origin?" "get-force-parent?" "get-origin" "get-old" "get-selection" "selection-changed" ":selection-changed" "branch-changed" ":branch-changed" "end-edition" ":saving" "get-kind" "case" "evt")}
        {Lisp-Entry "branch-changed" #f 131 29 131 43 ()}
        {Lisp-Entry "selection-changed" #f 135 29 135 46 ("focus?" "force-parent?" "origin" "old" "selection")}
        {Lisp-Entry "client-update" #f 144 11 144 24 ("update")}
        {Lisp-Entry "set-designer" #f 153 18 153 30 ("highlight-edited" "install-listener" "set!" "uninstall-listener" "get-reference" "unhighlight-edited" "designer" "neq?" "when" "dsg")}
        {Lisp-Entry "highlight-edited" #f 169 29 169 45 ("component")}
        {Lisp-Entry "unhighlight-edited" #f 173 29 173 47 ("component")}
        {Lisp-Entry "component-presentation" #f 182 29 182 51 ("get-presentation" "component")}
        {Lisp-Entry "component-image" #f 186 29 186 44 ("get-component-image" "component")}
        {Lisp-Entry "component-state" #f 190 29 190 44 ("component")}
        {Lisp-Entry "parent-relocation" #f 199 29 199 46 ("parent")}
        {Lisp-Entry "relocation-parent" #f 203 29 203 46 ("class" "destination")}
        {Lisp-Entry "can-undo?" #f 212 11 212 20 ()}
        {Lisp-Entry "can-redo?" #f 216 11 216 20 ()}
        {Lisp-Entry "can-cut?" #f 220 11 220 19 ("redundant-descendant?" "not" "can-cut-component?" "Component" "is?" "client" "neq?" "component" "function" "every?" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-copy?" #f 231 11 231 20 ("redundant-descendant?" "not" "can-copy-component?" "Component" "is?" "component" "function" "every?" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-paste?" #f 241 11 241 21 ("determine-unique-paster" "Component" "is?" "component" "function" "every?" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-paste-properties?" #f 249 11 249 32 ("class-of" "subtype?" "component" "function" "every?" "get-master-model" "parcel-model" "car" "parcel" "let*" "1" "length" "=" "format:" "get-clipboard-text" "read-string-element" "parcels" "jazz-parcels" "'jazz-parcels" "clipboard-format-available?" "when" "selected-components" "components" "let")}
        {Lisp-Entry "can-delete?" #f 263 11 263 22 ("redundant-descendant?" "not" "can-delete-component?" "Component" "is?" "client" "neq?" "component" "function" "every?" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-rename?" #f 274 11 274 22 ("can-rename-component?" "Component" "is?" "car" "component" "1" "length" "=" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-select-all?" #f 282 11 282 26 ()}
        {Lisp-Entry "redundant-descendant?" #f 287 11 287 32 ("has-parent?" "neq?" "and" "target" "function" "some?" "components" "component")}
        {Lisp-Entry "cut-selection" #f 294 11 294 24 ("can-survive?:" "designer" "cut-components" "get-selection" "with-deleted-selection" "function" "with-update-locked" "bell" "null?" "if" "selected-components" "components" "let")}
        {Lisp-Entry "copy-selection" #f 306 11 306 25 (".150" "duration:" "get-application" "update-focus-actions" "designer" "copy-components" "function" ":wait" "with-cursor" "bell" "null?" "if" "selected-components" "components" "let")}
        {Lisp-Entry "Paste-Reporter" #f 318 9 318 23 ("invite" "name:" "title:")
          {Lisp-Entry "dialog-title" #f 326 18 326 30 ()}}
        {Lisp-Entry "paste-clipboard" #f 331 11 331 26 ("cancelable?:" "Paste-Reporter" "progress-reporter:" "self" "context:" "name:" "threaded?:" "set-done" "user-message" "get-model" "get-master" "master" "parcel" "key:" "partition" "reporter:" "relocation-parent" "designer" "paste-parcels" "model" "bind" "info" "for-each" ":wait" "with-cursor" "with-update-locked" "length" "0" "Range" "new" "set-range" "reporter" "function" "with-progress" "get-jazz-parcels" "parcels" "client" "selected-component" "either" "parent" "let")}
        {Lisp-Entry "paste-properties" #f 358 11 358 27 ("designer" "paste-properties" "selected-components" "components" "let")}
        {Lisp-Entry "delete-selection" #f 363 11 363 27 ("can-survive?:" "designer" "delete-components" "function" "with-deleted-selection" "confirm-close" "get-selected-data" "components" "not-null?" "when" "get-selection" "selection" "let")}
        {Lisp-Entry "confirm-close" #f 374 11 374 24 ("confirm-action" "components")}
        {Lisp-Entry "confirm-action" #f 378 11 378 25 ("throw-cancel" "cancel" "no" "yes" "case" "confirmation" "'confirmation" "type:" "localize" "message-box" "code" "let" "text")}
        {Lisp-Entry "on-add-component" #f 391 11 391 27 ("add-component-class" "car" "class" "addable-classes" "remove-nils" "classes" "1" "length" "=" "when" "selected-components" "components" "let" "evt")}
        {Lisp-Entry "addable-classes" #f 400 11 400 26 ("cons" "set!" "memq?" "and" "when" "class-of" "model" "classes" "get-addable-classes" "essay" "parent-classes" "get-parent" "parent-relocation" "parent" "let*" "else" "Component" "is-not?" "addable-root-classes" "not" "cond" "selected-component" "component" "let")}
        {Lisp-Entry "add-component-class" #f 417 11 417 30 ("select-component" "create-new-component" "child" "add-component-request" "values" "if" "creation-info" "get-parent" "set!" "get-addable-classes" "memq?" "not" "when" "extra-properties" "client" "relocation-parent" "either" "selected-component" "selected" "let*" "select?" "select?:" "properties" "properties:" "presentation" "presentation:" "parent" "parent:" "class")}
        {Lisp-Entry "add-component-request" #f 432 29 432 50 ("component-properties-request" "get-children" "component-presentation-request" "values" "parent" "class")}
        {Lisp-Entry "component-presentation-request" #f 437 29 437 59 ("validator:" "unicity-domain:" "not" "accepts-empty?:" "french:" "format" "english:" "Locales" "new" "title:" "request-string" "presentation" "get-class-presentation" "localize" "pres" "component-name-validator" "name-validator" "get-presentation" "component" "function" "map" "essay" "unicity-domain" "get-name-unicity?" "name-unicity?" "get-name-mandatory?" "name-mandatory?" "let*" "get-name-prohibited?" "if" "initial-value" "initial-value:" "brothers" "class")}
        {Lisp-Entry "component-properties-request" #f 449 29 449 57 ("class")}
        {Lisp-Entry "component-name-validator" #f 453 29 453 53 ()}
        {Lisp-Entry "create-new-component" #f 457 11 457 31 ("install-new-component" "function" "with-update-locked" "last-class" "set!" "set-name" "when" "get-designer" "designer" "presentation->name" "essay" "name" "parent:" "new" "child" "let" "added-properties" "presentation" "receive" "extra-properties" "creation-info" "parent" "class")}
        {Lisp-Entry "install-new-component" #f 471 29 471 50 ("install-new-properties" "set-presentation" "when" "add-child" "extra-properties" "added-properties" "presentation" "parent" "child" "designer")}
        {Lisp-Entry "install-new-properties" #f 478 29 478 51 ("append" "add-properties" "extra-properties" "added-properties" "child" "designer")}
        {Lisp-Entry "add-properties" #f 482 29 482 43 ("designer" "set-property" "value" "property" "function" "for-each-property" "properties" "component")}
        {Lisp-Entry "rename-selection" #f 493 11 493 27 ("rename-component" "when" "selected-component" "component" "let")}
        {Lisp-Entry "rename-component" #f 499 18 499 34 ("end-rename" "0" "Cell" "new" "cell" "row-rank" "rank" "get-presentation" "initial-value:" "get-brothers" "class-of" "component-presentation-request" "presentation" "let*" "ensure-expanded" "when" "component-row" "row" "let" "component")}
        {Lisp-Entry "end-rename" #f 509 11 509 21 ("select-component" "acquire-focus" "reorder-component" "sort-components?" "and" "when" "get-parent" "parent" "let" "designer" "set-presentation" "get-cell-data" "set-title" "function" "with-update-locked" "presentation" "cell" "component")}
        {Lisp-Entry "move-components" #f 526 11 526 26 ("select-components" "send-component-before" "send-before" "for-each" "essay" "target-data" "element" "cardinality" "<" "1" "+" "after" "before" "case" "position" "son-rank" "rank" "get-sons" "sons" "get-father" "father" "move-components" "bell" "not" "class-of" "relocation-parent" "component" "key:" "uniform" "parent" "let" "row" "'row" "eq?" "if" "function" "with-update-locked" "get-user-data" "destination" "get-part" "part" "get-row" "dst" "get-view" "get-selected-data" "components" "get-designer" "designer" "let*" "target" "source")}
        {Lisp-Entry "move-component-row" #f 551 11 551 29 ("find-component-position" "not" "if" "function" "move-row" "sort-components?" "sort?" "client" "either" "destination" "get-user-data" "source" "let*" "get-sons" "cardinality" "1" "=" "get-father" "eq?" "and" "unless" "position" "position:" "father" "row")}
        {Lisp-Entry "reorder-component" #f 563 18 563 35 ("get-father" "move-component-row" "find-row" "row" "let" "component")}
        {Lisp-Entry "find-component-position" #f 568 29 568 52 ("get-presentation" "find-ordered-position" "father" "row" "component")}
        {Lisp-Entry "find-component-insertion" #f 572 29 572 53 ("find-row" "son-rank" "when" "target" "component" "parent-row")}
        {Lisp-Entry "send-component-before" #f 577 29 577 50 ("before" "component")}
        {Lisp-Entry "get-row-reorder-target" #f 586 11 586 33 ("part:" "row:" "self" "view:" "Tree-Drop-Target" "new" "when" "else" "after" "'after" "'before" "=" "'row" "4" "3" "cond" "part" "can-send-before?" "cdr" "either" "/=" "addable-class?" "has-parent?" "every?" "neq?" "or" "not" "and" "move?" "visible-count" "<" "before" "+" "2" "1" "memq?" "if" "essay" "before-rank" "get-sons" "last" "before-last" "eq?" "before?" "dst-parent" "row-rank" "dst-rank" "get-father" "dst-father" "dst" "get-parent" "parent-relocation" "component" "key:" "uniform" "src-parent" "class-of" "remove-duplicates" "src-types" "get-row" "get-user-data" "n" "function" "map" "src" "contiguous-range" "src-range" "get-source" "get-view" "get-selection" "src-selection" "let*" "quarter" "row" "drag-drop")}
        {Lisp-Entry "get-row-target" #f 610 11 610 25 ("else" "'row" "get-row-reorder-target" "Descendants-Tree" "row:" "self" "view:" "Tree-Drop-Target" "new" "addable-class?" "when" "get-user-data" "component" "autoload" "class" "get-model" "model" "Model-Icon" "typecase" "get-view" "view" "get-source" "source" "let*" "row" "drag-drop")}
        {Lisp-Entry "receive-drop" #f 630 11 630 23 ("receive-model" "Model-Icon" "typecase" "move-components" "self" "eq?" "if" "get-target" "target" "get-view" "view" "get-source" "source" "let*" "drag-drop" "pos" "sender")}
        {Lisp-Entry "receive-model" #f 644 11 644 24 ("rename-component" "centered?:" "0" "Point" "position:" "get-designer" "add-view" "function" "with-update-locked" "visible?:" "new" "child" "get-row" "get-user-data" "parent" "get-model" "self" "dispatch" "model" "let*" "target" "window")}
        {Lisp-Entry "show-properties" #f 660 18 660 33 ("-" "value" "'value" "100" "property" "'property" "locate" "set-width" "get-width" "width" "let" "expand/collapse" "set-parent" "auto-expanded-row" "set!" "row-height:" "father:" "Editor-Row" "class:" "add-row" "subrow" "get-height" "+" "height" "2" "borders-height" "16" "header-height" "set-client" "designer" "set-designer" "get-editor" "set-editor" "categorized" "'categorized" "set-filter" "get-header" "set-flat?" "get-tree" "tree" "parent:" "Properties-Card" "card" "1" "Rect" "border-insets:" "edge" "'edge" "border-type:" "Border-View" "new" "border" "selected-component" "component" "get-row" "row" "get-single-selection" "selection" "let*")}
        {Lisp-Entry "show-properties" #f 685 26 685 41 ("editor" "show-properties")}
        {Lisp-Entry "on-selection-change" #f 694 11 694 30 ("focus?:" "force?:" "self" "origin:" "selected-components" "set-selection" "get-application" "get-selected-owner" "eq?" "editor" "and" "when" "evt")}
        {Lisp-Entry "select-component" #f 699 18 699 34 ("set-single-selection" "when" "component-visible-row" "row" "let" "component")}
        {Lisp-Entry "select-components" #f 706 18 706 35 ("set-selection" "component-visible-row" "map" "remove-nils" "rows" "let" "components")}
        {Lisp-Entry "find-row" #f 712 29 712 37 ("component-row" "component")}}}})
"Components-Tree-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Components-Tree-Actions.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.Components-Tree-Actions" #f 37 19 37 63 ("jazz")
      {Lisp-Entry "Components-Tree-Actions" #f 46 20 46 43 ("on-properties" "properties" "F2" "Shortcut" "shortcut:" "on-rename-component" ":focus" "Event-Handler" "action-handler:" "rename" "name:")}}})
"Components-Viewer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Components-Viewer.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.editor.Components-Viewer" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Components-Viewer" #f 48 20 48 37 ("initialize")
        {Lisp-Entry "editor" #f 51 8 51 14 ()}
        {Lisp-Entry "client" #f 52 8 52 14 ()}
        {Lisp-Entry "designer" #f 53 8 53 16 ()}
        {Lisp-Entry "focus-actions" #f 61 11 61 24 ("nextmethod" "components-viewer" "'components-viewer" "find-actions" "cons")}
        {Lisp-Entry "destroy" #f 71 11 71 18 ("nextmethod" "set-editor" "set-designer")}
        {Lisp-Entry "context-menu" #f 77 11 77 23 ("track-popup-menu" "when" "get-context-menu" "menu" "let" "function" "with-context-click" "pos")}
        {Lisp-Entry "get-context-menu" #f 85 11 85 27 ("self" "client:" "Component-Menu" "new")}
        {Lisp-Entry "update-menu" #f 89 26 89 37 ("cleanup-separators" "properties" "'properties" "rename-component" "'rename-component" "delete-selection" "'delete-selection" "'paste-properties" "'paste" "'copy" "'cut" "not" "set!" "end-add-group" "'end-add-group" "set-before" "set-parent" ":control" "Shortcut" "set-shortcut" "get-title" "localize" "format" "set-title" "get-icon" "set-icon" "unique" "set-visible?" "when" "get-children" "Label-Item" "collect-type" "children" "self" "add-components" "=" "use-add-menu?" "if" "'add-item" "add-item" "'add-menu" "locate" "add-menu" "let" "empty-add?" "can-view-properties?" "Component" "is?" "and" "can-properties?" "rename" "components-tree" "can-rename?" "delete" "can-delete?" "paste-properties" "can-paste-properties?" "paste" "can-paste?" "copy" "can-copy?" "cut" "view" "Action" "get-action-enabled?" "can-cut?" "car" "1" ">=" "essay" "component" "length" "count" "selected-components" "components" "get-application" "appl" "let*" "menu")}
        {Lisp-Entry "use-add-menu?" #f 133 26 133 39 ()}
        {Lisp-Entry "on-add-component" #f 137 29 137 45 ("evt")}
        {Lisp-Entry "addable-classes" #f 146 26 146 41 ()}
        {Lisp-Entry "addable-root-classes" #f 150 26 150 46 ()}
        {Lisp-Entry "add-component-class" #f 154 26 154 45 ("rest" "class")}
        {Lisp-Entry "get-editor" #f 163 18 163 28 ("editor")}
        {Lisp-Entry "set-editor" #f 167 18 167 28 ("editor-update" "on-editor" "'on-editor" "method-name:" "target:" "Event-Handler" "new" "add-editor-listener" "set!" "self" "remove-editor-listener" "editor" "neq?" "when" "edt")}
        {Lisp-Entry "editor-update" #f 177 29 177 42 ()}
        {Lisp-Entry "on-editor" #f 181 29 181 38 ("designer:" "set-designer" ":designer-change" "client:" "get-property" "set-client" ":client-change" "get-kind" "case" "evt")}
        {Lisp-Entry "get-client" #f 192 18 192 28 ("client")}
        {Lisp-Entry "set-client" #f 196 18 196 28 ("client-update" "set!" "client" "neq?" "when" "clt")}
        {Lisp-Entry "client-update" #f 202 29 202 42 ()}
        {Lisp-Entry "get-designer" #f 211 18 211 30 ("designer")}
        {Lisp-Entry "set-designer" #f 215 26 215 38 ("install-listener" "set!" "uninstall-listener" "designer" "neq?" "when" "dsg")}
        {Lisp-Entry "install-listener" #f 229 11 229 27 ("add-designer-listener" "on-designer" "'on-designer" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "designer")}
        {Lisp-Entry "uninstall-listener" #f 234 11 234 29 ("self" "remove-designer-listener" "designer")}
        {Lisp-Entry "on-designer" #f 243 29 243 40 ("evt")}
        {Lisp-Entry "selected-component" #f 252 18 252 36 ("get-row" "get-user-data" "when" "get-single-selection" "selection" "let")}
        {Lisp-Entry "selected-components" #f 258 18 258 37 ("get-ordered-selection" "get-row" "get-user-data" "row" "function" "map")}
        {Lisp-Entry "component-row" #f 264 18 264 31 ("continuation-return" "get-user-data" "eq?" "when" "rank" "row" "for-each-row" "return" "function" "continuation-capture" "component")}
        {Lisp-Entry "component-visible-row" #f 274 11 274 32 ("user-data-index" "component")}
        {Lisp-Entry "preserving-update" #f 283 18 283 35 ("selected-components" "selected-components:" "get-expand-state" "expand-state:" "update")}
        {Lisp-Entry "update" #f 287 26 287 32 ("rest")}
        {Lisp-Entry "update-selection" #f 291 26 291 42 ("generate-event?:" "force?:" "component-visible-row" "collect" "set-selection" "when" "set-expand-state" "selected-components" "expand-state")}}}})
"Components-Viewer-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Components-Viewer-Actions.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.Components-Viewer-Actions" #f 37 19 37 65 ("jazz")
      {Lisp-Entry "Components-Viewer-Actions" #f 46 20 46 45 (":control" "Shortcut" "shortcut:" "on-add-component" ":focus" "Event-Handler" "action-handler:" "add" "name:")}}})
"Composite-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Composite-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Composite-Row" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Composite-Row" #f 50 20 50 33 ()
        {Lisp-Entry "editor-class" #f 58 11 58 23 ("Composite-Text-View")}
        {Lisp-Entry "get-edited-value" #f 67 11 67 27 ("current-entries" "parse-entries" "=" "empty-string?" "or" "if" "editor" "get-string-content" "string" "let")}
        {Lisp-Entry "accepts-spaces?" #f 79 29 79 44 ()}
        {Lisp-Entry "parse-entries" #f 83 29 83 42 ("parse-entry" "map" "entries")}
        {Lisp-Entry "parse-entry" #f 87 29 87 40 ("entry")}
        {Lisp-Entry "parse-error" #f 91 11 91 22 ("0" "Cell" "Parse-Error" "new" "signal" "get-end" "get-start" "essay" "syntax-message" "either" "let" "part" "part:" "end" "end:" "start" "start:" "message" "message:")}
        {Lisp-Entry "syntax-message" #f 98 29 98 43 ()}
        {Lisp-Entry "present" #f 107 11 107 18 ("present-value" "format" "not" "if" "value")}
        {Lisp-Entry "present-value" #f 114 29 114 42 ("present-entry" "map" "value")}
        {Lisp-Entry "present-entry" #f 118 29 118 42 ("entry")}
        {Lisp-Entry "navigate-backward" #f 127 11 127 28 ("select-part" "=" "when" "function" "for-each-part" "1" "get-rank" "-" "previous" "let" "bell" "not" "if" "pos->part" "part" "editor" "get-start" "get-col" "pos" "current-entries" "entries" "let*")}
        {Lisp-Entry "navigate-forward" #f 140 11 140 27 ("select-part" "=" "when" "function" "for-each-part" "1" "get-rank" "+" "next" "let" "bell" "not" "if" "pos->part" "part" "editor" "get-end" "get-col" "pos" "current-entries" "entries" "let*")}
        {Lisp-Entry "current-entries" #f 153 11 153 26 ("editor" "get-string-content" "determine-entries")}
        {Lisp-Entry "current-part" #f 157 11 157 23 ("pos->part" "editor" "get-start" "get-col" "pos" "let" "entries")}
        {Lisp-Entry "current-position" #f 162 11 162 27 ("pos->position" "editor" "get-start" "get-col" "pos" "let" "entries")}
        {Lisp-Entry "pos->part" #f 167 11 167 20 ("continuation-return" "get-end" "<=" "get-start" ">=" "and" "when" "part" "for-each-part" "return" "function" "continuation-capture" "pos" "entries")}
        {Lisp-Entry "pos->position" #f 177 11 177 24 ("else" "eqv?" "accepts-spaces?" "cond" "element" "c" "0" "<" "while" "decrease!" "1" "+" "and" "when" "find-entry-end" "end" "n" "let*" "get-position" "continuation-return" "get-end" "get-start" "between?" "if" "part" "for-each-part" "editor" "get-string-content" "string" "let" "return" "function" "continuation-capture" "pos" "entries")}
        {Lisp-Entry "find-entry-end" #f 199 11 199 25 ("else" "increase!" "eqv?" "accepts-spaces?" "and" "cond" "element" "c" "continuation-return" ">=" "if" "while" "return" "function" "continuation-capture" "cardinality" "len" "let" "n" "string")}
        {Lisp-Entry "for-each-part" #f 212 11 212 24 ("entry" "function" "for-each" "proc" "entries")}
        {Lisp-Entry "view-completions" #f 223 11 223 27 ("acquire-focus" "locate-prefix" "0" "set-selection" "border:" "alternate-position:" "popup" "-2" "alternate" "2" "get-height" "-10" "+" "pos" "text->view" "view" "get-row" "get-paragraph" "par" "get-start" "user-data:" "title:" "Bitmap-Resource" "image:" "Tree-Node" "list" "children:" "add-row" "name" "function" "for-each" "ci<?" "sort" "sorted" "set-client" "set-parent" "fill" "'fill" "set-layout-type" "end:" "start:" "editor" "get-selection" "selected:" "self" "value-row:" "Completion-Tree" "tree" "get-content" "content" "vscroll?:" "flat?:" "250" "min" "50" "max" "150" "Dimension" "size:" "Scroller-View" "scroller" "blue:" "green:" "128" "red:" "Color" "border-color:" "solid" "'solid" "border-type:" "'border" "name:" "Border-View" "new" "border" "17" "length" "*" "height" "let*" "part-domain" "domain" "end" "start" "text" "position" "receive" "bell" "not" "if" "find-to-complete" "info" "let")}
        {Lisp-Entry "find-to-complete" #f 255 11 255 27 ("get-text" "get-position" "get-end" "editor" "get-start" "get-col" "values" "when" "current-position" "position" "let" "not" "if" "current-part" "part" "current-entries" "entries" "let*")}
        {Lisp-Entry "complete-part" #f 265 11 265 24 ("insert-string" "0" "Cell" "Range$Cell$" "new" "editor" "set-selection" "all?:" "parent" "get-player" "close-popups" "get-row" "get-user-data" "string" "bell" "not" "if" "get-single-selection" "rank" "let" "tree" "end" "start")}
        {Lisp-Entry "determine-entries" #f 280 11 280 28 ("get-output" "split" "1" "cardinality" "+" "length" "increase!" "put" "determine-entry" "parts" "function" "for-each" "offset" "0" "rank" "List-Factory" "new" "entries" "let" "string")}
        {Lisp-Entry "determine-entry" #f 293 11 293 26 ("get-output" "begin" "not" "eqv?" "accepts-spaces?" "and" "if" "from" "n" "in-sequence" "c" "for" "loop" "set!" "increase!" "1" "+" "subseq" "Part" "put" "when" "function" "end-part" "end" "start" "0" "position" "List-Factory" "new" "parts" "let*" "offset" "rank" "string")}
        {Lisp-Entry "part-domain" #f 324 29 324 40 ("position")}
        {Lisp-Entry "select-part" #f 328 11 328 22 ("get-end" "get-start" "0" "Cell" "Range$Cell$" "new" "editor" "set-selection" "part")}}
      {Lisp-Entry "Part" #f 337 7 337 11 ()
        {Lisp-Entry "rank" #f 340 8 340 12 ()}
        {Lisp-Entry "position" #f 341 8 341 16 ()}
        {Lisp-Entry "text" #f 342 8 342 12 ()}
        {Lisp-Entry "start" #f 343 8 343 13 ()}
        {Lisp-Entry "end" #f 344 8 344 11 ()}
        {Lisp-Entry "initialize" #f 347 11 347 21 ("end~self" "start~self" "text~self" "position~self" "rank~self" "set!" "nextmethod" "end" "start" "text" "position" "rank")}
        {Lisp-Entry "print" #f 356 11 356 16 ("end" "start" "text" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-rank" #f 362 18 362 26 ("rank")}
        {Lisp-Entry "get-position" #f 366 18 366 30 ("position")}
        {Lisp-Entry "get-text" #f 370 18 370 26 ("text")}
        {Lisp-Entry "get-start" #f 374 18 374 27 ("start")}
        {Lisp-Entry "get-end" #f 378 18 378 25 ("end")}}
      {Lisp-Entry "Composite-Text-View" #f 387 7 387 26 ()
        {Lisp-Entry "tab-press" #f 390 11 390 20 ("navigate-forward" "else" "navigate-backward" "shift-key?" "value-row" "view-completions" "control-key?" "end-completion" "has-completion?" "cond" "modifiers" "key")}
        {Lisp-Entry "get-context-menu" #f 397 11 397 27 ("Composite-Menu" "new")}
        {Lisp-Entry "on-navigate-backward" #f 401 11 401 31 ("value-row" "navigate-backward" "evt")}
        {Lisp-Entry "on-navigate-forward" #f 405 11 405 30 ("value-row" "navigate-forward" "evt")}
        {Lisp-Entry "on-view-completions" #f 409 11 409 30 ("value-row" "view-completions" "evt")}
        {Lisp-Entry "focus-actions" #f 418 11 418 24 ("nextmethod" "composite-text" "'composite-text" "find-actions" "cons")}
        {Lisp-Entry "complete-name?" #f 428 11 428 25 ("1" ">=" "size")}
        {Lisp-Entry "favorite-completions" #f 432 11 432 31 ()}
        {Lisp-Entry "symbol-completions" #f 436 11 436 29 ("complete" "Symbol-Completer" "new" "completer" "part-domain" "domain" "let" "when" "current-position" "position" "value-row" "current-entries" "entries" "let*" "favorites" "name")}}
      {Lisp-Entry "Composite-Menu" #f 451 7 451 21 ("view-completions" "navigate-forward" "composite-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "navigate-backward" "name:")}
      {Lisp-Entry "Completion-Tree" #f 468 7 468 22 ("initialize" "toplevel-controls?:" "200" "width:" "node" "selection-mode:" ":icons" "portfolio:")
        {Lisp-Entry "value-row" #f 476 12 476 21 ()}
        {Lisp-Entry "get-value-row" #f 476 46 476 54 ()}
        {Lisp-Entry "set-value-row" #f 476 46 476 54 ()}
        {Lisp-Entry "selected" #f 477 12 477 20 ()}
        {Lisp-Entry "get-selected" #f 477 46 477 54 ()}
        {Lisp-Entry "set-selected" #f 477 46 477 54 ()}
        {Lisp-Entry "start" #f 478 12 478 17 ()}
        {Lisp-Entry "get-start" #f 478 46 478 54 ()}
        {Lisp-Entry "set-start" #f 478 46 478 54 ()}
        {Lisp-Entry "end" #f 479 12 479 15 ()}
        {Lisp-Entry "get-end" #f 479 46 479 54 ()}
        {Lisp-Entry "set-end" #f 479 46 479 54 ()}
        {Lisp-Entry "return-press" #f 482 11 482 23 ("self" "end" "start" "value-row" "complete-part" "key")}
        {Lisp-Entry "tab-press" #f 486 11 486 20 ("self" "end" "start" "value-row" "complete-part" "modifiers" "key")}
        {Lisp-Entry "double-click" #f 490 11 490 23 ("self" "end" "start" "value-row" "complete-part" "pos")}}}})
"Composite-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Composite-Text-Actions.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Composite-Text-Actions" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "Composite-Text-Actions" #f 46 20 46 42 ("Space" ":control" "on-view-completions" "view-completions" "on-navigate-forward" "navigate-forward" "Tab" ":shift" "Shortcut" "shortcut:" "on-navigate-backward" ":focus" "Event-Handler" "action-handler:" "navigate-backward" "name:")}}})
"Containment-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Containment-Editor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.Containment-Editor" #f 37 19 37 58 ("jazz")
      {Lisp-Entry "Containment-Editor" #f 47 20 47 38 ("set-client" "get-client" "initialize")
        {Lisp-Entry "client" #f 50 12 50 18 ()}
        {Lisp-Entry "flow-layout" #f 53 8 53 19 ()}
        {Lisp-Entry "external-name" #f 60 16 60 29 ("containment-editor" "'containment-editor" "rest")}
        {Lisp-Entry "host-icon" #f 69 16 69 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 73 16 73 26 ()}
        {Lisp-Entry "client-activate" #f 77 11 77 26 ("get-client" "set-client" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "finish" #f 88 11 88 17 ("layout-view" "0" "5" "4" "Rect" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "layout" #f 94 11 94 17 ("get-height" "get-width" "children" "flow-layout" "layout")}
        {Lisp-Entry "get-client" #f 103 18 103 28 ("client")}
        {Lisp-Entry "set-client" #f 107 18 107 28 ("set!" "client" "neq?" "when" "clt")}}}})
"Custom-Card"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "card" "Custom-Card.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.card.Custom-Card" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Custom-Card" #f 43 20 43 31 ("initialize")
        {Lisp-Entry "setup?" #f 46 8 46 14 ()}
        {Lisp-Entry "setup-properties" #f 54 11 54 27 ("set!" "layout-view" "client" "setup-entry" "domain" "property" "view" "function" "for-each-property-view" "setup?" "unless")}
        {Lisp-Entry "update-properties" #f 63 11 63 28 ("set-property-value" "client" "read-property" "value" "let" "domain" "property" "view" "function" "for-each-property-view")}
        {Lisp-Entry "save-properties-new" #f 70 11 70 30 ("set-property-modified?" "set-property" "designer" "set-name" "name-info" "'name-info" "field-name" "eq?" "if" "get-property-value" "value" "let" "get-property-modified?" "domain" "property" "view" "function" "for-each-property-view" "client" "when")}
        {Lisp-Entry "for-each-property-view" #f 82 11 82 33 ("property-domain" "domain" "get-property" "client" "class-of" "category-field" "property" "let*" "Property-View" "is?" "when" "level" "view" "function" "for-each-descendant" "proc")}
        {Lisp-Entry "find-property-view" #f 91 18 91 36 ("continuation-return" "get-property" "eq?" "Property-View" "is?" "and" "when" "level" "component" "for-each-descendant" "return" "function" "continuation-capture" "property")}
        {Lisp-Entry "client-update" #f 106 11 106 24 ("get-properties-mapping" "property-update" "read-property" "value" "locate" "view" "let" "type" "name" "property" "bind" "mapping" "function" "for-each" "update-properties" "setup-properties" "client" "when")}
        {Lisp-Entry "property-update" #f 118 29 118 44 ("error" "else" "set-color" "color" "seconds?:" "present" "not" "if" "date" "set-checked?" "boolean" "set-content" "text" "either" "set-string-content" "string" "case" "type" "value" "view")}
        {Lisp-Entry "save-client" #f 128 26 128 37 ("save-properties" "save-properties-new")}
        {Lisp-Entry "save-properties" #f 133 11 133 26 ("get-properties-mapping" "set!" "save-property" "when" "locate" "view" "type" "name" "property" "bind" "mapping" "function" "for-each" "modified?" "let")}
        {Lisp-Entry "save-property" #f 144 29 144 42 ("error" "else" "get-color" "color" "Date" "parse-string" "empty-string?" "if" "content" "let" "date" "get-checked?" "boolean" "get-content" "text" "set-modified?" "design-events?:" "get-string-content" "client" "designer" "set-property" "get-modified?" "when" "string" "case" "type" "property" "view")}
        {Lisp-Entry "get-properties-mapping" #f 178 29 178 51 ()}
        {Lisp-Entry "property-change" #f 187 11 187 26 ("client-update" "value" "property" "component")}}}})
"Descendants-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Descendants-Editor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.Descendants-Editor" #f 37 19 37 58 ("jazz")
      {Lisp-Entry "Descendants-Editor" #f 48 20 48 38 ("183" "width:" "descendant" "tree" "header" "content" "vscroll?:" "hscroll?:" "document" "style:" "scroller" "on-toggle-branches" "toggle-branches" "on-new-default" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "Dimension" "size:" "new-default" "tools" "name:" "fill" "layout-type:")
        {Lisp-Entry "external-name" #f 65 16 65 29 ("descendants-editor" "'descendants-editor" "rest")}
        {Lisp-Entry "host-icon" #f 74 16 74 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 78 16 78 26 ()}
        {Lisp-Entry "client-activate" #f 82 11 82 26 ("get-designer" "set-designer" "get-client" "set-client" "set-editor" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "client-deactivate" #f 90 11 90 28 ("set-designer" "set-client" "set-editor")}
        {Lisp-Entry "focus-default" #f 101 11 101 24 ("auto-select-first" "acquire-focus" "'tree" "locate" "tree" "let")}
        {Lisp-Entry "get-tools-view" #f 107 11 107 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "install-in-host" #f 116 11 116 26 ("header" "'header" "set-shown?" "scroller" "'scroller" "locate" "set-flat?" "Docked-Host" "is?" "when" "2" "0" "Rect" "set-layout-insets" "fill" "'fill" "get-root" "set-layout-type" "nextmethod" "host")}
        {Lisp-Entry "get-tree" #f 133 18 133 26 ("tree" "'tree" "locate")}
        {Lisp-Entry "on-new-default" #f 142 11 142 25 ("new-default" "evt")}
        {Lisp-Entry "on-toggle-contents" #f 147 11 147 29 ("get-show-contents?" "not" "set-show-contents?" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "on-toggle-branches" #f 152 11 152 29 ("get-show-branches?" "not" "set-show-branches?" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "new-default" #f 162 29 162 40 ("bell")}
        {Lisp-Entry "add-default" #f 166 11 166 22 ("parent:" "add-component-class" "get-client" "parent" "get-tree" "tree" "let*" "class")}
        {Lisp-Entry "get-editor" #f 177 18 177 28 ("get-tree" "get-editor")}
        {Lisp-Entry "set-editor" #f 181 18 181 28 ("get-tree" "set-editor" "editor")}
        {Lisp-Entry "get-client" #f 190 18 190 28 ("get-tree" "get-client")}
        {Lisp-Entry "set-client" #f 194 18 194 28 ("get-tree" "set-client" "client")}
        {Lisp-Entry "get-designer" #f 203 18 203 30 ("get-tree" "get-designer")}
        {Lisp-Entry "set-designer" #f 207 18 207 30 ("get-tree" "set-designer" "designer")}}}})
"Descendants-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Descendants-Tree.jazz"} 1251729948
    {Lisp-Entry "jazz.designer.editor.Descendants-Tree" #f 37 19 37 56 ("Component-Column" "register-autoclass" "jazz")
      {Lisp-Entry "Descendants-Tree" #f 49 20 49 36 ("187" "width:" "title:" "descendant" "name:" "on-selection-change" ":form" "Event-Handler" "selection-handler:" "multiple-selection?:" ":icons" "portfolio:" "reorderable?:" "draggable?:" "set-show-branches?" "get-show-branches?" "set-highlight-edited?" "get-highlight-edited?" "set-editable?" "get-editable?" "set-group?" "get-group?" "initialize")
        {Lisp-Entry "group?" #f 52 12 52 18 ()}
        {Lisp-Entry "editable?" #f 53 12 53 21 ()}
        {Lisp-Entry "highlight-edited?" #f 54 12 54 29 ()}
        {Lisp-Entry "show-branches?" #f 55 12 55 26 ()}
        {Lisp-Entry "get-group?" #f 68 18 68 28 ("group?")}
        {Lisp-Entry "set-group?" #f 72 18 72 28 ("group?" "set!" "value")}
        {Lisp-Entry "get-editable?" #f 76 18 76 31 ("editable?")}
        {Lisp-Entry "set-editable?" #f 80 18 80 31 ("editable?" "set!" "value")}
        {Lisp-Entry "get-highlight-edited?" #f 84 18 84 39 ("highlight-edited?")}
        {Lisp-Entry "set-highlight-edited?" #f 88 18 88 39 ("highlight-edited?" "set!" "flag")}
        {Lisp-Entry "get-show-branches?" #f 92 18 92 36 ("show-branches?")}
        {Lisp-Entry "set-show-branches?" #f 96 18 96 36 ("preserving-update" "show-branches?" "set!" "value")}
        {Lisp-Entry "mouse-down" #f 106 11 106 21 ("editor" "edit-component" "bell" "not" "if" "selected-component" "component" "let" "editable?" "alt-down?" "and" "when" "nextmethod" "pos")}
        {Lisp-Entry "double-click" #f 115 11 115 23 ("editor" "edit-component" "bell" "selected-component" "component" "let" "nextmethod" "editable?" "highlight-edited?" "not" "or" "if" "pos")}
        {Lisp-Entry "branch-changed" #f 129 11 129 25 ("preserving-update")}
        {Lisp-Entry "selection-changed" #f 133 11 133 28 ("generate-event?:" "row-rank" "set-selection" "ensure-expanded" "for-each" "groupify-selection" "if" "component-row" "map" "remove-nils" "rows" "let" "Details-Tree" "is?" "self" "eq?" "not" "group?" "or" "unless" "focus?" "force-parent?" "origin" "old" "selection")}
        {Lisp-Entry "groupify-selection" #f 140 11 140 29 ("find-ascendant" "Group" "is?" "if" "component" "function" "map" "selection")}
        {Lisp-Entry "update" #f 153 11 153 17 ("update-selection" "get-rights" "insert-toplevel" "client" "when" "remove-every-row" "function" "with-update-locked" "selected-components" "selected-components:" "get-expand-state" "expand-state" "expand-state:")}
        {Lisp-Entry "insert-toplevel" #f 162 29 162 44 ("0" "client" "insert-component" "rights")}
        {Lisp-Entry "insert-component?" #f 166 29 166 46 ("component")}
        {Lisp-Entry "insert-component" #f 170 29 170 45 ("insert-components" "user-data:" "title:" "Component-Node" "new" "list" "children:" "father:" "Component-Row" "class:" "add-row" "subrow" "row-state" "collapsed" "'collapsed" "null?" "if" "component-state" "component-image" "either" "component-presentation" "title" "get-components" "components" "let*" "insert-component?" "when" "state" "state:" "image" "image:" "level" "update?" "rights" "component" "row")}
        {Lisp-Entry "insert-components" #f 181 29 181 46 ("get-components" "insert-component-list" "level" "update?" "rights" "component" "row")}
        {Lisp-Entry "insert-component-list" #f 185 29 185 50 ("sort-components" "sort-components?" "if" "1" "+" "essay" "insert-component" "access-rights" "child-rights" "access-granted?" "receive" "child" "for-each" "Branch" "is-not?" "show-branches?" "not" "Group" "is?" "function" "collect-if" "set!" "group?" "when" "level" "update?" "rights" "components" "component" "row")}
        {Lisp-Entry "row-state" #f 199 29 199 38 ("collapsed" "'collapsed" "expanded" "'expanded" "if" "level" "update?" "component")}
        {Lisp-Entry "refresh" #f 210 11 210 18 ("refresh-descendants" "descendants" "refresh-component" "case" "what" "component")}
        {Lisp-Entry "refresh-component" #f 216 11 216 28 ("invalidate-cell" "get-cell-data" "set-title" "get-presentation" "title" "0" "Cell" "new" "cell" "let" "when" "row-rank" "rank" "component-row" "row" "let*" "component")}
        {Lisp-Entry "refresh-descendants" #f 227 11 227 30 ("expand" "expanded" "'expanded" "eq?" "insert-components" "remove-every-son" "1" "get-level" "+" "level" "get-state" "state" "function" "with-update-locked" "when" "component-row" "row" "let" "component")}
        {Lisp-Entry "get-rights" #f 245 11 245 21 ("get-rights" "editor" "essay")}
        {Lisp-Entry "access-rights" #f 251 11 251 24 ("can-access?" "find-child-rights" "child-rights" "let" "values" "not" "if" "child" "rights")}
        {Lisp-Entry "highlight-component" #f 265 18 265 37 ("set-component-highlighted?" "component")}
        {Lisp-Entry "unhighlight-component" #f 269 18 269 39 ("set-component-highlighted?" "component")}
        {Lisp-Entry "highlight-edited" #f 273 11 273 27 ("set-component-highlighted?" "highlight-edited?" "when" "component")}
        {Lisp-Entry "unhighlight-edited" #f 278 11 278 29 ("set-component-highlighted?" "highlight-edited?" "when" "component")}
        {Lisp-Entry "set-component-highlighted?" #f 283 11 283 37 ("invalidate-cell" "Cell" "new" "cell" "row-rank" "rank" "0" "get-child" "set-highlighted?" "when" "component-row" "row" "let" "flag" "component")}
        {Lisp-Entry "get-draggable?" #f 298 11 298 25 ("can-move-component?" "Component" "is?" "and" "selected-component" "component" "let")}
        {Lisp-Entry "on-designer" #f 308 11 308 22 ("what:" "refresh" ":refresh" "target:" "send-before-target" ":send-before" "child-remove" ":child-remove" "descendant?:" "parent:" "child:" "child-add" ":child-add" "presentation:" "component:" "get-property" "presentation-change" ":presentation-change" "get-kind" "case" "evt")}
        {Lisp-Entry "presentation-change" #f 317 11 317 30 ("invalidate-cell" "0" "Cell" "new" "cell" "let" "set-title" "when" "first-child" "node" "row-rank" "rank" "find-row" "row" "let*" "Branch" "is?" "show-branches?" "not" "Group" "is-not?" "group?" "and" "or" "unless" "presentation" "component")}
        {Lisp-Entry "child-add" #f 330 11 330 20 ("expand" "reorder-component" "when" "state:" "insert-component" "function" "with-update-locked" "collapsed" "'collapsed" "expanded" "'expanded" "state" "0" "get-level" "if" "level" "parent-relocation" "find-row" "row" "let*" "Branch" "is?" "show-branches?" "not" "Group" "is-not?" "group?" "and" "or" "unless" "descendant?" "parent" "child")}
        {Lisp-Entry "child-remove" #f 344 11 344 23 ("remove-row" "function" "with-update-locked" "find-row" "row" "let" "Branch" "is?" "show-branches?" "not" "Group" "is-not?" "group?" "and" "or" "unless" "child")}
        {Lisp-Entry "send-before-target" #f 353 11 353 29 ("find-component-insertion" "position:" "move-component-row" "function" "with-update-locked" "parent-relocation" "parent-row" "find-row" "child-row" "let" "target" "parent" "child")}}
      {Lisp-Entry "Component-Column" #f 368 7 368 23 ("set-highlight-color" "get-highlight-color" "Dark-Red" "name:" "Color" "initialize")
        {Lisp-Entry "highlight-color" #f 371 12 371 27 ()}
        {Lisp-Entry "get-highlight-color" #f 374 18 374 37 ("highlight-color")}
        {Lisp-Entry "set-highlight-color" #f 378 18 378 37 ("highlight-color" "set!" "value")}
        {Lisp-Entry "draw-data" #f 382 11 382 20 ("highlight-color" "text-rect" "frame-rect" "get-highlighted?" "Component-Node" "is?" "and" "when" "nextmethod" "height" "width" "data" "row" "context" "surface")}}
      {Lisp-Entry "Component-Row" #f 396 7 396 20 ()
        {Lisp-Entry "auto-collapse" #f 399 11 399 24 ("get-editor" "close" "remove-row" "Editor-Row" "is?" "when" "nextmethod" "0" "get-sons" "element" "row" "get-tree" "tree" "let")}}
      {Lisp-Entry "Component-Node" #f 413 7 413 21 ("initialize")
        {Lisp-Entry "highlighted?" #f 416 18 416 30 ()}
        {Lisp-Entry "get-highlighted?" #f 416 55 416 63 ()}
        {Lisp-Entry "set-highlighted?" #f 416 55 416 63 ()}}}})
"Descriptors"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "descriptor" "Descriptors.jazz"} 1247099155
    {Lisp-Entry "jazz.designer.descriptor.Descriptors" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Descriptors" #f 40 20 40 31 ()}}})
"Designer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "designer" "Designer.jazz"} 1250004222
    {Lisp-Entry "jazz.designer.designer.Designer" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Designer" #f 54 7 54 15 ("initialize")
        {Lisp-Entry "form" #f 57 8 57 12 ()}
        {Lisp-Entry "reference" #f 58 8 58 17 ()}
        {Lisp-Entry "listeners" #f 59 8 59 17 ()}
        {Lisp-Entry "modified?" #f 60 8 60 17 ()}
        {Lisp-Entry "initialize" #f 68 11 68 21 ("setup-form" "reference~self" "set!" "nextmethod" "reference" "reference:" "form" "form:")}
        {Lisp-Entry "setup-form" #f 74 11 74 21 ("setup-class-form" "setup-file-form" "file?" "get-origin" "origin" "let" "install" "'install" "model-name:" "'new" "action:" "reference" "class-of" "origin:" "textual?:" "Form" "new" "form" "set!" "not" "if" "frm")}
        {Lisp-Entry "setup-class-form" #f 95 11 95 27 ("form" "set!" "frm")}
        {Lisp-Entry "setup-file-form" #f 99 11 99 26 ("form" "set!" "frm")}
        {Lisp-Entry "get-form" #f 108 18 108 26 ("form")}
        {Lisp-Entry "set-form" #f 112 18 112 26 ("form" "set!" "value")}
        {Lisp-Entry "get-reference" #f 116 18 116 31 ("reference")}
        {Lisp-Entry "get-modified?" #f 120 18 120 31 ("modified?")}
        {Lisp-Entry "set-modified?" #f 124 18 124 31 ("modified?" "set!" "state")}
        {Lisp-Entry "save" #f 133 26 133 30 ("save-content" "save-as" "not" "if" "form" "get-origin" "origin" "let" "function" ":wait" "with-cursor" "extensions" "extensions:" "default-extension" "default-extension:")}
        {Lisp-Entry "save-to" #f 142 18 142 25 ("set-modified?" "save-to-file" "form" "set-origin" "save-as" "not" "if" "file")}
        {Lisp-Entry "Default-Extension" #f 150 14 150 31 ()}
        {Lisp-Entry "Default-Extensions" #f 153 14 153 32 ()}
        {Lisp-Entry "save-as" #f 157 11 157 18 ("save-content" "Default-Extensions" "Default-Extension" "either" "choose-new-file" "form" "set-origin" "extensions" "extensions:" "default-extension" "default-extension:")}
        {Lisp-Entry "save-content" #f 162 11 162 23 ("set-modified?" "save-to-class" "save-to-file" "file?" "if" "form" "get-origin" "origin" "let")}
        {Lisp-Entry "save-to-class" #f 170 11 170 24 ("focus-host" "bring-to-front" "set-visible?" "close" "save" "begin" "not" "format" "insert-string" "set-selection" "function" "with-update-locked" "find-location" "range" "text" "frame" "receive" "set-class-form" "Language" "Interpreter" "evaluate" "when" "2" "saved-form" "output" "find-document" "being-edited?" "find-source" "code-source" "Jazz-Code-Location" "new" "code-location" "list" "location" ":new-form" ":form" "get-self-form" "form" "eq?" "if" "where" "type-name" "class-name" "get-application" "appl" "let*" "class")}
        {Lisp-Entry "save-to-file" #f 202 11 202 23 ("0" "print-to" "form" "get-model-name" "output-header" "printer" "function" "get-eol-encoding" "eol-encoding:" "UTF-8" "'UTF-8" "char-encoding:" "parse" "path:" "list" "call-with-output-file" "format" "message-box" "read-only?" "exists?" "and" "if" "file")}
        {Lisp-Entry "saved-form" #f 212 18 212 28 ("get-output-string" "print-to" "open-output-string" "printer" "let" "function" "with-jazz-readtable" "align-name?" "align-name?:" "space-properties?" "space-properties?:" "level" "class-form?")}
        {Lisp-Entry "print-to" #f 220 18 220 26 ("base:" "form?:" "pretty-print" "if" "base" "form" "form->node" "node" "let" "format" "when" "align-name?" "align-name?:" "space-properties?" "space-properties?:" "printer" "level" "class-form?")}
        {Lisp-Entry "set-name" #f 236 26 236 34 ("set-modified?" "fire-property-change" "name-info" "'name-info" "property-field" "property" "fire-presentation-change" "presentation" "fire-name-change" "set-name" "install" "'install" "get-action" "neq?" "and" "owned-form" "component-form" "component-ancestry" "ancestry" "when" "get-client-form" "let" "function" "reference" "either" "for-each-branch" "get-presentation" "old-presentation" "get-name" "old-name" "find-form" "form" "target-branch" "let*" "undoable?" "undoable?:" "design-events?" "design-events?:" "branch" "branch:" "name" "component")}
        {Lisp-Entry "set-tag-module" #f 260 26 260 40 ("set-modified?" "set-tag-module" "find-form" "form" "let" "tag-module" "parent" "component")}
        {Lisp-Entry "set-property" #f 266 26 266 38 ("set-modified?" "get-property" "fire-property-change" "fire-presentation-change" "presentation" "write-property" "get-presentation" "old-presentation" "presentation-property?" "essay" "fire-presentation?" "has-property?" "read-property" "old-value" "find-next-branch" "next-restore" "next-form" "restore?:" "find-form" "restore" "receive" "error" "neq?" "get-creator-branch" "creator-branch" "when" "assert" "property-field" "reference" "follow-component" "component" "let*" "get-client-form" "follow-form" "form" "and" "Path" "is?" "path?" "not" "or" "installed?" "set-property" "eq?" "if" "target-branch" "let" "undoable?" "undoable?:" "design-events?" "design-events?:" "branch" "branch:" "value" "property" "component/path")}
        {Lisp-Entry "remove-property" #f 308 26 308 41 ("set-modified?" "remove-property" "set-property" "fire-property-change" "write-property" "begin" "get-property" "value" "let" "has-property?" "when" "find-next-branch" "next-restore" "next-form" "restore?:" "find-form" "restore" "form" "receive" "assert" "property-field" "reference" "follow-component" "if" "component" "Path" "is?" "path?" "not" "or" "installed?" "target-branch" "let*" "undoable?" "undoable?:" "design-events?" "design-events?:" "branch" "branch:" "default-value" "property" "component/path")}
        {Lisp-Entry "add-child" #f 332 26 332 35 ("set-modified?" "fire-child-add" "set-property" "value" "property" "function" "for-each-property" "get-name" "add-to-index" "reference" "set-creator" "set-name" "self" "remember-creation" "when" "add-form" "set-form" "class-of" "type-name" "identifier-name" "model-name:" "'new" "action:" "get-context" "context:" "textual?:" "Form" "new" "child-form" "restore?:" "find-form" "restore" "form" "receive" "set-parent" "target-branch" "let" "descendant?" "descendant?:" "design-events?" "design-events?:" "properties" "properties:" "name" "name:" "branch" "branch:" "parent" "child")}
        {Lisp-Entry "remove-child" #f 358 26 358 38 ("set-modified?" "fire-child-remove" "close" "get-restore-form" "get-client-form" "for-each-branch" "remove-child" "find-child" "child-form" "owned-form" "component-ancestry" "parent-ancestry" "when" "function" "purge-references" "form" "find-form" "parent-form" "get-parent" "parent" "get-name" "name" "let*" "get-presentation" "neq?" "and" "find-owner" "owner" "either" "effective" "error" "reference" "eq?" "if" "target-branch" "let" "design-events?" "design-events?:" "branch" "branch:" "child")}
        {Lisp-Entry "remove-children" #f 391 18 391 33 ("get-children" "remove-child" "child" "function" "for-each" "design-events?" "design-events?:" "branch" "branch:" "parent")}
        {Lisp-Entry "purge-branch" #f 399 26 399 38 ("remove-child" "install-form" "restore?:" "restore-form" "form" "receive" "find-form" "parent-form" "get-parent" "parent" "target-branch" "let*" "design-events?" "design-events?:" "branch" "branch:" "component")}
        {Lisp-Entry "move-components" #f 408 26 408 41 ("set-modified?" "descendant?:" "design-events?:" "name-resolution:" "instantiate-parcels" "prog1" "delete-components" "verify-name-conflicts" "name-resolution" "package-components" "parcels" "remove-redundant-descendants" "let*" "branch" "branch:" "destination" "components")}
        {Lisp-Entry "send-before" #f 417 26 417 37 ("set-modified?" "fire-send-before" "send-child-before" "send-before" "essay" "target-form" "child-form" "find-form" "parent-form" "get-parent" "parent" "target-branch" "let*" "branch" "branch:" "target" "child")}
        {Lisp-Entry "send-to-back" #f 429 18 429 30 ("get-parent" "first-child" "send-before" "branch" "branch:" "child")}
        {Lisp-Entry "bring-to-front" #f 433 18 433 32 ("send-before" "branch" "branch:" "child")}
        {Lisp-Entry "cut-components" #f 442 26 442 40 ("delete-components" "copy-components" "remove-redundant-descendants" "let" "components")}
        {Lisp-Entry "copy-components" #f 448 26 448 41 ("jazz-parcels" "'jazz-parcels" "format:" "set-clipboard-text" "copy-components-text" "text" "remove-redundant-descendants" "let" "components")}
        {Lisp-Entry "copy-components-text" #f 454 18 454 38 ("get-output-string" "get-content" "0" "print-form" "form" "get-object-id" "get-process-id" "class-of" "type-name" "parcel" "function" "for-each" "format" "package-components" "parcels" "open-output-string" "output" "get-printer-class" "new" "printer" "let" "branch" "branch:" "components")}
        {Lisp-Entry "paste-clipboard" #f 475 26 475 41 ("paste-parcels" "get-jazz-parcels" "parcels" "let" "design-events?" "design-events?:" "branch" "branch:" "parent")}
        {Lisp-Entry "paste-parcels" #f 480 26 480 39 ("set-modified?" "descendant?:" "name-resolution:" "instantiate-parcels" "prog1" "verify-name-conflicts" "name-resolution" "determine-paster" "let*" "reporter" "reporter:" "design-events?" "design-events?:" "branch" "branch:" "parent" "parcels")}
        {Lisp-Entry "paste-properties" #f 487 26 487 42 ("paste-parcel-properties" "get-jazz-parcels" "car" "parcel" "let" "design-events?" "design-events?:" "branch" "branch:" "components")}
        {Lisp-Entry "paste-parcel-properties" #f 492 18 492 41 ("set-modified?" "get-properties" "instantiate-properties" "form" "component" "function" "for-each" "get-content" "forms" "let" "design-events?" "design-events?:" "branch" "branch:" "components" "parcel")}
        {Lisp-Entry "delete-components" #f 502 26 502 43 ("delete-component" "component" "function" "for-each" "remove-redundant-descendants" "let" "design-events?" "design-events?:" "branch" "branch:" "components")}
        {Lisp-Entry "delete-component" #f 509 26 509 42 ("remove-child" "design-events?" "design-events?:" "branch" "branch:" "component")}
        {Lisp-Entry "remove-redundant-descendants" #f 515 11 515 39 ("has-parent?" "neq?" "and" "target" "some?" "not" "component" "function" "collect-if" "components")}
        {Lisp-Entry "package-components" #f 532 11 532 29 ("package-component" "component" "function" "map" "branch" "branch:" "components")}
        {Lisp-Entry "package-component" #f 538 11 538 28 ("error" "object->serial" "GetCurrentProcessId" "Component-Parcel" "install" "new" "car" "get-action" "memq?" "and" "if" "cons" "set!" "when" "owned-form" "form" "owner" "function" "reference" "iterate-branch-spine" "forms" "component-ancestry" "ancestry" "let" "branch" "branch:" "component")}
        {Lisp-Entry "instantiate-parcels" #f 557 26 557 45 ("step-it" "instantiate-parcel" "prog1" "get-master-name" "user-message" "when" "parcel" "function" "map" "reporter" "reporter:" "descendant?" "descendant?:" "design-events?" "design-events?:" "name-resolution" "name-resolution:" "branch" "branch:" "parent" "parcels")}
        {Lisp-Entry "instantiate-parcel" #f 567 26 567 44 ("cdr" "instantiate-form" "component" "delete-components" "list" "name-conflicts" "conflicts" "let" "override" "set-name" "form" "function" "for-each" "unique-name" "set!" "rename" "case" "when" "test:" "member?" "and" "conflict?" "'equal" "sort-predicate" "equal" "component-name" "map" "domain" "get-children" "brothers" "get-name" "name" "car" "master" "get-content" "forms" "let*" "descendant?" "descendant?:" "design-events?" "design-events?:" "name-resolution" "name-resolution:" "branch" "branch:" "parent" "parcel")}
        {Lisp-Entry "instantiate-form" #f 590 26 590 42 ("get-children" "instantiate-children" "get-properties" "instantiate-properties" "when" "instantiate-component" "component" "let" "descendant?" "design-events?" "branch" "parent" "form" "name-resolution" "name")}
        {Lisp-Entry "instantiate-component" #f 598 26 598 47 ("error" "else" "equal" "'equal" "sort-predicate" "get-name" "find-to-modify" "locate" "modify" "instantiate-new-component" "new" "case" "get-action" "action" "let" "descendant?" "design-events?" "branch" "parent" "form" "name-resolution" "name")}
        {Lisp-Entry "instantiate-new-component" #f 606 26 606 51 ("descendant?:" "design-events?:" "name:" "branch:" "add-child" "parent:" "instantiate-component" "component" "let" "descendant?" "design-events?" "branch" "parent" "form" "name")}
        {Lisp-Entry "instantiate-properties" #f 612 26 612 48 ("undoable?:" "design-events?:" "branch:" "set-property" "value" "property" "function" "for-each-property" "design-events?" "branch" "properties" "component")}
        {Lisp-Entry "instantiate-children" #f 618 26 618 46 ("get-name" "instantiate-form" "form" "function" "for-each" "design-events?" "branch" "children" "component")}
        {Lisp-Entry "unique-name" #f 629 29 629 40 ("string->symbol" "symbol?" "if" "unique-separator" "separator:" "map" "->string" "unique-domain-name" "unique-name" "let" "domain" "name")}
        {Lisp-Entry "unique-separator" #f 636 29 636 45 ()}
        {Lisp-Entry "verify-name-conflicts" #f 645 18 645 39 ("confirm-name-resolution" "when" "name-conflicts" "conflicts" "get-children" "children" "get-master-name" "parcel" "function" "map" "names" "let*" "destination" "parcels")}
        {Lisp-Entry "name-conflicts" #f 653 11 653 25 ("get-name" "name" "some?" "child" "function" "collect-if" "'equal" "sort-predicate" "equal" "let" "children" "names")}
        {Lisp-Entry "confirm-name-resolution" #f 662 29 662 52 ("throw-cancel" "no" "override" "'override" "yes" "case" "question" "'question" "type:" "message-box" "code" "present-conflicts" "text" "header" "let*" "rename" "'rename" "get-name" "object->serial" "child" "some?" "GetCurrentProcessId" "=" "and" "get-master-name" "name" "get-object-id" "component-id" "get-process-id" "process-id" "'equal" "sort-predicate" "equal" "let" "parcel" "function" "every?" "if" "conflicts" "children" "parcels")}
        {Lisp-Entry "present-conflicts" #f 683 11 683 28 ("get-output" "get-name" "->string" ":bulleted" "list" "conflict" "function" "for-each" "put" "List-Factory" "new" "fact" "let" "conflicts" "header")}
        {Lisp-Entry "add-view" #f 699 26 699 34 ("set-modified?" "set-visible?" "get-height" "2" "get-width" "quotient" "-" "move-figure" "get-size" "size" "let" "'position" "set-property" "when" "add-child" "apply" "others" "visible?" "visible?:" "centered?" "centered?:" "position" "position:" "parent" "child")}
        {Lisp-Entry "find-form" #f 716 11 716 20 ("values" "error" "not" "and" "restore" "embed-form" "get-restore-form" "essay" "restore-form" "form" "get-client-form" "if" "branch-form" "component-ancestry" "ancestry" "let*" "error?" "error?:" "restore?" "restore?:" "branch" "component")}
        {Lisp-Entry "embed-form" #f 729 11 729 21 ("equal?" "test:" "form-name" "subform" "error" "get-name" "name" "get-component" "Restore-Form" "is?" "essay" "key:" "find-in" "restore-form" "set!" "memq?" "embed-new-form" "not" "if" "get-form" "cpn-form" "get-children" "children" "let" "cpn" "function" "for-each" "ancestry" "form")}
        {Lisp-Entry "embed-new-form" #f 751 11 751 25 ("add-child" "name:" "modify" "'modify" "action:" "Form" "new" "subform" "let" "name" "form")}
        {Lisp-Entry "target-branch" #f 757 11 757 24 ("else" "follow-component" "Path" "is?" "reference" "get-active-branch" "eq?" "cond" "branch")}
        {Lisp-Entry "component-ancestry" #f 763 11 763 29 ("error" "not" "when" "get-parent-component" "cons" "set!" "reference" "neq?" "while" "scan" "ancestry" "let" "component")}
        {Lisp-Entry "find-owner" #f 779 18 779 28 ("continuation-return" "has-property?" "new" "'new" "get-action" "eq?" "not" "or" "and" "owned-form" "when" "form" "owner" "reference" "iterate-branch-spine" "return" "function" "continuation-capture" "component-ancestry" "ancestry" "let" "property" "component")}
        {Lisp-Entry "find-next-branch" #f 794 11 794 27 ("get-restore-form" "continuation-return" "has-property?" "owned-form" "form" "when" "get-client-form" "client-form" "for-each" "return" "function" "continuation-capture" "component-ancestry" "ancestry" "reference" "either" "get-installed-branches" "lower" "let" "values" "installed?" "not" "and" "if" "property" "component" "branch")}
        {Lisp-Entry "owned-form" #f 811 11 811 21 ("equal?" "test:" "form-name" "key:" "find-in" "subform" "get-name" "name" "set!" "memq?" "continuation-return" "not" "if" "get-form" "cpn-form" "get-children" "children" "let" "cpn" "for-each" "return" "function" "continuation-capture" "ancestry" "form")}
        {Lisp-Entry "get-name" #f 841 18 841 26 ("follow-form" "get-name" "get-client-form" "if" "form" "target-branch" "let*" "branch" "branch:" "path")}
        {Lisp-Entry "get-property" #f 847 18 847 30 ("follow-form" "get-property" "get-client-form" "if" "form" "target-branch" "let*" "branch" "branch:" "property" "path")}
        {Lisp-Entry "edit-form" #f 858 18 858 27 ("edit" "2" "list" "form-location" "append" "Jazz-Code-Location" "new" "location" "edit-document" "file?" "if" "form" "get-origin" "origin" "get-application" "appl" "let")}
        {Lisp-Entry "form-location" #f 867 18 867 31 ("class-form" "'class-form" "list" "get-category-location" "append" "form-location" "'form-location" "unimplemented" "file?" "if" "form" "get-origin" "origin" "let")}
        {Lisp-Entry "fire-name-change" #f 881 11 881 27 ("get-designers" "process-name-change" "designer" "function" "for-each" "undoable?" "old-name" "name" "component")}
        {Lisp-Entry "fire-presentation-change" #f 887 11 887 35 ("get-designers" "process-presentation-change" "designer" "function" "for-each" "undoable?" "old-presentation" "presentation" "component")}
        {Lisp-Entry "fire-property-change" #f 893 11 893 31 ("get-designers" "process-property-change" "designer" "function" "for-each" "undoable?" "value" "property" "component" "branch")}
        {Lisp-Entry "fire-child-add" #f 899 11 899 25 ("get-designers" "process-child-add" "designer" "function" "for-each" "descendant?" "parent" "child")}
        {Lisp-Entry "fire-child-remove" #f 905 11 905 28 ("get-designers" "process-child-remove" "designer" "function" "for-each" "parent" "child")}
        {Lisp-Entry "fire-send-before" #f 911 11 911 27 ("get-designers" "process-send-before" "designer" "function" "for-each" "target" "parent" "child")}
        {Lisp-Entry "add-designer-listener" #f 922 18 922 39 ("add-listener" "listeners" "set!" "listener")}
        {Lisp-Entry "remove-designer-listener" #f 926 18 926 42 ("remove-listener" "listeners" "set!" "listener")}
        {Lisp-Entry "process-name-change" #f 930 11 930 30 ("invoke" "listener" "function" "for-each" "undoable?:" "old-name:" "name:" "component:" "self" ":name-change" "Designer-Event" "new" "evt" "let" "listeners" "not-null?" "when" "undoable?" "old-name" "name" "component")}
        {Lisp-Entry "process-presentation-change" #f 938 11 938 38 ("invoke" "listener" "function" "for-each" "undoable?:" "old-presentation:" "presentation:" "component:" "self" ":presentation-change" "Designer-Event" "new" "evt" "let" "listeners" "not-null?" "when" "undoable?" "old-presentation" "presentation" "component")}
        {Lisp-Entry "process-property-change" #f 946 11 946 34 ("invoke" "listener" "function" "for-each" "undoable?:" "value:" "property:" "component:" "branch:" "self" ":property-change" "Designer-Event" "new" "evt" "let" "listeners" "not-null?" "when" "undoable?" "value" "property" "component" "branch")}
        {Lisp-Entry "process-child-add" #f 954 11 954 28 ("invoke" "listener" "function" "for-each" "descendant?:" "parent:" "child:" "self" ":child-add" "Designer-Event" "new" "evt" "let" "listeners" "not-null?" "when" "descendant?" "parent" "child")}
        {Lisp-Entry "process-child-remove" #f 962 11 962 31 ("invoke" "listener" "function" "for-each" "parent:" "child:" "self" ":child-remove" "Designer-Event" "new" "evt" "let" "listeners" "not-null?" "when" "parent" "child")}
        {Lisp-Entry "process-send-before" #f 970 11 970 30 ("invoke" "listener" "function" "for-each" "target:" "parent:" "child:" "self" ":send-before" "Designer-Event" "new" "evt" "let" "listeners" "not-null?" "when" "target" "parent" "child")}
        {Lisp-Entry "process-refresh" #f 978 18 978 33 ("invoke" "listener" "function" "for-each" "what:" "component:" "self" ":refresh" "Designer-Event" "new" "evt" "let" "listeners" "not-null?" "when" "what" "component")}
        {Lisp-Entry "process-user-event" #f 986 18 986 36 ("self" "invoke" "listener" "function" "for-each" "listeners" "not-null?" "when" "event")}}}})
"Designer-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "event" "Designer-Event.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.event.Designer-Event" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Designer-Event" #f 43 7 43 21 ()}}})
"Designer-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "preference" "Designer-Preferences.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.preference.Designer-Preferences" #f 37 19 37 64 ("jazz")
      {Lisp-Entry "Designer-Preferences" #f 46 20 46 40 ("Bitmap-Resource" "icon:" "title:" "initialize")
        {Lisp-Entry "aligned-properties" #f 49 12 49 30 ()}
        {Lisp-Entry "get-aligned-properties" #f 49 56 49 64 ()}
        {Lisp-Entry "set-aligned-properties" #f 49 56 49 64 ()}
        {Lisp-Entry "can-rename-component?" #f 61 11 61 32 ()}
        {Lisp-Entry "can-delete-component?" #f 65 11 65 32 ()}
        {Lisp-Entry "can-move-component?" #f 69 11 69 30 ()}
        {Lisp-Entry "can-copy-component?" #f 73 11 73 30 ()}
        {Lisp-Entry "get-row-instance" #f 77 11 77 27 ("nextmethod" "else" "List-Row" "new" "aligned-properties" "field-name" "case" "property")}
        {Lisp-Entry "get-addable-classes" #f 83 11 83 30 ("Indented-Column-Preferences" "Aligned-Column-Preferences" "list")}}}})
"Designer-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "workspace" "Designer-Workspace.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.workspace.Designer-Workspace" #f 37 19 37 61 ("jazz")
      {Lisp-Entry "Designer-Workspace" #f 46 20 46 38 ("Lisp-Console-Manager" "Properties-Manager" "-20" "caption?:" "Text-Palette" "-37" "Containment-Editor" "Alignment-Editor" "52" "Designer-Manager" "26" "59" "-30" "View-Descendants-Editor" "Branches-Editor" "second" "Toolbox-Manager" "model-name:" "65" "50" "vert" "5" "Rect" "insets:" "18" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" ":shift" ":alt" "Shortcut" "shortcut:" "Bitmap-Resource" "icon:" "title:")
        {Lisp-Entry "default-name" #f 75 11 75 23 ("designer" "'designer")}}}})
"Details-Card"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "details" "Details-Card.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.details.Details-Card" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Details-Card" #f 45 20 45 32 ("toplevel-controls?:" "title:" "element" "details" "content" "name:" "vscroll?:" "hscroll?:" "document" "style:" "fill" "layout-type:")}}})
"Details-Chooser"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "choosers" "Details-Chooser.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.choosers.Details-Chooser" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Details-Chooser" #f 48 20 48 35 ("on-cancel" "193" "cancel" "default?:" "on-ok" ":host" "363" "109" "ok" "270" "348" "6" "show-unfocused-selection?:" "focus-selects-all?:" "text" "scroller" "21" "40" "318" "155" "column-size" "on-width" "90" "width" "on-filled" "47" "321" "filled" "110" "300" "8" "size-label" "on-hide" "123" "hide" "on-show" "95" "show" "on-move-down" "61" "move-down" "on-move-up" "24" "80" "move-up" "200" "width:" "display-images?:" "toplevel-controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-selection-change" "selection-handler:" "on-action" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "2" "top-padding:" "detail" "filled-column:" "details-tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "254" "171" "33" "details-border" "Label" "name:" "Font" "font:" "16" "191" "9" "10" "Point" "position:" "title:" "400" "282" "Dimension" "size:" "set-defaults" "get-defaults" "set-details" "get-details" "set-reference" "get-reference" "initialize")
        {Lisp-Entry "reference" #f 51 12 51 21 ()}
        {Lisp-Entry "details" #f 52 12 52 19 ()}
        {Lisp-Entry "defaults" #f 54 12 54 20 ()}
        {Lisp-Entry "finish" #f 81 11 81 17 ("acquire-focus" "update-buttons" "setup-selection" "setup-details" "get-tree" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-reference" #f 95 18 95 31 ("reference")}
        {Lisp-Entry "set-reference" #f 99 18 99 31 ("reference" "set!" "value")}
        {Lisp-Entry "get-details" #f 103 18 103 29 ("details")}
        {Lisp-Entry "set-details" #f 107 18 107 29 ("details" "set!" "value")}
        {Lisp-Entry "get-defaults" #f 112 18 112 30 ("defaults")}
        {Lisp-Entry "set-defaults" #f 117 18 117 30 ("defaults" "set!" "value")}
        {Lisp-Entry "get-tree" #f 121 11 121 19 ("details-tree" "'details-tree" "locate")}
        {Lisp-Entry "get-text" #f 125 11 125 19 ("text" "column-size" "locate")}
        {Lisp-Entry "host-title" #f 134 16 134 26 ()}
        {Lisp-Entry "host-position" #f 138 16 138 29 ("300" "450" "Point")}
        {Lisp-Entry "host-size" #f 142 16 142 25 ("120" "302" "Dimension")}
        {Lisp-Entry "on-action" #f 151 11 151 20 ("update-buttons" "toggle-displayed?" "Check-Box" "is?" "when" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-selection-change" #f 158 11 158 30 ("update-details" "enter-width" "update-buttons" "first" "details" "element" "essay" "old-detail" "get-old" "old" "let*" "evt")}
        {Lisp-Entry "on-move-up" #f 166 11 166 21 ("set-single-selection" "acquire-focus" "setup-details" "1" "-" "insert!" "remove!" "set!" "details" "element" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-move-down" #f 177 11 177 23 ("set-single-selection" "acquire-focus" "setup-details" "1" "+" "insert!" "remove!" "set!" "details" "element" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-show" #f 188 11 188 18 ("update-buttons" "toggle-displayed?" "set-checked?" "acquire-focus" "get-row" "get-user-data" "checkbox" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-hide" #f 198 11 198 18 ("update-buttons" "toggle-displayed?" "set-checked?" "acquire-focus" "get-row" "get-user-data" "checkbox" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-filled" #f 208 11 208 20 ("change-filled" "evt")}
        {Lisp-Entry "on-width" #f 212 11 212 19 ("Label" "name:" "Font" "set-detail-font" "set-filled?" "enter-width" "details" "element" "essay" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-reset" #f 222 11 222 19 ("on-reset" "'on-reset" "unimplemented" "evt")}
        {Lisp-Entry "on-return-press" #f 227 11 227 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" #f 233 11 233 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "setup-details" #f 243 11 243 24 ("details" "list" "children:" "add-row" "user-data:" "color:" "get-displayed?" "checked?:" ":enabled?" "title:" ":outline" "parent:" "font:" "Check-Box" "checkbox" "Label" "Label-Bold" "Font" "get-filled?" "if" "font" "'mandatory" "neq?" "enabled?" "Black" "name:" "Color" "color" "4" "Rect" "layout-insets:" "fill" "'fill" "layout-type:" "Layout-View" "new" "layout" "0" "border" "let*" "reference" "get-name" "assoc" "mandatory" "width" "title" "name" "bind" "detail" "for-each" "remove-every-row" "function" "with-update-locked" "tree")}
        {Lisp-Entry "setup-selection" #f 260 11 260 26 ("0" "list" "set-selection" "details" "when" "tree")}
        {Lisp-Entry "update-buttons" #f 270 11 270 25 ("defaults" "reset" "'reset" "'mandatory" "neq?" "and" "get-displayed?" "not" "1" "-" "<" "0" ">" "reference" "get-name" "assoc" "mandatory" "width" "title" "name" "bind" "details" "element" "detail" "let" "hide" "'hide" "show" "'show" "move-down" "'move-down" "move-up" "'move-up" "locate" "set-enabled?" "begin" "null?" "if" "get-visible-count" "count" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "update-details" #f 290 11 290 25 ("get-filled?" "set-selected?" "get-width" "->string" "details" "element" "detail" "set-string-content" "set-enabled?" "begin" "null?" "if" "get-text" "text" "'width" "width" "'filled" "filled" "size-label" "'size-label" "locate" "label" "get-tree" "get-single-selection" "selection" "let")}
        {Lisp-Entry "toggle-displayed?" #f 317 11 317 28 ("not" "set-displayed?" "get-displayed?" "visible?" "get-user-data" "detail" "let*" "checkbox")}
        {Lisp-Entry "enter-width" #f 328 11 328 22 ("parse-integer" "set-width" "throw-cancel" "select-all" "acquire-focus" "get-message" "message-box" "err" "Parse-Error" "catch" "get-string-content" "content" "get-text" "text" "get-tree" "tree" "let*" "when" "edited-detail")}
        {Lisp-Entry "set-detail-font" #f 341 11 341 26 ("set-font" "get-user-data" "checkbox" "details" "find" "get-row" "row" "let*" "font" "detail" "tree")}
        {Lisp-Entry "find-filled" #f 352 11 352 22 ("details" "get-filled?" "detail" "function" "find-if")}
        {Lisp-Entry "change-filled" #f 358 11 358 24 ("Label-Bold" "Label" "name:" "Font" "set-detail-font" "set-filled?" "neq?" "when" "find-filled" "filled" "details" "element" "essay" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "get-modal-result" #f 377 11 377 27 ("get-output" "put" "Check-Box" "is?" "when" "get-user-data" "checkbox" "let" "rank" "row" "function" "for-each-row" "enter-width" "List-Factory" "new" "details" "element" "essay" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*")}}}})
"Details-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Details-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Details-Row" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Details-Row" #f 44 20 44 31 ("initialize")
        {Lisp-Entry "all" #f 47 12 47 15 ()}
        {Lisp-Entry "get-all" #f 47 41 47 49 ()}
        {Lisp-Entry "set-all" #f 47 41 47 49 ()}
        {Lisp-Entry "initialize" #f 55 11 55 21 ("choose" "'choose" "set-kind" "nextmethod" "apply" "rest")}
        {Lisp-Entry "present" #f 65 11 65 18 ("format" "not" "if" "value")}
        {Lisp-Entry "combo-choose" #f 76 11 76 23 ("focus-editor" "enter-edited-value" "set-edited-value" "get-edited-value" "details:" "all" "all:" "Details-Chooser" "get-modal" "details" "let")}
        {Lisp-Entry "get-edited-value" #f 89 11 89 27 ("=" "empty-string?" "or" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" #f 96 11 96 27 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Details-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Details-Tree.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.editor.Details-Tree" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Details-Tree" #f 48 20 48 32 ("on-selection-change" ":self" "Event-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" ":icons" "portfolio:" "reorderable?:" "draggable?:" "initialize")
        {Lisp-Entry "base" #f 51 12 51 16 ()}
        {Lisp-Entry "get-base" #f 51 45 51 53 ()}
        {Lisp-Entry "set-base" #f 51 45 51 53 ()}
        {Lisp-Entry "details" #f 52 12 52 19 ()}
        {Lisp-Entry "get-details" #f 52 45 52 53 ()}
        {Lisp-Entry "set-details" #f 52 45 52 53 ()}
        {Lisp-Entry "branch-changed" #f 64 11 64 25 ("update")}
        {Lisp-Entry "selection-changed" #f 68 11 68 28 ("generate-event?:" "row-rank" "list" "set-selection" "unspecified" "component-row" "row" "if" "set-client" "determine-client" "parent?" "client" "receive" "when" "car" "component" "let" "self" "eq?" "not" "or" "unless" "focus?" "force-parent?" "origin" "old" "selection")}
        {Lisp-Entry "selection-changed" #f 84 11 84 28 ("set-client" "generate-event?:" "set-selection" "Group" "is?" "not" "or" "when" "car" "component" "let" "focus?" "force-parent?" "origin" "old" "selection")}
        {Lisp-Entry "determine-client" #f 91 11 91 27 ("values" "null?" "or" "get-addable-classes" "and" "if" "get-parent" "parent" "let" "force-parent?" "component")}
        {Lisp-Entry "update" #f 103 11 103 17 ("insert-rows" "setup-columns" "function" "with-update-locked" "selected-components" "selected-components:" "get-expand-state" "expand-state" "expand-state:")}
        {Lisp-Entry "setup-columns" #f 110 11 110 24 ("width:" "title:" "name:" "Tree-Label-Column" "class:" "self" "context:" "add-column" "set-width" "set-title" "set-name" "get-node-column" "column" "begin" "when" "detail-presentation" "either" "error" "category-field" "property" "split-detail-path" "title" "name" "ignore" "receive" "filled?" "width" "path" "bind" "detail" "function" "for-each" "first?" "node-column" "get-name" "null?" "not" "or" "if" "preserve-node-column?:" "remove-columns" "set-filled-column" "get-addable-details" "details" "get-addable-base" "client" "essay" "base" "set!" "get-header" "header" "let")}
        {Lisp-Entry "insert-rows" #f 139 11 139 22 ("update-selection" "insert-components" "get-recursive-details?" "recursive?" "let" "client" "when" "remove-every-row" "selected-components" "expand-state")}
        {Lisp-Entry "insert-components" #f 147 11 147 28 ("get-presentation" "key:" "<" "sort" "sort-components?" "if" "insert-component" "Group" "is?" "unless" "child" "function" "for-each" "get-components" "components" "let" "recursive?" "father" "component")}
        {Lisp-Entry "insert-component" #f 157 29 157 45 ("insert-components" "user-data:" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "cons" "children" "title" "value" "property" "split-detail-path" "ignore" "name" "receive" "filled?" "width" "path" "Tree-Label" "if" "detail" "function" "map" "labels" "image:" "title:" "Tree-Node" "new" "node" "get-component-image" "ni" "present-property" "nt" "read-property" "nv" "category-field" "np" "car" "nn" "let*" "filled" "name-info" "set!" "not" "is?" "based?" "rest" "first" "bind" "details" "base" "and" "when" "row" "let" "recursive?" "father" "component")}
        {Lisp-Entry "split-detail-path" #f 186 11 186 28 ("child" "essay" "follow-submodels" "reverse!" "cons" "car" "string?" "subpath" "name" "title" "bind" "reverse" "reversed" "let" "values" "symbol?" "if" "path" "component" "base")}
        {Lisp-Entry "follow-submodels" #f 195 11 195 27 ("cdr" "car" "follow-submodels" "else" "get-class-form" "child" "get-model" "symbol?" "null?" "cond" "path" "model")}
        {Lisp-Entry "present-location" #f 204 11 204 27 ("get-presentation" "localize" "ascendant" "function" "map" "join" "null?" "if" "collect-ascendants" "cdr" "ascendants" "let" "component")}
        {Lisp-Entry "on-designer" #f 216 11 216 22 ("value:" "property:" "component:" "property-change" ":property-change" "child-remove" ":child-remove" "parent:" "child:" "get-property" "child-add" ":child-add" "get-kind" "case" "evt")}
        {Lisp-Entry "child-add" #f 223 11 223 20 ("insert-component" "function" "with-update-locked" "client" "neq?" "Group" "is?" "or" "unless" "parent" "child")}
        {Lisp-Entry "child-remove" #f 230 11 230 23 ("remove-row" "function" "with-update-locked" "when" "component-row" "row" "let" "client" "get-parent" "neq?" "Group" "is?" "or" "unless" "child")}
        {Lisp-Entry "property-change" #f 239 11 239 26 ("invalidate-cell" "set-title" "present-property" "title" "get-cell-data" "data" "Cell" "new" "cell" "let*" "get-user-data" "eq?" "rank" "row" "function" "for-each-visible-row" "when" "car" "key:" "field-name" "details" "find" "col" "let" "client" "get-parent" "neq?" "Group" "is?" "or" "unless" "value" "property" "component")}}}})
"Dimension-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Dimension-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Dimension-Row" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Dimension-Row" #f 43 20 43 33 ()
        {Lisp-Entry "present" #f 51 11 51 18 ("get-height" "get-width" "format" "size")}
        {Lisp-Entry "get-edited-value" #f 62 11 62 27 ("Dimension" "new" "height" "width" "bind" "editor" "get-string-content" "read-delimited-string" "list" "let")}
        {Lisp-Entry "edit" #f 69 11 69 15 ("get-tree" "expand/collapse" "get-height" "value" "get-width" "self" "add-row" "edit-in-cell")}
        {Lisp-Entry "close-editor" #f 77 11 77 23 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" #f 83 11 83 22 ("0" "get-sons" "cardinality" ">" "nextmethod" "or")}}}})
"Directory-Group-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Directory-Group-Row.jazz"} 1249913821
    {Lisp-Entry "jazz.designer.row.Directory-Group-Row" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Directory-Group-Row" #f 46 20 46 39 ()
        {Lisp-Entry "initialize" #f 54 11 54 21 ("group" "'group" "editor" "set-protocol" "nextmethod" "apply" "others" "parameters" "bind-keywords" "rest")}
        {Lisp-Entry "combo-choose" #f 65 11 65 23 ("focus-editor" "enter-edited-value" "Directory-Group" "new" "set-edited-value" "get-list" "essay" "directories:" "choose-directory" "directories" "get-edited-value" "actual" "let*")}}}})
"Directory-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Directory-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Directory-Row" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Directory-Row" #f 44 20 44 33 ()
        {Lisp-Entry "initialize" #f 52 11 52 21 ("dir" "'dir" "editor" "set-protocol" "nextmethod" "apply" "others" "parameters" "bind-keywords" "rest")}
        {Lisp-Entry "combo-choose" #f 63 11 63 23 ("focus-editor" "enter-edited-value" "set-edited-value" "choose-directory" "dir" "let")}}}})
"Dispatch-Designer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "designer" "Dispatch-Designer.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.designer.Dispatch-Designer" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "Dispatch-Designer" #f 43 20 43 37 ()}
      {Lisp-Entry "Dispatch-Designer" #f 49 20 49 37 ("initialize")
        {Lisp-Entry "designers" #f 52 8 52 17 ()}
        {Lisp-Entry "initialize" #f 60 11 60 21 ("install-designers" "nextmethod" "apply" "rest")}
        {Lisp-Entry "install-designers" #f 70 11 70 28 ("install-designer" "install-designer?" "when" "level" "descendant" "function" "reference" "for-each-descendant")}
        {Lisp-Entry "install-designer?" #f 77 26 77 43 ("component")}
        {Lisp-Entry "get-designer-class" #f 81 26 81 44 ("Designer")}
        {Lisp-Entry "install-designer" #f 85 11 85 27 ("add-project-designer" "reference:" "form:" "get-designer-class" "new" "designer" "get-self-form" "form" "project" "class-of" "class" "let*" "component")}
        {Lisp-Entry "add-designer" #f 92 11 92 23 ("cons" "designers" "set!" "designer" "component")}
        {Lisp-Entry "remove-designer" #f 96 11 96 26 ("assq" "remove!" "designers" "set!" "component")}
        {Lisp-Entry "get-designer" #f 100 21 100 33 ("designers" "assq-value" "component")}
        {Lisp-Entry "for-each-designer" #f 104 11 104 28 ("designers" "designer" "component" "bind" "pair" "function" "for-each" "proc")}
        {Lisp-Entry "project-add" #f 111 21 111 32 ("add-designer" "Project" "is?" "when" "level" "descendant" "function" "for-each-descendant" "project")}
        {Lisp-Entry "project-remove" #f 118 21 118 35 ("cleanup-project-designers" "project")}
        {Lisp-Entry "set-name" #f 130 11 130 19 ("set-name" "" "apply" "find-modification-designer" "designer" "let" "others" "use-owner?" "bind-keywords" "rest" "name" "component")}
        {Lisp-Entry "set-property" #f 136 11 136 23 ("set-property" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "use-owner?" "bind-keywords" "rest" "value" "property" "component")}
        {Lisp-Entry "add-child" #f 145 11 145 20 ("add-child" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "use-owner?" "bind-keywords" "rest" "parent" "child")}
        {Lisp-Entry "remove-child" #f 154 11 154 23 ("remove-child" "" "get-project-designer" "designer" "let" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parent" "parent" "let*" "rest" "child")}
        {Lisp-Entry "instantiate-parcels" #f 164 11 164 30 ("instantiate-parcels" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "let" "rest" "parent" "parcels")}
        {Lisp-Entry "move-components" #f 173 11 173 26 ("move-components" "" "get-project-designer" "designer" "rest" "nextmethod" "apply" "reference" "eq?" "if" "verify-name-conflicts" "package-components" "let*" "set-modified?" "descendant?:" "design-events?:" "name-resolution" "name-resolution:" "parcels" "instantiate-parcels" "prog1" "delete-components" "destination-owner" "get-parent" "find-modification-owner" "component" "function" "key:" "uniform" "owner" "let" "branch" "branch:" "destination" "components")}
        {Lisp-Entry "move-components" #f 189 11 189 26 ("set-modified?" "descendant?:" "design-events?:" "name-resolution:" "instantiate-parcels" "prog1" "delete-components" "verify-name-conflicts" "name-resolution" "package-components" "parcels" "let*" "branch" "branch:" "destination" "components")}
        {Lisp-Entry "cut-components" #f 202 11 202 25 ("cut-components" "get-project-designer" "designer" "let" "nextmethod" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parents" "parents" "let*" "components")}
        {Lisp-Entry "copy-components" #f 211 11 211 26 ("copy-components" "get-project-designer" "designer" "let" "nextmethod" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parents" "parents" "let*" "components")}
        {Lisp-Entry "paste-clipboard" #f 220 11 220 26 ("paste-clipboard" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "let" "rest" "parent")}
        {Lisp-Entry "get-parents" #f 228 11 228 22 ("get-parent" "component" "function" "map" "components")}
        {Lisp-Entry "find-modification-designer" #f 239 11 239 37 ("get-designer" "my-designer??" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "use-owner?" "components")}
        {Lisp-Entry "find-modification-owner" #f 246 11 246 34 ("car" "error" "1" "length" ">" "map" "remove-duplicates" "owners" "let" "pair?" "get-parent" "install-designer?" "reference" "eq?" "or" "if" "component" "function" "find-owner-project" "letrec" "components")}
        {Lisp-Entry "save-designer" #f 265 21 265 34 ("designer" "project" "function" "for-each-designer" "save" "set!" "get-modified?" "when" "some-modified?" "let")}}}})
"Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Domain.jazz"} 1249610738
    {Lisp-Entry "jazz.designer.domain.Domain" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Domain" #f 46 7 46 13 ("initialize" "nullable?")
        {Lisp-Entry "validate" #f 58 26 58 34 ("validate-value" "field-name" "property:" "class-of" "property-presentation" "localize" "format" "message:" "Integrity-Violation" "new" "add-violation" "nullable?" "when" "not" "if" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "validate-value" #f 65 26 65 40 ("manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 74 26 74 33 ("present" "'present" "unimplemented" "value")}
        {Lisp-Entry "setup-entry" #f 83 26 83 37 ("client" "view")}
        {Lisp-Entry "setup-list-entry" #f 87 26 87 42 ("client" "view")}
        {Lisp-Entry "get-property-value" #f 96 26 96 44 ("get-entry" "get-value" "view")}
        {Lisp-Entry "set-property-value" #f 100 26 100 44 ("get-entry" "set-value" "value" "view")}
        {Lisp-Entry "get-property-modified?" #f 104 26 104 48 ("get-entry" "get-modified?" "view")}
        {Lisp-Entry "set-property-modified?" #f 108 26 108 48 ("get-entry" "set-modified?" "value" "view")}}}})
"Domain-Chooser"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "choosers" "Domain-Chooser.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.choosers.Domain-Chooser" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Domain-Chooser" #f 49 20 49 34 ("on-cancel" "114" "cancel" "default?:" "on-ok" ":host" "action-handler:" "24" "80" "351" "30" "ok" "200" "width:" "display-images?:" "toplevel-controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" ":form" "Event-Handler" "return-press-handler:" ":icons" "portfolio:" "2" "top-padding:" "detail" "filled-column:" "names-tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "304" "33" "names-border" "Label" "name:" "Font" "font:" "16" "201" "9" "10" "Point" "position:" "title:" "388" "222" "Dimension" "size:" "set-selected" "get-selected" "set-names" "get-names" "initialize")
        {Lisp-Entry "names" #f 52 12 52 17 ()}
        {Lisp-Entry "selected" #f 53 12 53 20 ()}
        {Lisp-Entry "finish" #f 68 11 68 17 ("acquire-focus" "setup-names" "get-tree" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-names" #f 80 18 80 27 ("names")}
        {Lisp-Entry "set-names" #f 84 18 84 27 ("names" "set!" "value")}
        {Lisp-Entry "get-selected" #f 88 18 88 30 ("selected")}
        {Lisp-Entry "set-selected" #f 92 18 92 30 ("selected" "set!" "value")}
        {Lisp-Entry "get-tree" #f 96 11 96 19 ("names-tree" "'names-tree" "locate")}
        {Lisp-Entry "get-text" #f 100 11 100 19 ("text" "column-size" "locate")}
        {Lisp-Entry "host-title" #f 109 16 109 26 ()}
        {Lisp-Entry "host-position" #f 113 16 113 29 ("300" "450" "Point")}
        {Lisp-Entry "host-size" #f 117 16 117 25 ("120" "252" "Dimension")}
        {Lisp-Entry "on-return-press" #f 127 11 127 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" #f 133 11 133 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "setup-names" #f 143 11 143 22 ("names" "list" "children:" "add-row" "user-data:" "color:" "checked?:" "title:" "parent:" "font:" "Check-Box" "checkbox" "selected" "member?" "checked?" "cadr" "localize" "title" "car" "string?" "name" "Label" "Label-Bold" "Font" "filled" "'filled" "size" "eq?" "if" "font" "Black" "name:" "Color" "color" "4" "Rect" "layout-insets:" "fill" "'fill" "layout-type:" "Layout-View" "new" "layout" "0" "border" "let*" "info" "for-each" "remove-every-row" "function" "with-update-locked" "tree")}
        {Lisp-Entry "get-modal-result" #f 165 11 165 27 ("get-output" "put" "name" "get-checked?" "Check-Box" "is?" "and" "when" "get-user-data" "checkbox" "rank" "row" "function" "for-each-row" "List-Factory" "new" "fact" "get-tree" "tree" "let")}}}})
"Domain-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Domain-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Domain-Row" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Domain-Row" #f 45 20 45 30 ("initialize")
        {Lisp-Entry "domain" #f 48 12 48 18 ()}
        {Lisp-Entry "get-domain" #f 48 43 48 51 ()}
        {Lisp-Entry "set-domain" #f 48 43 48 51 ()}
        {Lisp-Entry "present" #f 56 11 56 18 ("value")}
        {Lisp-Entry "new-editor" #f 65 11 65 21 ("self" "value-row:" "Domain-Editor" "new" "editor" "let")}
        {Lisp-Entry "editor-class" #f 71 11 71 23 ("Color-Row-Editor")}
        {Lisp-Entry "get-edited-value" #f 75 11 75 27 ("Color" "parse-string" "body" "'body" "editor" "locate" "get-string-content" "content" "let")}
        {Lisp-Entry "set-edited-value" #f 80 11 80 27 ("color" "'color" "set-background" "present" "body" "'body" "editor" "locate" "set-string-content" "value")}
        {Lisp-Entry "get-edited-modified?" #f 85 11 85 31 ("body" "'body" "editor" "locate" "get-controller" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" #f 89 11 89 31 ("body" "'body" "editor" "locate" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" #f 93 11 93 22 ("body" "'body" "editor" "locate" "show-text-cursor")}
        {Lisp-Entry "focused-editor" #f 97 11 97 25 ("body" "'body" "editor" "locate")}}
      {Lisp-Entry "Domain-Editor" #f 106 7 106 20 ("set-value-row" "get-value-row" "initialize")
        {Lisp-Entry "value-row" #f 109 12 109 21 ()}
        {Lisp-Entry "get-value-row" #f 112 18 112 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 116 18 116 31 ("body" "'body" "locate" "set-value-row" "value-row" "set!" "value")}}}})
"Editor-Event"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "event" "Editor-Event.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.event.Editor-Event" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Editor-Event" #f 43 7 43 19 ()}}})
"Editor-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Editor-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Editor-Row" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Editor-Row" #f 43 20 43 30 ("initialize")
        {Lisp-Entry "editor" #f 46 8 46 14 ()}
        {Lisp-Entry "get-editor" #f 54 18 54 28 ("editor")}
        {Lisp-Entry "set-editor" #f 58 18 58 28 ("editor" "set!" "edt")}
        {Lisp-Entry "auto-inplace?" #f 67 11 67 24 ()}
        {Lisp-Entry "layout" #f 76 11 76 17 ("get-height" "get-width" "-" "Dimension" "set-size" "0" "Point" "new" "set-position" "1" "get-indentation" "level" "*" "12" "+" "width" "get-size" "size" "get-tree" "tree" "let*" "editor" "when")}
        {Lisp-Entry "draw" #f 90 11 90 15 ("get-height" "get-width" "self" "draw-level" "get-node-column" "column" "get-tree" "tree" "let*" "lv" "lh" "context" "surface")}}}})
"Editor-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Editor-View.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.Editor-View" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Editor-View" #f 51 20 51 31 ("set-client" "get-client" "initialize")
        {Lisp-Entry "client" #f 54 12 54 18 ()}
        {Lisp-Entry "designer" #f 57 8 57 16 ()}
        {Lisp-Entry "listeners" #f 58 8 58 17 ()}
        {Lisp-Entry "undoer" #f 59 8 59 14 ()}
        {Lisp-Entry "selection" #f 60 8 60 17 ()}
        {Lisp-Entry "controller" #f 61 8 61 18 ()}
        {Lisp-Entry "rights" #f 62 8 62 14 ()}
        {Lisp-Entry "default-extension" #f 65 11 65 28 ()}
        {Lisp-Entry "extensions" #f 66 11 66 21 ()}
        {Lisp-Entry "focus-document" #f 67 11 67 25 ()}
        {Lisp-Entry "current-history-item" #f 68 11 68 31 ()}
        {Lisp-Entry "get-editor-view" #f 71 11 71 26 ("self")}
        {Lisp-Entry "host-icon" #f 80 16 80 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 84 16 84 26 ()}
        {Lisp-Entry "install-in-host" #f 93 11 93 26 ("get-controller" "update-status" "nextmethod" "host")}
        {Lisp-Entry "install-scroller" #f 98 11 98 27 ()}
        {Lisp-Entry "position-host" #f 102 11 102 24 ("host")}
        {Lisp-Entry "get-controller" #f 111 11 111 25 ("new-controller" "set!" "controller" "unless")}
        {Lisp-Entry "new-controller" #f 117 11 117 25 ("self" "Editor-View-Controller" "new")}
        {Lisp-Entry "save" #f 121 11 121 15 ("get-controller" "save")}
        {Lisp-Entry "save-as" #f 125 11 125 18 ("get-controller" "save-as")}
        {Lisp-Entry "save-all" #f 129 26 129 34 ("get-controller" "save-all")}
        {Lisp-Entry "install-scroller?" #f 133 11 133 28 ()}
        {Lisp-Entry "get-moniker" #f 137 11 137 22 ("get-controller" "get-moniker")}
        {Lisp-Entry "set-moniker" #f 141 11 141 22 ("get-controller" "set-moniker" "moniker")}
        {Lisp-Entry "load-content" #f 145 11 145 23 ("set-client" "instantiate" "cpnt" "read-from-file" "form" "let*" "moniker")}
        {Lisp-Entry "verify-reload" #f 151 11 151 24 ()}
        {Lisp-Entry "reload-moniker" #f 155 11 155 25 ("moniker")}
        {Lisp-Entry "get-modified?" #f 159 11 159 24 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 163 11 163 24 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "set-controller-modified?" #f 167 29 167 53 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "update-status" #f 171 11 171 24 ("get-controller" "update-status")}
        {Lisp-Entry "update-moniker-time" #f 175 11 175 30 ("get-controller" "update-moniker-time" "moniker")}
        {Lisp-Entry "confirm-close" #f 179 11 179 24 ("get-controller" "confirm-close" "rest")}
        {Lisp-Entry "compare-moniker" #f 183 11 183 26 ("bring-to-front" "set-visible?" "get-guest" "compare-trees" "function" ":wait" "with-cursor" "right-moniker:" "left-moniker:" "host-visible?:" "Compare-Databases" "'Compare-Databases" "require-service" "new-frame" "frame" "right" "Document-Moniker" "new" "left" "let*" "moniker")}
        {Lisp-Entry "tool-update" #f 194 11 194 22 ("tool?")}
        {Lisp-Entry "console-update" #f 198 11 198 25 ("console?")}
        {Lisp-Entry "install" #f 207 11 207 18 ("on-editor" "'on-editor" "method-name:" "self" "target:" "Event-Handler" "new" "add-editor-listener" "nextmethod" "rest")}
        {Lisp-Entry "destroy" #f 217 11 217 18 ("nextmethod" "close-application-selected" "self" "remove-editor-listener" "controller" "close" "set-client")}
        {Lisp-Entry "new-form" #f 230 11 230 19 ()}
        {Lisp-Entry "open-form" #f 234 11 234 20 ("open-form" "instantiate" "set-client")}
        {Lisp-Entry "save-form" #f 239 11 239 20 ("edit-document" "file?" "when" "designer" "get-form" "get-origin" "origin" "get-application" "appl" "let" "save" "function" ":wait" "with-cursor")}
        {Lisp-Entry "edit-form" #f 249 11 249 20 ("view-component")}
        {Lisp-Entry "select-branch" #f 258 18 258 31 ("process-branch-changing" "function" ":wait" "with-cursor" "client" "get-active-branch" "either" "neq?" "when" "branch")}
        {Lisp-Entry "change-branch" #f 265 11 265 24 ("process-branch-changed" "get-client" "set-active-branch" "branch")}
        {Lisp-Entry "select-component" #f 275 11 275 27 ("edit-component" "bell" "not" "if" "selected-component" "component" "let" "descendants" "'descendants" "locate" "get-highlight-edited?" "and" "when" "control?" "tree")}
        {Lisp-Entry "property-change" #f 288 21 288 36 ("list" "undoer" "register-undo" "find-changed-property" "Info-Row" "subtype?" "or" "unless" "symbolize-property" "get-row-class" "row-class" "let" "when" "undoable?" "value" "property" "component" "branch")}
        {Lisp-Entry "find-changed-property" #f 296 21 296 42 ("eq?" "and" "prop" "cpn" "br" "bind" "action" "function" "find-if" "undoer" "get-undo-list" "undo-list" "symbolize-property" "let" "property" "component" "branch")}
        {Lisp-Entry "select-property" #f 307 18 307 33 ("process-property-selected" "property")}
        {Lisp-Entry "show-properties" #f 311 26 311 41 ("focus?:" "workspace:" "Properties-Manager" "select-palette")}
        {Lisp-Entry "get-selection" #f 320 18 320 31 ("selection")}
        {Lisp-Entry "set-selection" #f 324 18 324 31 ("update-focus-actions" "set-application-selected" "process-selection-changed" "process-selection-changing" "selection" "old" "get-application" "appl" "let" "focus?" "focus?:" "force?" "force?:" "force-parent?" "force-parent?:" "origin" "origin:" "new")}
        {Lisp-Entry "set-application-selected" #f 333 11 333 35 ("force?:" "self" "set-selected" "get-application" "appl" "let" "force?" "selected")}
        {Lisp-Entry "close-application-selected" #f 338 11 338 37 ("self" "close-selected" "get-application" "appl" "let")}
        {Lisp-Entry "select-all" #f 343 18 343 28 ("rest")}
        {Lisp-Entry "unselect-all" #f 347 18 347 30 ("set-selection")}
        {Lisp-Entry "select" #f 351 18 351 24 ("cons" "list" "append" "remove" "set-selection" "selection" "memq?" "shift-down?" "if" "focus?" "focus?:" "component")}
        {Lisp-Entry "selection-changed" #f 361 29 361 46 ("length" "0" "naturals" "select" "rank" "unselect" "get-surrogate" "surrogate" "let" "Component" "is?" "when" "component" "function" "for-each" "selection" "set!" "focus?" "force-parent?" "origin" "new" "old")}
        {Lisp-Entry "cleanup-selection" #f 379 11 379 28 ("not" "component" "function" "collect-if" "set-selection" "selection" "object-destroyed?" "some?" "when")}
        {Lisp-Entry "save-content" #f 391 11 391 23 ("process-saved" "set-modified?" "update-status" "get-modified?" "not" "if" "update-moniker-time" "branch:" "get-base" "get-client" "set-name" "designer" "save-to" "process-saving" "moniker")}
        {Lisp-Entry "save-content-patch" #f 403 18 403 36 ("set-modified?" "update-status" "get-modified?" "not" "if" "update-moniker-time" "designer-save" "process-saving" "moniker")}
        {Lisp-Entry "designer-save" #f 412 29 412 42 ("designer" "save")}
        {Lisp-Entry "view-component" #f 421 11 421 25 ("edit-form" "bell" "designer" "not" "if")}
        {Lisp-Entry "on-editor" #f 432 29 432 38 ("selection-changed" "get-user-origin?" "focus?" "get-force-parent?" "force-parent?" "get-origin" "origin" "get-selection" "get-old" "old" ":selection-changed" "designer" "save-component-properties" "Component" "is?" "car" "cpn" "let" "selection" "not-null?" "when" ":saving" ":selection-changing" "cleanup-selection" ":branch-changed" "branch:" "get-property" "change-branch" ":branch-changing" "get-kind" "case" "evt")}
        {Lisp-Entry "get-client" #f 457 18 457 28 ("client")}
        {Lisp-Entry "set-client" #f 461 18 461 28 ("client-updated" "edit-component" "process-client-change" "client-update" "self" "Editor-Undoer" "new" "essay" "undoer" "set!" "remove-surrogate" "old" "let" "client" "neq?" "when" "clt")}
        {Lisp-Entry "client-update" #f 474 29 474 42 ("install-client-surrogate")}
        {Lisp-Entry "client-updated" #f 478 29 478 43 ()}
        {Lisp-Entry "install-client-surrogate" #f 482 29 482 53 ()}
        {Lisp-Entry "get-designer-class" #f 491 29 491 47 ("Designer")}
        {Lisp-Entry "get-designer" #f 495 18 495 30 ("designer")}
        {Lisp-Entry "get-reference" #f 499 18 499 31 ("get-reference" "designer" "essay")}
        {Lisp-Entry "edit-component" #f 503 18 503 32 ("update-status" "process-designer-change" "install-current-designer" "uninstall-current-designer" "designer" "old" "let" "get-reference" "neq?" "when" "get-edited-form" "form" "form:" "component")}
        {Lisp-Entry "get-edited-form" #f 513 11 513 26 ("class-of" "get-self-form" "get-origin" "file?" "and" "if" "get-form" "component-form" "let" "when" "component")}
        {Lisp-Entry "install-current-designer" #f 521 29 521 53 ("client" "install-designer" "on-designer" "'on-designer" "method-name:" "self" "target:" "Event-Handler" "add-designer-listener" "reference:" "form:" "get-designer-class" "new" "designer" "set!" "form" "component")}
        {Lisp-Entry "uninstall-current-designer" #f 527 29 527 55 ("set!" "uninstall-designer" "client" "self" "remove-designer-listener" "designer" "when")}
        {Lisp-Entry "on-designer" #f 535 29 535 40 (":send-before" ":child-remove" ":child-add" "set-controller-modified?" "undoable?:" "value:" "property:" "component:" "branch:" "get-property" "property-change" ":property-change" "case" "get-kind" "kind" "let" "evt")}
        {Lisp-Entry "add-editor-listener" #f 550 18 550 37 ("add-listener" "listeners" "set!" "listener")}
        {Lisp-Entry "remove-editor-listener" #f 554 18 554 40 ("remove-listener" "listeners" "set!" "listener")}
        {Lisp-Entry "process-client-change" #f 558 11 558 32 ("invoke" "listener" "function" "for-each" "client:" "old:" "self" ":client-change" "Editor-Event" "new" "evt" "let" "listeners" "when" "client" "old")}
        {Lisp-Entry "process-designer-change" #f 566 11 566 34 ("invoke" "listener" "function" "for-each" "designer:" "old:" "self" ":designer-change" "Editor-Event" "new" "evt" "let" "listeners" "when" "designer" "old")}
        {Lisp-Entry "process-branch-changing" #f 574 18 574 41 ("invoke" "listener" "function" "for-each" "branch:" "self" ":branch-changing" "Editor-Event" "new" "evt" "let" "listeners" "when" "branch")}
        {Lisp-Entry "process-branch-changed" #f 582 18 582 40 ("invoke" "listener" "function" "for-each" "branch:" "self" ":branch-changed" "Editor-Event" "new" "evt" "let" "listeners" "when" "branch")}
        {Lisp-Entry "process-selection-changing" #f 590 18 590 44 ("invoke" "listener" "function" "for-each" "user-origin?:" "force?:" "force-parent?:" "origin:" "self" ":selection-changing" "Selection-Event" "new" "evt" "let" "listeners" "when" "user-origin?" "force?" "force-parent?" "origin" "selection" "old")}
        {Lisp-Entry "process-selection-changed" #f 598 18 598 43 ("invoke" "listener" "function" "for-each" "user-origin?:" "force?:" "force-parent?:" "origin:" "self" ":selection-changed" "Selection-Event" "new" "evt" "let" "listeners" "when" "user-origin?" "force?" "force-parent?" "origin" "selection" "old")}
        {Lisp-Entry "process-property-selected" #f 606 18 606 43 ("invoke" "listener" "function" "for-each" "property:" "self" ":property-selected" "Editor-Event" "new" "evt" "let" "listeners" "when" "property")}
        {Lisp-Entry "process-saving" #f 614 18 614 32 ("invoke" "listener" "function" "for-each" "self" ":saving" "Editor-Event" "new" "evt" "let" "listeners" "when")}
        {Lisp-Entry "process-saved" #f 622 18 622 31 ("invoke" "listener" "function" "for-each" "self" ":saved" "Editor-Event" "new" "evt" "let" "listeners" "when")}
        {Lisp-Entry "get-rights" #f 635 18 635 28 ("rights")}
        {Lisp-Entry "set-rights" #f 639 18 639 28 ("rights" "set!" "value")}
        {Lisp-Entry "editor-title" #f 648 26 648 38 ("class-of" "type-name" "format" "not" "if" "get-reference" "reference" "let")}}
      {Lisp-Entry "Editor-Undoer" #f 660 7 660 20 ()
        {Lisp-Entry "play-action" #f 663 11 663 22 ("play-action" "'play-action" "unimplemented" "action")}}}})
"Editor-View-Controller"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Editor-View-Controller.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.Editor-View-Controller" #f 37 19 37 62 ("jazz")
      {Lisp-Entry "Editor-View-Controller" #f 45 20 45 42 ()
        {Lisp-Entry "save" #f 49 11 49 15 ("document" "save-content-patch")}
        {Lisp-Entry "name-status" #f 53 11 53 22 ("type-name" "get-name" "file?" "get-origin" "origin" "get-form" "form" "newname" "not" "if" "document" "get-designer" "designer" "let")}
        {Lisp-Entry "update-moniker-time" #f 68 11 68 30 ("moniker")}}}})
"Enumeration-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Enumeration-Domain.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.domain.Enumeration-Domain" #f 37 19 37 58 ("jazz")
      {Lisp-Entry "Enumeration-Domain" #f 46 7 46 25 ("limit" "strict?" "condensed?" "choices" "100" "initialize" "width" "nullable?")
        {Lisp-Entry "validate-value" #f 62 11 62 25 ("property:" "present-choice" "map" "join" "format" "message:" "Integrity-Violation" "new" "add-violation" "car" "key:" "choices" "member?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present-choice" #f 67 11 67 25 ("cadr" "localize" "car" "cdr" "not" "if" "choice")}
        {Lisp-Entry "present" #f 78 11 78 18 ("cadr" "localize" "choices" "assq" "pair" "let" "not" "if" "value")}
        {Lisp-Entry "setup-entry" #f 92 11 92 22 ("choices" "combo" "'combo" "locate" "set-choices" "self" "domain:" "19" "width" "Dimension" "size:" "parent:" "Enumeration-Entry" "new" "entry" "let" "client" "view")}
        {Lisp-Entry "setup-list-entry" #f 97 11 97 27 ("choices" "setup" "self" "domain:" "parent:" "Enumeration-List-Entry" "new" "entry" "let" "client" "view")}}}})
"Enumeration-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Enumeration-Entry.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.entry.Enumeration-Entry" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Enumeration-Entry" #f 49 7 49 24 ("Label" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "body" "focusable?:" "condensed?:" "combo" "entry" "style:" "edge" "border-type:" "border" "name:")
        {Lisp-Entry "finish" #f 59 11 59 17 ("self" "body" "set-editor" "string-di=?" "combo" "'combo" "locate" "set-entry-test" "nextmethod" "rest")}
        {Lisp-Entry "tab-view" #f 70 11 70 19 ("body" "combo" "locate")}
        {Lisp-Entry "validate" #f 79 11 79 19 ("else" "format-plural" "format" "tie" "string-length" ">" "string?" "get-nullable?" "nil?" "cond" "value" "french:" "english:" "Locales" "message:" "Property-Violation" "new" "car" "key:" "get-value" "member?" "combo" "'combo" "locate" "valid-value?" "not" "get-strict?" "and" "if" "get-limit" "limit" "get-choices" "choices" "let" "domain")}
        {Lisp-Entry "get-value" #f 104 11 104 20 ("combo" "'combo" "locate" "get-value")}
        {Lisp-Entry "set-value" #f 108 11 108 20 ("combo" "'combo" "locate" "set-value" "value")}
        {Lisp-Entry "get-modified?" #f 112 11 112 24 ("combo" "'combo" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 116 11 116 24 ("combo" "'combo" "locate" "set-modified?" "value")}
        {Lisp-Entry "set-editable?" #f 125 11 125 24 ("combo" "'combo" "set-editable?" "none" "'none" "edge" "'edge" "if" "border" "'border" "locate" "set-border-type" "value")}}}})
"Enumeration-List-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Enumeration-List-Entry.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.entry.Enumeration-List-Entry" #f 37 19 37 61 ("jazz")
      {Lisp-Entry "Enumeration-List-Entry" #f 47 7 47 29 ("200" "width:" "toplevel-controls?:" "controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" ":form" "Event-Handler" "return-press-handler:" ":icons" "portfolio:" "entry" "filled-column:" "show-header?:" "tree" "document" "style:" "shown?:" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "border" "name:")
        {Lisp-Entry "setup" #f 66 21 66 26 ("patch-tree" "list" "children:" "add-row" "user-data:" "color:" "title:" "parent:" "font:" "Check-Box" "checkbox" "Label" "Label-Bold" "Font" "filled" "'filled" "size" "eq?" "if" "font" "Black" "name:" "Color" "color" "4" "Rect" "layout-insets:" "fill" "'fill" "layout-type:" "Layout-View" "new" "layout" "0" "border" "title" "get-name" "name" "let*" "component" "for-each" "remove-every-row" "function" "with-update-locked" "'tree" "locate" "tree" "get-creator" "child" "get-children" "components" "let" "key" "client")}
        {Lisp-Entry "patch-tree" #f 86 18 86 28 ("layout-drawing" "rank" "row" "function" "for-each-visible-row" "'tree" "locate" "tree" "let")}
        {Lisp-Entry "get-value" #f 98 11 98 20 ("get-output" "put" "get-checked?" "when" "name" "checkbox" "row" "function" "for-each-checkbox" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "set-value" #f 107 11 107 20 ("set-checked?" "member?" "checked?" "let" "name" "checkbox" "row" "function" "for-each-checkbox" "value")}
        {Lisp-Entry "get-modified?" #f 114 11 114 24 ("continuation-return" "get-modified?" "when" "name" "checkbox" "row" "for-each-checkbox" "return" "function" "continuation-capture")}
        {Lisp-Entry "set-modified?" #f 124 11 124 24 ("set-modified?" "name" "checkbox" "row" "function" "for-each-checkbox" "value")}
        {Lisp-Entry "for-each-checkbox" #f 135 11 135 28 ("name" "Check-Box" "is?" "when" "get-user-data" "checkbox" "rank" "row" "function" "for-each-row" "'tree" "locate" "tree" "let" "proc")}}}})
"Enumeration-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Enumeration-Row.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.row.Enumeration-Row" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Enumeration-Row" #f 46 20 46 35 ("set-list?" "get-list?" "initialize")
        {Lisp-Entry "list?" #f 50 12 50 17 ()}
        {Lisp-Entry "initialize" #f 58 11 58 21 ("choose" "'choose" "set-kind" "list?~self" "choices~self" "set!" "nextmethod" "apply" "others" "list?" "choices" "bind-keywords" "rest")}
        {Lisp-Entry "get-list?" #f 71 18 71 27 ("list?")}
        {Lisp-Entry "set-list?" #f 75 18 75 27 ("list?" "set!" "value")}
        {Lisp-Entry "combo-choose" #f 84 11 84 23 ("focus-editor" "enter-edited-value" "set-edited-value" "selected:" "choices" "names:" "Domain-Chooser" "get-modal" "value" "let")}
        {Lisp-Entry "present" #f 97 11 97 18 ("choices" "assq" "cadr" "localize" "name" "function" "map" "join" "null?" "if" "names")}
        {Lisp-Entry "get-edited-value" #f 111 11 111 27 ("equal?" "test:" "cadr" "localize" "info" "key:" "choices" "find-in" "car" "title" "function" "map" "parse-strings" "strings" "=" "empty-string?" "or" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" #f 121 11 121 27 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"File-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "File-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.File-Row" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "File-Row" #f 44 20 44 28 ("set-parameters" "get-parameters" "set-mode" "get-mode")
        {Lisp-Entry "mode" #f 47 12 47 16 ()}
        {Lisp-Entry "parameters" #f 48 12 48 22 ()}
        {Lisp-Entry "initialize" #f 56 11 56 21 ("set-parameters" "set-mode" "file" "'file" "editor" "set-protocol" "nextmethod" "apply" "others" "parameters" "open" "'open" "mode" "bind-keywords" "rest")}
        {Lisp-Entry "get-mode" #f 69 18 69 26 ("editor" "get-mode")}
        {Lisp-Entry "set-mode" #f 73 18 73 26 ("editor" "set-mode" "value")}
        {Lisp-Entry "get-parameters" #f 77 18 77 32 ("editor" "get-parameters")}
        {Lisp-Entry "set-parameters" #f 81 18 81 32 ("editor" "set-parameters" "value")}
        {Lisp-Entry "combo-choose" #f 90 11 90 23 ("focus-editor" "enter-edited-value" "set-edited-value" "parameters" "choose-file" "apply" "file" "let")}}}})
"Font-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Font-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Font-Row" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Font-Row" #f 43 20 43 28 ()
        {Lisp-Entry "initialize" #f 46 11 46 21 ("Fonts" "list" "->string" "title" "Font" "dispatch" "font" "let" "name" "function" "map" "set-choices" "nextmethod" "apply" "rest")}}}})
"Foreign-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Foreign-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Foreign-Domain" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Foreign-Domain" #f 43 7 43 21 ()}
      {Lisp-Entry "Foreign-Domain" #f 49 7 49 21 ("criteria" "objects" "initialize" "key" "nullable?")
        {Lisp-Entry "validate-value" #f 63 11 63 25 ("property:" "violation-message" "message:" "Integrity-Violation" "new" "add-violation" "member?" "not" "when" "key" "foreign-values" "values" "let" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "foreign-values" #f 69 11 69 25 ("criteria" "search-descendants" "component-name" "map" "child" "foreign" "let" "key" "client")}
        {Lisp-Entry "violation-message" #f 74 29 74 46 ("else" "join" "pair?" "key" "not" "cond" "format" "value")}
        {Lisp-Entry "present" #f 87 11 87 18 ("join" "pair?" "not" "if" "value")}
        {Lisp-Entry "setup-entry" #f 100 11 100 22 ("key" "foreign-choices" "combo" "'combo" "locate" "set-choices" "self" "domain:" "parent:" "Foreign-Entry" "new" "entry" "let" "client" "view")}
        {Lisp-Entry "foreign-choices" #f 105 11 105 26 ("list" "get-name" "name" "component" "function" "map" "child" "get-children" "either" "objects" "let" "key" "client")}
        {Lisp-Entry "setup-list-entry" #f 113 11 113 27 ("key" "setup" "parent:" "Foreign-List-Entry" "new" "entry" "let" "client" "view")}}}})
"Foreign-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Foreign-Entry.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.entry.Foreign-Entry" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Foreign-Entry" #f 46 7 46 20 ("Label" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "body" "combo" "edge" "border-type:" "border" "name:")
        {Lisp-Entry "get-value" #f 61 11 61 20 ("combo" "'combo" "locate" "get-value")}
        {Lisp-Entry "set-value" #f 65 11 65 20 ("combo" "'combo" "locate" "set-value" "value")}
        {Lisp-Entry "get-modified?" #f 69 11 69 24 ("combo" "'combo" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 73 11 73 24 ("combo" "'combo" "locate" "set-modified?" "value")}}}})
"Foreign-List-Chooser"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "choosers" "Foreign-List-Chooser.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.choosers.Foreign-List-Chooser" #f 37 19 37 62 ("jazz")
      {Lisp-Entry "Foreign-List-Chooser" #f 46 20 46 40 ("on-cancel" "222" "cancel" "default?:" "on-ok" ":host" "Event-Handler" "action-handler:" "24" "80" "268" "138" "title:" "ok" "8" "253" "230" "430" "10" "Point" "position:" "entry" "name:" "305" "450" "Dimension" "size:" "initialize")
        {Lisp-Entry "foreign" #f 49 12 49 19 ()}
        {Lisp-Entry "get-foreign" #f 49 55 49 63 ()}
        {Lisp-Entry "set-foreign" #f 49 55 49 63 ()}
        {Lisp-Entry "foreign-objects" #f 50 12 50 27 ()}
        {Lisp-Entry "get-foreign-objects" #f 50 55 50 63 ()}
        {Lisp-Entry "set-foreign-objects" #f 50 55 50 63 ()}
        {Lisp-Entry "key" #f 51 12 51 15 ()}
        {Lisp-Entry "get-key" #f 51 55 51 63 ()}
        {Lisp-Entry "set-key" #f 51 55 51 63 ()}
        {Lisp-Entry "list?" #f 52 12 52 17 ()}
        {Lisp-Entry "get-list?" #f 52 55 52 63 ()}
        {Lisp-Entry "set-list?" #f 52 55 52 63 ()}
        {Lisp-Entry "allow-duplicates?" #f 53 12 53 29 ()}
        {Lisp-Entry "get-allow-duplicates?" #f 53 55 53 63 ()}
        {Lisp-Entry "set-allow-duplicates?" #f 53 55 53 63 ()}
        {Lisp-Entry "all" #f 54 12 54 15 ()}
        {Lisp-Entry "get-all" #f 54 55 54 63 ()}
        {Lisp-Entry "set-all" #f 54 55 54 63 ()}
        {Lisp-Entry "value" #f 55 12 55 17 ()}
        {Lisp-Entry "get-value" #f 55 55 55 63 ()}
        {Lisp-Entry "set-value" #f 55 55 55 63 ()}
        {Lisp-Entry "finish" #f 66 11 66 17 ("value" "set-value" "allow-duplicates?" "set-allow-duplicates?" "list?" "set-list?" "all" "get-children" "foreign-objects" "null?" "key" "map" "foreign" "if" "set-all" "present" "entry" "'entry" "locate" "set-presenter" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" #f 75 11 75 26 ("list?" "if" "get-host" "set-title" "entry" "'entry" "locate" "guest-installed-in-host" "nextmethod" "host")}
        {Lisp-Entry "present" #f 88 11 88 18 ("join" "atom?" "if" "object")}
        {Lisp-Entry "get-modal-result" #f 99 11 99 27 ("entry" "'entry" "locate" "get-result")}}}})
"Foreign-List-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Foreign-List-Entry.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.entry.Foreign-List-Entry" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Foreign-List-Entry" #f 46 7 46 25 ("to-entry" "to-tree" "to-border" "on-remove" "remove" "on-add" "action-handler:" "22" "80" "title:" "add" "200" "width:" "display-images?:" "toplevel-controls?:" "controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-tab-press" "tab-press-handler:" "on-double-click" "double-click-handler:" "on-selection-change" ":form" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "show-unfocused-selection?:" "multiple-selection?:" "row" "selection-mode:" "from-entry" "filled-column:" "show-header?:" "from-tree" "document" "style:" "shown?:" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "from-border" "name:" "320" "352" "Dimension" "size:" "set-value" "get-value" "set-all" "get-all" "set-presenter" "get-presenter" "set-allow-duplicates?" "get-allow-duplicates?" "set-list?" "get-list?" "initialize")
        {Lisp-Entry "list?" #f 49 12 49 17 ()}
        {Lisp-Entry "allow-duplicates?" #f 50 12 50 29 ()}
        {Lisp-Entry "presenter" #f 51 12 51 21 ()}
        {Lisp-Entry "all" #f 52 12 52 15 ()}
        {Lisp-Entry "value" #f 53 12 53 17 ()}
        {Lisp-Entry "to" #f 56 8 56 10 ()}
        {Lisp-Entry "guest-installed-in-host" #f 79 21 79 44 ("focus-and-select" "from-tree" "'from-tree" "locate" "tree" "let")}
        {Lisp-Entry "host-title" #f 89 16 89 26 ()}
        {Lisp-Entry "host-position" #f 93 16 93 29 ("300" "450" "Point")}
        {Lisp-Entry "host-size" #f 97 16 97 25 ("320" "252" "Dimension")}
        {Lisp-Entry "get-result" #f 106 18 106 28 ("<" "sort" "list?" "if" "to->value" "value" "let")}
        {Lisp-Entry "get-presenter" #f 118 18 118 31 ("presenter")}
        {Lisp-Entry "set-presenter" #f 122 18 122 31 ("update" "presenter" "set!" "value")}
        {Lisp-Entry "get-all" #f 127 18 127 25 ("all")}
        {Lisp-Entry "set-all" #f 131 18 131 25 ("update" "all" "set!" "value")}
        {Lisp-Entry "get-value" #f 136 11 136 20 ("value")}
        {Lisp-Entry "set-value" #f 140 11 140 20 ("update" "value->to" "to" "value" "set!" "v")}
        {Lisp-Entry "get-list?" #f 146 18 146 27 ("list?")}
        {Lisp-Entry "set-list?" #f 150 18 150 27 ("from-tree" "'from-tree" "set-multiple-selection?" "if" "add" "'add" "locate" "set-title" "value->to" "to" "list?" "set!" "value")}
        {Lisp-Entry "get-allow-duplicates?" #f 157 18 157 39 ("allow-duplicates?")}
        {Lisp-Entry "set-allow-duplicates?" #f 161 18 161 39 ("allow-duplicates?" "set!" "value")}
        {Lisp-Entry "value->to" #f 166 11 166 20 ("list" "not" "value" "list?" "if")}
        {Lisp-Entry "to->value" #f 175 11 175 20 ("car" "not" "to" "list?" "if")}
        {Lisp-Entry "setup" #f 188 21 188 26 ("get-children" "get-name" "component" "function" "map" "set-all" "get-creator" "child" "foreign" "let" "key" "client")}
        {Lisp-Entry "layout" #f 200 11 200 17 ("30" "remove" "'remove" "10" "+" "add" "'add" "Dimension" "set-size" "0" "Point" "new" "set-position" "52" "buttons-pos" "2" "100" "-" "quotient" "tree-width" "to-border" "'to-border" "to" "from-border" "'from-border" "locate" "from" "get-height" "height" "get-width" "width" "get-size" "size" "let*")}
        {Lisp-Entry "on-selection-change" #f 221 11 221 30 ("update-buttons" "evt")}
        {Lisp-Entry "on-double-click" #f 225 11 225 26 ("on-remove" "remove" "'remove" "to-tree" "on-add" "add" "'add" "locate" "get-enabled?" "when" "from-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-add" #f 232 11 232 17 ("set-modified?" "acquire-focus" "user-data-indexes" "set-selection" "allow-duplicates?" "update" "append" "list?" "if" "to" "set!" "get-selected-data" "values" "'to-tree" "to-tree" "'from-tree" "locate" "from-tree" "let*" "evt")}
        {Lisp-Entry "on-remove" #f 245 11 245 20 ("set-modified?" "user-data-indexes" "set-selection" "acquire-focus" "allow-duplicates?" "unless" "update" "difference" "to" "set!" "get-selected-data" "values" "'to-tree" "to-tree" "'from-tree" "locate" "from-tree" "let*" "evt")}
        {Lisp-Entry "update-buttons" #f 257 11 257 25 ("remove" "'remove" "add" "'add" "set-enabled?" "to?" "'to-tree" "to-tree" "get-selection" "from?" "'from-tree" "locate" "from-tree" "let*")}
        {Lisp-Entry "on-tab-press" #f 266 11 266 23 ("'from-tree" "to-tree" "'to-tree" "locate" "focus-and-select" "from-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-return-press" #f 276 11 276 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" #f 282 11 282 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update" #f 292 11 292 17 ("update-buttons" "update-to" "update-from")}
        {Lisp-Entry "update-from" #f 298 11 298 22 ("equal?" "test:" "to" "difference" "all" "allow-duplicates?" "if" "<" "sort" "user-data:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "present" "title" "object" "for-each" "remove-every-row" "function" "with-update-locked" "'from-tree" "locate" "from-tree" "let")}
        {Lisp-Entry "update-to" #f 309 11 309 20 ("to" "<" "sort" "user-data:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "present" "title" "object" "for-each" "remove-every-row" "function" "with-update-locked" "'to-tree" "locate" "to-tree" "let")}
        {Lisp-Entry "present" #f 320 11 320 18 ("presenter" "not" "if" "object")}}}})
"Foreign-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Foreign-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Foreign-Row" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Foreign-Row" #f 45 20 45 31 ("set-allow-duplicates?" "get-allow-duplicates?" "set-list?" "get-list?" "set-key" "get-key" "set-foreign-objects" "get-foreign-objects" "set-foreign" "get-foreign")
        {Lisp-Entry "foreign" #f 48 12 48 19 ()}
        {Lisp-Entry "foreign-objects" #f 49 12 49 27 ()}
        {Lisp-Entry "key" #f 50 12 50 15 ()}
        {Lisp-Entry "list?" #f 51 12 51 17 ()}
        {Lisp-Entry "allow-duplicates?" #f 52 12 52 29 ()}
        {Lisp-Entry "initialize" #f 60 11 60 21 ("choose" "'choose" "set-kind" "allow-duplicates?~self" "list?~self" "component-name" "either" "key~self" "foreign-objects~self" "foreign~self" "set!" "nextmethod" "apply" "others" "allow-duplicates?" "list?" "key" "foreign-objects" "foreign" "bind-keywords" "rest")}
        {Lisp-Entry "get-foreign" #f 76 18 76 29 ("foreign")}
        {Lisp-Entry "set-foreign" #f 80 18 80 29 ("foreign-objects" "foreign-choices" "set-choices" "foreign" "set!" "value")}
        {Lisp-Entry "get-foreign-objects" #f 85 18 85 37 ("foreign-objects")}
        {Lisp-Entry "set-foreign-objects" #f 89 18 89 37 ("foreign" "foreign-choices" "set-choices" "foreign-objects" "set!" "value")}
        {Lisp-Entry "get-key" #f 94 18 94 25 ("key")}
        {Lisp-Entry "set-key" #f 98 18 98 25 ("key" "set!" "value")}
        {Lisp-Entry "get-list?" #f 102 18 102 27 ("list?")}
        {Lisp-Entry "set-list?" #f 106 18 106 27 ("list?" "set!" "value")}
        {Lisp-Entry "get-allow-duplicates?" #f 110 18 110 39 ("allow-duplicates?")}
        {Lisp-Entry "set-allow-duplicates?" #f 114 18 114 39 ("allow-duplicates?" "set!" "value")}
        {Lisp-Entry "foreign-choices" #f 118 11 118 26 ("get-children" "null?" "if" "list" "key" "name" "let" "component" "function" "map" "when" "foreign-objects" "foreign")}
        {Lisp-Entry "combo-choose" #f 133 11 133 23 ("focus-editor" "enter-edited-value" "set-edited-value" "value:" "allow-duplicates?" "allow-duplicates?:" "list?" "list?:" "key" "key:" "foreign-objects" "foreign-objects:" "foreign" "foreign:" "Foreign-List-Chooser" "get-modal" "value" "let")}
        {Lisp-Entry "present" #f 146 11 146 18 ("atom?" "key" "function" "map" "else" "join" "pair?" "if" "list?" "not" "cond" "value")}
        {Lisp-Entry "parse-string" #f 162 11 162 23 ("split" "find-in" "if" "string")}
        {Lisp-Entry "get-edited-value" #f 173 11 173 27 ("parse-strings" "map" "parse-string" "list?" "not" "=" "empty-string?" "or" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" #f 182 11 182 27 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Formatted-Text-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Formatted-Text-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Formatted-Text-Row" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Formatted-Text-Row" #f 43 20 43 38 ()
        {Lisp-Entry "new-editor" #f 51 11 51 21 ("editor-class" "new")}
        {Lisp-Entry "editor-class" #f 55 11 55 23 ("Row-Formatted-Text-View")}
        {Lisp-Entry "editor-height" #f 59 11 59 24 ("250")}}}})
"Group-Card"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "card" "Group-Card.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.card.Group-Card" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Group-Card" #f 47 20 47 30 ("classes-invite" "classes-image" "501" "346" "classes-group" "64" "sort?" "Label" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "title" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "19" "262" "33" "61" "title-border" "16" "250" "48" "general-invite" "visible?:" "Bitmap-Resource" "image-name:" ":large-icons" "portfolio:" "32" "8" "general-image" "347" "334" "0" "7" "title:" "general-group" "name:" "350" "850" "Dimension" "size:" "107" "184" "Point" "position:")
        {Lisp-Entry "Properties-Mapping" #f 72 14 72 32 ("boolean" "sort?" "string" "title")}
        {Lisp-Entry "get-properties-mapping" #f 77 11 77 33 ("Properties-Mapping")}
        {Lisp-Entry "resize" #f 86 11 86 17 ("classes-group" "'classes-group" "0" "general-group" "'general-group" "locate" "size-figure" "dv" "dh")}}}})
"Handler-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Handler-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Handler-Row" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Handler-Row" #f 45 20 45 31 ()
        {Lisp-Entry "get-filter-name" #f 53 16 53 31 ("handlers" "'handlers")}
        {Lisp-Entry "get-filter-rank" #f 57 16 57 31 ("2")}
        {Lisp-Entry "get-filter-image" #f 61 16 61 32 ("Bitmap-Resource")}
        {Lisp-Entry "double-click" #f 70 11 70 23 ("edit-definitions" "pos")}
        {Lisp-Entry "present" #f 79 11 79 18 ("get-preserved" "Surrogate-Handler" "is?" "if" "present-handler" "value")}
        {Lisp-Entry "present-handler" #f 83 11 83 26 ("format" "->string" ":form" "eq?" "get-method-name" "method" "get-target-name" "target" "let" "not" "if" "handler")}
        {Lisp-Entry "get-edited-value" #f 98 11 98 27 ("second" "2" "first" "method-name:" ":form" "target-name:" "Event-Handler" "new" "1" "length" "case" "read-string-content" "list" "string=?" "if" "editor" "get-string-content" "content" "let")}
        {Lisp-Entry "edit-definitions" #f 113 11 113 27 ("Jazz-Field-Entry" "entry" "edit" "Jazz-Entry" "get-category-location" "Jazz-Code-Location" "new" "location" "let" "get-method-name" "category-field" "field" "find-target-type" "class" "find-target" "target" "bell" "not" "if" "property" "read-property" "handler" "get-client" "car" "client" "let*" "edit-definitions" "'edit-definitions" "unimplemented")}
        {Lisp-Entry "get-menu-class" #f 135 11 135 25 ("Handler-Menu")}}
      {Lisp-Entry "Handler-Menu" #f 144 7 144 19 ("on-edit" ":form" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "edit" "name:")
        {Lisp-Entry "on-edit" #f 152 11 152 18 ("value-row" "edit-definitions" "evt")}}}})
"Index-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Index-Tree.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.Index-Tree" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Index-Tree" #f 46 20 46 30 ("kind" "275" "location" "toplevel-controls?:" "100" "width:" "title:" "name:" "on-selection-change" ":self" "Event-Handler" "selection-handler:" "can-select-empty?:" "multiple-selection?:" "row" "selection-mode:" ":icons" "portfolio:" "component" "filled-column:")
        {Lisp-Entry "selection-changed" #f 61 11 61 28 ("focus?" "force-parent?" "origin" "old" "component")}
        {Lisp-Entry "on-designer" #f 70 11 70 22 ("update" ":property-change" ":child-remove" ":child-add" "get-kind" "case" "evt")}
        {Lisp-Entry "update" #f 81 11 81 17 ("get-presentation" "key:" "collect-components" "<" "sort" "insert-component" "component" "for-each" "client" "when" "remove-every-row" "function" "with-update-locked" "rest")}
        {Lisp-Entry "collect-components" #f 91 11 91 29 ("cons" "set!" "indexable?" "when" "level" "component" "function" "client" "for-each-descendant" "list" "let")}
        {Lisp-Entry "insert-component" #f 100 11 100 27 ("user-data:" "Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "class-of" "get-class-presentation" "kind" "present-location" "location" "get-component-image" "image" "get-presentation" "title" "let" "recursive?" "father" "component")}}}})
"Info-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Info-Row.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.row.Info-Row" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Info-Row" #f 45 20 45 28 ()
        {Lisp-Entry "get-filter-name" #f 53 16 53 31 ("infos" "'infos")}
        {Lisp-Entry "get-filter-rank" #f 57 16 57 31 ("0")}
        {Lisp-Entry "get-filter-image" #f 61 16 61 32 ("Bitmap-Resource")}
        {Lisp-Entry "present" #f 70 11 70 18 ("format" "Locales" "is?" "if" "value")}
        {Lisp-Entry "edit" #f 81 11 81 15 ()}
        {Lisp-Entry "end-edition" #f 85 11 85 22 ()}
        {Lisp-Entry "save-edition" #f 89 11 89 23 ()}
        {Lisp-Entry "select-editor" #f 93 11 93 24 ()}
        {Lisp-Entry "set-edited-modified?" #f 97 11 97 31 ("flag")}
        {Lisp-Entry "get-menu-class" #f 106 11 106 25 ()}}}})
"Integer-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Integer-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Integer-Domain" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Integer-Domain" #f 44 7 44 21 ()
        {Lisp-Entry "validate-value" #f 52 11 52 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "integer?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 62 11 62 18 ("->string" "not" "if" "value")}}}})
"Integer-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Integer-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Integer-Row" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Integer-Row" #f 43 20 43 31 ()
        {Lisp-Entry "present" #f 51 11 51 18 ("->string" "value")}
        {Lisp-Entry "get-edited-value" #f 60 11 60 27 ("parse-integer" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-string-content" "string" "let")}}}})
"List-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "List-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.List-Domain" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "List-Domain" #f 44 7 44 18 ("initialize" "domain" "nullable?")
        {Lisp-Entry "validate-value" #f 56 11 56 25 ("domain" "validate-value" "subvalue" "function" "for-each" "property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "pair?" "not" "if" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 69 11 69 18 ("domain" "present" "function" "map" "join" "not" "if" "value")}
        {Lisp-Entry "setup-entry" #f 83 11 83 22 ("domain" "setup-list-entry" "client" "view")}}}})
"List-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "List-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.List-Row" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "List-Row" #f 46 20 46 28 ("0" "initialize")
        {Lisp-Entry "current-rank" #f 49 8 49 20 ()}
        {Lisp-Entry "present" #f 57 11 57 18 ("format-plural" "format" "length" "n" "let" "not" "if" "value")}
        {Lisp-Entry "reset-rank" #f 69 11 69 21 ("0" "current-rank" "set!")}
        {Lisp-Entry "next-rank" #f 73 11 73 20 ("increase!" "current-rank" "prog1")}
        {Lisp-Entry "auto-inplace?" #f 83 11 83 24 ()}
        {Lisp-Entry "get-edited-value" #f 92 11 92 27 ("get-list-edited-value")}
        {Lisp-Entry "get-edited-modified?" #f 96 11 96 31 ("get-list-edited-modified?")}
        {Lisp-Entry "set-edited-modified?" #f 100 11 100 31 ("set-list-edited-modified?" "flag")}
        {Lisp-Entry "edit" #f 109 11 109 15 ("edit-in-list" "reset-rank")}
        {Lisp-Entry "add-value" #f 114 11 114 20 ("class:" "next-rank" "self" "add-row" "class" "value")}
        {Lisp-Entry "close-editor" #f 118 11 118 23 ("close-in-list-editor")}
        {Lisp-Entry "select-editor" #f 122 11 122 24 ()}
        {Lisp-Entry "focus-editor" #f 126 11 126 23 ("rest")}
        {Lisp-Entry "focused-editor" #f 130 11 130 25 ()}
        {Lisp-Entry "update" #f 134 11 134 17 ("1" "self" "row-rank" "Cell" "new" "invalidate-cell" "present" "set-title" "set-property-modified?" "get-children" "second" "data" "get-tree" "tree" "let" "set-value" "value")}
        {Lisp-Entry "in-edition?" #f 143 11 143 22 ("0" "get-sons" "cardinality" ">")}
        {Lisp-Entry "auto-number?" #f 152 26 152 38 ()}
        {Lisp-Entry "add-item" #f 156 26 156 34 ("set-modified?" "focus-editor" "edit-row" "get-subrow-class" "new-value" "add-value" "row" "let")}
        {Lisp-Entry "new-value" #f 164 26 164 35 ()}
        {Lisp-Entry "remove-item" #f 168 26 168 37 ("set-modified?" "self" "set-auto-expanded-row" "remove-row" "get-tree" "tree" "let" "item")}
        {Lisp-Entry "rename-item" #f 175 18 175 29 ("set-title" "request-title" "title" "get-title" "current" "let*" "item")}
        {Lisp-Entry "request-title" #f 181 29 181 42 ("initial-value:" "prefix:" "title:" "request-string" "current")}
        {Lisp-Entry "get-menu-class" #f 190 11 190 25 ("List-Menu")}}
      {Lisp-Entry "List-Menu" #f 199 7 199 16 ("on-add-item" ":form" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "add-item" "name:")
        {Lisp-Entry "on-add-item" #f 207 11 207 22 ("list" "set-selection" "row-rank" "rank" "get-tree" "tree" "value-row" "add-item" "row" "let*" "evt")}}}})
"Matches-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Matches-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Matches-Row" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Matches-Row" #f 43 20 43 31 ()
        {Lisp-Entry "present" #f 46 13 46 20 ("format" "null?" "if" "matches")}
        {Lisp-Entry "get-edited-value" #f 52 13 52 29 ("split" "map" "trim-spaces" "function" "clean" "=" "if" "editor" "get-string-content" "string" "let")}}}})
"Memo-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Memo-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Memo-Row" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Memo-Row" #f 44 20 44 28 ()
        {Lisp-Entry "initialize" #f 52 11 52 21 ("choose" "'choose" "set-kind" "nextmethod" "apply" "rest")}
        {Lisp-Entry "present" #f 62 11 62 18 ("format" "not" "nullable?" "and" "if" "value")}
        {Lisp-Entry "combo-choose" #f 73 11 73 23 ("focus-editor" "enter-edited-value" "set-edited-value" "get-edited-value" "initial-text:" "request-text" "text" "let")}
        {Lisp-Entry "get-edited-value" #f 86 11 86 27 ("=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" #f 93 11 93 27 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Name-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Name-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Name-Domain" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Name-Domain" #f 44 7 44 18 ("predicate?" "limit" "19" "height" "100" "initialize" "width" "nullable?")
        {Lisp-Entry "validate-value" #f 59 11 59 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "string?" "symbol?" "not" "and" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 69 11 69 18 ("->string" "value")}
        {Lisp-Entry "setup-entry" #f 78 11 78 22 ("self" "domain:" "height" "width" "Dimension" "size:" "parent:" "Name-Entry" "new" "client" "view")}}}})
"Name-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Name-Entry.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.entry.Name-Entry" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Name-Entry" #f 46 7 46 17 ()
        {Lisp-Entry "validate" #f 54 11 54 19 ("else" "format-plural" "format" "tie" "string-length" ">" "and" "french:" "english:" "Locales" "message:" "Property-Violation" "new" "get-nullable?" "if" "empty-string?" "cond" "get-predicate?" "predicate?" "get-limit" "limit" "text" "'text" "locate" "get-string-content" "content" "let" "domain")}
        {Lisp-Entry "get-value" #f 76 11 76 20 ("nil" "empty-string?" "if" "text" "'text" "locate" "get-string-content" "content" "let")}
        {Lisp-Entry "set-value" #f 83 11 83 20 ("nil?" "if" "text" "'text" "locate" "set-string-content" "value")}}}})
"Number-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Number-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Number-Domain" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Number-Domain" #f 44 7 44 20 ("19" "height" "100" "initialize" "width" "nullable?")
        {Lisp-Entry "validate-value" #f 57 11 57 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "number?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 67 11 67 18 ("->string" "value")}
        {Lisp-Entry "setup-entry" #f 76 11 76 22 ("self" "domain:" "height" "width" "Dimension" "size:" "parent:" "Number-Entry" "new" "client" "view")}}}})
"Number-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Number-Entry.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.entry.Number-Entry" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Number-Entry" #f 45 7 45 19 ()
        {Lisp-Entry "validate" #f 53 11 53 19 ("french:" "english:" "Locales" "message:" "Property-Violation" "new" "numeric?" "empty-string?" "if" "text" "'text" "locate" "get-string-content" "content" "let" "nextmethod" "or" "domain")}
        {Lisp-Entry "get-value" #f 67 11 67 20 ("string->number" "nil" "empty-string?" "if" "text" "'text" "locate" "get-string-content" "content" "let")}
        {Lisp-Entry "set-value" #f 74 11 74 20 ("number->string" "nil?" "if" "text" "'text" "locate" "set-string-content" "value")}}}})
"Password-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Password-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Password-Domain" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Password-Domain" #f 44 7 44 22 ()
        {Lisp-Entry "validate-value" #f 52 11 52 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "string?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}}}})
"Password-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Password-Row.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.row.Password-Row" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Password-Row" #f 47 20 47 32 ()
        {Lisp-Entry "present" #f 55 11 55 18 ("nextmethod" "not" "if" "value")}
        {Lisp-Entry "editor-class" #f 66 11 66 23 ("Password-Value-Text-View")}
        {Lisp-Entry "set-edited-value" #f 70 11 70 27 ("either" "editor" "set-string-content" "value")}}
      {Lisp-Entry "Password-Value-Text-View" #f 79 7 79 31 ("Password" "Font" "font:" "Default" "name:" "Text-Style" "default-style:")
        {Lisp-Entry "copy-selection" #f 86 11 86 25 ("bell")}
        {Lisp-Entry "draw-outline" #f 90 11 90 23 ("draw-caret" "draw-password" "draw-selection" "unless" "printing?:" "getf" "printing?" "bottom" "top" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "clipper" "context" "surface")}
        {Lisp-Entry "draw-password" #f 101 11 101 24 ("draw-text" "Black" "name:" "Color" "set-text-color" "set-font" "-" "get-v" "+" "v" "get-h" "h" "get-font" "get-default-style" "style" "font" "get-metrics" "font-height" "get-height" "height" "get-position" "pos" "cardinality" "make-string" "hidden" "get-string" "password" "0" "get-paragraph" "paragraph" "let*" "surface")}}}})
"Pathname-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Pathname-Row.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.row.Pathname-Row" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Pathname-Row" #f 45 20 45 32 ("set-display-logical?" "get-display-logical?")
        {Lisp-Entry "display-logical?" #f 48 12 48 28 ()}
        {Lisp-Entry "initialize" #f 56 11 56 21 ("set-display-logical?" "self" "value-row:" "editor-class" "new" "editor" "set!" "nextmethod" "apply" "others" "display-logical?" "bind-keywords" "rest")}
        {Lisp-Entry "editor-class" #f 63 11 63 23 ("Pathname-Row-Editor")}
        {Lisp-Entry "get-display-logical?" #f 72 18 72 38 ("editor" "get-display-logical?")}
        {Lisp-Entry "set-display-logical?" #f 76 18 76 38 ("editor" "set-display-logical?" "value")}
        {Lisp-Entry "enter-pathname-value" #f 85 11 85 31 ("enter-value" "value")}
        {Lisp-Entry "present" #f 94 11 94 18 ("editor" "present-moniker" "value")}
        {Lisp-Entry "close-editor?" #f 103 11 103 24 ()}
        {Lisp-Entry "get-edited-value" #f 107 11 107 27 ("editor" "get-moniker")}
        {Lisp-Entry "set-edited-value" #f 111 11 111 27 ("update?:" "editor" "set-moniker" "value")}
        {Lisp-Entry "get-edited-modified?" #f 115 11 115 31 ("editor" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" #f 119 11 119 31 ("editor" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" #f 123 11 123 22 ("editor" "get-text" "show-text-cursor")}
        {Lisp-Entry "focused-editor" #f 127 11 127 25 ("editor" "get-text")}}
      {Lisp-Entry "Pathname-Row-Editor" #f 136 7 136 26 ("set-value-row" "get-value-row" "initialize" "top-padding:" "1" "left-padding:" "text" "content" "scroller" "name:")
        {Lisp-Entry "value-row" #f 146 12 146 21 ()}
        {Lisp-Entry "form-model" #f 149 11 149 21 ("nextmethod" "else" "Pathname-Value-Text-View" "text" "get-name" "case" "form")}
        {Lisp-Entry "get-value-row" #f 155 18 155 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 159 18 159 31 ("text" "'text" "locate" "set-value-row" "value-row" "set!" "value")}
        {Lisp-Entry "moniker-update" #f 164 11 164 25 ("get-moniker" "value-row" "enter-pathname-value")}}
      {Lisp-Entry "Pathname-Value-Text-View" #f 173 7 173 31 ("set-value-row" "get-value-row" "initialize")
        {Lisp-Entry "value-row" #f 176 12 176 21 ()}
        {Lisp-Entry "get-value-row" #f 184 18 184 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 188 18 188 31 ("value-row" "set!" "value")}
        {Lisp-Entry "up-arrow-move" #f 197 11 197 24 ("value-row" "editor-up-arrow" "scroll?" "extend?")}
        {Lisp-Entry "down-arrow-move" #f 201 11 201 26 ("value-row" "editor-down-arrow" "scroll?" "extend?")}
        {Lisp-Entry "document-menu" #f 205 11 205 24 ()}
        {Lisp-Entry "focus-validate" #f 215 11 215 25 ("value-row" "editor-focus-validate" "view")}
        {Lisp-Entry "focus-lose" #f 219 11 219 21 ("value-row" "editor-focus-lose" "nextmethod" "view")}
        {Lisp-Entry "focus-master" #f 224 11 224 23 ("value-row" "get-tree")}}}})
"Period-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Period-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Period-Domain" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Period-Domain" #f 45 7 45 20 ()
        {Lisp-Entry "validate-value" #f 53 11 53 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "Period" "is-not?" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 63 11 63 18 ("get-end" "get-start" "present-date-day" "format" "value")}}}})
"Period-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Period-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Period-Row" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Period-Row" #f 43 7 43 17 ()}
      {Lisp-Entry "Period-Row" #f 49 7 49 17 ()
        {Lisp-Entry "present" #f 57 11 57 18 ("get-end" "get-start" "present-date-day" "format" "period" "function" "map" "join" "not" "nullable?" "and" "if" "value")}
        {Lisp-Entry "get-edited-value" #f 73 11 73 27 ("Date" "parse-date" "Period" "new" "separator:" "parse-strings" "end" "start" "bind" "function" "map" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-string-content" "string" "let")}}}})
"Periods-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Periods-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Periods-Row" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Periods-Row" #f 43 20 43 31 ()}
      {Lisp-Entry "Periods-Row" #f 49 20 49 31 ()
        {Lisp-Entry "initialize" #f 57 11 57 21 ("choose" "'choose" "set-kind" "nextmethod" "apply" "rest")}
        {Lisp-Entry "combo-choose" #f 67 11 67 23 ("focus-editor" "enter-edited-value" "set-edited-value" "periods:" "Periods-Chooser" "get-modal" "value" "let")}
        {Lisp-Entry "present" #f 80 11 80 18 ("get-end" "get-start" "present-date-day" "format" "period" "function" "map" "join" "not" "nullable?" "and" "if" "value")}
        {Lisp-Entry "get-edited-value" #f 96 11 96 27 ("Date" "parse-date" "Period" "new" "separator:" "parse-strings" "end" "start" "bind" "function" "map" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" #f 106 11 106 27 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Point-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Point-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Point-Row" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Point-Row" #f 43 20 43 29 ()
        {Lisp-Entry "present" #f 51 11 51 18 ("get-v" "get-h" "format" "pos")}
        {Lisp-Entry "get-edited-value" #f 62 11 62 27 ("Point" "new" "height" "width" "bind" "editor" "get-string-content" "read-delimited-string" "list" "let")}
        {Lisp-Entry "edit" #f 69 11 69 15 ("get-tree" "expand/collapse" "get-v" "value" "get-h" "self" "add-row" "edit-in-cell")}
        {Lisp-Entry "close-editor" #f 77 11 77 23 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" #f 83 11 83 22 ("0" "get-sons" "cardinality" ">" "nextmethod" "or")}}}})
"Presentation-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Presentation-Domain.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.domain.Presentation-Domain" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "Presentation-Domain" #f 45 7 45 26 ()
        {Lisp-Entry "validate-value" #f 53 11 53 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "Locales" "is-not?" "string?" "not" "and" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 63 11 63 18 ("value")}}}})
"Properties-Card"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "card" "Properties-Card.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.card.Properties-Card" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Properties-Card" #f 45 20 45 35 ("on-context-menu" "tree" "Event-Handler" "context-menu-handler:" "header" "content" "vscroll?:" "document" "style:" "scroller" "tools" "name:" "fill" "layout-type:")
        {Lisp-Entry "get-tree" #f 63 18 63 26 ("tree" "'tree" "locate")}
        {Lisp-Entry "on-editor" #f 72 11 72 20 ("nextmethod" "else" ":selection-changing" "reset-modified-properties" ":saved" "property:" "get-property" "select-property" ":property-selected" "get-tree" "save-edition" ":saving" ":branch-changing" "get-force?" "force?:" "get-selection" "set-client" ":selection-changed" "get-kind" "case" "evt")}
        {Lisp-Entry "client-update" #f 91 11 91 24 ("get-tree" "client-update")}
        {Lisp-Entry "call-property-change" #f 100 11 100 31 ("value:" "property:" "property-change" "client" "car" "eq?" "when" "component:" "get-property" "component" "let" "evt")}
        {Lisp-Entry "property-change" #f 106 11 106 26 ("get-tree" "property-change" "value" "property" "component")}
        {Lisp-Entry "enter-value" #f 115 11 115 22 ("client" "designer" "set-property" "component" "function" "for-each" "value" "property")}}}})
"Properties-Descriptor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "descriptor" "Properties-Descriptor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.descriptor.Properties-Descriptor" #f 37 19 37 65 ("jazz")
      {Lisp-Entry "Properties-Descriptor" #f 43 20 43 41 ()
        {Lisp-Entry "get-class-descriptor" #f 52 16 52 36 ("Descriptors.Properties-Descriptor")}}}})
"Properties-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "card" "Properties-Manager.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.card.Properties-Manager" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Properties-Manager" #f 47 20 47 38 ("header" "content" "tool" "style:" "scroller" "name:")
        {Lisp-Entry "destroy" #f 57 11 57 18 ("nextmethod" "self" "close-selected" "get-application" "appl" "let")}
        {Lisp-Entry "external-name" #f 63 16 63 29 ("properties-card" "'properties-card" "rest")}
        {Lisp-Entry "host-icon" #f 72 16 72 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 76 16 76 26 ()}
        {Lisp-Entry "host-install" #f 80 11 80 23 ("on-selected-change" "'on-selected-change" "method-name:" "self" "target:" "Event-Handler" "new" "add-selected-listener" "get-application" "appl" "let")}
        {Lisp-Entry "host-uninstall" #f 85 11 85 25 ("self" "remove-selected-listener" "get-application" "appl" "let")}
        {Lisp-Entry "focus-default" #f 95 11 95 24 ("acquire-focus" "'tree" "locate" "tree" "let")}
        {Lisp-Entry "get-tools-view" #f 100 11 100 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "install-in-host" #f 109 11 109 26 ("categorized" "'categorized" "tree" "'tree" "set-filter" "header" "'header" "scroller" "'scroller" "locate" "set-flat?" "Docked-Host" "is?" "when" "nextmethod" "host")}
        {Lisp-Entry "on-selected-change" #f 122 11 122 29 ("else" "get-designer" "let*" "Editor-View" "force?:" "set-client" "set-designer" "set-editor" "get-force?" "force?" "get-selected" "client" "designer" "editor" "Designer" "typecase" "get-owner" "owner" "let" "evt")}
        {Lisp-Entry "on-editor" #f 152 11 152 20 ("nextmethod" "else" ":selection-changed" "get-kind" "case" "evt")}}}})
"Properties-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "card" "Properties-Tree.jazz"} 1251729948
    {Lisp-Entry "jazz.designer.card.Properties-Tree" #f 37 19 37 53 ("Value-Column" "Property-Column" "register-autoclass" "jazz")
      {Lisp-Entry "Filter-Width" #f 51 12 51 24 ("20")}
      {Lisp-Entry "Properties-Tree" #f 55 20 55 35 ("center" "justification:" "50" "owner" "192" "toplevel-controls?:" "176" "width:" "title:" "property" "name:" "on-context-menu" ":form" "Event-Handler" "context-menu-handler:" ":icons" "portfolio:" "row-spacing:" "0" "column-spacing:" "auto-expand/collapse?:" "row" "selection-mode:" "multiple-selection?:" "draggable?:" "value" "filled-column:" "set-property-handler" "get-property-handler" "set-filter-visible?" "get-filter-visible?" "set-filter-locked?" "get-filter-locked?" "set-filter" "get-filter" "categorized" "'categorized" "initialize")
        {Lisp-Entry "filter" #f 58 12 58 18 ()}
        {Lisp-Entry "filter-locked?" #f 59 12 59 26 ()}
        {Lisp-Entry "filter-visible?" #f 60 12 60 27 ()}
        {Lisp-Entry "property-handler" #f 61 12 61 28 ()}
        {Lisp-Entry "get-card" #f 76 18 76 26 ("5" "child")}
        {Lisp-Entry "get-editor" #f 80 18 80 28 ("get-card" "get-editor")}
        {Lisp-Entry "get-client" #f 84 18 84 28 ("get-card" "get-client")}
        {Lisp-Entry "get-designer" #f 88 18 88 30 ("get-card" "get-designer")}
        {Lisp-Entry "double-click" #f 97 11 97 23 ("self" "acquire" "double-click" "when" "get-selected-row" "row" "let" "pos")}
        {Lisp-Entry "on-context-menu" #f 103 11 103 26 ("context-menu" "else" "5" "Point" "self" "client:" "Filter-Menu" "new" "track-popup-menu" "get-v" "Filter-Width" "get-h" "<" "and" "when" "16" "header-height" "filter-visible?" "not" "filter-locked?" "or" "unless" "Tree-Header" "is?" "cond" "get-position" "pos" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "new-property-menu" #f 115 11 115 28 ("layout-menu" "consolidate" "'consolidate" "distribute" "'distribute" "end-consolidate-group" "'end-consolidate-group" "locate" "set-visible?" "begin" "branch-installed?" "if" "get-creator" "creator" "car" "any" "self" "client:" "Property-Menu" "new" "menu" "let*" "client")}
        {Lisp-Entry "focus-delegate" #f 134 11 134 25 ("editor-focus-delegate" "when" "selected-row" "row" "let")}
        {Lisp-Entry "save-edition" #f 145 21 145 33 ("save-edition" "in-edition?" "Value-Row" "is?" "and" "when" "auto-expanded-row" "row" "let")}
        {Lisp-Entry "get-property-handler" #f 156 18 156 38 ("property-handler")}
        {Lisp-Entry "set-property-handler" #f 160 18 160 38 ("property-handler" "set!" "handler")}
        {Lisp-Entry "notify-property-change" #f 164 18 164 40 ("property:" ":property-change" "Event" "new" "self" "invoke" "property-handler" "when" "property")}
        {Lisp-Entry "client-update" #f 174 18 174 31 ("preserving-update" "close-auto-expanded" "function" "with-update-locked")}
        {Lisp-Entry "find-property-index" #f 181 11 181 30 ("continuation-return" "field-name" "eq?" "symbol?" "if" "get-property" "property" "let" "Value-Row" "is?" "when" "rank" "row" "for-each-visible-row" "return" "function" "continuation-capture" "target")}
        {Lisp-Entry "empty-client?" #f 200 11 200 24 ("null?" "not" "or" "get-client" "client" "let")}
        {Lisp-Entry "preserving-update" #f 205 11 205 28 ("auto-expand?:" "set-single-selection" "when" "find-property-index" "either" "index" "update" "get-client-default-property" "default" "selected-property" "selected" "let" "remove-every-row" "empty-client?" "if")}
        {Lisp-Entry "update" #f 216 11 216 17 ("insert-properties" "when" "remove-every-row" "function" "with-update-locked" "get-client-properties" "properties" "get-designer" "designer" "get-editor" "editor" "car" "null?" "not" "or" "if" "any" "get-client" "client" "let*")}
        {Lisp-Entry "update-property" #f 233 18 233 33 ("update-property-row" "get-row" "row" "find-property-index" "rank" "let" "eq?" "when" "car" "any" "get-client" "client" "let*" "property" "clt")}
        {Lisp-Entry "insert-properties" #f 243 11 243 28 ("insert-properties" "Tree-Image" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "row" "let" "title" "bind" "collapsed" "'collapsed" "insert-property" "pair?" "if" "property" "function" "for-each" "properties" "father" "designer" "editor" "any" "client")}
        {Lisp-Entry "insert-property" #f 257 11 257 26 ("position:" "row:" "state:" "father:" "add-row" "set-color" "set-title" "car" "set-value" "set-property" "list" "set-children" "17" "set-row-height" "self" "set-parent" "owner-image" "Tree-Image" "owner" "Tree-Label" "label" "Dark-Gray" "Dark-Red" "name:" "Color" "color:" "image:" "class-of" "property-presentation" "title:" "Tree-Node" "node" "string=?" "apply" "1" "length" "<=" "uniform?" "find-changed-property" "not" "or" "if" "changed?" "get-active-branch" "essay" "branch" "get-creator" "creator" "present" "value" "presented" "read-property" "component" "function" "map" "values" "get-filter-image" "image" "new" "either" "row" "get-row-instance" "instance" "get-row-class" "class" "let*" "position" "state" "property" "father" "designer" "editor" "any" "client")}
        {Lisp-Entry "get-client-default-property" #f 283 11 283 38 ("class-of" "category-field" "get-default-property" "name" "Component" "is?" "car" "component" "length" "1" "=" "when" "get-client" "client" "let")}
        {Lisp-Entry "get-client-properties" #f 293 11 293 32 ("get-component-properties" "Component" "is?" "component" "function" "map" "intersection" "apply" "when" "editor" "client")}
        {Lisp-Entry "get-component-properties" #f 301 11 301 35 ("filter" "filter:" "get-filtered-properties" "filter-by-rights" "editor" "component")}
        {Lisp-Entry "owner-image" #f 306 11 306 22 ("default-owner-image" "else" "root-owner-image" "get-reference" "eq?" "branch-owner-image" "Branch" "is?" "cond" "find-owner" "owner" "car" "component" "let*" "Info-Row" "neq?" "length" "1" "=" "and" "when" "property" "class" "client" "designer")}
        {Lisp-Entry "default-owner-image" #f 315 29 315 48 ()}
        {Lisp-Entry "root-owner-image" #f 319 29 319 45 ("Bitmap-Resource")}
        {Lisp-Entry "branch-owner-image" #f 323 29 323 47 ("Bitmap-Resource")}
        {Lisp-Entry "reset-modified-properties" #f 327 21 327 46 ("0" "Cell" "new" "invalidate-cell" "set-color" "get-color" "get-children" "car" "node" "let" "Value-Row" "is?" "when" "rank" "row" "function" "for-each-visible-row")}
        {Lisp-Entry "get-rights" #f 342 11 342 21 ("get-rights" "editor")}
        {Lisp-Entry "filter-by-rights" #f 346 11 346 27 ("filter-properties" "when" "find-component-rights" "component-rights" "get-client" "reference" "let*" "not" "if" "get-rights" "essay" "rights" "let" "properties" "editor" "component")}
        {Lisp-Entry "selected-row" #f 361 11 361 23 ("Value-Row" "is?" "when" "get-selected-row" "row" "let")}
        {Lisp-Entry "selected-property" #f 367 11 367 28 ("get-property" "when" "selected-row" "row" "let")}
        {Lisp-Entry "select-property" #f 373 18 373 33 ("set-single-selection" "generate-event?:" "auto-expand?:" "set-selection" "not" "if" "find-property-index" "rank" "let" "property")}
        {Lisp-Entry "consolidate-property" #f 385 11 385 31 ("set-edited-modified?" "set-property" "branch:" "remove-property" "branch" "for-each-branch" "read-property" "value" "get-creator" "creator" "component" "function" "for-each" "get-designer" "designer" "get-property" "property" "save-edition" "selected-row" "row" "let" "yes" "'yes" "eq?" "when" "confirmation" "'confirmation" "type:" "length" "format-plural" "format" "message-box" "code" "get-client" "client" "let*")}
        {Lisp-Entry "distribute-property" #f 404 11 404 30 ("set-edited-modified?" "branch:" "set-property" "branch" "for-each-branch" "read-property" "value" "get-creator" "creator" "component" "function" "for-each" "get-designer" "designer" "get-property" "property" "save-edition" "selected-row" "row" "let" "yes" "'yes" "eq?" "when" "confirmation" "'confirmation" "type:" "length" "format-plural" "format" "message-box" "code" "get-client" "client" "let*")}
        {Lisp-Entry "header-click" #f 427 11 427 23 ("nextmethod" "end-edition" "close-auto-expanded" "in-edition?" "Value-Row" "is?" "and" "when" "auto-expanded-row" "row" "let" "column")}
        {Lisp-Entry "get-filter" #f 441 18 441 28 ("filter")}
        {Lisp-Entry "set-filter" #f 445 18 445 28 ("update" "node-column" "get-header" "invalidate-column-header" "set!" "filter" "neq?" "when" "flt")}
        {Lisp-Entry "get-filter-locked?" #f 452 18 452 36 ("filter-locked?")}
        {Lisp-Entry "set-filter-locked?" #f 456 18 456 36 ("filter-locked?" "set!" "value")}
        {Lisp-Entry "get-filter-visible?" #f 460 18 460 37 ("filter-visible?")}
        {Lisp-Entry "set-filter-visible?" #f 464 18 464 37 ("filter-visible?" "set!" "value")}
        {Lisp-Entry "toggle-filter" #f 468 18 468 31 ("'all" "categorized" "'categorized" "infos" "'infos" "handlers" "'handlers" "properties" "'properties" "set-filter" "all" "filter" "case")}
        {Lisp-Entry "property-change" #f 482 18 482 33 ("invalidate-cell" "class-of" "get-client" "get-designer" "owner-image" "set-image" "get-cell-data" "data" "2" "Cell" "new" "cell" "let*" "update" "get-row" "row" "when" "find-property-index" "rank" "let" "value" "property" "component")}}
      {Lisp-Entry "Property-Column" #f 498 7 498 22 ("initialize")
        {Lisp-Entry "filter-down?" #f 501 8 501 20 ()}
        {Lisp-Entry "draw-header" #f 504 11 504 22 ("down?" "get-column-title" "localize" "-" "get-filter-image" "1" "+" "draw-image-at" "filter-down?" "Filter-Width" "draw-header-at" "nextmethod" "parent" "get-filter-visible?" "not" "if" "flat?" "spaced?" "sorted" "height" "width" "v" "h" "context" "surface")}
        {Lisp-Entry "draw-image-at" #f 512 11 512 24 ("+" "get-application" "get-icons-cache" "draw-image" "0" "1" "filter-down?" "if" "offset" "let" "image" "v" "h" "context" "surface")}
        {Lisp-Entry "header-down" #f 517 11 517 22 ("self" "get-header" "invalidate-column-header" "down?" "filter-down?" "set!" "unless" "get-filter-locked?" "Filter-Width" "get-h" "<" "in-filter?" "let" "nextmethod" "parent" "get-filter-visible?" "not" "if" "pos")}
        {Lisp-Entry "header-up" #f 530 11 530 20 ("header-click" "self" "get-header" "invalidate-column-header" "toggle-filter" "when" "down?" "set!" "filter-down?" "filter?" "let" "Filter-Width" "get-h" "<" "unless" "get-filter-locked?" "nextmethod" "parent" "get-filter-visible?" "not" "if" "pos")}
        {Lisp-Entry "draw-data" #f 546 11 546 20 ("0" "draw-title" "draw-image" "draw-level" "draw-background" "height" "width" "data" "row" "context" "surface")}
        {Lisp-Entry "get-filter-image" #f 553 11 553 27 ("categorized" "handlers" "properties" "infos" "Bitmap-Resource" "all" "parent" "get-filter" "case")}
        {Lisp-Entry "get-column-title" #f 562 11 562 27 ("categorized" "handlers" "properties" "infos" "all" "parent" "get-filter" "case")}}
      {Lisp-Entry "Value-Column" #f 579 7 579 19 ()
        {Lisp-Entry "complete-mouse-down" #f 582 11 582 30 ("auto-expand/collapse" "when" "nextmethod" "get-row" "essay" "row" "parent" "get-auto-expand/collapse?" "auto?" "let*" "control?" "shift?" "pos" "cell")}
        {Lisp-Entry "draw-data" #f 591 11 591 20 ("self" "draw-data" "get-value" "value" "let" "Value-Row" "is?" "when" "height" "width" "data" "row" "context" "surface")}}
      {Lisp-Entry "Filter-Menu" #f 605 7 605 18 ("categorized" "handlers" "properties" "infos" "on-action" ":form" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "all" "name:")
        {Lisp-Entry "finish" #f 619 11 619 17 ("client" "get-filter" "locate" "set-selected?" "nextmethod" "rest")}
        {Lisp-Entry "on-action" #f 624 11 624 20 ("client" "set-filter" "get-sender" "get-name" "filter" "let" "evt")}}
      {Lisp-Entry "Property-Menu" #f 634 7 634 20 ("on-distribute" "distribute" "end-consolidate-group" "on-consolidate" ":form" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "consolidate" "name:")
        {Lisp-Entry "on-consolidate" #f 644 11 644 25 ("client" "consolidate-property" "evt")}
        {Lisp-Entry "on-distribute" #f 648 11 648 24 ("client" "distribute-property" "evt")}}}})
"Property-Descriptor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "descriptor" "Property-Descriptor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.descriptor.Property-Descriptor" #f 37 19 37 63 ("jazz")
      {Lisp-Entry "Property-Descriptor" #f 43 20 43 39 ("initialize")
        {Lisp-Entry "title" #f 46 12 46 17 ()}
        {Lisp-Entry "get-title" #f 46 43 46 51 ()}
        {Lisp-Entry "set-title" #f 46 43 46 51 ()}
        {Lisp-Entry "domain" #f 47 12 47 18 ()}
        {Lisp-Entry "get-domain" #f 47 43 47 51 ()}
        {Lisp-Entry "set-domain" #f 47 43 47 51 ()}
        {Lisp-Entry "get-class-descriptor" #f 56 16 56 36 ("Descriptors.Property-Descriptor")}}}})
"Property-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "property" "Property-Editor.jazz"} 1249609755
    {Lisp-Entry "jazz.designer.property.Property-Editor" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Property-Editor" #f 43 11 43 26 ()
        {Lisp-Entry "get-manager" #f 46 35 46 46 ()}
        {Lisp-Entry "set-manager" #f 47 35 47 46 ("manager")}
        {Lisp-Entry "validate" #f 48 35 48 43 ()}
        {Lisp-Entry "get-violation" #f 49 35 49 48 ()}
        {Lisp-Entry "set-violation" #f 50 35 50 48 ("violation")}
        {Lisp-Entry "get-value" #f 51 35 51 44 ()}
        {Lisp-Entry "set-value" #f 52 35 52 44 ("value")}
        {Lisp-Entry "present-value" #f 53 35 53 48 ("value")}
        {Lisp-Entry "get-modified?" #f 54 35 54 48 ()}
        {Lisp-Entry "set-modified?" #f 55 35 55 48 ("flag")}
        {Lisp-Entry "set-editable?" #f 56 35 56 48 ("flag")}}}})
"Property-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Property-Entry.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.entry.Property-Entry" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Property-Entry" #f 46 7 46 21 ("fill" "layout-type:" "generate" "inherited" "initialize")
        {Lisp-Entry "manager" #f 49 12 49 19 ()}
        {Lisp-Entry "domain" #f 50 12 50 18 ()}
        {Lisp-Entry "get-domain" #f 50 44 50 52 ()}
        {Lisp-Entry "set-domain" #f 50 44 50 52 ()}
        {Lisp-Entry "violation" #f 53 8 53 17 ()}
        {Lisp-Entry "get-violation" #f 65 11 65 24 ("violation")}
        {Lisp-Entry "set-violation" #f 69 11 69 24 ("invalidate-entry" "violation" "set!" "value")}
        {Lisp-Entry "invalidate-entry" #f 74 18 74 34 ("1" "get-bounds" "inflate-rect" "invalidate-rect")}
        {Lisp-Entry "tab-view" #f 83 29 83 37 ()}}}})
"Property-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "property" "Property-Manager.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.property.Property-Manager" #f 37 19 37 58 ("jazz")
      {Lisp-Entry "Property-Manager" #f 40 11 40 27 ()
        {Lisp-Entry "editor-focus-gain" #f 43 35 43 52 ("editor")}
        {Lisp-Entry "editor-focus-lose" #f 44 35 44 52 ("view" "editor")}
        {Lisp-Entry "editor-left-arrow" #f 45 35 45 52 ("editor")}
        {Lisp-Entry "editor-right-arrow" #f 46 35 46 53 ("editor")}
        {Lisp-Entry "editor-up-arrow" #f 47 35 47 50 ("editor")}
        {Lisp-Entry "editor-down-arrow" #f 48 35 48 52 ("editor")}
        {Lisp-Entry "editor-return" #f 49 35 49 48 ("editor")}}}})
"Property-Moniker"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "moniker" "Property-Moniker.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.moniker.Property-Moniker" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Property-Moniker" #f 44 20 44 36 ()
        {Lisp-Entry "designer" #f 53 18 53 26 ()}
        {Lisp-Entry "reference" #f 54 18 54 27 ()}
        {Lisp-Entry "branch" #f 55 18 55 24 ()}
        {Lisp-Entry "class" #f 56 18 56 23 ()}
        {Lisp-Entry "path" #f 57 18 57 22 ()}
        {Lisp-Entry "property" #f 58 18 58 26 ()}
        {Lisp-Entry "image" #f 59 18 59 23 ()}
        {Lisp-Entry "presented" #f 60 18 60 27 ()}
        {Lisp-Entry "location" #f 61 18 61 26 ()}
        {Lisp-Entry "extension" #f 62 18 62 27 ()}
        {Lisp-Entry "print" #f 65 11 65 16 ("property" "path" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "compare-object" #f 71 11 71 25 (":not-equal" "else" ":equal" "get-property" "property" "get-path" "path" "=" "get-branch" "branch" "get-designer" "designer" "eq?" "and" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "compare-pathname" #f 83 11 83 27 (":equal" "compare-object" "eq?" "object")}
        {Lisp-Entry "initialize" #f 92 11 92 21 ("extension~self" "location~self" "presented~self" "image~self" "property~self" "path~self" "class~self" "branch~self" "reference~self" "designer~self" "set!" "nextmethod" "extension" "location" "presented" "image" "property" "path" "class" "branch" "reference" "designer")}
        {Lisp-Entry "get-designer" #f 111 18 111 30 ("designer")}
        {Lisp-Entry "get-reference" #f 115 18 115 31 ("reference")}
        {Lisp-Entry "get-branch" #f 119 18 119 28 ("branch")}
        {Lisp-Entry "get-class" #f 123 18 123 27 ("class")}
        {Lisp-Entry "get-path" #f 127 18 127 26 ("path")}
        {Lisp-Entry "set-path" #f 131 18 131 26 ("path" "set!" "value")}
        {Lisp-Entry "get-image" #f 135 18 135 27 ("image")}
        {Lisp-Entry "get-location" #f 139 18 139 30 ("location")}
        {Lisp-Entry "get-component-name" #f 148 18 148 36 ("branch" "branch:" "path" "designer" "get-name")}
        {Lisp-Entry "get-component-property" #f 152 18 152 40 ("branch" "branch:" "path" "designer" "get-property" "property")}
        {Lisp-Entry "set-component-property" #f 156 18 156 40 ("branch" "branch:" "path" "designer" "set-property" "value" "property")}
        {Lisp-Entry "get-writable?" #f 165 11 165 24 ()}
        {Lisp-Entry "exists?" #f 169 11 169 18 ()}
        {Lisp-Entry "get-base" #f 173 11 173 19 ("presented")}
        {Lisp-Entry "get-file" #f 177 11 177 19 ()}
        {Lisp-Entry "get-name" #f 181 11 181 19 ("presented")}
        {Lisp-Entry "get-extension" #f 185 11 185 24 ("extension")}
        {Lisp-Entry "get-modification-time" #f 189 11 189 32 ()}
        {Lisp-Entry "present" #f 193 11 193 18 ("property" "path" "format")}
        {Lisp-Entry "present-base" #f 197 11 197 23 ("presented")}
        {Lisp-Entry "present-location" #f 201 11 201 27 ("location" "join")}
        {Lisp-Entry "load-lines" #f 205 11 205 21 ("property" "get-component-property" "JzLoadLines" "rest")}
        {Lisp-Entry "save-lines" #f 210 11 210 21 ("join-lines" "property" "set-component-property" "rest" "lines")}}}})
"Property-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "property" "Property-View.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.property.Property-View" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Property-View" #f 45 7 45 20 ("fill" "layout-type:" "initialize")
        {Lisp-Entry "id" #f 48 12 48 14 ()}
        {Lisp-Entry "get-id" #f 48 46 48 54 ()}
        {Lisp-Entry "set-id" #f 48 46 48 54 ()}
        {Lisp-Entry "editor" #f 49 12 49 18 ()}
        {Lisp-Entry "get-editor" #f 49 46 49 54 ()}
        {Lisp-Entry "set-editor" #f 49 46 49 54 ()}
        {Lisp-Entry "editable?" #f 50 12 50 21 ()}
        {Lisp-Entry "get-editable?" #f 50 46 50 54 ()}
        {Lisp-Entry "set-editable?" #f 50 46 50 54 ()}
        {Lisp-Entry "add-child" #f 62 11 62 20 ("set-editable?" "editable?" "not" "when" "nextmethod" "child")}
        {Lisp-Entry "get-entry" #f 68 26 68 35 ("first-child")}}}})
"Property-Violation"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "property" "Property-Violation.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.property.Property-Violation" #f 37 19 37 60 ("jazz")
      {Lisp-Entry "Property-Violation" #f 40 20 40 38 ()
        {Lisp-Entry "message" #f 43 8 43 15 ()}
        {Lisp-Entry "initialize" #f 46 11 46 21 ("message~self" "set!" "nextmethod" "message" "message:")}
        {Lisp-Entry "print" #f 51 11 51 16 ("message" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-message" #f 62 18 62 29 ("message")}}}})
"Range-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Range-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Range-Row" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Range-Row" #f 43 20 43 29 ()
        {Lisp-Entry "present" #f 51 11 51 18 ("get-end" "get-start" "format" "not" "if" "range")}
        {Lisp-Entry "get-edited-value" #f 64 11 64 27 ("Range" "new" "end" "start" "bind" "editor" "get-string-content" "read-delimited-string" "list" "let")}
        {Lisp-Entry "edit" #f 70 11 70 15 ("get-tree" "expand/collapse" "get-end" "Cell-Row" "value" "get-start" "self" "add-row" "edit-in-cell")}
        {Lisp-Entry "close-editor" #f 77 11 77 23 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" #f 82 11 82 22 ("0" "get-sons" "cardinality" ">" "nextmethod" "or")}}}})
"Rect-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Rect-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Rect-Row" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Rect-Row" #f 43 20 43 28 ()
        {Lisp-Entry "present" #f 51 11 51 18 ("get-bottom" "get-right" "get-top" "get-left" "format" "not" "if" "rect")}
        {Lisp-Entry "get-edited-value" #f 66 11 66 27 ("Rect" "new" "bottom" "right" "top" "left" "bind" "read-delimited-string" "list" "=" "if" "editor" "get-string-content" "string" "let")}
        {Lisp-Entry "edit" #f 75 11 75 15 ("get-tree" "expand/collapse" "get-bottom" "get-right" "get-top" "get-left" "self" "add-row" "value" "when" "edit-in-cell")}
        {Lisp-Entry "close-editor" #f 85 11 85 23 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" #f 90 11 90 22 ("0" "get-sons" "cardinality" ">" "nextmethod" "or")}}}})
"Reference-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Reference-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Reference-Row" #f 37 19 37 50 ("jazz")
      {Lisp-Entry "Reference-Row" #f 43 20 43 33 ()}}})
"Row-Formatted-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Row-Formatted-Text-View.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.editor.Row-Formatted-Text-View" #f 37 19 37 63 ("jazz")
      {Lisp-Entry "Row-Formatted-Text-View" #f 46 20 46 43 ("Label" "Font" "font:" "Default" "name:" "Text-Style" "default-style:")
        {Lisp-Entry "get-value-row" #f 58 11 58 24 ("4" "child")}
        {Lisp-Entry "get-context-menu" #f 67 11 67 27 ()}
        {Lisp-Entry "focus-lose" #f 76 11 76 21 ("get-value-row" "get-father" "invalidate-drawing" "nextmethod" "view")}
        {Lisp-Entry "focus-master" #f 81 11 81 23 ("get-value-row" "get-tree")}}}})
"Row-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Row-Text-View.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.editor.Row-Text-View" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Row-Text-View" #f 46 20 46 33 ("Label" "Font" "font:" "Default" "name:" "Text-Style" "default-style:")
        {Lisp-Entry "get-value-row" #f 58 11 58 24 ("4" "child")}
        {Lisp-Entry "document-menu" #f 67 11 67 24 ()}
        {Lisp-Entry "focus-lose" #f 76 11 76 21 ("get-value-row" "get-father" "invalidate-drawing" "nextmethod" "view")}
        {Lisp-Entry "focus-master" #f 81 11 81 23 ("get-value-row" "get-tree")}}}})
"Search-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Search-Tree.jazz"} 1249298137
    {Lisp-Entry "jazz.designer.editor.Search-Tree" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Search-Tree" #f 48 20 48 31 ("kind" "275" "location" "toplevel-controls?:" "100" "width:" "title:" "name:" "on-selection-change" ":self" "Event-Handler" "selection-handler:" "can-select-empty?:" "multiple-selection?:" "row" "selection-mode:" ":icons" "portfolio:" "component" "filled-column:" "set-target" "get-target" "initialize")
        {Lisp-Entry "target" #f 51 12 51 18 ()}
        {Lisp-Entry "get-target" #f 66 18 66 28 ("target")}
        {Lisp-Entry "set-target" #f 70 18 70 28 ("acquire-focus" "set-single-selection" "0" "visible-count" ">" "when" "update" "target" "set!" "value")}
        {Lisp-Entry "selection-changed" #f 83 11 83 28 ("focus?" "force-parent?" "origin" "old" "component")}
        {Lisp-Entry "on-designer" #f 92 11 92 22 ("update" ":property-change" ":child-remove" ":child-add" "get-kind" "case" "evt")}
        {Lisp-Entry "update" #f 104 11 104 17 ("get-presentation" "localize" "key:" "search-components" "<" "sort" "insert-component" "component" "for-each" "target" "client" "and" "when" "remove-every-row" "function" "with-update-locked" "rest")}
        {Lisp-Entry "search-components" #f 114 11 114 28 ("cons" "set!" "search-component" "indexable?" "and" "when" "level" "component" "function" "client" "for-each-descendant" "list" "let" "target")}
        {Lisp-Entry "insert-component" #f 123 11 123 27 ("user-data:" "Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "class-of" "get-class-presentation" "kind" "present-location" "location" "get-component-image" "image" "get-presentation" "title" "let" "recursive?" "father" "component")}}}})
"String-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "String-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.String-Domain" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "String-Domain" #f 44 7 44 20 ()
        {Lisp-Entry "validate-value" #f 52 11 52 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "string?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 62 11 62 18 ("value")}}}})
"String-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "String-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.String-Row" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "String-Row" #f 43 20 43 30 ()
        {Lisp-Entry "present" #f 51 11 51 18 ("format" "not" "nullable?" "and" "if" "value")}
        {Lisp-Entry "get-edited-value" #f 62 11 62 27 ("string=?" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-string-content" "string" "let")}}}})
"Surrogate-Handler"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "surrogate" "Surrogate-Handler.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.surrogate.Surrogate-Handler" #f 37 19 37 60 ("jazz")
      {Lisp-Entry "Surrogate-Handler" #f 43 20 43 37 ()
        {Lisp-Entry "preserved" #f 46 8 46 17 ()}
        {Lisp-Entry "initialize" #f 49 11 49 21 ("preserved~self" "set!" "nextmethod" "apply" "others" "preserved" "bind-keywords" "rest")}
        {Lisp-Entry "get-preserved" #f 55 18 55 31 ("preserved")}}}})
"Text-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "entry" "Text-Entry.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.entry.Text-Entry" #f 37 19 37 49 ("jazz")
      {Lisp-Entry "Text-Entry" #f 45 7 45 17 ("text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "scroller" "entry" "style:" "edge" "border-type:" "border" "name:")
        {Lisp-Entry "finish" #f 56 11 56 17 ("self" "text" "'text" "locate" "set-editor" "nextmethod" "rest")}
        {Lisp-Entry "tab-view" #f 66 11 66 19 ("text" "'text" "locate")}
        {Lisp-Entry "validate" #f 75 11 75 19 ("message:" "Property-Violation" "new" "get-nullable?" "not" "empty-string?" "and" "if" "text" "'text" "locate-component" "get-string-content" "content" "let" "domain")}
        {Lisp-Entry "get-modified?" #f 88 11 88 24 ("text" "'text" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" #f 92 11 92 24 ("text" "'text" "locate" "set-modified?" "value")}
        {Lisp-Entry "set-editable?" #f 101 11 101 24 ("Medium" "White" "name:" "Color" "set-background" "text" "'text" "set-editable?" "none" "'none" "edge" "'edge" "if" "border" "'border" "locate" "set-border-type" "flag")}}}})
"Text-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Text-Row.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.row.Text-Row" #f 37 19 37 45 ("jazz")
      {Lisp-Entry "Text-Row" #f 44 20 44 28 ()
        {Lisp-Entry "present" #f 52 11 52 18 ("car" "format" "get-paragraphs" "first" "Text" "is?" "not" "if" "value")}
        {Lisp-Entry "get-edited-value" #f 65 11 65 27 ("editor" "get-content")}
        {Lisp-Entry "get-edited-modified?" #f 69 11 69 31 ("editor" "get-controller" "get-modified?")}
        {Lisp-Entry "edit" #f 78 11 78 15 ("set-visible?" "value" "editor" "set-content" "edit-in-row")}
        {Lisp-Entry "close-editor" #f 84 11 84 23 ("close-in-row-editor")}
        {Lisp-Entry "select-editor" #f 88 11 88 24 ("focus-editor")}
        {Lisp-Entry "focus-editor" #f 92 11 92 23 ("editor" "acquire-focus" "rest")}
        {Lisp-Entry "editor-height" #f 96 11 96 24 ("200")}
        {Lisp-Entry "new-editor" #f 100 11 100 21 ("0" "left-padding:" "editor-class" "new")}
        {Lisp-Entry "editor-class" #f 105 11 105 23 ("Row-Text-View")}
        {Lisp-Entry "update" #f 109 11 109 17 ("1" "self" "row-rank" "Cell" "new" "invalidate-cell" "present" "set-title" "set-property-modified?" "get-children" "second" "data" "get-tree" "tree" "let" "set-value" "value")}
        {Lisp-Entry "in-edition?" #f 118 11 118 22 ("0" "get-sons" "cardinality" ">")}}}})
"Text-Surrogate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "surrogate" "Text-Surrogate.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.surrogate.Text-Surrogate" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "Text-Surrogate" #f 43 20 43 34 ()
        {Lisp-Entry "cursor-update" #f 52 11 52 24 ("nextmethod" "else" "client" "cursor-update" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "mouse-down" #f 64 11 64 21 ("nextmethod" "else" "client" "mouse-down" "select-in-editor" "select?" "when" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "drag-move" #f 73 11 73 20 ("nextmethod" "else" "client" "drag-move" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "drag-up" #f 80 11 80 18 ("nextmethod" "else" "client" "drag-up" "" "apply" "edit" "editor" "get-mode" "case" "rest" "pos")}
        {Lisp-Entry "double-click" #f 87 11 87 23 ("nextmethod" "else" "client" "double-click" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "context-menu" #f 94 11 94 23 ("nextmethod" "else" "client" "context-menu" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "key-press" #f 106 11 106 20 ("nextmethod" "else" "client" "key-press" "edit" "editor" "get-mode" "case" "key")}}}})
"Time-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Time-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Time-Domain" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "Time-Domain" #f 43 7 43 18 ()}
      {Lisp-Entry "Time-Domain" #f 49 7 49 18 ()
        {Lisp-Entry "validate-value" #f 57 11 57 25 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "Date" "is-not?" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" #f 67 11 67 18 ("present-compact" "not" "if" "value")}}}})
"Toolbox"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "toolbox" "Toolbox.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.toolbox.Toolbox" #f 37 19 37 48 ("jazz")
      {Lisp-Entry "Toolbox" #f 43 20 43 27 ()
        {Lisp-Entry "get-class-presentation" #f 51 16 51 38 ()}
        {Lisp-Entry "get-class-image" #f 55 16 55 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-presentation" #f 59 11 59 27 ()}
        {Lisp-Entry "can-rename-component?" #f 63 11 63 32 ()}
        {Lisp-Entry "can-delete-component?" #f 67 11 67 32 ()}
        {Lisp-Entry "can-move-component?" #f 71 11 71 30 ()}
        {Lisp-Entry "can-copy-component?" #f 75 11 75 30 ()}
        {Lisp-Entry "get-categorized-properties" #f 79 11 79 37 ()}}}})
"Toolbox-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "toolbox" "Toolbox-Editor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Editor" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Toolbox-Editor" #f 43 20 43 34 ()
        {Lisp-Entry "form-model" #f 46 11 46 21 ("nextmethod" "else" "Toolbox-Tree" "tree" "get-name" "case" "form")}}}})
"Toolbox-Group"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "toolbox" "Toolbox-Group.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Group" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Toolbox-Group" #f 44 20 44 33 ("initialize")
        {Lisp-Entry "title" #f 47 12 47 17 ()}
        {Lisp-Entry "get-title" #f 47 42 47 50 ()}
        {Lisp-Entry "set-title" #f 47 42 47 50 ()}
        {Lisp-Entry "get-class-presentation" #f 55 16 55 38 ()}
        {Lisp-Entry "get-class-image" #f 59 16 59 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-addable-classes" #f 63 11 63 30 ("Toolbox-Model" "Toolbox-Group" "list")}}}})
"Toolbox-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "toolbox" "Toolbox-Manager.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Manager" #f 37 19 37 56 ("jazz")
      {Lisp-Entry "Toolbox-File" #f 54 12 54 24 ("Profile" "File")}
      {Lisp-Entry "read-toolbox" #f 58 13 58 25 ("err" "continue-handler:" "install-context" "read-from-file" "instantiate" "toolbox" "get-process" "process" "exists?" "when" "Toolbox-File" "file" "let" "function" "with-safe-execution")}
      {Lisp-Entry "Toolbox-Manager" #f 72 20 72 35 ("291" "width:" "title:" "descendant" "auto-expand/collapse?:" "highlight-edited?:" "tree" "flat?:" "scroller" "center" "descendants" "on-new" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "Dimension" "size:" "new" "tools" "name:" "border" "layout-type:")
        {Lisp-Entry "external-name" #f 85 16 85 29 ("toolbox-manager" "'toolbox-manager" "rest")}
        {Lisp-Entry "host-icon" #f 94 16 94 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 98 16 98 26 ()}
        {Lisp-Entry "get-tools-view" #f 107 11 107 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" #f 111 11 111 24 ("acquire-focus" "descendants" "locate" "tree" "let")}
        {Lisp-Entry "install" #f 121 11 121 18 ("read-toolbox" "set-client" "self" "'descendants" "locate" "set-editor" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "document-status" #f 133 11 133 26 ()}
        {Lisp-Entry "on-new" #f 142 11 142 17 ("centered?:" "0" "Point" "get-surrogate" "add-new" "car" "length" "1" "=" "client" "get-selection" "selection" "current-document" "editor" "let*" "Component" "subtype?" "autoload" "class" "error" "in-manifest?" "not" "or" "if" "Symbol-Request" "class:" "request-name" "name" "let" "evt")}}}})
"Toolbox-Model"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "toolbox" "Toolbox-Model.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Model" #f 37 19 37 54 ("jazz")
      {Lisp-Entry "Toolbox-Model" #f 43 20 43 33 ("initialize")
        {Lisp-Entry "module" #f 46 12 46 18 ()}
        {Lisp-Entry "get-module" #f 46 43 46 51 ()}
        {Lisp-Entry "set-module" #f 46 43 46 51 ()}
        {Lisp-Entry "model" #f 47 12 47 17 ()}
        {Lisp-Entry "get-model" #f 47 43 47 51 ()}
        {Lisp-Entry "set-model" #f 47 43 47 51 ()}
        {Lisp-Entry "get-class-presentation" #f 55 16 55 38 ()}
        {Lisp-Entry "get-class-image" #f 59 16 59 31 ("Bitmap-Resource")}
        {Lisp-Entry "presentation-property?" #f 63 11 63 33 ("model" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 67 11 67 27 ("model")}
        {Lisp-Entry "set-presentation" #f 71 11 71 27 ("string->symbol" "model:" "self" "set-property" "model" "designer")}}}})
"Toolbox-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "toolbox" "Toolbox-Tree.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Tree" #f 37 19 37 53 ("jazz")
      {Lisp-Entry "Toolbox-Tree" #f 44 20 44 32 ("row" "selection-mode:" "multiple-selection?:" "reorderable?:" "draggable?:" ":icons" "portfolio:")
        {Lisp-Entry "addable-root-classes" #f 51 11 51 31 ("Toolbox-Model" "Toolbox-Group" "list")}
        {Lisp-Entry "update-selection" #f 58 11 58 27 ("selected-components" "expand-state")}
        {Lisp-Entry "row-state" #f 62 11 62 20 ("collapsed" "'collapsed" "expanded" "'expanded" "1" "<" "if" "level" "update?" "component")}}}})
"Value-Domain"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "domain" "Value-Domain.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.domain.Value-Domain" #f 37 19 37 52 ("jazz")
      {Lisp-Entry "Value-Domain" #f 43 7 43 19 ()
        {Lisp-Entry "present" #f 51 11 51 18 (":reader" "->string" "value")}}}})
"Value-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Value-Menu.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.row.Value-Menu" #f 37 19 37 47 ("jazz")
      {Lisp-Entry "Value-Menu" #f 45 20 45 30 ("set-value-row" "get-value-row" "initialize")
        {Lisp-Entry "value-row" #f 48 12 48 21 ()}
        {Lisp-Entry "get-value-row" #f 60 18 60 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 64 18 64 31 ("value-row" "set!" "value")}
        {Lisp-Entry "on-show" #f 74 11 74 18 ("value-row" "show-property" "evt")}
        {Lisp-Entry "on-revert" #f 79 11 79 20 ("value-row" "revert-property" "evt")}}}})
"Value-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "row" "Value-Row.jazz"} 1251729948
    {Lisp-Entry "jazz.designer.row.Value-Row" #f 37 19 37 46 ("jazz")
      {Lisp-Entry "Value-Row" #f 49 20 49 29 ("set-limit-to-list?" "get-limit-to-list?" "set-modified?" "get-modified?" "set-nullable?" "get-nullable?" "set-value" "get-value" "set-property" "get-property" "initialize")
        {Lisp-Entry "property_" #f 53 12 53 21 ()}
        {Lisp-Entry "value" #f 54 12 54 17 ()}
        {Lisp-Entry "nullable?" #f 55 12 55 21 ()}
        {Lisp-Entry "modified?" #f 56 12 56 21 ()}
        {Lisp-Entry "limit-to-list?" #f 57 12 57 26 ()}
        {Lisp-Entry "domain" #f 60 8 60 14 ()}
        {Lisp-Entry "editor" #f 61 8 61 14 ()}
        {Lisp-Entry "edited?" #f 62 8 62 15 ()}
        {Lisp-Entry "initialize" #f 70 11 70 21 ("limit-to-list?~self" "nullable?~self" "value~self" "property_~self" "set!" "nextmethod" "apply" "others" "limit-to-list?" "nullable?" "value" "property" "bind-keywords" "rest")}
        {Lisp-Entry "get-filter-name" #f 84 31 84 46 ("properties" "'properties")}
        {Lisp-Entry "get-filter-rank" #f 88 31 88 46 ("1")}
        {Lisp-Entry "get-filter-image" #f 92 31 92 47 ("Bitmap-Resource")}
        {Lisp-Entry "get-property" #f 101 18 101 30 ("property_")}
        {Lisp-Entry "set-property" #f 105 18 105 30 ("property_" "set!" "prop")}
        {Lisp-Entry "get-title" #f 109 18 109 27 ("get-title" "children" "car" "node" "let")}
        {Lisp-Entry "set-title" #f 114 18 114 27 ("set-title" "children" "car" "node" "let" "title")}
        {Lisp-Entry "get-value" #f 119 18 119 27 ("value")}
        {Lisp-Entry "set-value" #f 123 18 123 27 ("value" "set!" "object")}
        {Lisp-Entry "get-nullable?" #f 127 18 127 31 ("nullable?")}
        {Lisp-Entry "set-nullable?" #f 131 18 131 31 ("nullable?" "set!" "value")}
        {Lisp-Entry "get-modified?" #f 135 18 135 31 ("modified?")}
        {Lisp-Entry "set-modified?" #f 139 18 139 31 ("modified?" "set!" "flag")}
        {Lisp-Entry "get-limit-to-list?" #f 143 18 143 36 ("limit-to-list?")}
        {Lisp-Entry "set-limit-to-list?" #f 147 18 147 36 ("limit-to-list?" "set!" "value")}
        {Lisp-Entry "get-editor" #f 151 18 151 28 ("editor")}
        {Lisp-Entry "set-editor" #f 155 18 155 28 ("editor" "set!" "edt")}
        {Lisp-Entry "get-client" #f 159 18 159 28 ("get-tree" "get-client")}
        {Lisp-Entry "auto-inplace?" #f 168 11 168 24 ()}
        {Lisp-Entry "auto-expand" #f 172 11 172 22 ("edit-row" "function" "with-update-locked" "get-tree" "tree" "let" "nextmethod")}
        {Lisp-Entry "auto-select" #f 180 11 180 22 ("select-editor" "nextmethod")}
        {Lisp-Entry "auto-collapse" #f 185 11 185 24 ("end-row-edition" "in-edition?" "when" "nextmethod")}
        {Lisp-Entry "auto-collapsable?" #f 191 11 191 28 ("in-edition?")}
        {Lisp-Entry "enter-value" #f 200 26 200 37 ("get-tree" "get-card" "enter-value" "update" "property_" "not" "if" "set-modified?" "value" "set!" "v")}
        {Lisp-Entry "enter-edited-value" #f 208 18 208 36 ("throw-cancel" "get-edited-value" "enter-value" "validate-value" "if")}
        {Lisp-Entry "default-value" #f 214 26 214 39 ()}
        {Lisp-Entry "present" #f 223 26 223 33 (":reader" "->string" "value")}
        {Lisp-Entry "get-edited-value" #f 232 26 232 42 ("editor" "get-string-content" "read-string-element")}
        {Lisp-Entry "set-edited-value" #f 236 26 236 42 ("present" "editor" "set-string-content" "value")}
        {Lisp-Entry "get-edited-modified?" #f 240 26 240 46 ("editor" "get-controller" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" #f 244 26 244 46 ("editor" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" #f 248 26 248 37 ("editor" "show-text-cursor")}
        {Lisp-Entry "validate-value" #f 252 18 252 32 ("get-edited-value" "revert-property" "no" "get-end" "end:" "get-start" "start:" "focus-editor" "yes" "no:" "yes:" "question" "'question" "type:" "get-message" "message-box" "case" "err" "Parse-Error" "catch")}
        {Lisp-Entry "edit-row" #f 265 18 265 26 ("edited?" "set!" "edit")}
        {Lisp-Entry "end-row-edition" #f 270 18 270 33 ("edited?" "set!" "end-edition")}
        {Lisp-Entry "in-edition?" #f 275 26 275 37 ("edited?")}
        {Lisp-Entry "edit" #f 279 26 279 30 ("edit-in-cell")}
        {Lisp-Entry "end-edition" #f 283 26 283 37 ("close-editor" "save-edition")}
        {Lisp-Entry "save-edition" #f 288 26 288 38 ("set-edited-modified?" "enter-edited-value" "get-edited-modified?" "when")}
        {Lisp-Entry "close-editor" #f 294 26 294 38 ("close-in-cell-editor")}
        {Lisp-Entry "close-editor?" #f 298 26 298 39 ()}
        {Lisp-Entry "select-editor" #f 302 26 302 39 ("focus-editor" "edit-in-cell" "in-cell-edition?" "not" "when" "get-tree" "tree" "let")}
        {Lisp-Entry "in-cell-edition?" #f 309 18 309 34 ("1" "Cell" "new" "get-edited-cell" "nu=?" "self" "row-rank" "row" "in-edition?" "and" "get-tree" "tree" "let")}
        {Lisp-Entry "editor-up-arrow" #f 321 18 321 33 ("NoModifiers" "get-tree" "up-arrow-press")}
        {Lisp-Entry "editor-down-arrow" #f 325 18 325 35 ("NoModifiers" "get-tree" "down-arrow-press")}
        {Lisp-Entry "editor-tab" #f 329 18 329 28 ("down-arrow-press" "get-tree" "up-arrow-press" "shift-down?" "if" "NoModifiers" "modifiers" "let")}
        {Lisp-Entry "editor-return" #f 336 18 336 31 (".150" "duration:" "save-edition" "set-edited-modified?" "function" ":wait" "with-cursor" "show-cursor")}
        {Lisp-Entry "editor-focus-validate" #f 345 18 345 39 ("validate-value" "get-edited-modified?" "limit-to-list?" "if" "view")}
        {Lisp-Entry "editor-focus-delegate" #f 353 18 353 39 ("invalidate-drawing" "select-all?:" "focus-editor" "self" "get-tree" "auto-expand/collapse" "in-edition?" "not" "auto-inplace?" "and" "when")}
        {Lisp-Entry "editor-focus-lose" #f 360 18 360 35 ("close-auto-expanded" "invalidate-drawing" "get-player" "different-overlapped?" "editor" "and" "if" "get-tree" "eq?" "unless" "view")}
        {Lisp-Entry "edit-in-cell" #f 373 26 373 38 ("set-client" "focus-editor" "close-editor?" "close-editor?:" "editor:" "edit-cell" "value" "set-edited-value" "set-parent" "new-editor" "set!" "editor" "unless" "fill" "'fill" "set-layout-type" "get-content" "content" "hscroll?:" "vscroll?:" "parent:" "Scroller-View" "scroller" "Dark-Red" "name:" "Color" "border-color:" "solid" "'solid" "border-type:" "Border-View" "border" "1" "self" "row-rank" "Cell" "new" "cell" "get-tree" "tree" "let*")}
        {Lisp-Entry "close-in-cell-editor" #f 390 18 390 38 ("editor" "set!" "close-editor?" "when" "end-edition" "get-tree" "tree" "let")}
        {Lisp-Entry "focus-editor" #f 397 26 397 38 ("Range" "new" "set-selection" "else" "set-caret" "select-all" "not" "cond" "acquire-focus" "when" "focused-editor" "editor" "let" "select-all?" "select-all?:" "end" "end:" "start" "start:")}
        {Lisp-Entry "focused-editor" #f 406 26 406 40 ("editor")}
        {Lisp-Entry "edit-in-row" #f 415 18 415 29 ("expand/collapse" "set-client" "set-editor" "get-content" "set-parent" "new-editor" "set!" "editor" "unless" "hscroll?:" "vscroll?:" "Scroller-View" "scroller" "Dark-Red" "name:" "Color" "border-color:" "solid" "'solid" "border-type:" "parent:" "Border-View" "new" "border" "editor-height" "row-height:" "self" "father:" "Editor-Row" "class:" "add-row" "subrow" "get-tree" "tree" "let*")}
        {Lisp-Entry "install-container" #f 428 29 428 46 ()}
        {Lisp-Entry "close-in-row-editor" #f 432 18 432 37 ("set-parent" "close" "close-editor?" "if" "get-editor" "editor" "remove-row" "self" "expand/collapse" "when" "get-sons" "first" "editor-row" "get-tree" "tree" "let")}
        {Lisp-Entry "editor-height" #f 444 29 444 42 ("21")}
        {Lisp-Entry "new-editor" #f 448 29 448 39 ("top-padding:" "1" "left-padding:" "self" "value-row:" "editor-class" "new")}
        {Lisp-Entry "editor-class" #f 455 29 455 41 ("Value-Text-View")}
        {Lisp-Entry "edit-in-list" #f 464 11 464 23 ("self" "expand/collapse" "get-list-value" "get-subrow-class" "add-value" "subvalue" "function" "for-each" "get-tree" "tree" "let")}
        {Lisp-Entry "get-subrow-class" #f 472 29 472 45 ("Value-Row")}
        {Lisp-Entry "close-in-list-editor" #f 476 21 476 41 ("remove-every-son" "self" "expand/collapse" "get-tree" "tree" "let")}
        {Lisp-Entry "get-list-edited-value" #f 482 11 482 32 ("get-subvalue" "subrow" "function" "get-sons" "accumulate")}
        {Lisp-Entry "get-list-edited-modified?" #f 488 21 488 46 ("get-sons" "get-modified?" "subrow" "function" "some?" "modified?" "or")}
        {Lisp-Entry "set-list-edited-modified?" #f 495 21 495 46 ("set-modified?" "subrow" "function" "get-sons" "iterate" "modified?" "set!" "flag")}
        {Lisp-Entry "get-subvalue" #f 502 26 502 38 ("get-value")}
        {Lisp-Entry "get-list-value" #f 506 29 506 43 ("value")}
        {Lisp-Entry "add-value" #f 510 29 510 38 ("class" "value")}
        {Lisp-Entry "add-row" #f 514 18 514 25 ("row:" "father:" "add-row" "set-title" "set-value" "present" "presented" "default-value" "unspecified" "'unspecified" "eq?" "if" "list" "children:" "17" "row-height:" "parent:" "row" "Tree-Image" "owner" "Tree-Label" "label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "node" "get-tree" "tree" "let*" "user-data" "user-data:" "Value-Row" "class" "class:" "value" "title" "father")}
        {Lisp-Entry "Modified-Color" #f 532 14 532 28 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "update" #f 536 26 536 32 ("update-in-cell" "value")}
        {Lisp-Entry "update-in-cell" #f 540 11 540 25 ("invalidate-cell" "set-edited-modified?" "set-title" "set-property-modified?" "set-value" "get-cell-data" "get-preserved-data" "if" "data" "get-cell-editor" "editor" "in-edition?" "edited?" "1" "Cell" "new" "cell" "self" "row-rank" "rank" "present" "title" "get-tree" "tree" "let*" "value")}
        {Lisp-Entry "set-property-modified?" #f 556 11 556 33 ("invalidate-cell" "set-color" "Modified-Color" "if" "color" "get-cell-data" "node" "0" "Cell" "new" "cell" "self" "row-rank" "rank" "get-tree" "tree" "let*" "property_" "when" "flag")}
        {Lisp-Entry "edit-definitions" #f 572 26 572 42 ("bell")}
        {Lisp-Entry "double-click" #f 581 11 581 23 ("self" "auto-expand/collapse" "get-tree" "tree" "let" "pos")}
        {Lisp-Entry "context-menu" #f 586 11 586 23 ("track-popup-menu" "update-menu" "self" "value-row:" "new" "menu" "bell" "not" "if" "get-menu-class" "class" "function" "with-context-click" "position" "nu+" "get-tree" "tree" "let" "pos")}
        {Lisp-Entry "get-menu-class" #f 599 29 599 43 ("Value-Menu")}
        {Lisp-Entry "update-menu" #f 603 11 603 22 ("layout-menu" "Separator-Item" "F2" "shortcut:" "on-rename-item" "'on-rename-item" "auto-number?" "unless" "on-remove-item" "'on-remove-item" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "revert" "'revert" "before:" "parent:" "Label-Item" "new" "List-Row" "father" "is?" "when" "menu")}
        {Lisp-Entry "on-remove-item" #f 612 19 612 33 ("self" "father" "remove-item" "evt")}
        {Lisp-Entry "on-rename-item" #f 616 19 616 33 ("self" "father" "rename-item" "evt")}
        {Lisp-Entry "show-property" #f 620 18 620 31 ("property_" "field-name" "set-showed-property" "View-Editor" "is-not?" "get-editor" "editor" "let" "bell" "not" "if" "get-surrogate" "surrogate" "get-client" "client" "let*")}
        {Lisp-Entry "revert-property" #f 631 18 631 33 ("focus-editor" "set-modified?" "set-property-modified?" "set-edited-modified?" "value" "set-edited-value")}
        {Lisp-Entry "draw-data" #f 644 26 644 35 ("0" "1" "draw-at" "height" "width" "data" "row" "column" "value" "context" "surface")}}}})
"Value-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "Value-Text-View.jazz"} 1248802932
    {Lisp-Entry "jazz.designer.editor.Value-Text-View" #f 37 19 37 55 ("jazz")
      {Lisp-Entry "Value-Text-View" #f 47 20 47 35 ("top-padding:" "1" "left-padding:" "show-unfocused-selection?:" "accepts-returns?:" "Label" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "set-value-row" "get-value-row" "initialize")
        {Lisp-Entry "value-row" #f 50 12 50 21 ()}
        {Lisp-Entry "manager" #f 53 8 53 15 ()}
        {Lisp-Entry "get-value-row" #f 65 18 65 31 ("value-row")}
        {Lisp-Entry "set-value-row" #f 69 18 69 31 ("value-row" "set!" "value")}
        {Lisp-Entry "get-manager" #f 78 11 78 22 ("manager")}
        {Lisp-Entry "set-manager" #f 82 11 82 22 ("manager" "set!" "value")}
        {Lisp-Entry "get-edited-value" #f 86 11 86 27 ("get-string-content" "read-string-element")}
        {Lisp-Entry "set-edited-value" #f 90 11 90 27 ("present-edited-value" "set-string-content" "value")}
        {Lisp-Entry "present-edited-value" #f 94 11 94 31 (":reader" "->string" "value")}
        {Lisp-Entry "get-edited-modified?" #f 98 11 98 31 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" #f 102 11 102 31 ("get-controller" "set-modified?" "flag")}
        {Lisp-Entry "up-arrow-move" #f 111 11 111 24 ("editor-up-arrow" "value-row" "manager" "either" "target" "let" "scroll?" "extend?")}
        {Lisp-Entry "down-arrow-move" #f 116 11 116 26 ("editor-down-arrow" "value-row" "manager" "either" "target" "let" "scroll?" "extend?")}
        {Lisp-Entry "tab-press" #f 121 11 121 20 ("value-row" "editor-tab" "manager" "end-completion" "has-completion?" "if" "modifiers" "key")}
        {Lisp-Entry "return-press" #f 129 11 129 23 ("value-row" "editor-return" "manager" "if" "nextmethod" "key")}
        {Lisp-Entry "document-menu" #f 136 11 136 24 ()}
        {Lisp-Entry "focus-validate" #f 146 11 146 25 ("value-row" "editor-focus-validate" "view")}
        {Lisp-Entry "focus-lose" #f 150 11 150 21 ("value-row" "editor-focus-lose" "manager" "if" "nextmethod" "view")}
        {Lisp-Entry "focus-master" #f 157 11 157 23 ("value-row" "get-tree")}}}})
"View-Descendants-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "View-Descendants-Editor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.View-Descendants-Editor" #f 37 19 37 63 ("jazz")
      {Lisp-Entry "View-Descendants-Editor" #f 43 20 43 43 ("on-toggle-contents" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "Dimension" "size:" "toggle-contents" "tools" "name:")
        {Lisp-Entry "form-model" #f 53 11 53 21 ("nextmethod" "else" "View-Descendants-Tree" "tree" "get-name" "case" "form")}}}})
"View-Descendants-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "View-Descendants-Tree.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.View-Descendants-Tree" #f 37 19 37 61 ("jazz")
      {Lisp-Entry "View-Descendants-Tree" #f 44 20 44 41 ("set-show-contents?" "get-show-contents?" "initialize")
        {Lisp-Entry "show-contents?" #f 47 12 47 26 ()}
        {Lisp-Entry "get-show-contents?" #f 55 18 55 36 ("show-contents?")}
        {Lisp-Entry "set-show-contents?" #f 59 18 59 36 ("preserving-update" "show-contents?" "set!" "value")}
        {Lisp-Entry "insert-component" #f 69 11 69 27 ("insert-components" "nextmethod" "apply" "Content-View" "is-not?" "show-contents?" "or" "if" "rest" "level" "update?" "rights" "component" "row")}}}})
"View-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "View-Editor.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.View-Editor" #f 37 19 37 51 ("jazz")
      {Lisp-Entry "View-Editor" #f 50 20 50 31 ("vscroll?:" "hscroll?:" "scroller" "edge" "border-type:" "fill" "center" "on-edit-form" "edit-form" "separator3" "on-toggle-try-out" "try-out" "separator2" "on-toggle-content" "content" "on-toggle-frames" "selected?:" "frames" "12" "separator1" "on-save" "save" "on-open" "open" "on-new" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "new" "north" "location:" "6" "0" "Rect" "layout-insets:" "flow" "33" "300" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "select" "'select" "initialize")
        {Lisp-Entry "mode" #f 53 12 53 16 ()}
        {Lisp-Entry "get-mode" #f 53 46 53 54 ()}
        {Lisp-Entry "set-mode" #f 53 46 53 54 ()}
        {Lisp-Entry "overlay" #f 56 18 56 25 ()}
        {Lisp-Entry "get-overlay" #f 56 56 56 64 ()}
        {Lisp-Entry "showed-property" #f 57 18 57 33 ()}
        {Lisp-Entry "get-showed-property" #f 57 56 57 64 ()}
        {Lisp-Entry "rubber-band?" #f 58 18 58 30 ()}
        {Lisp-Entry "get-rubber-band?" #f 58 56 58 64 ()}
        {Lisp-Entry "base-view" #f 59 18 59 27 ()}
        {Lisp-Entry "get-base-view" #f 59 56 59 64 ()}
        {Lisp-Entry "base-position" #f 60 18 60 31 ()}
        {Lisp-Entry "get-base-position" #f 60 56 60 64 ()}
        {Lisp-Entry "current-position" #f 61 18 61 34 ()}
        {Lisp-Entry "get-current-position" #f 61 56 61 64 ()}
        {Lisp-Entry "preserved-client" #f 62 18 62 34 ()}
        {Lisp-Entry "host-position" #f 92 16 92 29 ("117" "227" "Point")}
        {Lisp-Entry "host-size" #f 96 16 96 25 ("472" "708" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 100 11 100 26 ("designer")}
        {Lisp-Entry "new-controller" #f 110 11 110 25 ("self" "View-Editor-Controller" "new")}
        {Lisp-Entry "View-Editor-Controller" #f 115 9 115 31 ()
          {Lisp-Entry "save" #f 119 13 119 17 ("document" "save-content-patch")}}
        {Lisp-Entry "guest-actions" #f 128 11 128 24 ("nextmethod" "view-editor" "'view-editor" "find-actions" "cons")}
        {Lisp-Entry "size-change" #f 138 11 138 22 ("get-height" "get-width" "Dimension" "new" "set-size" "'toolbar" "locate" "toolbar" "let" "nextmethod" "size")}
        {Lisp-Entry "on-new" #f 144 11 144 17 ("evt")}
        {Lisp-Entry "on-open" #f 148 11 148 18 ("open-form" "instantiate" "set-client" "evt")}
        {Lisp-Entry "on-edit-form" #f 152 11 152 23 ("edit-form" "evt")}
        {Lisp-Entry "on-toggle-frames" #f 156 11 156 27 ("invalidate-view" "when" "get-reference" "reference" "let" "evt")}
        {Lisp-Entry "on-toggle-content" #f 162 11 162 28 ("invalidate-view" "when" "get-reference" "reference" "let" "evt")}
        {Lisp-Entry "on-toggle-try-out" #f 168 11 168 28 ("list" "else" "set-client" "set-selection" "client" "set!" "preserved-client" "not" "cond" "function" "with-locked-update" "evt")}
        {Lisp-Entry "client-update" #f 186 11 186 24 ("set-visible?" "client" "when" "install-client" "nextmethod")}
        {Lisp-Entry "install-client-surrogate" #f 193 11 193 35 ("self" "install-surrogate" "client" "when")}
        {Lisp-Entry "install-client" #f 198 29 198 43 ("set-client" "set-parent" "get-parent" "not" "client" "and" "when" "get-content" "essay" "content" "'scroller" "locate-component" "scroller" "let*")}
        {Lisp-Entry "install-current-designer" #f 212 11 212 35 ("get-surrogate" "redraw-border" "nextmethod" "form" "component")}
        {Lisp-Entry "set-showed-property" #f 223 21 223 40 ("client" "invalidate-view" "showed-property" "set!" "property")}
        {Lisp-Entry "show-frames?" #f 233 21 233 33 ("frames" "'frames" "locate" "get-selected?")}
        {Lisp-Entry "show-content?" #f 237 21 237 34 ("content" "'content" "locate" "get-selected?")}
        {Lisp-Entry "start-rubber-band" #f 246 21 246 38 ("setup-overlay" "acquire-capture" "current-position" "base-position" "base-view" "rubber-band?" "set!" "pos" "view")}
        {Lisp-Entry "process-rubber-band" #f 255 21 255 40 ("select-rubber-banded" "rect" "base-position" "corners->rect" "client" "invalidate-rect" "set!" "current-position" "old" "let" "rubber-band?" "when" "pos")}
        {Lisp-Entry "select-rubber-banded" #f 267 11 267 31 ("set-selection" "get-output" "lst" "let" "put" "rects-intersect?" "when" "client" "acquire" "get-bounds" "b" "view" "function" "base-view" "for-each-view" "List-Factory" "new" "selection" "rect-size" "s" "rect-position" "p" "normalize-rect" "r" "let*" "rect")}
        {Lisp-Entry "end-rubber-band" #f 282 21 282 36 ("rubber-band?" "set!" "base-view" "release-capture" "remove-overlay" "base-position" "corners->rect" "select-rubber-banded" "process-rubber-band" "pos")}
        {Lisp-Entry "setup-overlay" #f 295 11 295 24 ("self" "editor:" "client" "parent:" "Client-Overlay" "new" "overlay" "set!")}
        {Lisp-Entry "remove-overlay" #f 299 11 299 25 ("set!" "overlay" "close")}
        {Lisp-Entry "align-left" #f 309 18 309 28 ("cdr" "get-v" "Point" "new" "set-view-lie" "get-lie" "lie" "view" "function" "for-each" "lie-left" "h" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "align-top" #f 321 18 321 27 ("cdr" "get-h" "Point" "new" "set-view-lie" "get-lie" "lie" "view" "function" "for-each" "lie-top" "v" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "align-right" #f 333 18 333 29 ("cdr" "get-v" "Point" "new" "set-view-lie" "get-width" "-" "get-lie" "lie" "view" "function" "for-each" "lie-right" "h" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "align-bottom" #f 346 18 346 30 ("cdr" "get-h" "Point" "new" "set-view-lie" "get-height" "-" "get-lie" "lie" "view" "function" "for-each" "lie-bottom" "v" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "center-horizontally" #f 359 18 359 37 ("cdr" "get-v" "Point" "new" "set-view-lie" "-" "fxround/" "+" "get-lie" "lie" "view" "function" "for-each" "get-width" "width" "lie-left" "h" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "center-vertically" #f 373 18 373 35 ("cdr" "get-h" "Point" "new" "set-view-lie" "-" "fxround/" "+" "get-lie" "lie" "view" "function" "for-each" "get-height" "height" "lie-top" "v" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "space-horizontally" #f 387 18 387 36 ("cddr" "get-width" "increase!" "get-v" "Point" "new" "set-view-lie" "get-lie" "lie" "view" "function" "for-each" "+" "h" "lie-right" "lie-left" "-" "dh" "second" "get-surrogate" "outer-client" "first" "let*" "bell" "3" "selection" "length" "<" "if")}
        {Lisp-Entry "space-vertically" #f 402 18 402 34 ("cddr" "get-height" "increase!" "get-h" "Point" "new" "set-view-lie" "get-lie" "lie" "view" "function" "for-each" "+" "v" "lie-bottom" "lie-top" "-" "dv" "second" "get-surrogate" "outer-client" "first" "let*" "bell" "3" "selection" "length" "<" "if")}
        {Lisp-Entry "resize-width" #f 417 18 417 30 ("cdr" "get-height" "Dimension" "new" "'size" "designer" "set-property" "get-size" "size" "view" "function" "for-each" "get-width" "width" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "resize-height" #f 429 18 429 31 ("cdr" "get-width" "Dimension" "new" "'size" "designer" "set-property" "get-size" "size" "view" "function" "for-each" "get-height" "height" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "resize-both" #f 441 18 441 29 ("cdr" "'size" "designer" "set-property" "let" "view" "function" "for-each" "get-size" "size" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "<" "if")}
        {Lisp-Entry "lie-left" #f 452 11 452 19 ("get-lie" "get-h" "view")}
        {Lisp-Entry "lie-top" #f 456 11 456 18 ("get-lie" "get-v" "view")}
        {Lisp-Entry "lie-right" #f 460 11 460 20 ("get-width" "get-lie" "get-h" "+" "view")}
        {Lisp-Entry "lie-bottom" #f 464 11 464 21 ("get-height" "get-lie" "get-v" "+" "view")}
        {Lisp-Entry "set-view-lie" #f 468 11 468 23 ("get-position" "position" "'position" "designer" "set-property" "set-lie" "lie" "view")}}
      {Lisp-Entry "Overlay-Outside" #f 478 12 478 27 ("0.8" "alpha:" "234" "blue:" "158" "green:" "96" "red:" "Color")}
      {Lisp-Entry "Overlay-Inside" #f 481 12 481 26 ("0.4" "alpha:" "234" "blue:" "158" "green:" "96" "red:" "Color")}
      {Lisp-Entry "Client-Overlay" #f 485 7 485 21 ()
        {Lisp-Entry "editor" #f 488 12 488 18 ()}
        {Lisp-Entry "draw" #f 491 11 491 15 ("Overlay-Inside" "Overlay-Outside" "rectangle" "corners->rect" "rect" "when" "get-current-position" "current" "editor" "get-base-position" "base" "let" "lv" "lh" "context" "surface")}}}})
"View-Editor-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "editor" "View-Editor-Actions.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.editor.View-Editor-Actions" #f 37 19 37 59 ("jazz")
      {Lisp-Entry "View-Editor-Actions" #f 46 20 46 39 ("on-save" "save" "on-open" "open" ":shift" "on-new" ":frame" "new" ":control" "Shortcut" "shortcut:" "on-edit-form" ":document" "Event-Handler" "action-handler:" "edit-form" "name:")}}})
"View-Surrogate"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "surrogate" "View-Surrogate.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.surrogate.View-Surrogate" #f 37 19 37 57 ("jazz")
      {Lisp-Entry "View-Surrogate" #f 54 20 54 34 ("initialize")
        {Lisp-Entry "client-renderer" #f 57 18 57 33 ()}
        {Lisp-Entry "client-mouse-down-handler" #f 58 18 58 43 ()}
        {Lisp-Entry "client-drag-move-handler" #f 59 18 59 42 ()}
        {Lisp-Entry "client-drag-up-handler" #f 60 18 60 40 ()}
        {Lisp-Entry "client-double-click-handler" #f 61 18 61 45 ()}
        {Lisp-Entry "client-current-drop-handler" #f 62 18 62 45 ()}
        {Lisp-Entry "client-receive-drop-handler" #f 63 18 63 45 ()}
        {Lisp-Entry "client-context-menu-handler" #f 64 18 64 45 ()}
        {Lisp-Entry "client-cursor-update-handler" #f 65 18 65 46 ()}
        {Lisp-Entry "client-key-press-handler" #f 66 18 66 42 ()}
        {Lisp-Entry "client-arrow-press-handler" #f 67 18 67 44 ()}
        {Lisp-Entry "client-backspace-press-handler" #f 68 18 68 48 ()}
        {Lisp-Entry "dragging?" #f 71 8 71 17 ()}
        {Lisp-Entry "processing?" #f 72 8 72 19 ()}
        {Lisp-Entry "current-part" #f 73 8 73 20 ()}
        {Lisp-Entry "start-position" #f 74 8 74 22 ()}
        {Lisp-Entry "old-position" #f 75 8 75 20 ()}
        {Lisp-Entry "install-handlers" #f 83 11 83 27 ("invalidate-border" "on-backspace-press" "'on-backspace-press" "set-backspace-press-handler" "on-arrow-press" "'on-arrow-press" "set-arrow-press-handler" "on-key-press" "'on-key-press" "set-key-press-handler" "on-cursor-update" "'on-cursor-update" "set-cursor-update-handler" "on-context-menu" "'on-context-menu" "set-context-menu-handler" "on-receive-drop" "'on-receive-drop" "set-receive-drop-handler" "on-current-drop" "'on-current-drop" "set-current-drop-handler" "on-double-click" "'on-double-click" "set-double-click-handler" "on-drag-up" "'on-drag-up" "set-drag-up-handler" "on-drag-move" "'on-drag-move" "set-drag-move-handler" "preserved:" "on-mouse-down" "'on-mouse-down" "method-name:" "target:" "Surrogate-Handler" "new" "set-mouse-down-handler" "self" "set-renderer" "get-backspace-press-handler" "client-backspace-press-handler" "get-arrow-press-handler" "client-arrow-press-handler" "get-key-press-handler" "client-key-press-handler" "get-cursor-update-handler" "client-cursor-update-handler" "get-context-menu-handler" "client-context-menu-handler" "get-receive-drop-handler" "client-receive-drop-handler" "get-current-drop-handler" "client-current-drop-handler" "get-double-click-handler" "client-double-click-handler" "get-drag-up-handler" "client-drag-up-handler" "get-drag-move-handler" "client-drag-move-handler" "get-mouse-down-handler" "client-mouse-down-handler" "client" "get-renderer" "client-renderer" "set!" "nextmethod")}
        {Lisp-Entry "remove-handlers" #f 112 11 112 26 ("invalidate-border" "client-backspace-press-handler" "set-backspace-press-handler" "client-arrow-press-handler" "set-arrow-press-handler" "client-key-press-handler" "set-key-press-handler" "client-cursor-update-handler" "set-cursor-update-handler" "client-context-menu-handler" "set-context-menu-handler" "client-receive-drop-handler" "set-receive-drop-handler" "client-current-drop-handler" "set-current-drop-handler" "client-double-click-handler" "set-double-click-handler" "client-drag-up-handler" "set-drag-up-handler" "client-drag-move-handler" "set-drag-move-handler" "client-mouse-down-handler" "set-mouse-down-handler" "client-renderer" "client" "set-renderer" "nextmethod")}
        {Lisp-Entry "on-save-form" #f 134 11 134 23 ("save-form" "evt")}
        {Lisp-Entry "on-bring-to-front" #f 138 11 138 28 ("bring-to-front" "component" "function" "for-each" "get-selection" "selection" "editor" "get-designer" "designer" "let" "evt")}
        {Lisp-Entry "on-send-to-back" #f 146 11 146 26 ("send-to-back" "component" "function" "for-each" "get-selection" "selection" "editor" "get-designer" "designer" "let" "evt")}
        {Lisp-Entry "on-close-selection" #f 154 11 154 29 ("close-selection" "evt")}
        {Lisp-Entry "on-rename-selected" #f 158 11 158 29 ("get-name" "initial-value:" "Symbol-Request" "class:" "request-name" "set-name" "editor" "get-designer" "designer" "car" "component" "bell" "1" "length" "/=" "if" "get-selection" "selection" "let" "evt")}
        {Lisp-Entry "on-properties" #f 167 11 167 24 ("focus?:" "workspace:" "Properties-Manager" "select-palette" "evt")}
        {Lisp-Entry "Selected-Colors" #f 176 14 176 29 ("Yellow" "Orange" "Red" "name:" "Color")}
        {Lisp-Entry "Selected-Pens" #f 179 14 179 27 ()}
        {Lisp-Entry "Unselected-Color" #f 183 14 183 30 ("Blue" "name:" "Color")}
        {Lisp-Entry "render" #f 187 11 187 17 ("draw" "default-render" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface" "drawing")}
        {Lisp-Entry "default-render" #f 192 11 192 25 ("draw-children" "Outline-View" "is-not?" "or" "draw-content" "draw-background" "when" "editor" "show-content?" "content?" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "context" "surface" "drawing")}
        {Lisp-Entry "draw" #f 202 26 202 30 ("draw-surrogate-frame" "draw-surrogate-selected" "draw-showed-property" "surface")}
        {Lisp-Entry "draw-showed-property" #f 208 18 208 38 ("2" "get-v" "3" "get-h" "+" "draw-text" "White" "-1" "inflate-rect" "fill-rect" "Black" "frame-rect" "position/size->rect" "rect" "get-size" "center" "pos" "4" "7" "Dimension" "nu+" "size" "get-text-extent" "extent" "->string" "string" "read-property" "value" "let*" "Dark-Red" "Color" "set-text-color" "Label" "name:" "Font" "set-font" "client" "class-of" "category-field" "property?" "and" "when" "editor" "get-showed-property" "property" "let" "surface")}
        {Lisp-Entry "draw-surrogate-selected" #f 224 11 224 34 ("0.15" "alpha:" "Dark-Purple" "name:" "Color" "get-bounds" "fill-rect" "editor" "get-selection" "client" "memq" "when" "surface")}
        {Lisp-Entry "draw-surrogate-frame" #f 229 11 229 31 ("-1" "inflate-rect" "inside" "get-reference" "frame-rect" "get-bounds" "outside" "color" "2" "min" "Selected-Colors" "element" "Unselected-Color" "not" "if" "key:" "find" "rank" "frame-color" "get-surrogate" "view" "outer-view" "define" "get-selection" "selection" "let" "client" "outer-client" "eq?" "editor" "show-frames?" "and" "when" "surface")}
        {Lisp-Entry "draw-selected" #f 250 26 250 39 ("-1" "inflate-rect" "inside" "get-reference" "self" "eq?" "when" "frame-rect" "color" "function" "with-clipper" "Black" "name:" "Color" "line" "selected-color" "set-color" "alternate" "'alternate" "set-style" "get-bottom" "b" "1" "get-right" "-" "r" "get-top" "t" "get-left" "l" "let" "get-root" "acquired" "get-clipper" "clipper" "editor" "acquire" "outside" "client" "get-bounds" "bounds" "let*" "rank" "surface")}
        {Lisp-Entry "border-region" #f 275 11 275 24 ("2" "Rect" "insets:" "outer-client" "border-region")}
        {Lisp-Entry "invalidate-border" #f 279 11 279 28 ("2" "Rect" "insets:" "outer-client" "invalidate-border")}
        {Lisp-Entry "redraw-border" #f 283 11 283 24 ("2" "Rect" "insets:" "outer-client" "redraw-border")}
        {Lisp-Entry "get-selected-colors" #f 287 11 287 30 ("Selected-Colors")}
        {Lisp-Entry "selected-color" #f 291 18 291 32 ("1" "length" "-" "min" "element" "get-selected-colors" "colors" "let" "rank")}
        {Lisp-Entry "on-cursor-update" #f 301 11 301 27 ("get-position" "cursor-update" "evt")}
        {Lisp-Entry "cursor-update" #f 305 26 305 39 ("get-resize-cursor" ":all" "move-client?" ":opened-hand" "grab" ":arrow" "select" "case" ":closed-hand" "dragging?" "get-mouse-down?" "get-client" "not" "get-size" "acquire" "find-resize-part" "size-client?" "current-part" "either" "part" "client" "get-surrogate" "outer-client" "outer" ":cross" "set-cursor" "rect" "'rect" "eq?" "if" "editor" "get-mode" "mode" "let" "pos")}
        {Lisp-Entry "Drag-Tolerance" #f 331 14 331 28 ("3")}
        {Lisp-Entry "on-mouse-down" #f 335 11 335 24 ("grab" "rect" "acquire" "start-rubber-band" "select-in-editor" "select?" "when" "mouse-down" "get-client" "client" "neq?" "if" "select" "case" "get-position" "pos" "editor" "get-mode" "mode" "let" "evt")}
        {Lisp-Entry "on-drag-move" #f 351 11 351 23 ("drag-move" "client" "get-client" "acquire" "process-rubber-band" "editor" "get-rubber-band?" "if" "get-position" "pos" "let" "evt")}
        {Lisp-Entry "on-drag-up" #f 358 11 358 21 ("drag-up" "client" "get-client" "acquire" "end-rubber-band" "editor" "get-rubber-band?" "if" "get-position" "pos" "let" "evt")}
        {Lisp-Entry "on-double-click" #f 365 11 365 26 ("get-position" "double-click" "evt")}
        {Lisp-Entry "on-current-drop" #f 369 11 369 26 ("get-drag-drop" "get-position" "current-drop" "evt")}
        {Lisp-Entry "on-receive-drop" #f 373 11 373 26 ("get-drag-drop" "get-sender" "get-position" "receive-drop" "evt")}
        {Lisp-Entry "on-context-menu" #f 377 11 377 26 ("get-position" "context-menu" "evt")}
        {Lisp-Entry "select?" #f 381 29 381 36 ()}
        {Lisp-Entry "select-in-editor" #f 385 26 385 42 ("client" "editor" "select")}
        {Lisp-Entry "move-client?" #f 389 29 389 41 ()}
        {Lisp-Entry "size-client?" #f 393 29 393 41 ()}
        {Lisp-Entry "some-movable?" #f 397 11 397 24 ("get-surrogate" "move-client?" "client" "function" "some?" "selection")}
        {Lisp-Entry "mouse-down" #f 403 26 403 36 ("acquire-focus" "old-position" "to-desktop" "get-size" "acquire" "find-resize-part" "size-client?" "current-part" "processing?" "get-selection" "some-movable?" "move-client?" "and" "get-surrogate" "outer-client" "outer" "acquire-capture" "start-position" "dragging?" "set!" "editor" "get-client" "client" "eq?" "edit-client" "begin" "alt-down?" "if" "select-in-editor" "select?" "when" "function" "select" "let" "pos")}
        {Lisp-Entry "drag-move" #f 428 26 428 35 ("get-player" "update-window" "size-client" "move-client" "dheight" "dwidth" "function" "resize-client" "NoModifiers" "move-selection" "if" "get-v" "dv" "get-h" "dh" "old-position" "from-desktop" "old-pos" "let*" "set!" "Drag-Tolerance" "distance" ">=" "not" "current-part" "or" "when" "to-desktop" "desktop-pos" "processing?" "client" "scroll" "start-position" "nu-" "delta" "let" "dragging?" "cond" "pos")}
        {Lisp-Entry "drag-up" #f 451 26 451 33 ("verify-position/size" "processing?" "current-part" "set!" "client" "release-capture" "dragging?" "cond" "pos")}
        {Lisp-Entry "verify-position/size" #f 465 11 465 31 ("position" "'position" "size" "'size" "set-property" "minimum-size:" "fit-within" "new-size" "new-position" "receive" "editor" "get-designer" "designer" "get-parent" "get-size" "outer" "get-rect" "rect" "when" "client" "minimal-size" "min-size" "let")}
        {Lisp-Entry "double-click" #f 476 26 476 38 ("edit-client" "pos")}
        {Lisp-Entry "current-drop" #f 480 26 480 38 ("client" "view:" "Drop-Target" "new" "drag-drop" "pos")}
        {Lisp-Entry "receive-drop" #f 484 26 484 38 ("set-showed-property" "editor" "get-showed-property" "eq?" "if" "field-name" "name" "get-property" "property" "set-selection" "Value-Row" "is?" "when" "get-row" "row" "get-source" "source" "Properties-Tree" "add-new" "get-model" "get-module" "module-autoload" "model" "selected-component" "let*" "Toolbox-Tree" "typecase" "drag-drop" "sender" "pos")}
        {Lisp-Entry "add-new" #f 503 18 503 25 ("list" "set-selection" "position:" "add-view" "editor" "get-designer" "designer" "visible?:" "client" "parent:" "new" "child" "let" "centered?" "centered?:" "pos" "model")}
        {Lisp-Entry "context-menu" #f 510 26 510 38 ("track-popup-menu" "layout-menu" "update-context-menu" "get-context-menu" "menu" "let" "client" "acquire-focus" "select-in-editor" "select?" "when" "pos")}
        {Lisp-Entry "get-context-menu" #f 522 26 522 42 ("context-menu-class" "new")}
        {Lisp-Entry "context-menu-class" #f 526 26 526 44 ("Surrogate-Menu")}
        {Lisp-Entry "update-context-menu" #f 530 26 530 45 ("menu")}
        {Lisp-Entry "outer-client" #f 539 11 539 23 ("editor" "get-reference" "client" "outer-view")}
        {Lisp-Entry "move-client" #f 543 11 543 22 ("get-v" "get-h" "+" "Point" "new" "position:" "set-property" "get-position" "pos" "move-client?" "client" "get-surrogate" "outer-client" "outer" "get-designer" "designer" "editor" "get-selection" "selection" "let" "0" "/=" "or" "when" "dv" "dh")}
        {Lisp-Entry "size-client" #f 553 11 553 22 ("update-scrollbars" "get-reference" "client" "eq?" "invalidate-region" "size:" "editor" "get-designer" "set-property" "border-region" "region" "with-closed" "get-height" "get-width" "+" "Dimension" "new" "new-size" "get-size" "size" "outer-client" "outer" "let*" "0" "/=" "or" "when" "dheight" "dwidth")}
        {Lisp-Entry "edit-client" #f 567 29 567 40 ("client" "editor" "edit-component")}
        {Lisp-Entry "on-key-press" #f 576 11 576 23 ("get-key" "key-press" "evt")}
        {Lisp-Entry "key-press" #f 580 26 580 35 ("key")}
        {Lisp-Entry "on-arrow-press" #f 584 11 584 25 ("down" "1" "right" "up" "0" "-1" "move-selection" "left" "direction:" "get-property" "case" "get-modifiers" "modifiers" "let" "evt")}
        {Lisp-Entry "on-backspace-press" #f 593 11 593 29 ("close-selection" "evt")}
        {Lisp-Entry "move-selection" #f 602 11 602 25 ("car" "list" "if" "*" "get-surrogate" "move-client" "view" "function" "for-each" "get-selection" "selection" "move-quantum" "quantum" "and" "single?" "control-key?" "control?" "shift-key?" "shift?" "let*" "modifiers" "dv" "dh")}
        {Lisp-Entry "move-quantum" #f 613 11 613 23 ("1" "8" "if" "shift?")}
        {Lisp-Entry "save-form" #f 624 18 624 27 ("save" "when" "get-selection" "selection" "let")}
        {Lisp-Entry "can-undo?" #f 635 26 635 35 ()}
        {Lisp-Entry "can-redo?" #f 639 26 639 35 ()}
        {Lisp-Entry "can-cut?" #f 643 26 643 34 ()}
        {Lisp-Entry "can-copy?" #f 647 26 647 35 ()}
        {Lisp-Entry "can-paste?" #f 651 26 651 36 ("jazz-parcels" "'jazz-parcels" "clipboard-format-available?")}
        {Lisp-Entry "can-paste-properties?" #f 655 26 655 47 ()}
        {Lisp-Entry "can-delete?" #f 659 26 659 37 ()}
        {Lisp-Entry "can-rename?" #f 663 26 663 37 ()}
        {Lisp-Entry "can-select-all?" #f 667 26 667 41 ()}
        {Lisp-Entry "undo" #f 671 26 671 30 ()}
        {Lisp-Entry "redo" #f 675 26 675 30 ()}
        {Lisp-Entry "cut-selection" #f 679 26 679 39 ("set-selection" "cut-components" "editor" "get-designer" "designer" "get-selection" "selection" "let")}
        {Lisp-Entry "copy-selection" #f 686 26 686 40 ("copy-components" "editor" "get-designer" "designer" "get-selection" "selection" "let")}
        {Lisp-Entry "paste-clipboard" #f 692 26 692 41 ("set-selection" "0" "Point" "position" "'position" "set-property" "view" "function" "for-each" "paste-clipboard" "views" "car" "parent" "editor" "get-designer" "designer" "let*" "bell" "1" "length" "/=" "if" "get-selection" "selection" "let")}
        {Lisp-Entry "paste-properties" #f 705 26 705 42 ()}
        {Lisp-Entry "delete-selection" #f 709 26 709 42 ("close-selection")}
        {Lisp-Entry "rename-selection" #f 713 26 713 42 ()}
        {Lisp-Entry "select-all" #f 717 26 717 36 ("client" "get-children" "set-selection" "rest")}
        {Lisp-Entry "get-component-selection" #f 726 11 726 34 ("get-selection" "get-surrogate" "outer-client" "View" "is?" "if" "component" "function" "map")}
        {Lisp-Entry "select" #f 734 11 734 17 ("redraw-view" "redraw-border" "user-message" "acquire-focus" "client" "bring-to-front" "0" "=" "when" "focus?" "rank")}
        {Lisp-Entry "unselect" #f 746 11 746 19 ("client" "redraw-view" "redraw-border")}}
      {Lisp-Entry "Surrogate-Menu" #f 756 7 756 21 ("properties" "end-close/rename" "rename-selected" "close-selection" "end-layer" "send-to-back" "view-surrogate" "bring-to-front" "end-edition" "paste" "copy" "view" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "cut" "name:")}}})
"View-Surrogate-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "surrogate" "View-Surrogate-Actions.jazz"} 1248797036
    {Lisp-Entry "jazz.designer.surrogate.View-Surrogate-Actions" #f 37 19 37 65 ("jazz")
      {Lisp-Entry "View-Surrogate-Actions" #f 46 20 46 42 ("on-properties" "properties" "F2" "Shortcut" "shortcut:" "on-rename-selected" "rename-selected" "on-close-selection" "close-selection" "on-send-to-back" "send-to-back" "on-bring-to-front" ":container" "parent:" "Event-Handler" "action-handler:" "bring-to-front" "name:")}}})
"_designer"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "_designer.jazz"} 1237033580
    {Lisp-Entry "jazz.designer" #f 37 9 37 22 ("jazz")}})
"autoload"
 ({Lisp-File-Entry {File Jazz "lib" "jazz.designer" "src" "jazz" "designer" "autoload.jazz"} 1247076888
    {Lisp-Entry "jazz.designer.autoload" #f 37 19 37 41 ("jazz")}})
