"Alignment-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "designer" "Alignment-Editor.jazz"} 1226584790
    {Lisp-Entry "jedi.designer.Alignment-Editor" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Alignment-Editor" #f 50 7 50 23 ("on-resize-both" "resize-both" "on-resize-height" "resize-height" "on-resize-width" "resize-width" "on-space-vertically" "space-vertically" "on-space-horizontally" "space-horizontally" "on-center-vertically" "center-vertically" "on-center-horizontally" "center-horizontally" "on-align-bottom" "align-bottom" "on-align-top" "align-top" "on-align-right" "align-right" "on-align-left" ":form" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" "tooltip-text:" "align-left" "name:" "View")
        {Lisp-Entry "client" #f 53 12 53 18 ("set-client" "get-client")}
        {Lisp-Entry "flow-layout" #f 56 8 56 19 ()}
        {Lisp-Entry "external-name" #f 77 16 77 29 ("alignment-editor" "'alignment-editor" "rest")}
        {Lisp-Entry "host-title" #f 86 16 86 26 ()}
        {Lisp-Entry "client-activate" #f 90 11 90 26 ("get-client" "set-client" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "finish" #f 101 11 101 17 ("layout-view" "0" "5" "4" "Rect" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "layout" #f 107 11 107 17 ("get-height" "get-width" "children" "flow-layout" "layout")}
        {Lisp-Entry "on-align-left" #f 111 11 111 24 ("align-left" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-align-top" #f 118 11 118 23 ("align-top" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-align-right" #f 125 11 125 25 ("align-right" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-align-bottom" #f 132 11 132 26 ("align-bottom" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-center-horizontally" #f 139 11 139 33 ("center-horizontally" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-center-vertically" #f 146 11 146 31 ("center-vertically" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-space-horizontally" #f 153 11 153 32 ("space-horizontally" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-space-vertically" #f 160 11 160 30 ("space-vertically" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-resize-width" #f 167 11 167 26 ("resize-width" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-resize-height" #f 174 11 174 27 ("resize-height" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-resize-both" #f 181 11 181 25 ("resize-both" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "get-client" #f 193 18 193 28 ("client")}
        {Lisp-Entry "set-client" #f 197 18 197 28 ("client" "set!" "clt")}}}})
"Bitmap-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "resource" "Bitmap-File.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.resource.Bitmap-File" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Bitmap-File" #f 45 7 45 18 ("Resource-File")
        {Lisp-Entry "resource-class" #f 48 11 48 25 ("Bitmap-Resource")}
        {Lisp-Entry "resource-marker" #f 52 11 52 26 ()}}}})
"C-Category-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Category-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Category-Entry" #f 37 9 37 49 ("jazz")
      {Lisp-Entry "C-Category-Entry" #f 46 7 46 23 ("C-Entry")
        {Lisp-Entry "construct-literal" #f 50 16 50 33 ("self" "new" "name" "context")}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("nextmethod" "name")}
        {Lisp-Entry "print-catalog" #f 58 11 58 24 ("name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 70 11 70 20 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" #f 79 11 79 25 ("name" "update-index" "references-index" "definitions-index")}}}})
"C-Define-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Define-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Define-Entry" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "C-Define-Entry" #f 46 7 46 21 ("C-Definition-Entry")}}})
"C-Definition-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Definition-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Definition-Entry" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "C-Definition-Entry" #f 46 7 46 25 ("C-Entry")
        {Lisp-Entry "construct-literal" #f 50 16 50 33 ("self" "new" "column" "line" "name" "context")}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("nextmethod" "column" "line" "name")}
        {Lisp-Entry "print-catalog" #f 58 11 58 24 ("column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "update-indexes" #f 70 11 70 25 ("name" "update-index" "references-index" "definitions-index")}}}})
"C-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Entry" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "C-Entry" #f 47 7 47 14 ("Indexed-Entry")
        {Lisp-Entry "source-frame-type" #f 50 11 50 28 ("C-Text-View")}}}})
"C-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "text" "C-Explorer.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.text.C-Explorer" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "C-Explorer" #f 46 7 46 17 ("Code-Explorer")
        {Lisp-Entry "get-syntax" #f 49 11 49 21 ("c" "'c")}
        {Lisp-Entry "forward-single-line-comment" #f 53 19 53 46 ("next-paragraph")}
        {Lisp-Entry "forward-multi-line-comment" #f 57 19 57 45 ("begin" "1" "eqv?" "and" "if" "when" "0" "char-forward" "c" "iterate" "let" "forward")}
        {Lisp-Entry "forward-comments" #f 72 18 72 34 ("forward-multi-line-comment" "forward-single-line-comment" "1" "case" "eqv?" "cond" "when" "0" "char-forward" "c" "iterate" "let")}
        {Lisp-Entry "forward-whites" #f 86 18 86 32 ("forward" "whitespace?" "forward-multi-line-comment" "forward-single-line-comment" "1" "case" "eqv?" "cond" "when" "0" "char-forward" "c" "iterate" "let")}
        {Lisp-Entry "forward-identifier-or-number" #f 103 18 103 46 ("forward" "0" "char-forward" "eqv?" "when" "forward-word" "iterate" "let")}}}})
"C-Export-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Export-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Export-Entry" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "C-Export-Entry" #f 46 7 46 21 ("C-Definition-Entry")
        {Lisp-Entry "get-image" #f 54 11 54 20 ("Bitmap-Resource")}}}})
"C-Extern-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Extern-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Extern-Entry" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "C-Extern-Entry" #f 46 7 46 21 ("C-Definition-Entry")
        {Lisp-Entry "get-image" #f 54 11 54 20 ("Bitmap-Resource")}}}})
"C-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "builder" "C-File.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.builder.C-File" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "C-File" #f 45 7 45 13 ("Project-File")}
      {Lisp-Entry "C-File" #f 51 7 51 13 ("Project-File")
        {Lisp-Entry "precompiled-headers" #f 54 12 54 31 ("generate" "use" "'use")}
        {Lisp-Entry "warnings-as-errors?" #f 55 12 55 31 ("generate")}
        {Lisp-Entry "preprocess" #f 63 11 63 21 ("preprocess?:" "output:" "log:" "reporter:" "compile" "warnings-as-errors?" "warnings-as-errors?:" "file:" "project:" "VC-Compiler" "new" "compiler" "dependency-modified?" "exists?" "not" "or" "when" "source" "get-base" "get-object-file" "object" "project-c-catalog" "catalog" "let" "force?" "force?:" "output" "log" "reporter" "project")}
        {Lisp-Entry "build" #f 73 11 73 16 ("output:" "log:" "reporter:" "compile" "warnings-as-errors?" "warnings-as-errors?:" "precompiled-headers" "precompiled-headers:" "file:" "project:" "new" "vc" "get-compiler-class" "compiler" "let*" "dependency-modified?" "exists?" "not" "or" "when" "source" "get-base" "get-object-file" "object" "project-c-catalog" "catalog" "let" "force?" "force?:" "output" "log" "reporter" "project")}
        {Lisp-Entry "dependency-modified?" #f 89 11 89 31 ("null?" "get-file-entry" "essay" "file-def" "get-includes" "when" "get-include-file" "include" "let" "for-each" "cons" "set!" "continuation-return" "get-time" ">" "if" "memq?" "unless" "def" "proc" "verified" "get-modification-time" "object-time" "letrec" "return" "function" "continuation-capture" "catalog" "file" "object")}
        {Lisp-Entry "get-class-presentation" #f 117 16 117 38 ()}}}})
"C-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-File-Entry" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "C-File-Entry" #f 46 7 46 19 ("File-Entry")
        {Lisp-Entry "header?" #f 49 8 49 15 ()}
        {Lisp-Entry "includes" #f 50 8 50 16 ()}
        {Lisp-Entry "construct-literal" #f 54 16 54 33 ("self" "new" "definitions" "time" "file" "context")}
        {Lisp-Entry "initialize" #f 58 11 58 21 ("collect-includes" "includes" "file" "get-extension" "member?" "header?" "set!" "nextmethod" "d" "t" "f" "c")}
        {Lisp-Entry "collect-includes" #f 64 11 64 27 ("definitions" "C-Include-Entry" "is?" "entry" "function" "collect-if")}
        {Lisp-Entry "get-title" #f 75 11 75 20 ()}
        {Lisp-Entry "get-header?" #f 79 18 79 29 ("header?")}
        {Lisp-Entry "get-source?" #f 83 18 83 29 ("header?" "not")}
        {Lisp-Entry "get-includes" #f 87 18 87 30 ("includes")}}}})
"C-Include-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Include-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Include-Entry" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "C-Include-Entry" #f 47 7 47 22 ("C-Entry")
        {Lisp-Entry "include" #f 50 8 50 15 ()}
        {Lisp-Entry "include-base" #f 51 8 51 20 ()}
        {Lisp-Entry "construct-literal" #f 55 16 55 33 ("self" "new" "column" "line" "include" "context")}
        {Lisp-Entry "initialize" #f 59 11 59 21 ("extract-base" "include-base~self" "include~self" "set!" "nextmethod" "column" "line" "include")}
        {Lisp-Entry "print" #f 65 11 65 16 ("include" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" #f 71 11 71 24 ("column" "line" "include" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 83 11 83 20 ("Bitmap-Resource")}
        {Lisp-Entry "present-name" #f 87 11 87 23 ("include")}
        {Lisp-Entry "get-include" #f 96 18 96 29 ("include")}
        {Lisp-Entry "get-include-file" #f 100 18 100 34 ("include-base" "get-catalog" "get-header")}
        {Lisp-Entry "get-header" #f 104 11 104 21 ("get-file-definitions" "get-header?" "def" "function" "find-if" "name" "catalog")}}}})
"C-Method-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Method-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Method-Entry" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "C-Method-Entry" #f 46 7 46 21 ("C-Definition-Entry")
        {Lisp-Entry "class" #f 49 8 49 13 ()}
        {Lisp-Entry "construct-literal" #f 53 16 53 33 ("self" "new" "column" "line" "name" "class" "context")}
        {Lisp-Entry "initialize" #f 57 11 57 21 ("class~self" "set!" "nextmethod" "column" "line" "name" "class")}
        {Lisp-Entry "print" #f 62 11 62 16 ("class" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" #f 68 11 68 24 ("column" "line" "name" "class" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 80 11 80 20 ("Bitmap-Resource")}}}})
"C-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "parser" "C-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.parser.C-Parser" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "C-Parser" #f 46 7 46 15 ("File-Parser")
        {Lisp-Entry "parse" #f 49 11 49 16 ("parse-definitions" "catalog" "C-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" #f 53 11 53 28 ("get-output" "find-gambit-function" "gambit" "find-open-brace-function" "function" "open-brace" "case" "find-include" "include" "find-define" "define" "vector-ref" "line" "do" "cardinality" "below" "0" "from" "n" "for" "loop" "get-base" "C-Category-Entry" "put" "get-extension" "member?" "when" "c-function" "'c-function" "get-heuristic" "function-heuristic" "List-Factory" "new" "fact" "char-encoding-errors:" "char-encoding" "char-encoding:" "load-lines" "list->vector" "lines" "let" "file")}
        {Lisp-Entry "define" #f 85 12 85 18 ()}
        {Lisp-Entry "find-define" #f 89 11 89 22 ("subseq" "C-Define-Entry" "new" "<=" "c-constituent?" "or" "c" "function" "skip" "<" ">" "and" "+" "start" "let*" "start:" "define" "search" "when" "skip-whitespace" "col" "string-length" "len" "let" "n" "line")}
        {Lisp-Entry "include" #f 107 12 107 19 ()}
        {Lisp-Entry "find-include" #f 111 11 111 23 ("subseq" "C-Include-Entry" "new" "c-constituent?" "or" "c" "function" "skip" "1" "element" "eqv?" "<" ">" "and" "+" "start" "let*" "start:" "include" "search" "when" "skip-whitespace" "col" "string-length" "len" "let" "n" "line")}
        {Lisp-Entry "find-open-brace-function" #f 129 11 129 35 ("subseq" "C-Export-Entry" "new" "continuation-return" "c-constituent?" "skip" "end" "vector-ref" "do" "downto" "1" "-" "from" "i" "for" "loop" "return" "function" "continuation-capture" "string-ref" "eqv?" "0" ">" "and" "when" "string-length" "len" "let" "n" "line" "lines")}
        {Lisp-Entry "gambit-function" #f 150 12 150 27 ()}
        {Lisp-Entry "find-gambit-function" #f 154 11 154 31 ("subseq" "C-Export-Entry" "new" ">" "c-constituent?" "end" "1" "<" "and" "eqv?" "not" "c" "function" "skip" "+" "start" "let*" "start:" "gambit-function" "search" "when" "skip-whitespace" "col" "string-length" "len" "let" "n" "line")}}}})
"C-Static-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "catalog" "C-Static-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.catalog.C-Static-Entry" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "C-Static-Entry" #f 46 7 46 21 ("C-Definition-Entry")
        {Lisp-Entry "get-image" #f 54 11 54 20 ("Bitmap-Resource")}}}})
"C-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "syntax" "C-Syntax.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.syntax.C-Syntax" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "C-Syntax" #f 45 7 45 15 ("Code-Syntax")
        {Lisp-Entry "get-constituent-test" #f 53 11 53 31 ("c-constituent?")}
        {Lisp-Entry "auto-complete-characters" #f 62 11 62 35 ("auto-complete-characters")}
        {Lisp-Entry "auto-complete-char?" #f 66 11 66 30 ("text-constituent?" "not" "lower-case?" "upper-case?" "and" "eqv?" "or" "last" "key")}}}})
"C-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "text" "C-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.c.text.C-Text-Preferences" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "C-Text-Preferences" #f 50 7 50 25 ("completions:" "profile-type-color:" "profile-keyword-color:" "Dark-Orange" "profile-macro-color:" "Dark-Blue" "keyword-color:" "Dark-Green" "balanced-comment-color:" "Purple" "line-comment-color:" "title-color:" "Dark-Red" "name:" "Color" "definition-color:" "title:" "CLike-Text-Preferences")}}})
"C-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "text" "C-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.text.C-Text-View" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "C-Text-View" #f 49 7 49 18 ("CLike-Text-View")
        {Lisp-Entry "external-name" #f 52 16 52 29 ("c" "'c" "rest")}
        {Lisp-Entry "preferences" #f 56 11 56 22 ("c-text" "documents" "get-preferences")}
        {Lisp-Entry "favorite-completions" #f 65 11 65 31 ("preferences" "get-completions")}
        {Lisp-Entry "Syntax-Targets" #f 74 14 74 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 77 14 77 29 ()}
        {Lisp-Entry "syntax-targets" #f 81 11 81 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 87 11 87 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "colorize-entries" #f 93 11 93 27 ()}
        {Lisp-Entry "Keywords" #f 102 12 102 20 ()}
        {Lisp-Entry "get-keywords" #f 162 11 162 23 ("Keywords")}
        {Lisp-Entry "get-profile-macros" #f 171 11 171 29 ("c-text" "documents" "get-preferences" "get-macros" "profile")}
        {Lisp-Entry "get-profile-keywords" #f 175 11 175 31 ("c-text" "documents" "get-preferences" "get-keywords" "profile")}
        {Lisp-Entry "get-profile-types" #f 179 11 179 28 ("c-text" "documents" "get-preferences" "get-types" "profile")}
        {Lisp-Entry "get-profile-definitions" #f 183 11 183 34 ("c-text" "documents" "get-preferences" "get-definitions" "profile")}
        {Lisp-Entry "get-first-special?" #f 192 11 192 29 ()}
        {Lisp-Entry "on-add-break" #f 201 18 201 30 ("user-message" "set-clipboard-text" "get-name" "format" "break-command" "1" "get-row" "+" "row" "get-start" "start" "get-controller" "get-moniker" "file" "let*" "evt")}
        {Lisp-Entry "on-remove-break" #f 210 18 210 33 ("evt")}
        {Lisp-Entry "get-context-menu" #f 219 11 219 27 ("C-Text-Menu" "new")}}
      {Lisp-Entry "C-Text-Menu" #f 223 7 223 18 ("paste" "copy" "view" "Action" "action:" "Bitmap-Resource" "icon:" "french:" "english:" "Locales" "title:" "cut" "name:" "Context-Menu")}}})
"CLike-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "clike" "text" "CLike-Text-Preferences.jazz"} 1236813156
    {Lisp-Entry "jazz.language.clike.text.CLike-Text-Preferences" #f 37 9 37 56 ("jazz")
      {Lisp-Entry "CLike-Text-Preferences" #f 47 7 47 29 ("title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" #f 50 12 50 23 ("generate")}
        {Lisp-Entry "definition-color" #f 51 12 51 28 ("generate")}
        {Lisp-Entry "line-comment-color" #f 52 12 52 30 ("generate")}
        {Lisp-Entry "balanced-comment-color" #f 53 12 53 34 ("generate")}
        {Lisp-Entry "keyword-color" #f 54 12 54 25 ("generate")}
        {Lisp-Entry "profile-macro-color" #f 55 12 55 31 ("generate")}
        {Lisp-Entry "profile-keyword-color" #f 56 12 56 33 ("generate")}
        {Lisp-Entry "profile-type-color" #f 57 12 57 30 ("generate")}
        {Lisp-Entry "macros" #f 58 12 58 18 ("generate")}
        {Lisp-Entry "keywords" #f 59 12 59 20 ("generate")}
        {Lisp-Entry "types" #f 60 12 60 17 ("generate")}
        {Lisp-Entry "completions" #f 61 12 61 23 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 73 11 73 37 ("profile-type-color" "profile-macro-color" "profile-keyword-color" "keyword-color" "balanced-comment-color" "line-comment-color" "definition-color" "title-color" "completions" "types" "keywords" "macros")}
        {Lisp-Entry "get-row-instance" #f 78 11 78 27 ("nextmethod" "else" "Completion-List-Row" "completions" "Macro/Keyword/Type-List-Row" "types" "keywords" "macros" "Color-Row" "new" "profile-type-color" "profile-macro-color" "profile-keyword-color" "keyword-color" "balanced-comment-color" "line-comment-color" "definition-color" "title-color" "field-name" "case" "property")}}
      {Lisp-Entry "Macro/Keyword/Type-List-Row" #f 91 7 91 34 ("List-Row")
        {Lisp-Entry "get-subrow-class" #f 94 11 94 27 ("Macro/Keyword/Type-Row")}}
      {Lisp-Entry "Macro/Keyword/Type-Row" #f 103 7 103 29 ("Value-Row")}}})
"CLike-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "clike" "text" "CLike-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.clike.text.CLike-Text-View" #f 37 9 37 49 ("jazz")
      {Lisp-Entry "CLike-Text-View" #f 46 7 46 22 ("Code-Text-View")
        {Lisp-Entry "install" #f 49 11 49 18 ("get-profile-type-color" "Profile-Type" "'Profile-Type" "get-profile-keyword-color" "Profile-Keyword" "'Profile-Keyword" "get-profile-macro-color" "Profile-Macro" "'Profile-Macro" "get-keyword-color" "Keyword" "'Keyword" "get-balanced-comment-color" "Balanced-Comment" "'Balanced-Comment" "get-line-comment-color" "Line-Comment" "'Line-Comment" "get-definition-color" "Definition" "'Definition" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "new-syntax" #f 62 11 62 21 ("C-Syntax" "new")}
        {Lisp-Entry "flash-character?" #f 72 11 72 27 ("char")}
        {Lisp-Entry "return-press" #f 81 11 81 23 ("tabulate" "nextmethod" "key")}
        {Lisp-Entry "commented?" #f 91 11 91 21 ("Balanced-Comment" "'Balanced-Comment" "Line-Comment" "'Line-Comment" "Title" "'Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "get-keywords" #f 104 29 104 41 ()}
        {Lisp-Entry "get-profile-macros" #f 113 29 113 47 ("profile")}
        {Lisp-Entry "get-profile-keywords" #f 117 29 117 49 ("profile")}
        {Lisp-Entry "get-profile-types" #f 121 29 121 46 ("profile")}
        {Lisp-Entry "mouse-insert" #f 130 11 130 23 ("insert-string" "function" "with-update-locked" "last" "text-ending" "concatenate" "set!" "memq?" "not" "0" "element" "syntax" "text-constituent?" "and" "previous-cell" "get-char" "sc" "text-beginning" "/=" "when" "get-end" "end" "get-start" "start" "let" "copy")}
        {Lisp-Entry "compute-syntax-targets" #f 151 11 151 33 ("get-profile-types" "profile-type" "'profile-type" "get-profile-keywords" "profile-keyword" "'profile-keyword" "get-profile-macros" "profile-macro" "'profile-macro" "get-keywords" "keyword" "'keyword" "str" "function" "map" "line-comment" "'line-comment" "balanced-comment-backward" "'balanced-comment-backward" "balanced-comment" "'balanced-comment" "list" "append" "get-application" "get-profile" "profile" "let")}
        {Lisp-Entry "compute-syntax-automata" #f 162 11 162 34 ("c-constituent?" "self" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" #f 166 11 166 24 ("Profile-Type" "'Profile-Type" "profile-type" "Profile-Keyword" "'Profile-Keyword" "profile-keyword" "Profile-Macro" "'Profile-Macro" "profile-macro" "Keyword" "'Keyword" "colorize-keyword" "keyword" "Title" "'Title" "Line-Comment" "'Line-Comment" "colorize-line-comment" "line-comment" "colorize-balanced-comment-backward" "balanced-comment-backward" "Balanced-Comment" "'Balanced-Comment" "colorize-balanced-comment" "balanced-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "explorer-class" #f 182 11 182 25 ("C-Explorer")}
        {Lisp-Entry "get-context" #f 191 11 191 22 ("c")}
        {Lisp-Entry "current-name" #f 195 11 195 23 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" #f 199 11 199 18 ("read-string-element" "0" "element" "eqv?" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" #f 207 11 207 23 ("current-name")}
        {Lisp-Entry "current-expr-range" #f 211 11 211 29 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" #f 217 11 217 21 ("get-range" "outer-expr" "end:" "start:" "self" "C-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" #f 223 11 223 18 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" #f 232 12 232 19 ("string" "concatenate" "list")}
        {Lisp-Entry "get-headers" #f 238 11 238 22 ("headers")}}}})
"CSS-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "css" "text" "CSS-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.css.text.CSS-Entry" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "CSS-Entry" #f 46 7 46 16 ("Indexed-Entry")
        {Lisp-Entry "construct-literal" #f 50 16 50 33 ("self" "new" "column" "line" "name" "context")}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("nextmethod" "column" "line" "name")}
        {Lisp-Entry "print-catalog" #f 58 11 58 24 ("column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 70 11 70 20 ("Bitmap-Resource")}}}})
"CSS-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "css" "text" "CSS-File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.css.text.CSS-File-Entry" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "CSS-File-Entry" #f 46 7 46 21 ("File-Entry")
        {Lisp-Entry "get-image" #f 49 11 49 20 ("Bitmap-Resource")}}}})
"CSS-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "css" "text" "CSS-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.css.text.CSS-Parser" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "CSS-Parser" #f 46 7 46 17 ("File-Parser")
        {Lisp-Entry "parse" #f 49 11 49 16 ("catalog" "CSS-File-Entry" "new" "parse-definitions" "definitions" "let" "time" "file")}
        {Lisp-Entry "parse-definitions" #f 54 11 54 28 ("get-output" "length" "0" "naturals" "put" "when" "parse-line" "entry" "no" "line" "function" "for-each" "List-Factory" "new" "fact" "char-encoding" "char-encoding:" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "parse-line" #f 66 11 66 21 ("+" "CSS-Entry" "new" "split-selector" "offset" "name" "receive" "subseq" "selector" "end" "let*" ">" "start:" "css-constituent?" "skip" "start" "0" "=" "when" "skip-whitespace" "col" "let" "no" "line")}
        {Lisp-Entry "split-selector" #f 78 11 78 25 ("+" "else" "1" "subseq" "=" "0" "values" "not" "cond" "find" "pos" "let" "selector")}
        {Lisp-Entry "css-constituent?" #f 88 11 88 27 ("eqv?" "alphanumeric?" "or" "char")}}}})
"CSS-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "css" "text" "CSS-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.css.text.CSS-Text-Preferences" #f 37 9 37 52 ("jazz")
      {Lisp-Entry "CSS-Text-Preferences" #f 50 7 50 27 ("Dark-Blue" "keyword-color:" "definition-color:" "Purple" "balanced-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "CLike-Text-Preferences")}}})
"CSS-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "css" "text" "CSS-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.css.text.CSS-Text-View" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "CSS-Text-View" #f 47 7 47 20 ("CLike-Text-View")
        {Lisp-Entry "install" #f 50 11 50 18 ("get-keyword-color" "Keyword" "'Keyword" "get-definition-color" "Definition" "'Definition" "get-balanced-comment-color" "Balanced-Comment" "'Balanced-Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 59 16 59 29 ("css-text" "'css-text" "rest")}
        {Lisp-Entry "preferences" #f 63 11 63 22 ("css-text" "documents" "get-preferences")}
        {Lisp-Entry "favorite-completions" #f 72 11 72 31 ("preferences" "get-completions")}
        {Lisp-Entry "Syntax-Targets" #f 81 14 81 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 84 14 84 29 ()}
        {Lisp-Entry "syntax-targets" #f 88 11 88 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 94 11 94 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" #f 100 11 100 33 ("get-keywords" "keyword" "'keyword" "str" "function" "map" "balanced-comment-backward" "'balanced-comment-backward" "balanced-comment" "'balanced-comment" "list" "append")}
        {Lisp-Entry "colorize-type" #f 106 11 106 24 ("Keyword" "'Keyword" "colorize-keyword" "keyword" "colorize-balanced-comment-backward" "balanced-comment-backward" "Balanced-Comment" "'Balanced-Comment" "colorize-balanced-comment" "balanced-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "Keywords" #f 118 12 118 20 ()}
        {Lisp-Entry "get-keywords" #f 122 11 122 23 ("Keywords")}}}})
"CSharp-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "csharp" "text" "CSharp-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.csharp.text.CSharp-Text-Preferences" #f 37 9 37 58 ("jazz")
      {Lisp-Entry "CSharp-Text-Preferences" #f 49 7 49 30 ("completions:" "keywords:" "Dark-Orange" "profile-macro-color:" "profile-keyword-color:" "Dark-Blue" "keyword-color:" "Dark-Green" "balanced-comment-color:" "Purple" "line-comment-color:" "title-color:" "Dark-Red" "name:" "Color" "definition-color:" "title:" "CLike-Text-Preferences")}}})
"CSharp-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "csharp" "text" "CSharp-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.csharp.text.CSharp-Text-View" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "CSharp-Text-View" #f 47 7 47 23 ("CLike-Text-View")
        {Lisp-Entry "external-name" #f 50 16 50 29 ("csharp-text" "'csharp-text" "rest")}
        {Lisp-Entry "preferences" #f 54 11 54 22 ("csharp-text" "documents" "get-preferences")}
        {Lisp-Entry "host-workspaces" #f 63 11 63 26 ("text")}
        {Lisp-Entry "favorite-completions" #f 72 11 72 31 ("csharp-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "get-first-special?" #f 81 11 81 29 ()}
        {Lisp-Entry "Keywords" #f 90 12 90 20 ()}
        {Lisp-Entry "get-keywords" #f 126 11 126 23 ("Keywords")}
        {Lisp-Entry "get-profile-macros" #f 135 11 135 29 ("csharp-text" "documents" "get-preferences" "get-macros" "profile")}
        {Lisp-Entry "get-profile-keywords" #f 139 11 139 31 ("csharp-text" "documents" "get-preferences" "get-keywords" "profile")}
        {Lisp-Entry "get-profile-types" #f 143 11 143 28 ("csharp-text" "documents" "get-preferences" "get-types" "profile")}
        {Lisp-Entry "Syntax-Targets" #f 152 14 152 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 155 14 155 29 ()}
        {Lisp-Entry "syntax-targets" #f 159 11 159 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 165 11 165 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "colorize-entries" #f 171 11 171 27 ()}}}})
"Catalog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "catalog" "Catalog.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.catalog.Catalog" #f 37 9 37 37 ("jazz")
      {Lisp-Entry "Catalog" #f 45 7 45 14 ("Object")
        {Lisp-Entry "name" #f 48 8 48 12 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("name~self" "set!" "nextmethod" "name")}
        {Lisp-Entry "print" #f 56 11 56 16 ("name" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-name" #f 67 18 67 26 ("name")}
        {Lisp-Entry "in-memory?" #f 71 26 71 36 ()}
        {Lisp-Entry "present" #f 80 26 80 33 ()}
        {Lisp-Entry "get-active?" #f 89 26 89 37 ()}
        {Lisp-Entry "set-active?" #f 93 26 93 37 ("flag")}
        {Lisp-Entry "activate" #f 97 26 97 34 ()}
        {Lisp-Entry "deactivate" #f 101 26 101 36 ()}
        {Lisp-Entry "get-definitions" #f 110 26 110 41 ("name")}
        {Lisp-Entry "get-category-definitions" #f 114 26 114 50 ("name")}
        {Lisp-Entry "get-file-entry" #f 118 26 118 40 ("file")}
        {Lisp-Entry "get-references" #f 122 26 122 40 ("name")}
        {Lisp-Entry "get-completions" #f 126 26 126 41 ("name")}
        {Lisp-Entry "in-context?" #f 135 26 135 37 ("context")}}}})
"Catalog-Configuration"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "catalog" "Catalog-Configuration.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.catalog.Catalog-Configuration" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "Catalog-Configuration" #f 48 7 48 28 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "type" #f 51 12 51 16 ("generate")}
        {Lisp-Entry "output-file" #f 52 12 52 23 ("generate")}
        {Lisp-Entry "directories" #f 53 12 53 23 ("generate")}
        {Lisp-Entry "extensions" #f 54 12 54 22 ("generate")}
        {Lisp-Entry "recursive?" #f 55 12 55 22 ("generate")}
        {Lisp-Entry "active?" #f 56 12 56 19 ("generate")}
        {Lisp-Entry "references?" #f 57 12 57 23 ("generate")}
        {Lisp-Entry "get-domain" #f 69 16 69 26 ("nextmethod" "else" "Boolean-Domain" "new" "references?" "active?" "recursive?" "field-name" "case" "property")}
        {Lisp-Entry "get-class-presentation" #f 80 16 80 38 ()}
        {Lisp-Entry "property-presentation" #f 84 16 84 37 ("nextmethod" "else" "references?" "active?" "recursive?" "extensions" "directories" "output-file" "type" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" #f 96 11 96 33 ("property")}
        {Lisp-Entry "get-presentation" #f 100 11 100 27 ("name" "self" "class-of" "name->presentation")}
        {Lisp-Entry "set-presentation" #f 104 11 104 27 ("class-of" "presentation->name" "self" "set-name" "presentation" "designer")}
        {Lisp-Entry "get-row-instance" #f 108 11 108 27 ("nextmethod" "else" "Boolean-Row" "references?" "active?" "recursive?" "Directory-Group-Row" "directories" "save" "'save" "mode:" "File-Row" "output-file" "collect-catalog-types" "choices:" "Combo-Row" "new" "type" "field-name" "case" "property")}
        {Lisp-Entry "collect-catalog-types" #f 117 11 117 32 ("get-catalog-types" "->string" "list" "car" "type" "info" "function" "map" "get-preferences" "pref" "let")}
        {Lisp-Entry "get-categorized-properties" #f 125 11 125 37 ("references?" "active?" "recursive?" "extensions" "directories" "output-file" "type")}}}})
"Catalog-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Catalog-Entry.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.entry.Catalog-Entry" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Catalog-Entry" #f 46 7 46 20 ("Object")
        {Lisp-Entry "parent" #f 49 8 49 14 ()}
        {Lisp-Entry "root-definition" #f 50 8 50 23 ()}
        {Lisp-Entry "file-definition" #f 51 8 51 23 ()}
        {Lisp-Entry "get-parent" #f 59 25 59 35 ("parent")}
        {Lisp-Entry "set-parent" #f 63 25 63 35 ("parent" "set!" "p")}
        {Lisp-Entry "get-root-definition" #f 67 26 67 45 ("root-definition")}
        {Lisp-Entry "set-root-definition" #f 71 26 71 45 ("root-definition" "set!" "def")}
        {Lisp-Entry "get-file-definition" #f 75 26 75 45 ("file-definition")}
        {Lisp-Entry "set-file-definition" #f 79 26 79 45 ("file-definition" "set!" "def")}
        {Lisp-Entry "get-file" #f 88 26 88 34 ()}
        {Lisp-Entry "get-moniker" #f 92 26 92 37 ()}
        {Lisp-Entry "get-title" #f 96 26 96 35 ()}
        {Lisp-Entry "get-category-name" #f 100 26 100 43 ()}
        {Lisp-Entry "get-name" #f 104 26 104 34 ()}
        {Lisp-Entry "get-line" #f 108 26 108 34 ()}
        {Lisp-Entry "get-column" #f 112 26 112 36 ()}
        {Lisp-Entry "get-definitions" #f 116 26 116 41 ()}
        {Lisp-Entry "get-image" #f 120 26 120 35 ()}
        {Lisp-Entry "present" #f 129 26 129 33 ()}
        {Lisp-Entry "present-name" #f 133 26 133 38 ()}
        {Lisp-Entry "present-identifier" #f 137 26 137 44 ()}
        {Lisp-Entry "present-detailed" #f 141 26 141 42 ("present-name")}
        {Lisp-Entry "edit" #f 150 26 150 30 ("rest")}
        {Lisp-Entry "edit-reference" #f 155 26 155 40 ("edit" "apply" "->string" "list" "get-application" "set-search-targets" "rest" "target")}
        {Lisp-Entry "insert-definition" #f 165 26 165 43 ("insert-self-definitions" "dynamic" "'dynamic" "get-state" "eq?" "unless" "insert-self" "row" "let" "sort?" "father" "tree")}
        {Lisp-Entry "insert-self" #f 171 29 171 40 ("self" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "present-name" "title" "dynamic" "'dynamic" "expanded" "'expanded" "insert-state" "if" "state" "get-definitions" "definitions" "get-image" "image" "let*" "father" "tree")}
        {Lisp-Entry "insert-self-definitions" #f 179 29 179 52 ("get-definitions" "insert-definitions" "sort?" "father" "tree")}
        {Lisp-Entry "insert-state" #f 183 29 183 41 ("expanded" "'expanded" "definitions")}
        {Lisp-Entry "insert-definitions" #f 187 11 187 29 ("insert-definition" "definition" "function" "for-each" "sort-definitions" "if" "ordered" "let" "sort?" "definitions" "father" "tree")}
        {Lisp-Entry "sort-definitions" #f 194 11 194 27 ("present-name" "definition" "function" "key:" "string<?" "sort" "definitions")}
        {Lisp-Entry "update-indexes" #f 203 26 203 40 ("references-index" "definitions-index")}}}})
"Catalogs-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "tools" "Catalogs-Manager.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.tools.Catalogs-Manager" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Catalogs-Manager" #f 50 7 50 23 ("250" "statistics" "references?" "display-images?:" "toplevel-controls?:" "150" "width:" "multiple-selection?:" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "name" "filled-column:" "catalogs" "document" "fill" "layout-type:" "content" "vscroll?:" "entry" "style:" "edge" "border-type:" "571" "549" "35" "2" "catalogs-border" "default?:" "on-update" ":form" "Event-Handler" "action-handler:" "22" "100" "7" "449" "Point" "position:" "title:" "update" "name:" "608" "553" "Dimension" "size:" "View")
        {Lisp-Entry "external-name" #f 67 16 67 29 ("catalogs-manager" "'catalogs-manager" "rest")}
        {Lisp-Entry "finish" #f 76 11 76 17 ("update-buttons" "view-catalogs" "nextmethod" "initargs")}
        {Lisp-Entry "host-icon" #f 87 16 87 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 91 16 91 26 ()}
        {Lisp-Entry "host-position" #f 95 16 95 29 ("70" "90" "Point")}
        {Lisp-Entry "host-size" #f 99 16 99 25 ("508" "573" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 103 11 103 26 ("home")}
        {Lisp-Entry "resize" #f 112 11 112 17 ("catalogs-border" "'catalogs-border" "size-figure" "0" "update" "'update" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-change-active" #f 118 11 118 27 ("get-checked?" "set-active?" "get-user-data" "catalog" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-selection-change" #f 124 11 124 30 ("update-buttons" "evt")}
        {Lisp-Entry "view-catalogs" #f 133 18 133 31 ("get-indexed-catalogs" "list" "children:" "add-row" "get-statistics" "c2" "get-references?" "Tree-Label" "c1" "Tree-Node" "content-change-handler:" "user-data:" "get-active?" "checked?:" "get-name" "->string" "title:" "Check-Box" "c0" "on-change-active" "'on-change-active" "method-name:" "self" "target:" "Event-Handler" "new" "handler" "catalog" "for-each" "remove-every-row" "function" "with-update-locked" "catalogs" "'catalogs" "locate" "tree" "let")}
        {Lisp-Entry "get-indexed-catalogs" #f 149 11 149 31 ("get-application" "get-cataloguer" "get-catalogs" "Indexed-Catalog" "is?" "catalog" "function" "collect-if")}
        {Lisp-Entry "on-update" #f 155 18 155 27 ("update-selection" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-double-click" #f 161 11 161 26 ("update-selection" "function" ":wait" "with-cursor" "catalogs" "get-name" "case" "get-alt?" "alt?" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "update-selection" #f 171 11 171 27 ("invalidate-cell" "get-statistics" "get-cell-data" "set-title" "2" "Cell" "new" "cell" "update" "get-row" "get-user-data" "catalog" "let" "row" "function" "for-each" "get-row-count" "0" "naturals" "null?" "if" "effective-selection" "define" "get-selection" "selection" "catalogs" "'catalogs" "locate" "tree" "let*")}
        {Lisp-Entry "update-buttons" #f 188 11 188 25 ("0" ">" "update" "'update" "set-enabled?" "get-row-count" "count" "catalogs" "'catalogs" "locate" "tree" "let")}
        {Lisp-Entry "confirm-close" #f 199 11 199 24 ("save-session" "rest")}
        {Lisp-Entry "save-session" #f 203 11 203 23 ("Opened-Windows" "'Opened-Windows" "properties" "push-property" "get-size" "size:" "get-position" "position:" "external-name" "list" "info" "let")}}}})
"Catalogs-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "catalog" "Catalogs-Preferences.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.catalog.Catalogs-Preferences" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Catalogs-Preferences" #f 47 7 47 27 ("title:" "Preferences")
        {Lisp-Entry "main" #f 50 12 50 16 ("generate")}
        {Lisp-Entry "recolorize-on-save?" #f 51 12 51 31 ("generate")}
        {Lisp-Entry "can-rename-component?" #f 63 11 63 32 ()}
        {Lisp-Entry "can-delete-component?" #f 67 11 67 32 ()}
        {Lisp-Entry "can-move-component?" #f 71 11 71 30 ()}
        {Lisp-Entry "can-copy-component?" #f 75 11 75 30 ()}
        {Lisp-Entry "get-addable-classes" #f 79 11 79 30 ("Catalog-Configuration" "list")}
        {Lisp-Entry "get-addable-details" #f 84 11 84 30 ("references?" "active?" "85" "recursive?" "extensions" "directories" "output-file" "100" "type" "75" "name-info")}}}})
"Cataloguer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "catalog" "Cataloguer.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.catalog.Cataloguer" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Cataloguer" #f 45 7 45 17 ("Object")
        {Lisp-Entry "catalogs" #f 48 8 48 16 ()}
        {Lisp-Entry "get-catalogs" #f 56 18 56 30 ("catalogs")}
        {Lisp-Entry "get-catalog" #f 60 18 60 29 ("add-catalog" "create-catalog" "catalog" "error" "when" "not" "if" "catalogs" "'catalogs" "get-preferences" "find-component" "pref" "let" "find-catalog" "either" "report?" "report?:" "error?" "error?:" "name")}
        {Lisp-Entry "add-catalog" #f 71 18 71 29 ("list" "append!" "set!" "catalogs" "memq?" "unless" "catalog")}
        {Lisp-Entry "remove-catalog" #f 76 18 76 32 ("remove!" "set!" "catalogs" "memq?" "when" "catalog")}
        {Lisp-Entry "find-catalog" #f 81 18 81 30 ("catalogs" "get-name" "eq?" "catalog" "function" "find-if" "name")}
        {Lisp-Entry "for-each-catalog" #f 87 11 87 27 ("catalogs" "in-context?" "get-active?" "and" "when" "catalog" "function" "for-each" "list" "pair?" "if" "let" "proc" "context")}
        {Lisp-Entry "create-catalog" #f 100 11 100 25 ("report?:" "get-references-size" "get-definitions-size" "get-content-size" "get-references?" "get-active?" "get-recursive?" "get-extensions" "get-directories" "get-output-file" "get-name" "new" "catalog-class" "class" "get-type" "type" "let*" "report?" "pref")}
        {Lisp-Entry "catalog-class" #f 117 11 117 24 ("cdr" "autoload" "error" "not" "if" "get-preferences" "get-catalog-types" "assq" "pair" "let" "type")}
        {Lisp-Entry "save-catalogs" #f 129 18 129 31 ("catalogs" "save" "catalog" "function" "for-each")}
        {Lisp-Entry "get-context" #f 140 18 140 29 ("list" "symbol?" "if" "get-application" "get-catalog-context" "context" "let")}
        {Lisp-Entry "class-definition?" #f 152 11 152 28 ("Class-Entry" "is?" "object")}
        {Lisp-Entry "get-definitions" #f 156 18 156 33 ("get-output" "get-definitions" "put-sequence" "catalog" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "name")}
        {Lisp-Entry "get-definition" #f 164 18 164 32 ("car" "not-null?" "when" "get-definitions" "definitions" "let" "name")}
        {Lisp-Entry "get-category-definitions" #f 171 18 171 42 ("get-output" "get-category-definitions" "put-sequence" "catalog" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "name")}
        {Lisp-Entry "get-coalesced-definitions" #f 179 18 179 43 ("Category-Entry" "car" "is?" "length" "1" "=" "and" "if" "Constructor-Entry" "is-not?" "entry" "function" "collect-if" "coalesced" "get-definitions" "definitions" "let*" "get-context" "context" "context:" "name")}
        {Lisp-Entry "search-definitions" #f 190 18 190 36 ("get-output" "search-definitions" "put-sequence" "catalog" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "ignore-case?" "ignore-case?:" "whole-words?" "whole-words?:" "get-context" "context" "context:" "name")}
        {Lisp-Entry "get-references" #f 198 18 198 32 ("get-output" "get-references" "put-sequence" "catalog" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "name")}
        {Lisp-Entry "get-file-entries" #f 206 18 206 34 ("get-output" "put" "when" "get-file-entry" "entry" "catalog" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "file")}
        {Lisp-Entry "get-completions" #f 221 18 221 33 ("get-output" "get-completions" "put-sequence" "catalog" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "name")}}}})
"Category-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Category-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Category-Doc" #f 37 9 37 34 ("jazz")
      {Lisp-Entry "Category-Doc" #f 45 7 45 19 ("Element-Doc")
        {Lisp-Entry "extends" #f 48 12 48 19 ("generate")}
        {Lisp-Entry "catalog" #f 51 8 51 15 ()}
        {Lisp-Entry "get-catalog" #f 59 11 59 22 ("catalog")}
        {Lisp-Entry "set-catalog" #f 63 11 63 22 ("children" "set-catalog" "child" "function" "for-each" "catalog" "set!" "cat")}
        {Lisp-Entry "update-indexes" #f 75 11 75 25 ("children" "update-indexes" "child" "function" "for-each" "nextmethod" "references-index" "definitions-index")}
        {Lisp-Entry "print-catalog" #f 83 11 83 24 ("children" "1" "+" "print-catalog" "child" "function" "for-each" "doc" "extends" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" #f 100 11 100 18 ("doc" "name" "format")}
        {Lisp-Entry "property-presentation" #f 109 16 109 37 ("nextmethod" "else" "extends" "field-name" "case" "property")}
        {Lisp-Entry "sort-components?" #f 115 11 115 27 ()}}}})
"Category-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Category-Entry.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.entry.Category-Entry" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Category-Entry" #f 46 7 46 21 ("Hierarchical-Entry")
        {Lisp-Entry "extends" #f 49 8 49 15 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("extends~self" "set!" "nextmethod" "definitions" "column" "line" "extends" "name" "qualified" "modifiers")}
        {Lisp-Entry "get-extends" #f 57 18 57 29 ("extends")}
        {Lisp-Entry "set-extends" #f 61 18 61 29 ("extends" "set!" "value")}
        {Lisp-Entry "present" #f 65 11 65 18 ("get-category-name")}
        {Lisp-Entry "update-indexes" #f 74 11 74 25 ("extends" "last" "update-index" "qualified" "function" "for-each" "nextmethod" "references-index" "definitions-index")}
        {Lisp-Entry "insert-self-definitions" #f 86 11 86 34 ("nextmethod" "insert-inherited" "insert-interfaces" "insert-ascendants" "sort?" "father" "tree")}
        {Lisp-Entry "collect-ascendants" #f 93 11 93 29 ("get-output" "extends" "get-extends" "for-each" "put" "get-list" "memq?" "not" "and" "get-qualified-category" "category" "when" "qualified" "function" "process" "letrec" "List-Factory" "new" "fact" "get-catalog" "catalog" "let")}
        {Lisp-Entry "collect-inherited" #f 107 11 107 28 ("get-definitions" "ascendant" "function" "map" "append" "apply" "ascendants")}
        {Lisp-Entry "insert-ascendants" #f 111 29 111 46 ("user-data:" "get-image" "present-name" "category" "function" "for-each" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "17" "row-height:" "collapsed" "'collapsed" "state:" "father:" "add-row" "row" "when" "collect-ascendants" "ascendants" "let" "father" "tree")}
        {Lisp-Entry "insert-interfaces" #f 120 29 120 46 ("father" "tree")}
        {Lisp-Entry "insert-interfaces-list" #f 124 11 124 33 ("get-extends" "for-each" "user-data:" "get-image" "present-name" "get-qualified-category" "interface" "qualified" "function" "insert" "letrec" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "17" "row-height:" "collapsed" "'collapsed" "state:" "father:" "add-row" "row" "get-catalog" "catalog" "let" "when" "interfaces" "title" "father" "tree")}
        {Lisp-Entry "insert-inherited" #f 142 11 142 27 ("insert-definitions" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "17" "row-height:" "collapsed" "'collapsed" "state:" "father:" "add-row" "row" "let" "when" "collect-inherited" "inherited" "collect-ascendants" "ascendants" "let*" "father" "tree")}}}})
"Class-Browser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "tools" "Class-Browser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.tools.Class-Browser" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Class-Browser" #f 50 7 50 20 ("419" "width:" "display-images?:" "on-double-click" "double-click-handler:" ":icons" "portfolio:" "multiple-selection?:" "classes" "document" "562" "391" "35" "classes-border" "on-browse" "action-handler:" "22" "120" "7" "272" "title:" "browse" "on-return-press" ":form" "Event-Handler" "return-press-handler:" "focus-selects-all?:" "show-unfocused-selection?:" "accepts-returns?:" "top-padding:" "left-padding:" "name" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "entry" "style:" "edge" "border-type:" "19" "250" "9" "2" "Point" "position:" "name-border" "name:" "599" "395" "Dimension" "size:" "View")
        {Lisp-Entry "text" #f 53 12 53 16 ()}
        {Lisp-Entry "host-icon" #f 77 16 77 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 81 16 81 26 ()}
        {Lisp-Entry "host-position" #f 85 16 85 29 ("20" "90" "Point")}
        {Lisp-Entry "host-size" #f 89 16 89 25 ("600" "395" "Dimension")}
        {Lisp-Entry "install-in-host" #f 93 11 93 26 ("name" "'name" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "get-text" #f 103 18 103 26 ("name" "'name" "locate" "get-string-content")}
        {Lisp-Entry "set-text" #f 107 18 107 26 ("either" "name" "'name" "locate" "set-string-content" "value")}
        {Lisp-Entry "guest-actions" #f 117 11 117 24 ("nextmethod" "class-browser" "'class-browser" "find-actions" "cons")}
        {Lisp-Entry "resize" #f 127 11 127 17 ("classes-border" "'classes-border" "size-figure" "0" "browse" "'browse" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-browse" #f 133 11 133 20 ("root:" "browse-inheritance-tree" "function" ":wait" "with-cursor" "name" "'name" "locate" "get-string-content" "format" "message-box" "not" "if" "get-root-class" "root" "let" "evt")}
        {Lisp-Entry "on-return-press" #f 142 11 142 26 ("on-browse" "evt")}
        {Lisp-Entry "on-double-click" #f 146 11 146 26 ("type-name" "identifier-name" "edit-definitions" "get-application" "appl" "get-user-data" "type" "get-row" "row" "when" "get-single-selection" "selection" "get-sender" "tree" "let*" "evt")}
        {Lisp-Entry "get-root-class" #f 156 11 156 25 ("autoload" "get-autoload" "when" "string->symbol" "let" "Object" "empty-string?" "if" "get-string-content" "string" "name" "'name" "locate" "text" "let*")}
        {Lisp-Entry "browse-inheritance-tree" #f 171 11 171 34 ("remove-every-row" "with-update-locked" "symbol->string" "key:" "type-descendants" "string<?" "sort" "subtype" "function" "for-each" "downward" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "essay" "father" "type-ascendant" "ascendant" "type-name" "->string" "title" "expanded" "'expanded" "state" "let*" "type" "upward" "define" "classes" "'classes" "locate" "tree" "let" "Object" "root" "root:")}
        {Lisp-Entry "selected-categories" #f 201 11 201 30 ("get-row" "get-user-data" "rank" "function" "map" "get-selection" "selection" "classes" "'classes" "locate" "tree" "let*")}
        {Lisp-Entry "selected-files" #f 209 11 209 25 ("selected-categories" "type-name" "get-manifest-source" "category" "function" "collect")}}}})
"Class-Browser-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "tools" "Class-Browser-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.tools.Class-Browser-Actions" #f 37 9 37 55 ("jazz")
      {Lisp-Entry "Class-Browser-Actions" #f 45 7 45 28 ("Actions")}}})
"Class-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Class-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Class-Doc" #f 37 9 37 31 ("jazz")
      {Lisp-Entry "Class-Doc" #f 45 7 45 16 ("Category-Doc")
        {Lisp-Entry "implements" #f 48 12 48 22 ("generate")}
        {Lisp-Entry "print-catalog" #f 57 11 57 24 ("children" "1" "+" "print-catalog" "child" "function" "for-each" "doc" "implements" "extends" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" #f 73 11 73 18 ("name" "format")}
        {Lisp-Entry "get-class-image" #f 82 16 82 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 86 16 86 37 ("nextmethod" "else" "implements" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 92 11 92 37 ("implements" "extends" "package-name")}}}})
"Class-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Class-Entry.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.entry.Class-Entry" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Class-Entry" #f 45 7 45 18 ("Category-Entry")
        {Lisp-Entry "implements" #f 48 8 48 18 ()}
        {Lisp-Entry "construct-literal" #f 52 16 52 33 ("self" "new" "definitions" "column" "line" "implements" "extends" "name" "modifiers" "context")}
        {Lisp-Entry "initialize" #f 56 11 56 21 ("implements~self" "set!" "nextmethod" "definitions" "column" "line" "implements" "extends" "name" "qualified" "modifiers")}
        {Lisp-Entry "get-implements" #f 61 18 61 32 ("implements")}
        {Lisp-Entry "set-implements" #f 65 18 65 32 ("implements" "set!" "value")}
        {Lisp-Entry "print-catalog" #f 69 11 69 24 ("definitions" "1" "+" "print-catalog" "definition" "function" "for-each" "column" "line" "implements" "extends" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 80 11 80 20 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" #f 89 11 89 25 ("implements" "last" "update-index" "qualified" "function" "for-each" "nextmethod" "references-index" "definitions-index")}
        {Lisp-Entry "insert-interfaces" #f 101 11 101 28 ("implements" "insert-interfaces-list" "father" "tree")}}}})
"Code-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Code-Entry.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.entry.Code-Entry" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Code-Entry" #f 45 7 45 17 ("Hierarchical-Entry")
        {Lisp-Entry "type" #f 48 8 48 12 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("type~self" "set!" "nextmethod" "definitions" "column" "line" "type" "name")}
        {Lisp-Entry "get-type" #f 56 18 56 26 ("type")}}}})
"Code-Generator"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "generator" "Code-Generator.jazz"} 1226584790
    {Lisp-Entry "jedi.generator.Code-Generator" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Code-Generator" #f 44 7 44 21 ("Object")
        {Lisp-Entry "emit-section-header" #f 52 11 52 30 ("format" "printer" "section-name")}
        {Lisp-Entry "emit-parameters" #f 60 11 60 26 ("cdr" "car" "else" "variable-symbol" "format" "variable?" "cond" "iterate" "let" "printer" "parameters")}}}})
"Code-Location"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Code-Location.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Code-Location" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Code-Location" #f 45 7 45 20 ("Object")
        {Lisp-Entry "edit" #f 48 26 48 30 ("rest")}}}})
"Command-Execute-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "Command-Execute-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.Command-Execute-Actions" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Command-Execute-Actions" #f 46 7 46 30 (":control" "Shortcut" "shortcut:" "on-done" ":focus" "Event-Handler" "action-handler:" "done" "name:" "Actions")}}})
"Command-Search-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "Command-Search-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.Command-Search-Actions" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Command-Search-Actions" #f 46 7 46 29 ("Return" "on-search-finish" "search-finish" "on-search-backward" "search-backward" ":control" "Shortcut" "shortcut:" "on-search-forward" ":focus" "Event-Handler" "action-handler:" "search-forward" "name:" "Actions")}}})
"Command-Shell"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "Command-Shell.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.Command-Shell" #f 37 9 37 31 ("jazz")
      {Lisp-Entry "Command-Shell" #f 49 7 49 20 ("content" "vscroll?:" "hscroll?:" "scroller" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "install" #f 58 11 58 18 ("get-controller" "set-tool?" "scroller" "'scroller" "locate" "set-client" "new-text" "text" "let" "nextmethod" "rest")}
        {Lisp-Entry "new-text" #f 65 11 65 19 ("text" "'text" "name:" "scroller" "'scroller" "locate" "get-content" "parent:" "Command-Text-View" "new")}
        {Lisp-Entry "get-text" #f 76 18 76 26 ("text" "'text" "scroller" "'scroller" "locate" "get-content" "child")}
        {Lisp-Entry "get-string-content" #f 80 18 80 36 ("get-text" "get-string-content")}}}})
"Command-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "Command-Text-View.jazz"} 1236978652
    {Lisp-Entry "jazz.ide.Command-Text-View" #f 37 9 37 35 ("jazz")
      {Lisp-Entry "Command-Text-View" #f 49 7 49 24 ("tooltip-text:" "tooltip?:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "show-unfocused-selection?:" "focus-selects-all?:" "IDE-Text-View")
        {Lisp-Entry "mode" #f 52 8 52 12 ("generate")}
        {Lisp-Entry "client" #f 53 8 53 14 ("generate")}
        {Lisp-Entry "search-context" #f 54 8 54 22 ()}
        {Lisp-Entry "search-ranges" #f 55 8 55 21 ()}
        {Lisp-Entry "search-pristine?" #f 56 8 56 24 ()}
        {Lisp-Entry "auto-complete?" #f 75 11 75 25 ()}
        {Lisp-Entry "focus-gain" #f 84 11 84 21 ("client" "set!" "nextmethod" "old")}
        {Lisp-Entry "focus-actions" #f 89 11 89 24 ("nextmethod" "command-execute" "'command-execute" "else" "command-search" "'command-search" "find-actions" "search-backward" "search-forward" "mode" "case" "cons")}
        {Lisp-Entry "key-press" #f 101 11 101 20 ("search" "search-backward" "search-forward" "mode" "case" "nextmethod" "key")}
        {Lisp-Entry "backspace-press" #f 108 11 108 26 ("search" "search-backward" "search-forward" "mode" "case" "nextmethod" "word?" "word?:" "key")}
        {Lisp-Entry "select-mode" #f 120 18 120 29 ("select-mode-execute" "else" "search" "set-text" "when" "acquire-focus" "select-mode-search" "search-backward" "search-forward" "case" "value" "mode")}
        {Lisp-Entry "select-mode-execute" #f 138 11 138 30 ("execute" "'execute" "mode" "set!")}
        {Lisp-Entry "on-done" #f 142 11 142 18 ("acquire-focus" "client" "when" "evt")}
        {Lisp-Entry "next-page" #f 152 11 152 20 ("search-forward" "'search-forward" "search" "evt")}
        {Lisp-Entry "prior-page" #f 156 11 156 21 ("search-backward" "'search-backward" "search" "evt")}
        {Lisp-Entry "select-mode-search" #f 160 11 160 29 ("search-pristine?" "mode~self" "set!" "mode")}
        {Lisp-Entry "on-search-forward" #f 165 11 165 28 ("search-forward" "'search-forward" "search" "evt")}
        {Lisp-Entry "on-search-backward" #f 169 11 169 29 ("search-backward" "'search-backward" "search" "evt")}
        {Lisp-Entry "on-search-finish" #f 173 11 173 27 ("search-finish" "evt")}
        {Lisp-Entry "search" #f 177 11 177 17 ("text-ending" "set-caret" "search-key" "key" "function" "for-each" "last" "set-selection" "not" "empty-string?" "and" "if" "subseq" "suffix" "cardinality" "reset-prefix" "prefix" "get-target" "target" "get-string-content" "content" "let" "client" "get-selection" "list" "search-ranges" "ignore-case?:" "make-search-context" "search-context" "set!" "search-pristine?" "when" "again?" "direction")}
        {Lisp-Entry "search-pos" #f 198 11 198 21 ("get-end" "search-backward" "get-start" "search-forward" "case" "direction" "range")}
        {Lisp-Entry "reset-prefix" #f 204 11 204 23 ("1" "+" "search-ranges" "set!" "0" "get-target" "subseq" "search-context" "set-target" "len")}
        {Lisp-Entry "search-key" #f 209 11 209 21 ("set-selection" "Range$Cell$" "new" "context" "bind" "bell" "begin" "append" "set!" "set-car!" "last-pair" "pair" "range" "update-range" "define" "reverse?:" "start:" "list" "client" "text-multisearch" "found" "set-target" "'search-backward" "eq?" "reverse?" "cardinality" "nu+" "search-backward" "get-start" "get-end" "search-forward" "case" "pos" "search-ranges" "last" "last-range" "format" "concatenate" "search-context" "get-target" "not" "if" "target" "let" "direction" "key")}
        {Lisp-Entry "search-finish" #f 236 11 236 24 ("acquire-focus" "client" "when")}}}})
"CommonLisp-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "commonlisp" "text" "CommonLisp-Explorer.jazz"} 1236813156
    {Lisp-Entry "jazz.language.commonlisp.text.CommonLisp-Explorer" #f 37 9 37 58 ("jazz")
      {Lisp-Entry "CommonLisp-Explorer" #f 46 7 46 26 ("Lisp-Explorer")
        {Lisp-Entry "Modifiers" #f 49 14 49 23 ()}
        {Lisp-Entry "get-modifiers" #f 53 11 53 24 ("Modifiers")}
        {Lisp-Entry "Toplevels" #f 62 14 62 23 ("defstruct" "defparameter" "defvar" "defmacro" "defun")}
        {Lisp-Entry "definition-name?" #f 66 11 66 27 ("Toplevels" "memq?" "name")}
        {Lisp-Entry "walk-declaration" #f 75 11 75 27 ("exit-list" "unless" "walk-unknown" "else" "walk-define-variable" "define-modify-macro" "define-condition" "defpackage" "defclass" "defstruct" "defparameter" "defvar" "walk-define-macro" "defmacro" "walk-define" "defgeneric" "defmethod" "defun" "walk-eval-when" "eval-when" "case" "find-marked-symbol" "symbol" "'symbol" "eq?" "and" "kind" "code" "'code" "start" "forward-expr" "if" "end" "get-row" "=" "not" "or" "when" "enter-list" "list?" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-eval-when" #f 101 11 101 25 ("walk-declarations" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define" #f 105 11 105 22 ("walk-declarations" "exit-list" "walk-parameters" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-macro" #f 123 11 123 28 ("walk-declarations" "exit-list" "code" "'code" "walk-expressions" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-variable" #f 141 11 141 31 ("walk-declarations" "exit-list" "walk-parameters" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-unknown" #f 159 11 159 23 ("walk-expressions" "code" "'code" "walk-expression" "when" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}}}})
"CommonLisp-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "commonlisp" "parser" "CommonLisp-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.commonlisp.parser.CommonLisp-Parser" #f 37 9 37 58 ("jazz")
      {Lisp-Entry "CommonLisp-Parser" #f 47 7 47 24 ("Lisp-Parser")
        {Lisp-Entry "explorer-class" #f 50 11 50 25 ("CommonLisp-Explorer" "file")}
        {Lisp-Entry "text-view-class" #f 54 11 54 26 ("CommonLisp-Text-View")}}}})
"CommonLisp-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "commonlisp" "text" "CommonLisp-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.commonlisp.text.CommonLisp-Text-Preferences" #f 37 9 37 66 ("jazz")
      {Lisp-Entry "CommonLisp-Text-Preferences" #f 51 7 51 34 ("completions:" "quotation-color:" "named-string-color:" "string-color:" "boolean-color:" "number-color:" "Ochre" "char-color:" "keyword-color:" "Dark-Green" "declaration-color:" "Dark-Blue" "declaration-keyword-color:" "Text-Gray" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Lisp-Text-Preferences")
        {Lisp-Entry "get-categorized-properties" #f 87 11 87 37 ("translate-keys?" "keyword-color" "declaration-color" "expr-comment-color" "comment-color" "title-color" "completions")}
        {Lisp-Entry "get-row-instance" #f 91 11 91 27 ("nextmethod" "else" "Boolean-Row" "translate-keys?" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "declaration-color" "expr-comment-color" "comment-color" "title-color" "field-name" "case" "property")}}}})
"CommonLisp-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "commonlisp" "text" "CommonLisp-Text-View.jazz"} 1236975967
    {Lisp-Entry "jazz.language.commonlisp.text.CommonLisp-Text-View" #f 37 9 37 59 ("jazz")
      {Lisp-Entry "CommonLisp-Text-View" #f 50 7 50 27 ("tooltip?:" "Lisp-Text-View")
        {Lisp-Entry "install" #f 57 11 57 18 ("Red" "Color" "frame:" "Reference" "'Reference" "get-quotation-color" "Quotation" "'Quotation" "get-named-string-color" "Named-String" "'Named-String" "get-delimited-string-color" "Delimited-String" "'Delimited-String" "get-string-color" "String" "'String" "get-boolean-color" "Boolean" "'Boolean" "get-char-color" "Char" "'Char" "get-keyword-color" "Keyword" "'Keyword" "get-declaration-color" "Declaration" "'Declaration" "get-declaration-keyword-color" "Declaration-Keyword" "'Declaration-Keyword" "get-expr-comment-color" "Expr-Comment" "'Expr-Comment" "get-comment-color" "Comment" "'Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 75 16 75 29 ("commonlisp-text" "'commonlisp-text" "rest")}
        {Lisp-Entry "default-extension" #f 79 11 79 28 ()}
        {Lisp-Entry "extensions" #f 83 11 83 21 ()}
        {Lisp-Entry "get-context-menu" #f 92 11 92 27 ("CommonLisp-Text-Menu" "new")}
        {Lisp-Entry "default-preferences" #f 101 14 101 33 ("completions:" "Dark-Blue" "keyword-color:" "Dark-Green" "declaration-color:" "Dark-Orange" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "form>>")}
        {Lisp-Entry "preferences" #f 106 11 106 22 ("commonlisp-text" "documents" "get-preferences")}
        {Lisp-Entry "declaration-style" #f 110 11 110 28 ("Declaration" "'Declaration" "documented?")}
        {Lisp-Entry "Specials" #f 119 12 119 20 ("receive" "prog1" "parameterize" "letrec" "let*" "let" "lambda" "if" "2" "do" "define-macro" "define" "cond" "1" "case" "call/cc" "0" "begin")}
        {Lisp-Entry "get-specials" #f 137 11 137 23 ("Specials")}
        {Lisp-Entry "explorer-class" #f 146 11 146 25 ("CommonLisp-Explorer")}}
      {Lisp-Entry "CommonLisp-Text-Menu" #f 155 7 155 27 ("paste" "copy" "view" "french:" "english:" "Locales" "cut" "edit-references" "code-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "edit-definitions" "name:" "Context-Menu")}}})
"Completion-Popup"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "text" "Completion-Popup.jazz"} 1226584790
    {Lisp-Entry "jedi.text.Completion-Popup" #f 37 9 37 35 ("jazz")
      {Lisp-Entry "Completion-Popup" #f 47 7 47 23 ("Popup")}
      {Lisp-Entry "Completion-Popup" #f 53 7 53 23 ("190" "90" "5" "Point" "position:" "tree" "name:" "200" "100" "Dimension" "size:" "Popup")
        {Lisp-Entry "owner-text" #f 56 12 56 22 ("set-owner-text" "get-owner-text")}
        {Lisp-Entry "get-owner-text" #f 64 18 64 32 ("owner-text")}
        {Lisp-Entry "set-owner-text" #f 68 18 68 32 ("owner-text" "set!" "text")}
        {Lisp-Entry "focus-lose" #f 72 11 72 21 ("close" "owner-text" "neq?" "when" "nextmethod" "receiving")}}}})
"Component-Catalog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "catalog" "Component-Catalog.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.catalog.Component-Catalog" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Component-Catalog" #f 46 7 46 24 ("Catalog")
        {Lisp-Entry "client" #f 49 8 49 14 ()}
        {Lisp-Entry "definitions-index" #f 50 8 50 25 ()}
        {Lisp-Entry "references-index" #f 51 8 51 24 ()}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("update-catalog-indexes" "references-index~self" "eq?" "test:" "make-table" "definitions-index~self" "client~self" "set!" "nextmethod" "client" "name")}
        {Lisp-Entry "get-client" #f 67 18 67 28 ("client")}
        {Lisp-Entry "get-definitions-index" #f 71 18 71 39 ("definitions-index")}
        {Lisp-Entry "get-references-index" #f 75 18 75 38 ("references-index")}
        {Lisp-Entry "get-statistics" #f 79 18 79 32 ("format-plural" "format" "references-index" "r" "definitions-index" "table-length" "d" "let")}
        {Lisp-Entry "table-info" #f 87 11 87 21 ("table-length" "format" "table")}
        {Lisp-Entry "update-catalog-indexes" #f 97 11 97 33 ("definitions-index" "table-add" "when" "get-name" "name" "let" "level" "child" "function" "for-each-descendant" "self" "client" "set-catalog")}
        {Lisp-Entry "get-definitions" #f 111 11 111 26 ("definitions-index" "table-ref" "name")}
        {Lisp-Entry "get-references" #f 115 11 115 25 ("references-index" "table-ref" "name")}}}})
"Concept-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Concept-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Concept-Doc" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Concept-Doc" #f 45 7 45 18 ("Doc")
        {Lisp-Entry "get-class-image" #f 53 16 53 31 ("Bitmap-Resource")}}}})
"Console-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "console" "Console-Manager.jazz"} 1237219903
    {Lisp-Entry "jazz.console.Console-Manager" #f 37 9 37 37 ("Console-View" "register-autoclass" "jazz")
      {Lisp-Entry "Console-Manager" #f 50 7 50 22 ("center" "pad" "on-clear-console" "22" "clear" "tail" "location:" "pick" "on-print-detail-menu" ":form" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "Bitmap-Resource" "image-name:" ":icons" "portfolio:" "body" "detail" "tools" "name:" "border" "layout-type:" "400" "650" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "external-name" #f 65 16 65 29 ("console-manager" "'console-manager" "rest")}
        {Lisp-Entry "host-icon" #f 74 16 74 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 78 16 78 26 ()}
        {Lisp-Entry "get-tools-view" #f 87 11 87 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" #f 91 11 91 24 ("acquire-focus" "when" "get-text" "text" "let")}
        {Lisp-Entry "get-pad" #f 102 11 102 18 ("pad" "'pad" "locate")}
        {Lisp-Entry "get-text" #f 106 18 106 26 ("get-text" "essay" "get-pad" "get-selection" "console" "let")}
        {Lisp-Entry "register-console" #f 116 11 116 27 ("set-selected?" "acquire-focus" "event" "function" "execute:" "Event-Handler" "set-action-handler" "layout-view" "set-selection" "when" "add-view" "get-selection" "not" "select?" "get-text" "text" "button:" "Console-View" "view" "get-pad" "pad" "get-host" "add-tool" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "head" "'head" "location:" "auto-size?:" "title:" "Console-Button" "new" "tool" "let" "title")}
        {Lisp-Entry "unregister-console" #f 137 11 137 29 ("get-player" "invalidate-window" "function" "post-event" "get-pad" "remove-view" "get-button" "get-host" "remove-tool" "get-parent" "let" "console")}
        {Lisp-Entry "on-print-detail-menu" #f 151 11 151 31 ("initiator:" "track-popup-menu" "layout-menu" "child" "set-checked?" "get-print-detail" "detail" "console" "tools" "get-preferences" "pref" "self" "client:" "Print-Detail-Menu" "menu" "get-size" "get-height" "0" "Point" "new" "pos" "Combo-Button" "get-combo" "Push-Icon" "typecase" "combo" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-print-detail" #f 163 11 163 26 ("user-message" "print-detail" "'print-detail" "set-preference" "detail:" "get-property" "detail" "console" "tools" "get-preferences" "pref" "let" "evt")}
        {Lisp-Entry "on-clear-console" #f 170 11 170 27 ("acquire-focus" "clear-console" "get-text" "text" "let" "evt")}}
      {Lisp-Entry "Console-View" #f 181 7 181 19 ("text" "content" "name:" "flat?:" "hscroll?:" "vscroll?:" "Scroller-View")
        {Lisp-Entry "button" #f 184 12 184 18 ("generate")}
        {Lisp-Entry "get-text" #f 193 11 193 19 ("text" "'text" "locate")}}
      {Lisp-Entry "Console-Button" #f 205 7 205 21 ("Radio-Tool")
        {Lisp-Entry "draw-frame" #f 208 11 208 21 ("pixel-to" "Medium" "name:" "Color" "set-color" "get-bottom" "bottom" "1" "get-right" "-" "right" "get-top" "top" "get-left" "left" "get-bounds" "rect" "let*" "nextmethod" "surface")}}
      {Lisp-Entry "Print-Detail-Menu" #f 227 7 227 24 (":describe" ":reader" ":text" "detail:" "on-print-detail" ":client" ":form" "Event-Handler" "action-handler:" "title:" ":human" "name:" "Context-Menu")}}})
"Console-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "console" "Console-Preferences.jazz"} 1237219903
    {Lisp-Entry "jazz.console.Console-Preferences" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Console-Preferences" #f 47 7 47 26 ("Bitmap-Resource" "icon:" "title:" "Frame-Preferences")
        {Lisp-Entry "wrap?" #f 50 12 50 17 ("generate")}
        {Lisp-Entry "context" #f 51 12 51 19 ("generate" ":default")}
        {Lisp-Entry "print-detail" #f 52 12 52 24 ("generate" ":reader")}}}})
"Console-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "console" "Console-Text-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.console.Console-Text-Actions" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Console-Text-Actions" #f 47 7 47 27 ("insert-next-aux" "Down" "on-insert-next" "insert-next" "insert-previous-aux" "Up" "on-insert-previous" "insert-previous" ":alt" "on-fresh-prompt" "fresh-prompt" "Return" "Shortcut" "shortcut:" "on-console-evaluate" ":focus" "Event-Handler" "action-handler:" "console-evaluate" "name:" "Actions")}}})
"Console-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "console" "Console-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.console.Console-Text-Preferences" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Console-Text-Preferences" #f 49 7 49 31 ("Text-Gray" "comment-color:" "Dark-Blue" "output-color:" "Dark-Green" "input-color:" "Dark-Red" "name:" "Color" "entry-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "entry-color" #f 52 12 52 23 ("generate")}
        {Lisp-Entry "input-color" #f 53 12 53 23 ("generate")}
        {Lisp-Entry "output-color" #f 54 12 54 24 ("generate")}
        {Lisp-Entry "comment-color" #f 55 12 55 25 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 72 11 72 37 ("comment-color" "output-color" "input-color" "entry-color")}
        {Lisp-Entry "get-row-instance" #f 76 11 76 27 ("nextmethod" "else" "Color-Row" "new" "comment-color" "output-color" "input-color" "entry-color" "field-name" "case" "property")}}}})
"Console-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "console" "Console-Text-View.jazz"} 1236975967
    {Lisp-Entry "jazz.console.Console-Text-View" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Console-Text-View" #f 54 7 54 24 ("2" "left-padding:" "wrap?:" "IDE-Text-View")
        {Lisp-Entry "inserted-rank" #f 57 8 57 21 ()}
        {Lisp-Entry "inserted-where" #f 58 8 58 22 ()}
        {Lisp-Entry "banner" #f 59 8 59 14 ("generate")}
        {Lisp-Entry "prompt" #f 60 8 60 14 ("generate")}
        {Lisp-Entry "console-port" #f 61 8 61 20 ("generate")}
        {Lisp-Entry "console-pump" #f 62 8 62 20 ("generate")}
        {Lisp-Entry "external-name" #f 69 16 69 29 ("console-text" "'console-text" "rest")}
        {Lisp-Entry "default-tool?" #f 73 11 73 24 ()}
        {Lisp-Entry "default-console?" #f 77 11 77 27 ()}
        {Lisp-Entry "propagate-styles?" #f 81 11 81 28 ()}
        {Lisp-Entry "install" #f 85 11 85 18 ("get-style" "set-default-style" "get-comment-color" "Comment" "'Comment" "get-output-color" "Output" "'Output" "get-input-color" "Input" "'Input" "get-entry-color" "color:" "base:" "Entry" "'Entry" "Code-Bold" "Base-Bold" "'Base-Bold" "Code" "Font" "font:" "Base" "'Base" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "preferences" #f 97 11 97 22 ("console-text" "documents" "get-preferences")}
        {Lisp-Entry "host-icon" #f 106 16 106 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 110 16 110 26 ()}
        {Lisp-Entry "position-host" #f 119 11 119 24 ("100" "1280" "Dimension" "set-size" "host")}
        {Lisp-Entry "focus-actions" #f 128 11 128 24 ("nextmethod" "console-text" "'console-text" "find-actions" "cons")}
        {Lisp-Entry "on-fresh-prompt" #f 138 11 138 26 ("fresh-prompt" "evt")}
        {Lisp-Entry "on-console-evaluate" #f 142 11 142 30 ("get-string" "remove-enclosing" "insert-string" "else" "console-evaluate" "last-block" "nu=?" "text-ending" "set-caret" "empty-block?" "cond" "get-end" "block-at" "block" "let" "evt")}
        {Lisp-Entry "on-insert-previous" #f 153 11 153 29 ("insert-previous-block" "evt")}
        {Lisp-Entry "on-insert-next" #f 157 11 157 25 ("insert-next-block" "evt")}
        {Lisp-Entry "tab-press" #f 161 11 161 20 ("insert-previous-block" "insert-next-block" "shift-key?" "end-completion" "has-completion?" "if" "modifiers" "key")}
        {Lisp-Entry "delete-char" #f 169 11 169 22 ("nextmethod" "send-end-of-file" "current-command" "extended?" "not" "at-end?" "and" "if")}
        {Lisp-Entry "send-end-of-file" #f 176 11 176 27 ("console-port" "close-port")}
        {Lisp-Entry "scrollee-size" #f 180 11 180 24 ("nextmethod" "scrollee-height" "get-display-width" "Dimension" "new" "wrap?" "if")}
        {Lisp-Entry "context-menu" #f 186 11 186 23 ("nextmethod" "Console-Menu" "new" "track-popup-menu" "context-menu-click" "begin" "not" "and" "if" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "set-selection" #f 195 18 195 31 ("inserted-where" "set!" "nextmethod" "apply" "rest" "range")}
        {Lisp-Entry "console-evaluate" #f 205 11 205 27 ("eval-from-prompt" "insert-newline" "text-ending" "set-caret")}
        {Lisp-Entry "eval-from-prompt" #f 211 11 211 27 ("reset-inserted" "Input" "'Input" "get-style" "set-style" "force-output" "console-port" "display" "empty-string?" "unless" "get-string" "command" "current-command" "range" "let")}
        {Lisp-Entry "current-command" #f 221 11 221 26 ("Entry" "'Entry" "inherits?" "style" "function" "text-ending" "select-style")}
        {Lisp-Entry "get-modified?" #f 232 11 232 24 ()}
        {Lisp-Entry "get-tooltip-context" #f 236 11 236 30 ("pos")}
        {Lisp-Entry "home-column" #f 240 11 240 22 ("0" "Cell" "new" "new-range" "get-string" "=" "2" "paragraph-length" ">=" "and" "if" "row")}
        {Lisp-Entry "current-history-item" #f 251 11 251 31 ()}
        {Lisp-Entry "recolorize-text" #f 260 11 260 26 ("end-row" "start")}
        {Lisp-Entry "expression-color" #f 264 26 264 42 ("Expression-Color")}
        {Lisp-Entry "eval-color" #f 268 26 268 36 ("Eval-Color")}
        {Lisp-Entry "process-formatted-directive" #f 277 11 277 38 ("nextmethod" "else" "fresh-prompt" "prompt" "display-banner" "banner" "case" "input" "directive")}
        {Lisp-Entry "backward-style" #f 292 21 292 35 ("get-range" "backward-style" "end:" "start:" "self" "explorer-class" "new" "explorer" "let" "predicate" "pos")}
        {Lisp-Entry "forward-style" #f 298 21 298 34 ("get-range" "forward-style" "end:" "start:" "self" "explorer-class" "new" "explorer" "let" "predicate" "pos")}
        {Lisp-Entry "select-style" #f 304 21 304 33 ("get-range" "select-style" "end:" "start:" "self" "explorer-class" "new" "explorer" "let" "predicate" "pos")}
        {Lisp-Entry "display-banner" #f 315 26 315 40 ("display-prompt" "insert-newline" "Banner-Color" "colorize" "insert-string" "get-start" "start" "get-application" "appl" "let" "Output" "'Output" "insert-styled" "when" "banner")}
        {Lisp-Entry "clear-console" #f 329 18 329 31 ("display-banner" "clear-all" "determine-banner" "or" "banner" "let")}
        {Lisp-Entry "determine-banner" #f 335 11 335 27 ("get-string" "when" "Output" "'Output" "inherits?" "style" "function" "text-beginning" "forward-style" "range" "let")}
        {Lisp-Entry "fresh-prompt" #f 346 18 346 30 ("text-ending" "set-caret" "Comment" "'Comment" "get-style" "last-block" "set-style")}
        {Lisp-Entry "reset-inserted" #f 356 11 356 25 ("inserted-where" "inserted-rank" "set!")}
        {Lisp-Entry "text-style?" #f 361 15 361 26 ("Comment" "'Comment" "Output" "'Output" "inherits?" "or" "style")}
        {Lisp-Entry "user-style?" #f 366 15 366 26 ("text-style?" "not" "style")}
        {Lisp-Entry "block-at" #f 370 11 370 19 ("forward-style" "get-end" "user-style?" "backward-style" "get-start" "new-range" "pos")}
        {Lisp-Entry "next-block" #f 376 11 376 21 ("new-range" "user-style?" "next-end" "text-style?" "forward-style" "get-end" "next-start" "let*" "block")}
        {Lisp-Entry "previous-block" #f 382 11 382 25 ("new-range" "user-style?" "previous-start" "text-style?" "backward-style" "get-start" "previous-end" "let*" "block")}
        {Lisp-Entry "last-block" #f 388 11 388 21 ("user-style?" "backward-style" "text-ending" "ending" "let")}
        {Lisp-Entry "find-block" #f 393 11 393 21 ("1" "-" "previous-block" "0" "<=" "if" "n" "last-block" "block" "iterate" "let" "rank")}
        {Lisp-Entry "empty-block?" #f 400 11 400 23 ("get-end" "get-start" "nu=?" "block")}
        {Lisp-Entry "insert-previous-block" #f 405 11 405 32 ("new-range" "set!" "get-string" "remove-enclosing" "insert-string" "get-start" "start" "let" "set-selection" "inserted-where" "when" "empty-block?" "unless" "find-block" "block" "1" "+" "previous" "0" "inserted-rank" "either" "current" "let*")}
        {Lisp-Entry "insert-next-block" #f 418 11 418 28 ("new-range" "set!" "get-string" "remove-enclosing" "insert-string" "get-start" "start" "set-selection" "inserted-where" "empty-block?" "unless" "find-block" "block" "let" ">" "when" "1" "-" "next" "0" "inserted-rank" "either" "current" "let*")}}
      {Lisp-Entry "Console-Menu" #f 437 7 437 19 ("insert-next" "insert-previous" "paste" "copy" "view" "french:" "english:" "Locales" "cut" "edit-references" "code-text" "edit-definitions" "fresh-prompt" "console-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "console-evaluate" "name:" "Context-Menu")}}})
"Constant-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Constant-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Constant-Doc" #f 37 9 37 34 ("jazz")
      {Lisp-Entry "Constant-Doc" #f 45 7 45 19 ("Element-Doc")
        {Lisp-Entry "construct-literal" #f 49 16 49 33 ("doc:" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-image" #f 58 16 58 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" #f 62 11 62 37 ()}}}})
"Constructor-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Constructor-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Constructor-Entry" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Constructor-Entry" #f 45 7 45 24 ("Method-Entry")
        {Lisp-Entry "get-image" #f 48 11 48 20 ("Bitmap-Resource")}}}})
"Cursor-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "resource" "Cursor-File.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.resource.Cursor-File" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Cursor-File" #f 45 7 45 18 ("Resource-File")
        {Lisp-Entry "resource-class" #f 48 11 48 25 ("Cursor-Resource")}
        {Lisp-Entry "resource-marker" #f 52 11 52 26 ()}}}})
"Database-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "workspace" "Database-Workspace.jazz"} 1229802703
    {Lisp-Entry "jedi.workspace.Database-Workspace" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Database-Workspace" #f 46 7 46 25 ("Text-Palette" "59" "vert" "second" "Output-Log" "Search-Results" "Properties-Manager" "Console-Manager" "model-name:" "selection" "5" "Rect" "insets:" "20" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Database-Manager" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 66 11 66 23 ("database" "'database")}}}})
"Definition-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Definition-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Definition-Doc" #f 37 9 37 36 ("jazz")
      {Lisp-Entry "Definition-Doc" #f 45 7 45 21 ("Element-Doc")}}})
"Definition-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Definition-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Definition-Entry" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Definition-Entry" #f 45 7 45 23 ("Hierarchical-Entry")
        {Lisp-Entry "type" #f 48 8 48 12 ()}
        {Lisp-Entry "literal?" #f 49 8 49 16 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("literal?~self" "type~self" "set!" "nextmethod" "references" "definitions" "column" "line" "literal?" "type" "name" "modifiers")}
        {Lisp-Entry "get-type" #f 63 18 63 26 ("type")}
        {Lisp-Entry "set-type" #f 67 18 67 26 ("type" "set!" "value")}
        {Lisp-Entry "get-literal?" #f 71 18 71 30 ("literal?")}
        {Lisp-Entry "update-indexes" #f 80 11 80 25 ("references" "key" "function" "for-each" "name" "update-index" "references-index" "definitions-index")}}}})
"Designer-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "designer" "Designer-Manager.jazz"} 1226584790
    {Lisp-Entry "jedi.designer.Designer-Manager" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Designer-Manager" #f 50 7 50 23 ("rect" "mode-rect" "edit" "mode-edit" "0" "2" "select" "mode:" "on-mode" ":form" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "selected?:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "22" "Dimension" "size:" "mode-select" "name:" "View")
        {Lisp-Entry "client" #f 53 12 53 18 ("set-client" "get-client")}
        {Lisp-Entry "flow-layout" #f 56 8 56 19 ()}
        {Lisp-Entry "external-name" #f 68 16 68 29 ("designer-manager" "'designer-manager" "rest")}
        {Lisp-Entry "host-icon" #f 77 16 77 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 81 16 81 26 ()}
        {Lisp-Entry "client-activate" #f 85 11 85 26 ("get-client" "set-client" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "finish" #f 96 11 96 17 ("layout-view" "0" "5" "4" "Rect" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "layout" #f 102 11 102 17 ("get-height" "get-width" "children" "flow-layout" "layout")}
        {Lisp-Entry "on-editor" #f 106 11 106 20 ("designer:" "get-property" "set-designer" ":designer-change" "get-kind" "case" "evt")}
        {Lisp-Entry "on-mode" #f 116 11 116 18 ("set-mode" "current-document" "editor" "mode:" "get-property" "mode" "let" "evt")}
        {Lisp-Entry "get-client" #f 127 18 127 28 ("client")}
        {Lisp-Entry "set-client" #f 131 18 131 28 ("set!" "client" "neq?" "when" "clt")}
        {Lisp-Entry "set-designer" #f 141 11 141 23 ("class-of" "type-name" "format" "get-reference" "reference" "let" "set-title" "not" "if" "designer")}}}})
"Diff-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "diff" "text" "Diff-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.diff.text.Diff-Text-Preferences" #f 37 9 37 54 ("jazz")
      {Lisp-Entry "Diff-Text-Preferences" #f 48 7 48 28 ("Dark-Red" "remove-color:" "Dark-Green" "add-color:" "Dark-Purple" "diff-color:" "Ochre" "name:" "Color" "file-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "file-color" #f 51 12 51 22 ("generate")}
        {Lisp-Entry "diff-color" #f 52 12 52 22 ("generate")}
        {Lisp-Entry "add-color" #f 53 12 53 21 ("generate")}
        {Lisp-Entry "remove-color" #f 54 12 54 24 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 71 11 71 37 ("remove-color" "add-color" "diff-color" "file-color")}
        {Lisp-Entry "get-row-instance" #f 75 11 75 27 ("nextmethod" "else" "Color-Row" "new" "remove-color" "add-color" "diff-color" "file-color" "field-name" "case" "property")}}}})
"Diff-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "diff" "text" "Diff-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.diff.text.Diff-Text-View" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Diff-Text-View" #f 45 7 45 21 ("Code-Text-View")
        {Lisp-Entry "external-name" #f 48 16 48 29 ("diff" "'diff" "rest")}
        {Lisp-Entry "preferences" #f 52 11 52 22 ("diff-text" "documents" "get-preferences")}
        {Lisp-Entry "install" #f 56 11 56 18 ("get-remove-color" "Remove" "'Remove" "get-add-color" "Add" "'Add" "get-diff-color" "Diff" "'Diff" "get-file-color" "color:" "Default" "'Default" "base:" "File" "'File" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "host-workspaces" #f 70 11 70 26 ("text")}
        {Lisp-Entry "headers" #f 79 12 79 19 ("list")}
        {Lisp-Entry "get-headers" #f 84 11 84 22 ("headers")}
        {Lisp-Entry "get-chapter-label" #f 88 11 88 28 ("nextmethod" "1" "+" "subseq" "if" "reversed?:" "find" "pos" "let" "header" "col" "string")}
        {Lisp-Entry "get-first-special?" #f 95 11 95 29 ()}
        {Lisp-Entry "colorize-syntax" #f 104 11 104 26 ("finish-current" "colorize-diff" "self" "new-colorizer" "colorizer" "let" "entries?" "entries?:" "recoloring?" "recoloring?:")}
        {Lisp-Entry "colorize-diff" #f 110 11 110 24 ("else" "Remove" "'Remove" "Add" "'Add" "Diff" "'Diff" "File" "'File" "0" "Cell" "new" "apply-coloring" "starts-with?" "or" "cond" "cardinality" "len" "get-string" "line" "let" "paragraph" "row" "function" "for-each-paragraph" "colorizer")}}}})
"Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Doc" #f 11 9 11 25 ("jazz")
      {Lisp-Entry "Doc" #f 21 7 21 10 ("Component")
        {Lisp-Entry "title" #f 24 12 24 17 ("generate")}
        {Lisp-Entry "description" #f 25 12 25 23 ("generate")}
        {Lisp-Entry "construct-literal" #f 29 16 29 33 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "install-child" #f 33 11 33 24 ("nextmethod" "else" "set-description" "description" "get-model-name" "case" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "get-catalog" #f 44 26 44 37 ("parent" "get-catalog")}
        {Lisp-Entry "set-catalog" #f 48 26 48 37 ("cat")}
        {Lisp-Entry "get-effective-title" #f 57 18 57 37 ("name" "->string" "title" "either")}
        {Lisp-Entry "update-indexes" #f 66 26 66 40 ("self" "table-add" "name" "not-null?" "when" "references-index" "definitions-index")}
        {Lisp-Entry "print-catalog" #f 71 26 71 39 ("description" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-documentation" #f 83 18 83 35 ("get-definitions" "self" "get-parent" "eq?" "doc" "function" "find-if" "get-catalog" "catalog" "let" "symbol")}
        {Lisp-Entry "present" #f 95 26 95 33 ("description")}
        {Lisp-Entry "present-text" #f 99 26 99 38 (",@paragraphs" "form->node" "->jml" "paragraphs" "tag" "bind" "description" "when")}
        {Lisp-Entry "Red-Ball" #f 111 12 111 20 ()}
        {Lisp-Entry "property-presentation" #f 120 16 120 37 ("nextmethod" "else" "description" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 126 11 126 27 ("nextmethod" "else" "Doc-Text-Row" "description" "String-Row" "new" "title" "field-name" "case" "property")}
        {Lisp-Entry "display-property?" #f 133 11 133 28 ("visible?" "children" "before" "name-info" "field-name" "memq?" "not" "property")}
        {Lisp-Entry "get-categorized-properties" #f 137 11 137 37 ("description" "title")}
        {Lisp-Entry "get-addable-classes" #f 141 11 141 30 ("Method-Doc" "Syntax-Doc" "Constant-Doc" "Interface-Doc" "Class-Doc" "Package-Doc" "Concept-Doc" "Section-Doc" "list")}}}})
"Doc-Catalog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "catalog" "Doc-Catalog.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.catalog.Doc-Catalog" #f 37 9 37 37 ("jazz")
      {Lisp-Entry "Doc-Catalog" #f 45 7 45 18 ("Component-Catalog")
        {Lisp-Entry "project" #f 48 8 48 15 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("project~self" "set!" "nextmethod" "project" "client" "name")}
        {Lisp-Entry "get-project" #f 61 18 61 29 ("project")}}}})
"Doc-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "tools" "Doc-Editor.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.tools.Doc-Editor" #f 37 9 37 34 ("jazz")
      {Lisp-Entry "Doc-Editor" #f 50 7 50 17 ("card" "card-border" "second" "390" "card-contour" "183" "width:" "descendant" "descendants" "header" "fill" "content" "vscroll?:" "hscroll?:" "document" "scroller" "entry" "style:" "edge" "border-type:" "first" "366" "255" "descendants-border" "250" "division:" "horz" "orientation:" "split" "state:" "center" "367" "splitter" "on-edit" "tail" "edit" "on-build" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "build" "6" "flow" "north" "location:" "33" "300" "toolbar" "name:" "0" "2" "Rect" "layout-insets:" "border" "layout-type:" "400" "650" "Dimension" "size:" "title:" "Editor-View")
        {Lisp-Entry "entry" #f 53 12 53 17 ("set-entry" "get-entry")}
        {Lisp-Entry "type" #f 56 8 56 12 ()}
        {Lisp-Entry "location" #f 57 8 57 16 ()}
        {Lisp-Entry "expression" #f 58 8 58 18 ()}
        {Lisp-Entry "text-object" #f 59 8 59 19 ()}
        {Lisp-Entry "text-location" #f 60 8 60 21 ()}
        {Lisp-Entry "form-model" #f 81 11 81 21 ("nextmethod" "else" "Docs-Tree" "descendants" "get-name" "case" "form")}
        {Lisp-Entry "install" #f 87 11 87 18 ("self" "set-editor" "categorized" "'categorized" "card" "'card" "get-tree" "set-filter" "descendant" "'descendant" "descendants" "'descendants" "locate" "child" "set-title" "nextmethod" "rest")}
        {Lisp-Entry "focus-document" #f 95 11 95 25 ("descendant" "'descendant" "descendants" "'descendants" "locate" "child" "acquire-focus")}
        {Lisp-Entry "get-tree" #f 104 18 104 26 ("tree" "descendants" "locate")}
        {Lisp-Entry "host-icon" #f 113 16 113 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 117 16 117 26 ()}
        {Lisp-Entry "host-position" #f 121 16 121 29 ("59" "52" "Point")}
        {Lisp-Entry "host-size" #f 125 16 125 25 ("500" "800" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 129 11 129 26 ("home")}
        {Lisp-Entry "new-controller" #f 139 11 139 25 ("self" "Doc-Editor-Controller" "new")}
        {Lisp-Entry "Doc-Editor-Controller" #f 144 9 144 30 ("Editor-View-Controller")
          {Lisp-Entry "name-status" #f 147 13 147 24 ("document" "editor-title")}}
        {Lisp-Entry "resize-center" #f 156 11 156 24 ("card-contour" "'card-contour" "0" "descendants-border" "'descendants-border" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-build" #f 161 11 161 19 ("on-build" "'on-build" "unimplemented" "bell" "client" "null?" "if" "evt")}
        {Lisp-Entry "on-edit" #f 167 11 167 18 ("edit-form" "evt")}
        {Lisp-Entry "get-entry" #f 176 18 176 27 ("entry")}
        {Lisp-Entry "set-entry" #f 180 18 180 27 ("setup" "text-location" "text" "object" "location" "bind" "entry" "set!" "info")}
        {Lisp-Entry "setup" #f 186 11 186 16 ("text-location" "text-object" "expression" "location" "set!" "text-loc" "text" "object" "loc")}
        {Lisp-Entry "editor-title" #f 198 11 198 23 ("get-form" "get-origin" "get-base" "format" "null?" "if" "get-reference" "reference" "let")}}}})
"Doc-Insert"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Doc-Insert.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Doc-Insert" #f 11 9 11 32 ("jazz")
      {Lisp-Entry "Doc-Insert" #f 19 7 19 17 ("Doc")
        {Lisp-Entry "path" #f 22 12 22 16 ("generate")}}}})
"Doc-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "designer" "Doc-Text-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.designer.Doc-Text-Actions" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Doc-Text-Actions" #f 47 7 47 23 (":control" "Shortcut" "shortcut:" "on-parameter" ":focus" "Event-Handler" "action-handler:" "parameter" "name:" "Actions")}}})
"Doc-Text-List-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "designer" "Doc-Text-List-Row.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.designer.Doc-Text-List-Row" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Doc-Text-List-Row" #f 46 7 46 24 ("List-Row")
        {Lisp-Entry "get-subrow-class" #f 49 11 49 27 ("Doc-Text-Row")}}}})
"Doc-Text-Row"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "designer" "Doc-Text-Row.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.designer.Doc-Text-Row" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Doc-Text-Row" #f 47 7 47 19 ("Formatted-Text-Row")
        {Lisp-Entry "new-editor" #f 55 11 55 21 ("editor-class" "new")}
        {Lisp-Entry "editor-class" #f 59 11 59 23 ("Doc-Text-View")}
        {Lisp-Entry "editor-height" #f 63 11 63 24 ("700")}}}})
"Doc-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "designer" "Doc-Text-View.jazz"} 1236975967
    {Lisp-Entry "jazz.doc.designer.Doc-Text-View" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Doc-Text-View" #f 50 7 50 20 ("Text" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "4" "left-padding:" "Row-Formatted-Text-View")
        {Lisp-Entry "install" #f 57 11 57 18 ("Variable" "Code" "Dark-Blue" "Hyperlink" "Reference" "Purple" "Comment" "Dark-Red" "Color" "color:" "Title" "Font" "font:" "Text-Style" "add-style" "Heading3" "Heading2" "Heading1" "Default" "base:" "Heading0" "name:" "Format" "add-format" "nextmethod" "rest")}
        {Lisp-Entry "focus-actions" #f 82 11 82 24 ("nextmethod" "doc-text" "'doc-text" "find-actions" "cons")}
        {Lisp-Entry "get-context-menu" #f 92 11 92 27 ()}
        {Lisp-Entry "on-parameter" #f 96 11 96 23 ("12" "+" "get-end" "end" "copy" "start" "let" "1" "get-start" "-" "set-caret" "insert-string" "begin" "empty-selection?" "if" "evt")}}}})
"DocToHTML-Transformation"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "transformation" "DocToHTML-Transformation.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.transformation.DocToHTML-Transformation" #f 37 9 37 57 ("jazz")
      {Lisp-Entry "DocToHTML-Transformation" #f 43 7 43 31 ("JML-Transformation")
        {Lisp-Entry "<parameter>" #f 46 12 46 23 (",text" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<code>" #f 51 12 51 18 (",text" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<reference>" #f 56 12 56 23 (",text" ",name" "href:" "->string" "get-text" "if" "text" "first-child" "child" "format" "name" "'href" "get-property" "href" "let*" "node")}
        {Lisp-Entry "<header>" #f 64 12 64 20 (",text" "get-child-text" "text" "let" "node")}
        {Lisp-Entry "<node>" #f 69 12 69 18 ("->jml" "get-children" "map" "'node" "get-tag" "eq?" "JML-Element" "is?" "and" "if" "expand" "define" "node")}
        {Lisp-Entry "<definition>" #f 78 12 78 24 ("children->jml" ",title" "class:" "name" "'name" "->string" "'title" "get-property" "either" "title" "let" "node")}
        {Lisp-Entry "<properties>" #f 85 12 85 24 ("JML-Text" "is?" "if" "get-text" "get-children" "value" "property" "bind" "prop" "function" "map" "class:" "node")}
        {Lisp-Entry "<terminology>" #f 95 12 95 25 ("JML-Text" "is?" "get-text" "get-children" "bind" "definition" "function" "map" ",text" ",term" "if" "class:" "'text" "text" "'term" "get-property" "term" "let" "node")}
        {Lisp-Entry "<styled-table>" #f 109 12 109 26 ("children->jml" "properties->jml" ",style" "style:" "red" "'red" "1" "solid" "'solid" "format" "style" "let" "node")}}}})
"DocToText-Transformation"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "transformation" "DocToText-Transformation.jazz"} 1236813156
    {Lisp-Entry "DocToText-Transformation" #f 37 7 37 31 ("JML-Transformation")
      {Lisp-Entry "<parameter>" #f 40 12 40 23 (",text" "Dark-Red" "color:" "get-child-text" "text" "let" "node")}
      {Lisp-Entry "<code>" #f 45 12 45 18 (",text" "Dark-Red" "color:" "get-child-text" "text" "let" "node")}
      {Lisp-Entry "<hyperlink>" #f 50 12 50 23 (",text" "Dark-Blue" "color:" "get-child-text" "text" "let" "node")}
      {Lisp-Entry "<node>" #f 55 12 55 18 ("children->jml" "bulleted?:" "node")}
      {Lisp-Entry "<properties>" #f 59 12 59 24 ("get-text" "get-children" "value" "property" "bind" "prop" "function" "map" "node")}
      {Lisp-Entry "<styled-table>" #f 69 12 69 26 ("children->jml" "properties->jml" ",style" "style:" "red" "'red" "1" "solid" "'solid" "format" "style" "let" "node")}}})
"Docs-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "tools" "Docs-Tree.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.tools.Docs-Tree" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Docs-Tree" #f 46 7 46 16 ("Descendants-Tree")
        {Lisp-Entry "row-state" #f 49 11 49 20 ("collapsed" "'collapsed" "expanded" "'expanded" "1" "<" "if" "level" "update?" "component")}}}})
"Element-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Element-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Element-Doc" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Element-Doc" #f 45 7 45 18 ("Doc")
        {Lisp-Entry "examples" #f 48 12 48 20 ("generate")}
        {Lisp-Entry "package-name" #f 49 12 49 24 ("generate")}
        {Lisp-Entry "install-child" #f 52 11 52 24 ("nextmethod" "else" "set-examples" "examples" "get-model-name" "case" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "property-presentation" #f 63 16 63 37 ("nextmethod" "else" "package-name" "examples" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 70 11 70 27 ("nextmethod" "else" "Doc-Text-List-Row" "new" "examples" "field-name" "case" "property")}}}})
"Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Entry" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Entry" #f 45 7 45 12 ("Object")}}})
"Event-Spy"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "spy" "Event-Spy.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.spy.Event-Spy" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Event-Categories" #f 53 10 53 26 ("unknown" "menu" "focus" "clipboard" "keyboard" "mouse" "action" "paint" "window" "component" "Bitmap-Resource" "general")}
      {Lisp-Entry "Event-Classes" #f 67 10 67 23 ("Selection-Event" "Print-Event" "Paint-Event" "mouse" "Mouse-Event" "Keyboard-Event" "Focus-Event" "focus" "Edition-Event" "paint" "Draw-Event" "window" "Cursor-Event" "Component-Event" "general" "Break-Event" "component" "Action-Event")}
      {Lisp-Entry "Event-Spy" #f 87 7 87 16 ("213" "226" "toplevel-controls?:" "140" "width:" "title:" "tree" "tree-header" "content" "tree-scroller" "tree-border" "name:" "Spy-View")
        {Lisp-Entry "host-title" #f 109 16 109 26 ()}
        {Lisp-Entry "host-position" #f 113 16 113 29 ("152" "154" "Point")}
        {Lisp-Entry "host-size" #f 117 16 117 25 ("339" "736" "Dimension")}
        {Lisp-Entry "spy-domain" #f 126 11 126 21 ("views" "'views")}
        {Lisp-Entry "spy" #f 130 11 130 14 ("self" "Spyer" "new" "set-event-consumer" "get-event-consumer" "old-consumer" "set!" "Event-Consumer" "is?" "when" "client")}
        {Lisp-Entry "unspy" #f 136 11 136 16 ("old-consumer" "set-event-consumer" "Event-Consumer" "is?" "when" "client")}
        {Lisp-Entry "incoming-event" #f 141 11 141 25 ("slowdown-quantum" "sleep" "slowdown?" "update-view" "ensure-at-end" "list" "children:" "add-row" "get-visible-count" "item" "5" "*" "make-string" "format" "c3" "c2" "get-kind" "Tree-Label" "c1" "image:" "title:" "Tree-Node" "new" "c0" "parameters" "Event-Categories" "assq" "cdr" "image" "get-tree" "tree" "all" "'all" "category" "eq?" "or" "when" "unknown" "'unknown" "second" "if" "cat" "car" "key:" "Event-Classes" "find-in" "info" "class-of" "type-name" "type" "let*" "evt" "client" "window" "level")}
        {Lisp-Entry "incoming-result" #f 162 11 162 26 ("result" "item" "level")}}
      {Lisp-Entry "Spyer" #f 171 7 171 12 ("Event-Consumer" "Object")
        {Lisp-Entry "level" #f 174 8 174 13 ("0")}
        {Lisp-Entry "spy-window" #f 175 8 175 18 ()}
        {Lisp-Entry "client" #f 176 8 176 14 ()}
        {Lisp-Entry "get-event-consumer" #f 179 11 179 29 ()}
        {Lisp-Entry "set-event-consumer" #f 180 11 180 29 ("consumer")}
        {Lisp-Entry "initialize" #f 183 11 183 21 ("client" "spy-window" "set!" "nextmethod" "clt" "wnd")}
        {Lisp-Entry "deliver-event" #f 189 11 189 24 ("decrease!" "increase!" "client" "level" "spy-window" "incoming-event" "evt" "proc" "target" "handler")}}}})
"Field-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Field-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Field-Doc" #f 37 9 37 31 ("jazz")
      {Lisp-Entry "Field-Doc" #f 45 7 45 16 ("Definition-Doc")
        {Lisp-Entry "construct-literal" #f 49 16 49 33 ("doc:" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-image" #f 58 16 58 31 ("Bitmap-Resource")}}}})
"File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.File-Entry" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "File-Entry" #f 46 7 46 17 ("Catalog-Entry")
        {Lisp-Entry "catalog" #f 49 8 49 15 ()}
        {Lisp-Entry "marked?" #f 50 8 50 15 ()}
        {Lisp-Entry "file" #f 51 8 51 12 ()}
        {Lisp-Entry "time" #f 52 8 52 12 ()}
        {Lisp-Entry "definitions" #f 53 8 53 19 ()}
        {Lisp-Entry "category-name" #f 54 8 54 21 ()}
        {Lisp-Entry "initialize" #f 57 11 57 21 ("set-file-definition" "self" "set-parent" "definition" "function" "for-each" "marked?" "get-base" "category-name" "definitions" "time" "file" "catalog" "set!" "nextmethod" "d" "t" "f" "c")}
        {Lisp-Entry "print" #f 71 11 71 16 ("file" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" #f 77 26 77 39 ("definitions" "print-catalog" "definition" "function" "for-each" "time" "time->seconds" "file" "self" "class-of" "type-name" "identifier-name" "2" "format" "not" "when" "printer" "first?")}
        {Lisp-Entry "get-catalog" #f 95 18 95 29 ("catalog")}
        {Lisp-Entry "set-catalog" #f 99 18 99 29 ("catalog" "set!" "cat")}
        {Lisp-Entry "get-marked?" #f 103 18 103 29 ("marked?")}
        {Lisp-Entry "set-marked?" #f 107 18 107 29 ("marked?" "set!" "flag")}
        {Lisp-Entry "get-file" #f 111 11 111 19 ("file")}
        {Lisp-Entry "get-moniker" #f 115 11 115 22 ("file")}
        {Lisp-Entry "get-time" #f 119 18 119 26 ("time")}
        {Lisp-Entry "get-definitions" #f 123 11 123 26 ("definitions")}
        {Lisp-Entry "get-category-name" #f 127 18 127 35 ("category-name")}
        {Lisp-Entry "get-file-definition" #f 131 11 131 30 ("self")}
        {Lisp-Entry "get-definition" #f 135 18 135 32 ("definitions" "get-name" "=" "definition" "function" "find-if" "name")}
        {Lisp-Entry "get-image" #f 146 11 146 20 ("Bitmap-Resource")}
        {Lisp-Entry "present-detailed" #f 150 11 150 27 ("file" "get-name")}
        {Lisp-Entry "update-indexes" #f 159 11 159 25 ("definitions" "update-indexes" "definition" "function" "for-each" "references-index" "definitions-index")}
        {Lisp-Entry "insert-definition" #f 170 11 170 28 ("get-definitions" "insert-definitions" "sort?" "father" "tree")}}}})
"File-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "parser" "File-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.parser.File-Parser" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "File-Parser" #f 45 7 45 18 ("Object")
        {Lisp-Entry "catalog" #f 48 8 48 15 ()}
        {Lisp-Entry "char-encoding" #f 49 8 49 21 ()}
        {Lisp-Entry "heuristics" #f 50 8 50 18 ()}
        {Lisp-Entry "references?" #f 51 8 51 19 ()}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("references?~self" "heuristics~self" "char-encoding~self" "catalog~self" "set!" "nextmethod" "references?" "references?:" "heuristics" "heuristics:" "char-encoding" "char-encoding:" "catalog")}
        {Lisp-Entry "get-heuristic" #f 62 11 62 24 ("getf" "heuristics" "when" "name")}
        {Lisp-Entry "parse" #f 67 35 67 40 ("time" "file")}
        {Lisp-Entry "parse-zipped" #f 71 26 71 38 ("error" "zipped")}}}})
"Filing-Catalog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "catalog" "Filing-Catalog.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.catalog.Filing-Catalog" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Filing-Catalog" #f 49 7 49 21 ("Catalog")
        {Lisp-Entry "file" #f 52 8 52 12 ()}
        {Lisp-Entry "active?" #f 53 8 53 15 ()}
        {Lisp-Entry "loaded?" #f 54 8 54 15 ()}
        {Lisp-Entry "modified?" #f 55 8 55 17 ()}
        {Lisp-Entry "initialize" #f 58 11 58 21 ("active?~self" "file~self" "set!" "nextmethod" "active?" "file" "name")}
        {Lisp-Entry "get-file" #f 69 18 69 26 ("file")}
        {Lisp-Entry "get-active?" #f 73 11 73 22 ("active?")}
        {Lisp-Entry "set-active?" #f 77 11 77 22 ("deactivate" "activate" "if" "set!" "active?" "neq?" "when" "flag")}
        {Lisp-Entry "get-modified?" #f 85 18 85 31 ("modified?")}
        {Lisp-Entry "set-modified?" #f 89 18 89 31 ("set!" "modified?" "neq?" "when" "state")}
        {Lisp-Entry "get-category-definitions" #f 99 11 99 35 ("get-definitions" "Category-Entry" "collect-type" "name")}
        {Lisp-Entry "iterate-content" #f 108 26 108 41 ("proc")}
        {Lisp-Entry "update" #f 117 26 117 32 ("name" "reset-marks" "sweep" "scan" "present" "user-message" "when" "set-active?" "report?" "report?:")}
        {Lisp-Entry "reset-marks" #f 128 29 128 40 ()}
        {Lisp-Entry "scan" #f 137 21 137 25 ("scan-directories" "throw-cancel" "Range" "new" "selection:" "get-source" "edit-document" "get-end" "end" "get-start" "start" "get-application" "appl" "let" "get-message" "message-box" "err" "Parse-Error" "catch" "reset-marks")}
        {Lisp-Entry "scan-directories" #f 149 29 149 45 ()}
        {Lisp-Entry "scan-directory" #f 153 21 153 35 ("directories?:" "files?:" "increase!" "process-file" "when" "file" "function" "iterate-directory" "0" "processed" "let" "recursive?" "recursive?:" "directory")}
        {Lisp-Entry "process-file" #f 165 21 165 33 ("parse" ":console" "format" "add-entry" "update-entry" "scan-file" "entry" "let" "set-modified?" "set-marked?" "begin" "get-unmodified-file-entry" "definition" "get-modification-time" "time" "get-base" "name" "let*" "exists?" "if" "scan-file?" "when" "get-message" "debug" "err" "Parse-Error" "catch" "file")}
        {Lisp-Entry "get-unmodified-file-entry" #f 189 11 189 36 ("get-time" "time->seconds" "=" "and" "when" "get-file-entry" "old" "let" "time" "file" "name")}
        {Lisp-Entry "scan-file?" #f 195 29 195 39 ("file")}
        {Lisp-Entry "scan-file" #f 199 29 199 38 ("time" "file")}
        {Lisp-Entry "update-entry" #f 203 29 203 41 ("entry")}
        {Lisp-Entry "add-entry" #f 207 29 207 38 ("entry" "name")}
        {Lisp-Entry "sweep" #f 217 29 217 34 ()}
        {Lisp-Entry "marked?" #f 222 29 222 36 ("get-file-entry" "get-marked?" "definition")}
        {Lisp-Entry "sweep-table" #f 227 29 227 40 ("table-set!" "not" "cddr" "set-cdr!" "set-marked?" "set!" "begin" "if" "car" "definition" "while" "cdr" "list" "previous" "let" "not-null?" "when" "definitions" "class-name" "function" "iterate-table" "reset?" "marked?" "table")}
        {Lisp-Entry "save" #f 252 26 252 30 ("set-modified?" "save-content" "present" "name" "user-message" "modified?" "when")}
        {Lisp-Entry "save-content" #f 261 29 261 41 ("print-catalog" "definition" "let" "definitions" "name" "bind" "set!" "format" "not" "if" "info" "for-each" "printer" "function" "platform-eol-encoding" "eol-encoding:" "file" "parse" "path:" "list" "call-with-output-file" "first?" "car" "key:" "<" "sort" "sorted" "gather-definitions" "all" "let*")}
        {Lisp-Entry "gather-definitions" #f 283 11 283 29 ("cons" "set!" "value" "property" "function" "iterate-content" "list" "let")}}}})
"Form-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Form-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Form-Doc" #f 37 9 37 30 ("jazz")
      {Lisp-Entry "Form-Doc" #f 45 7 45 15 ("Element-Doc")
        {Lisp-Entry "parameters" #f 48 12 48 22 ("generate")}}}})
"Formatted-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "workspace" "Formatted-Workspace.jazz"} 1229802703
    {Lisp-Entry "jedi.workspace.Formatted-Workspace" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Formatted-Workspace" #f 46 7 46 26 ("Text-Palette" "59" "Favorites-Manager" "Workbench-Manager" "Hierarchy-Browser" "Chapters-Browser" "31" "46" "Output-Log" "Search-Results" "Properties-Manager" "Console-Manager" "model-name:" "selection" "second" "-27" "vert" "5" "Rect" "insets:" "36" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Plain-Formatted-Text-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 75 11 75 23 ("formatted" "'formatted")}}}})
"HTML-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "html" "text" "HTML-Text-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.language.html.text.HTML-Text-Actions" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "HTML-Text-Actions" #f 47 7 47 24 ("on-preformatted" "preformatted" "on-code" "code" "on-variable" "variable" "on-definition-data" "definition-data" "on-definition-term" "definition-term" "on-definition-list" "definition-list" "on-list-item" "list-item" "on-unordered-list" "unordered-list" "on-ordered-list" "ordered-list" "on-table-data" "table-data" "on-table-row" "table-row" "on-table-header" "table-header" "on-table" "table" "on-image" "image" "on-anchor" "anchor" "on-center" "center" "on-font" "font" "on-italic" "italic" "on-bold" "bold" "on-line-break" "line-break" "on-paragraph" "paragraph" "on-division" "division" "on-comment" "comment" "header3" "header2" ":control" "Shortcut" "shortcut:" "on-header" "header1" "on-base-template" ":focus" "Event-Handler" "action-handler:" "base-template" "name:" "Actions")}}})
"HTML-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "html" "text" "HTML-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.html.text.HTML-Text-Preferences" #f 37 9 37 54 ("jazz")
      {Lisp-Entry "HTML-Text-Preferences" #f 50 7 50 28 ("Dark-Purple" "specifier-color:" "option-color:" "Purple" "attribute-color:" "Dark-Blue" "name:" "Color" "tag-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "tag-color" #f 53 12 53 21 ("generate")}
        {Lisp-Entry "attribute-color" #f 54 12 54 27 ("generate")}
        {Lisp-Entry "option-color" #f 55 12 55 24 ("generate")}
        {Lisp-Entry "specifier-color" #f 56 12 56 27 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 73 11 73 37 ("specifier-color" "option-color" "attribute-color" "tag-color")}
        {Lisp-Entry "get-row-instance" #f 77 11 77 27 ("nextmethod" "else" "Color-Row" "new" "specifier-color" "option-color" "attribute-color" "tag-color" "field-name" "case" "property")}}}})
"HTML-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "html" "text" "HTML-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.html.text.HTML-Text-View" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "HTML-Text-View" #f 48 7 48 21 ("Code-Text-View")
        {Lisp-Entry "install" #f 51 11 51 18 ("get-specifier-color" "Specifier" "'Specifier" "get-option-color" "Option" "'Option" "get-attribute-color" "Attribute" "'Attribute" "get-tag-color" "color:" "Default" "'Default" "base:" "Tag" "'Tag" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 60 16 60 29 ("html-text" "'html-text" "rest")}
        {Lisp-Entry "host-icon" #f 69 16 69 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-workspaces" #f 73 11 73 26 ("html")}
        {Lisp-Entry "context-menu" #f 82 11 82 23 ("HTML-Text-Menu" "else" "Action-Menu" "new" "track-popup-menu" "cond" "always" "'always" "never" "'never" "if" "move-caret:" "context-menu-click" "not" "and" "action?" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "focus-actions" #f 95 11 95 24 ("nextmethod" "html-text" "'html-text" "find-actions" "cons")}
        {Lisp-Entry "auto-complete" #f 105 11 105 24 ("insert-char/backspace" "key")}
        {Lisp-Entry "on-base-template" #f 114 11 114 27 ("get-output-string" "insert-string" "format" "open-output-string" "printer" "with-closed" "evt")}
        {Lisp-Entry "on-header" #f 135 11 135 20 ("format" "insert-tag" "level:" "get-property" "level" "let" "evt")}
        {Lisp-Entry "on-comment" #f 140 11 140 21 ("insert-pair" "evt")}
        {Lisp-Entry "on-division" #f 144 11 144 22 ("insert-tag" "evt")}
        {Lisp-Entry "on-paragraph" #f 148 11 148 23 ("insert-tag" "evt")}
        {Lisp-Entry "on-line-break" #f 152 11 152 24 ("insert-tag" "evt")}
        {Lisp-Entry "on-insert-bold" #f 156 11 156 25 ("insert-tag" "evt")}
        {Lisp-Entry "on-insert-italic" #f 160 11 160 27 ("insert-tag" "evt")}
        {Lisp-Entry "on-font" #f 164 11 164 18 ("insert-tag" "evt")}
        {Lisp-Entry "on-center" #f 168 11 168 20 ("insert-tag" "evt")}
        {Lisp-Entry "on-anchor" #f 172 11 172 20 ("insert-tag" "evt")}
        {Lisp-Entry "on-image" #f 176 11 176 19 ("insert-tag" "evt")}
        {Lisp-Entry "on-table" #f 180 11 180 19 ("vertical?:" "insert-tag" "evt")}
        {Lisp-Entry "on-table-header" #f 184 11 184 26 ("vertical?:" "insert-tag" "evt")}
        {Lisp-Entry "on-table-row" #f 188 11 188 23 ("vertical?:" "insert-tag" "evt")}
        {Lisp-Entry "on-table-data" #f 192 11 192 24 ("insert-tag" "evt")}
        {Lisp-Entry "on-ordered-list" #f 196 11 196 26 ("vertical?:" "insert-tag" "evt")}
        {Lisp-Entry "on-unordered-list" #f 200 11 200 28 ("vertical?:" "insert-tag" "evt")}
        {Lisp-Entry "on-list-item" #f 204 11 204 23 ("insert-string" "evt")}
        {Lisp-Entry "on-definition-list" #f 208 11 208 29 ("insert-string" "evt")}
        {Lisp-Entry "on-definition-term" #f 212 11 212 29 ("insert-string" "evt")}
        {Lisp-Entry "on-definition-data" #f 216 11 216 29 ("insert-string" "evt")}
        {Lisp-Entry "on-variable" #f 220 11 220 22 ("insert-tag" "evt")}
        {Lisp-Entry "on-code" #f 224 11 224 18 ("insert-tag" "evt")}
        {Lisp-Entry "on-preformatted" #f 228 11 228 26 ("insert-tag" "evt")}
        {Lisp-Entry "insert-tag" #f 237 11 237 21 ("end-tag" "start-tag" "insert-pair" "apply" "rest" "tag")}
        {Lisp-Entry "insert-pair" #f 241 11 241 22 ("Range$Cell$" "set-selection" "get-end" "e" "get-start" "s" "0" "1" "get-row" "Cell" "new" "length" "+" "set-caret" "insert-string" "format" "not" "str" "get-caret" "pos" "let" "empty-selection?" "if" "vertical?" "vertical?:" "end" "start")}
        {Lisp-Entry "start-tag" #f 260 11 260 20 ("format" "tag")}
        {Lisp-Entry "end-tag" #f 264 11 264 18 ("format" "tag")}
        {Lisp-Entry "Tags" #f 273 12 273 16 ()}
        {Lisp-Entry "get-tags" #f 321 29 321 37 ("Tags")}
        {Lisp-Entry "Attributes" #f 330 12 330 22 ()}
        {Lisp-Entry "get-attributes" #f 348 29 348 43 ("Attributes")}
        {Lisp-Entry "Options" #f 357 12 357 19 ()}
        {Lisp-Entry "get-options" #f 365 29 365 40 ("Options")}
        {Lisp-Entry "Syntax-Targets" #f 374 14 374 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 377 14 377 29 ()}
        {Lisp-Entry "syntax-targets" #f 381 11 381 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 387 11 387 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" #f 393 11 393 33 ("get-options" "option" "'option" "concatenate" "get-attributes" "attribute" "'attribute" "get-tags" "tag" "'tag" "list" "str" "function" "map" "append")}
        {Lisp-Entry "compute-syntax-automata" #f 399 11 399 34 ("c-constituent?" "self" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "preferences" #f 408 11 408 22 ("html-text" "documents" "get-preferences")}
        {Lisp-Entry "colorize-type" #f 412 11 412 24 ("Option" "'Option" "option" "Attribute" "'Attribute" "attribute" "Tag" "'Tag" "colorize-keyword" "tag" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}
      {Lisp-Entry "HTML-Text-Menu" #f 424 7 424 21 ("html-text" "Action" "action:" "title:" "render" "name:" "Context-Menu")}
      {Lisp-Entry "Action-Menu" #f 437 7 437 18 ("preformatted" "code" "variable" "definition-data" "definition-term" "definition-list" "list-item" "unordered-list" "ordered-list" "table-data" "table-row" "table-header" "table" "image" "anchor" "center" "font" "italic" "bold" "line-break" "paragraph" "division" "comment" "header-3" "header3" "header-2" "header2" "header-1" "header1" "html-text" "Action" "action:" "title:" "base-template" "name:" "Context-Menu")}}})
"HTML-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "html" "workspace" "HTML-Workspace.jazz"} 1236813156
    {Lisp-Entry "jazz.language.html.workspace.HTML-Workspace" #f 37 9 37 52 ("jazz")
      {Lisp-Entry "HTML-Workspace" #f 47 7 47 21 ("Console-Manager" "vert" "-33" "second" "HTML-Previewer" "model-name:" "5" "Rect" "insets:" "36" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "HTML-Text-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 62 11 62 23 ("html" "'html")}}}})
"Help-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "workspace" "Help-Workspace.jazz"} 1229802703
    {Lisp-Entry "jedi.workspace.Help-Workspace" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Help-Workspace" #f 46 7 46 21 ("second" "Help-Contents" "model-name:" "5" "Rect" "insets:" "18" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 59 11 59 23 ("help" "'help")}}}})
"Hierarchical-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Hierarchical-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Hierarchical-Entry" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Hierarchical-Entry" #f 46 7 46 25 ("Indexed-Entry")
        {Lisp-Entry "modifiers" #f 49 8 49 17 ()}
        {Lisp-Entry "qualified" #f 50 8 50 17 ()}
        {Lisp-Entry "construct-literal" #f 54 16 54 33 ("self" "new" "definitions" "column" "line" "name" "qualified" "modifiers" "context")}
        {Lisp-Entry "initialize" #f 58 11 58 21 ("qualified" "modifiers" "set!" "nextmethod" "apply" "rest" "q" "m")}
        {Lisp-Entry "print-catalog" #f 64 11 64 24 ("print-definitions" "column" "line" "name" "qualified" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-modifiers" #f 78 11 78 24 ("modifiers")}
        {Lisp-Entry "get-qualified" #f 82 18 82 31 ("qualified")}
        {Lisp-Entry "set-qualified" #f 86 18 86 31 ("qualified" "set!" "qualified-path")}
        {Lisp-Entry "has-modifier?" #f 90 18 90 31 ("modifiers" "memq?" "modifier")}
        {Lisp-Entry "get-visibility" #f 94 18 94 32 ("first" "package" "'package" "null?" "if" "modifiers" "private" "protected" "public" "intersection" "common" "let")}}}})
"Home-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "workspace" "Home-Workspace.jazz"} 1229802703
    {Lisp-Entry "jedi.workspace.Home-Workspace" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Home-Workspace" #f 46 7 46 21 ("Repositories-Manager" "Workbench-Manager" "Web-Servers-Manager" "Output-Log" "Profile-Results" "Search-Results" "Properties-Manager" "Console-Manager" "model-name:" "selection" "-27" "vert" "second" "5" "Rect" "insets:" "20" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 70 11 70 23 ("home" "'home")}}}})
"Horizontal-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "test" "Horizontal-View.jazz"} 1236975967
    {Lisp-Entry "jedi.test.Horizontal-View" #f 37 9 37 34 ("jazz")
      {Lisp-Entry "Horizontal-View" #f 46 7 46 22 ("View")}
      {Lisp-Entry "Horizontal-View" #f 52 7 52 22 ("View")
        {Lisp-Entry "install" #f 55 11 55 18 ("3" "0" "naturals" "->string" "title:" "Label-View" "self" "parent:" "Vertical-View" "new" "Horizontal-View" "parent" "get-parent" "is-not?" "2" "=" "and" "if" "n" "function" "for-each" "nextmethod" "rest")}
        {Lisp-Entry "layout" #f 69 11 69 17 ("increase!" "set-size" "Point" "set-position" "view" "function" "for-each-view" "0" "h" "Dimension" "new" "child-size" "get-height" "height" "get-width" "quotient" "width" "get-size" "size" "length" "let*" "children" "when")}
        {Lisp-Entry "draw" #f 89 11 89 15 ("Dark-Red" "name:" "Color" "get-bounds" "fill-rect" "lv" "lh" "context" "surface")}}}})
"IDE"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE.jazz"} 1236975967
    {Lisp-Entry "jazz.ide.IDE" #f 37 9 37 21 ("jazz")
      {Lisp-Entry "IDE" #f 73 7 73 10 ("else" "use-profile-logging?" "method" "carbon" "cond-expand" "Application")
        {Lisp-Entry "local-debugger" #f 76 8 76 22 ()}
        {Lisp-Entry "cataloguer" #f 77 8 77 18 ("Cataloguer" "new")}
        {Lisp-Entry "catalog-context" #f 78 8 78 23 ()}
        {Lisp-Entry "catalog-file" #f 79 8 79 20 ()}
        {Lisp-Entry "search" #f 80 8 80 14 ()}
        {Lisp-Entry "recorder" #f 81 8 81 16 ("Macro-Recorder" "new")}
        {Lisp-Entry "start-process" #f 84 11 84 24 ("start-jazz-debugger" "process-title" "set-caption-base" "toplevel" "get-caption-base" "not" "when" "nextmethod")}
        {Lisp-Entry "prepare-workbench" #f 91 11 91 28 ("setup-workbench" "nextmethod")}
        {Lisp-Entry "process-title" #f 96 11 96 24 ("get-preferences" "get-toplevel-title" "either")}
        {Lisp-Entry "workspace-installed" #f 101 11 101 30 ("update-catalog-context" "nextmethod")}
        {Lisp-Entry "finish-process" #f 106 11 106 25 ("get-workbench" "load-catalogs" "nextmethod")}
        {Lisp-Entry "conclude-environment" #f 111 11 111 31 ("get-local-register" "attach-to-controller" "get-controller-debugger" "not" "when" "nextmethod")}
        {Lisp-Entry "close-environment" #f 119 11 119 28 ("nextmethod" "detach-debugger-processes")}
        {Lisp-Entry "get-backward-history" #f 129 18 129 38 ("history-manager" "get-backward-history")}
        {Lisp-Entry "get-forward-history" #f 133 18 133 37 ("history-manager" "get-forward-history")}
        {Lisp-Entry "get-recorder" #f 142 11 142 23 ("recorder")}
        {Lisp-Entry "use-profile?" #f 151 11 151 23 ()}
        {Lisp-Entry "default-frame-class" #f 170 11 170 30 ("Plain-Text-View")}
        {Lisp-Entry "known-extension-frame-class" #f 174 11 174 38 ("nextmethod" "else" "Image-View" "'Image-View" "jazz.ui" "'jazz.ui" "Python-Text-View" "'Python-Text-View" "jazz.language.python" "'jazz.language.python" "Lua-Text-View" "'Lua-Text-View" "jazz.language.lua" "'jazz.language.lua" "JavaScript-Text-View" "'JavaScript-Text-View" "jazz.language.javascript" "'jazz.language.javascript" "Properties-Text-View" "'Properties-Text-View" "jazz.language.properties" "'jazz.language.properties" "CSS-Text-View" "'CSS-Text-View" "jazz.language.css" "'jazz.language.css" "SQL-Text-View" "'SQL-Text-View" "jazz.language.sql" "'jazz.language.sql" "XML-Text-View" "HTML-Text-View" "'HTML-Text-View" "jazz.language.html" "'jazz.language.html" "CSharp-Text-View" "'CSharp-Text-View" "jazz.language.csharp" "'jazz.language.csharp" "C-Text-View" "'C-Text-View" "jazz.language.c" "'jazz.language.c" "Java-Text-View" "'Java-Text-View" "jazz.language.java" "'jazz.language.java" "Prop-Text-View" "'Prop-Text-View" "jazz.language.prop" "'jazz.language.prop" "module-autoload" "Plain-Formatted-Text-View" "Plain-Text-View" "ci=?" "test:" "member?" "cond" "ext")}
        {Lisp-Entry "unknown-extension-frame-class" #f 196 11 196 40 ("Plain-Text-View")}
        {Lisp-Entry "get-cataloguer" #f 205 11 205 25 ("cataloguer")}
        {Lisp-Entry "get-catalog-context" #f 209 11 209 30 ("catalog-context")}
        {Lisp-Entry "update-catalog-context" #f 213 18 213 40 ("get-catalog-context" "set-catalog-context")}
        {Lisp-Entry "set-catalog-context" #f 217 18 217 37 ("catalog-context" "set!" "set-title" "set-icon" "'mode" "find-component" "mode" "IDE-Status" "toplevel" "find-palette" "status" "Bitmap-Resource" "icon" "c" "jazz" "case" "title" "let" "when" "context")}
        {Lisp-Entry "get-search-manager" #f 235 11 235 29 ("search")}
        {Lisp-Entry "get-history-manager" #f 239 18 239 37 ("history-manager")}
        {Lisp-Entry "user-feedback" #f 243 11 243 24 ("user-message" "message")}
        {Lisp-Entry "stage-class" #f 252 11 252 22 ("Wallpaper-Stage")}
        {Lisp-Entry "class-actions" #f 261 11 261 24 ("nextmethod" "ide" "'ide" "find-actions" "cons")}
        {Lisp-Entry "terminate-process" #f 271 11 271 28 ("error?:" "debugger" "'debugger" "get-local-register" "unregister-object" "nextmethod")}
        {Lisp-Entry "save-environment" #f 281 11 281 27 ("save-catalogs" "cataloguer" "when" "nextmethod")}
        {Lisp-Entry "load-session" #f 293 11 293 23 ("set-current-directory" "when" "session" "application" "get-preferences" "get-current-directory" "dir" "let")}
        {Lisp-Entry "reload-opened-windows" #f 300 11 300 32 ("session" "application" "get-preferences" "get-opened-windows" "reload-component" "exists?" "not" "or" "when" "others" "file" "bind-keywords" "properties" "class" "bind" "info" "function" "for-each")}
        {Lisp-Entry "reload-component" #f 310 11 310 27 ("nextmethod" "else" "Compare-Files-Frame" "compare-files" "Compare-Directories-Frame" "compare-directories" "Catalogs-Manager" "catalogs-manager" "Browser-Frame" "browser-frame" "Image-Frame" "image-frame" "Java-Text-Palette" "java-palette" "HTML-Text-Frame" "html-text" "Prop-Text-Frame" "prop-text" "Java-Text-Frame" "java-text" "C-Text-Frame" "c-text" "Plain-Text-Frame" "new" "apply" "plain-text" "case" "properties" "class")}
        {Lisp-Entry "Workbench-File" #f 334 14 334 28 ("Profile" "File")}
        {Lisp-Entry "load-workbench" #f 338 11 338 25 ("default-workbench" "read-from-file" "instantiate" "exists?" "if" "Workbench-File" "file" "let")}
        {Lisp-Entry "default-workbench" #f 345 29 345 46 ("Workbench" "new")}
        {Lisp-Entry "setup-workbench" #f 349 18 349 33 ("default-workbench" "err" "continue-handler:" "title:" "load-workbench" "set-workbench" "with-execution-context" "function" "with-safe-execution")}
        {Lisp-Entry "get-output-log" #f 366 11 366 25 ("Output-Log" "singleton-docked" "get-guest")}
        {Lisp-Entry "register-base-objects" #f 375 11 375 32 ("local-debugger" "Jazz-Debugger-Local-Proxy" "new" "debugger" "'debugger" "get-local-register" "register-object" "nextmethod")}
        {Lisp-Entry "get-local-debugger" #f 385 11 385 29 ("local-debugger")}
        {Lisp-Entry "start-jazz-debugger" #f 389 11 389 30 ("register-debugger" "start-debugger" "Jazz-Debugger" "new" "set!" "local-debugger" "not" "when")}
        {Lisp-Entry "detach-debugger-processes" #f 396 11 396 36 ("get-debuggers" "detach-processes" "debugger" "function" "for-each")}
        {Lisp-Entry "process-alias" #f 407 11 407 24 ("nextmethod" "else" "recorder" ":recorder" "current-view-debugger" ":view-debugger" "current-debugger" ":debugger" "case" "name")}
        {Lisp-Entry "on-open-favorite" #f 420 11 420 27 ("get-file" "edit-document" "error" "not" "if" "find-favorite" "favorite" "char:" "get-property" "char" "let*" "evt")}
        {Lisp-Entry "find-favorite" #f 428 11 428 24 ("get-shortcut" "eqv?" "favorite" "function" "find-if" "get-children" "when" "error?:" "favorites" "'favorites" "get-preferences" "pref" "let" "char")}
        {Lisp-Entry "edit-definitions" #f 442 11 442 27 ("get-search-manager" "get-guest" "edit-definitions" "else" "car" "edit" "1" "length" "case" "add-history" "bell" "null?" "if" "get-cataloguer" "get-coalesced-definitions" "filter-entries" "definitions" "let" "history-item" "history-item:" "workspace" "workspace:" "catalog-context" "context" "context:" "class" "class:" "object")}
        {Lisp-Entry "edit-references" #f 452 11 452 26 ("get-search-manager" "get-guest" "edit-references" "else" "car" "edit-reference" "1" "length" "case" "add-history" "bell" "null?" "if" "get-cataloguer" "get-references" "definitions" "let" "history-item" "history-item:" "catalog-context" "context" "context:" "object")}
        {Lisp-Entry "filter-entries" #f 463 11 463 25 ("class" "entries")}
        {Lisp-Entry "get-documentation" #f 472 18 472 35 ("get-definition" "get-documentation-cataloguer" "cataloguer" "let" "when" "symbol")}
        {Lisp-Entry "edit-documentation" #f 479 18 479 36 ("focus-host" "set-visible?" "bring-to-front" "set-selection" "location-range" "range" "0" "list" "get-location" "append" "location" "get-guest" "text" "visible?:" "edit-document" "frame" "get-toplevel" "get-origin" "moniker" "get-form" "form" "let*" "bell" "not" "if" "get-documentation" "doc" "let" "symbol")}
        {Lisp-Entry "edit-documentation" #f 496 18 496 36 ("get-host" "bring-to-front" "set-entry" "entry:" "get-documentation-catalog" "client:" "new-frame" "not" "if" "list" "info" "stage" "find-guest" "editor" "Doc-Editor" "class" "let*" "text-location" "text" "object" "location")}
        {Lisp-Entry "on-open-text" #f 511 18 511 30 ("get-name" "key:" "string>?" "sort" "char-encoding:" "Jazz-Plain-Text-View" "class:" "edit-document" "file" "function" "for-each" "text?:" "multiple-selection?:" "choose-file" "char-encoding" "files" "receive" "evt")}
        {Lisp-Entry "on-open-jazz-text" #f 518 18 518 35 ("get-name" "key:" "string>?" "sort" "Jazz-Text-View" "class:" "edit-document" "file" "function" "for-each" "multiple-selection?:" "title:" "choose-file" "files" "let" "evt")}
        {Lisp-Entry "on-show-terminal" #f 525 18 525 34 ("repl" "bring-terminal-to-front" "set-terminal-title" "evt")}
        {Lisp-Entry "on-clear-terminal" #f 531 18 531 35 ("clear-terminal" "evt")}
        {Lisp-Entry "on-test" #f 535 26 535 33 ("get-profile" "test" "evt")}
        {Lisp-Entry "on-test-shift" #f 539 26 539 39 ("get-profile" "test-shift" "evt")}
        {Lisp-Entry "on-test-no" #f 543 11 543 21 ("test9" "9" "test8" "8" "test7" "7" "test6" "6" "test5" "5" "test4" "4" "test3" "3" "test2" "2" "test1" "1" "test0" "0" "no:" "get-property" "case" "get-profile" "profile" "let" "evt")}
        {Lisp-Entry "on-debug-views" #f 558 18 558 32 ("current-view-debugger" "debug-views" "evt")}
        {Lisp-Entry "on-explore-views" #f 562 18 562 34 ("current-view-debugger" "explore-views" "evt")}
        {Lisp-Entry "on-processes" #f 566 18 566 30 ("focus?:" "debugger" "'debugger" "workspace:" "Processes-View" "select-palette" "evt")}
        {Lisp-Entry "on-threads" #f 570 18 570 28 ("focus?:" "debugger" "'debugger" "workspace:" "Threads-View" "select-palette" "evt")}
        {Lisp-Entry "on-frames" #f 574 18 574 27 ("focus?:" "debugger" "'debugger" "workspace:" "Frames-View" "select-palette" "evt")}
        {Lisp-Entry "on-exception" #f 578 18 578 30 ("focus?:" "debugger" "'debugger" "workspace:" "Exception-View" "select-palette" "evt")}
        {Lisp-Entry "on-variables" #f 582 18 582 30 ("focus?:" "debugger" "'debugger" "workspace:" "Variables-View" "select-palette" "evt")}
        {Lisp-Entry "on-resources-monitor" #f 586 11 586 31 ("Resources-Monitor" "show-palette" "evt")}
        {Lisp-Entry "on-logs-viewer" #f 590 18 590 32 ("Logs-Viewer" "show-palette" "evt")}
        {Lisp-Entry "on-class-browser" #f 594 11 594 27 ("set-text" "browser" "palette" "function" "initialize:" "Class-Browser" "show-palette" "get-selected-string" "Text-View" "is?" "if" "text" "get-focus" "focus" "let*" "evt")}
        {Lisp-Entry "on-edit-clipboard" #f 601 18 601 35 ("bell" "edit-definitions" "string?" "if" "get-clipboard-text" "clipboard" "let" "evt")}
        {Lisp-Entry "get-workbench-manager" #f 608 18 608 39 ("Workbench-Manager" "singleton-docked" "get-guest")}
        {Lisp-Entry "on-select-project" #f 612 18 612 35 ("get-workbench-manager" "select-current" "evt")}
        {Lisp-Entry "on-edit-project" #f 616 18 616 33 ("get-workbench-manager" "edit-current" "evt")}
        {Lisp-Entry "on-compile-file" #f 620 18 620 33 ("get-workbench-manager" "compile-current" "evt")}
        {Lisp-Entry "on-preprocess-file" #f 624 18 624 36 ("get-workbench-manager" "preprocess-current" "evt")}
        {Lisp-Entry "on-build-project" #f 628 18 628 34 ("get-workbench-manager" "build-current" "evt")}
        {Lisp-Entry "on-clean-project" #f 632 18 632 34 ("get-workbench-manager" "clean-current" "evt")}
        {Lisp-Entry "on-view-project-log" #f 636 18 636 37 ("get-workbench-manager" "view-log" "evt")}
        {Lisp-Entry "on-test-project" #f 640 18 640 33 ("get-workbench-manager" "test-current" "evt")}
        {Lisp-Entry "on-run-project" #f 644 18 644 32 ("get-workbench-manager" "run-current" "evt")}
        {Lisp-Entry "on-debug-project" #f 648 18 648 34 ("get-workbench-manager" "debug-current" "evt")}
        {Lisp-Entry "on-distribute-project" #f 652 18 652 39 ("get-workbench-manager" "distribute-current" "evt")}
        {Lisp-Entry "on-properties" #f 661 18 661 31 ("focus?:" "Properties-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-search-results" #f 665 18 665 35 ("focus?:" "Search-Results" "select-palette" "evt")}
        {Lisp-Entry "on-profile-results" #f 669 18 669 36 ("focus?:" "Profile-Results" "select-palette" "evt")}
        {Lisp-Entry "on-web-servers" #f 673 18 673 32 ("focus?:" "Web-Servers-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-output-log" #f 677 18 677 31 ("focus?:" "Output-Log" "select-palette" "evt")}
        {Lisp-Entry "on-user-log" #f 681 18 681 29 ("refresh" "focus?:" "User-Log" "select-palette" "user-log" "let" "evt")}
        {Lisp-Entry "on-activities" #f 686 18 686 31 ("focus?:" "Activities-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-workbench" #f 690 18 690 30 ("focus?:" "Workbench-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-repositories" #f 694 18 694 33 ("focus?:" "Repositories-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-favorites" #f 698 18 698 30 ("focus?:" "Favorites-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-depots" #f 703 18 703 27 ("focus?:" "Depots-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-contacts" #f 708 18 708 29 ("focus?:" "Contacts-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-chapters" #f 713 18 713 29 ("focus?:" "text" "'text" "workspace:" "Chapters-Browser" "select-palette" "evt")}
        {Lisp-Entry "on-hierarchy" #f 717 18 717 30 ("focus?:" "text" "'text" "workspace:" "Hierarchy-Browser" "select-palette" "evt")}
        {Lisp-Entry "on-bindings-manager" #f 721 18 721 37 ("new-frame" "focus-host" "set-visible?" "bring-to-front" "begin" "if" "Bindings-Manager" "stage" "find-host" "frame" "let" "evt")}
        {Lisp-Entry "on-view-bindings" #f 731 18 731 34 ("Shortcut-Viewer" "get-modal" "evt")}
        {Lisp-Entry "on-preferences" #f 735 18 735 32 ("Preferences-Manager" "new-frame" "evt")}
        {Lisp-Entry "on-toggle-catalog-context" #f 739 18 739 43 ("'jazz" "c" "'c" "set-catalog-context" "jazz" "catalog-context" "case" "evt")}
        {Lisp-Entry "on-save-workspace" #f 746 18 746 35 ("call-exit-listeners" "call-save-environment-listeners" "user-message" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-exit-without-save" #f 755 18 755 38 ("exit" "yes" "'yes" "question" "'question" "type:" "message-box" "eq?" "when" "evt")}
        {Lisp-Entry "on-compare-directories" #f 760 18 760 40 ("focus-host" "set-visible?" "bring-to-front" "compare-trees" "get-guest" "configure" "function" ":wait" "with-cursor" "host-visible?:" "frame" "Compare-Directories" "new-frame" "not" "compare-directories" "tools" "get-preferences" "get-active-configuration" "default" "let" "get-shift?" "if" "evt")}
        {Lisp-Entry "on-compare-files" #f 776 18 776 34 ("Compare-Files" "new-frame" "evt")}
        {Lisp-Entry "on-compare-databases" #f 780 18 780 38 ("Compare-Databases" "new-frame" "evt")}
        {Lisp-Entry "on-update-catalogs" #f 790 11 790 29 ("listify" "cataloguer" "get-catalog" "update" "name" "for-each" "function" ":wait" "with-cursor" "message-box" "not" "if" "catalogs" "'catalogs" "get-preferences" "get-main" "main" "let" "evt")}
        {Lisp-Entry "on-catalogs-manager" #f 801 11 801 30 ("new-frame" "focus-host" "set-visible?" "bring-to-front" "begin" "if" "Catalogs-Manager" "stage" "find-host" "frame" "let" "evt")}}}})
"IDE-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.IDE-Actions" #f 37 9 37 29 ("jazz")
      {Lisp-Entry "IDE-Actions" #f 47 7 47 18 ("on-user-code" "user-code" "F12" "on-edit-clipboard" "edit-clipboard" "open-favorite-0" "open-favorite-9" "open-favorite-8" "open-favorite-7" "open-favorite-6" "open-favorite-5" "open-favorite-4" "open-favorite-3" "open-favorite-2" "open-favorite-1" "open-favorite-Z" "open-favorite-Y" "open-favorite-X" "open-favorite-W" "open-favorite-V" "open-favorite-U" "open-favorite-T" "open-favorite-S" "open-favorite-R" "open-favorite-Q" "open-favorite-P" "open-favorite-O" "open-favorite-N" "open-favorite-M" "open-favorite-L" "open-favorite-K" "open-favorite-J" "open-favorite-I" "open-favorite-H" "open-favorite-G" "open-favorite-F" "open-favorite-E" "open-favorite-D" "open-favorite-C" "open-favorite-B" ":alt" ":shift" ":control" "char:" "on-open-favorite" ":application" "open-favorite-A" "F2" "Shortcut" "shortcut:" "on-paste" ":focus" "Event-Handler" "action-handler:" "paste" "name:" "Actions")}}})
"IDE-Bindings"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-Bindings.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.IDE-Bindings" #f 37 9 37 30 ("jazz")
      {Lisp-Entry "IDE-Bindings" #f 49 7 49 19 ("ide" "name:" "Application-Bindings")}}})
"IDE-File-Menu"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-File-Menu.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.IDE-File-Menu" #f 37 9 37 31 ("jazz")
      {Lisp-Entry "IDE-File-Menu" #f 47 7 47 20 ("exit-without-save" "on-exit-without-save" "save-workspace" "on-quit-application" "on-save-workspace" "open-jazz-text" "on-open-jazz-text" "open-text" "jedi" "Action" "action:" "on-close" "before:" "title:" "on-open-text" "name:" "File-Menu")}}})
"IDE-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-Preferences.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.IDE-Preferences" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "IDE-Preferences" #f 48 7 48 22 ("title:" "Application-Preferences")}}})
"IDE-Profile"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-Profile.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.IDE-Profile" #f 37 9 37 29 ("jazz")
      {Lisp-Entry "IDE-Profile" #f 51 7 51 18 ("Profile")
        {Lisp-Entry "format-sql" #f 60 11 60 21 ("error" "else" "format" "string?" "cond" "value")}
        {Lisp-Entry "output-tables" #f 66 11 66 24 ("sql" "'sql" "select-workspace" "get-application" "appl" "when" "output-tables" "get-sql-console-text" "text" "let" "select?" "select?:" "name" "name:" "tables")}
        {Lisp-Entry "output-table" #f 75 11 75 23 ("list" "output-tables" "select?" "select?:" "name" "name:" "table")}
        {Lisp-Entry "log-tables" #f 80 11 80 21 ("log-table" "for-each" "tables")}
        {Lisp-Entry "log-table" #f 85 11 85 20 ("data:" "get-name" "name:" "log-entry" "table")}
        {Lisp-Entry "glue" #f 95 11 95 15 ("user-message" "set-clipboard-text" "join" "2" "format" "case" "glued" "-" "0" "subseq" "get-clipboard-text" "cons" "lst" "get-clipboard-stack" "stack" "get-application" "appl" "let*" "1" "kind" "n")}
        {Lisp-Entry "get-source" #f 112 11 112 21 ("find-zipped" "find-file" "find-document" "either" "class-name")}
        {Lisp-Entry "find-document" #f 119 11 119 24 ("get-stage" "get-children" "continuation-return" "ci=?" "=" "and" "get-extension" "ext" "get-base" "base" "get-controller" "get-moniker" "moniker" "Document" "get-guest" "guest" "Frame-Host" "is?" "when" "frame" "for-each" "return" "function" "continuation-capture" "->string" "target" "let" "get-manifest-source" "unless" "class-name")}
        {Lisp-Entry "find-file" #f 140 11 140 20 ("source-directories" "continuation-return" "exists?" "when" "new-file" "file" "dir" "for-each" "return" "function" "continuation-capture" "tie" "name" "let" "class-name")}
        {Lisp-Entry "source-directories" #f 153 29 153 47 ()}
        {Lisp-Entry "find-zipped" #f 158 11 158 22 ("source-zips" "Zipped" "continuation-return" "extract-name" "=" "size" "entry" "iterate-files" "Unzip-File" "new" "unzip" "with-closed" "exists?" "when" "zip" "for-each" "return" "function" "continuation-capture" "format" "target" "let" "class-name")}
        {Lisp-Entry "source-zips" #f 175 29 175 40 ()}}}})
"IDE-Status"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-Status.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.IDE-Status" #f 37 9 37 28 ("jazz")
      {Lisp-Entry "IDE-Status" #f 52 7 52 17 ("Status-Toolbar")
        {Lisp-Entry "on-context-menu" #f 60 29 60 44 ("Mode-Menu" "new" "track-popup-menu" "mode" "case" "get-position" "acquire" "pos" "get-name" "name" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-mouse-down" #f 68 29 68 42 ("Mode-Menu" "new" "track-popup-menu" "mode" "case" "get-position" "acquire" "pos" "get-name" "name" "get-sender" "sender" "let*" "evt")}}
      {Lisp-Entry "Activities-Menu" #f 81 7 81 22 ("on-clear-done" "Bitmap-Resource" "icon:" "clear-done" "on-close" "close" "on-open" ":form" "Event-Handler" "action-handler:" "open" "name:" "title:" "Context-Menu")
        {Lisp-Entry "on-open" #f 92 11 92 18 ("get-activity-manager" "show" "evt")}
        {Lisp-Entry "on-close" #f 96 11 96 19 ("get-activity-manager" "hide" "evt")}
        {Lisp-Entry "on-clear-done" #f 100 11 100 24 ("get-activity-manager" "clear-done" "evt")}}
      {Lisp-Entry "Locales-Menu" #f 109 7 109 19 ("Context-Menu")
        {Lisp-Entry "install" #f 112 11 112 18 ("insert-locales" "nextmethod" "rest")}
        {Lisp-Entry "insert-locales" #f 117 11 117 25 ("eq?" "insert-locale" "locale" "function" "for-each" "get-locales" "locales" "get-locale" "current" "let")}
        {Lisp-Entry "insert-locale" #f 125 11 125 24 ("set-checked?" "when" "locale:" "list" "properties:" "on-action" "'on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Check-Item" "new" "item" "present-locale" "title" "let*" "checked?" "locale")}
        {Lisp-Entry "on-action" #f 132 11 132 20 ("locale:" "get-property" "set-locale" "evt")}}
      {Lisp-Entry "Look-Menu" #f 141 7 141 16 ("Context-Menu")
        {Lisp-Entry "install" #f 144 11 144 18 ("insert-looks" "nextmethod" "rest")}
        {Lisp-Entry "insert-looks" #f 149 11 149 23 ("eq?" "insert-look" "look" "function" "for-each" "get-looks" "looks" "get-look" "current" "let")}
        {Lisp-Entry "insert-look" #f 157 11 157 22 ("set-checked?" "when" "look:" "list" "properties:" "on-action" "'on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Check-Item" "new" "item" "present" "title" "let*" "checked?" "look")}
        {Lisp-Entry "on-action" #f 164 11 164 20 ("get-toplevel" "redraw-window" "look:" "get-property" "set-look" "evt")}}
      {Lisp-Entry "Mode-Menu" #f 174 7 174 16 ("Context-Menu")
        {Lisp-Entry "install" #f 177 11 177 18 ("c" "'c" "Bitmap-Resource" "jazz" "'jazz" "insert-item" "nextmethod" "rest")}
        {Lisp-Entry "insert-item" #f 183 11 183 22 ("set-checked?" "eq?" "when" "mode:" "list" "properties:" "on-action" "'on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "icon:" "title:" "self" "parent:" "Check-Item" "new" "item" "get-application" "get-catalog-context" "current" "let" "icon" "title" "mode")}
        {Lisp-Entry "on-action" #f 190 11 190 20 ("mode:" "get-property" "get-application" "set-catalog-context" "evt")}}}})
"IDE-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-Text-View.jazz"} 1236975967
    {Lisp-Entry "jazz.ide.IDE-Text-View" #f 37 9 37 31 ("jazz")
      {Lisp-Entry "IDE-Text-View" #f 53 7 53 20 ("Label" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Code-Text-View")
        {Lisp-Entry "context" #f 56 12 56 19 ("set-context" "get-context")}
        {Lisp-Entry "new-syntax" #f 64 11 64 21 ("Jazz-Syntax" "new")}
        {Lisp-Entry "get-context" #f 73 11 73 22 ("syntax" "get-catalog-context" "list" "context" "not" "if")}
        {Lisp-Entry "set-context" #f 79 18 79 29 ("context" "set!" "value")}
        {Lisp-Entry "catalog-context" #f 88 11 88 26 ("syntax" "get-catalog-context" "context" "either")}
        {Lisp-Entry "jazz-preferences" #f 97 11 97 27 ("jazz-text" "documents" "get-preferences")}
        {Lisp-Entry "c-preferences" #f 101 11 101 24 ("java-text" "documents" "get-preferences")}
        {Lisp-Entry "sql-preferences" #f 106 11 106 26 ("sql-text" "documents" "get-preferences")}
        {Lisp-Entry "current-history-item" #f 115 11 115 31 ()}
        {Lisp-Entry "explorer-class" #f 124 11 124 25 ("nextmethod" "else" "SQL-Explorer" "sql" "C-Explorer" "c" "Jazz-Explorer" "jazz" "catalog-context" "case")}
        {Lisp-Entry "expr-at" #f 138 11 138 18 ("sql-expr-range" "sql-name-at" "sql" "c-expr-range" "c-name-at" "c" "jazz-expr-range" "jazz-name-at" "jazz" "catalog-context" "case" "pos")}
        {Lisp-Entry "expr-range" #f 146 11 146 21 ("sql-expr-range" "sql" "c-expr-range" "c" "jazz-expr-range" "jazz" "catalog-context" "case" "pos")}
        {Lisp-Entry "current-expr" #f 154 11 154 23 ("current-sql-expr" "sql" "current-c-expr" "c" "current-jazz-expr" "jazz" "catalog-context" "case")}
        {Lisp-Entry "current-jazz-expr" #f 167 11 167 28 ("get-string" "read-string-element" "when" "current-jazz-expr-range" "range" "let")}
        {Lisp-Entry "current-jazz-symbol" #f 173 21 173 40 ("symbol?" "when" "current-jazz-expr" "expr" "let")}
        {Lisp-Entry "current-jazz-expr-range" #f 179 11 179 34 ("get-end" "jazz-expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "jazz-expr-range" #f 185 11 185 26 ("get-range" "outer-expr" "when" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "jazz-name-at" #f 191 11 191 23 ("get-string" "read-string-element" "when" "range")}
        {Lisp-Entry "current-c-expr" #f 201 11 201 25 ("current-c-name")}
        {Lisp-Entry "current-c-name" #f 205 11 205 25 ("c-current-expr-range" "c-name-at")}
        {Lisp-Entry "c-current-expr-range" #f 209 11 209 31 ("get-end" "c-expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "c-expr-range" #f 215 11 215 23 ("get-range" "outer-expr" "end:" "start:" "self" "C-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "c-name-at" #f 221 11 221 20 ("read-string-element" "0" "element" "=" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-sql-expr" #f 235 11 235 27 ("current-sql-name")}
        {Lisp-Entry "current-sql-name" #f 240 11 240 27 ("sql-current-expr-range" "sql-name-at")}
        {Lisp-Entry "sql-current-expr-range" #f 245 11 245 33 ("get-end" "sql-expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "sql-expr-range" #f 252 11 252 25 ("get-range" "outer-expr" "end:" "start:" "self" "SQL-Explorer" "new" "expl" "let" "sql-expr-range" "'sql-expr-range" "unimplemented" "pos")}
        {Lisp-Entry "sql-name-at" #f 261 11 261 22 ("read-string-element" "0" "element" "=" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "favorite-completions" #f 274 11 274 31 ("nextmethod" "else" "sql-preferences" "sql" "c-preferences" "c" "jazz-preferences" "get-completions" "jazz" "catalog-context" "case")}
        {Lisp-Entry "colorize-syntax" #f 288 11 288 26 ("rest")}
        {Lisp-Entry "recolorize-text" #f 292 11 292 26 ("end-row" "start")}
        {Lisp-Entry "flash-character?" #f 301 11 301 27 ("nextmethod" "else" "memq?" "jazz" "catalog-context" "case" "char")}
        {Lisp-Entry "context-menu" #f 312 11 312 23 ("nextmethod" "else" "edit-references" "edit-definitions" "cond" "context-menu-click" "or" "references?" "not" "definition?" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "editable?" "enabled?" "and" "when" "pos")}
        {Lisp-Entry "get-context-menu" #f 324 11 324 27 ("new-text-context-menu")}}}})
"IDE-Toolbar"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-Toolbar.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.IDE-Toolbar" #f 37 9 37 29 ("jazz")
      {Lisp-Entry "IDE-Toolbar" #f 50 7 50 18 ("Toolbar")
        {Lisp-Entry "on-clipboard-menu" #f 58 11 58 28 ("clipboards:" "Clipboards-Menu" "track-popup-menu" "not-null?" "when" "cons" "if" "clipboards" "get-application" "get-clipboard-stack" "stack" "get-clipboard-text" "text" "get-size" "get-height" "0" "Point" "new" "get-position" "nu+" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-backward-menu" #f 68 11 68 27 ("backward" "'backward" "get-application" "get-history-manager" "track-history" "get-combo" "initiator" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-forward-menu" #f 74 11 74 26 ("forward" "'forward" "get-application" "get-history-manager" "track-history" "get-combo" "initiator" "get-sender" "sender" "let*" "evt")}}
      {Lisp-Entry "Clipboards-Menu" #f 85 7 85 22 ("Context-Menu")
        {Lisp-Entry "clipboards" #f 88 12 88 22 ("generate")}
        {Lisp-Entry "finish" #f 91 11 91 17 ("for-each" "self" "parent:" "Separator-Item" "new" "not-null?" "when" "insert-item" "clipboards" "others" "clipboard" "bind" "nextmethod" "rest")}
        {Lisp-Entry "insert-item" #f 100 11 100 22 ("string:" "list" "properties:" "on-action" "'on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "item")}
        {Lisp-Entry "on-action" #f 104 11 104 20 ("paste-clipboard-string" "string:" "get-property" "string" "bell" "Text-View" "is-not?" "if" "get-focus" "focus" "let" "evt")}}}})
"IDE-Toplevel"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "IDE-Toplevel.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.IDE-Toplevel" #f 37 9 37 30 ("jazz")
      {Lisp-Entry "IDE-Toplevel" #f 46 7 46 19 ("Toplevel")}}})
"Icon-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "resource" "Icon-File.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.resource.Icon-File" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Icon-File" #f 45 7 45 16 ("Resource-File")
        {Lisp-Entry "resource-class" #f 48 11 48 25 ("Icon-Resource")}
        {Lisp-Entry "resource-marker" #f 52 11 52 26 ()}}}})
"Image-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "workspace" "Image-Workspace.jazz"} 1229802703
    {Lisp-Entry "jedi.workspace.Image-Workspace" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Image-Workspace" #f 46 7 46 22 ("Output-Log" "Search-Results" "Properties-Manager" "Console-Manager" "second" "Favorites-Manager" "Image-Browser" "model-name:" "selection" "-31" "vert" "5" "Rect" "insets:" "20" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Image-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 69 11 69 23 ("image" "'image")}}}})
"Import-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Import-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Import-Entry" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Import-Entry" #f 45 7 45 19 ("Hierarchical-Entry")
        {Lisp-Entry "present-name" #f 48 11 48 23 ("qualified" "join")}
        {Lisp-Entry "get-image" #f 52 11 52 20 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" #f 61 11 61 25 ("references" "update-index" "key" "function" "for-each" "references-index" "definitions-index")}}}})
"Indexed-Catalog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "catalog" "Indexed-Catalog.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.catalog.Indexed-Catalog" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Indexed-Catalog" #f 46 7 46 22 ("Filing-Catalog")
        {Lisp-Entry "directories" #f 49 8 49 19 ()}
        {Lisp-Entry "extensions" #f 50 8 50 18 ()}
        {Lisp-Entry "char-encoding" #f 51 8 51 21 ()}
        {Lisp-Entry "heuristics" #f 52 8 52 18 ()}
        {Lisp-Entry "recursive?" #f 53 8 53 18 ()}
        {Lisp-Entry "references?" #f 54 8 54 19 ()}
        {Lisp-Entry "content-index" #f 55 8 55 21 ()}
        {Lisp-Entry "definitions-index" #f 56 8 56 25 ()}
        {Lisp-Entry "references-index" #f 57 8 57 24 ()}
        {Lisp-Entry "initialize" #f 60 11 60 21 ("references-index~self" "definitions-index~self" "equal?" "test:" "make-table" "content-index~self" "references?~self" "recursive?~self" "heuristics~self" "char-encoding~self" "extensions~self" "directories~self" "set!" "nextmethod" "report?" "report?:" "references?" "active?" "recursive?" "heuristics" "char-encoding" "extensions" "directories" "file" "name")}
        {Lisp-Entry "get-directories" #f 78 18 78 33 ("directories")}
        {Lisp-Entry "get-extensions" #f 82 26 82 40 ("extensions")}
        {Lisp-Entry "get-char-encoding" #f 86 26 86 43 ("char-encoding")}
        {Lisp-Entry "get-heuristics" #f 90 26 90 40 ("heuristics")}
        {Lisp-Entry "get-recursive?" #f 94 18 94 32 ("recursive?")}
        {Lisp-Entry "get-references?" #f 98 18 98 33 ("references?")}
        {Lisp-Entry "get-content-index" #f 102 18 102 35 ("content-index")}
        {Lisp-Entry "get-definitions-index" #f 106 18 106 39 ("definitions-index")}
        {Lisp-Entry "get-references-index" #f 110 18 110 38 ("references-index")}
        {Lisp-Entry "get-file-definitions" #f 114 18 114 38 ("content-index" "table-ref" "name")}
        {Lisp-Entry "get-file-entry" #f 118 11 118 25 ("get-base" "get-file-definitions" "get-file" "pathname=?" "definition" "function" "find-if" "file")}
        {Lisp-Entry "get-statistics" #f 124 18 124 32 ("format-plural" "format" "references-index" "r" "definitions-index" "table-length" "d" "content-index" "count-file-entries" "f" "let")}
        {Lisp-Entry "count-file-entries" #f 134 11 134 29 ("length" "increase!" "file-entries" "name" "function" "iterate-table" "0" "count" "let" "content-index")}
        {Lisp-Entry "table-info" #f 142 11 142 21 ("table-length" "format" "table")}
        {Lisp-Entry "get-entry-time" #f 147 11 147 25 ("get-time" "definition")}
        {Lisp-Entry "update-entry" #f 151 11 151 23 ("references-index" "definitions-index" "update-indexes" "entry")}
        {Lisp-Entry "add-entry" #f 155 11 155 20 ("content-index" "table-add" "entry" "name")}
        {Lisp-Entry "activate" #f 164 11 164 19 ("report?:" "load-content")}
        {Lisp-Entry "deactivate" #f 168 11 168 21 ()}
        {Lisp-Entry "load-content" #f 177 18 177 30 ("set!" "update-catalog-indexes" "content-index" "table-load" "function" "with-jazz-readtable" "user-message" "file" "exists?" "get-active?" "loaded?" "not" "and" "when" "report?" "report?:")}
        {Lisp-Entry "update-catalog-indexes" #f 190 11 190 33 ("references-index" "definitions-index" "update-indexes" "self" "set-catalog" "file-definition" "for-each" "definitions" "class-name" "function" "content-index" "iterate-table" "user-message" "when" "report?")}
        {Lisp-Entry "save" #f 206 11 206 15 ("set-modified?" "save-content" "name" "user-message" "modified?" "when")}
        {Lisp-Entry "save-content" #f 214 11 214 23 ("set!" "print-catalog" "definition" "first?" "let" "format" "not-null?" "when" "definitions" "name" "bind" "info" "for-each" "printer" "function" "platform-eol-encoding" "eol-encoding:" "parse" "path:" "list" "call-with-output-file" "file" "create-directories" "car" "key:" "string<?" "sort" "sorted" "content-index" "table-keys/values" "all" "let*")}
        {Lisp-Entry "update" #f 239 11 239 17 ("reset-marks" "sweep" "scan" "processed" "let" "name" "user-message" "when" "set-active?" "report?" "report?:")}
        {Lisp-Entry "update-file" #f 252 18 252 29 ("sweep" "process-file" "prog1" "set-marked?" "when" "get-start" "get-row" "user-message" "err" "Parse-Error" "catch" "get-marked?" "and" "marked?" "get-file-entry" "entry" "let*" "set-active?" "file")}
        {Lisp-Entry "reset-marks" #f 267 11 267 22 ("set-marked?" "file-definition" "for-each" "definitions" "class-name" "function" "content-index" "iterate-table")}
        {Lisp-Entry "Zip-Extensions" #f 280 14 280 28 ()}
        {Lisp-Entry "scan-directories" #f 284 11 284 27 ("get-list" "for-each" "Directory-Group" "directories" "is?" "if" "recursive?" "recursive?:" "scan-directory" "increase!" "dir" "function" "scandir" "0" "processed" "let*")}
        {Lisp-Entry "Parser-Associations" #f 295 14 295 33 ("Scheme-Parser" "jazz.language.scheme" "Python-Parser" "jazz.language.python" "Properties-Parser" "jazz.language.properties" "Lua-Parser" "jazz.language.lua" "JavaScript-Parser" "jazz.language.javascript" "Java-Parser" "jazz.language.java" "Jazz-Parser" "jazz.language.jazz" "CSS-Parser" "jazz.language.css" "C-Parser" "jazz.language.c" "CommonLisp-Parser" "jazz.language.commonlisp")}
        {Lisp-Entry "get-parser-class" #f 308 11 308 27 ("cadr" "module-autoload" "car" "autoload-info" "when" "ci=?" "member?" "extensions" "ext" "function" "test:" "Parser-Associations" "rassociate" "info" "let" "extension")}
        {Lisp-Entry "get-parser" #f 318 11 318 21 ("references?" "references?:" "get-heuristics" "heuristics:" "char-encoding" "char-encoding:" "self" "new" "when" "get-parser-class" "class" "let" "extension")}
        {Lisp-Entry "scan-file?" #f 324 11 324 21 ("get-parser-class" "ci=?" "test:" "member?" "not" "or" "and" "get-extensions" "extensions" "get-extension" "extension" "let" "file")}
        {Lisp-Entry "scan-file" #f 331 11 331 20 ("get-parser" "parse" "scan-zip-file" "ci=?" "test:" "Zip-Extensions" "member?" "if" "get-extension" "extension" "let" "user-message" "time" "file")}
        {Lisp-Entry "scan-zip-file" #f 339 11 339 24 ("get-output" "catalog" "Zip-File-Entry" "parse-zipped" "put" "user-message" "get-entry" "entry" "Zipped" "zipped" "let*" "when" "extract-extension" "get-parser" "parser" "size" "filename" "function" "iterate-files" "Unzip-File" "unzip" "with-closed" "List-Factory" "new" "entries" "let" "time" "file")}
        {Lisp-Entry "sweep" #f 359 11 359 16 ("references-index" "definitions-index" "marked?" "content-index" "sweep-table")}
        {Lisp-Entry "marked?" #f 365 11 365 18 ("get-file-definition" "get-marked?" "definition")}
        {Lisp-Entry "sweep-table" #f 369 11 369 22 ("table-set!" "set-modified?" "not" "cddr" "set-cdr!" "set-marked?" "set!" "begin" "if" "car" "definition" "while" "cdr" "list" "previous" "let" "not-null?" "when" "definitions" "class-name" "function" "iterate-table" "reset?" "marked?" "table")}
        {Lisp-Entry "get-definitions" #f 395 11 395 26 ("canonicalize-name" "definitions-index" "table-ref" "name")}
        {Lisp-Entry "search-definitions" #f 399 11 399 29 ("get-output" "put-sequence" "->string" "search" "when" "definitions" "name" "function" "definitions-index" "iterate-table" "List-Factory" "new" "fact" "let" "get-definitions" "not" "and" "if" "ignore-case?" "ignore-case?:" "whole-words?" "whole-words?:" "target")}
        {Lisp-Entry "get-references" #f 410 11 410 25 ("canonicalize-name" "references-index" "table-ref" "name")}
        {Lisp-Entry "get-completions" #f 414 11 414 26 ("references-index" "definitions-index" "table-complete" "either" "name")}
        {Lisp-Entry "canonicalize-name" #f 419 29 419 46 ("->string" "name")}
        {Lisp-Entry "get-qualified-category" #f 425 18 425 40 ("get-definitions" "get-qualified" "=" "get-category-package" "package" "Category-Entry" "is?" "and" "definition" "function" "find-if" "butlast" "qualifier" "last" "name" "let" "qualified")}
        {Lisp-Entry "get-category-package" #f 436 11 436 31 ("get-file-definition" "get-definitions" "Package-Entry" "is?" "function" "find-if" "definition")}
        {Lisp-Entry "table-complete" #f 447 11 447 25 ("cons" "set!" "compare-n" "when" "value" "name" "function" "iterate-table" "result" "cardinality" "length" "let" "string" "table")}}}})
"Indexed-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Indexed-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Indexed-Entry" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Indexed-Entry" #f 48 7 48 20 ("Catalog-Entry")
        {Lisp-Entry "name" #f 51 8 51 12 ()}
        {Lisp-Entry "line" #f 52 8 52 12 ()}
        {Lisp-Entry "column" #f 53 8 53 14 ()}
        {Lisp-Entry "definitions" #f 54 8 54 19 ()}
        {Lisp-Entry "references" #f 55 8 55 18 ()}
        {Lisp-Entry "construct-literal" #f 59 16 59 33 ("self" "new" "definitions" "column" "line" "name" "context")}
        {Lisp-Entry "initialize" #f 63 11 63 21 ("self" "set-parent" "definition" "function" "for-each" "references" "definitions" "column" "line" "name" "set!" "nextmethod" "r" "d" "c" "l" "n")}
        {Lisp-Entry "print" #f 75 11 75 16 ("name" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" #f 81 26 81 39 ("print-definitions" "column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "print-definitions" #f 90 11 90 28 ("definitions" "1" "+" "print-catalog" "definition" "function" "for-each" "printer" "level")}
        {Lisp-Entry "get-file" #f 101 11 101 19 ("file-definition" "get-file")}
        {Lisp-Entry "get-moniker" #f 105 11 105 22 ("file-definition" "root-definition" "either" "get-moniker")}
        {Lisp-Entry "get-title" #f 109 18 109 27 ("name")}
        {Lisp-Entry "get-category-name" #f 113 11 113 28 ("file-definition" "root-definition" "either" "get-category-name")}
        {Lisp-Entry "get-name" #f 117 11 117 19 ("name")}
        {Lisp-Entry "get-line" #f 121 11 121 19 ("line")}
        {Lisp-Entry "get-column" #f 125 11 125 21 ("column")}
        {Lisp-Entry "get-definitions" #f 129 11 129 26 ("definitions")}
        {Lisp-Entry "add-definition" #f 133 18 133 32 ("list" "append!" "definitions" "set!" "definition")}
        {Lisp-Entry "get-references" #f 137 18 137 32 ("references")}
        {Lisp-Entry "add-reference" #f 141 18 141 31 ("cons" "set!" "references" "member?" "unless" "reference")}
        {Lisp-Entry "get-catalog" #f 146 18 146 29 ("file-definition" "get-catalog")}
        {Lisp-Entry "set-root-definition" #f 150 11 150 30 ("definitions" "set-root-definition" "definition" "function" "for-each" "nextmethod" "def")}
        {Lisp-Entry "set-file-definition" #f 157 11 157 30 ("definitions" "set-file-definition" "definition" "function" "for-each" "nextmethod" "def")}
        {Lisp-Entry "update-indexes" #f 169 11 169 25 ("definitions" "update-indexes" "definition" "function" "for-each" "name" "update-index" "references-index" "definitions-index")}
        {Lisp-Entry "update-index" #f 176 21 176 33 ("self" "table-add" "when" "key" "index")}
        {Lisp-Entry "present" #f 186 11 186 18 ("format" "references" "get-category-name" "definitions" "mode" "case" "present-name")}
        {Lisp-Entry "present-name" #f 194 11 194 23 ("present-noname" "get-name" "either")}
        {Lisp-Entry "present-noname" #f 198 29 198 43 ()}
        {Lisp-Entry "file-name" #f 207 11 207 20 ("get-name" "file")}
        {Lisp-Entry "entry-range" #f 211 29 211 40 ("name" "->string" "cardinality" "+" "Cell" "Range$Cell$" "new" "column" "line" "essay")}
        {Lisp-Entry "edit" #f 215 11 215 15 ("selection:" "char-encoding:" "edit-document" "entry-range" "selection" "get-catalog" "get-char-encoding" "char-encoding" "get-application" "appl" "error" "exists?" "not" "if" "get-moniker" "moniker" "let" "activate-focus?" "activate-focus?:" "workspace" "workspace:")}
        {Lisp-Entry "find-source" #f 225 11 225 22 ("get-stage" "get-children" "file-name" "string=?" "get-moniker" "file" "get-guest" "guest" "Frame-Host" "is?" "and" "frame" "function" "find-if" "source-frame-type" "type" "let" "name")}
        {Lisp-Entry "source-frame-type" #f 237 29 237 46 ()}}}})
"Inspector"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "inspector" "Inspector.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.inspector.Inspector" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Inspector" #f 49 7 49 16 ("title:" "name" "name:" ":icons" "portfolio:" "row" "selection-mode:" "multiple-selection?:" "value" "filled-column:" "Tree-View")
        {Lisp-Entry "process" #f 52 12 52 19 ("set-process" "get-process")}
        {Lisp-Entry "client" #f 53 12 53 18 ("set-client" "get-client")}
        {Lisp-Entry "sort?" #f 54 12 54 17 ("set-sort?" "get-sort?")}
        {Lisp-Entry "get-process" #f 68 18 68 29 ("process")}
        {Lisp-Entry "set-process" #f 72 18 72 29 ("process" "set!" "value")}
        {Lisp-Entry "get-client" #f 76 18 76 28 ("client")}
        {Lisp-Entry "set-client" #f 80 18 80 28 ("present-client" "set!" "client" "neq?" "when" "clt")}
        {Lisp-Entry "get-sort?" #f 86 18 86 27 ("sort?")}
        {Lisp-Entry "set-sort?" #f 90 18 90 27 ("sort?" "set!" "value")}
        {Lisp-Entry "update-row" #f 99 11 99 21 ("address" "debuggee" "serial->object" "inspect" "present" "get-local-process" "either" "process" "let" "get-user-data" "kind" "serial" "bind" "row")}
        {Lisp-Entry "present-client" #f 110 11 110 25 ("inspect" "root-row" "present" "kind" "data" "bind" "when" "remove-every-row" "function" "with-update-locked" "client")}
        {Lisp-Entry "present" #f 119 11 119 18 ("cons" "user-data:" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "collapsed" "'collapsed" "dynamic" "'dynamic" "if" "state" "let" "kind" "more?" "presented" "address" "name" "bind-optionals" "info" "for-each" "function" "with-update-locked" "values" "row")}
        {Lisp-Entry "inspect" #f 134 26 134 33 ("inspect-value" ":value" "case" "kind" "data")}}}})
"Inspector-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "inspector" "Inspector-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.inspector.Inspector-View" #f 37 9 37 52 ("jazz")
      {Lisp-Entry "Inspector-View" #f 48 7 48 21 ("261" "value" "170" "width:" "name" "row" "selection-mode:" "inspector" "content" "name:" "flat?:" "hscroll?:" "vscroll?:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "process" #f 51 12 51 19 ("set-process" "get-process")}
        {Lisp-Entry "client" #f 52 12 52 18 ("set-client" "get-client")}
        {Lisp-Entry "host-title" #f 71 16 71 26 ()}
        {Lisp-Entry "host-position" #f 75 16 75 29 ("60" "378" "Point")}
        {Lisp-Entry "host-size" #f 79 16 79 25 ("641" "446" "Dimension")}
        {Lisp-Entry "get-process" #f 88 18 88 29 ("inspector" "'inspector" "locate" "get-process")}
        {Lisp-Entry "set-process" #f 92 18 92 29 ("inspector" "'inspector" "locate" "set-process" "process")}
        {Lisp-Entry "get-client" #f 96 18 96 28 ("inspector" "'inspector" "locate" "get-client")}
        {Lisp-Entry "set-client" #f 100 18 100 28 ("inspector" "'inspector" "locate" "set-client" "update-title" "client")}
        {Lisp-Entry "Max-Title" #f 110 14 110 23 ("50")}
        {Lisp-Entry "update-title" #f 114 11 114 23 ("0" "subseq" "set-title" "Max-Title" "cardinality" "<" "if" "car" "format" "title" "let" "client")}}}})
"Instance-Init-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Instance-Init-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Instance-Init-Entry" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Instance-Init-Entry" #f 45 7 45 26 ("Hierarchical-Entry")
        {Lisp-Entry "construct-literal" #f 49 16 49 33 ("self" "new" "references" "column" "line" "name" "modifiers" "context")}
        {Lisp-Entry "present-name" #f 53 11 53 23 ()}
        {Lisp-Entry "print-catalog" #f 57 11 57 24 ("references" "column" "line" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 64 11 64 20 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" #f 73 11 73 25 ("references" "update-index" "key" "function" "for-each" "references-index" "definitions-index")}}}})
"Interface-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Interface-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Interface-Doc" #f 37 9 37 35 ("jazz")
      {Lisp-Entry "Interface-Doc" #f 45 7 45 20 ("Category-Doc")
        {Lisp-Entry "construct-literal" #f 49 16 49 33 ("definitions:" "doc:" "extends:" "name:" "self" "new" "definitions" "doc" "extends" "name" "context")}
        {Lisp-Entry "get-class-image" #f 58 16 58 31 ("Bitmap-Resource")}}}})
"Interface-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Interface-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Interface-Entry" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Interface-Entry" #f 45 7 45 22 ("Category-Entry")
        {Lisp-Entry "construct-literal" #f 49 16 49 33 ("self" "new" "definitions" "column" "line" "extends" "name" "modifiers" "context")}
        {Lisp-Entry "print-catalog" #f 53 11 53 24 ("definitions" "1" "+" "print-catalog" "definition" "function" "for-each" "column" "line" "extends" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 64 11 64 20 ("Bitmap-Resource")}
        {Lisp-Entry "insert-ascendants" #f 73 11 73 28 ("extends" "insert-interfaces-list" "father" "tree")}}}})
"JML-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jml" "text" "JML-Explorer.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jml.text.JML-Explorer" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "JML-Explorer" #f 46 7 46 19 ("C-Explorer")}}})
"JML-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jml" "text" "JML-Text-Preferences.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jml.text.JML-Text-Preferences" #f 37 9 37 52 ("jazz")
      {Lisp-Entry "JML-Text-Preferences" #f 47 7 47 27 ("title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" #f 50 12 50 23 ("generate")}
        {Lisp-Entry "line-comment-color" #f 51 12 51 30 ("generate")}
        {Lisp-Entry "definition-color" #f 52 12 52 28 ("generate")}
        {Lisp-Entry "keyword-color" #f 53 12 53 25 ("generate")}
        {Lisp-Entry "specifier-color" #f 54 12 54 27 ("generate")}
        {Lisp-Entry "keywords" #f 55 12 55 20 ("generate")}
        {Lisp-Entry "completions" #f 56 12 56 23 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 68 11 68 37 ("specifier-color" "keyword-color" "definition-color" "line-comment-color" "title-color" "completions" "keywords")}
        {Lisp-Entry "get-row-instance" #f 73 11 73 27 ("nextmethod" "else" "Completion-List-Row" "completions" "Color-Row" "new" "specifier-color" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}}}})
"JML-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jml" "text" "JML-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jml.text.JML-Text-View" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "JML-Text-View" #f 47 7 47 20 ("Code-Text-View")
        {Lisp-Entry "install" #f 50 11 50 18 ("get-specifier-color" "Specifier" "'Specifier" "get-keyword-color" "Keyword" "'Keyword" "get-definition-color" "Definition" "'Definition" "get-line-comment-color" "Line-Comment" "'Line-Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 60 16 60 29 ("jml-text" "'jml-text" "rest")}
        {Lisp-Entry "preferences" #f 64 11 64 22 ("jml-text" "documents" "get-preferences")}
        {Lisp-Entry "get-constituent-test" #f 69 16 69 36 ("c-constituent?")}
        {Lisp-Entry "host-workspaces" #f 78 11 78 26 ("text")}
        {Lisp-Entry "favorite-completions" #f 87 11 87 31 ("jml-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "commented?" #f 91 11 91 21 ("Line-Comment" "'Line-Comment" "Title" "'Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "explorer-class" #f 103 11 103 25 ("JML-Explorer")}
        {Lisp-Entry "get-context" #f 112 11 112 22 ("jml")}
        {Lisp-Entry "current-name" #f 116 11 116 23 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" #f 120 11 120 18 ("read-string-element" "element" "eqv?" "if" "0" "cardinality" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" #f 129 11 129 23 ("current-name")}
        {Lisp-Entry "current-expr-range" #f 133 11 133 29 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" #f 139 11 139 21 ("get-range" "outer-expr" "end:" "start:" "self" "JML-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" #f 145 11 145 18 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" #f 154 12 154 19 ("list")}
        {Lisp-Entry "get-headers" #f 159 11 159 22 ("headers")}
        {Lisp-Entry "get-first-special?" #f 163 11 163 29 ()}
        {Lisp-Entry "Definitions" #f 172 12 172 23 ()}
        {Lisp-Entry "get-definitions" #f 176 11 176 26 ("Definitions")}
        {Lisp-Entry "Keywords" #f 185 12 185 20 ()}
        {Lisp-Entry "get-keywords" #f 189 29 189 41 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" #f 198 14 198 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 201 14 201 29 ()}
        {Lisp-Entry "syntax-targets" #f 205 11 205 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 211 11 211 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" #f 217 11 217 33 ("get-keywords" "keyword" "'keyword" "get-definitions" "definition" "'definition" "str" "function" "map" "line-comment" "'line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" #f 223 11 223 34 ("c-constituent?" "self" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-syntax" #f 227 11 227 26 ("colorize-comments" "colorize-declarations" "function" "with-safe-explore" "rest")}
        {Lisp-Entry "colorize-type" #f 234 11 234 24 ("Keyword" "'Keyword" "keyword" "Definition" "'Definition" "colorize-keyword" "definition" "Title" "'Title" "Line-Comment" "'Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}}})
"JML-Viewer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jml" "viewer" "JML-Viewer.jazz"} 1236975967
    {Lisp-Entry "jazz.language.jml.viewer.JML-Viewer" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "JML-Viewer" #f 48 7 48 17 ("notes" "notes-border" "Heading5" "Font" "font:" "Default" "Text-Style" "default-style:" "text" "text-border" "70" "vert" "second" "219" "width:" "on-selection-change" ":form" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "jml-tree" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "first" "jml-border" "30" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "center" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "33" "300" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "title:" "Layout-View")
        {Lisp-Entry "document" #f 51 12 51 20 ("set-document" "get-document")}
        {Lisp-Entry "finish" #f 76 11 76 17 ("refresh" "nextmethod" "initargs")}
        {Lisp-Entry "host-icon" #f 86 16 86 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 90 16 90 26 ()}
        {Lisp-Entry "host-position" #f 94 16 94 29 ("50" "Point")}
        {Lisp-Entry "host-size" #f 98 16 98 25 ("500" "800" "Point")}
        {Lisp-Entry "host-workspaces" #f 102 11 102 26 ("home")}
        {Lisp-Entry "get-document" #f 111 18 111 30 ("document")}
        {Lisp-Entry "set-document" #f 115 18 115 30 ("refresh" "document" "set!" "value")}
        {Lisp-Entry "resize" #f 125 11 125 17 ("notes-border" "'notes-border" "text-border" "'text-border" "0" "jml-border" "'jml-border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "refresh" #f 132 18 132 25 ("view-text" "document" "view-tree" "clear-node")}
        {Lisp-Entry "clear-node" #f 138 11 138 21 ("clear-all" "'notes" "notes" "'text" "locate" "text" "let")}
        {Lisp-Entry "view-tree" #f 150 11 150 20 ("insert-node" "node" "for-each" "collect-children" "child-nodes" "get-childNodes" "lst" "with-closed" "hasChildNodes" "and" "when" "remove-every-row" "function" "with-update-locked" "jml-tree" "'jml-tree" "locate" "tree" "let" "document")}
        {Lisp-Entry "insert-node" #f 163 11 163 22 ("insert-node" "subnode" "function" "for-each" "collect-children" "child-nodes" "get-childNodes" "lst" "with-closed" "hasChildNodes" "when" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "subfather" "get-nodeName" "title" "jml-tree" "'jml-tree" "locate" "tree" "let*" "father" "node")}
        {Lisp-Entry "collect-children" #f 175 11 175 27 ("get-item" "collect" "get-length" "below" "0" "from" "n" "for" "loop" "lst")}
        {Lisp-Entry "view-text" #f 180 11 180 20 ("get-jml" "set-string-content" "clear-all" "null?" "if" "'text" "locate" "text" "let" "document")}
        {Lisp-Entry "describe-node" #f 187 11 187 24 ("get-nodeType" "get-nodeValue" "get-nodeName" "insert-bulleted-line" "'notes" "locate" "notes" "let" "node")}
        {Lisp-Entry "on-selection-change" #f 199 11 199 30 ("describe-node" "get-row" "get-user-data" "node" "when" "get-single-selection" "selection" "jml-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}}}})
"JVM"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "runtime" "JVM.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.runtime.JVM" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "JVM" #f 45 7 45 10 ("Object")
        {Lisp-Entry "setup-jvm" #f 49 23 49 32 ("Ansi-String" "build-option" "coerce" "parse" "jvm-setup" "classpath" "classpath:" "jvm-dll" "jvm-dll:")}
        {Lisp-Entry "build-option" #f 54 16 54 28 ("Java" "parse-classpath" "format" "classpath")}
        {Lisp-Entry "destroy-jvm" #f 59 23 59 34 ("jvm-destroy")}
        {Lisp-Entry "new-object" #f 69 23 69 33 ("jvm-new-object" "apply" "object" "get-method" "method" "proxy-parameters" "parameter-types" "java-external-signature" "signature" "get-node-procedure" "external" "find-constructor" "node" "Interpreter" "generic-dispatcher" "dispatcher" "'<init>" "category-field" "definition-value" "generic" "java-class" "class" "let*" "parameters" "jazz-class")}
        {Lisp-Entry "find-constructor" #f 83 16 83 32 ("car" "else" "cdr" "not-null?" "error" "null?" "cond" "class-of" "map" "find-generics" "nodes" "let" "parameters" "dispatcher")}
        {Lisp-Entry "find-class" #f 91 23 91 33 ("Java" "period->slash-notation-ansi" "jvm-find-class" "name")}
        {Lisp-Entry "class-exists?" #f 96 23 96 36 ("find-class" "exception" "Java-Exception" "catch" "name")}
        {Lisp-Entry "get-method" #f 105 23 105 33 ("Ansi-String" "coerce" "java-class" "jvm-get-method-id" "signature" "name" "jazz-class")}}}})
"Java"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "Java.jazz"} 1236813156
    {Lisp-Entry "Java" #f 42 9 42 13 ("jazz")}})
"Java-Array"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "runtime" "Java-Array.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.runtime.Java-Array" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Java-Array" #f 45 7 45 17 ("Java-Object")}}})
"Java-Compiler"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "sdk" "Java-Compiler.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.sdk.Java-Compiler" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Java-Compiler" #f 48 7 48 20 ("Object")
        {Lisp-Entry "compile" #f 56 18 56 25 ("report-errors" "EXIT_SUCCESS" "/=" "if" "visible?:" "capture-error?:" "capture-output?:" "create-process" "error-lines" "output-lines" "code" "receive" "build-command" "command" "let" "parse" "user-message" "classpath" "classpath:" "directory" "directory:" "file")}
        {Lisp-Entry "build-command" #f 75 11 75 24 ("parse" "Java" "parse-classpath" "format" "classpath" "file")}
        {Lisp-Entry "report-errors" #f 84 11 84 24 ("error" "get-output-string" "msg" "line" "function" "for-each" "format" "open-output-string" "printer" "let" "lines")}}}})
"Java-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "catalog" "Java-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.catalog.Java-Entry" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Java-Entry" #f 47 7 47 17 ("Hierarchical-Entry")
        {Lisp-Entry "source-frame-type" #f 50 11 50 28 ("Java-Text-View")}}}})
"Java-Exception"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "exception" "Java-Exception.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.exception.Java-Exception" #f 37 9 37 52 ("jazz")
      {Lisp-Entry "Java-Exception" #f 45 7 45 21 ("Exception")
        {Lisp-Entry "exception" #f 48 8 48 17 ()}
        {Lisp-Entry "initialize" #f 51 11 51 21 ("exception~self" "set!" "nextmethod" "exception")}
        {Lisp-Entry "get-exception" #f 61 18 61 31 ("exception")}
        {Lisp-Entry "get-message" #f 70 11 70 22 ("get-output-string" "getStackTrace" "getMethodName" "getClassName" "element" "function" "for-each" "getMessage" "exception" "getClass" "getName" "format" "open-output-string" "printer" "let")}}}})
"Java-Extractor"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "tools" "Java-Extractor.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.tools.Java-Extractor" #f 42 9 42 48 ("jazz")
      {Lisp-Entry "Java-Extractor" #f 54 7 54 21 ("Object")
        {Lisp-Entry "extract" #f 57 18 57 25 ("import-class" "printer" "function" "parse" "call-with-output-file" "slash->period-notation" "format" "new-file" "file" "let" "directory" "classname")}
        {Lisp-Entry "copy-methods" #f 64 18 64 30 ("get-output-string" "set-clipboard-text" "import-methods" "getMethods" "all-methods" "org.apache.bcel.Repository" "lookupClass" "javaClass" "open-output-string" "printer" "let*" "methods" "classname")}
        {Lisp-Entry "import-class" #f 72 11 72 23 ("import-methods" "when" "format" "getMethods" "methods" "getInterfaceNames" "interfaceNames" "getSuperclassName" "superclassName" "getPackageName" "packageName" "getClassName" "className" "org.apache.bcel.Repository" "lookupClass" "javaClass" "let*" "output-header" "printer" "classname")}
        {Lisp-Entry "import-methods" #f 90 11 90 25 ("import-method" "method-info" "function" "for-each" "first" "max-name" "third" "length" "max" "apply" "max-return" "method-infos" "get-method-info" "map" "all-method-infos" "let*" "printer" "methods" "all-methods")}
        {Lisp-Entry "get-method-info" #f 100 11 100 26 ("list" "getArgumentTypes" "map" "parameter-types" "getReturnType" "jazz-type" "return-type" "isFinal" "if" "propagation" "getName" "name" "let" "method")}
        {Lisp-Entry "import-method" #f 108 11 108 24 ("format" "=" "unless" "parameter-types" "return-type" "propagation" "name" "bind" "printer" "max-name" "max-return" "method-info")}
        {Lisp-Entry "Type-Alist" #f 121 14 121 24 ()}
        {Lisp-Entry "jazz-type" #f 132 11 132 20 ("jazz-signature-type" "getSignature" "signature" "let" "type")}
        {Lisp-Entry "jazz-signature-type" #f 137 11 137 30 ("error" "cdr" "if" "Type-Alist" "assv" "info" "else" "jazz-reference-type" "jazz-array-type" "case" "0" "element" "first" "let" "signature")}
        {Lisp-Entry "jazz-array-type" #f 149 11 149 26 ("1" "subseq" "jazz-signature-type" "format" "signature")}
        {Lisp-Entry "jazz-reference-type" #f 153 11 153 30 ("format" "=" "if" "length" "-" "1" "subseq" "classname" "substitute" "subs" "let*" "signature")}}}})
"Java-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "builder" "Java-File.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.builder.Java-File" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Java-File" #f 45 7 45 16 ("Project-File")
        {Lisp-Entry "build" #f 54 11 54 16 ("classpath:" "source" "compile" "require-classpath" "classpath" "Java-Compiler" "new" "javac" "let" "rest" "output" "log" "reporter" "project")}
        {Lisp-Entry "get-class-presentation" #f 65 16 65 38 ()}}}})
"Java-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "catalog" "Java-File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.catalog.Java-File-Entry" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "Java-File-Entry" #f 46 7 46 22 ("File-Entry")
        {Lisp-Entry "insert-definition" #f 55 11 55 28 ("insert-definitions" "get-output" "insert-imports" "insert-self" "when" "else" "put" "Import-Entry" "set!" "Package-Entry" "typecase" "definition" "function" "for-each" "others" "List-Factory" "new" "imports" "package" "get-definitions" "definitions" "let" "sort?" "father" "tree")}
        {Lisp-Entry "insert-imports" #f 73 11 73 25 ("insert-self" "import" "function" "for-each" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "17" "row-height:" "collapsed" "'collapsed" "state:" "father:" "add-row" "row" "get-catalog" "catalog" "let" "imports" "father" "tree")}}}})
"Java-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "tools" "Java-Manager.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.tools.Java-Manager" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Java-Manager" #f 53 7 53 19 ("175" "width:" "signature" "filled-column:" "methods" "second" "methods-border" "toplevel-controls?:" "name" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "multiple-selection?:" "classes" "fill" "content" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "first" "classes-border" "35" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "center" "splitter" "on-browse" "tail" "100" "title:" "browse" "on-copy-methods" "copy-methods" "on-generate-classes" "generate-classes" "on-edit" ":form" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "22" "edit" "0" "6" "2" "Rect" "layout-insets:" "flow" "north" "location:" "33" "300" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "current-classname" #f 56 8 56 25 ()}
        {Lisp-Entry "host-icon" #f 91 16 91 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 95 16 95 26 ()}
        {Lisp-Entry "host-position" #f 99 16 99 29 ("75" "74" "Point")}
        {Lisp-Entry "host-size" #f 103 16 103 25 ("460" "825" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 107 11 107 26 ("home")}
        {Lisp-Entry "resize" #f 116 11 116 17 ("0" "browse" "'browse" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-edit" #f 121 11 121 18 ("edit-source" "evt")}
        {Lisp-Entry "on-generate-classes" #f 125 11 125 30 ("generate-classes" "evt")}
        {Lisp-Entry "on-copy-methods" #f 129 11 129 26 ("copy-methods" "evt")}
        {Lisp-Entry "on-browse" #f 133 11 133 20 ("browse-jarfile" "browse-classfile" "ci=?" "cond" "get-extension" "ext" "extensions:" "choose-file" "file" "let*" "evt")}
        {Lisp-Entry "on-selection-change" #f 140 11 140 30 ("browse-methods" "1" "length" "=" "edit" "'edit" "locate" "set-enabled?" "get-selected-data" "classnames" "classes" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-double-click" #f 149 11 149 26 ("copy-methods" "methods" "edit-source" "classes" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "browse-classfile" #f 163 18 163 34 ("classfile")}
        {Lisp-Entry "browse-jarfile" #f 172 18 172 32 ("extract-jarfile-classnames" "view-classes" "jarfile")}
        {Lisp-Entry "extract-jarfile-classnames" #f 176 11 176 37 ("get-output" "put" "length" "-" "0" "subseq" "classname" "=" "when" "extract-extension" "extension" "find-in" "unless" "size" "filename" "function" "iterate-files" "Unzip-File" "unzip" "with-closed" "List-Factory" "new" "fact" "let" "jarfile")}
        {Lisp-Entry "browse-classes" #f 194 18 194 32 ("0" "list" "set-selection" "classes" "'classes" "locate" "tree" "let" "1" "length" "=" "when" "view-classes" "classnames")}
        {Lisp-Entry "view-classes" #f 201 11 201 23 ("insert-class" "classname" "for-each" "remove-every-row" "function" "with-update-locked" "classes" "'classes" "locate" "tree" "let" "classnames")}
        {Lisp-Entry "insert-class" #f 211 11 211 23 ("user-data:" "title:" "Bitmap-Resource" "image:" "Tree-Node" "new" "list" "children:" "add-row" "classname" "tree")}
        {Lisp-Entry "edit-source" #f 215 11 215 22 ("edit-category" "get-application" "appl" "car" "string->symbol" "classname" "get-selected-data" "classnames" "classes" "'classes" "locate" "tree" "let*")}
        {Lisp-Entry "generate-classes" #f 223 11 223 27 ("extract" "user-message" "classname" "function" "for-each" "get-selected-data" "classnames" "Java-Extractor" "new" "extractor" "choose-directory" "directory" "classes" "'classes" "locate" "tree" "let*")}
        {Lisp-Entry "browse-methods" #f 240 11 240 25 ("insert-methods" "car" "classname" "current-classname" "set!" "1" "length" "/=" "if" "remove-every-row" "function" "with-update-locked" "methods" "'methods" "locate" "tree" "let" "classnames")}
        {Lisp-Entry "insert-methods" #f 252 11 252 25 ("insert-method" "for-each" "getName" "method" "function" "key:" "getMethods" "<" "sort" "methods" "error" "null?" "if" "org.apache.bcel.Repository" "lookupClass" "javaClass" "let" "classname" "tree")}
        {Lisp-Entry "insert-method" #f 262 11 262 24 ("user-data:" "Tree-Label" "title:" "Bitmap-Resource" "image:" "Tree-Node" "new" "list" "children:" "add-row" "getSignature" "signature" "getName" "name" "let" "method" "tree")}
        {Lisp-Entry "insert-method" #f 269 11 269 24 ("Bitmap-Resource" "image:" "Tree-Node" "list" "children:" "add-row" "user-data:" "checked?:" "title:" "parent:" "Check-Box" "checkbox" "0" "2" "Rect" "layout-insets:" "fill" "'fill" "layout-type:" "Layout-View" "new" "layout-view" "getName" "name" "let*" "method" "tree")}
        {Lisp-Entry "copy-methods" #f 276 11 276 23 ("format-plural" "format" "message-box" "length" "count" "let" "copy-methods" "get-selected-data" "current-classname" "classname" "Java-Extractor" "new" "extractor" "methods" "'methods" "locate" "tree" "let*")}}}})
"Java-Object"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "runtime" "Java-Object.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.runtime.Java-Object" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Java-Object" #f 45 7 45 18 ("Object")}
      {Lisp-Entry "Java-Object" #f 51 7 51 18 ("int" "set-java-object" "get-java-object" "get-java-class" "Object")
        {Lisp-Entry "initialize" #f 54 11 54 21 ("class-of" "JVM" "new-object" "self" "set-java-object" "nextmethod" "rest")}
        {Lisp-Entry "print" #f 59 11 59 16 ("function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "java-class" #f 70 23 70 33 ("self" "get-java-class")}
        {Lisp-Entry "int" #f 74 22 74 25 ()}
        {Lisp-Entry "get-object" #f 82 18 82 28 ("self" "get-java-object")}
        {Lisp-Entry "int" #f 91 17 91 20 ()}
        {Lisp-Entry "void" #f 92 17 92 21 ()}}}})
"Java-Object-Array"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "runtime" "Java-Object-Array.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.runtime.Java-Object-Array" #f 37 9 37 53 ("jazz")
      {Lisp-Entry "Java-Object-Array" #f 45 7 45 24 ("Java-Array")}}})
"Java-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "parser" "Java-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.parser.Java-Parser" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Java-Parser" #f 46 7 46 18 ("File-Parser")
        {Lisp-Entry "parse" #f 49 11 49 16 ("catalog" "Java-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse" #f 54 11 54 16 ("references?" "include-references?:" "java-definitions" "catalog" "Java-File-Entry" "new" "Java-AST" "parse-java" "ast" "let" "time" "file")}
        {Lisp-Entry "parse-zipped" #f 60 11 60 23 ("references?" "include-references?:" "java-definitions" "Zipped-Entry" "new" "Java-AST" "read-content" "parse-java" "ast" "let" "zipped")}
        {Lisp-Entry "sweep" #f 71 11 71 16 ("qualify-origins" "qualify-categories" "file-entry" "function" "for-each" "content" "table-values" "append" "apply" "file-entries" "let" "nextmethod")}
        {Lisp-Entry "qualify-categories" #f 83 11 83 29 ("Category-Entry" "set-qualified" "list" "append" "qualified-path" "get-name" "name" "category-entry" "function" "for-each" "when" "first" "get-qualified" "essay" "package-path" "Package-Entry" "collect-type" "package-entries" "get-definitions" "definitions" "let*" "file-entry")}
        {Lisp-Entry "qualify-origins" #f 96 11 96 26 ("Category-Entry" "qualify-return-types" "set-implements" "set-extends" "best-implements" "best-qualify" "best-extends" "get-implements" "Class-Entry" "is?" "when" "implements" "get-extends" "extends" "category-entry" "for-each" "get-name" "equal?" "import" "function" "some?" "star-import?" "Import-Entry" "import-entries" "Package-Entry" "collect-type" "package-entries" "get-definitions" "definitions" "let*" "file-entry")}
        {Lisp-Entry "qualify-return-types" #f 118 11 118 31 ("get-definitions" "Method-Entry" "collect-type" "set-type" "when" "best-qualify-type" "best-type" "get-type" "return-type" "let*" "method-entry" "function" "for-each" "star-import?" "packages" "imports" "category-entry")}
        {Lisp-Entry "best-qualify" #f 128 11 128 23 ("get-parent" "else" "best-qualify" "'best-qualify" "debug" "not" "if" "0" "first" "case" "category-from-package" "packaged" "category-from-import" "imported" "last" "category-from-index" "indexed" "let" "map" "length" "1" "=" "item" "function" "some?" "when" "star-import?" "packages" "imports" "name-list")}
        {Lisp-Entry "best-qualify-type" #f 148 11 148 28 ("else" "not" "if" "0" "1" "length" "case" "category-from-package" "packaged" "category-from-import" "imported" "category-from-index" "indexed" "let" "first" "object-upper-case?" "String" "is?" "and" "when" "star-import?" "packages" "imports" "name")}
        {Lisp-Entry "category-from-index" #f 163 11 163 30 ("get-definitions" "Class-Entry" "collect-type" "get-qualified" "entry" "function" "map" "name")}
        {Lisp-Entry "category-from-import" #f 170 11 170 31 ("get-qualified" "import" "map" "last" "equal?" "import-path" "function" "collect-if" "remove-duplicates" "imports" "name")}
        {Lisp-Entry "category-from-package" #f 180 11 180 32 ("list" "append" "essay" "first" "get-qualified" "qualified" "let" "when" "packages" "name")}}}})
"Java-Primitive"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "runtime" "Java-Primitive.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.runtime.Java-Primitive" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Java-Primitive" #f 48 7 48 21 ("Primitive")}}})
"Java-Runtime"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "sdk" "Java-Runtime.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.sdk.Java-Runtime" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Java-Runtime" #f 48 7 48 19 ("Object")
        {Lisp-Entry "execute" #f 56 18 56 25 ("report-errors" "EXIT_SUCCESS" "/=" "if" "visible?:" "capture-error?:" "capture-output?:" "create-process" "error-lines" "output-lines" "code" "receive" "build-command" "command" "let" "arguments" "arguments:" "classpath" "classpath:" "directory" "directory:" "class-name")}
        {Lisp-Entry "build-command" #f 74 11 74 24 ("Java" "parse-classpath" "format" "arguments" "classpath" "class-name")}
        {Lisp-Entry "report-errors" #f 83 11 83 24 ("error" "get-output-string" "msg" "line" "function" "for-each" "format" "open-output-string" "printer" "let" "lines")}}}})
"Java-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "text" "Java-Text-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.text.Java-Text-Actions" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Java-Text-Actions" #f 46 7 46 24 ("java-text" "Action" "action:" "insert-accessors" "name:" "Actions")}}})
"Java-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "text" "Java-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.java.text.Java-Text-Preferences" #f 37 9 37 54 ("jazz")
      {Lisp-Entry "Java-Text-Preferences" #f 49 7 49 28 ("completions:" "keywords:" "Dark-Orange" "profile-macro-color:" "profile-keyword-color:" "Dark-Blue" "keyword-color:" "Dark-Green" "balanced-comment-color:" "Purple" "line-comment-color:" "title-color:" "Dark-Red" "name:" "Color" "definition-color:" "title:" "CLike-Text-Preferences")}}})
"Java-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "text" "Java-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.text.Java-Text-View" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Java-Text-View" #f 49 7 49 21 ("CLike-Text-View")
        {Lisp-Entry "external-name" #f 52 16 52 29 ("java-text" "'java-text" "rest")}
        {Lisp-Entry "preferences" #f 56 11 56 22 ("java-text" "documents" "get-preferences")}
        {Lisp-Entry "host-workspaces" #f 65 11 65 26 ("text")}
        {Lisp-Entry "get-context-menu" #f 74 11 74 27 ("Java-Text-Menu" "new")}
        {Lisp-Entry "favorite-completions" #f 83 11 83 31 ("java-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "get-first-special?" #f 92 11 92 29 ()}
        {Lisp-Entry "Keywords" #f 101 12 101 20 ("nextmethod")}
        {Lisp-Entry "get-keywords" #f 158 11 158 23 ("Keywords")}
        {Lisp-Entry "get-user-macros" #f 167 11 167 26 ("java-text" "documents" "get-preferences" "get-macros" "user")}
        {Lisp-Entry "get-user-keywords" #f 171 11 171 28 ("java-text" "documents" "get-preferences" "get-keywords" "user")}
        {Lisp-Entry "get-user-types" #f 175 11 175 25 ("java-text" "documents" "get-preferences" "get-types" "user")}
        {Lisp-Entry "Syntax-Targets" #f 184 14 184 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 187 14 187 29 ()}
        {Lisp-Entry "syntax-targets" #f 191 11 191 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 197 11 197 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "get-parsed-entries" #f 204 11 204 29 ("delete-file" "unwind-protect" "get-content" "save-lines" "create-temporary-file" "file" "get-parsed-entries-from" "get-definitions" "get-controller" "get-moniker-time" "get-time" "time->seconds" "=" "car" "not-null?" "essay" "file-entry" "c" "context:" "get-file-entries" "entries" "let*" "get-modified?" "not" "file?" "and" "if" "get-application" "get-cataloguer" "cataloguer" "get-moniker" "moniker" "let")}
        {Lisp-Entry "get-parsed-entries-from" #f 221 11 221 34 ("clear-user-message" "include-references?:" "java-definitions" "definitions" "Java-AST" "parse-java" "ast" "let*" "get-start" "get-row" "user-message" "err" "Parse-Error" "catch" "file")}
        {Lisp-Entry "save-content" #f 236 11 236 23 ("recolorize-entries" "get-recolorize-on-save?" "and" "when" "error?:" "catalogs" "'catalogs" "get-preferences" "pref" "let" "nextmethod" "moniker")}
        {Lisp-Entry "on-insert-accessors" #f 248 11 248 30 ("insert-accessors" "0" "get-row" "Cell" "set-caret" "function" "undoer" "with-atomic-undo" "self" "Text-Printer" "new" "printer" "get-start" "start" "gather-properties" "properties" "car" "class" "get-parsed-entries" "entries" "let*" "evt")}
        {Lisp-Entry "gather-properties" #f 261 11 261 28 ("List" "static" "'static" "has-modifier?" "not" "Variable-Entry" "is?" "and" "entry" "function" "collect-if" "coerce" "get-definitions" "definitions" "let" "class")}
        {Lisp-Entry "insert-accessors" #f 270 11 270 27 ("insert-tostring" "insert-setter" "insert-getter" "format" "property" "function" "for-each" "printer" "properties" "class")}
        {Lisp-Entry "insert-getter" #f 281 11 281 24 ("capitalize" "format" "get-type" "type" "get-name" "name" "let" "printer" "property")}
        {Lisp-Entry "insert-setter" #f 290 11 290 24 ("capitalize" "format" "get-type" "type" "get-name" "name" "let" "printer" "property")}
        {Lisp-Entry "insert-tostring" #f 299 11 299 26 ("-" "name" "for-each" "length" "apply" "max" "capitalize" "property" "function" "map" "names" "let*" "get-name" "format" "printer" "properties" "class")}}
      {Lisp-Entry "Java-Text-Menu" #f 321 7 321 21 ("paste" "copy" "view" "Bitmap-Resource" "icon:" "french:" "english:" "Locales" "cut" "java-text" "Action" "action:" "get-latest" "before:" "title:" "insert-accessors" "name:" "Context-Menu")}}})
"JavaExternal-Expander"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "macro" "JavaExternal-Expander.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.macro.JavaExternal-Expander" #f 37 9 37 55 ("jazz")
      {Lisp-Entry "JavaExternal-Expander" #f 45 7 45 28 ("Ansi-String" "executeQuery" "virtual" "public" "%java-external" "Object")
        {Lisp-Entry "executeQuery" #f 49 54 49 66 ()}
        {Lisp-Entry "expand" #f 58 23 58 29 (",signature" ",entry-name" ",parameter-types" ",return-type" ",@modifiers" "%java-external" ",name" ":location" "attribute" "compute-signature" "signature" "Ansi-String" "symbol->string" "coerce" "entry-name" "let" "parameter-types" "name" "return-type" "bind" "Interpreter" "parse-modifiers" "list" "modifiers" "meta?" "receive" "form")}
        {Lisp-Entry "compute-signature" #f 68 16 68 33 ("get-output-string" "java-type" "type" "function" "for-each" "format" "open-output-string" "printer" "let" "parameter-types" "return-type")}
        {Lisp-Entry "java-type" #f 80 16 80 25 ("Interpreter" "parse-specifier" "java-typeref" "specifier")}
        {Lisp-Entry "java-typeref" #f 85 16 85 28 ("error" "java-reference-type" "either" "else" "java-array-type" "javaarray" "javastring" "javadouble" "javafloat" "javalong" "javaint" "javashort" "javachar" "javabyte" "javabool" "javavoid" "case" "get-reference" "reference" "let" "typeref")}
        {Lisp-Entry "java-array-type" #f 104 16 104 31 ("java-typeref" "format" "get-parameters" "car" "let" "typeref")}
        {Lisp-Entry "java-reference-type" #f 110 16 110 35 ("symbol->string" "Java" "period->slash-notation" "format" "symbol?" "when" "reference")}}}})
"JavaScript-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "text" "JavaScript-Explorer.jazz"} 1236813156
    {Lisp-Entry "jazz.language.javascript.text.JavaScript-Explorer" #f 37 9 37 58 ("jazz")
      {Lisp-Entry "JavaScript-Explorer" #f 46 7 46 26 ("C-Explorer")}}})
"JavaScript-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "text" "JavaScript-File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.javascript.text.JavaScript-File-Entry" #f 37 9 37 60 ("jazz")
      {Lisp-Entry "JavaScript-File-Entry" #f 46 7 46 28 ("File-Entry")}}})
"JavaScript-Function-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "text" "JavaScript-Function-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.javascript.text.JavaScript-Function-Entry" #f 37 9 37 64 ("jazz")
      {Lisp-Entry "JavaScript-Function-Entry" #f 46 7 46 32 ("C-Definition-Entry")
        {Lisp-Entry "get-image" #f 54 11 54 20 ("Bitmap-Resource")}}}})
"JavaScript-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "text" "JavaScript-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.javascript.text.JavaScript-Parser" #f 37 9 37 56 ("jazz")
      {Lisp-Entry "JavaScript-Parser" #f 46 7 46 24 ("File-Parser")
        {Lisp-Entry "parse" #f 49 11 49 16 ("parse-definitions" "catalog" "JavaScript-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" #f 53 11 53 28 ("get-output" "length" "0" "naturals" "find-function" "fn" "put" "when" "find-variable" "var" "n" "line" "function" "for-each" "List-Factory" "new" "fact" "char-encoding" "char-encoding:" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "Var" #f 73 12 73 15 ()}
        {Lisp-Entry "find-variable" #f 77 11 77 24 ("subseq" "JavaScript-Variable-Entry" "new" "c-constituent?" "skip" ">" "start:" "skip-whitespace" "col" "start" "let*" "0" "=" "and" "when" "Var" "search" "pos" "cardinality" "len" "let" "n" "line")}
        {Lisp-Entry "Function" #f 95 12 95 20 ()}
        {Lisp-Entry "find-function" #f 99 11 99 24 ("subseq" "JavaScript-Function-Entry" "new" "c-constituent?" "skip" ">" "start:" "skip-whitespace" "col" "start" "let*" "0" "=" "and" "when" "Function" "search" "pos" "cardinality" "len" "let" "n" "line")}}}})
"JavaScript-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "text" "JavaScript-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.javascript.text.JavaScript-Text-Preferences" #f 37 9 37 66 ("jazz")
      {Lisp-Entry "JavaScript-Text-Preferences" #f 50 7 50 34 ("completions:" "Dark-Blue" "keyword-color:" "definition-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "CLike-Text-Preferences")}}})
"JavaScript-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "text" "JavaScript-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.javascript.text.JavaScript-Text-View" #f 37 9 37 59 ("jazz")
      {Lisp-Entry "JavaScript-Text-View" #f 47 7 47 27 ("CLike-Text-View")
        {Lisp-Entry "external-name" #f 50 16 50 29 ("javascript-text" "'javascript-text" "rest")}
        {Lisp-Entry "preferences" #f 54 11 54 22 ("javascript-text" "documents" "get-preferences")}
        {Lisp-Entry "Syntax-Targets" #f 63 14 63 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 66 14 66 29 ()}
        {Lisp-Entry "syntax-targets" #f 70 11 70 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 76 11 76 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "favorite-completions" #f 87 11 87 31 ("javascript-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "Keywords" #f 96 12 96 20 ()}
        {Lisp-Entry "get-keywords" #f 120 11 120 23 ("Keywords")}
        {Lisp-Entry "get-user-macros" #f 129 11 129 26 ("javascript-text" "documents" "get-preferences" "get-macros" "user")}
        {Lisp-Entry "get-user-keywords" #f 133 11 133 28 ("javascript-text" "documents" "get-preferences" "get-keywords" "user")}
        {Lisp-Entry "get-user-types" #f 137 11 137 25 ("javascript-text" "documents" "get-preferences" "get-types" "user")}
        {Lisp-Entry "get-user-definitions" #f 141 11 141 31 ("javascript-text" "documents" "get-preferences" "get-definitions" "user")}}}})
"JavaScript-Variable-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "text" "JavaScript-Variable-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.javascript.text.JavaScript-Variable-Entry" #f 37 9 37 64 ("jazz")
      {Lisp-Entry "JavaScript-Variable-Entry" #f 46 7 46 32 ("C-Definition-Entry")
        {Lisp-Entry "get-image" #f 54 11 54 20 ("Bitmap-Resource")}}}})
"Jazz-Code-Location"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "text" "Jazz-Code-Location.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.text.Jazz-Code-Location" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "Jazz-Code-Location" #f 48 7 48 25 ("Code-Location")
        {Lisp-Entry "module-name" #f 51 8 51 19 ()}
        {Lisp-Entry "sublocation" #f 52 8 52 19 ()}
        {Lisp-Entry "initialize" #f 55 11 55 21 ("setup-location" "nextmethod" "location")}
        {Lisp-Entry "setup-location" #f 60 11 60 25 ("last" "cons" "butlast" "sublocation" "module-name" "set!" "begin" "find-module-source" "compose-name" "apply" "name" "location:" "unknown" "'unknown" "kind:" "Location-Error" "new" "signal" "null?" "if" "cdr" "sub" "car" "split-identifier" "path" "iterate" "let" "location")}
        {Lisp-Entry "print" #f 74 11 74 16 ("format" "sublocation" "module-name" "and" "when" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "edit" #f 82 11 82 15 ("focus-host" "set-visible?" "bring-to-front" "head" "'head" "force-vertical:" "ensure-displayed" "ensure-displayed?:" "set-selection" "range" "text" "frame" "receive" "when" "find-location" "location" "let" "error?" "error?:" "activate-focus?" "activate-focus?:" "workspace" "workspace:")}
        {Lisp-Entry "find-source" #f 95 18 95 29 ("module-name" "find-module-source")}
        {Lisp-Entry "find-location" #f 99 18 99 31 ("values" "cons" "toplevel-location:" "sublocation" "location-range" "range" "Jazz-Text-View" "is?" "get-guest" "text" "when" "module-name" "find-module" "frame" "let" "error?" "error?:" "workspace" "workspace:")}
        {Lisp-Entry "find-module" #f 109 11 109 22 ("location:" "unknown" "'unknown" "kind:" "Location-Error" "new" "signal" "when" "visible?:" "Jazz-Text-View" "class:" "edit-document" "either" "find-module-source" "source" "get-application" "appl" "let*" "error?" "error?:" "workspace" "workspace:" "module-name")}}}})
"Jazz-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "text" "Jazz-Explorer.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.text.Jazz-Explorer" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Jazz-Explorer" #f 49 7 49 20 ("Lisp-Explorer")
        {Lisp-Entry "Modifiers" #f 52 14 52 23 ("value" "call" "exec" "post" "deprecated" "unimplemented" "synchronized" "inline" "abstract" "chained" "virtual" "final" "primitive" "public" "protected" "package" "private" "meta" "dialect")}
        {Lisp-Entry "get-modifiers" #f 56 11 56 24 ("Modifiers")}
        {Lisp-Entry "get-syntax" #f 60 11 60 21 ("jazz" "'jazz")}
        {Lisp-Entry "forward-in" #f 69 18 69 28 ("set-end" "exit-list" "intern-marked-symbol" "package" "forward-expr" "skip-forward" "enter-list" "and" "if" "get-end" "copy" "e" "let")}
        {Lisp-Entry "forward-category" #f 81 18 81 34 ("collect-categories-keywords" "list" "global-value" "symbol-bound?" "essay" "category" "get-end" "end:" "get-start" "start:" "get-marked" "format" "message:" "Explore-Error" "new" "signal" "in-manifest?" "not" "or" "name" "symbol" "'symbol" "get-kind" "eq?" "forward-modifiers" "meta?" "intern-marked-symbol" "kind" "let" "remotable-stub" "interface" "class" "find-marked-symbol" "memq?" "forward-expr" "enter-list" "and" "when")}
        {Lisp-Entry "forward-category-keywords" #f 97 11 97 36 ("set-end" "set-start" "when" "implements" "extends" "metaclass" "remotable-stub" "interface" "class" "library" "module" "memq?" "or" "find-marked-symbol" "set!" "begin" "forward-expr" "and" "while" "get-end" "previous" "keyword" "let" "proc")}
        {Lisp-Entry "collect-categories-keywords" #f 113 11 113 38 ("get-output" "get-marked" "read-string-element" "resolve-categories" "put" "keyword" "function" "forward-category-keywords" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "resolve-categories" #f 122 11 122 29 ("load" "map" "autoload" "symbol?" "if" "names")}
        {Lisp-Entry "forward-location" #f 133 18 133 34 ("forward-numeric" "forward-definition" "symbol?" "forward-form" ":form" "forward-new-form" ":new-form" "meta" "'meta" "eq?" "unless" "else" "either" "location:" "bad" "'bad" "kind:" "Location-Error" "new" "signal" "enter-composite" "not" "1" "and" "cdr" "set!" "forward-expr" "forward" "eqv?" "cond" "0" "char-forward" "c0" "forward-whites" "get-start" "set-end" "car" "ref" "not-null?" "while" "scan" "let" "toplevel-location" "toplevel-location:" "location")}
        {Lisp-Entry "forward-new-form" #f 168 11 168 27 ("get-start" "set-end" "forward-category-keywords" "toplevel-location" "toplevel-location:")}
        {Lisp-Entry "forward-form" #f 173 11 173 23 ("'form" "either" "location:" "unknown" "'unknown" "kind:" "Location-Error" "new" "signal" "forward-valid-expr" "when" "form" "form-expr?" "not" "while" "toplevel-location" "toplevel-location:")}
        {Lisp-Entry "forward-definition" #f 179 11 179 29 ("either" "location:" "unknown" "'unknown" "kind:" "Location-Error" "new" "signal" "forward-valid-expr" "when" "definition-only-name" "neq?" "definition-expr?" "not" "or" "while" "toplevel-location" "toplevel-location:" "name")}
        {Lisp-Entry "forward-numeric" #f 186 11 186 26 ("decrease!" "either" "location:" "unknown" "'unknown" "kind:" "Location-Error" "new" "signal" "forward-valid-expr" "not" "when" "0" ">=" "while" "toplevel-location" "toplevel-location:" "n")}
        {Lisp-Entry "forward-valid-expr" #f 193 11 193 29 ("else" "named-comment" "'named-comment" "eq?" "cond" "forward-expr" "kind" "let")}
        {Lisp-Entry "jazz-declaration?" #f 207 18 207 35 ("remotable-stub" "interface" "class" "library" "module" "form-expr?")}
        {Lisp-Entry "jazz-module-parameters" #f 211 14 211 36 ("require")}
        {Lisp-Entry "jazz-library-parameters" #f 214 14 214 37 ()}
        {Lisp-Entry "jazz-class-keywords" #f 217 14 217 33 ("attributes" "implements" "extends" "metaclass")}
        {Lisp-Entry "jazz-interface-keywords" #f 220 14 220 37 ("attributes" "extends" "metaclass")}
        {Lisp-Entry "jazz-declaration" #f 224 18 224 34 ("set-end" "set-start" "Range$Cell$" "new" "prog1" "jazz-forward-declaration" "end" "e" "start" "copy" "s" "let")}
        {Lisp-Entry "jazz-forward-declaration" #f 233 18 233 42 ("jazz-forward-interface-declaration" "interface" "jazz-forward-class-declaration" "class" "jazz-forward-library-declaration" "library" "jazz-forward-module-declaration" "module" "case" "jazz-symbol" "type" "let" "forward-expr" "enter-list" "start" "set-end")}
        {Lisp-Entry "jazz-forward-module-declaration" #f 245 11 245 42 ("jazz-module-parameters" "jazz-forward-declaration-parameters" "forward-expr" "forward-modifiers")}
        {Lisp-Entry "jazz-forward-library-declaration" #f 251 11 251 43 ("jazz-library-parameters" "jazz-forward-declaration-parameters" "forward-expr" "forward-modifiers")}
        {Lisp-Entry "jazz-forward-class-declaration" #f 258 11 258 41 ("jazz-class-keywords" "jazz-forward-declaration-keywords" "forward-expr" "forward-modifiers")}
        {Lisp-Entry "jazz-forward-interface-declaration" #f 264 11 264 45 ("jazz-interface-keywords" "jazz-forward-declaration-keywords" "forward-expr" "forward-modifiers")}
        {Lisp-Entry "jazz-forward-declaration-parameters" #f 270 11 270 46 ("exit-list" "begin" "memq?" "jazz-symbol" "expr" "symbol" "'symbol" "enter-list" "get-end" "e" "get-start" "s" "list" "'list" "kind" "eq?" "if" "forward-expr" "set-end" "done" "define" "end" "copy" "finish" "iterate" "let" "parameters")}
        {Lisp-Entry "jazz-forward-declaration-keywords" #f 293 11 293 44 ("begin" "memq?" "jazz-symbol" "expr" "symbol" "'symbol" "kind" "eq?" "if" "forward-expr" "set-end" "done" "define" "end" "copy" "finish" "iterate" "let" "keywords")}
        {Lisp-Entry "jazz-symbol" #f 309 11 309 22 ("get-marked" "string->symbol")}
        {Lisp-Entry "Jazz-Toplevels" #f 318 14 318 28 ("datacontainer" "attributes" "java-method" "java-external" "com-method" "com-external" "com-interface" "com-class" "c-external" "external" "intrinsic" "specific" "generic" "c-definition" "c-structure" "structure" "c-type" "c-include" "c-enumeration" "c-constant" "global" "enumeration" "constant" "form" "property" "slot" "inline" "method" "syntax" "macro" "definition" "export" "import" "require" "remotable-stub" "interface" "class" "library" "module")}
        {Lisp-Entry "definition-name?" #f 322 11 322 27 ("Jazz-Toplevels" "memq?" "name")}
        {Lisp-Entry "walk-declaration" #f 331 11 331 27 ("exit-list" "unless" "walk-unknown" "else" "walk-datacontainer" "datacontainer" "walk-java-method" "java-method" "walk-java-external" "java-external" "walk-com-external" "com-external" "c-external" "walk-external" "external" "walk-intrinsic" "intrinsic" "walk-specific" "specific" "walk-generic" "generic" "walk-c-definition" "c-definition" "walk-c-structure" "c-structure" "walk-structure" "structure" "walk-type" "c-type" "walk-enumeration" "enumeration" "walk-constant" "constant" "walk-c-include" "c-include" "walk-c-named-declare" "c-named-declare" "walk-c-declare" "c-declare" "walk-c-initialize" "c-initialize" "walk-c-enumeration" "c-enumeration" "walk-c-constant" "c-constant" "walk-global" "global" "walk-form" "form" "walk-property" "property" "c-slot" "walk-slot" "slot" "inline" "c-method" "pattern" "walk-method" "method" "syntax" "macro" "walk-macro" "%macro" "walk-define-macro" "define-macro" "walk-specialize" "specialize" "walk-definition" "definition" "walk-define" "define" "walk-attributes" "walk-native" "native" "walk-properties" "properties" "walk-proclaim" "proclaim" "walk-declare" "declare" "import" "export" "require" "profiles" "products" "project" "install" "walk-import" "root" "package" "repository" "remotable-stub" "interface" "class" "walk-category" "walk-begin" "begin" "case" "code" "'code" "start" "attributes" "includes" "exports" "imports" "dialect" "module" "library" "on" "has" "implements" "extends" "metaclass" "find-marked-symbol" "memq?" "symbol" "'symbol" "kind" "eq?" "and" "forward-expr" "if" "end" "get-row" "=" "not" "or" "when" "enter-list" "list?" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-modifiers" #f 411 11 411 25 ("set!" "start" "get-modifiers" "find-marked-symbol" "memq?" "forward-constituent" "get-row" "=" "not" "or" "jazz-constituent?" "and" "when" "0" "char-forward" "c0" "set-start" "forward-whites" "iterate" "end" "copy" "old" "let" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-begin" #f 428 11 428 21 ("walk-declarations" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-category" #f 432 18 432 31 ("walk-declarations" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-import" #f 442 11 442 22 ("end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-declare" #f 446 11 446 23 ("end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-proclaim" #f 450 11 450 24 ("end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-properties" #f 454 11 454 26 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-native" #f 460 11 460 22 ("walk-expressions" "symbol-documented?" "set!" "get-marked" "name" "get-row" "=" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "forward-whites" "walk-modifiers" "end" "start" "entry" "string-length" "1" "+" "substring" "not" "if" "reversed?:" "find" "pos" "let" "str" "parse-identifier" "define" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-attributes" #f 479 11 479 26 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define" #f 485 11 485 22 ("walk-declarations" "exit-list" "walk-parameters" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-definition" #f 503 11 503 26 ("code" "'code" "walk-expressions" "exit-list" "walk-parameters" "or" "enter-list" "else" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "not" "cond" "0" "char-forward" "eqv?" "list?" "=" "when" "forward-whites" "walk-modifiers" "start" "end" "get-row" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-specialize" #f 525 11 525 26 ("code" "'code" "walk-expressions" "exit-list" "walk-parameters" "or" "enter-list" "else" "set!" "cond" "list?" "symbol-documented?" "get-marked" "as" "'as" "find-marked-symbol" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "0" "char-forward" "eqv?" "not" "=" "when" "forward-whites" "walk-modifiers" "start" "end" "get-row" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-macro" #f 553 11 553 28 ("walk-declarations" "exit-list" "code" "'code" "walk-expressions" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-macro" #f 571 11 571 21 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "enter-list" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-method" #f 586 18 586 29 ("code" "'code" "walk-expressions" "exit-list" "walk-parameters" "forward-whites" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "enter-list" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-slot" #f 602 11 602 20 ("walk-expressions" "code" "'code" "walk-expression" "accessors" "setter" "getter" "initialize" "memq?" "if" "while" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "=" "when" "forward-whites" "walk-modifiers" "start" "end" "get-row" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-property" #f 620 11 620 24 ("walk-expressions" "code" "'code" "walk-expression" "accessors" "setter" "getter" "initialize" "memq?" "if" "while" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-form" #f 635 11 635 20 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-global" #f 641 11 641 22 ("find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-constant" #f 650 11 650 26 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-enumeration" #f 661 11 661 29 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-initialize" #f 672 11 672 28 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-declare" #f 678 11 678 25 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-named-declare" #f 684 11 684 31 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-include" #f 690 11 690 25 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-constant" #f 696 11 696 24 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-enumeration" #f 707 11 707 27 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-type" #f 718 11 718 20 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-structure" #f 729 11 729 25 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-structure" #f 740 11 740 27 ("walk-expressions" "exit-list" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "0" "char-forward" "eqv?" "list?" "=" "when" "forward-whites" "walk-modifiers" "start" "end" "get-row" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-definition" #f 759 11 759 28 ("walk-expressions" "exit-list" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "0" "char-forward" "eqv?" "list?" "=" "when" "forward-whites" "walk-modifiers" "start" "end" "get-row" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-generic" #f 778 11 778 23 ("walk-expressions" "exit-list" "walk-parameters" "get-row" "=" "or" "enter-list" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "0" "char-forward" "eqv?" "not" "if" "forward-whites" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-specific" #f 796 11 796 24 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "enter-list" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-intrinsic" #f 810 11 810 25 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "'symbol" "kind" "eq?" "enter-list" "entered?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-external" #f 827 11 827 24 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "'symbol" "kind" "eq?" "and" "enter-list" "entered?" "forward-expr" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-com-external" #f 844 11 844 28 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "'symbol" "kind" "eq?" "enter-list" "entered?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-java-external" #f 861 11 861 29 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "'symbol" "kind" "eq?" "and" "enter-list" "entered?" "forward-expr" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-java-method" #f 878 11 878 27 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "'symbol" "kind" "eq?" "and" "enter-list" "entered?" "forward-expr" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-datacontainer" #f 895 11 895 29 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "forward-expr" "when" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-unknown" #f 905 11 905 23 ("walk-expressions" "code" "'code" "walk-expression" "when" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "symbol-documentation" #f 911 11 911 31 ("get-definition" "and" "when" "doc" "symbol")}
        {Lisp-Entry "symbol-documented?" #f 916 11 916 29 ("symbol-documentation" "doc" "symbol")}
        {Lisp-Entry "highlight-range" #f 925 18 925 33 ("edit?:" "break" "update-view" "get-range" "text" "set-selection")}}}})
"Jazz-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "builder" "Jazz-File.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.builder.Jazz-File" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Jazz-File" #f 46 7 46 16 ("Project-File")
        {Lisp-Entry "tester?" #f 49 12 49 19 ("generate")}
        {Lisp-Entry "print" #f 52 11 52 16 ("name" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-product" #f 66 18 66 29 ("project" "Product" "self" "is?" "if")}
        {Lisp-Entry "get-class-presentation" #f 79 16 79 38 ()}
        {Lisp-Entry "property-presentation" #f 83 16 83 37 ("nextmethod" "else" "tester?" "field-name" "case" "property")}
        {Lisp-Entry "can-rename-component?" #f 89 11 89 32 ()}
        {Lisp-Entry "get-categorized-properties" #f 93 11 93 37 ("tester?" "build?" "source")}
        {Lisp-Entry "get-row-instance" #f 97 11 97 27 ("nextmethod" "else" "Boolean-Row" "new" "tester?" "field-name" "case" "property")}}}})
"Jazz-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "parser" "Jazz-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.parser.Jazz-Parser" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Jazz-Parser" #f 47 7 47 18 ("Lisp-Parser")
        {Lisp-Entry "explorer-class" #f 50 11 50 25 ("Jazz-Explorer" "file")}
        {Lisp-Entry "text-view-class" #f 54 11 54 26 ("Jazz-Text-View")}}}})
"Jazz-Plain-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "text" "Jazz-Plain-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.text.Jazz-Plain-Text-View" #f 37 9 37 53 ("jazz")
      {Lisp-Entry "Jazz-Plain-Text-View" #f 46 7 46 27 ("Plain-Text-View")
        {Lisp-Entry "install" #f 49 11 49 18 ("get-comment-color" "Comment" "'Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "colorize-comments" #f 61 11 61 28 ("Title" "'Title" "4" "+" "Comment" "'Comment" "stylize" "not" "if" "title?" "end" "start" "function" "for-each-comment" "text-beginning" "end:" "self" "Jazz-Explorer" "new" "expl" "let" "jazz" "'jazz" "type-heuristic" "eq?" "when" "rest")}
        {Lisp-Entry "recolorize-text" #f 72 11 72 26 ("recolorize-row" "for-each" "1" "+" "get-row" "naturals" "range" "let" "jazz" "'jazz" "type-heuristic" "eq?" "when" "end-row" "start")}
        {Lisp-Entry "recolorize-row" #f 78 11 78 25 ("recolorize-comments" "row")}
        {Lisp-Entry "recolorize-comments" #f 82 11 82 30 ("Title" "'Title" "Cell" "new" "Comment" "'Comment" "stylize" "begin" "title-comment-string" "subseq" "=" "<" "if" "4" "+" "title-end" "let" "20" "<=" "when" "search" "and" "comment" "syntax" "comment-string" "cardinality" "len" "paragraph-string" "line" "let*" "row")}}}})
"Jazz-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "syntax" "Jazz-Syntax.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.syntax.Jazz-Syntax" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Jazz-Syntax" #f 47 7 47 18 ("Lisp-Syntax")
        {Lisp-Entry "translate-key" #f 55 11 55 24 ("translate-lisp-key" "jazz-text" "documents" "get-preferences" "get-translate-keys?" "not" "if" "key")}
        {Lisp-Entry "get-constituent-test" #f 66 11 66 31 ("jazz-constituent?")}}}})
"Jazz-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "text" "Jazz-Text-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.text.Jazz-Text-Actions" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Jazz-Text-Actions" #f 47 7 47 24 ("on-set-read/write" "set-read/write" "on-remove-break" "remove-break" "F9" "on-add-break" "add-break" "F12" ":shift" "on-edit-documentation" "edit-documentation" "F1" "on-present-documentation" "present-documentation" ":control" "Shortcut" "shortcut:" "on-design-form" ":focus" "Event-Handler" "action-handler:" "design-form" "name:" "Actions")}}})
"Jazz-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "text" "Jazz-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.jazz.text.Jazz-Text-Preferences" #f 37 9 37 54 ("jazz")
      {Lisp-Entry "Jazz-Text-Preferences" #f 51 7 51 28 ("completions:" "Dark-Orange" "feature-color:" "quotation-color:" "named-string-color:" "delimited-string-color:" "string-color:" "boolean-color:" "number-color:" "char-color:" "Ochre" "literal-color:" "specifier-color:" "Dark-Purple" "tag-color:" "keyword-color:" "undocumented-declaration-color:" "Dark-Green" "documented-declaration-color:" "Dark-Blue" "declaration-keyword-color:" "named-comment-color:" "Text-Gray" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Lisp-Text-Preferences")
        {Lisp-Entry "named-comment-color" #f 54 12 54 31 ("generate")}
        {Lisp-Entry "documented-declaration-color" #f 55 12 55 40 ("generate")}
        {Lisp-Entry "undocumented-declaration-color" #f 56 12 56 42 ("generate")}
        {Lisp-Entry "literal-color" #f 57 12 57 25 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 241 11 241 37 ("translate-keys?" "string-color" "specifier-color" "keyword-color" "undocumented-declaration-color" "documented-declaration-color" "named-comment-color" "expr-comment-color" "comment-color" "title-color" "completions")}
        {Lisp-Entry "get-row-instance" #f 245 11 245 27 ("nextmethod" "else" "Boolean-Row" "translate-keys?" "Completion-List-Row" "completions" "Color-Row" "new" "string-color" "specifier-color" "keyword-color" "undocumented-declaration-color" "documented-declaration-color" "named-comment-color" "expr-comment-color" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Jazz-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "text" "Jazz-Text-View.jazz"} 1237238073
    {Lisp-Entry "jazz.language.jazz.text.Jazz-Text-View" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Jazz-Text-View" #f 58 7 58 21 ("tooltip?:" "Lisp-Text-View")
        {Lisp-Entry "install" #f 65 11 65 18 ("highlight:" "Break" "'Break" "Walk-Fatal" "'Walk-Fatal" "Orange" "Walk-Warning" "'Walk-Warning" "Red" "Color" "frame:" "Reference" "'Reference" "get-feature-color" "Feature" "'Feature" "get-literal-color" "Literal" "'Literal" "get-quotation-color" "Quotation" "'Quotation" "get-named-string-color" "Named-String" "'Named-String" "get-delimited-string-color" "Delimited-String" "'Delimited-String" "get-string-color" "String" "'String" "get-boolean-color" "Boolean" "'Boolean" "get-number-color" "Number" "'Number" "get-char-color" "Char" "'Char" "get-specifier-color" "Specifier" "'Specifier" "get-tag-color" "Tag" "'Tag" "get-keyword-color" "Keyword" "'Keyword" "get-undocumented-declaration-color" "Undocumented-Declaration" "'Undocumented-Declaration" "get-documented-declaration-color" "Documented-Declaration" "'Documented-Declaration" "get-declaration-keyword-color" "Declaration-Keyword" "'Declaration-Keyword" "get-named-comment-color" "Named-Comment" "'Named-Comment" "get-expr-comment-color" "Expr-Comment" "'Expr-Comment" "get-comment-color" "Comment" "'Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 93 16 93 29 ("jazz-text" "'jazz-text" "rest")}
        {Lisp-Entry "default-extension" #f 97 11 97 28 ()}
        {Lisp-Entry "extensions" #f 101 11 101 21 ()}
        {Lisp-Entry "new-syntax" #f 105 11 105 21 ("Jazz-Syntax" "new")}
        {Lisp-Entry "focus-actions" #f 114 11 114 24 ("nextmethod" "jazz-text" "'jazz-text" "find-actions" "cons")}
        {Lisp-Entry "get-context-menu" #f 124 11 124 27 ("layout-menu" "set-read/write" "'set-read/write" "locate" "set-visible?" "read/write?" "not" "or" "when" "get-moniker" "moniker" "get-controller" "controller" "Jazz-Text-Menu" "new" "menu" "let*")}
        {Lisp-Entry "on-design-form" #f 140 11 140 25 ("client:" "new-frame" "Manager-View" "View-Editor" "View" "is?" "editor-class" "new" "component" "set-visible?" "bring-to-front" "begin" "find-editor" "essay" "frame" "get-self-form" "form" "error" "Component" "subtype?" "not" "if" "autoload" "class" "current-category-name" "name" "let*" "on-design-form" "'on-design-form" "unimplemented" "evt")}
        {Lisp-Entry "find-editor" #f 158 11 158 22 ("get-children" "continuation-return" "get-form" "eq?" "and" "get-designer" "designer" "Editor-View" "get-guest" "guest" "Host-View" "is?" "when" "frame" "for-each" "return" "function" "continuation-capture" "get-stage" "stage" "let" "form")}
        {Lisp-Entry "on-copy-list" #f 173 11 173 23 ("length" "user-message" "push-clipboard-list" "get-selected-string" "read-string-content" ":reader" "->string" "object" "function" "map" "list" "get-application" "appl" "let" "evt")}
        {Lisp-Entry "get-tooltip-context" #f 185 11 185 30 ("Label" "name:" "Font" "font:" "bounds:" "rect-height" "-10" "Point" "rect-position" "+" "position:" "text:" "view:" "Tooltip-Context" "in-rect?" "get-end" "get-col" "get-start" "get-row" "row-range-rect" "bounds" "present-location" "essay" "text" "range-location" "location" "get-range" "range" "symbol" "'symbol" "eq?" "get-kind" "kind" "let" "outer-composite?:" "composite?:" "outer-expr" "err" "Explore-Error" "catch" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "view->text" "pos" "let*" "debugging?" "Debugger" "'Debugger" "in-manifest?" "and" "when" "view")}
        {Lisp-Entry "default-preferences" #f 214 14 214 33 ("completions:" "Dark-Blue" "keyword-color:" "Dark-Green" "undocumented-declaration-color:" "documented-declaration-color:" "named-comment-color:" "Text-Gray" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "form>>")}
        {Lisp-Entry "preferences" #f 219 11 219 22 ("jazz-text" "documents" "get-preferences")}
        {Lisp-Entry "declaration-style" #f 223 11 223 28 ("Undocumented-Declaration" "'Undocumented-Declaration" "Documented-Declaration" "'Documented-Declaration" "if" "documented?")}
        {Lisp-Entry "colorize-tag" #f 229 11 229 23 ("Tag" "'Tag" "apply-coloring" "end" "start" "colorizer")}
        {Lisp-Entry "colorize-specifier" #f 233 11 233 29 ("Specifier" "'Specifier" "apply-coloring" "end" "start" "colorizer")}
        {Lisp-Entry "recolorize-row" #f 237 11 237 25 ("recolorize-named-comments" "nextmethod" "row")}
        {Lisp-Entry "recolorize-named-comments" #f 242 11 242 36 ("get-start" "Named-Comment" "'Named-Comment" "apply-style" "get-row" "=" "symbol" "'symbol" "eq?" "when" "get-end" "end" "forward-expr" "kind" "end:" "self" "explorer-class" "expl" "+" "Cell" "new" "pos" "1" "-" "element" "eqv?" ">" "and" "unless" "set!" "if" "start:" "search" "comment" "let" "not" "while" "done?" "0" "col" "cardinality" "len" "paragraph-string" "line" "let*" "row")}
        {Lisp-Entry "Specials" #f 266 12 266 20 ("xml>>" "xsl-transformation" "with-closed" "with" "while" "when" "unwind-protect" "unless" "typecase" "template" "syntax" "synchronize" "substitution" "structure" "specific" "repository" "remotable-stub" "receive" "prog1" "profile" "pattern" "parameterize" "package" "new" "module" "method" "macro" "library" "letrec" "let*" "let" "lambda" "jml>>" "jml" "interface" "inline" "in" "if" "generic" "function" "form>>" "form" "enumeration" "ecase" "dialect" "definition" "define" "datacontainer" "c-structure" "5" "c-definition" "c-enumeration" "c-constant" "cotry" "constant" "-1" "comment" "com-method" "com-interface" "class" "catch" "case" "3" "call-with-catch" "block" "2" "bind" "0" "begin" "attributes" "attribute" "assert" "1" "annotate")}
        {Lisp-Entry "get-specials" #f 337 11 337 23 ("Specials")}
        {Lisp-Entry "evaluate-selection" #f 346 11 346 29 ("evaluate-range" ".1" "sleep" ":wait" "with-cursor" "when" "current-definition-range" "range" "let" "function" "with-safe-explore")}
        {Lisp-Entry "evaluate-buffer" #f 357 11 357 26 ("buffer-selection" "evaluate-range" ".1" "sleep" "function" ":wait" "with-cursor")}
        {Lisp-Entry "evaluate-range" #f 364 11 364 25 ("'<expr>" "either" "name" "function" "map" "user-message" "evaluate-expressions" "package-expressions" "col" "line" "str" "receive" "collect-names" "names" "get-locat-container" "container" "get-string" "expressions" "collect-declarations" "declarations" "bell" "not" "if" "get-focused-process" "debugged" "let" "range")}
        {Lisp-Entry "collect-declarations" #f 380 11 380 31 ("cons" "set!" "jazz-declaration" "declaration" "jazz-declaration?" "when" "outer-expr" "while" "range:" "self" "Jazz-Explorer" "new" "expl" "declarations" "let" "range")}
        {Lisp-Entry "collect-names" #f 390 11 390 24 ("string:" "read-text-forms" "form-name" "form" "function" "map" "self" "explorer-class" "new" "expl" "let" "expressions" "range")}
        {Lisp-Entry "package-expressions" #f 397 11 397 30 ("get-output-string" "values" "length" "string" "split" "cardinality" "newline" "not" "cdr" "null?" "last?" "line" "pair" "for-each-pair" "get-string" "declaration" "function" "for-each" "0" "1" "+" "set!" "-" "make-string" "display" "begin" "=" "iterate" "c" "r" "rng" "fill" "define" "open-output-string" "output" "col" "row" "get-col" "first-col" "get-start" "get-row" "first-row" "car" "not-null?" "if" "first" "let" "expressions" "range" "declarations")}
        {Lisp-Entry "on-add-break" #f 443 18 443 30 ("1" "+" "get-start" "Break" "'Break" "apply-style" "add-break" "error" "not" "if" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "range-location" "loc" "current-expr-range" "range" "let*" "evt")}
        {Lisp-Entry "on-remove-break" #f 454 18 454 33 ("get-row" "get-paragraph" "invalidate-paragraph" "default-style" "set-style" "when" "1" "get-start" "+" "get-run-at" "run" "let" "remove-break" "bell" "not" "if" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "range-location" "loc" "current-expr-range" "range" "let*" "evt")}
        {Lisp-Entry "present-location" #f 473 11 473 27 ("present-expr" "current-debugger" "active-frame" "frame" "let" "and" "when" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "location")}
        {Lisp-Entry "present-expr" #f 481 11 481 23 ("present-unknown" "else" "present-constant" "Symbol" "present-field" "Field-Reference" "present-variable" "Variable" "present-self" "Self" "Manifest-Reference" "present-global" "Global-Reference" "typecase" "class-of" "format" "object" "frame")}
        {Lisp-Entry "present-global" #f 495 11 495 25 ("self" "dispatch" "format" "object" "frame")}
        {Lisp-Entry "present-self" #f 499 11 499 23 ("present-value" "format" "frame-context" "context" "get-address" "Interpreter" "frame-closure-frame" "binder" "let*" "when" "object" "frame")}
        {Lisp-Entry "present-variable" #f 509 11 509 27 ("present-value" "variable-symbol" "format" "variable-value" "value" "let" "eq?" "test:" "key:" "find-in" "variable" "" "variable-base" "frame-variables" "variables" "Interpreter" "frame-closure-frame" "binder" "let*" "get-address" "set!" "when" "var" "frame")}
        {Lisp-Entry "present-field" #f 527 11 527 24 ("present-value" "field-name" "format" "get-value" "value" "let" "definition-method?" "definition?" "and" "unless" "field-creator" "is?" "field-reference-form" "field" "frame-context" "context" "Interpreter" "frame-closure-frame" "binder" "let*" "get-address" "set!" "when" "reference" "frame")}
        {Lisp-Entry "present-constant" #f 543 11 543 27 ("format" "object" "frame")}
        {Lisp-Entry "present-unknown" #f 547 11 547 26 ("object" "frame")}
        {Lisp-Entry "present-value" #f 551 11 551 24 ("format" "else" "procedure?" "cond" "value")}
        {Lisp-Entry "current-location" #f 560 11 560 27 ("get-start" "position->location")}
        {Lisp-Entry "position->location" #f 564 11 564 29 ("range-location" "get-range" "range" "outer-composite?:" "outer-expr" "when" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "location-class" #f 571 11 571 25 ("cdr" "class-of" "category-field" "definition-value" "set!" "meta" "'meta" "eq?" "name" "function" "for-each" "meta?" "let" "error" "not" "if" "global-value" "class" "car" "class-name" "let*" "load?" "load?:" "loc")}
        {Lisp-Entry "split-location" #f 587 11 587 25 ("get-output" "values" "cdr" "set!" "put" "car" "symbol?" "while" "List-Factory" "new" "definition" "scan" "let" "location")}
        {Lisp-Entry "definition-name-info" #f 596 11 596 31 ("else" "2" "external?" "procedure?" "definition-value" "value" "let" "field?" "field-modifiers-count" "+" "slot?" "1" "values" "category?" "cond" "definition-name-info" "'definition-name-info" "unimplemented" "object")}
        {Lisp-Entry "definition-name-location?" #f 612 11 612 36 ("0" "and" "list" "=" "or" "inside-allowed?" "skip" "receive" "when" "definition-name-info" "info" "let" "internal-location" "object")}
        {Lisp-Entry "range-location" #f 620 11 620 25 ("else" "meta" "'meta" "cond" "cons" "loc" "definition-name" "name" "meta?" "package?" "receive" "definition-expr?" "def?" "set!" "if" "outer-expr" "rank" "not" "while" "done?" "previous-def?" "location" "get-end" "end:" "get-start" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "range")}
        {Lisp-Entry "location-range" #f 644 18 644 32 ("get-range" "forward-location" "text-beginning" "end:" "self" "Jazz-Explorer" "new" "expl" "let" "toplevel-location" "toplevel-location:" "location")}
        {Lisp-Entry "on-edit-documentation" #f 655 11 655 32 ("edit-documentation" "get-application" "appl" "bell" "not" "if" "current-symbol" "symbol" "let" "evt")}
        {Lisp-Entry "on-edit-documentation" #f 664 11 664 32 ("current-location" "edit-documentation" "evt")}
        {Lisp-Entry "edit-documentation" #f 669 11 669 29 ("edit-field-documentation" "field-reference-form" "edit-field-reference-documentation" "Field-Reference" "is?" "and" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "car" "autoload" "bell" "null?" "if" "location")}
        {Lisp-Entry "edit-field-reference-documentation" #f 680 11 680 45 ("edit-documentation" "field-name" "field-creator" "type-name" "list" "location" "get-application" "appl" "let" "field")}
        {Lisp-Entry "edit-field-documentation" #f 687 11 687 35 ("bell" "self" "edit-documentation" "definition-name-location?" "and" "if" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "split-location" "internal-location" "field-location" "receive" "get-application" "appl" "let" "location")}
        {Lisp-Entry "on-present-documentation" #f 696 11 696 35 ("current-symbol" "present-documentation" "evt")}
        {Lisp-Entry "present-documentation" #f 700 11 700 32 ("border:" "alternate-position:" "popup" "DocToText-Transformation" "parse-jml" "transform-jml" "set-text" "get-display" "display" "entry" "'entry" "style:" "edge" "'edge" "solid" "'solid" "border-type:" "5" "Rect" "border-insets:" "Border-View" "border" "alternate" "100" "Point" "pos" "'text" "locate" "text" "300" "600" "Dimension" "size:" "Documentation-View" "new" "view" "present-text" "jml" "open-java-documentation" "JVM" "class-exists?" "symbol->string" "classname" "let" "get-documentation" "doc" "get-application" "appl" "let*" "bell" "not" "if" "present-documentation" "'present-documentation" "unimplemented" "symbol")}
        {Lisp-Entry "open-java-documentation" #f 725 11 725 34 ("bell" "return" "shell-execute" "exists?" "when" "format" "list" "append" "new-file" "file" "let" "dir" "function" "for-each" "Java" "parse-classname" "name" "package" "receive" "java-apidocs" "apidocs" "get-profile" "profile" "get-application" "appl" "let*" "open-java-documentation" "'open-java-documentation" "unimplemented" "classname")}
        {Lisp-Entry "show-arguments" #f 751 11 751 25 ("show-category-fields" "show-method-arguments" "0" "char-backward" "case" "symbol" "'symbol" "get-kind" "=" "backward-expr" "and" "get-end" "end:" "get-start" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "empty-selection?" "when")}
        {Lisp-Entry "show-method-arguments" #f 762 11 762 32 ("show-symbol-arguments" "uses" "'uses" "getf" "imports" "find-symbol" "symbol" "keywords" "meta?" "kind" "category" "bind" "category-info" "in" "receive" "when" "current-toplevel-info" "info" "get-marked" "name" "let" "expl")}
        {Lisp-Entry "show-symbol-arguments" #f 776 11 776 32 ("Interpreter" "closure-function" "Closure" "show-function-arguments" "%function" "show-external-arguments" "External" "typecase" "definition-value" "value" "when" "find-in" "field" "let" "show-symbol-arguments" "'show-symbol-arguments" "unimplemented" "packages" "class" "symbol")}
        {Lisp-Entry "show-external-arguments" #f 791 11 791 34 ("proxy-result" "proxy-rest?" "if" "List" "get-type" "param" "function" "Interpreter" "proxy-parameters" "accumulate" "type-name" "map" "user-message" "external" "symbol")}
        {Lisp-Entry "show-function-arguments" #f 800 11 800 34 ("get-output-string" "user-message" "present-parameters" "'rest" "rest" "open-output-string" "printer" "Interpreter" "function-parameters" "parameters" "let*" "function" "symbol")}
        {Lisp-Entry "present-parameters" #f 810 11 810 29 ("else" "cdr" "present-parameters" "format" "car" "present-parameter" "pair?" "cond" "when" "printer" "bind" "parameters")}
        {Lisp-Entry "present-parameter" #f 822 11 822 28 ("else" "Interpreter" "variable-symbol" "format" "Variable" "typecase" "printer" "parameter")}
        {Lisp-Entry "find-in" #f 830 11 830 18 ("continuation-return" "when" "class-of" "category-field" "field" "Interpreter-Services" "get-interpreted-category" "either" "type-name" "name" "let*" "package" "for-each" "return" "function" "continuation-capture" "packages" "class" "symbol")}
        {Lisp-Entry "show-category-fields" #f 843 11 843 31 ("show" "500" "Point" "position:" "self" "owner-text:" "Completion-Popup" "new" "popup" "let")}
        {Lisp-Entry "explorer-class" #f 854 11 854 25 ("Jazz-Explorer")}
        {Lisp-Entry "current-class-form" #f 863 18 863 36 ("values" "Form" "fourth" "is?" "class-form" "'class-form" "third" "meta" "'meta" "second" "definition" "'definition" "first" "eq?" "4" "and" "car" "form" "1" "length" "=" "read-text-forms" "forms" "current-toplevel-info" "info" "when" "current-definition-range" "function" "with-safe-explore" "range" "let")}
        {Lisp-Entry "current-classes" #f 884 11 884 26 ("meta" "'meta" "cons" "set!" "definition-name" "name" "meta?" "package?" "receive" "category-expr?" "when" "outer-expr" "while" "classes" "range:" "self" "Jazz-Explorer" "new" "expl" "let" "range")}
        {Lisp-Entry "current-category-name" #f 896 11 896 32 ("keywords" "name" "meta?" "kind" "category" "bind" "current-toplevel-info" "category-info" "in" "receive")}
        {Lisp-Entry "toplevel-expr" #f 903 11 903 24 ("get-range" "set!" "outer-expr" "while" "range" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "edit-symbol-class" #f 916 11 916 28 ("get-application" "edit-class" "in-manifest?" "when" "symbol")}}
      {Lisp-Entry "Documentation-View" #f 928 7 928 25 ("editable?:" "Tooltip" "Color" "background:" "text" "content" "name:" "flat?:" "vscroll?:" "hscroll?:" "fill" "layout-type:" "Layout-View")}
      {Lisp-Entry "Jazz-Text-Menu" #f 943 7 943 21 ("paste" "copy" "view" "french:" "english:" "Locales" "cut" "set-read/write" "show-changes" "text" "show-history" "remove-break" "add-break" "add-to-favorites" "edit-documentation" "edit-references" "edit-definitions" "jazz-text" "design-form" "code-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "evaluate" "name:" "Context-Menu")}}})
"Jedi"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "application" "Jedi.jazz"} 1236978652
    {Lisp-Entry "jedi.application.Jedi" #f 37 9 37 30 ("jazz")
      {Lisp-Entry "Jedi" #f 64 7 64 11 ("IDE")
        {Lisp-Entry "documentation-cataloguer" #f 67 8 67 32 ()}
        {Lisp-Entry "external-name" #f 70 16 70 29 ("jedi" "'jedi" "rest")}
        {Lisp-Entry "process-name" #f 74 11 74 23 ()}
        {Lisp-Entry "process-owner" #f 78 11 78 24 ()}
        {Lisp-Entry "process-copyright" #f 82 11 82 28 ()}
        {Lisp-Entry "process-icon" #f 86 11 86 23 ()}
        {Lisp-Entry "process-version" #f 90 11 90 26 ("beta" "'beta" "Version" "new" "kernel-version" "split-version" "revision" "minor" "major" "receive")}
        {Lisp-Entry "process-email" #f 95 11 95 24 ()}
        {Lisp-Entry "new-toplevel" #f 99 11 99 23 ("Jedi-Toplevel" "new")}
        {Lisp-Entry "initialize-settings" #f 103 11 103 30 ("register-settings" "file:" "Settings" "new" "settings" "set!" "create" "exists?" "unless" "Home" "File" "file" "let")}
        {Lisp-Entry "prepare-aliases" #f 111 11 111 26 ("User" "Profiles" "'Profiles" "register-alias" "nextmethod")}
        {Lisp-Entry "start-process" #f 116 11 116 24 ("jazz" "'jazz" "set-catalog-context" "nextmethod")}
        {Lisp-Entry "finalize-process" #f 121 11 121 27 ("on-workspace" "'on-workspace" "method-name:" "self" "target:" "Event-Handler" "workspace" "'workspace" "add-application-listener" "JDBC-Provider" "SQLServer-Provider" "Access-Provider" "new" "register-provider" "Provider" "'Provider" "in-manifest?" "when" "nextmethod")}
        {Lisp-Entry "persist-preferences?" #f 136 11 136 31 ()}
        {Lisp-Entry "default-preferences" #f 140 11 140 30 ("Jedi-Preferences" "new")}
        {Lisp-Entry "default-bindings" #f 144 11 144 27 ("Jedi-Bindings" "new")}
        {Lisp-Entry "get-search-manager" #f 153 11 153 29 ("search" "'search" "169" "857" "Dimension" "host-size:" "220" "150" "Point" "host-position:" "host-visible?:" "host-title:" "Jedi-Search" "new-palette" "function" "singleton-palette")}
        {Lisp-Entry "mandatory-version" #f 169 11 169 28 ("nextmethod" "else" "4" "access-database" "6" "3" "dao" "0" "8" "Version" "sqlserver" "case" "what")}
        {Lisp-Entry "default-frame-class" #f 182 11 182 30 ("Jazz-Text-View")}
        {Lisp-Entry "known-extension-frame-class" #f 186 11 186 38 ("nextmethod" "else" "Jazz-Text-View" "Jazz-Extensions" "CommonLisp-Text-View" "'CommonLisp-Text-View" "jazz.language.commonlisp" "'jazz.language.commonlisp" "CommonLisp-Extensions" "Scheme-Text-View" "'Scheme-Text-View" "jazz.language.scheme" "'jazz.language.scheme" "Scheme-Extensions" "Java-Text-View" "'Java-Text-View" "jazz.language.java" "'jazz.language.java" "Diff-Text-View" "'Diff-Text-View" "jazz.language.diff" "'jazz.language.diff" "module-autoload" "Jazz-Plain-Text-View" "ci=?" "test:" "member?" "cond" "ext")}
        {Lisp-Entry "edit-file" #f 202 11 202 20 ("nextmethod" "else" "browse-java-jarfile" "browse-java-classfile" "edit-snapshot" "edit-stack" "ci=?" "cond" "get-extension" "ext" "let" "file")}
        {Lisp-Entry "edit-category" #f 211 11 211 24 ("edit" "1" "list" "Jazz-Code-Location" "new" "location" "let" "name")}
        {Lisp-Entry "get-text-class" #f 221 11 221 25 ("Jazz-Text-View")}
        {Lisp-Entry "edit-stack" #f 231 11 231 21 ("debugger" "'debugger" "select-workspace" "get-processes-view" "open-snapshot" "file")}
        {Lisp-Entry "edit-snapshot" #f 242 11 242 24 ("debugger" "'debugger" "select-workspace" "get-processes-view" "open-snapshot" "file")}
        {Lisp-Entry "browse-java-classfile" #f 253 11 253 32 ("browse-classfile" "get-guest" "manager" "Java-Manager" "new-frame" "host" "let*" "file")}
        {Lisp-Entry "browse-java-jarfile" #f 260 11 260 30 ("browse-jarfile" "get-guest" "manager" "Java-Manager" "new-frame" "host" "let*" "file")}
        {Lisp-Entry "get-depot-classes" #f 272 11 272 28 ("VSS-Depot" "list")}
        {Lisp-Entry "persist-usernames?" #f 282 11 282 29 ()}
        {Lisp-Entry "persist-passwords?" #f 286 11 286 29 ()}
        {Lisp-Entry "get-context-text" #f 295 11 295 27 ()}
        {Lisp-Entry "reload-opened-windows" #f 306 11 306 32 ()}
        {Lisp-Entry "reload-component" #f 311 11 311 27 ("nextmethod" "else" "Jazz-Text-View" "jazz-text" "Jedi-Search" "new-frame" "" "apply" "search" "case" "properties" "class")}
        {Lisp-Entry "run-project" #f 323 18 323 29 ("project-run" "wait?" "wait?:" "show-console?" "show-console?:" "command-arguments" "command-arguments:" "command-action" "command-action:" "profile" "profile:" "project")}
        {Lisp-Entry "debug-project" #f 337 18 337 31 ("project-debug" "wait?" "wait?:" "show-console?" "show-console?:" "command-arguments" "command-arguments:" "command-action" "command-action:" "profile" "profile:" "project")}
        {Lisp-Entry "log-exception" #f 351 11 351 24 ("Bitmap-Resource" "image:" "get-message" "log-line" "log-info" "Error" "is?" "if" "clear-results" "get-output-log" "output" "let" "exception")}
        {Lisp-Entry "select-output-log" #f 360 11 360 28 ("Output-Log" "select-palette" "select-first" "select-results" "get-output-log" "output" "let")}
        {Lisp-Entry "initial-console-context" #f 372 11 372 34 ("get-context" "not" "if" "error?:" "console" "tools" "get-preferences" "pref" "let")}
        {Lisp-Entry "get-documentation-cataloguer" #f 384 11 384 39 ("new-documentation-cataloguer" "set!" "get-preferences" "get-documented?" "when" "documentation-cataloguer" "unless")}
        {Lisp-Entry "new-documentation-cataloguer" #f 391 11 391 39 ("add-catalog" "Doc-Catalog" "catalog" "get-name" "name" "read-from-file" "instantiate" "doc" "let*" "when" "get-documentation" "file" "project" "function" "for-each-project" "get-workbench" "workbench" "Cataloguer" "new" "cataloguer" "let")}
        {Lisp-Entry "reload-documentation" #f 405 18 405 38 ("get-documentation-cataloguer" "documentation-cataloguer" "set!")}
        {Lisp-Entry "class-actions" #f 415 11 415 24 ("debugger" "'debugger" "nextmethod" "jedi" "'jedi" "find-actions" "cons")}
        {Lisp-Entry "update-focus-actions" #f 424 11 424 31 ("capitalize" "downcase" "upcase" "fill-to-column" "mark-column" "remove-highlights" "highlight-selection" "tabulate" "lisp-text" "transpose-expr" "select-outer" "goto-line" "search-backward-mode" "search-forward-mode" "text" "recolorize-syntax" "update-catalog" "edit-references" "edit-definitions" "evaluate-buffer" "not" "evaluate" "code-text" "Action" "set-action-enabled?" "preferences-root" "when" "Console-Text-View" "console?" "Lisp-Text-View" "lisp?" "Code-Text-View" "code?" "Text-View" "is?" "and" "text?" "get-focus" "focus" "let" "nextmethod")}
        {Lisp-Entry "update-project-actions" #f 458 18 458 40 ("debug-project" "run-project" "test-project" "view-project-log" "build-project" "compile-file" "edit-project" "jedi" "Action" "set-action-enabled?" "parse" "find-pathname-module" "module-name" "find-source" "get-workbench" "workbench" "get-controller" "get-moniker" "moniker" "Document" "is?" "and" "when" "current-document" "guest" "project-file" "get-active-project" "project" "let")}
        {Lisp-Entry "update-windowing-actions" #f 488 11 488 35 ("update-project-actions" "update-search-actions" "exiting-process?" "unless" "nextmethod")}
        {Lisp-Entry "navigable-results" #f 500 11 500 28 ("Violations-Manager" "Output-Log" "Search-Results" "singleton-docked" "get-guest" "list")}
        {Lisp-Entry "on-new-project" #f 514 11 514 25 ("get-workbench" "get-workbench-manager" "add-project-to" "evt")}
        {Lisp-Entry "on-event-spy" #f 518 11 518 23 ("Event-Spy" "new-palette" "evt")}
        {Lisp-Entry "on-registry-viewer" #f 523 11 523 29 ("Registry-Viewer" "new-frame" "evt")}
        {Lisp-Entry "on-type-viewer" #f 528 11 528 25 ("Type-Viewer" "new-frame" "evt")}
        {Lisp-Entry "on-java-manager" #f 533 11 533 26 ("Java-Manager" "new-frame" "evt")}
        {Lisp-Entry "on-showcase" #f 538 11 538 22 ("Showcase" "new-frame" "evt")}
        {Lisp-Entry "on-profiler-manager" #f 543 11 543 30 ("Profiler-Manager" "show-palette" "evt")}
        {Lisp-Entry "on-documentation-editor" #f 548 11 548 34 ("get-client" "client:" "Doc-Editor" "new-frame" "get-catalogs" "car" "catalog" "get-documentation-cataloguer" "cataloguer" "let*" "evt")}
        {Lisp-Entry "on-run-smoker" #f 555 11 555 24 ("Smoker-Builder" "new" "build/run" "evt")}
        {Lisp-Entry "on-toolbox" #f 560 11 560 21 ("focus?:" "designer" "'designer" "workspace:" "Toolbox-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-descendants" #f 565 11 565 25 ("focus?:" "designer" "'designer" "workspace:" "Descendants-Editor" "select-palette" "evt")}
        {Lisp-Entry "on-branches" #f 570 11 570 22 ("focus?:" "designer" "'designer" "workspace:" "Branches-Editor" "select-palette" "evt")}
        {Lisp-Entry "on-spy-events" #f 575 18 575 31 ("Event-Spy" "show-palette" "evt")}
        {Lisp-Entry "record-event?" #f 580 11 580 24 ("event")}
        {Lisp-Entry "on-readme" #f 589 18 589 27 ("Jazz" "File" "edit-document" "evt")}}}})
"Jedi-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "preference" "Jedi-Actions.jazz"} 1232126266
    {Lisp-Entry "jedi.preference.Jedi-Actions" #f 37 9 37 37 ("jazz")
      {Lisp-Entry "Jedi-Actions" #f 48 7 48 19 ("on-readme" "readme" "sql" "select-sql" "groupware" "select-groupware" "debugger" "select-debugger" "text" "select-text" "home" "workspace:" "on-select-workspace" "select-home" "play-recording-5" "play-recording-4" "play-recording-3" "play-recording-2" "play-recording-1" "play-recording-0" "on-play-recording" "play-recording" "on-set-active-recording" "set-active-recording" "on-output-recording" "output-recording" "on-register-recording" "register-recording" "on-present-recording" "present-recording" "on-resume-recording" "resume-recording" "on-stop-recording" "stop-recording" "on-start-recording" ":recorder" "start-recording" "on-capture-mouse-host" "capture-mouse-host" "on-capture-host" "capture-host" "on-capture-mouse-document" "capture-mouse-document" "on-capture-document" "capture-document" "unzoom-document" "zoom-out-document" "document" "zoom-in-document" "on-unzoom" "unzoom-mouse-view" "on-zoom-out" "zoom-out-mouse-view" "mouse-view" "what:" "on-zoom-in" "zoom-in-mouse-view" "on-update-catalogs" "update-catalogs" "on-catalogs-manager" "catalogs-manager" "on-compare-files" "compare-files" "on-compare-directories" "compare-directories" "on-variables" "variables" "on-exception" "exception" "on-frames" "frames" "on-threads" "threads" "on-processes" "processes" "on-profiler-manager" "profiler-manager" "on-resources-monitor" "resources-monitor" "on-logs-viewer" "logs-viewer" "on-class-browser" "class-browser" "0" "test-0" "9" "test-9" "8" "test-8" "7" "test-7" "6" "test-6" "5" "test-5" "4" "test-4" "3" "test-3" "2" "test-2" "1" "no:" "on-test-no" "test-1" "on-test-shift" "test-shift" "on-test" "test" "on-clear-terminal" "clear-terminal" "on-show-terminal" "show-terminal" "on-spy-events" "spy-events" "on-spy-messages" "spy-messages" "on-explore-views" "explore-views" "F8" "on-debug-views" "debug-views" "Tab" "on-next-debuggee" "next-debuggee" "on-call-run-to" "call-run-to" "on-call-step-out" "call-step-out" "on-call-step-into" "call-step-into" "on-call-step-over" "call-step-over" "on-run-to-result" "run-to-result" "on-run-to-cursor" "run-to-cursor" "on-step-outside-function" "step-outside-function" "on-step-out" "step-out" "on-step-into-function" "step-into-function" "F11" "on-step-into" "step-into" "F10" "on-step-over" "step-over" "on-continue" "continue" "on-break" "break" "enabled?:" "F9" "on-restart" ":debugger" "restart" "on-build-project" "build-project" "F7" "on-compile-file" "compile-file" "on-debug-project" "debug-project" "on-run-project" "run-project" "on-test-project" "test-project" "on-view-project-log" "view-project-log" "on-clean-project" "clean-project" "on-edit-project" "edit-project" "F5" "on-select-project" "select-project" "on-showcase" "view-showcase" "on-documentation-editor" "view-documentation-editor" "on-hierarchy" "view-hierarchy" "on-chapters" "view-chapters" "on-sql-console" "view-sql-console" "on-sql-inventory" "view-sql-inventory" "on-sql-connections" "view-sql-connections" "on-java-manager" "view-java-manager" "on-java-reference-finder" "view-java-reference-finder" "on-preferences" "view-preferences" "on-view-bindings" "view-bindings" "on-bindings-manager" "bindings-manager" "on-branches" "view-branches" "on-descendants" "view-descendants" "on-toolbox" "view-toolbox" "on-type-viewer" "view-type-viewer" "on-registry-viewer" "view-registry-viewer" "on-web-servers" "view-web-servers" "on-activities" "view-activities" "on-user-log" "view-user-log" "on-output-log" "view-output-log" "on-profile-results" "view-profile-results" "on-search-results" "view-search-results" "Return" "on-properties" "view-properties" "on-debugger" "view-debugger" "Space" "on-console" "view-console" "on-contacts" "view-contacts" "on-favorites" "view-favorites" "on-depots" "view-depots" "on-repositories" "view-repositories" ":control" "on-workbench" "view-workbench" "on-exit-without-save" "exit-without-save" "on-save-workspace" "save-workspace" "on-open-jazz-text" "open-jazz-text" "on-open-text" "open-text" ":shift" ":alt" "Shortcut" "shortcut:" "on-new-project" ":application" "Event-Handler" "action-handler:" "new-project" "name:" "Actions")}}})
"Jedi-Bindings"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "preference" "Jedi-Bindings.jazz"} 1236525574
    {Lisp-Entry "jedi.preference.Jedi-Bindings" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Jedi-Bindings" #f 50 7 50 20 ("save" "current-frame" "previous-frame" "F6" "next-frame" "exit" "print-preview" "print-layout" "print" "F4" "close" "new" "windows" "mac" "paste&next-aux" "select-outer" "Space" "lock-anchor" "paste" "copy" "cut" "redo-aux" "redo" "undo-aux" "undo" "emacs" "insert-next-aux" "insert-previous-aux" "edit-references-aux" "edit-definitions-aux" "next-aux" "prior-aux" "document-end-aux" "document-home-aux" "extend-end-aux" "end-aux" "extend-home-aux" "home-aux" "kill-line" "delete-word-aux" "delete-char-aux" "downward-compound-aux" "upward-compound-aux" "extend-downward-aux" "move-downward-aux" "extend-upward-aux" "move-upward-aux" "forward-compound-aux" "extend-forward-word-aux" "move-forward-word-aux" "extend-forward-char-aux" "move-forward-char-aux" "backward-compound-aux" "extend-backward-word-aux" "move-backward-word-aux" "extend-backward-char-aux" "move-backward-char-aux" "select-all" "view-bindings" "bindings-manager" ":control" "find" ":shift" "pop-clipboard-stack" ":alt" "Shortcut" "shortcut:" "paste-from-stack" "jazz" "shortcut-viewer" "preview-pane" "view-editor" "search-results-tree" "search-manager" "compare-trees" "class-browser" "manager" "repositories-manager" "workbench-manager" "workbench-tree" "web-servers" "entities-tree" "components-tree" "components-viewer" "tree-embedded-search-text" "scheme-text" "composite-text" "compare-text" "combo-text" "console-text" "command-search" "command-execute" "jazz-text" "lisp-text" "code-text" "jedi" "name:" "IDE-Bindings")}}})
"Jedi-Manifest"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "project" "jedi" "Jedi-Manifest.jazz"} 1236970050
    {Lisp-Entry "project.jedi.Jedi-Manifest" #f 37 9 37 35 ("Jedi-Manifest" "register-autoclass" "jazz")
      {Lisp-Entry "Jedi-Manifest" #f 47 7 47 20 ("Recordable" "Macro-Recorder" "_recorder" "IDE" "IDE-Toplevel" "IDE-Toolbar" "IDE-Text-View" "IDE-Status" "IDE-Profile" "IDE-Preferences" "IDE-File-Menu" "IDE-Bindings" "IDE-Actions" "Command-Text-View" "Command-Shell" "Command-Search-Actions" "Command-Execute-Actions" "_ide" "_doc" "DocToText-Transformation" "DocToHTML-Transformation" "Docs-Tree" "Doc-Editor" "Syntax-Doc" "Slot-Doc" "Section-Doc" "Property-Doc" "Project-Doc" "Primitive-Doc" "Package-Doc" "Module-Doc" "Method-Doc" "Interface-Doc" "Form-Doc" "Field-Doc" "Element-Doc" "Doc" "Doc-Insert" "Definition-Doc" "Constant-Doc" "Concept-Doc" "Class-Doc" "Category-Doc" "Doc-Text-View" "Doc-Text-Row" "Doc-Text-List-Row" "Doc-Text-Actions" "Doc-Catalog" "Component-Catalog" "Console-Text-View" "Console-Text-Preferences" "Console-Text-Actions" "Console-Preferences" "Console-Manager" "_console" "_catalog" "Catalogs-Manager" "File-Parser" "Zipped-Entry" "Zip-File-Entry" "Variable-Entry" "Static-Init-Entry" "Package-Entry" "Method-Entry" "Interface-Entry" "Instance-Init-Entry" "Indexed-Entry" "Import-Entry" "Hierarchical-Entry" "File-Entry" "Entry" "Definition-Entry" "Constructor-Entry" "Code-Location" "Code-Entry" "Class-Entry" "Category-Entry" "Catalog-Entry" "Indexed-Catalog" "Filing-Catalog" "Cataloguer" "Catalogs-Preferences" "Catalog" "Catalog-Configuration" "_scheme" "Scheme-Text-View" "Scheme-Text-Preferences" "Scheme-Text-Actions" "Scheme-Explorer" "Scheme-Syntax" "Scheme-Parser" "_python" "Python-Text-View" "Python-Text-Preferences" "Python-Syntax" "Python-Parser" "Python-File-Entry" "Python-Explorer" "Python-Def-Entry" "Python-Class-Entry" "_properties" "Properties-Text-View" "Properties-Text-Preferences" "Properties-Syntax" "Properties-Parser" "Properties-File-Entry" "Properties-Entry" "_prop" "Prop-Text-View" "Prop-Syntax" "_lua" "Lua-Text-View" "Lua-Text-Preferences" "Lua-Syntax" "Lua-Parser" "Lua-Function-Entry" "Lua-File-Entry" "Lua-Explorer" "_lisp" "Lisp-Text-View" "Lisp-Text-Preferences" "Lisp-Text-Actions" "Lisp-Syntax" "Lisp-Explorer" "Lisp-Parser" "Lisp-File-Entry" "Lisp-Entry" "_jml" "JML-Viewer" "JML-Text-View" "JML-Text-Preferences" "JML-Explorer" "_jazz" "Class-Browser" "Class-Browser-Actions" "Location-Error" "Jazz-Text-View" "Jazz-Text-Preferences" "Jazz-Text-Actions" "Jazz-Plain-Text-View" "Jazz-Explorer" "Jazz-Code-Location" "Jazz-Syntax" "Spy-View" "Event-Spy" "Type-Viewer" "Type-Extractor" "Registry-Viewer" "Profile-Results" "Jazz-Parser" "User-Log" "Logs-Viewer" "Inspector" "Inspector-View" "_inspector" "Stack-Presenter" "_debuggee" "Jazz-File" "_javascript" "JavaScript-Variable-Entry" "JavaScript-Text-View" "JavaScript-Text-Preferences" "JavaScript-Parser" "JavaScript-Function-Entry" "JavaScript-File-Entry" "JavaScript-Explorer" "_java" "Java-Manager" "Java-Extractor" "Java-Text-View" "Java-Text-Preferences" "Java-Text-Actions" "Java-Runtime" "Java-Compiler" "JVM" "Java-Primitive" "Java-Object" "Java-Object-Array" "Java-Array" "Java-Parser" "JavaExternal-Expander" "Java" "org.jazzscheme.test.X" "org.jazzscheme.test.Test" "org.jazzscheme.java.Runtime" "java.lang.Throwable" "java.lang.String" "java.lang.StackTraceElement" "java.lang.Object" "java.lang.ClassLoader" "java.lang.Class" "Java-Exception" "Java-File-Entry" "Java-Entry" "Java-File" "_html" "HTML-Workspace" "HTML-Text-View" "HTML-Text-Preferences" "HTML-Text-Actions" "_diff" "Diff-Text-View" "Diff-Text-Preferences" "_css" "CSS-Text-View" "CSS-Text-Preferences" "CSS-Parser" "CSS-File-Entry" "CSS-Entry" "_csharp" "CSharp-Text-View" "CSharp-Text-Preferences" "_commonlisp" "CommonLisp-Text-View" "CommonLisp-Text-Preferences" "CommonLisp-Explorer" "CommonLisp-Parser" "_clike" "CLike-Text-View" "CLike-Text-Preferences" "_c" "C-Text-View" "C-Text-Preferences" "C-Explorer" "C-Syntax" "C-Parser" "C-Static-Entry" "C-Method-Entry" "C-Include-Entry" "C-File-Entry" "C-Extern-Entry" "C-Export-Entry" "C-Entry" "C-Definition-Entry" "C-Define-Entry" "C-Category-Entry" "C-File" "Jedi-Project" "Jedi-Manifest" "_development" "_builder" "Workbench" "Workbench-Tree" "Workbench-Tree-Actions" "Workbench-Manager" "Workbench-Manager-Actions" "Workbench-Editor" "Workbench-Designer" "Synchronize-Tree" "Synchronize-Entry" "Synchronize-Box" "Project-Selector" "New-Project-Dialog" "New-File-Dialog" "_workbench" "Sound-File" "Resource-File" "Icon-File" "Cursor-File" "Bitmap-File" "Repository" "Repositories" "Repositories-Manager" "Repositories-Manager-Actions" "Package" "New-Repository-Dialog" "New-Package-Dialog" "Project-Designer" "Project-Catalog" "Workbench-Preferences" "Repositories-Preferences" "Project-Group" "Project-File" "Project-Directory" "product" "autoload" "_jedi" "Text-Workspace" "Presenter-Workspace" "Navigator-Workspace" "Image-Workspace" "Home-Workspace" "Help-Workspace" "Formatted-Workspace" "Database-Workspace" "Completion-Popup" "Vertical-View" "Horizontal-View" "Smoker" "Smoker-Suite" "Smoker-Builder" "Tree-Showcase" "Tree-Showcase-Actions" "Threads-Showcase" "Text-Showcase" "Showcase" "Scaled-View" "Outline-Showcase" "Jedi-Search" "Jedi-Profile" "Jedi-Preferences" "Jedi-Bindings" "Jedi-Actions" "Code-Generator" "Menu-Editor" "Manager-View" "Manager-Actions" "Designer-Manager" "Alignment-Editor" "Jedi" "Jedi-Toplevel" "Jedi-Toolbar" "Jedi-Status" "source:" "Jedi-Menubar" "name:" "Directory" "directory:" "project.jedi.Jedi-Project" "tag-module:" "project.jedi.Jedi-Manifest" "module-name:" "Jazz" "File" "documentation:" "include-extensions:" ":jazz" "catalog-extensions:" "catalog?:" "title:" "Project")}}})
"Jedi-Menubar"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "application" "Jedi-Menubar.jazz"} 1236978652
    {Lisp-Entry "jedi.application.Jedi-Menubar" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Jedi-Menubar" #f 47 7 47 19 ("Menubar")
        {Lisp-Entry "host-icon" #f 55 16 55 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 59 16 59 26 ()}
        {Lisp-Entry "install" #f 68 11 68 18 ("Help-Menu" "help" "'help" "Window-Advanced-Menu" "window" "'window" "View-Menu" "view" "'view" "Workspace-Menu" "workspace" "'workspace" "Tools-Menu" "tools" "'tools" "Recorder-Menu" "recorder" "'recorder" "Debug-Menu" "debug" "'debug" "Project-Menu" "project" "'project" "Search-Menu" "search" "'search" "Source-Menu" "source" "'source" "Edit-Menu" "edit" "'edit" "Jedi-File-Menu" "list" "children:" "file" "'file" "name:" "self" "parent:" "Label-Item" "new" "function" "with-update-locked" "nextmethod" "rest")}}
      {Lisp-Entry "Jedi-File-Menu" #f 91 7 91 21 ("new-project" "jedi" "Action" "action:" "on-new" "before:" "french:" "english:" "Locales" "title:" "on-new-project" "name:" "IDE-File-Menu")}
      {Lisp-Entry "View-Menu" #f 105 7 105 16 ("view-showcase" "showcase" "view-documentation-editor" "documentation-editor" "view-sql-console" "sql-console" "view-sql-inventory" "sql-inventory" "view-sql-connections" "sql-connections" "view-java-manager" "java-manager" "variables" "exception" "frames" "threads" "processes" "view-hierarchy" "hierarchy" "view-chapters" "chapters" "view-branches" "branches" "view-descendants" "descendants" "view-toolbox" "toolbox" "view-type-viewer" "type-viewer" "view-registry-viewer" "registry-viewer" "view-web-servers" "web-servers" "view-activities" "activities" "view-user-log" "user-log" "view-output-log" "output-log" "view-profile-results" "profile-results" "view-search-results" "search-results" "view-properties" "properties" "view-console" "console" "view-contacts" "contacts" "view-favorites" "favorites" "view-depots" "depots" "view-repositories" "repositories" "view-workbench" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "workbench" "name:" "title:" "Menu")}
      {Lisp-Entry "Source-Menu" #f 175 7 175 18 ("recolorize-syntax" "update-catalog" "remove-highlights" "highlight-selection" "lisp-text" "tabulate" "transpose-expr" "select-outer" "goto-line" "search-backward-mode" "text" "search-forward-mode" "edit-references" "edit-definitions" "evaluate-buffer" "code-text" "Action" "action:" "Bitmap-Resource" "icon:" "evaluate" "name:" "title:" "Menu")}
      {Lisp-Entry "Project-Menu" #f 211 7 211 19 ("compile-file" "compile" "build-project" "build" "debug-project" "debug" "run-project" "run" "test-project" "test" "view-project-log" "view-log" "clean-project" "clean" "select-project" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "select" "name:" "title:" "Menu")}
      {Lisp-Entry "Debug-Menu" #f 237 7 237 17 ("test-shift" "test" "clear-terminal" "show-terminal" "explore-views" "continue" "break" "jedi" "Action" "action:" "tooltip-text:" "tooltip?:" "Bitmap-Resource" "icon:" "restart" "name:" "title:" "Menu")}
      {Lisp-Entry "Tools-Menu" #f 260 7 260 17 ("capture-mouse-host" "capture-host" "capture-mouse-document" "capture-document" "compare-files" "compare-directories" "update-catalogs" "catalogs-manager" "view-preferences" "preferences" "view-bindings" "bindings-manager" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "class-browser" "name:" "title:" "Menu")}
      {Lisp-Entry "Help-Menu" #f 289 7 289 16 ("about" "application" "readme" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "Menu")}}})
"Jedi-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "preference" "Jedi-Preferences.jazz"} 1236813157
    {Lisp-Entry "jedi.preference.Jedi-Preferences" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Jedi-Preferences" #f 63 7 63 23 ("wallpaper" "depots" "catalogs" "debug" "repositories" "workbench" "image" "image-view" "associations:" "Jedi-Status" ":status" "Jedi-Toolbar" ":toolbar" "Jedi-Menubar" ":menubar" "toolbar-classes:" "home" "sql" "user-extensions:" "user-label:" "jazz-files" "active-domain:" "text" "active:" "search-manager" "preferences-manager" "console" "compare-directories" "xml-text" "sql-text" "scheme-text" "python-text" "properties-text" "prop-text" "plain-text" "lua-text" "jazz-text" "javascript-text" "java-text" "html-text" "diff-text" "css-text" "csharp-text" "console-text" "c-text" "commonlisp-text" "name:" "current-directory:" "Doc-Catalog" "Indexed-Catalog" "indexed" "catalog-types:" "Category-Moniker" "category" "Document-Moniker" "doc" "Depot-Moniker" "item" "Zipped" "zip" "URL" "url" "Directory-Group" "group" "Directory" "dir" "File" "file" "protocols:" "documented?:" "maximized" "toplevel-state:" "title:" "IDE-Preferences")}}})
"Jedi-Profile"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "profile" "Jedi-Profile.jazz"} 1237219903
    {Lisp-Entry "jedi.profile.Jedi-Profile" #f 37 9 37 34 ("jazz")
      {Lisp-Entry "Jedi-Profile" #f 61 7 61 19 ("IDE-Profile")
        {Lisp-Entry "apropos" #f 64 11 64 18 ("get-output" "ci<?" "sort" "put" "search" "when" "name" "function" "iterate-table" "List-Factory" "new" "fact" "get-definitions-index" "definitions" "get-application" "get-cataloguer" "find-catalog" "catalog" "let" "catalog-name" "target")}
        {Lisp-Entry "recent-files" #f 75 11 75 23 ("select-results" "add-results" "text" "'text" "set-mode" "format-plural" "user-message" "length" "count" "queue-list" "files" "ignored-directories:" "list" "enqueue" "get-modification-time" "time>?" "ci=?" "test:" "get-extension" "member?" "not" "and" "when" "file" "function" "iterate-directory" "make-directory-feedback" "directory-feedback" "ignored-extensions" "ignored-directories" "3600" "0" "time-duration" "make-time" "either" "current-time" "subtract-duration" "from" "new-queue" "queue" "get-application" "get-search-results" "results" "let" "elapse" "Jazz" "Directory" "directory" "bind-keywords" "rest")}
        {Lisp-Entry "search-licenseless-files" #f 98 11 98 35 ("select-results" "add-results" "text" "'text" "set-mode" "format-plural" "user-message" "length" "count" "queue-list" "files" "enqueue" "equal?" "eof-object?" "not" "and" "read-line" "line" "port" "jazz-readtable" "readtable:" "cr-lf" "'cr-lf" "eol-encoding:" "parse" "path:" "list" "call-with-input-file" "ci=?" "test:" "member?" "when" "get-extension" "ext" "file" "function" "Jazz" "Directory" "iterate-directory" "make-directory-feedback" "directory-feedback" "new-queue" "queue" "get-application" "get-search-results" "results" "let")}
        {Lisp-Entry "search-trailing-whitespace" #f 121 11 121 37 ("select-results" "add-results" "text" "'text" "set-mode" "format-plural" "user-message" "count" "queue-list" "files" "ignored-directories:" "length" "naturals" "continuation-return" "+" "list" "enqueue" "set!" "whitespace?" "if" "element" "c" "do" "0" "downto" "1" "cardinality" "-" "from" "n" "for" "loop" "trailing-whitespace" "done" "continuation-capture" "rank" "line" "for-each" "char-encoding-errors:" "load-lines" "lines" "ci=?" "test:" "get-extension" "member?" "not" "when" "file" "function" "iterate-directory" "make-directory-feedback" "directory-feedback" "ignored-extensions" "ignored-directories" "new-queue" "queue" "get-application" "get-search-results" "results" "let" "Jazz" "Directory" "directory" "bind-keywords" "rest")}
        {Lisp-Entry "inspect-binary" #f 155 11 155 25 ("read-u8" "read-all" "debug" "port" "function" "parse" "call-with-input-file" "file")}
        {Lisp-Entry "load-catalog" #f 166 11 166 23 ("thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "load-catalog-synchronized" "name")}
        {Lisp-Entry "load-catalog-synchronized" #f 177 24 177 49 ("set-active?" "when" "error?:" "get-catalog" "catalog" "get-cataloguer" "cataloguer" "get-application" "appl" "let*" "name")}
        {Lisp-Entry "console-command" #f 190 11 190 26 ("nextmethod" "else" "exit" ":exit" "edit" ":edit" "compile" ":compile" "expand-scheme" ":expand-scheme" "expand" ":expand" "car" "edit-documentation" ":doc" "case" "arguments" "command")}
        {Lisp-Entry "edit-documentation" #f 204 11 204 29 ("edit-documentation" "get-application" "appl" "let" "name")}
        {Lisp-Entry "expand" #f 209 11 209 17 ("else" "macro?" "apply" "syntax-macro?" "cond" "definition-value" "macro" "let" "debug" "begin" "null?" "if" "Interactive-Object" "essay" "Java" "Language" "either" "definition" "class-of" "category-field" "object" "function" "try" "let*" "arguments" "name" "bind" "unimplemented" "form")}
        {Lisp-Entry "expand-scheme" #f 226 11 226 24 ("macro?" "apply" "debug" "syntax-macro?" "cond" "Kernel" "either" "definition-value" "macro" "class-of" "category-field" "package" "function" "try" "let*" "arguments" "name" "bind" "unimplemented" "form")}
        {Lisp-Entry "compile" #f 237 11 237 18 ("compile-classes" "unimplemented" "classes")}
        {Lisp-Entry "edit" #f 243 11 243 15 ("Jazz-Code-Location" "new" "edit" "location")}
        {Lisp-Entry "utf8" #f 252 11 252 15 ("get-content" "increase!" "List" "coerce" "map" "debug" "128" "char->integer" ">=" "char" "some?" "when" "line" "function" "for-each" "1" "count" "let" "text")}
        {Lisp-Entry "test" #f 269 11 269 15 ("new-mandelbrot")}
        {Lisp-Entry "new-mandelbrot" #f 274 11 274 25 ("home" "'home" "host-workspace:" "800" "Dimension" "host-size:" "50" "Point" "host-position:" "host-title:" "Mandelbrot" "new-frame")}
        {Lisp-Entry "gambit" #f 283 11 283 17 ("visible?:" "500" "900" "Dimension" "size:" "wait?:" "capture-error?:" "capture-output?:" "capture-input?:" "jazz" "Directory" "directory:" "create-process" "if" "format" "command" ":exit" "case" "exception" "let*" "unimplemented" ":repl" "exception-handler" "exception-handler:" "102400" "maximum-heapsize" "maximum-heapsize:" "expr" "expr:")}
        {Lisp-Entry "image-convert" #f 296 15 296 28 ("error" "0" "/=" "when" "format" "shell-command" "status" "let" "cmd")}
        {Lisp-Entry "image-composite" #f 302 15 302 30 ("error" "0" "/=" "when" "format" "shell-command" "status" "let" "cmd")}
        {Lisp-Entry "extract-bitmaps" #f 313 11 313 26 ("format-plural" "length" "count" "new-file" "copy-file" "cons" "set!" "equal?" "test:" "member?" "get-base" "ends-with?" "or" "unless" "user-message" "sha-1" "'sha-1" "parse" "digest-file" "digest" "get-name" "name" "file" "function" "iterate-directory" "digests" "create-directories" "dst" "Jazz" "Directory" "src" "let")}
        {Lisp-Entry "generate-disabled" #f 336 11 336 28 ("delete-file" "exists?" "when" "new-brother" "image-convert" "begin" "unwind-protect" "function" "parse" "with-current-directory" "disabled" "format" "grayscale" "get-extension" "extension" "get-base" "base" "get-name" "name" "get-parent" "directory" "let" "image")}
        {Lisp-Entry "generate-all-disabled" #f 354 11 354 32 ("generate-disabled" "get-name" "user-message" "ci=?" "test:" "get-extension" "member?" "when" "file" "function" "iterate-directory" "extensions" "directory")}
        {Lisp-Entry "delete-all-disabled" #f 363 11 363 30 ("delete-file" "get-name" "user-message" "get-base" "ends-with?" "ci=?" "test:" "get-extension" "member?" "and" "when" "file" "function" "iterate-directory" "extensions" "directory")}
        {Lisp-Entry "Template-AList" #f 379 14 379 28 ("source" "package" "title")}
        {Lisp-Entry "test8" #f 386 11 386 16 ("user-message" "Template-AList" "expand" "output" "function" "parse" "call-with-output-file" "Builder-Module" "File" "template" "Template-Expander" "new" "expander" "let")}
        {Lisp-Entry "test" #f 401 11 401 15 ("test-taskbar")}
        {Lisp-Entry "test-shift" #f 406 11 406 21 ("test-remove-taskbar")}
        {Lisp-Entry "test-taskbar" #f 411 11 411 23 ("NIM_ADD" "Shell_NotifyIcon" "hIcon" "'hIcon" "JZ_TASKICON" "uCallbackMessage" "'uCallbackMessage" "NIF_ICON" "NIF_MESSAGE" "bitwise-ior" "uFlags" "'uFlags" "10" "uID" "'uID" "get-toplevel-hwnd" "hWnd" "'hWnd" "size-of" "cbSize" "'cbSize" "set" "height:" "16" "width:" "Icon-Resource" "'icon" "Image" "load-image" "icon" "NOTIFYICONDATA" "new" "record" "let")}
        {Lisp-Entry "test-remove-taskbar" #f 424 11 424 30 ("NIM_DELETE" "Shell_NotifyIcon" "10" "uID" "'uID" "get-toplevel-hwnd" "hWnd" "'hWnd" "size-of" "cbSize" "'cbSize" "set" "NOTIFYICONDATA" "new" "record" "let")}
        {Lisp-Entry "test" #f 438 11 438 15 ("tie" "debug" "1" "x" "let")}
        {Lisp-Entry "test1" #f 449 11 449 16 (":console" "format")}
        {Lisp-Entry "test2" #f 454 11 454 16 ("10" ":console" "format")}
        {Lisp-Entry "test" #f 464 11 464 15 ("'<init>" "org.apache.bcel.classfile.JavaClass" "category-field" "definition-value" "debug")}
        {Lisp-Entry "test" #f 469 11 469 15 ("X" "new" "foo" "debug")}
        {Lisp-Entry "test-shift" #f 474 11 474 21 ("X" "new" "get-foo" "debug")}
        {Lisp-Entry "test1" #f 479 11 479 16 ("Window" "type-name" "map" "debug" "find-generics" "generics" "signature" "function" "test" "let" "B" "A" "Y" "X" "list" "insert-node" "get-dag-root" "dag-root" "Dispatcher" "new" "dispatcher" "let*")}
        {Lisp-Entry "test2" #f 500 11 500 16 ("Integer" "Object" "type-name" "map" "debug" "find-generics" "generics" "signature" "function" "test" "let" "Point" "Rect" "list" "insert-node" "get-dag-root" "dag-root" "Dispatcher" "new" "dispatcher" "let*")}
        {Lisp-Entry "test2" #f 516 11 516 16 ("Integer" "type-name" "map" "debug" "find-generics" "generics" "signature" "function" "test" "let" "list" "insert-node" "get-dag-root" "dag-root" "Dispatcher" "new" "dispatcher" "let*")}
        {Lisp-Entry "ed" #f 537 14 537 16 ()}
        {Lisp-Entry "xa" #f 541 14 541 16 ()}
        {Lisp-Entry "xb" #f 545 14 545 16 ()}
        {Lisp-Entry "x1" #f 549 14 549 16 ()}
        {Lisp-Entry "x2" #f 553 14 553 16 ()}
        {Lisp-Entry "setup-exemplar" #f 558 11 558 25 ("user-message" "20" "x2" "10" "x1" "5" "base:" "b" "'b" "xb" "3" ":c" "2" ":b" "1" ":a" "a" "'a" "name:" ":domain" "X" "xa" "Exemplar-Domain" "new" "ed" "set!")}
        {Lisp-Entry "test-exemplar" #f 568 11 568 24 ("user-message" "x2" "x1" "xb" "xa" "init")}
        {Lisp-Entry "test9" #f 581 11 581 16 ("internal-tabulate" "bell" "Jazz-Text-View" "is-not?" "if" "get-focus" "text" "let")}
        {Lisp-Entry "internal-tabulate" #f 588 11 588 28 ("tabulate-columns" "set-range" "collect-maxes" "maxes" "range:" "Jazz-Explorer" "explorer" "Range$Cell$" "new" "range" "get-start" "pos" "let*" "text")}
        {Lisp-Entry "collect-maxes" #f 597 11 597 24 ("exit-composite" "get-output" "put" "get-start" "get-end" "get-col" "-" "size" "forward-expr" "List-Factory" "new" "let" "enter-composite" "while" "max" "map" "null?" "if" "set!" "sizes" "function" "update-maxes" "maxes" "let*" "explorer")}
        {Lisp-Entry "tabulate-columns" #f 614 11 614 27 ("exit-composite" "cdr" "set!" "make-string" "list" "Range$Cell$" "new" "replace-text" "end" "0" ">" "when" "diff" "get-start" "get-end" "get-col" "-" "size" "car" "max" "let*" "forward-expr" "enter-composite" "while" "function" "with-atomic-undo" "get-undoer" "undoer" "let" "maxes" "explorer" "text")}
        {Lisp-Entry "text-macro" #f 638 11 638 21 ("toggle-bulleted" "get-format" "get-bulleted?" "unless" "get-paragraph" "paragraph" "let" "naturals" "one" "'one" "keep:" "paragraph-length" "remove-spaces" "row" "for-each" "list" "2" "+" "0" "Range$Cell$" "replace" "function" "with-locked-update" "bell" "/=" "if" "Cell" "new" "get-char" "char" "get-column" "col" "get-end" "end" "get-start" "get-row" "start" "let*" "text")}
        {Lisp-Entry "test" #f 660 11 660 15 ("test-for-each-page")}
        {Lisp-Entry "test-for-each-page" #f 665 11 665 29 ("-" "debug" "get-top" "b" "get-row" "get-bottom" "t" "let" "bottom" "top" "page" "function" "360" "1" "get-limit" "+" "0" "%" "for-each-page")}
        {Lisp-Entry "test-message-box" #f 674 11 674 27 ("sound:" "1" "Light-Red" "'Light-Red" "highlight:" "Bitmap-Resource" "image:" "yo" "'yo" "debug" "close-modal-dialog" "function" ":hyperlink" "2" "indent:" ":bulleted" "list" "message-box")}
        {Lisp-Entry "hide-paragraphs" #f 684 11 684 26 ("hide" "paragraph" "row" "function" "for-each-selected-paragraph" "get-focus" "text" "let")}
        {Lisp-Entry "test2" #f 697 11 697 16 ("join-lines" "message-box" ":arguments" "Java-Classpath" "classpath:" "execute" "output" "Java-Runtime" "new" "java" "let*")}
        {Lisp-Entry "test3" #f 704 11 704 16 ("3" "5" "4" "test" "2" "cj" "debug" "8" "obj2" "org.jazzscheme.test.Test" "new" "obj1" "let")}
        {Lisp-Entry "test" #f 717 11 717 15 ("foo" "debug" "thread" "function" "execute:" "self" "context:" "Thread" "new")}
        {Lisp-Entry "test" #f 726 11 726 15 ("1" "car" "thread" "function" "execute:" "self" "context:" "Thread" "new")}
        {Lisp-Entry "test-shift" #f 734 11 734 21 ("done" "'done" "error?:" "10" "timeout:" "wait-for" "thread-done" "'thread-done" "debug" "set-event" "1" "car" "5" "sleep" "thread" "function" "execute:" "self" "context:" "Thread" "Impulse" "new" "impulse" "let")}
        {Lisp-Entry "test1" #f 748 11 748 16 ("error?:" "3000" "timeout:" "list" "wait-for" "debug" "2" "t2" "1" "sleep" "thread" "function" "execute:" "self" "context:" "Thread" "new" "t1" "let")}
        {Lisp-Entry "test-context" #f 766 11 766 23 ("title:" "self" "context:" "threaded?:" "a" "'a" "car" "10" "0" "naturals" "foo" "with-continue" "n" "for-each" "to-fix" "with-restart" "reporter" "with-progress" "function" "with-execution-context")}
        {Lisp-Entry "to-fix" #f 787 11 787 17 ("symbol->string" "debug")}
        {Lisp-Entry "foo" #f 792 11 792 14 ("details:" "title:" "goo" "function" "with-execution-node" "n")}
        {Lisp-Entry "goo" #f 801 11 801 14 ("details:" "title:" "hoo" "function" "with-execution-node" "n")}
        {Lisp-Entry "hoo" #f 810 11 810 14 ("title:" "car" "function" "with-execution-node" "n")}
        {Lisp-Entry "test-parameters" #f 823 11 823 26 ("main" "'main" ".5" "sleep" "3" "get-parameter" "'thread" "debug" "thread" "function" "execute:" "self" "context:" "Thread" "new" "2" "test" "'test" "set-parameter")}
        {Lisp-Entry "test" #f 841 11 841 15 ("log-entry" "function" "Bin" "File" "file:" "test" "'test" "name:" "Log" "new" "with-log")}
        {Lisp-Entry "test-shift" #f 849 11 849 21 ("2" "foo")}
        {Lisp-Entry "foo" #f 854 11 854 14 ("bar" "format" "message:" "name:" "log-entry" "x")}
        {Lisp-Entry "bar" #f 860 11 860 14 ("Stack-Snapshot" "new" "data:" "message:" "name:" "log-entry" "+" "y" "let" "x")}
        {Lisp-Entry "test" #f 866 11 866 15 ("+" "node" "with-profile" "5" ":c" "3" ":b" "2" ":a" "list" "log-properties" "log-entry" "function" "Bin" "File" "file:" "test" "'test" "name:" "Log" "new" "with-log")}
        {Lisp-Entry "test3" #f 884 11 884 16 ("test-resources" "gc")}
        {Lisp-Entry "test-resources" #f 890 11 890 25 ("test-user-name" "test-thread" "test-synchronizer" "test-stack" "test-socket" "test-registry-key" "test-region" "test-reader" "test-pseudo-handle" "test-portfolio" "test-picture" "test-image" "test-file-reader" "test-file-printer" "test-dc" "test-bitmap" "function" "Bin" "File" "file:" "name:" "Log" "new" "with-log")}
        {Lisp-Entry "test-bitmap" #f 912 11 912 22 ("name:" "height:" "16" "width:" "desktop-dc" ":dc" "Bitmap" "new" "node" "function" "with-profile")}
        {Lisp-Entry "test-image" #f 920 11 920 21 ("name:" "Cursor-Resource" "cursor" "'cursor" "height:" "16" "width:" "Icon-Resource" "icon" "'icon" "Bitmap-Resource" "bitmap" "'bitmap" "Image" "load-image" "node" "function" "with-profile")}
        {Lisp-Entry "test-picture" #f 930 11 930 23 ("name:" "Picture" "new" "node" "function" "with-profile")}
        {Lisp-Entry "test-portfolio" #f 938 11 938 25 ("name:" "Portfolio" "new" "node" "function" "with-profile")}
        {Lisp-Entry "test-pseudo-handle" #f 946 11 946 29 ("name:" "GetCurrentProcess" "node" "function" "with-profile")}
        {Lisp-Entry "test-region" #f 954 11 954 22 ("name:" "100" "0" "Rect" "rect:" "Region" "new" "node" "function" "with-profile")}
        {Lisp-Entry "test-registry-key" #f 962 11 962 28 ("name:" "subkey" "key" "with-closed" "open-key" "HKEY_CURRENT_USER" "key2" "HKEY_CLASSES_ROOT" "key:" "Registry-Key" "new" "key1" "let" "node" "function" "with-profile")}
        {Lisp-Entry "test-socket" #f 980 11 980 22 ("name:" "Socket" "new" "node" "function" "with-profile")}
        {Lisp-Entry "test-stack" #f 988 11 988 21 ("new-log-node" "node:" "5000" "1" "-" "after" "'after" "0" "=" "if" "n" "proc" "letrec" "before" "'before" "name:" "log-profile" "node" "function" "with-node")}
        {Lisp-Entry "test-synchronizer" #f 1002 11 1002 28 ("name:" "Semaphore" "Mutex" "Impulse" "new" "node" "function" "with-profile")}
        {Lisp-Entry "test-thread" #f 1012 11 1012 22 ("name:" ".5" "sleep" "thread" "execute:" "self" "context:" "Thread" "new" "node" "function" "with-profile")}
        {Lisp-Entry "test-user-name" #f 1023 11 1023 25 ("name:" "get-system-user-name" "node" "function" "with-profile")}
        {Lisp-Entry "test9" #f 1031 11 1031 16 ("gc-clear-undestroyed")}
        {Lisp-Entry "test1" #f 1041 11 1041 16 ("255" "blend")}
        {Lisp-Entry "test2" #f 1046 11 1046 16 ("100" "blend")}
        {Lisp-Entry "test3" #f 1051 11 1051 16 ("30" "blend")}
        {Lisp-Entry "blend" #f 1056 11 1056 16 ("get-player" "set-alpha-blending" "pos" "view" "function" "click:" "pick-figure" "x")}
        {Lisp-Entry "reprint-toplevel-form" #f 1068 11 1068 32 ("insert-string" "set-selection" "function" "with-update-locked" "0" "saved-form" "output" "form:" "Designer" "new" "designer" "bell" "Form" "is-not?" "if" "read-string-element" "jml->form" "form" "get-string" "string" "get-end" "toplevel-expr" "range" "get-focus" "text" "let*" "align-name?" "align-name?:" "space-properties?" "space-properties?:")}
        {Lisp-Entry "reprint-current-form" #f 1083 11 1083 31 ("insert-string" "set-selection" "function" "with-update-locked" "length" "1" "+" "saved-form" "output" "form:" "Designer" "new" "designer" "bell" "Form" "is-not?" "if" "read-string-element" "second" "jml->form" "form" "get-string" "string" "get-end" "definition-range" "range" "get-selection" "current-classes" "classes" "get-focus" "text" "let*" "align-name?" "align-name?:" "space-properties?" "space-properties?:")}
        {Lisp-Entry "reprint-selected-form" #f 1099 11 1099 32 ("insert-string" "set-selection" "function" "with-update-locked" "0" "saved-form" "output" "form:" "Designer" "new" "designer" "bell" "Form" "is-not?" "if" "read-string-element" "jml->form" "form" "get-string" "string" "get-selection" "range" "get-focus" "text" "let*" "align-name?" "align-name?:" "space-properties?" "space-properties?:")}
        {Lisp-Entry "clear-activities" #f 1119 11 1119 27 ("unregister-activity" "reporter" "function" "for-each" "get-reporters" "reporters" "get-activity-manager" "manager" "let*")}
        {Lisp-Entry "Foo" #f 1133 9 1133 12 ("Object")
          {Lisp-Entry "holder" #f 1136 16 1136 22 ()}
          {Lisp-Entry "bar" #f 1140 13 1140 16 ("7" "5" "if" "message-box" "break" "v" "let" "p" "+" "y" "flag" "n" "function" "proc" "self" "z" "2" "x" "let*" "holder" "set!")}
          {Lisp-Entry "baz" #f 1157 13 1157 16 ("car" "2" "x" "let")}}
        {Lisp-Entry "test" #f 1163 11 1163 15 ("Foo" "new" "bar")}
        {Lisp-Entry "test-shift" #f 1168 11 1168 21 ("Foo" "new" "baz")}
        {Lisp-Entry "test-location" #f 1173 11 1173 24 ("list" "3" "z" "break" "y" "2" "x" "let")}
        {Lisp-Entry "test-location-aux" #f 1181 11 1181 28 ("30" "20" "10" "foo" "X" "Y" "Z" "new" "z" "let")}
        {Lisp-Entry "X" #f 1187 9 1187 10 ("Object")
          {Lisp-Entry "Y" #f 1190 11 1190 12 ("Object")
            {Lisp-Entry "Z" #f 1193 13 1193 14 ("Object")
              {Lisp-Entry "foo" #f 1196 17 1196 20 ("0" "naturals" "car" "y" "map" "x" "function" "for-each" "list")}
              {Lisp-Entry "bar" #f 1204 17 1204 20 ("1" "car")}}}}
        {Lisp-Entry "xml-viewer" #f 1214 11 1214 21 ("set-visible?" "bring-to-front" "set-document" "get-guest" "viewer" "host-visible?:" "XML-Viewer" "new-frame" "frame" "let*" "load" "File" "file" "XML-Document" "new" "document" "let")}
        {Lisp-Entry "test" #f 1226 11 1226 15 ("parse-text" "debug" "text:" "XML-Parser" "new" "parser" "text" "let*")}
        {Lisp-Entry "test1" #f 1233 11 1233 16 ("parse-text" "debug" "text:" "XML-Parser" "new" "parser" "text" "let*" "name:" "log-entry")}
        {Lisp-Entry "test2" #f 1241 11 1241 16 ("length" "parse-text" "debug" "text:" "XML-Parser" "parser" "read-content-string" "File-Reader" "new" "reader" "with-closed" "text" "Jazz" "File" "file" "let*")}
        {Lisp-Entry "My-Transfo" #f 1255 9 1255 19 ("XML-Transformer")
          {Lisp-Entry "machin" #f 1258 20 1258 26 ("cdr" "p" ">>xml" "n" "function" "for-each" "xml>>" "<-xml" "title" "mode" "f" "a" "xsl-rules" "y" "x" "node")}
          {Lisp-Entry "chouette" #f 1269 20 1269 28 ("children" "machin" "apply-transformation" "xml>>" "xsl-rules" "b" "a" "node")}}
        {Lisp-Entry "test" #f 1277 11 1277 15 ("2" "1" "a" "machin" "XML-Formatter" "handler:" "My-Transfo" "new" "transfo" "let")}
        {Lisp-Entry "test1" #f 1283 11 1283 16 ("node" "children" "<-xml" "p" ">>xml" "n" "function" "for-each" "xml>>" "f" "a" "list" "y" "x" "expand-xsl-ruleset" ":console" "format")}
        {Lisp-Entry "test0" #f 1299 11 1299 16 ("text" "end-element" "add-attribute" "begin-element" "2" "indentation:" ":pretty" "XML-Formatter" "new" "f" "let")}
        {Lisp-Entry "test1" #f 1312 11 1312 16 ("b" "align" "h1" "body" "process-sxml" "converter" ":pretty" "XML-Formatter" "new" "processor" "let")}
        {Lisp-Entry "test0" #f 1325 11 1325 16 ("1" "car")}
        {Lisp-Entry "setup-compiler" #f 1330 11 1330 25 ("Mutation-Annotator" "Type-Annotator" "new" "add-user-pass" "Compiler" "initialize-user-passes")}
        {Lisp-Entry "test1" #f 1342 11 1342 16 ("debug" "=>" "2" "cond")}
        {Lisp-Entry "test" #f 1347 11 1347 15 ("+" "ID" "lalr-parser" "debug")}
        {Lisp-Entry "test" #f 1352 11 1352 15 ("identity" "CPS" "test")}
        {Lisp-Entry "speedup" #f 1361 11 1361 18 ("-" "percentage" "new" "old")}
        {Lisp-Entry "activity-no" #f 1366 14 1366 25 ("0")}
        {Lisp-Entry "test-activities" #f 1371 11 1371 26 (":unregister?" ".5" "set-done" "unless" "1" "delta-pos" "user-message" "sleep" "cancel-requested?" "not" "<" "and" "while" "Range" "set-range" "increase!" "0" "n" "activity-no" "no" "2" "zero?" "keep?" "1000." "500" "/" ".3" "wait" "50" "random" "5" "+" "max" "let" "activity" "function" "execute:" "self" "context:" "Activity" "new")}
        {Lisp-Entry "test-styles" #f 1395 11 1395 22 ("Bitmap-Resource" "bitmap" "'bitmap" "Image" "load-image" "IMAGE_BITMAP" "BM_SETIMAGE" "pb" "'pb" "send-message" "'stage" "Showcase" "get-stage" "find-guest" "locate" "stage" "let")}
        {Lisp-Entry "collect-extensions" #f 1405 11 1405 29 ("string<?" "sort" "downcase" "cons" "set!" "ci=?" "test:" "member?" "not" "and" "when" "get-extension" "ext" "file" "function" "iterate-directory" "extensions" "let" "dir")}
        {Lisp-Entry "test-ast" #f 1421 11 1421 19 ("get-application" "fresh-prompt" "describe" "when" "Java-AST" "parse-java" "ast" "Jazz" "File" "file" "let" "describe?")}
        {Lisp-Entry "test-java" #f 1431 11 1431 20 ("java-definitions" "Java-AST" "parse-java" "ast" "Jazz" "File" "file" "let")}
        {Lisp-Entry "report-aliases" #f 1442 11 1442 25 ("get-application" "fresh-prompt" "car" "key:" "<" "sort" ":console" "format" "value" "key" "bind" "info" "function" "for-each" "newline" "table-keys/values" "aliases" "get-aliases" "table" "let*")}}}})
"Jedi-Project"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "project" "jedi" "Jedi-Project.jazz"} 1236813157
    {Lisp-Entry "project.jedi.Jedi-Project" #f 37 9 37 34 ("Jedi-Project" "register-autoclass" "jazz")
      {Lisp-Entry "Jedi-Project" #f 49 7 49 19 ("project.jedi.Jedi-Project" "module-name:" "jedi" "product:" "title:" "Jazz-Project")}}})
"Jedi-Search"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "search" "Jedi-Search.jazz"} 1226584790
    {Lisp-Entry "jedi.search.Jedi-Search" #f 37 9 37 32 ("jazz")
      {Lisp-Entry "Jedi-Search" #f 46 7 46 18 ("projects-search" "projects" "directories-search" "directories" "text-search" "fill" "layout-type:" "content" "title:" "text" "tab" "name:" "Search-Manager")}}})
"Jedi-Status"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "application" "Jedi-Status.jazz"} 1226584790
    {Lisp-Entry "jedi.application.Jedi-Status" #f 37 9 37 37 ("jazz")
      {Lisp-Entry "Jedi-Status" #f 49 7 49 18 ("90" "mode" "look" "100" "locales" "250" "visible?:" "activities" "on-context-menu" "context-menu-handler:" "on-mouse-down" ":form" "Event-Handler" "mouse-down-handler:" "Bitmap-Resource" "icon:" "tail" "150" "title:" "workspace" "center" "location:" "20" "782" "Dimension" "size:" "message" "name:" "IDE-Status")
        {Lisp-Entry "host-icon" #f 70 16 70 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 74 16 74 26 ()}
        {Lisp-Entry "on-context-menu" #f 83 11 83 26 ("nextmethod" "else" "Look-Menu" "look" "Locales-Menu" "locales" "Activities-Menu" "new" "track-popup-menu" "activities" "self" "popup-workspaces-menu" "workspace" "case" "get-position" "acquire" "pos" "get-name" "name" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-mouse-down" #f 98 11 98 24 ("nextmethod" "else" "Look-Menu" "look" "Locales-Menu" "new" "track-popup-menu" "locales" "get-activity-manager" "toggle-visible?" "activities" "self" "popup-workspaces-menu" "workspace" "case" "get-position" "acquire" "pos" "get-name" "name" "get-sender" "sender" "let*" "evt")}}}})
"Jedi-Toolbar"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "application" "Jedi-Toolbar.jazz"} 1227799167
    {Lisp-Entry "jedi.application.Jedi-Toolbar" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Jedi-Toolbar" #f 47 7 47 19 ("sql" "groupware" "debugger" "text" "workspace:" "on-select-workspace" "tooltip?:" "selected?:" ":icons" "portfolio:" "workspace" "group:" "22" "home" "16" "command-shell" "entry" "style:" "edge" "border-type:" "19" "Point" "position:" "tail" "location:" "21" "250" "command-shell-view" "on-forward-menu" "forward-history" "forward" "1" "on-backward-menu" "pick" "body" "backward-history" "backward" "on-compare-files" "compare-files" "jedi" "compare-directories" ":preserve-domain?" "on-find" ":application" "action-handler:" "find" "redo" "undo" "on-clipboard-menu" ":form" "Event-Handler" "context-menu-handler:" "paste" "copy" "view" "cut" "0" "4" "Dimension" "size:" "print-preview" "print-layout" "print" "guest" "save" "open" "application" "Action" "action:" "Bitmap-Resource" "image-name:" "tooltip-text:" "new" "name:" "IDE-Toolbar")
        {Lisp-Entry "host-icon" #f 102 16 102 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 106 16 106 26 ()}}}})
"Jedi-Toplevel"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "application" "Jedi-Toplevel.jazz"} 1226584790
    {Lisp-Entry "jedi.application.Jedi-Toplevel" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Jedi-Toplevel" #f 48 7 48 20 ("768" "1024" "Dimension" "size:" "100" "Point" "position:" "caption-base:" "IDE-Toplevel")}}})
"Lisp-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "catalog" "Lisp-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.catalog.Lisp-Entry" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Lisp-Entry" #f 45 7 45 17 ("Indexed-Entry")
        {Lisp-Entry "end-line" #f 48 8 48 16 ()}
        {Lisp-Entry "end-column" #f 49 8 49 18 ()}
        {Lisp-Entry "signature" #f 50 8 50 17 ()}
        {Lisp-Entry "initialize" #f 55 11 55 21 ("signature~self" "end-column~self" "end-line~self" "set!" "nextmethod" "r" "d" "ec" "el" "c" "l" "s" "n")}
        {Lisp-Entry "print-catalog" #f 62 11 62 24 ("print-definitions" "references" "end-column" "end-line" "column" "line" "signature" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 72 11 72 20 ("Bitmap-Resource")}
        {Lisp-Entry "get-end-line" #f 81 18 81 30 ("end-line")}
        {Lisp-Entry "get-end-column" #f 85 18 85 32 ("end-column")}
        {Lisp-Entry "get-signature" #f 89 18 89 31 ("signature")}
        {Lisp-Entry "present" #f 98 11 98 18 ("present-identifier")}
        {Lisp-Entry "present-name" #f 102 11 102 23 ("present-noname" "not" "if" "get-name" "name" "let")}
        {Lisp-Entry "present-identifier" #f 109 11 109 29 ("compose-name" ":string" "format" "signature" "present-noname" "not" "if" "get-name" "name" "let")}
        {Lisp-Entry "compose-name" #f 118 11 118 23 (":string" "format" "present-name" "parent-name" "let" "get-name" "Lisp-Entry" "parent" "is?" "and" "if" "name")}
        {Lisp-Entry "present-noname" #f 125 11 125 25 ()}
        {Lisp-Entry "entry-range" #f 134 11 134 22 ("end-column" "end-line" "column" "line" "Cell" "Range$Cell$" "new")}
        {Lisp-Entry "edit-reference" #f 138 11 138 25 ("center-caret" "'center-caret" "ensure-displayed?:" "set-selection" "find-expression" "reference-range" "let" "when" "get-start" "definition-range" "range" "get-guest" "text" "edit" "apply" "frame" "let*" "rest" "target")}
        {Lisp-Entry "update-indexes" #f 153 11 153 25 ("definitions" "update-indexes" "definition" "references" "key" "function" "for-each" "name" "update-index" "references-index" "definitions-index")}}}})
"Lisp-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "text" "Lisp-Explorer.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.text.Lisp-Explorer" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Lisp-Explorer" #f 66 7 66 20 ("Code-Explorer")
        {Lisp-Entry "find-comment-last-row" #f 71 8 71 29 ()}
        {Lisp-Entry "find-comment-last-col" #f 72 8 72 29 ()}
        {Lisp-Entry "Composites" #f 75 12 75 22 ("literal" "reference" "list")}
        {Lisp-Entry "Open-Composites" #f 81 12 81 27 ()}
        {Lisp-Entry "Close-Composites" #f 87 12 87 28 ()}
        {Lisp-Entry "get-modifiers" #f 93 26 93 39 ()}
        {Lisp-Entry "explore-error" #f 97 11 97 24 ("end:" "start:" "message:" "Explore-Error" "new" "signal" "end" "start" "message")}
        {Lisp-Entry "present-char" #f 101 11 101 23 ("string" "else" "char-symbol" "memv?" "not" "cond" "c")}
        {Lisp-Entry "current-expr" #f 110 18 110 30 ("get-marked" "symbol" "'symbol" "kind" "eq?" "backward-expr" "and" "when")}
        {Lisp-Entry "forward-expr" #f 115 11 115 23 ("forward-simple-expr" "forward-expr" "if" "found" "eqv?" "and" "or" "next" "forward" "when" "memv?" "quotation?" "get-start" "start" "0" "char-forward" "c" "let" "end" "set-start" "forward-whites")}
        {Lisp-Entry "backward-expr" #f 135 11 135 24 ("else" "name-comment" "'name-comment" "not" "jazz" "'jazz" "get-syntax" "eq?" "backward" "case" "prev" "when" "backward-simple-expr" "found" "backward-scheme-char" "2" "backward-delimited-string" "eqv?" "and" "if" "1" "c1" "0" "char-backward" "c0" "let" "start" "set-end" "backward-whites")}
        {Lisp-Entry "forward-simple-expr" #f 168 19 168 38 ("else" "literal" "'literal" "reference" "'reference" "list" "'list" "forward-composite" "forward-named-comment" "forward-constituent" "text-constituent?" "forward-escaped-symbol" "forward-string" "string-delimiter?" "forward-sharp" "eqv?" "cond" "when" "0" "char-forward" "c" "let")}
        {Lisp-Entry "backward-simple-expr" #f 182 19 182 39 ("else" "literal" "'literal" "reference" "'reference" "list" "'list" "backward-composite" "backward-constituent" "text-constituent?" "backward-escaped-symbol" "eqv?" "backward-string" "string-delimiter?" "cond" "when" "0" "char-backward" "c" "let")}
        {Lisp-Entry "forward-all-expr" #f 194 18 194 34 ("start" "set!" "forward-expr" "while" "end" "copy" "initial-end" "let")}
        {Lisp-Entry "backward-all-expr" #f 201 18 201 35 ("end" "set!" "backward-expr" "while" "start" "copy" "initial-start" "let")}
        {Lisp-Entry "forward-constituent" #f 208 19 208 38 ("else" "symbol" "'symbol" "keyword" "'keyword" "and" "if" "kind" "text-constituent?" "not" "or" "set!" "forward" "cond" "c" "iterate" "last" "0" "char-forward" "eqv?" "keyword?" "let")}
        {Lisp-Entry "backward-constituent" #f 227 19 227 39 ("else" "symbol" "'symbol" "keyword" "'keyword" "if" "kind" "text-constituent?" "not" "or" "set!" "backward" "1" "cond" "c" "iterate" "unspecified" "last" "0" "char-backward" "eqv?" "keyword?" "let")}
        {Lisp-Entry "backward-escaped-symbol" #f 246 19 246 42 ("else" "symbol" "'symbol" "kind" "set!" "1" "eqv?" "cond" "not" "if" "0" "char-backward" "c" "iterate" "let" "backward")}
        {Lisp-Entry "backward-scheme-char" #f 265 19 265 39 ("char" "'char" "kind" "set!" "backward")}
        {Lisp-Entry "forward-expr-comment" #f 273 19 273 39 ("expr-comment" "'expr-comment" "kind" "set!" "forward-expr" "forward")}
        {Lisp-Entry "forward-named-comment" #f 280 19 280 40 ("named-comment" "'named-comment" "kind" "set!" "forward-expr" "forward" "forward-constituent" "jazz" "'jazz" "get-syntax" "neq?" "if")}
        {Lisp-Entry "forward-sharp" #f 289 19 289 32 ("forward-constituent" "else" "forward-expr-comment" "forward-scheme-char" "forward-named-string" "1" "and" "forward-delimited-string" "eqv?" "boolean" "'boolean" "kind" "set!" "memq?" "cond" "0" "char-forward" "c0" "let" "forward")}
        {Lisp-Entry "forward-escaped-symbol" #f 308 19 308 41 ("else" "symbol" "'symbol" "kind" "set!" "eqv?" "cond" "not" "if" "0" "char-forward" "c" "iterate" "let" "forward")}
        {Lisp-Entry "forward-delimited-string" #f 327 19 327 43 ("else" "delimited-string" "'delimited-string" "kind" "set!" "eqv?" "and" "not" "or" "cond" "1" "c1" "0" "char-forward" "c0" "iterate" "let" "forward")}
        {Lisp-Entry "forward-named-string" #f 344 19 344 39 ("named-string" "'named-string" "continuation-return" "begin" "nu=?" "if" "limit" "<" "while" "0" "1" "+" "Cell" "new" "set-end" "get-col" "end" "get-row" "paragraph-string" "subseq" "name" "let" "return" "function" "continuation-capture" "forward")}
        {Lisp-Entry "forward-scheme-char" #f 360 19 360 38 ("else" "text-constituent?" "cond" "iterate" "char" "'char" "kind" "set!" "begin" "alphanumeric?" "not" "if" "0" "char-forward" "c" "let" "forward")}
        {Lisp-Entry "forward-string" #f 380 19 380 33 ("else" "string" "'string" "kind" "set!" "string-delimiter?" "eqv?" "not" "cond" "0" "char-forward" "c" "iterate" "let" "forward")}
        {Lisp-Entry "backward-delimited-string" #f 399 19 399 44 ("else" "delimited-string" "'delimited-string" "kind" "set!" "eqv?" "and" "not" "or" "cond" "1" "c1" "0" "char-backward" "c0" "iterate" "let" "backward")}
        {Lisp-Entry "backward-string" #f 417 19 417 34 ("else" "string" "'string" "kind" "set!" "string-delimiter?" "1" "eqv?" "not" "cond" "0" "char-backward" "c" "iterate" "let" "backward")}
        {Lisp-Entry "forward-composite" #f 436 19 436 36 ("kind" "set!" "1" "next-pos" "present-char" "format" "explore-error" "eqv?" "not" "if" "0" "char-forward" "c" "let" "forward-whites" "forward-all-expr" "forward" "end" "set-start" "delimiter" "knd")}
        {Lisp-Entry "backward-composite" #f 449 19 449 37 ("kind" "end" "set!" "1" "previous-pos" "present-char" "format" "explore-error" "eqv?" "not" "if" "0" "char-backward" "c" "backward-whites" "backward-all-expr" "backward" "start" "copy" "initial-start" "let" "delimiter" "knd")}
        {Lisp-Entry "enter-list" #f 463 18 463 28 ("forward" "0" "char-forward" "eqv?" "when" "forward-whites")}
        {Lisp-Entry "exit-list" #f 470 18 470 27 ("forward" "0" "char-forward" "eqv?" "when" "forward-whites" "forward-all-expr")}
        {Lisp-Entry "enter-composite" #f 478 18 478 33 ("else" "literal" "'literal" "reference" "'reference" "list" "'list" "quasiquote" "'quasiquote" "quote" "'quote" "unquote" "'unquote" "unquote-splicing" "'unquote-splicing" "kind" "set!" "forward" "1" "eqv?" "and" "cond" "0" "char-forward" "c0" "forward-whites" "get-start" "set-end" "get-end" "end" "let")}
        {Lisp-Entry "exit-composite" #f 517 18 517 32 ("forward" "Close-Composites" "0" "char-forward" "memv?" "when" "forward-whites" "forward-all-expr")}
        {Lisp-Entry "skip-forward" #f 525 18 525 30 ("get-marked" "=" "forward-expr" "and" "name")}
        {Lisp-Entry "skip-backward" #f 529 18 529 31 ("get-marked" "=" "backward-expr" "and" "name")}
        {Lisp-Entry "forward-modifiers" #f 533 18 533 35 ("meta" "'meta" "get-modifiers" "memq?" "find-marked-symbol" "set!" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "iterate" "symbol" "meta?" "end" "copy" "old" "let")}
        {Lisp-Entry "forward-comments" #f 549 11 549 27 ("next-paragraph")}
        {Lisp-Entry "backward-comments" #f 553 11 553 28 ()}
        {Lisp-Entry "forward-whites" #f 557 18 557 32 ("forward" "forward-comments" "begin" "if" "eqv?" "whitespace?" "or" "and" "when" "0" "char-forward" "c" "iterate" "let")}
        {Lisp-Entry "backward-whites" #f 569 18 569 33 ("backward-lisp-comment" "backward" "whitespace?" "and" "when" "0" "char-backward" "c" "iterate" "let")}
        {Lisp-Entry "backward-lisp-comment" #f 579 11 579 32 ("set-col" "<" "and" "when" "set!" "find-lisp-comment" "find-comment-last-col" "find-comment-last-row" "eqv?" "if" "col" "get-col" "start-col" "start" "get-row" "start-row" "let")}
        {Lisp-Entry "find-lisp-comment" #f 593 11 593 28 ("else" "forward-scheme-char" "forward-delimited-string" "forward" "1" "c1" "forward-string" "eqv?" "cond" "char-forward" "c0" "get-col" "<" "get-row" "=" "and" "when" "iterate" "0" "Cell" "new" "set-end" "result" "end" "copy" "preserved-end" "paragraph-length" "max-col" "let" "row")}
        {Lisp-Entry "outer-expr" #f 655 11 655 21 ("kind" "forward" "backward" "knd" "close" "open" "bind" "Composites" "assq" "info" "nc" "pc" "present-char" "format" "explore-error" "composites-match?" "char-backward" "starter" "backward-all-expr" "skipped" "set!" "char-forward" "ender" "forward-all-expr" "when" "else" "next-pos" "set-end" "1" "previous-pos" "set-start" "eqv?" "get-char" "let*" "memv?" "forward-expr" "open-composite?" "backward-constituent" "forward-constituent" "backward-expr" "text-constituent?" "not" "string-delimiter?" "close-composite?" "or" "=" "and" "cond" "next-char" "nxt" "0" "previous-char" "prv" "end" "e" "start" "copy" "s" "let" "outer-composite?" "outer-composite?:" "composite?" "composite?:")}
        {Lisp-Entry "form-expr" #f 714 18 714 27 ("set-start" "find-marked-symbol" "symbol" "'symbol" "kind" "eq?" "forward-expr" "enter-list" "0" "next-char" "eqv?" "when" "prog1" "set-end" "end" "e" "start" "copy" "s" "let")}
        {Lisp-Entry "form-expr?" #f 728 18 728 28 ("form-expr" "memq?" "symbols")}
        {Lisp-Entry "form-name" #f 732 18 732 27 ("symbol?" "if" "expr" "set!" "memq?" "not-null?" "while" "get-modifiers" "modifiers" "cdr" "scan" "let" "car" "definition-name?" "pair?" "and" "when" "form")}
        {Lisp-Entry "category-expr?" #f 747 18 747 32 ("com-interface" "com-class" "remotable-stub" "package" "interface" "class" "form-expr?")}
        {Lisp-Entry "definition-expr?" #f 751 26 751 42 ("form-expr" "definition-name?")}
        {Lisp-Entry "definition-name?" #f 755 26 755 42 ("com-interface" "com-class" "remotable-stub" "package" "interface" "class" "memq?" "name")}
        {Lisp-Entry "definition-name" #f 759 18 759 33 ("set-start" "values" "prog1" "begin" "0" "char-forward" "eqv?" "if" "forward-whites" "java-method" "java-external" "com-method" "com-external" "specific" "generic" "intrinsic" "winexternal" "external" "memq?" "cond" "forward-modifiers" "meta?" "package" "'package" "eq?" "package?" "find-marked-symbol" "type" "let*" "forward-expr" "enter-list" "set-end" "end" "e" "start" "copy" "s" "let")}
        {Lisp-Entry "definition-only-name" #f 784 11 784 31 ("definition-name" "name" "meta?" "package?" "receive")}
        {Lisp-Entry "for-each-comment" #f 794 18 794 34 ("comment-string" "text-search-all" "get-syntax" "title-comment-string" "subseq" "string=?" "cardinality" "cast" "4" "+" "<" "and" "end" "paragraph-end" "set-end" "set!" "string-style?" "Named-Comment" "Expr-Comment" "get-name" "memq?" "unless" "start" "text" "get-style-at" "style" "paragraph-string" "string" "/=" "not" "or" "when" "get-col" "col" "get-row" "row" "pos" "function" "for-each" "previous-row" "let" "proc")}
        {Lisp-Entry "walk-declarations" #f 816 26 816 43 ("walk-declaration" "while" "walk-expressions?" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-declaration" #f 821 26 821 42 ("walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-parameters" #f 825 21 825 36 ("code" "'code" "walk-expression" "set!" "start" "/=" "if" "not" "forward-expr" "and" "while" "out?" "end" "get-row" "let" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "iterate-expressions" #f 839 18 839 37 ("for-each-expressions" "recursive?" "recursive?:" "code" "'code" "mode" "mode:" "proc")}
        {Lisp-Entry "iterate-expression" #f 843 18 843 36 ("for-each-expression" "recursive?" "recursive?:" "code" "'code" "mode" "mode:" "proc")}
        {Lisp-Entry "for-each-expressions" #f 847 11 847 31 ("for-each-expression" "forward-expr" "while" "mode" "proc")}
        {Lisp-Entry "for-each-expression" #f 852 11 852 30 ("for-each-expression" "forward-expr" "code" "'code" "quasiquote" "quote" "memq?" "else" "exit-composite" "for-each-expressions" "quotation" "'quotation" "literal" "'literal" "if" "let" "composite-kind?" "exit-list" "for-each-forms" "list" "'list" "kind" "eq?" "cond" "enter-composite" "when" "mode" "proc")}
        {Lisp-Entry "Quotation-Forms" #f 868 14 868 29 ("intrinsic" "external" "jml>>" "form>>" "form" "quasiquote" "quote")}
        {Lisp-Entry "for-each-forms" #f 872 11 872 25 ("for-each-expressions" "for-each-expression" "quotation" "'quotation" "0" "char-forward" "eqv?" "form" "'form" "intern-marked-symbol" "neq?" "or" "Quotation-Forms" "find-marked-symbol" "memq?" "symbol" "'symbol" "eq?" "and" "if" "let" "kind" "when" "forward-expr" "mode" "proc")}
        {Lisp-Entry "walk-expressions" #f 885 18 885 34 ("set!" "walk-expression" "forward-expr" "while" "first?" "code" "'code" "mode" "expression" "context")}
        {Lisp-Entry "walk-expression" #f 891 11 891 26 ("walk-expression" "forward-expr" "code" "'code" "quasiquote" "quote" "memq?" "let" "else" "exit-composite" "walk-expressions" "composite-kind?" "cond" "enter-composite" "when" "specifier" "'specifier" "tag" "'tag" "specifier-marked?" "symbol" "'symbol" "kind" "eq?" "and" "if" "end" "start" "first?" "mode" "expression" "context")}
        {Lisp-Entry "specifier-marked?" #f 908 11 908 28 ("1" "end" "-" "start" "get-char" "eqv?" "symbol" "'symbol" "kind" "eq?" "and")}
        {Lisp-Entry "constant?" #f 919 18 919 27 ("keyword" "symbol" "char" "boolean" "number" "kind" "memq?")}
        {Lisp-Entry "get-constant" #f 923 18 923 30 ("get-marked" "read-string-element" "function" "with-jazz-readtable" "else" "intern-marked-symbol" "symbol" "kind" "case")}
        {Lisp-Entry "search-expressions" #f 964 18 964 36 ("mode:" "get-range" "list" "continuation-return" "match?" "start" ">=" "and" "when" "bind" "info" "for-each" "iterate-expressions" "return" "continuation-capture" "cons" "read-string-element" "target" "target-string" "function" "map" "all" "let" "ignore-case?" "whole-words?" "position" "targets" "mode")}
        {Lisp-Entry "match?" #f 982 11 982 17 ("get-marked" "read-string-element" "equal?" "expression-kind" "eq?" "not" "or" "and" "parse-pattern-variable" "kind" "name" "pattern-variable?" "if" "get-kind" "expl-kind" "let" "parse-expression" "expression" "mode" "receive" "target" "expl-mode")}
        {Lisp-Entry "expression-kind" #f 995 11 995 26 ("expression-kind" "'expression-kind" "unimplemented" "else" "symbol" "'symbol" "symbol?" "string" "'string" "string?" "char" "'char" "char?" "boolean" "'boolean" "boolean?" "number" "'number" "number?" "cond" "expression")}
        {Lisp-Entry "parse-expression" #f 1004 11 1004 27 ("cadr" "quotation" "'quotation" "values" "quote" "'quote" "car" "eq?" "pair?" "and" "if" "expression")}
        {Lisp-Entry "pattern-variable?" #f 1010 11 1010 28 ("0" "symbol->string" "element" "eqv?" "symbol?" "and" "expression")}
        {Lisp-Entry "parse-pattern-variable" #f 1015 11 1015 33 ("string->symbol" "empty-string?" "if" "values" "mode" "kind" "name" "bind-optionals" "separator:" "1" "symbol->string" "subseq" "parse-strings" "elements" "let" "variable")}
        {Lisp-Entry "open-composite?" #f 1028 11 1028 26 ("Open-Composites" "memv?" "char")}
        {Lisp-Entry "close-composite?" #f 1032 11 1032 27 ("Close-Composites" "memv?" "char")}
        {Lisp-Entry "composite-kind?" #f 1036 11 1036 26 ("literal" "reference" "list" "memq?" "kind")}
        {Lisp-Entry "composites-match?" #f 1040 11 1040 28 ("eqv?" "and" "or" "end" "start")}}}})
"Lisp-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "catalog" "Lisp-File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.catalog.Lisp-File-Entry" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "Lisp-File-Entry" #f 45 7 45 22 ("File-Entry")}}})
"Lisp-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "parser" "Lisp-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.parser.Lisp-Parser" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Lisp-Parser" #f 46 7 46 18 ("File-Parser")
        {Lisp-Entry "parse" #f 49 11 49 16 ("parse-definitions" "catalog" "Lisp-File-Entry" "new" "time" "file")}
        {Lisp-Entry "Lisp-Period" #f 54 14 54 25 ()}
        {Lisp-Entry "parse-definitions" #f 58 11 58 28 ("get-output" "else" "dispatch->name" "dispatch-string?" "tag->name" "tag-string?" "cond" "add-reference" "Lisp-Period" "string=?" "unless" "get-marked" "keyword" "symbol" "memq?" "and" "when" "kind" "mode" "add-definition" "set-parent" "put" "not" "get-col" "get-row" "Lisp-Entry" "entry" "cdr" "signature" "car" "pair?" "if" "name" "documented?" "marked" "end" "start" "parent" "function" "walk-declarations" "List-Factory" "fact" "end:" "start:" "explorer-class" "expl" "text-beginning" "beginning" "let*" "set-moniker" "colorize?:" "char-encoding" "char-encoding:" "text-view-class" "new" "text" "let" "file")}
        {Lisp-Entry "explorer-class" #f 91 29 91 43 ("file")}
        {Lisp-Entry "text-view-class" #f 95 29 95 44 ()}}}})
"Lisp-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "text" "Lisp-Syntax.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.text.Lisp-Syntax" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Lisp-Syntax" #f 45 7 45 18 ("Code-Syntax")
        {Lisp-Entry "translate-lisp-key" #f 53 11 53 29 ("else" "case" "key")}
        {Lisp-Entry "Comment" #f 77 14 77 21 ("1" "make-string")}
        {Lisp-Entry "Title-Comment" #f 81 14 81 27 ("4" "make-string")}
        {Lisp-Entry "comment-string" #f 85 11 85 25 ("Comment")}
        {Lisp-Entry "title-comment-string" #f 89 11 89 31 ("Title-Comment")}
        {Lisp-Entry "get-constituent-test" #f 99 11 99 31 ("scheme-constituent?")}
        {Lisp-Entry "Auto-Complete-Characters" #f 108 14 108 38 ()}
        {Lisp-Entry "auto-complete-characters" #f 112 11 112 35 ("Auto-Complete-Characters")}}}})
"Lisp-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "text" "Lisp-Text-Actions.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.text.Lisp-Text-Actions" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Lisp-Text-Actions" #f 47 7 47 24 (":shift" "on-remove-highlights" "remove-highlights" ":alt" "on-highlight-selection" "highlight-selection" "Tab" "Shortcut" "shortcut:" "on-tabulate" ":focus" "Event-Handler" "action-handler:" "tabulate" "name:" "Actions")}}})
"Lisp-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "text" "Lisp-Text-Preferences.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.text.Lisp-Text-Preferences" #f 37 9 37 54 ("jazz")
      {Lisp-Entry "Lisp-Text-Preferences" #f 46 7 46 28 ("Code-Text-Preferences")
        {Lisp-Entry "title-color" #f 49 12 49 23 ("generate")}
        {Lisp-Entry "comment-color" #f 50 12 50 25 ("generate")}
        {Lisp-Entry "expr-comment-color" #f 51 12 51 30 ("generate")}
        {Lisp-Entry "declaration-keyword-color" #f 52 12 52 37 ("generate")}
        {Lisp-Entry "declaration-color" #f 53 12 53 29 ("generate")}
        {Lisp-Entry "keyword-color" #f 54 12 54 25 ("generate")}
        {Lisp-Entry "tag-color" #f 55 12 55 21 ("generate")}
        {Lisp-Entry "specifier-color" #f 56 12 56 27 ("generate")}
        {Lisp-Entry "char-color" #f 57 12 57 22 ("generate")}
        {Lisp-Entry "number-color" #f 58 12 58 24 ("generate")}
        {Lisp-Entry "boolean-color" #f 59 12 59 25 ("generate")}
        {Lisp-Entry "string-color" #f 60 12 60 24 ("generate")}
        {Lisp-Entry "delimited-string-color" #f 61 12 61 34 ("generate")}
        {Lisp-Entry "named-string-color" #f 62 12 62 30 ("generate")}
        {Lisp-Entry "quotation-color" #f 63 12 63 27 ("generate")}
        {Lisp-Entry "feature-color" #f 64 12 64 25 ("generate")}
        {Lisp-Entry "completions" #f 65 12 65 23 ("generate")}
        {Lisp-Entry "translate-keys?" #f 66 12 66 27 ("generate")}}}})
"Lisp-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "text" "Lisp-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.text.Lisp-Text-View" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Auto-Complete-Characters" #f 48 10 48 34 ()}
      {Lisp-Entry "Lisp-Text-View" #f 52 7 52 21 ("cond" "list" "x" "function" "for-each" "b" "a" "foo" "virtual" "public" "method" "comment" "Code-Text-View")
        {Lisp-Entry "new-syntax" #f 55 11 55 21 ("Lisp-Syntax" "new")}
        {Lisp-Entry "host-icon" #f 64 16 64 25 ("Bitmap-Resource")}
        {Lisp-Entry "get-locat-container" #f 73 18 73 37 ("parse" "if" "get-moniker" "moniker" "let")}
        {Lisp-Entry "focus-actions" #f 85 11 85 24 ("nextmethod" "lisp-text" "'lisp-text" "find-actions" "cons")}
        {Lisp-Entry "context-menu" #f 95 11 95 23 ("get-context-menu" "track-popup-menu" "edit-references" "edit-definitions" "move-caret:" "context-menu-click" "always" "'always" "else" "never" "'never" "outside-selection" "'outside-selection" "not" "and" "cond" "move-caret" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "tab-press" #f 108 11 108 20 ("tabulate" "function" "undoer" "with-atomic-undo" "insert-char" "shift-key?" "nextmethod" "accepts-returns?" "not" "has-completion?" "or" "if" "modifiers" "key")}
        {Lisp-Entry "colorize-syntax" #f 124 11 124 26 ("colorize-comments" "colorize-declarations" "function" "with-safe-explore" "entries?:" "nextmethod" "recoloring?" "recoloring?:")}
        {Lisp-Entry "Syntax-Targets" #f 132 14 132 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 135 14 135 29 ()}
        {Lisp-Entry "syntax-targets" #f 139 11 139 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 145 11 145 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" #f 151 11 151 33 ("Syntax-Targets")}
        {Lisp-Entry "compute-syntax-automata" #f 155 11 155 34 ("text-constituent?" "self" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" #f 159 11 159 24 ("recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "colorize-declarations" #f 163 11 163 32 ("finish-current" "get-application" "get-documentation-cataloguer" "Feature" "'Feature" "feature" "Literal" "'Literal" "literal" "Named-Comment" "'Named-Comment" "named-comment" "Expr-Comment" "'Expr-Comment" "expr-comment" "Named-String" "'Named-String" "named-string" "Delimited-String" "'Delimited-String" "delimited-string" "String" "'String" "string" "Boolean" "'Boolean" "boolean" "Number" "'Number" "number" "Char" "'Char" "char" "colorize-specifier" "specifier" "colorize-tag" "tag" "Keyword" "'Keyword" "Default" "'Default" "get-style-at" "get-name" "eq?" "keyword" "Quotation" "'Quotation" "quasiquote" "quote" "memq?" "symbol" "case" "kind" "mode" "Declaration-Keyword" "'Declaration-Keyword" "declaration-style" "apply-coloring" "when" "documented?" "marked" "end" "start" "context" "function" "walk-declarations" "new-colorizer" "not" "essay" "colorizer" "end:" "text-beginning" "start:" "self" "explorer-class" "new" "expl" "let" "recoloring?")}
        {Lisp-Entry "colorize-tag" #f 216 29 216 41 ("end" "start" "colorizer")}
        {Lisp-Entry "colorize-specifier" #f 220 29 220 47 ("end" "start" "colorizer")}
        {Lisp-Entry "declaration-style" #f 224 29 224 46 ("documented?")}
        {Lisp-Entry "colorize-comments" #f 228 11 228 28 ("finish-current" "when" "Title" "'Title" "4" "+" "Comment" "'Comment" "apply-coloring" "if" "Cell" "paragraph-length" "len" "get-row" "row" "let*" "title?" "end" "start" "function" "for-each-comment" "new-colorizer" "not" "essay" "colorizer" "text-beginning" "end:" "self" "explorer-class" "new" "expl" "let" "recoloring?")}
        {Lisp-Entry "recolorize-text" #f 244 11 244 26 ("recolorize-row" "to" "get-row" "from" "row" "for" "loop" "nextmethod" "end-row" "start")}
        {Lisp-Entry "recolorize-row" #f 250 29 250 43 ("recolorize-delimited-strings" "recolorize-strings" "recolorize-specifiers" "recolorize-chars" "recolorize-booleans" "recolorize-comments" "recolorize-declarations" "row")}
        {Lisp-Entry "Max-Declaration-Col" #f 260 14 260 33 ("4")}
        {Lisp-Entry "recolorize-declarations" #f 264 11 264 34 ("get-application" "get-documentation-cataloguer" "Named-Comment" "'Named-Comment" "named-comment" "Expr-Comment" "'Expr-Comment" "expr-comment" "String" "'String" "string" "Specifier" "'Specifier" "specifier" "Tag" "'Tag" "tag" "case" "kind" "mode" "Declaration-Keyword" "'Declaration-Keyword" "declaration-style" "apply-style" "documented?" "marked" "end" "start" "context" "function" "walk-declaration" "end:" "start:" "self" "explorer-class" "expl" "Cell" "new" "pos" "element" "eqv?" "Max-Declaration-Col" "<=" "cardinality" "<" "and" "when" "skip-whitespace" "col" "paragraph-string" "line" "let*" "Explore-Error" "catch" "row")}
        {Lisp-Entry "recolorize-comments" #f 295 11 295 30 ("Title" "'Title" "Comment" "'Comment" "apply-style" "begin" "title-comment-string" "subseq" "string=?" "<" "if" "4" "+" "title-end" "let" "Cell" "new" "get-style-at" "textual-style?" "not" "and" "when" "syntax" "comment-string" "search" "comment" "cardinality" "len" "paragraph-string" "line" "let*" "row")}
        {Lisp-Entry "recolorize-booleans" #f 308 11 308 30 ("Boolean" "'Boolean" "apply-style" "Cell" "new" "commented?" "unless" "get-target" "+" "end" "ctx" "bind" "set!" "if" "start:" "multisearch" "pos" "let" "not" "while" "done?" "0" "col" "cardinality" "len" "make-search-context" "list" "trg" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "recolorize-chars" #f 325 11 325 27 ("increase!" "text-constituent?" "<" "and" "Char" "'Char" "apply-style" "commented?" "unless" "3" "end" "2" "+" "Cell" "new" "get-char" "alphanumeric?" "set!" "if" "start:" "search" "pos" "let" "not" "while" "done?" "0" "col" "cardinality" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "recolorize-specifiers" #f 347 11 347 32 ("get-col" "+" "Specifier" "'Specifier" "Tag" "'Tag" "eqv?" "apply-style" "1" "-" "get-char" ">" "essay" "before" "Cell" "new" "find-specifier-end" "end" "set!" "if" "start:" "search" "pos" "let" "not" "while" "done?" "0" "col" "cardinality" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "recolorize-strings" #f 364 11 364 29 ("commented?" "unless" "Cell" "new" "String" "'String" "apply-style" "begin" "1" "+" "end" "set!" "if" "start:" "search" "pos" "let" "not" "while" "done?" "0" "col" "cardinality" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "recolorize-delimited-strings" #f 383 11 383 39 ("commented?" "unless" "Cell" "new" "Delimited-String" "'Delimited-String" "apply-style" "begin" "2" "+" "end" "set!" "if" "start:" "search" "pos" "let" "not" "while" "done?" "0" "col" "cardinality" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "Comment-Styles" #f 407 14 407 28 ("Comment" "Title")}
        {Lisp-Entry "String-Styles" #f 410 14 410 27 ("Named-String" "Delimited-String" "String")}
        {Lisp-Entry "commented?" #f 414 11 414 21 ("get-style-at" "comment-style?" "pos")}
        {Lisp-Entry "comment-style?" #f 418 11 418 25 ("Comment-Styles" "inherits?" "style-name" "function" "some?" "style")}
        {Lisp-Entry "string-style?" #f 424 11 424 24 ("String-Styles" "inherits?" "style-name" "function" "some?" "style")}
        {Lisp-Entry "textual-style?" #f 430 11 430 25 ("string-style?" "comment-style?" "or" "style")}
        {Lisp-Entry "favorite-completions" #f 435 11 435 31 ("preferences" "get-completions")}
        {Lisp-Entry "on-tabulate" #f 466 11 466 22 ("tabulate" "evt")}
        {Lisp-Entry "get-specials" #f 470 29 470 41 ()}
        {Lisp-Entry "return-press" #f 474 11 474 23 ("tabulate" "nextmethod" "function" "undoer" "with-atomic-undo" "key")}
        {Lisp-Entry "tabulate" #f 481 11 481 19 ("ignore" "'ignore" "action:" "set-modified?" "when" "+" "get-row" "tabulate-lines" "last-delta" "modified?" "receive" "set-caret" "with-safe-explore" "function" "with-update-locked" "get-end" "end" "get-start" "start" "let")}
        {Lisp-Entry "tabulate-lines" #f 496 11 496 25 ("values" "set!" "0" "/=" "when" "tabulate-line" "delta" "with" "to" "from" "row" "for" "loop" "last-delta" "modified?" "let" "end" "start")}
        {Lisp-Entry "remove-specifiers" #f 507 11 507 28 ("cdr" "1" "get-end" "-" "get-start" "get-char" "eqv?" "or" "get-range" "range" "let" "mark" "function" "collect-if" "car" "cons" "pair?" "not" "if" "lst")}
        {Lisp-Entry "effective-symbol" #f 518 11 518 27 ("1" "cardinality" "cast" "-" "0" "subseq" "string->symbol" "ends-with?" "if" "string")}
        {Lisp-Entry "tabulate-line" #f 524 11 524 24 ("tabulate-column" "tabulate-delta" "delta" "let" "row")}
        {Lisp-Entry "tabulate-delta" #f 530 18 530 32 ("get-column" "*" "-1" "count-modifiers" "decrease!" "when" "specials" "modifiers?" "bind" "element" "upper-case?" ">" "default-col" "4" "threshold" "proposed-col" "else" "'else" "neq?" "2" "/=" "=" "get-row" "first-row" "first-on-last-line" "first-last" "let" "cdr" "info" "get-specials" "assq" "special-info" "not" "or" "first-indent" "ends-with?" "first-dispatch?" "first-without?" "first-with?" "starts-with?" "and" "first-call-with?" "tag?" "first-tag?" "effective-symbol" "symbol" "'symbol" "get-kind" "eq?" "essay" "first-symbol" "get-range" "get-string" "first-string" "car" "first" "get-col" "+" "set!" "null?" "if" "col" "rank" "length" "count" "1" "get-start" "-" "opening" "collect-backward-exprs" "remove-specifiers" "expressions" "start:" "self" "explorer-class" "expl" "0" "Cell" "new" "pos" "let*" "row")}
        {Lisp-Entry "tabulate-column" #f 578 11 578 26 ("+" "make-string" "list" "Cell" "Range$Cell$" "new" "replace-text" "get-column" "actual" "let" "0" "/=" "when" "delta" "row")}
        {Lisp-Entry "count-modifiers" #f 585 11 585 26 ("cdr" "increase!" "set!" "self" "explorer-class" "new" "get-modifiers" "memq?" "or" "if" "car" "get-range" "get-string" "find-symbol" "symbol" "not" "not-null?" "and" "while" "done?" "0" "total" "let" "expressions")}
        {Lisp-Entry "first-on-last-line" #f 598 11 598 29 ("set!" "=" "not-null?" "and" "while" "get-range" "get-start" "get-row" "line" "car" "first" "cdr" "reverse" "1" ">" "if" "reversed" "let*" "count" "expressions")}
        {Lisp-Entry "current-name" #f 613 11 613 23 ("get-string" "when" "current-expr-range" "range" "let")}
        {Lisp-Entry "current-expr" #f 619 11 619 23 ("get-string" "read-string-element" "when" "current-expr-range" "range" "let")}
        {Lisp-Entry "current-expr-range" #f 625 11 625 29 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" #f 631 11 631 21 ("get-range" "outer-expr" "end:" "start:" "self" "explorer-class" "new" "expl" "let" "pos")}
        {Lisp-Entry "current-symbol" #f 637 11 637 25 ("symbol?" "when" "current-expr" "expr" "let")}
        {Lisp-Entry "expr-at" #f 643 11 643 18 ("butlast" "read-string-element" "ends-with?" "if" "expr-range" "get-string" "string" "let" "pos")}
        {Lisp-Entry "flash-character?" #f 655 11 655 27 ("memq?" "char")}
        {Lisp-Entry "headers" #f 664 12 664 19 ("4" "make-string" "string-append" "list")}
        {Lisp-Entry "get-headers" #f 669 11 669 22 ("headers")}
        {Lisp-Entry "get-context" #f 678 11 678 22 ("jazz")}
        {Lisp-Entry "current-definition" #f 682 11 682 29 ("get-string" "read-string-element" "when" "current-definition-range" "range" "let")}
        {Lisp-Entry "current-definition-range" #f 688 11 688 35 ("get-end" "definition-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "definition-range" #f 694 18 694 34 ("need-definition?" "or" "and" "definition-expr?" "when" "get-range" "set!" "outer-expr" "if" "not" "while" "done?" "definition?" "range" "end:" "start:" "self" "explorer-class" "new" "expl" "let" "pos")}
        {Lisp-Entry "need-definition?" #f 710 29 710 45 ()}
        {Lisp-Entry "Highlight-Styles" #f 719 14 719 30 ("Break" "Walk-Fatal" "Walk-Warning" "Reference")}
        {Lisp-Entry "highlight-style?" #f 723 11 723 27 ("Highlight-Styles" "inherits?" "style-name" "function" "some?" "style")}
        {Lisp-Entry "constant?" #f 729 18 729 27 ("keyword?" "symbol?" "char?" "boolean?" "number?" "or" "expr")}
        {Lisp-Entry "on-highlight-selection" #f 737 11 737 33 ("highlight-expression" "unhighlight-expression" "highlight-style?" "get-end" "get-style-at" "style" "bell" "constant?" "not" "or" "if" "current-expr" "constant" "get-start" "definition-range" "range" "let" "evt")}
        {Lisp-Entry "on-remove-highlights" #f 748 11 748 31 ("remove-highlights" "bell" "not" "if" "get-start" "definition-range" "range" "let" "evt")}
        {Lisp-Entry "find-expression" #f 755 18 755 33 ("get-range" "continuation-return" "get-constant" "standardize-form" "eqv?" "constant?" "and" "when" "mode" "iterate-expression" "return" "function" "continuation-capture" "end:" "get-start" "start:" "self" "explorer-class" "new" "expl" "let" "constant" "range")}
        {Lisp-Entry "highlight-expression" #f 766 18 766 38 ("get-end" "Reference" "'Reference" "apply-style" "get-constant" "standardize-form" "eqv?" "constant?" "and" "when" "mode" "function" "iterate-expression" "end:" "get-start" "start:" "self" "explorer-class" "new" "expl" "let" "constant" "range")}
        {Lisp-Entry "unhighlight-expression" #f 774 18 774 40 ("get-end" "default-style" "apply-style" "get-constant" "standardize-form" "eqv?" "constant?" "and" "when" "mode" "function" "iterate-expression" "end:" "get-start" "start:" "self" "explorer-class" "new" "expl" "let" "constant" "range")}
        {Lisp-Entry "remove-highlights" #f 782 18 782 35 ("1" "get-end" "+" "end:" "get-start" "get-row" "start:" "get-runs" "invalidate-paragraph" "default-style" "set-style" "highlight-style?" "when" "get-style" "style" "let" "run" "for-each" "paragraph" "row" "function" "for-each-paragraph" "range")}}}})
"Location-Error"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "text" "Location-Error.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.text.Location-Error" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Location-Error" #f 45 7 45 21 ("Error")
        {Lisp-Entry "kind" #f 48 8 48 12 ()}
        {Lisp-Entry "location" #f 49 8 49 16 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("location~self" "kind~self" "set!" "nextmethod" "apply" "others" "location" "bad" "'bad" "kind" "bind-keywords" "rest")}
        {Lisp-Entry "get-kind" #f 64 18 64 26 ("kind")}
        {Lisp-Entry "get-location" #f 68 18 68 30 ("location")}
        {Lisp-Entry "get-message" #f 77 11 77 22 ("unknown" "location" "format" "bad" "kind" "case")}}}})
"Logs-Viewer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "log" "Logs-Viewer.jazz"} 1236975967
    {Lisp-Entry "jazz.language.jazz.log.Logs-Viewer" #f 37 9 37 43 ("No-Data-Viewer" "register-autoclass" "jazz")
      {Lisp-Entry "Logs-Viewer" #f 52 7 52 18 ("data-container" "log-tree" "header" "scroller" "log-view" "second" "log-border" "200" "width:" "toplevel-controls?:" "on-return-press" "return-press-handler:" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "log" "filled-column:" "logs-tree" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "logs-border" "20" "horz" "first" "horizontal" "50" "division:" "relative" "mode:" "vert" "orientation:" "split" "state:" "center" "vertical" "on-refresh" "refresh" "on-clear" "clear" "10" "on-open" "tail" "open" "on-refresh-logs" "refresh-logs" "on-directory-logs" "directory-logs" "on-memory-logs" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "memory-logs" "0" "6" "flow" "north" "location:" "33" "300" "Dimension" "size:" "tools" "name:" "2" "Rect" "layout-insets:" "border" "layout-type:" "title:" "Layout-View")
        {Lisp-Entry "logs-directory" #f 55 8 55 22 ()}
        {Lisp-Entry "data-viewer" #f 56 8 56 19 ()}
        {Lisp-Entry "finish" #f 92 11 92 17 ("refresh-logs" "nextmethod" "initargs")}
        {Lisp-Entry "host-icon" #f 102 16 102 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 106 16 106 26 ()}
        {Lisp-Entry "host-position" #f 110 16 110 29 ("50" "Point")}
        {Lisp-Entry "host-size" #f 114 16 114 25 ("500" "850" "Point")}
        {Lisp-Entry "client-activate" #f 118 11 118 26 ("perserving-refresh-logs")}
        {Lisp-Entry "get-tree" #f 127 11 127 19 ("logs-tree" "'logs-tree" "locate")}
        {Lisp-Entry "Logs-Directory" #f 136 14 136 28 ("Bin" "Directory")}
        {Lisp-Entry "with-directory" #f 140 11 140 25 ("function" "with-preserved-current-directory" "Logs-Directory" "exists?" "and" "if" "proc" "default?")}
        {Lisp-Entry "on-memory-logs" #f 148 11 148 25 ("refresh-logs" "logs-directory" "set!" "evt")}
        {Lisp-Entry "on-directory-logs" #f 153 11 153 28 ("refresh-logs" "logs-directory" "set!" "directory:" "choose-directory" "directory" "let" "dir" "function" "get-shift?" "with-directory" "evt")}
        {Lisp-Entry "on-refresh-logs" #f 161 11 161 26 ("refresh-logs" "evt")}
        {Lisp-Entry "perserving-refresh-logs" #f 165 11 165 34 ("generate-event?:" "data" "'data" "use:" "refresh-logs" "function" "with-preserved-selection" "get-tree" "tree" "let")}
        {Lisp-Entry "refresh-logs" #f 174 18 174 30 ("view-logs" "close-data-viewer")}
        {Lisp-Entry "on-open" #f 179 11 179 18 ("view-log" "set-selection" "'log-view" "locate" "log-view" "load?:" "file:" "Log" "new" "log" "directory:" "extensions:" "choose-file" "file" "get-tree" "tree" "let*" "dir" "function" "get-shift?" "with-directory" "evt")}
        {Lisp-Entry "on-clear" #f 190 11 190 19 ("on-refresh" "on-clear" "'on-clear" "unimplemented" "evt")}
        {Lisp-Entry "on-refresh" #f 195 18 195 28 ("update" "'log-view" "locate" "log-view" "let" "evt")}
        {Lisp-Entry "on-selection-change" #f 200 11 200 30 ("view-data" "node" "log-tree" "view-log" "reload" "get-file" "close-data-viewer" "get-row" "get-user-data" "log" "'log-view" "locate" "log-view" "when" "get-single-selection" "selection" "logs-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-double-click" #f 219 11 219 26 ("edit-data" "get-row" "get-user-data" "node" "when" "get-single-selection" "selection" "log-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-return-press" #f 229 11 229 26 ("on-double-click" "evt")}
        {Lisp-Entry "view-logs" #f 238 11 238 20 ("insert-file" "ci=?" "when" "get-extension" "extension" "file" "iterate-directory" "get-logs" "insert-log" "log" "for-each" "logs-directory" "null?" "if" "remove-every-row" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "insert-log" #f 254 11 254 21 ("user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "get-name" "->string" "name" "let" "log" "tree")}
        {Lisp-Entry "insert-file" #f 259 11 259 22 ("file:" "Log" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "get-base" "name" "let" "file" "tree")}
        {Lisp-Entry "view-data" #f 269 29 269 38 ("layout-view" "parent:" "client:" "new" "data-viewer" "set!" "data-container" "'data-container" "locate" "container" "data-viewer-class" "class" "'data" "get-property" "data" "let*" "JML-Node" "is?" "when" "close-data-viewer" "node")}
        {Lisp-Entry "data-viewer-class" #f 282 11 282 28 ("No-Data-Viewer" "get-viewer-class" "either" "Viewable" "is?" "and" "if" "data")}
        {Lisp-Entry "close-data-viewer" #f 288 11 288 28 ("set!" "close" "data-viewer" "when")}
        {Lisp-Entry "edit-data" #f 299 29 299 38 ("node")}}
      {Lisp-Entry "No-Data-Viewer" #f 308 7 308 21 ("entry" "style:" "edge" "border-type:" "Border-View")
        {Lisp-Entry "client" #f 311 12 311 18 ("generate")}
        {Lisp-Entry "Background-Font" #f 318 14 318 29 ("Heading1" "name:" "Font")}
        {Lisp-Entry "draw" #f 322 11 322 15 ("draw-no-data" "nextmethod" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-no-data" #f 327 11 327 23 ("get-v" "get-h" "draw-text" "Dark-Gray" "name:" "Color" "set-text-color" "get-display-size" "center" "pos" "get-text-extent" "extent" "localize" "title" "let*" "Background-Font" "set-font" "surface")}}}})
"Lua-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "text" "Lua-Explorer.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lua.text.Lua-Explorer" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Lua-Explorer" #f 46 7 46 19 ("C-Explorer")}}})
"Lua-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "text" "Lua-File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lua.text.Lua-File-Entry" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Lua-File-Entry" #f 46 7 46 21 ("File-Entry")}}})
"Lua-Function-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "text" "Lua-Function-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lua.text.Lua-Function-Entry" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Lua-Function-Entry" #f 46 7 46 25 ("C-Definition-Entry")
        {Lisp-Entry "get-image" #f 54 11 54 20 ("Bitmap-Resource")}}}})
"Lua-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "text" "Lua-Parser.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lua.text.Lua-Parser" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Lua-Parser" #f 46 7 46 17 ("File-Parser")
        {Lisp-Entry "parse" #f 49 11 49 16 ("parse-definitions" "catalog" "Lua-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" #f 53 11 53 28 ("get-output" "length" "0" "naturals" "put" "when" "find-function" "fn" "n" "line" "function" "for-each" "List-Factory" "new" "fact" "char-encoding" "char-encoding:" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "Function" #f 70 12 70 20 ()}
        {Lisp-Entry "find-function" #f 74 11 74 24 ("subseq" "Lua-Function-Entry" "new" "c-constituent?" "skip" ">" "+" "start" "let*" "start:" "Function" "search" "when" "skip-whitespace" "col" "cardinality" "len" "let" "n" "line")}}}})
"Lua-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "text" "Lua-Syntax.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lua.text.Lua-Syntax" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Lua-Syntax" #f 45 7 45 17 ("Code-Syntax")
        {Lisp-Entry "get-constituent-test" #f 53 11 53 31 ("c-constituent?")}}}})
"Lua-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "text" "Lua-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.lua.text.Lua-Text-Preferences" #f 37 9 37 52 ("jazz")
      {Lisp-Entry "Lua-Text-Preferences" #f 50 7 50 27 ("completions:" "Dark-Blue" "keyword-color:" "definition-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" #f 53 12 53 23 ("generate")}
        {Lisp-Entry "line-comment-color" #f 54 12 54 30 ("generate")}
        {Lisp-Entry "definition-color" #f 55 12 55 28 ("generate")}
        {Lisp-Entry "keyword-color" #f 56 12 56 25 ("generate")}
        {Lisp-Entry "keywords" #f 57 12 57 20 ("generate")}
        {Lisp-Entry "completions" #f 58 12 58 23 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 80 11 80 37 ("keyword-color" "definition-color" "line-comment-color" "title-color" "completions" "keywords")}
        {Lisp-Entry "property-presentation" #f 85 16 85 37 ("nextmethod" "else" "completions" "keywords" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 96 11 96 27 ("nextmethod" "else" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}}}})
"Lua-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "text" "Lua-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lua.text.Lua-Text-View" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Lua-Text-View" #f 46 7 46 20 ("Code-Text-View")
        {Lisp-Entry "install" #f 49 11 49 18 ("get-keyword-color" "Keyword" "'Keyword" "get-definition-color" "Definition" "'Definition" "get-line-comment-color" "Line-Comment" "'Line-Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 58 16 58 29 ("lua-text" "'lua-text" "rest")}
        {Lisp-Entry "preferences" #f 62 11 62 22 ("lua-text" "documents" "get-preferences")}
        {Lisp-Entry "host-workspaces" #f 71 11 71 26 ("text")}
        {Lisp-Entry "favorite-completions" #f 80 11 80 31 ("preferences" "get-completions")}
        {Lisp-Entry "commented?" #f 84 11 84 21 ("Line-Comment" "'Line-Comment" "Title" "'Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "return-press" #f 96 11 96 23 ("tabulate" "nextmethod" "key")}
        {Lisp-Entry "explorer-class" #f 106 11 106 25 ("Lua-Explorer")}
        {Lisp-Entry "get-context" #f 115 11 115 22 ("c")}
        {Lisp-Entry "current-name" #f 119 11 119 23 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" #f 123 11 123 18 ("read-string-element" "element" "eqv?" "if" "0" "cardinality" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" #f 132 11 132 23 ("current-name")}
        {Lisp-Entry "current-expr-range" #f 136 11 136 29 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" #f 142 11 142 21 ("get-range" "outer-expr" "end:" "start:" "self" "Lua-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" #f 148 11 148 18 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" #f 157 12 157 19 ("list")}
        {Lisp-Entry "get-headers" #f 162 11 162 22 ("headers")}
        {Lisp-Entry "get-first-special?" #f 166 11 166 29 ()}
        {Lisp-Entry "Definitions" #f 175 12 175 23 ()}
        {Lisp-Entry "get-definitions" #f 179 11 179 26 ("Definitions")}
        {Lisp-Entry "Keywords" #f 188 12 188 20 ()}
        {Lisp-Entry "get-keywords" #f 203 29 203 41 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" #f 212 14 212 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 215 14 215 29 ()}
        {Lisp-Entry "syntax-targets" #f 219 11 219 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 225 11 225 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" #f 231 11 231 33 ("get-keywords" "keyword" "'keyword" "get-definitions" "definition" "'definition" "str" "function" "map" "line-comment" "'line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" #f 237 11 237 34 ("c-constituent?" "self" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" #f 241 11 241 24 ("Keyword" "'Keyword" "keyword" "Definition" "'Definition" "colorize-keyword" "definition" "Title" "'Title" "Line-Comment" "'Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}}})
"Macro-Recorder"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "recorder" "Macro-Recorder.jazz"} 1236813157
    {Lisp-Entry "jazz.recorder.Macro-Recorder" #f 37 9 37 37 ("jazz")
      {Lisp-Entry "Recording-Factory" #f 48 19 48 36 ("List-Factory" "new")}
      {Lisp-Entry "Registered-Recordings" #f 51 19 51 40 ("eqv?" "test:" "make-table")}
      {Lisp-Entry "Active-Recording" #f 54 19 54 35 ()}
      {Lisp-Entry "Macro-Recorder" #f 58 7 58 21 ("Object")
        {Lisp-Entry "on-start-recording" #f 66 11 66 29 ("List-Factory" "new" "Recording-Factory" "set!" "set-macro-recording?" "user-message" "Recording?" "not" "when" "evt")}
        {Lisp-Entry "on-stop-recording" #f 73 11 73 28 ("Active-Recording" "get-output" "coalesce-actions" "Recording-Factory" "set!" "set-macro-recording?" "user-message" "Recording?" "when" "evt")}
        {Lisp-Entry "on-resume-recording" #f 81 11 81 30 ("set-macro-recording?" "user-message" "Recording?" "not" "when" "evt")}
        {Lisp-Entry "on-play-recording" #f 87 11 87 28 ("error" "get-recording" "play-recording" "play-current-recording" "no:" "get-property" "no" "let" "user-message" "begin" "Recording?" "not" "if" "evt")}
        {Lisp-Entry "on-output-recording" #f 99 11 99 30 ("output-recording" "bell" "null?" "if" "Recording-Factory" "get-output" "actions" "let" "evt")}
        {Lisp-Entry "on-present-recording" #f 106 11 106 31 ("present-recording" "bell" "null?" "if" "Recording-Factory" "get-output" "actions" "let" "evt")}
        {Lisp-Entry "on-register-recording" #f 113 11 113 32 ("user-message" "register-recording" "Recording-Factory" "get-output" "recording" "6" "1" "between?" "assert" "initial-value:" "prefix:" "title:" "request-string" "parse-integer" "no" "let" "evt")}
        {Lisp-Entry "on-set-active-recording" #f 121 11 121 34 ("get-recording" "user-message" "Active-Recording" "set!" "begin" "null?" "if" "title:" "request-string" "read-string-element" "name" "let" "evt")}
        {Lisp-Entry "coalesce-actions" #f 132 11 132 27 ("string-append" "not" "string" "added" "key:" "get-property" "char" "on-key-press" "'on-key-press" "get-action/method-name" "get-target-name" "eq?" "and" "if" "action/handler" "bind" "action" "for-each" "set!" "cons" "put" "content:" "self" ":string" "Event" "event" "on-insert" ":focus" "Event-Handler" "handler" "let" "when" "function" "coalesce" "result" "List-Factory" "new" "fact" "let*" "actions")}
        {Lisp-Entry "present-recording" #f 158 11 158 28 ("title:" "get-output-string" "message-box" "get-action/method-name" "not" "format" "event" "action/handler" "bind" "do" "then" "first" "first?" "in" "action" "for" "loop" "car" "get-target-name" "map" "remove-duplicates" "targets" "open-output-string" "printer" "get-focus" "focus" "let*" "actions")}
        {Lisp-Entry "output-recording" #f 174 11 174 27 ("tabulate" ":reader" "->string" "insert-string" "insert-newline" "unless" "do" "in" "action" "then" "first" "first?" "for" "loop" "insert-char" "function" "get-undoer" "with-atomic-undo" "bell" "Text-View" "is-not?" "if" "get-focus" "text" "let" "actions")}
        {Lisp-Entry "target-name" #f 191 11 191 22 ("keyword->symbol" "appl" "'appl" ":application" "eq?" "if" "target")}
        {Lisp-Entry "get-target-name" #f 206 11 206 26 ("else" "get-target-name" "Action" "typecase" "action/handler")}
        {Lisp-Entry "get-action/method-name" #f 212 11 212 33 ("get-method-name" "else" "get-action-name" "Action" "typecase" "action/handler")}
        {Lisp-Entry "record" #f 227 18 227 24 ("cons" "Recording-Factory" "put" ":recorder" "get-target-name" "eq?" "unless" "event" "action/handler")}
        {Lisp-Entry "register-recording" #f 232 18 232 36 ("Registered-Recordings" "table-set!" "recording" "name")}
        {Lisp-Entry "get-recording" #f 236 18 236 31 ("error" "Registered-Recordings" "table-ref" "either" "name")}
        {Lisp-Entry "play-current-recording" #f 246 18 246 40 ("get-recording" "Recording-Factory" "get-output" "play-recording" "unless" "get-application" "get-profile" "profile" "let" "Active-Recording" "not" "if")}
        {Lisp-Entry "play-recording" #f 254 18 254 32 ("play-action" "for-each" "function" "get-undoer" "with-atomic-undo" "Text-View" "is?" "if" "get-focus" "focus" "set-macro-playing?" "begin" "unwind-protect" "Recording-Playing?" "old" "let" "recording")}
        {Lisp-Entry "play-action" #f 268 18 268 29 ("invoke" "get-focus" "target" "let" "else" "event:" "call-action" "Action" "typecase" "event" "action/handler" "bind" "action")}
        {Lisp-Entry "find-target" #f 278 18 278 29 ("get-process" "process-alias" "target")}}}})
"Manager-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "designer" "Manager-Actions.jazz"} 1226584790
    {Lisp-Entry "jedi.designer.Manager-Actions" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Manager-Actions" #f 47 7 47 22 ("Actions")}}})
"Manager-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "designer" "Manager-View.jazz"} 1226584790
    {Lisp-Entry "jedi.designer.Manager-View" #f 37 9 37 35 ("Center-View" "register-autoclass" "jazz")
      {Lisp-Entry "Manager-View" #f 49 7 49 19 ("card" "card-border" "416" "card-contour" "366" "230" "right" "descendant" "on-tab-press" "tab-press-handler:" "descendants" "233" "133" "descendants-border" "on-splitter-move" "move-handler:" "horz" "orientation:" "3" "left" "183" "width:" "branch" "branches" "header" "fill" "content" "flat?:" "vscroll?:" "hscroll?:" "document" "scroller" "entry" "style:" "edge" "border-type:" "130" "229" "1" "Point" "position:" "branches-border" "367" "center" "on-edit-form" "edit-form" "end-undo-group" "on-redo" "redo" "on-undo" "undo" "16" "end-open-group" "on-save" "save" "on-open" "open" "on-new" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "new" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "33" "300" "toolbar" "name:" "border" "layout-type:" "400" "650" "Dimension" "size:" "Editor-View")
        {Lisp-Entry "host-icon" #f 90 16 90 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-position" #f 94 16 94 29 ("80" "100" "Point")}
        {Lisp-Entry "host-size" #f 98 16 98 25 ("400" "650" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 102 11 102 26 ("home")}
        {Lisp-Entry "new-controller" #f 112 11 112 25 ("self" "Manager-View-Controller" "new")}
        {Lisp-Entry "Manager-View-Controller" #f 117 9 117 32 ("Editor-View-Controller")
          {Lisp-Entry "name-status" #f 120 13 120 24 ("document" "editor-title")}}
        {Lisp-Entry "install" #f 129 11 129 18 ("card" "'card" "descendants" "'descendants" "self" "branches" "'branches" "locate" "set-editor" "nextmethod" "rest")}
        {Lisp-Entry "guest-actions" #f 141 11 141 24 ("nextmethod" "manager" "'manager" "find-actions" "cons")}
        {Lisp-Entry "size-change" #f 151 11 151 22 ("get-height" "get-width" "Dimension" "new" "set-size" "when" "'toolbar" "locate-component" "toolbar" "let" "nextmethod" "size")}
        {Lisp-Entry "resize-center" #f 158 29 158 42 ("card-contour" "'card-contour" "right" "'right" "0" "descendants-border" "'descendants-border" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-splitter-move" #f 164 18 164 34 ("update-view" "card-contour" "'card-contour" "'left" "right" "-" "descendants-border" "'descendants-border" "move-figure" "0" "branches-border" "'branches-border" "locate" "size-figure" "left" "get-name" "case" "delta:" "get-property" "delta" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-new" #f 181 11 181 17 ("new-form" "evt")}
        {Lisp-Entry "on-open" #f 185 11 185 18 ("open-form" "evt")}
        {Lisp-Entry "on-edit-form" #f 189 11 189 23 ("edit-form" "evt")}
        {Lisp-Entry "on-tab-press" #f 193 11 193 23 ("get-row" "auto-select" "when" "get-single-selection" "rank" "acquire-focus" "card" "'card" "locate" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "install-current-designer" #f 206 11 206 35 ("editor-title" "set-title" "nextmethod" "form" "component")}}
      {Lisp-Entry "Center-View" #f 216 7 216 18 ("View")
        {Lisp-Entry "resize" #f 219 11 219 17 ("creator" "resize-center" "nextmethod" "dv" "dh")}}}})
"Menu-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "designer" "Menu-Editor.jazz"} 1226584790
    {Lisp-Entry "jedi.designer.Menu-Editor" #f 37 9 37 34 ("jazz")
      {Lisp-Entry "Menu-Editor" #f 45 7 45 18 ("View-Editor")
        {Lisp-Entry "host-title" #f 53 16 53 26 ()}
        {Lisp-Entry "host-position" #f 57 16 57 29 ("117" "237" "Point")}
        {Lisp-Entry "host-size" #f 61 16 61 25 ("472" "708" "Dimension")}}}})
"Method-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Method-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Method-Doc" #f 37 9 37 32 ("jazz")
      {Lisp-Entry "Method-Doc" #f 46 7 46 17 ("Definition-Doc")
        {Lisp-Entry "parameters" #f 49 12 49 22 ("generate")}
        {Lisp-Entry "print-catalog" #f 58 11 58 24 ("doc" "parameters" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" #f 70 11 70 18 ("parameters" "name" "cons" "format")}
        {Lisp-Entry "present-text" #f 80 11 80 23 ("package-name" "not" "get-children" "example" "function" "map" "examples" "null?" "if" ",@paragraphs" "parameters" "cons" "->string" "Red-Ball" ",Red-Ball" "Dark-Blue" "color:" "name" ",name" "form->node" "->jml" "paragraphs" "tag" "bind" "description" "when")}
        {Lisp-Entry "get-class-image" #f 110 16 110 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 119 16 119 37 ("nextmethod" "else" "parameters" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 125 11 125 27 ("nextmethod" "else" "String-Row" "new" "parameters" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 131 11 131 37 ("parameters" "package-name")}}}})
"Method-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Method-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Method-Entry" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Method-Entry" #f 45 7 45 19 ("Definition-Entry")
        {Lisp-Entry "parameters" #f 48 8 48 18 ()}
        {Lisp-Entry "throws" #f 49 8 49 14 ()}
        {Lisp-Entry "construct-literal" #f 53 16 53 33 ("self" "new" "references" "column" "line" "throws" "parameters" "type" "name" "modifiers" "context")}
        {Lisp-Entry "initialize" #f 57 11 57 21 ("throws~self" "parameters~self" "set!" "nextmethod" "references" "definitions" "column" "line" "throws" "parameters" "literal?" "type" "name" "modifiers")}
        {Lisp-Entry "print-catalog" #f 63 11 63 24 ("references" "column" "line" "throws" "parameters" "type" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present-detailed" #f 70 11 70 27 ("name" "format" "parameters" "null?" "if")}
        {Lisp-Entry "get-image" #f 76 11 76 20 ("Bitmap-Resource")}
        {Lisp-Entry "get-parameters" #f 85 18 85 32 ("parameters")}
        {Lisp-Entry "get-throws" #f 89 11 89 21 ("throws")}}}})
"Module-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Module-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Module-Doc" #f 37 9 37 32 ("jazz")
      {Lisp-Entry "Module-Doc" #f 45 7 45 17 ("Project-Doc")}}})
"Navigator-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "workspace" "Navigator-Workspace.jazz"} 1229802703
    {Lisp-Entry "jedi.workspace.Navigator-Workspace" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Navigator-Workspace" #f 46 7 46 26 ("second" "Console-Manager" "Navigation-Branches" "model-name:" "selection" "5" "Rect" "insets:" "21.500" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 61 11 61 23 ("navigator" "'navigator")}}}})
"New-File-Dialog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "New-File-Dialog.jazz"} 1236975967
    {Lisp-Entry "jedi.builder.workbench.New-File-Dialog" #f 37 9 37 47 ("Name-Text-View" "register-autoclass" "jazz")
      {Lisp-Entry "New-File-Dialog" #f 52 7 52 22 ("on-cancel" "253" "cancel" "on-ok" ":host" "action-handler:" "default?:" "80" "227" "167" "ok" "213" "editable?:" "text" "scroller" "moniker-border" "on-moniker-update" "moniker-update-handler:" "display-protocol?:" "dir" "protocol:" "24" "249" "directory" "54" "143" "directory-label" "on-content-change" "content-change-handler:" "Default" "Text-Style" "default-style:" "focus-selects-all?:" "show-unfocused-selection?:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "name-text" "hscroll?:" "19" "224" "109" "241" "name-border" "33" "111" "182" "name-label" "display-images?:" "controls?:" "toplevel-controls?:" "176" "width:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-double-click" "Event-Handler" "double-click-handler:" "on-selection-change" ":form" "Selection-Handler" "selection-handler:" "tooltip-text:" "tooltip?:" "can-select-empty?:" "row" "selection-mode:" "15" "default-row-height:" "show-header?:" ":icons" "portfolio:" "kinds" "fill" "layout-type:" "content" "document" "vscroll?:" "entry" "style:" "edge" "border-type:" "137" "140" "64" "13" "kind-border" "8" "50" "0" "Label" "27" "30" "description" "Caption" "Font" "font:" "16" "350" "9" "10" "Point" "position:" "title:" "title" "name:" "261" "500" "Dimension" "size:" "View")
        {Lisp-Entry "directory" #f 55 12 55 21 ("generate")}
        {Lisp-Entry "finish" #f 84 11 84 17 ("directory" "'directory" "set-moniker" "name-text" "'name-text" "locate" "set-string-content" "setup-kinds" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" #f 91 11 91 26 ("kinds" "'kinds" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "Kinds" #f 101 14 101 19 ("text" "sql" "java" "c" "lisp" "jazz" "template:" "scheme" "kind:" "name:")}
        {Lisp-Entry "setup-kinds" #f 120 11 120 22 ("update-ok" "ensure-displayed" "0" "set-single-selection" "get-children" "child" "for-each" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "row" "'icon" "icon" "name" "'name" "get-property" "title" "let*" "father" "node" "function" "insert" "letrec" "remove-every-row" "Kinds" "parse-jml" "root" "name-text" "'name-text" "text" "kinds" "'kinds" "locate" "tree" "let")}
        {Lisp-Entry "host-title" #f 146 16 146 26 ()}
        {Lisp-Entry "validate-dialog" #f 155 11 155 26 ("throw-cancel" "message-box" "when" "validate-name" "message" "format" "new-file" "destination" "extract-extension" "extension" "let*" "get-modal-result" "name" "directory" "template" "kind" "receive")}
        {Lisp-Entry "get-modal-result" #f 165 11 165 27 ("name-text" "'name-text" "get-string-content" "directory" "'directory" "locate" "get-moniker" "template" "'template" "kind" "'kind" "get-property" "values" "selected-kind" "node" "let")}
        {Lisp-Entry "selected-kind" #f 170 11 170 24 ("get-user-data" "node" "get-row" "row" "get-single-selection" "rank" "kinds" "'kinds" "locate" "tree" "let*")}
        {Lisp-Entry "get-tab-stops" #f 183 11 183 24 ("directory" "'directory" "get-text" "name-text" "'name-text" "kinds" "'kinds" "locate" "list")}
        {Lisp-Entry "on-selection-change" #f 195 11 195 30 ("update-ok" "evt")}
        {Lisp-Entry "on-content-change" #f 199 11 199 28 ("update-ok" "evt")}
        {Lisp-Entry "on-moniker-update" #f 203 11 203 28 ("update-ok" "evt")}
        {Lisp-Entry "on-double-click" #f 207 11 207 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-return-press" #f 215 11 215 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-escape-press" #f 223 11 223 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update-ok" #f 233 11 233 20 ("name-text" "'name-text" "get-string-content" "empty-string?" "not" "directory" "'directory" "get-moniker" "kind" "'kind" "selected-kind" "get-property" "and" "ok" "'ok" "locate" "set-enabled?")}
        {Lisp-Entry "validate-name" #f 237 11 237 24 ("else" "find-module-source" "memv?" "numeric?" "char" "function" "every?" "alphabetic?" "eqv?" "or" "not" "first" "parse" "find-pathname-module" "module-name" "let" "jazz" "memq?" "format" "exists?" "cond" "destination" "name" "kind")}
        {Lisp-Entry "Header-Color" #f 267 14 267 26 ("255" "blue:" "green:" "120" "red:" "Color" "new")}
        {Lisp-Entry "draw" #f 271 11 271 15 ("Header-Color" "1" "White" "name:" "Color" "list" "50" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "context" "surface")}}
      {Lisp-Entry "Name-Text-View" #f 281 7 281 21 ("Plain-Text-View")
        {Lisp-Entry "get-context-menu" #f 284 11 284 27 ("new-text-context-menu")}}}})
"New-Package-Dialog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "repositories" "New-Package-Dialog.jazz"} 1237238073
    {Lisp-Entry "jedi.builder.repositories.New-Package-Dialog" #f 37 9 37 53 ("Name-Text-View" "register-autoclass" "jazz")
      {Lisp-Entry "New-Package-Dialog" #f 52 7 52 25 ("on-cancel" "253" "cancel" "on-ok" ":host" "action-handler:" "default?:" "24" "80" "227" "167" "ok" "213" "body" "scroller" "repository" "Entry-Border" "Medium" "Color" "border-color:" "1" "Rect" "border-insets:" "22" "262" "139" "145" "repository-border" "64" "143" "repository-label" "on-content-change" "content-change-handler:" "on-escape-press" "escape-press-handler:" "on-return-press" ":form" "Event-Handler" "return-press-handler:" "tooltip-text:" "tooltip?:" "Default" "Text-Style" "default-style:" "focus-selects-all?:" "show-unfocused-selection?:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "name-text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "entry" "style:" "edge" "border-type:" "19" "258" "109" "147" "name-border" "33" "111" "82" "name-label" "8" "50" "0" "Label" "27" "30" "description" "Caption" "Font" "font:" "16" "350" "9" "10" "Point" "position:" "title:" "title" "name:" "261" "500" "Dimension" "size:" "View")
        {Lisp-Entry "repository" #f 55 12 55 22 ("generate")}
        {Lisp-Entry "finish" #f 80 11 80 17 ("setup-repositories" "setup-name" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" #f 86 11 86 26 ("name-text" "'name-text" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "setup-name" #f 96 11 96 21 ("name-text" "'name-text" "locate" "set-string-content")}
        {Lisp-Entry "setup-repositories" #f 100 11 100 29 ("car" "User" "'User" "find-repository" "either" "set-value" "repository-name" "->string" "list" "function" "map" "set-choices" "get-repositories" "repositories" "repository" "'repository" "locate" "combo" "let")}
        {Lisp-Entry "host-title" #f 116 16 116 26 ()}
        {Lisp-Entry "validate-dialog" #f 125 11 125 26 ("throw-cancel" "message-box" "when" "validate-name" "message" "new-directory" "destination" "repository-packages-directory" "tokenise-filename" "Directory" "new" "directory" "let*" "get-modal-result" "name" "repository" "receive")}
        {Lisp-Entry "get-modal-result" #f 135 11 135 27 ("name-text" "'name-text" "get-string-content" "repository" "'repository" "locate" "get-value" "values")}
        {Lisp-Entry "get-tab-stops" #f 144 11 144 24 ("repository" "'repository" "get-body" "name-text" "'name-text" "locate" "list")}
        {Lisp-Entry "on-selection-change" #f 155 11 155 30 ("update-ok" "evt")}
        {Lisp-Entry "on-content-change" #f 159 11 159 28 ("update-ok" "evt")}
        {Lisp-Entry "on-moniker-update" #f 163 11 163 28 ("update-ok" "evt")}
        {Lisp-Entry "on-double-click" #f 167 11 167 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-return-press" #f 175 11 175 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-escape-press" #f 183 11 183 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update-ok" #f 193 11 193 20 ("name-text" "'name-text" "get-string-content" "empty-string?" "not" "ok" "'ok" "locate" "set-enabled?")}
        {Lisp-Entry "validate-name" #f 197 11 197 24 ("else" "memv?" "numeric?" "char" "function" "every?" "alphabetic?" "eqv?" "or" "not" "first" "let" "format" "exists?" "cond" "destination" "name")}
        {Lisp-Entry "Header-Color" #f 219 14 219 26 ("255" "blue:" "green:" "120" "red:" "Color" "new")}
        {Lisp-Entry "draw" #f 223 11 223 15 ("Header-Color" "1" "White" "name:" "Color" "list" "50" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "context" "surface")}}
      {Lisp-Entry "Name-Text-View" #f 233 7 233 21 ("Plain-Text-View")
        {Lisp-Entry "get-context-menu" #f 236 11 236 27 ("new-text-context-menu")}}}})
"New-Project-Dialog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "New-Project-Dialog.jazz"} 1237238073
    {Lisp-Entry "jedi.builder.workbench.New-Project-Dialog" #f 37 9 37 50 ("Name-Text-View" "register-autoclass" "jazz")
      {Lisp-Entry "New-Project-Dialog" #f 52 7 52 25 ("on-cancel" "253" "cancel" "on-ok" ":host" "action-handler:" "default?:" "24" "80" "227" "167" "ok" "213" "body" "scroller" "repository" "Entry-Border" "Medium" "Color" "border-color:" "1" "Rect" "border-insets:" "22" "222" "139" "245" "repository-border" "143" "repository-label" "on-content-change" "content-change-handler:" "Default" "Text-Style" "default-style:" "focus-selects-all?:" "show-unfocused-selection?:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "name-text" "hscroll?:" "19" "218" "109" "247" "name-border" "33" "111" "182" "name-label" "display-images?:" "controls?:" "toplevel-controls?:" "176" "width:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-double-click" "Event-Handler" "double-click-handler:" "on-selection-change" ":form" "Selection-Handler" "selection-handler:" "tooltip-text:" "tooltip?:" "can-select-empty?:" "row" "selection-mode:" "15" "default-row-height:" "show-header?:" ":icons" "portfolio:" "kinds" "fill" "layout-type:" "content" "document" "vscroll?:" "entry" "style:" "edge" "border-type:" "137" "140" "64" "13" "kind-border" "8" "50" "0" "Label" "27" "30" "description" "Caption" "Font" "font:" "16" "350" "9" "10" "Point" "position:" "title:" "title" "name:" "261" "500" "Dimension" "size:" "View")
        {Lisp-Entry "repository" #f 55 12 55 22 ("generate")}
        {Lisp-Entry "finish" #f 85 11 85 17 ("setup-repositories" "setup-name" "setup-kinds" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" #f 92 11 92 26 ("kinds" "'kinds" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "Kinds" #f 102 14 102 19 ("template:" "project" "kind:" "name:")}
        {Lisp-Entry "setup-kinds" #f 114 11 114 22 ("update-ok" "ensure-displayed" "0" "set-single-selection" "get-children" "child" "for-each" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "row" "'icon" "icon" "name" "'name" "get-property" "title" "let*" "father" "node" "function" "insert" "letrec" "remove-every-row" "Kinds" "parse-jml" "root" "name-text" "'name-text" "text" "kinds" "'kinds" "locate" "tree" "let")}
        {Lisp-Entry "setup-name" #f 135 11 135 21 ("name-text" "'name-text" "locate" "set-string-content")}
        {Lisp-Entry "setup-repositories" #f 139 11 139 29 ("car" "User" "'User" "find-repository" "either" "set-value" "repository-name" "->string" "list" "function" "map" "set-choices" "get-repositories" "repositories" "repository" "'repository" "locate" "combo" "let")}
        {Lisp-Entry "host-title" #f 154 16 154 26 ()}
        {Lisp-Entry "validate-dialog" #f 163 11 163 26 ("throw-cancel" "message-box" "when" "validate-name" "message" "new-directory" "destination" "repository-packages-directory" "tokenise-filename" "Directory" "new" "directory" "let*" "get-modal-result" "name" "repository" "template" "kind" "receive")}
        {Lisp-Entry "get-modal-result" #f 173 11 173 27 ("name-text" "'name-text" "get-string-content" "repository" "'repository" "locate" "get-value" "template" "'template" "kind" "'kind" "get-property" "values" "selected-kind" "node" "let")}
        {Lisp-Entry "selected-kind" #f 178 11 178 24 ("get-user-data" "node" "get-row" "row" "get-single-selection" "rank" "kinds" "'kinds" "locate" "tree" "let*")}
        {Lisp-Entry "get-tab-stops" #f 191 11 191 24 ("repository" "'repository" "get-body" "name-text" "'name-text" "kinds" "'kinds" "locate" "list")}
        {Lisp-Entry "on-selection-change" #f 203 11 203 30 ("update-ok" "evt")}
        {Lisp-Entry "on-content-change" #f 207 11 207 28 ("update-ok" "evt")}
        {Lisp-Entry "on-moniker-update" #f 211 11 211 28 ("update-ok" "evt")}
        {Lisp-Entry "on-double-click" #f 215 11 215 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-return-press" #f 223 11 223 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-escape-press" #f 231 11 231 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update-ok" #f 241 11 241 20 ("name-text" "'name-text" "get-string-content" "empty-string?" "not" "kind" "'kind" "selected-kind" "get-property" "and" "ok" "'ok" "locate" "set-enabled?")}
        {Lisp-Entry "validate-name" #f 245 11 245 24 ("else" "memv?" "numeric?" "char" "function" "every?" "alphabetic?" "eqv?" "or" "not" "first" "let" "format" "exists?" "cond" "destination" "name" "kind")}
        {Lisp-Entry "Header-Color" #f 267 14 267 26 ("255" "blue:" "green:" "120" "red:" "Color" "new")}
        {Lisp-Entry "draw" #f 271 11 271 15 ("Header-Color" "1" "White" "name:" "Color" "list" "50" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "context" "surface")}}
      {Lisp-Entry "Name-Text-View" #f 281 7 281 21 ("Plain-Text-View")
        {Lisp-Entry "get-context-menu" #f 284 11 284 27 ("new-text-context-menu")}}}})
"New-Repository-Dialog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "repositories" "New-Repository-Dialog.jazz"} 1236975967
    {Lisp-Entry "jedi.builder.repositories.New-Repository-Dialog" #f 37 9 37 56 ("Name-Text-View" "register-autoclass" "jazz")
      {Lisp-Entry "New-Repository-Dialog" #f 52 7 52 28 ("on-cancel" "253" "cancel" "on-ok" ":host" "action-handler:" "default?:" "80" "227" "167" "ok" "213" "name-text" "149" "name-border" "151" "name-label" "on-content-change" "content-change-handler:" "Default" "Text-Style" "default-style:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "dirname-text" "fill" "layout-type:" "vscroll?:" "hscroll?:" "edge" "border-type:" "19" "264" "125" "dirname-border" "127" "dirname-label" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "tooltip-text:" "tooltip?:" "focus-selects-all?:" "show-unfocused-selection?:" "editable?:" "text" "content" "scroller" "entry" "style:" "moniker-border" "on-moniker-update" ":form" "Event-Handler" "moniker-update-handler:" "display-protocol?:" "dir" "protocol:" "24" "289" "100" "141" "directory" "54" "103" "82" "directory-label" "8" "50" "0" "Label" "27" "30" "description" "Caption" "Font" "font:" "16" "350" "9" "10" "Point" "position:" "title:" "title" "name:" "261" "500" "Dimension" "size:" "View")
        {Lisp-Entry "directory" #f 55 12 55 21 ("generate")}
        {Lisp-Entry "finish" #f 84 11 84 17 ("dirname-text" "'dirname-text" "set-string-content" "directory" "'directory" "locate" "set-moniker" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" #f 90 11 90 26 ("dirname-text" "'dirname-text" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "host-title" #f 100 16 100 26 ()}
        {Lisp-Entry "validate-dialog" #f 109 11 109 26 ("throw-cancel" "message-box" "when" "validate-name" "message" "empty-string?" "if" "effective-name" "new-directory" "destination" "let*" "get-modal-result" "name" "dirname" "directory" "receive")}
        {Lisp-Entry "get-modal-result" #f 119 11 119 27 ("name-text" "'name-text" "dirname-text" "'dirname-text" "get-string-content" "directory" "'directory" "locate" "get-moniker" "values")}
        {Lisp-Entry "get-tab-stops" #f 128 11 128 24 ("name-text" "'name-text" "dirname-text" "'dirname-text" "directory" "'directory" "locate" "get-text" "list")}
        {Lisp-Entry "on-content-change" #f 140 11 140 28 ("update-ok" "evt")}
        {Lisp-Entry "on-moniker-update" #f 144 11 144 28 ("update-ok" "evt")}
        {Lisp-Entry "on-double-click" #f 148 11 148 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-return-press" #f 156 11 156 26 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "'ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-escape-press" #f 164 11 164 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update-ok" #f 174 11 174 20 ("dirname-text" "'dirname-text" "get-string-content" "empty-string?" "not" "directory" "'directory" "get-moniker" "and" "ok" "'ok" "locate" "set-enabled?")}
        {Lisp-Entry "validate-name" #f 178 11 178 24 ("else" "memv?" "numeric?" "char" "function" "every?" "alphabetic?" "eqv?" "or" "not" "first" "let" "string->symbol" "find-repository" "format" "exists?" "cond" "dirname" "destination" "name")}
        {Lisp-Entry "Header-Color" #f 212 14 212 26 ("255" "blue:" "green:" "120" "red:" "Color" "new")}
        {Lisp-Entry "draw" #f 216 11 216 15 ("Header-Color" "1" "White" "name:" "Color" "list" "50" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "context" "surface")}}
      {Lisp-Entry "Name-Text-View" #f 226 7 226 21 ("Plain-Text-View")
        {Lisp-Entry "get-context-menu" #f 229 11 229 27 ("new-text-context-menu")}}}})
"Outline-Showcase"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "showcase" "Outline-Showcase.jazz"} 1236975967
    {Lisp-Entry "jedi.showcase.Outline-Showcase" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Outline-Showcase" #f 48 7 48 23 ("View")}
      {Lisp-Entry "Outline-Showcase" #f 54 7 54 23 ("center" "justification:" "80" "50" "width:" ":icons" "portfolio:" "row" "selection-mode:" "info" "419" "518" "info-border" "415" "selection" "335" "visible-height" "16" "170" "315" "visible-count" "on-update-information" "260" "update-information" "on-remove-row" "190" "remove-rows" "on-add-row" "add-row" "on-collapse-row" "100" "collapse-row" "on-expand-row" "24" "160" "70" "expand-row" "on-setting" ":form" "Event-Handler" "action-handler:" "checked?:" "18" "120" "10" "340" "title:" "row-spacing" "0" "row-spacing:" "outline" "fill" "layout-type:" "content" "vscroll?:" "edge" "border-type:" "457" "319" "6" "3" "Point" "position:" "outline-border" "name:" "466" "940" "Dimension" "size:" "View")
        {Lisp-Entry "host-title" #f 91 16 91 26 ()}
        {Lisp-Entry "host-position" #f 95 16 95 29 ("60" "39" "Point")}
        {Lisp-Entry "host-size" #f 99 16 99 25 ("466" "940" "Dimension")}
        {Lisp-Entry "install" #f 108 11 108 18 ("update-information" "setup-outline" "nextmethod" "rest")}
        {Lisp-Entry "setup-outline" #f 119 11 119 24 ("10" "0" "naturals" "5" "=" "when" "n" "function" "for-each" "node" "add-row" "'outline" "locate" "outline" "let")}
        {Lisp-Entry "add-row" #f 135 11 135 18 ("random-color" "background:" "random-height" "row-height:" "father:" "Color-Row" "class:" "self" "context:" "add-row" "father" "outline")}
        {Lisp-Entry "random-height" #f 139 11 139 24 ("60" "random" "10" "+")}
        {Lisp-Entry "random-color" #f 143 11 143 23 ("Dark-Purple" "Dark-Blue" "Dark-Green" "Dark-Orange" "Dark-Red" "name:" "Color" "random-element")}
        {Lisp-Entry "resize" #f 157 11 157 17 ("info-border" "'info-border" "0" "outline-border" "'outline-border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-setting" #f 163 11 163 21 ("0" "1" "get-checked?" "if" "set-row-spacing" "row-spacing" "get-name" "case" "'outline" "locate" "outline" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-expand-row" #f 170 11 170 24 ("update-information" "get-row" "expand" "when" "get-selection" "row" "'outline" "locate" "outline" "let*" "evt")}
        {Lisp-Entry "on-collapse-row" #f 178 11 178 26 ("update-information" "get-row" "collapse" "when" "get-selection" "row" "'outline" "locate" "outline" "let*" "evt")}
        {Lisp-Entry "Mark" #f 186 14 186 18 ()}
        {Lisp-Entry "on-add-row" #f 190 11 190 21 ("update-information" "random-color" "background:" "random-height" "row-height:" "collapsed" "'collapsed" "state:" "father:" "add-row" "get-row" "essay" "Mark" "if" "row" "get-shift?" "use-mark?" "get-selection" "sel" "'outline" "locate" "outline" "let*" "evt")}
        {Lisp-Entry "on-remove-row" #f 199 11 199 24 ("update-information" "remove-row" "get-row" "essay" "Mark" "if" "row" "get-shift?" "use-mark?" "get-selection" "sel" "'outline" "locate" "outline" "let*" "evt")}
        {Lisp-Entry "on-update-information" #f 208 11 208 32 ("update-information" "evt")}
        {Lisp-Entry "update-information" #f 217 11 217 29 ("display-outline" "update-fields")}
        {Lisp-Entry "update-fields" #f 222 11 222 24 ("get-selection" "selection" "'selection" "get-visible-height" "visible-height" "'visible-height" "get-visible-count" "format" "visible-count" "'visible-count" "set-title" "'outline" "locate" "outline" "let")}
        {Lisp-Entry "display-outline" #f 230 11 230 26 ("get-root-row" "remove-every-row" "with-update-locked" "subrow" "get-sons" "iterate" "display-row" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "subdest" "let" "dest" "row" "function" "proc" "'info" "info" "'outline" "locate" "outline" "letrec")}
        {Lisp-Entry "display-row" #f 247 11 247 22 ("list" "get-next" "c5" "get-previous" "c4" "c3" "get-state" "c2" "get-level" "Tree-Label" "c1" "get-image" "image:" "get-title" "title:" "get-background" "color:" "Tree-Node" "new" "c0" "Dark-Blue" "Dark-Red" "name:" "Color" "if" "color" "get-visible?" "visible?" "row-rank" "essay" "function" "rank" "get-children" "car" "node" "let*" "row" "outline")}
        {Lisp-Entry "row-rank" #f 261 11 261 19 ("error" "get-root-row" "get-sons" "iterate" "increase!" "continuation-return" "eq?" "if" "subrow" "proc" "-1" "rank" "letrec" "return" "function" "continuation-capture" "row" "outline")}
        {Lisp-Entry "Color-Row" #f 280 9 280 18 ("Outline-Row")
          {Lisp-Entry "background" #f 283 14 283 24 ("generate")}
          {Lisp-Entry "draw-background" #f 286 13 286 28 ("fill-rect" "get-bounds" "bounds" "let" "background" "when" "context" "surface")}}}}})
"Package"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "repositories" "Package.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.repositories.Package" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Package" #f 49 7 49 14 ("Component")
        {Lisp-Entry "title" #f 52 12 52 17 ("generate")}
        {Lisp-Entry "print" #f 55 11 55 16 ("title" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-class-image" #f 67 16 67 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 71 16 71 37 ("nextmethod" "else" "title" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" #f 77 11 77 33 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 81 11 81 27 ("self" "class-of" "type-name" "->string" "title" "either")}
        {Lisp-Entry "set-presentation" #f 85 11 85 27 ("title:" "self" "set-property" "presentation" "designer")}
        {Lisp-Entry "addable-class?" #f 89 11 89 25 ("Project-Group" "Project-File" "subtype?" "or" "class")}
        {Lisp-Entry "get-addable-classes" #f 94 11 94 30 ("Project-Group" "list")}
        {Lisp-Entry "get-row-instance" #f 106 11 106 27 ("nextmethod" "else" "nullable?:" "String-Row" "new" "title" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 112 11 112 37 ("title")}}}})
"Package-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Package-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Package-Doc" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Package-Doc" #f 45 7 45 18 ("Category-Doc")
        {Lisp-Entry "get-class-image" #f 53 16 53 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" #f 57 11 57 37 ("extends" "package-name")}}}})
"Package-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Package-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Package-Entry" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Package-Entry" #f 45 7 45 20 ("Hierarchical-Entry")
        {Lisp-Entry "present-name" #f 48 11 48 23 ("qualified" "join")}
        {Lisp-Entry "get-image" #f 52 11 52 20 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" #f 61 11 61 25 ("references" "update-index" "key" "function" "for-each" "references-index" "definitions-index")}}}})
"Presenter-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "workspace" "Presenter-Workspace.jazz"} 1229802703
    {Lisp-Entry "jedi.workspace.Presenter-Workspace" #f 37 9 37 43 ("jazz")
      {Lisp-Entry "Presenter-Workspace" #f 46 7 46 26 ("Text-Palette" "Containment-Editor" "Alignment-Editor" "Designer-Manager" "59" "Toolbox-Manager" "35" "Output-Log" "Search-Results" "Console-Manager" "Presentation-Properties" "selection" "39" "245" "Presentation-Branches" "Presentation-Components" "model-name:" "second" "-38" "vert" "5" "Rect" "insets:" "18" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 78 11 78 23 ("presenter" "'presenter")}}}})
"Primitive-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Primitive-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Primitive-Doc" #f 37 9 37 35 ("jazz")
      {Lisp-Entry "Primitive-Doc" #f 45 7 45 20 ("Definition-Doc")
        {Lisp-Entry "get-class-image" #f 53 16 53 31 ("Bitmap-Resource")}}}})
"Profile-Results"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "profiler" "Profile-Results.jazz"} 1236975967
    {Lisp-Entry "jazz.language.jazz.profiler.Profile-Results" #f 37 9 37 52 ("Calls-Tree" "register-autoclass" "jazz")
      {Lisp-Entry "Profile-Results" #f 52 7 52 22 ("on-return-press" "return-press-handler:" "on-select-location" "Selection-Handler" "selection-handler:" "calls" "fill" "vscroll?:" "hscroll?:" "document" "style:" "center" "on-refresh" "refresh" "0" "6" "on-reset-profile" "reset" "on-stop-profile" "stop" "on-start-profile" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "22" "start" "tools" "name:" "border" "layout-type:" "612" "412" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "host-icon" #f 76 16 76 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 80 16 80 26 ()}
        {Lisp-Entry "host-position" #f 84 16 84 29 ("14" "28" "Point")}
        {Lisp-Entry "host-size" #f 88 16 88 25 ("608" "408" "Dimension")}
        {Lisp-Entry "get-tools-view" #f 97 11 97 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" #f 101 11 101 24 ("get-tree" "acquire-focus")}
        {Lisp-Entry "get-tree" #f 110 11 110 19 ("calls" "'calls" "locate")}
        {Lisp-Entry "on-start-profile" #f 119 11 119 27 ("user-message" "start-profile" "evt")}
        {Lisp-Entry "on-stop-profile" #f 124 11 124 26 ("user-message" "view-profile" "stop-profile" "evt")}
        {Lisp-Entry "on-reset-profile" #f 130 11 130 27 ("user-message" "view-profile" "reset-profile" "stop-profile" "evt")}
        {Lisp-Entry "on-refresh" #f 137 11 137 21 ("view-profile" "evt")}
        {Lisp-Entry "on-select-location" #f 141 11 141 29 ("edit-source" "evt")}
        {Lisp-Entry "*frame-indicator*" #f 150 14 150 31 ("94" "blue:" "146" "green:" "255" "red:" "Color" "color:" "Frame-Indicator" "new")}
        {Lisp-Entry "edit-source" #f 154 11 154 22 ("selected-location" "*frame-indicator*" "edit")}
        {Lisp-Entry "selected-frame" #f 163 11 163 25 ("get-row" "get-user-data" "not" "if" "get-single-selection" "rank" "get-tree" "tree" "let")}
        {Lisp-Entry "selected-location" #f 171 11 171 28 ("second" "not" "if" "selected-frame" "frame" "let")}
        {Lisp-Entry "view-profile" #f 183 11 183 23 ("active-profile" "get-tree" "view-profile")}}
      {Lisp-Entry "Calls-Tree" #f 192 7 192 17 ("percentage" "75" "count" "250" "width:" "title:" "name:" "procedure" "filled-column:" ":icons" "portfolio:" "Tree-View")
        {Lisp-Entry "view-profile" #f 207 11 207 23 ("view-calls" "remove-every-row" "function" "with-update-locked" "profile")}
        {Lisp-Entry "view-calls" #f 214 11 214 21 ("collect-calls" "butlast" "reverse" "father:" "user-data:" "->string" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "row" "number->string" "procedure" "last" "not-null?" "percentage" "count" "stack" "bind" "call" "function" "for-each" "present-identifier" "get-procedure-name" "name" "first" "creator" "let" "if" "either" "frame" "present-procedure" "define" "profile")}
        {Lisp-Entry "collect-calls" #f 240 11 240 24 ("third" "key:" ">" "sort" "cons" "set!" "calculate-percentage" "list" "call" "count" "stack" "function" "profile-calls" "iterate-table" "calls" "profile-total" "total" "let" "profile")}
        {Lisp-Entry "present-filename" #f 250 15 250 31 ("1" "+" "subseq" "if" "reversed?:" "find" "pos" "let" "filename")}
        {Lisp-Entry "calculate-percentage" #f 257 15 257 35 ("100." "10000" "*" "round" "/" "total" "count")}}}})
"Project"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "project" "Project.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.project.Project" #f 37 9 37 37 ("jazz")
      {Lisp-Entry "Project" #f 53 7 53 14 ("build?:" "Project-File")
        {Lisp-Entry "title" #f 56 12 56 17 ("generate")}
        {Lisp-Entry "icon" #f 57 12 57 16 ("generate")}
        {Lisp-Entry "owner" #f 58 12 58 17 ("generate")}
        {Lisp-Entry "copyright" #f 59 12 59 21 ("generate")}
        {Lisp-Entry "version" #f 60 12 60 19 ("generate")}
        {Lisp-Entry "include-extensions" #f 61 12 61 30 ("generate")}
        {Lisp-Entry "documentation" #f 62 12 62 25 ("generate")}
        {Lisp-Entry "editable?" #f 63 12 63 21 ("generate" "nil")}
        {Lisp-Entry "active?" #f 64 12 64 19 ("generate")}
        {Lisp-Entry "catalog?" #f 65 12 65 20 ("generate")}
        {Lisp-Entry "catalog-extensions" #f 66 12 66 30 ("generate")}
        {Lisp-Entry "catalog-heuristics" #f 67 12 67 30 ("generate")}
        {Lisp-Entry "module-name" #f 68 12 68 23 ("generate")}
        {Lisp-Entry "workbench" #f 71 8 71 17 ()}
        {Lisp-Entry "parent-project" #f 72 8 72 22 ()}
        {Lisp-Entry "catalog" #f 73 8 73 15 ()}
        {Lisp-Entry "initer-property?" #f 80 11 80 27 ("workbench" "'workbench" "eq?" "nextmethod" "or" "name")}
        {Lisp-Entry "default-name" #f 85 11 85 23 ("self" "class-of" "type-name" "identifier-name")}
        {Lisp-Entry "prepare" #f 89 11 89 18 ("workbench" "set!" "when" "workbench:" "getf" "arg" "let" "nextmethod" "rest")}
        {Lisp-Entry "print" #f 96 11 96 16 ("title" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-workbench" #f 108 18 108 31 ("workbench")}
        {Lisp-Entry "set-workbench" #f 112 18 112 31 ("workbench" "set!" "value")}
        {Lisp-Entry "get-parent-project" #f 116 18 116 36 ("parent-project")}
        {Lisp-Entry "set-parent-project" #f 120 18 120 36 ("parent-project" "set!" "value")}
        {Lisp-Entry "project-title" #f 124 26 124 39 ("self" "class-of" "type-name" "->string" "title" "either")}
        {Lisp-Entry "get-catalog" #f 128 18 128 29 ("catalog")}
        {Lisp-Entry "set-catalog" #f 132 18 132 29 ("catalog" "set!" "value")}
        {Lisp-Entry "concrete?" #f 141 26 141 35 ()}
        {Lisp-Entry "get-effective-source" #f 151 11 151 31 ("name" "get-manifest-source")}
        {Lisp-Entry "require-catalog" #f 160 11 160 26 ("create/register-catalog" "set!" "catalog" "unless")}
        {Lisp-Entry "create/register-catalog" #f 166 11 166 34 ("get-application" "get-cataloguer" "add-catalog" "create-catalog" "catalog" "let")}
        {Lisp-Entry "create-catalog" #f 172 11 172 25 ("catalog-output" "catalog-name" "self" "Project-Catalog" "new")}
        {Lisp-Entry "catalog-name" #f 176 29 176 41 ("name" "string->symbol" "title" "if")}
        {Lisp-Entry "catalog-output" #f 182 29 182 43 ("catalog-name" "format" "Profile" "'Profile" "list" "File" "new")}
        {Lisp-Entry "get-effective-editable?" #f 191 26 191 49 ("parent-project" "get-effective-editable?" "editable?" "nil?" "if")}
        {Lisp-Entry "for-each-file" #f 202 18 202 31 ("is?" "when" "level" "descendant" "function" "for-each-descendant" "Project-File" "type" "proc")}
        {Lisp-Entry "collect-files" #f 209 18 209 31 ("get-output" "put" "is?" "when" "file" "function" "for-each-file" "List-Factory" "new" "fact" "let" "Project-File" "type")}
        {Lisp-Entry "fold-files" #f 218 18 218 28 ("self" "get-children" "c" "for-each" ":skip" "eq?" "is?" "if" "ps" "let" "s" "f" "x" "function" "fold" "letrec" "Project-File" "type" "seed" "proc")}
        {Lisp-Entry "add-to-index" #f 238 11 238 23 ("self" "workbench" "add-to-project" "find-workbench" "set-workbench" "component" "name")}
        {Lisp-Entry "remove-from-index" #f 243 11 243 28 ("self" "workbench" "remove-from-project" "component" "name")}
        {Lisp-Entry "find-workbench" #f 247 29 247 43 ("find-ascendant" "Workbench" "is?" "if" "workbench" "creator" "either" "project" "let")}
        {Lisp-Entry "project-name" #f 259 26 259 38 ()}
        {Lisp-Entry "project-test" #f 268 26 268 38 ("message-box")}
        {Lisp-Entry "project-run" #f 277 26 277 37 ("message-box" "rest")}
        {Lisp-Entry "run-arguments" #f 281 26 281 39 ()}
        {Lisp-Entry "project-debug" #f 290 26 290 39 ("message-box" "rest")}
        {Lisp-Entry "debug-arguments" #f 294 26 294 41 ()}
        {Lisp-Entry "project-build" #f 303 26 303 39 ("message-box")}
        {Lisp-Entry "project-clean" #f 312 26 312 39 ("message-box")}
        {Lisp-Entry "get-class-image" #f 321 16 321 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 325 16 325 37 ("nextmethod" "else" "catalog-heuristics" "catalog-extensions" "catalog?" "editable?" "active?" "documentation" "include-extensions" "version" "copyright" "owner" "icon" "title" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" #f 342 11 342 33 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 346 11 346 27 ("self" "class-of" "type-name" "->string" "title" "either")}
        {Lisp-Entry "set-presentation" #f 350 11 350 27 ("title:" "self" "set-property" "presentation" "designer")}
        {Lisp-Entry "addable-class?" #f 354 11 354 25 ("Project-Group" "Project-File" "subtype?" "or" "class")}
        {Lisp-Entry "get-addable-classes" #f 359 11 359 30 ("Project-Group" "list")}
        {Lisp-Entry "get-row-instance" #f 371 11 371 27 ("nextmethod" "else" "Boolean-Row" "active?" "catalog?" "File-Row" "documentation" "Value-Row" "catalog-heuristics" "catalog-extensions" "include-extensions" "nullable?:" "String-Row" "new" "title" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 380 11 380 37 ("catalog-heuristics" "catalog-extensions" "catalog?" "active?" "documentation" "include-extensions" "version" "copyright" "owner" "icon" "title")}}}})
"Project-Catalog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "project" "Project-Catalog.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.project.Project-Catalog" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Project-Catalog" #f 46 7 46 22 ("Indexed-Catalog")
        {Lisp-Entry "project" #f 49 8 49 15 ()}
        {Lisp-Entry "initialize" #f 52 11 52 21 ("project~self" "set!" "nextmethod" "apply" "rest" "project")}
        {Lisp-Entry "get-project" #f 62 18 62 29 ("project")}
        {Lisp-Entry "get-extensions" #f 66 11 66 25 ("project" "get-catalog-extensions" "effective-catalog-extensions")}
        {Lisp-Entry "get-heuristics" #f 70 11 70 25 ("project" "get-catalog-heuristics")}
        {Lisp-Entry "get-active?" #f 79 11 79 22 ("project" "get-active?")}
        {Lisp-Entry "set-active?" #f 83 11 83 22 ("deactivate" "activate" "if" "set-active?" "project" "get-active?" "neq?" "when" "flag")}
        {Lisp-Entry "scan-directories" #f 96 11 96 27 ("increase!" "process-file" "ci=?" "test:" "member?" "not" "or" "get-extension" "ext" "when" "get-effective-source" "file" ":skip" "get-catalog?" "Project" "is?" "neq?" "and" "if" "seed" "project-file" "function" "project" "fold-files" "get-extensions" "extensions" "0" "processed" "let")}}}})
"Project-Designer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "project" "Project-Designer.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.project.Project-Designer" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Project-Designer" #f 46 7 46 23 ("Designer")
        {Lisp-Entry "print" #f 49 11 49 16 ("reference" "format" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Project-Directory"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "file" "Project-Directory.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.file.Project-Directory" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Project-Directory" #f 47 7 47 24 ("Project-Group")
        {Lisp-Entry "directory" #f 50 12 50 21 ("generate")}
        {Lisp-Entry "property-presentation" #f 58 16 58 37 ("nextmethod" "else" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-presentation" #f 64 11 64 27 ("get-name" "directory" "if")}
        {Lisp-Entry "can-rename-component?" #f 70 11 70 32 ()}
        {Lisp-Entry "get-row-instance" #f 74 11 74 27 ("nextmethod" "else" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 80 11 80 37 ("directory")}}}})
"Project-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Project-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Project-Doc" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Project-Doc" #f 45 7 45 18 ("Doc")}}})
"Project-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "file" "Project-File.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.file.Project-File" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Project-File" #f 46 7 46 19 ("Component")
        {Lisp-Entry "source" #f 49 12 49 18 ("generate")}
        {Lisp-Entry "build?" #f 50 12 50 18 ("generate")}
        {Lisp-Entry "project" #f 53 8 53 15 ()}
        {Lisp-Entry "get-project" #f 61 18 61 29 ("project")}
        {Lisp-Entry "set-project" #f 65 18 65 29 ("project" "set!" "value")}
        {Lisp-Entry "get-effective-source" #f 74 26 74 46 ("source")}
        {Lisp-Entry "require-catalog" #f 83 26 83 41 ("project" "require-catalog")}
        {Lisp-Entry "preprocess" #f 92 26 92 36 ("rest" "output" "log" "reporter" "project")}
        {Lisp-Entry "build" #f 96 26 96 31 ("rest" "output" "log" "reporter" "project")}
        {Lisp-Entry "get-class-image" #f 105 16 105 31 ("Bitmap-Resource")}
        {Lisp-Entry "presentation-property?" #f 109 11 109 33 ("source" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 113 11 113 27 ("get-name" "source" "if")}
        {Lisp-Entry "can-cut-component?" #f 120 11 120 29 ()}
        {Lisp-Entry "can-copy-component?" #f 125 11 125 30 ()}
        {Lisp-Entry "can-paste-component?" #f 130 11 130 31 ()}
        {Lisp-Entry "can-move-component?" #f 135 11 135 30 ()}
        {Lisp-Entry "get-categorized-properties" #f 139 11 139 37 ("build?" "source")}
        {Lisp-Entry "get-row-instance" #f 143 11 143 27 ("nextmethod" "else" "Boolean-Row" "build?" "File-Row" "new" "source" "field-name" "case" "property")}}}})
"Project-Group"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "file" "Project-Group.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.file.Project-Group" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Project-Group" #f 47 7 47 20 ("Group")
        {Lisp-Entry "presentation->name" #f 55 16 55 34 ("presentation")}
        {Lisp-Entry "name->presentation" #f 59 16 59 34 ("name")}
        {Lisp-Entry "can-cut-component?" #f 64 11 64 29 ()}
        {Lisp-Entry "can-copy-component?" #f 69 11 69 30 ()}
        {Lisp-Entry "can-paste-component?" #f 74 11 74 31 ()}
        {Lisp-Entry "can-move-component?" #f 79 11 79 30 ()}
        {Lisp-Entry "sort-components" #f 83 11 83 26 ("get-presentation" "1" "0" "Project-Group" "is?" "if" "cons" "component" "function" "key:" "nu<?" "sort" "components")}
        {Lisp-Entry "addable-class?" #f 89 11 89 25 ("Project-Group" "Project-File" "subtype?" "or" "class")}
        {Lisp-Entry "get-addable-classes" #f 94 11 94 30 ("Project-Group" "list")}}}})
"Project-Selector"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Project-Selector.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Project-Selector" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "Project-Selector" #f 52 7 52 23 ("5" "on-cancel" "cancel" "3" "on-ok" ":host" "default?:" "enabled?:" "24" "80" "tail" "ok" "south" "36" "buttonbar" "toplevel-controls?:" "235" "width:" "title:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-double-click" "double-click-handler:" "on-selection-change" "Selection-Handler" "selection-handler:" "name" "filled-column:" "content" "fill" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "center" "content-border" "on-toggle-hierarchical" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "hierarchical" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "33" "toolbar" "name:" "border" "layout-type:" "300" "500" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "hierarchical?" #f 71 8 71 21 ()}
        {Lisp-Entry "finish" #f 74 11 74 17 ("update" "nextmethod" "rest")}
        {Lisp-Entry "host-title" #f 79 16 79 26 ()}
        {Lisp-Entry "install-in-host" #f 83 11 83 26 ("get-tree" "acquire-focus" "select-active" "host")}
        {Lisp-Entry "get-tree" #f 93 11 93 19 ("content" "'content" "locate")}
        {Lisp-Entry "on-toggle-hierarchical" #f 102 11 102 33 ("update-buttons" "data" "'data" "use:" "update" "with-preserved-selection" "get-tree" "get-node-column" "set-toplevel-controls?" "not" "hierarchical?" "set!" "evt")}
        {Lisp-Entry "on-selection-change" #f 111 11 111 30 ("update-buttons" "evt")}
        {Lisp-Entry "default-action" #f 115 11 115 25 ("get-modal-result" "get-host" "end-modal" "ok-enabled?" "when")}
        {Lisp-Entry "update" #f 125 11 125 17 ("update-buttons" "update-content")}
        {Lisp-Entry "update-content" #f 130 11 130 25 ("update-flat" "update-hierarchical" "hierarchical?" "if" "remove-every-row" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "update-hierarchical" #f 140 11 140 30 ("collect-projects" "for-each" "not" "if" "get-parent" "parent" "project" "insert" "table-set!" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "row" "get-component-image" "image" "get-presentation" "title" "table-ref" "either" "father" "file" "add" "define" "eq?" "test:" "make-table" "rows" "get-workbench" "workbench" "let" "tree")}
        {Lisp-Entry "update-flat" #f 160 11 160 22 ("key:" "collect-projects" "string<?" "sort" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "get-component-image" "image" "get-presentation" "title" "project" "function" "for-each" "get-workbench" "workbench" "let" "tree")}
        {Lisp-Entry "update-buttons" #f 170 11 170 25 ("ok" "'ok" "locate" "set-enabled?" "selected-project" "project" "let")}
        {Lisp-Entry "select-active" #f 175 11 175 24 ("get-tree" "select-user-data-row" "get-active-project" "when")}
        {Lisp-Entry "get-modal-result" #f 185 11 185 27 ("selected-project")}
        {Lisp-Entry "ok-enabled?" #f 189 11 189 22 ("ok" "'ok" "locate" "get-enabled?")}
        {Lisp-Entry "on-double-click" #f 193 11 193 26 ("default-action" "evt")}
        {Lisp-Entry "on-return-press" #f 198 11 198 26 ("default-action" "evt")}
        {Lisp-Entry "on-escape-press" #f 203 11 203 26 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "selected-project" #f 213 11 213 27 ("concrete?" "Project" "is?" "and" "when" "get-tree" "get-single-selected-data" "file" "let")}}}})
"Prop-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "prop" "text" "Prop-Syntax.jazz"} 1236813156
    {Lisp-Entry "jazz.language.prop.text.Prop-Syntax" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Prop-Syntax" #f 45 7 45 18 ("Code-Syntax")
        {Lisp-Entry "Comment" #f 53 14 53 21 ("1" "make-string")}
        {Lisp-Entry "Title-Comment" #f 57 14 57 27 ("4" "make-string")}
        {Lisp-Entry "comment-string" #f 61 11 61 25 ("Comment")}
        {Lisp-Entry "title-comment-string" #f 65 11 65 31 ("Title-Comment")}}}})
"Prop-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "prop" "text" "Prop-Text-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.prop.text.Prop-Text-View" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Prop-Text-View" #f 48 7 48 21 ("Code-Text-View")
        {Lisp-Entry "install" #f 51 11 51 18 ("get-comment-color" "Comment" "'Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 58 16 58 29 ("prop-text" "'prop-text" "rest")}
        {Lisp-Entry "new-syntax" #f 62 11 62 21 ("Prop-Syntax" "new")}
        {Lisp-Entry "default-preferences" #f 71 14 71 33 ("form>>")}
        {Lisp-Entry "preferences" #f 76 11 76 22 ("prop-text" "documents" "get-preferences")}
        {Lisp-Entry "colorize-syntax" #f 80 11 80 26 ("colorize-comments" "rest")}
        {Lisp-Entry "colorize-comments" #f 84 11 84 28 ("Title" "'Title" "4" "+" "Comment" "'Comment" "stylize" "not" "if" "title?" "end" "start" "function" "for-each-comment" "text-beginning" "end:" "self" "Jazz-Explorer" "new" "expl" "let" "rest")}
        {Lisp-Entry "recolorize-text" #f 94 11 94 26 ("recolorize-row" "for-each" "1" "+" "get-row" "naturals" "range" "let" "end-row" "start")}
        {Lisp-Entry "recolorize-row" #f 99 11 99 25 ("recolorize-comments" "row")}
        {Lisp-Entry "recolorize-comments" #f 103 11 103 30 ("Title" "'Title" "Cell" "new" "Comment" "'Comment" "apply-style" "begin" "title-comment-string" "subseq" "nu=?" "<" "if" "4" "+" "title-end" "let" "20" "<=" "and" "when" "syntax" "comment-string" "search" "comment" "cardinality" "len" "paragraph-string" "line" "let*" "row")}}}})
"Properties-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "properties" "text" "Properties-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.properties.text.Properties-Entry" #f 37 9 37 55 ("jazz")
      {Lisp-Entry "Properties-Entry" #f 46 7 46 23 ("Indexed-Entry")
        {Lisp-Entry "english" #f 49 8 49 15 ()}
        {Lisp-Entry "construct-literal" #f 53 16 53 33 ("self" "new" "column" "line" "name" "context")}
        {Lisp-Entry "initialize" #f 57 11 57 21 ("nextmethod" "column" "line" "name")}
        {Lisp-Entry "print-catalog" #f 61 11 61 24 ("column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 73 11 73 20 ("Bitmap-Resource")}}}})
"Properties-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "properties" "text" "Properties-File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.language.properties.text.Properties-File-Entry" #f 37 9 37 60 ("jazz")
      {Lisp-Entry "Properties-File-Entry" #f 46 7 46 28 ("File-Entry")
        {Lisp-Entry "get-image" #f 49 11 49 20 ("Bitmap-Resource")}}}})
"Properties-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "properties" "text" "Properties-Parser.jazz"} 1236813157
    {Lisp-Entry "jazz.language.properties.text.Properties-Parser" #f 37 9 37 56 ("jazz")
      {Lisp-Entry "Properties-Parser" #f 46 7 46 24 ("File-Parser")
        {Lisp-Entry "parse" #f 49 11 49 16 ("parse-definitions" "catalog" "Properties-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" #f 53 11 53 28 ("get-output" "length" "0" "naturals" "put" "when" "parse-line" "entry" "no" "line" "function" "for-each" "List-Factory" "new" "fact" "char-encoding" "char-encoding:" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "parse-line" #f 65 11 65 21 ("Properties-Entry" "new" "subseq" "name" "end" "let*" ">" "start:" "properties-constituent?" "skip" "start" "0" "=" "when" "skip-whitespace" "col" "let" "no" "line")}
        {Lisp-Entry "properties-constituent?" #f 76 11 76 34 ("eqv?" "c-constituent?" "or" "char")}}}})
"Properties-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "properties" "text" "Properties-Syntax.jazz"} 1236813157
    {Lisp-Entry "jazz.language.properties.text.Properties-Syntax" #f 37 9 37 56 ("jazz")
      {Lisp-Entry "Properties-Syntax" #f 46 7 46 24 ("Code-Syntax")
        {Lisp-Entry "get-constituent-test" #f 54 11 54 31 ("c-constituent?")}}}})
"Properties-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "properties" "text" "Properties-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.properties.text.Properties-Text-Preferences" #f 37 9 37 66 ("jazz")
      {Lisp-Entry "Properties-Text-Preferences" #f 50 7 50 34 ("Dark-Blue" "keyword-color:" "definition-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "CLike-Text-Preferences")}}})
"Properties-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "properties" "text" "Properties-Text-View.jazz"} 1236813157
    {Lisp-Entry "jazz.language.properties.text.Properties-Text-View" #f 37 9 37 59 ("jazz")
      {Lisp-Entry "Properties-Text-View" #f 47 7 47 27 ("Code-Text-View")
        {Lisp-Entry "install" #f 50 11 50 18 ("get-keyword-color" "Keyword" "'Keyword" "get-definition-color" "Definition" "'Definition" "get-line-comment-color" "Line-Comment" "'Line-Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 59 16 59 29 ("properties-text" "'properties-text" "rest")}
        {Lisp-Entry "preferences" #f 63 11 63 22 ("properties-text" "documents" "get-preferences")}
        {Lisp-Entry "host-workspaces" #f 72 11 72 26 ("text")}
        {Lisp-Entry "favorite-completions" #f 81 11 81 31 ("properties-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "explorer-class" #f 90 11 90 25 ("C-Explorer")}
        {Lisp-Entry "get-context" #f 99 11 99 22 ("c")}
        {Lisp-Entry "current-name" #f 103 11 103 23 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" #f 107 11 107 18 ("read-string-element" "0" "element" "eqv?" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" #f 115 11 115 23 ("current-name")}
        {Lisp-Entry "current-expr-range" #f 119 11 119 29 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" #f 125 11 125 21 ("get-range" "outer-expr" "end:" "start:" "self" "C-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" #f 131 11 131 18 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" #f 140 12 140 19 ("list")}
        {Lisp-Entry "get-headers" #f 145 11 145 22 ("headers")}
        {Lisp-Entry "get-first-special?" #f 149 11 149 29 ()}
        {Lisp-Entry "Definitions" #f 158 12 158 23 ()}
        {Lisp-Entry "get-definitions" #f 162 11 162 26 ("Definitions")}
        {Lisp-Entry "Keywords" #f 171 12 171 20 ()}
        {Lisp-Entry "get-keywords" #f 175 11 175 23 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" #f 184 14 184 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 187 14 187 29 ()}
        {Lisp-Entry "syntax-targets" #f 191 11 191 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 197 11 197 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" #f 203 11 203 33 ("get-keywords" "keyword" "'keyword" "get-definitions" "definition" "'definition" "str" "function" "map" "line-comment" "'line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" #f 209 11 209 34 ("c-constituent?" "self" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" #f 213 11 213 24 ("Keyword" "'Keyword" "keyword" "Definition" "'Definition" "colorize-keyword" "definition" "Title" "'Title" "Line-Comment" "'Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}}})
"Property-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Property-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Property-Doc" #f 37 9 37 34 ("jazz")
      {Lisp-Entry "Property-Doc" #f 45 7 45 19 ("Slot-Doc")
        {Lisp-Entry "getter" #f 48 12 48 18 ("generate")}
        {Lisp-Entry "setter" #f 49 12 49 18 ("generate")}
        {Lisp-Entry "construct-literal" #f 53 16 53 33 ("doc:" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-image" #f 62 16 62 31 ("Bitmap-Resource")}}}})
"Python-Class-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "text" "Python-Class-Entry.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python.text.Python-Class-Entry" #f 37 9 37 53 ("jazz")
      {Lisp-Entry "Python-Class-Entry" #f 46 7 46 25 ("C-Definition-Entry")
        {Lisp-Entry "get-image" #f 54 11 54 20 ("Bitmap-Resource")}}}})
"Python-Def-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "text" "Python-Def-Entry.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python.text.Python-Def-Entry" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "Python-Def-Entry" #f 46 7 46 23 ("C-Definition-Entry")
        {Lisp-Entry "get-image" #f 54 11 54 20 ("Bitmap-Resource")}}}})
"Python-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "text" "Python-Explorer.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python.text.Python-Explorer" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Python-Explorer" #f 46 7 46 22 ("C-Explorer")}}})
"Python-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "text" "Python-File-Entry.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python.text.Python-File-Entry" #f 37 9 37 52 ("jazz")
      {Lisp-Entry "Python-File-Entry" #f 46 7 46 24 ("File-Entry")}}})
"Python-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "text" "Python-Parser.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python.text.Python-Parser" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "Python-Parser" #f 46 7 46 20 ("File-Parser")
        {Lisp-Entry "parse" #f 49 11 49 16 ("parse-definitions" "catalog" "Python-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" #f 53 11 53 28 ("get-output" "length" "0" "naturals" "find-def" "fn" "put" "when" "find-class" "class" "n" "line" "function" "for-each" "List-Factory" "new" "fact" "char-encoding" "char-encoding:" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "Class" #f 73 12 73 17 ()}
        {Lisp-Entry "find-class" #f 77 11 77 21 ("subseq" "Python-Class-Entry" "new" "c-constituent?" "skip" ">" "+" "start" "let*" "start:" "Class" "search" "when" "skip-whitespace" "col" "cardinality" "len" "let" "n" "line")}
        {Lisp-Entry "Def" #f 95 12 95 15 ()}
        {Lisp-Entry "find-def" #f 99 11 99 19 ("subseq" "Python-Def-Entry" "new" "c-constituent?" "skip" ">" "+" "start" "let*" "start:" "Def" "search" "when" "skip-whitespace" "col" "cardinality" "len" "let" "n" "line")}}}})
"Python-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "text" "Python-Syntax.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python.text.Python-Syntax" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "Python-Syntax" #f 45 7 45 20 ("Code-Syntax")
        {Lisp-Entry "get-constituent-test" #f 53 11 53 31 ("c-constituent?")}}}})
"Python-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "text" "Python-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.python.text.Python-Text-Preferences" #f 37 9 37 58 ("jazz")
      {Lisp-Entry "Python-Text-Preferences" #f 50 7 50 30 ("completions:" "Dark-Blue" "keyword-color:" "definition-color:" "Dark-Green" "balanced-comment-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" #f 53 12 53 23 ("generate")}
        {Lisp-Entry "line-comment-color" #f 54 12 54 30 ("generate")}
        {Lisp-Entry "balanced-comment-color" #f 55 12 55 34 ("generate")}
        {Lisp-Entry "definition-color" #f 56 12 56 28 ("generate")}
        {Lisp-Entry "keyword-color" #f 57 12 57 25 ("generate")}
        {Lisp-Entry "keywords" #f 58 12 58 20 ("generate")}
        {Lisp-Entry "completions" #f 59 12 59 23 ("generate")}
        {Lisp-Entry "get-categorized-properties" #f 82 11 82 37 ("keyword-color" "definition-color" "line-comment-color" "title-color" "completions" "keywords")}
        {Lisp-Entry "property-presentation" #f 87 16 87 37 ("nextmethod" "else" "completions" "keywords" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" #f 98 11 98 27 ("nextmethod" "else" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}}}})
"Python-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "text" "Python-Text-View.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python.text.Python-Text-View" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "Python-Text-View" #f 46 7 46 23 ("Code-Text-View")
        {Lisp-Entry "install" #f 49 11 49 18 ("get-keyword-color" "Keyword" "'Keyword" "get-definition-color" "Definition" "'Definition" "get-balanced-comment-color" "Balanced-Comment" "'Balanced-Comment" "get-line-comment-color" "Line-Comment" "'Line-Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 59 16 59 29 ("python-text" "'python-text" "rest")}
        {Lisp-Entry "preferences" #f 63 11 63 22 ("python-text" "documents" "get-preferences")}
        {Lisp-Entry "host-workspaces" #f 72 11 72 26 ("text")}
        {Lisp-Entry "favorite-completions" #f 81 11 81 31 ("preferences" "get-completions")}
        {Lisp-Entry "commented?" #f 85 11 85 21 ("Line-Comment" "'Line-Comment" "Title" "'Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "return-press" #f 97 11 97 23 ("tabulate" "nextmethod" "key")}
        {Lisp-Entry "explorer-class" #f 107 11 107 25 ("Python-Explorer")}
        {Lisp-Entry "get-context" #f 116 11 116 22 ("c")}
        {Lisp-Entry "current-name" #f 120 11 120 23 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" #f 124 11 124 18 ("read-string-element" "element" "eqv?" "if" "0" "cardinality" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" #f 133 11 133 23 ("current-name")}
        {Lisp-Entry "current-expr-range" #f 137 11 137 29 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" #f 143 11 143 21 ("get-range" "outer-expr" "end:" "start:" "self" "Python-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" #f 149 11 149 18 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" #f 158 12 158 19 ()}
        {Lisp-Entry "get-headers" #f 162 11 162 22 ("headers")}
        {Lisp-Entry "get-first-special?" #f 166 11 166 29 ()}
        {Lisp-Entry "Definitions" #f 175 12 175 23 ()}
        {Lisp-Entry "get-definitions" #f 179 11 179 26 ("Definitions")}
        {Lisp-Entry "Keywords" #f 188 12 188 20 ()}
        {Lisp-Entry "get-keywords" #f 212 29 212 41 ("Keywords")}
        {Lisp-Entry "Balanced-Comment" #f 222 14 222 30 ()}
        {Lisp-Entry "Syntax-Targets" #f 226 14 226 28 ()}
        {Lisp-Entry "Syntax-Automata" #f 229 14 229 29 ()}
        {Lisp-Entry "syntax-targets" #f 233 11 233 25 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" #f 239 11 239 26 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" #f 245 11 245 33 ("get-keywords" "keyword" "'keyword" "get-definitions" "definition" "'definition" "str" "function" "map" "balanced-comment" "'balanced-comment" "Balanced-Comment" "line-comment" "'line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" #f 252 11 252 34 ("c-constituent?" "self" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" #f 256 11 256 24 ("Keyword" "'Keyword" "keyword" "Definition" "'Definition" "colorize-keyword" "definition" "Balanced-Comment" "'Balanced-Comment" "colorize-balanced-comment" "balanced-comment" "Title" "'Title" "Line-Comment" "'Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "colorize-balanced-comment" #f 264 11 264 36 ("set!" "continuation-return" "apply-coloring" "3" "2" "+" "Cell" "new" "balanced-comment" "'balanced-comment" "=" "col" "row" "type" "target" "bind" "car" "info" "not-null?" "while" "return" "function" "continuation-capture" "get-char" "/=" "if" "cdr" "scan" "let" "style" "colorizer" "end" "start" "found")}}}})
"Recordable"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "recorder" "Recordable.jazz"} 1236813157
    {Lisp-Entry "jazz.recorder.Recordable" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Recordable" #f 45 11 45 21 ()}}})
"Registry-Viewer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "registry" "Registry-Viewer.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.registry.Registry-Viewer" #f 37 9 37 52 ("jazz")
      {Lisp-Entry "Registry-Viewer" #f 51 7 51 22 ("419" "width:" ":icons" "portfolio:" "on-selection-change" "selection-handler:" "registry" "fill" "content" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "center" "registry-border" "on-view-type-libs" ":form" "Event-Handler" "action-handler:" "selected?:" "22" "70" "title:" "type-libs" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "33" "300" "toolbar" "name:" "border" "layout-type:" "639" "436" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "conclude" #f 67 11 67 19 ("view-type-libs" "nextmethod" "initargs")}
        {Lisp-Entry "host-icon" #f 77 16 77 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 81 16 81 26 ()}
        {Lisp-Entry "host-position" #f 85 16 85 29 ("14" "28" "Point")}
        {Lisp-Entry "host-size" #f 89 16 89 25 ("635" "416" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 93 11 93 26 ("home")}
        {Lisp-Entry "on-view-type-libs" #f 102 11 102 28 ("view-type-libs" "evt")}
        {Lisp-Entry "view-type-libs" #f 106 11 106 25 ("second" "key:" "get-output" "<" "sort" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "list" "children:" "add-row" "empty-string?" "not" "pathname" "language-id" "minor-version" "major-version" "desc" "bind" "with-update-locked" "cons" "put" "when" "get-information" "info" "let" "guid-name" "function" "for-each" "List-Factory" "new" "informations" "gather" "guid-names" "iterate-subkeys" "all" "registry" "'registry" "locate" "tree" "let*" "user-message" "Registry" "open-type-lib" "type-lib" "with-closed")}
        {Lisp-Entry "on-selection-change" #f 129 11 129 30 ("set-visible?" "bring-to-front" "view-file" "get-guest" "view-registered-typelib" "cardinality" "-" "1" "subseq" "GUID" "new" "guid" "Type-Viewer" "singleton" "frame" "pathname" "language-id" "minor-version" "major-version" "desc" "guid-name" "bind" "get-row" "get-user-data" "info" "let" "when" "get-single-selection" "selection" "get-sender" "sender" "let*" "evt")}}}})
"Repositories"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "repositories" "Repositories.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.repositories.Repositories" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Repositories" #f 49 7 49 19 ("Component")
        {Lisp-Entry "get-class-image" #f 57 16 57 31 ("Bitmap-Resource")}}}})
"Repositories-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "repositories" "Repositories-Manager.jazz"} 1237238073
    {Lisp-Entry "jedi.builder.repositories.Repositories-Manager" #f 37 9 37 55 ("jazz")
      {Lisp-Entry "Repositories-Manager" #f 56 7 56 27 ("329" "width:" "title:" "on-context-menu" ":form" "Event-Handler" "context-menu-handler:" "multiple-selection?:" "show-header?:" ":icons" "portfolio:" "repositories" "shown?:" "header" "content" "flat?:" "hscroll?:" "vscroll?:" "scroller" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "external-name" #f 70 16 70 29 ("repositories-manager" "'repositories-manager" "rest")}
        {Lisp-Entry "host-icon" #f 79 16 79 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 83 16 83 26 ()}
        {Lisp-Entry "install-in-host" #f 87 11 87 26 ("setup-repositories" "host")}
        {Lisp-Entry "setup-repositories" #f 91 11 91 29 ("update")}
        {Lisp-Entry "get-tools-view" #f 100 11 100 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" #f 104 11 104 24 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" #f 114 11 114 19 ("repositories" "'repositories" "locate")}
        {Lisp-Entry "update" #f 123 11 123 17 ("get-repositories" "collapsed" "'collapsed" "add-repository" "repository" "for-each" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "add-row" "repositories-row" "remove-every-row" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "add-repository" #f 134 11 134 25 ("package-name" "key:" "repository-packages" "string<=?" "sort" "add-package" "package" "function" "for-each" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "repository-row" "Bitmap-Resource" "image" "->string" "title" "repository-name" "name" "let" "repository" "state" "father" "tree")}
        {Lisp-Entry "add-package" #f 145 11 145 22 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "else" "get-workbench" "find-project" "Bitmap-Resource" "not" "cond" "image" "->string" "title" "parse-package-project" "project-module" "project-name" "receive" "package-name" "name" "let" "package" "father" "tree")}
        {Lisp-Entry "Repository-Template" #f 160 14 160 33 ("Jazz" "Directory")}
        {Lisp-Entry "on-new-repository" #f 164 11 164 28 ("save-repositories" "new-directory" "install/add-repository" "copy-template" "'name" "'dirname" "cons" "list" "associations" "empty-string?" "if" "effective-name" "destination" "Repository-Template" "template" "let" "get-current-directory" "directory:" "New-Repository-Dialog" "get-modal" "name" "dirname" "directory" "receive" "evt")}
        {Lisp-Entry "on-register-repository" #f 175 11 175 33 ("save-repositories" "install/add-repository" "format" "message-box" "find-repository" "name" "exists?" "if" "new-file" "repository-file" "choose-directory" "dir" "cadr" "read" "form" "let" "input" "function" "parse" "call-with-input-file" "file" "load-repository-name" "define" "evt")}
        {Lisp-Entry "install/add-repository" #f 193 11 193 33 ("row-rank" "set-single-selection" "ensure-expanded" "expanded" "'expanded" "add-repository" "repository-row" "parse" "install-repository" "repository" "selected-row" "repositories-row" "get-tree" "tree" "let" "dir")}
        {Lisp-Entry "save-repositories" #f 202 11 202 28 ("get-application" "set-preferences-property" "repository-packages-directory" "tokenise-filename" "Directory" "new" "anchorize" "repository" "function" "map" "directories" "collect-user-repositories" "repositories" "'repositories" "get-preferences" "pref" "let")}
        {Lisp-Entry "collect-user-repositories" #f 211 11 211 36 ("get-repositories" "system-repository?" "not" "repository" "function" "collect-if")}
        {Lisp-Entry "system-repository?" #f 217 15 217 33 ("User" "Jazz" "Bin" "repository-name" "memq?" "repository")}
        {Lisp-Entry "Package-Template" #f 226 14 226 30 ("Jazz" "Directory")}
        {Lisp-Entry "on-edit-repository" #f 230 11 230 29 ("selected-objects" "edit-repository" "for-each" "evt")}
        {Lisp-Entry "edit-repository" #f 234 11 234 26 ("new-file" "get-application" "edit-document" "repository-packages-directory" "tokenise-filename" "Directory" "new" "dir" "let" "repository")}
        {Lisp-Entry "on-new-package" #f 239 11 239 25 ("row-rank" "set-single-selection" "ensure-expanded" "add-package" "package-row" "selected-row" "repository-row" "get-tree" "tree" "let" "repository-add-package" "parse" "load-package" "new-file" "file" "copy-template" "project-directories" "'project-directories" "format" "project-module" "'project-module" "'project" "'package" "cons" "list" "associations" "destination" "repository-packages-directory" "tokenise-filename" "Directory" "new" "directory" "Package-Template" "template" "last" "capitalize" "project" "split-identifier" "->string" "map" "package-parts" "string->symbol" "package-name" "let*" "selected-object" "repository:" "New-Package-Dialog" "get-modal" "package" "repository" "receive" "evt")}
        {Lisp-Entry "on-scan-new-packages" #f 262 11 262 31 ("format-plural" "length" "count" "row-rank" "row" "set-selection" "ensure-expanded" "add-package" "package-row" "package" "function" "map" "rows" "get-tree" "tree" "user-message" "null?" "if" "repository-install-packages" "packages" "get-user-data" "repository" "selected-row" "repository-row" "let" "evt")}
        {Lisp-Entry "on-unregister-repository" #f 281 11 281 35 ("save-repositories" "selected-rows" "uninstall/remove-repository" "for-each" "evt")}
        {Lisp-Entry "uninstall/remove-repository" #f 286 11 286 38 ("get-tree" "remove-row" "uninstall-repository" "get-user-data" "repository" "let" "row")}
        {Lisp-Entry "on-edit-package" #f 297 11 297 26 ("selected-objects" "edit-package" "for-each" "evt")}
        {Lisp-Entry "edit-package" #f 301 11 301 23 ("package-name" "->string" "list" "new-file" "get-application" "edit-document" "package-repository" "repository-packages-directory" "tokenise-filename" "Directory" "new" "dir" "let" "package")}
        {Lisp-Entry "on-install-in-workbench" #f 306 11 306 34 ("selected-rows" "install-in-workbench" "row" "function" "for-each" "get-tree" "tree" "get-workbench" "workbench" "get-application" "get-workbench-manager" "workbench-manager" "let" "evt")}
        {Lisp-Entry "install-in-workbench" #f 315 11 315 31 ("invalidate-cell" "Bitmap-Resource" "set-image" "get-cell-data" "node" "0" "Cell" "new" "cell" "row-rank" "rank" "install-project" "find-module-source" "file" "parse-package-project" "module" "name" "receive" "get-user-data" "package" "let" "row" "tree" "workbench" "workbench-manager")}
        {Lisp-Entry "parse-package-project" #f 327 11 327 32 ("cdr" "'module" "assq" "cadr" "module" "car" "name" "values" "Bin" "'Bin" "repository-name" "eq?" "not" "or" "if" "package-project" "project" "package-repository" "repository" "let" "package")}
        {Lisp-Entry "package-project-installable?" #f 337 11 337 39 ("get-workbench" "find-project" "not" "and" "parse-package-project" "module" "name" "receive" "package")}
        {Lisp-Entry "selected-kind" #f 347 11 347 24 ("package" "'package" "package?" "repository" "'repository" "repository?" "repositories" "'repositories" "not" "cond" "object")}
        {Lisp-Entry "selected-kind/objects" #f 356 11 356 32 ("not" "selected-kind" "key:" "uniform" "kind" "values" "null?" "if" "get-tree" "get-selected-data" "objects" "let")}
        {Lisp-Entry "selected-objects" #f 366 11 366 27 ("selected-kind/objects" "objects" "kind" "receive")}
        {Lisp-Entry "selected-object" #f 371 11 371 26 ("selected-objects" "car")}
        {Lisp-Entry "selected-rows" #f 375 11 375 24 ("get-tree" "get-selected-rows")}
        {Lisp-Entry "selected-row" #f 379 11 379 23 ("get-tree" "get-selected-row")}
        {Lisp-Entry "on-context-menu" #f 388 11 388 26 ("track-popup-menu" "when" "new-menu" "menu" "let" "function" "with-context-click" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "new-menu" #f 399 18 399 26 ("new-package-menu" "package" "new-repository-menu" "repository" "new-repositories-menu" "repositories" "case" "not" "if" "selected-kind/objects" "objects" "kind" "receive")}
        {Lisp-Entry "new-repositories-menu" #f 409 11 409 32 ("layout-menu" "cleanup-separators" "get-tree" "client:" "Repositories-Menu" "new" "menu" "let" "objects")}
        {Lisp-Entry "new-repository-menu" #f 416 11 416 30 ("layout-menu" "cleanup-separators" "unregister-repository" "'unregister-repository" "unregister-repository-separator" "'unregister-repository-separator" "system-repository?" "some?" "new-package" "'new-package" "new-package-separator" "'new-package-separator" "locate" "set-visible?" "1" "length" ">" "when" "get-tree" "client:" "Repository-Menu" "new" "menu" "let" "objects")}
        {Lisp-Entry "new-package-menu" #f 429 11 429 27 ("layout-menu" "cleanup-separators" "install-package" "'install-package" "install-package-separator" "'install-package-separator" "locate" "set-visible?" "package-project-installable?" "every?" "unless" "get-tree" "client:" "Package-Menu" "new" "menu" "let" "objects")}}
      {Lisp-Entry "Repositories-Menu" #f 444 7 444 24 ("register-repository" "repositories-manager" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "new-repository" "name:" "Context-Menu")}
      {Lisp-Entry "Repository-Menu" #f 459 7 459 22 ("unregister-repository" "unregister-repository-separator" "scan-new-packages" "new-package" "new-package-separator" "repositories-manager" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "edit-repository" "name:" "Context-Menu")}
      {Lisp-Entry "Package-Menu" #f 478 7 478 19 ("install-in-workbench" "install-package" "install-package-separator" "repositories-manager" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "edit-package" "name:" "Context-Menu")}}})
"Repositories-Manager-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "repositories" "Repositories-Manager-Actions.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.repositories.Repositories-Manager-Actions" #f 37 9 37 63 ("jazz")
      {Lisp-Entry "Repositories-Manager-Actions" #f 47 7 47 35 ("on-install-in-workbench" "install-in-workbench" "on-edit-package" "edit-package" "on-unregister-repository" "unregister-repository" "on-scan-new-packages" "scan-new-packages" "on-new-package" "new-package" "on-edit-repository" "edit-repository" "on-register-repository" "register-repository" "on-new-repository" ":guest" ":client" ":form" "Event-Handler" "action-handler:" "new-repository" "name:" "Actions")}}})
"Repositories-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "preference" "Repositories-Preferences.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.preference.Repositories-Preferences" #f 37 9 37 57 ("jazz")
      {Lisp-Entry "Repositories-Preferences" #f 47 7 47 31 ("title:" "Preferences")
        {Lisp-Entry "repositories" #f 50 12 50 24 ("generate")}}}})
"Repository"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "repositories" "Repository.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.repositories.Repository" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Repository" #f 49 7 49 17 ("Component")
        {Lisp-Entry "title" #f 52 12 52 17 ("generate")}
        {Lisp-Entry "directory" #f 53 12 53 21 ("generate")}
        {Lisp-Entry "print" #f 56 11 56 16 ("title" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-class-image" #f 68 16 68 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 72 16 72 37 ("nextmethod" "else" "directory" "title" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" #f 79 11 79 33 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" #f 83 11 83 27 ("title")}
        {Lisp-Entry "set-presentation" #f 87 11 87 27 ("title:" "self" "set-property" "presentation" "designer")}
        {Lisp-Entry "addable-class?" #f 91 11 91 25 ("Project-Group" "Project-File" "subtype?" "or" "class")}
        {Lisp-Entry "get-addable-classes" #f 96 11 96 30 ("Project-Group" "list")}
        {Lisp-Entry "get-row-instance" #f 101 11 101 27 ("nextmethod" "else" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 107 11 107 37 ("directory")}}}})
"Resource-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "resource" "Resource-File.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.resource.Resource-File" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Resource-File" #f 45 7 45 20 ("Project-File")
        {Lisp-Entry "resource-class" #f 48 26 48 40 ()}
        {Lisp-Entry "resource-marker" #f 52 26 52 41 ()}}}})
"Scaled-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "showcase" "Scaled-View.jazz"} 1236975967
    {Lisp-Entry "jedi.showcase.Scaled-View" #f 37 9 37 34 ("jazz")
      {Lisp-Entry "Scaled-View" #f 46 7 46 18 ("View")}
      {Lisp-Entry "Scaled-View" #f 52 7 52 18 ("View")
        {Lisp-Entry "client" #f 55 12 55 18 ("set-client" "get-client")}
        {Lisp-Entry "print" #f 58 11 58 16 ("size" "position" "background" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-client" #f 69 18 69 28 ("client")}
        {Lisp-Entry "set-client" #f 73 18 73 28 ("client" "set!" "value")}
        {Lisp-Entry "draw-background" #f 82 11 82 26 ("context" "surface")}
        {Lisp-Entry "draw" #f 86 11 86 15 ("get-v" "get-h" "draw-text" "get-size" "12" "Dimension" "new" "center" "get-text-width" "width" "name" "->string" "string" "let*" "Caption" "name:" "Font" "set-font" "fill-rect" "get-bounds" "bounds" "let" "background" "when" "lv" "lh" "context" "surface")}
        {Lisp-Entry "Info" #f 102 26 102 30 ()}
        {Lisp-Entry "register-info" #f 106 18 106 31 ("get-name" "background" "essay" "list" "cons" "Info" "set!" "when" "new-sc?" "new-sc" "clp" "vor" "wor")}
        {Lisp-Entry "mouse-down" #f 116 11 116 21 ("background" "debug" "pos")}}}})
"Scheme-Explorer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "scheme" "text" "Scheme-Explorer.jazz"} 1236813157
    {Lisp-Entry "jazz.language.scheme.text.Scheme-Explorer" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Scheme-Explorer" #f 49 7 49 22 ("Lisp-Explorer")
        {Lisp-Entry "Modifiers" #f 52 14 52 23 ()}
        {Lisp-Entry "get-modifiers" #f 56 11 56 24 ("Modifiers")}
        {Lisp-Entry "get-syntax" #f 60 11 60 21 ("scheme" "'scheme")}
        {Lisp-Entry "Scheme-Toplevels" #f 69 14 69 30 ("jazz.define-method" "jazz.define-virtual-runtime" "jazz.define-virtual" "jazz.define-specic" "jazz.define-generic" "jazz.define-syntax" "jazz.define-check-macro" "jazz.define-macro" "jazz.define" "define-macro" "define")}
        {Lisp-Entry "Gambit-Toplevels" #f 73 14 73 30 ("define-library-type-of-exception" "define-library-type" "define-runtime-syntax" "define-runtime-macro" "define-type-of-port" "define-type" "define-fail-check-type" "define-check-type" "define-prim" "##define-macro")}
        {Lisp-Entry "definition-name?" #f 86 11 86 27 ("Gambit-Toplevels" "Scheme-Toplevels" "memq?" "or" "name")}
        {Lisp-Entry "walk-declaration" #f 96 11 96 27 ("exit-list" "unless" "walk-unknown" "else" "walk-native" "native" "walk-type" "c-define-type" "walk-define-class" "jazz.define-virtual" "jazz.define-class-runtime" "jazz.define-class" "walk-define-macro" "specialize" "instantiate" "template" "syntax" "macro" "define-runtime-syntax" "define-runtime-macro" "##define-macro" "jazz.define-global" "jazz.define-variable" "jazz.define-setting" "jazz.define-special" "jazz.define-syntax" "jazz.define-check-macro" "jazz.define-macro" "define-syntax" "define-macro" "walk-define-generic/specific" "jazz.define-method" "jazz.define-virtual-runtime" "jazz.define-virtual-syntax" "jazz.define-specific" "jazz.define-generic" "walk-define" "define-type-of-port" "define-type" "define-fail-check-type" "define-check-type" "define-library-type-of-exception" "define-library-type" "define-prim" "jazz.define-remote" "jazz.define" "jazz.define-feature" "define" "walk-import" "export" "import" "require" "walk-module" "module" "library" "walk-cond-expand" "cond-expand" "walk-declarations" "begin" "case" "find-marked-symbol" "symbol" "'symbol" "eq?" "and" "kind" "code" "'code" "start" "forward-expr" "if" "end" "get-row" "=" "not" "or" "when" "enter-list" "list?" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-cond-expand" #f 167 11 167 27 ("exit-list" "walk-declarations" "feature" "'feature" "code" "'code" "end" "start" "symbol" "'symbol" "get-kind" "eq?" "when" "forward-expr" "set!" "if" "enter-list" "enter?" "not" "while" "done?" "let" "walk-expressions?" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-module" #f 180 11 180 22 ("walk-declarations" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-import" #f 189 11 189 22 ("end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define" #f 193 11 193 22 ("walk-declarations" "exit-list" "walk-parameters" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-generic/specific" #f 211 11 211 39 ("walk-declarations" "walk-parameters" "exit-list" "list" "set!" "typename" "get-marked" "name" "get-end" "get-start" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "enter-list" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-macro" #f 233 11 233 28 ("walk-declarations" "exit-list" "code" "'code" "walk-expressions" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "eqv?" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-class" #f 251 11 251 28 ("walk-expressions" "get-marked" "set!" "get-row" "=" "not" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-native" #f 262 11 262 22 ("set!" "get-marked" "name" "get-row" "=" "or" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "forward-whites" "end" "start" "entry" "string-length" "1" "+" "substring" "not" "if" "reversed?:" "find" "pos" "let" "str" "parse-identifier" "define" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-type" #f 278 11 278 20 ("walk-expressions" "get-marked" "set!" "symbol" "'symbol" "kind" "eq?" "forward-expr" "and" "when" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-unknown" #f 288 11 288 23 ("walk-expressions" "code" "'code" "walk-expression" "when" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}}}})
"Scheme-Parser"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "scheme" "parser" "Scheme-Parser.jazz"} 1236813157
    {Lisp-Entry "jazz.language.scheme.parser.Scheme-Parser" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Scheme-Parser" #f 47 7 47 20 ("Lisp-Parser")
        {Lisp-Entry "explorer-class" #f 50 11 50 25 ("Scheme-Explorer" "file")}
        {Lisp-Entry "text-view-class" #f 54 11 54 26 ("Scheme-Text-View")}}}})
"Scheme-Syntax"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "scheme" "syntax" "Scheme-Syntax.jazz"} 1236813157
    {Lisp-Entry "jazz.language.scheme.syntax.Scheme-Syntax" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Scheme-Syntax" #f 47 7 47 20 ("Lisp-Syntax")
        {Lisp-Entry "translate-key" #f 55 11 55 24 ("translate-lisp-key" "scheme-text" "documents" "get-preferences" "get-translate-keys?" "not" "if" "key")}
        {Lisp-Entry "get-constituent-test" #f 66 11 66 31 ("scheme-constituent?")}}}})
"Scheme-Text-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "scheme" "text" "Scheme-Text-Actions.jazz"} 1236813157
    {Lisp-Entry "jazz.language.scheme.text.Scheme-Text-Actions" #f 37 9 37 54 ("jazz")
      {Lisp-Entry "Scheme-Text-Actions" #f 48 7 48 26 ("Actions")}}})
"Scheme-Text-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "scheme" "text" "Scheme-Text-Preferences.jazz"} 1236975967
    {Lisp-Entry "jazz.language.scheme.text.Scheme-Text-Preferences" #f 37 9 37 58 ("jazz")
      {Lisp-Entry "Scheme-Text-Preferences" #f 51 7 51 30 ("completions:" "Dark-Orange" "feature-color:" "quotation-color:" "named-string-color:" "string-color:" "boolean-color:" "number-color:" "specifier-color:" "Dark-Purple" "tag-color:" "Ochre" "char-color:" "keyword-color:" "Dark-Green" "declaration-color:" "Dark-Blue" "declaration-keyword-color:" "Text-Gray" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Lisp-Text-Preferences")
        {Lisp-Entry "get-categorized-properties" #f 95 11 95 37 ("translate-keys?" "keyword-color" "declaration-color" "expr-comment-color" "comment-color" "title-color" "completions")}
        {Lisp-Entry "get-row-instance" #f 99 11 99 27 ("nextmethod" "else" "Boolean-Row" "translate-keys?" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "declaration-color" "expr-comment-color" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Scheme-Text-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "scheme" "text" "Scheme-Text-View.jazz"} 1236975967
    {Lisp-Entry "jazz.language.scheme.text.Scheme-Text-View" #f 37 9 37 51 ("jazz")
      {Lisp-Entry "Scheme-Text-View" #f 53 7 53 23 ("tooltip?:" "Lisp-Text-View")
        {Lisp-Entry "install" #f 60 11 60 18 ("Red" "Color" "frame:" "Reference" "'Reference" "get-feature-color" "Feature" "'Feature" "get-quotation-color" "Quotation" "'Quotation" "get-named-string-color" "Named-String" "'Named-String" "get-delimited-string-color" "Delimited-String" "'Delimited-String" "get-string-color" "String" "'String" "get-boolean-color" "Boolean" "'Boolean" "get-char-color" "Char" "'Char" "get-specifier-color" "Specifier" "'Specifier" "get-tag-color" "Tag" "'Tag" "get-keyword-color" "Keyword" "'Keyword" "get-declaration-color" "Declaration" "'Declaration" "get-declaration-keyword-color" "Declaration-Keyword" "'Declaration-Keyword" "get-expr-comment-color" "Expr-Comment" "'Expr-Comment" "get-comment-color" "Comment" "'Comment" "get-title-color" "color:" "Default" "'Default" "base:" "Title" "'Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" #f 81 16 81 29 ("scheme-text" "'scheme-text" "rest")}
        {Lisp-Entry "default-extension" #f 85 11 85 28 ()}
        {Lisp-Entry "extensions" #f 89 11 89 21 ()}
        {Lisp-Entry "new-syntax" #f 93 11 93 21 ("Scheme-Syntax" "new")}
        {Lisp-Entry "focus-actions" #f 102 11 102 24 ("nextmethod" "scheme-text" "'scheme-text" "find-actions" "cons")}
        {Lisp-Entry "get-context-menu" #f 112 11 112 27 ("Scheme-Text-Menu" "new")}
        {Lisp-Entry "default-preferences" #f 121 14 121 33 ("completions:" "Dark-Blue" "keyword-color:" "Dark-Green" "declaration-color:" "Dark-Orange" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "form>>")}
        {Lisp-Entry "preferences" #f 126 11 126 22 ("scheme-text" "documents" "get-preferences")}
        {Lisp-Entry "declaration-style" #f 130 11 130 28 ("Declaration" "'Declaration" "documented?")}
        {Lisp-Entry "Scheme-Specials" #f 139 12 139 27 ("%%when" "%%force-uniqueness" "%%assertion" "%%assert" "%%debug-assertion" "%%debug-assert" "%%core-assertion" "%%core-assert" "jazz.define-syntax" "jazz.define-check-macro" "jazz.define-macro" "jazz.define" "jazz.assert" "receive" "prog1" "parameterize" "module" "-1" "library" "letrec" "let*" "let" "lambda" "if" "2" "do" "define-macro" "define" "1" "case" "call/cc" "0" "begin")}
        {Lisp-Entry "Gambit-Specials" #f 170 12 170 27 ("##define-macro" "define-type" "define-runtime-syntax" "define-runtime-macro" "define-prim" "define-library-type-of-exception" "define-fail-check-type" "2" "define-check-type" "1" "c-lambda")}
        {Lisp-Entry "Chicken-Specials" #f 181 12 181 28 ("1" "##core#lambda")}
        {Lisp-Entry "Specials" #f 185 12 185 20 ("Chicken-Specials" "Gambit-Specials" "Scheme-Specials" "append")}
        {Lisp-Entry "get-specials" #f 192 11 192 23 ("Specials")}
        {Lisp-Entry "evaluate-selection" #f 201 11 201 29 ("evaluate-range" ".1" "sleep" ":wait" "with-cursor" "when" "current-definition-range" "range" "let" "function" "with-safe-explore")}
        {Lisp-Entry "evaluate-buffer" #f 212 11 212 26 ("buffer-selection" "evaluate-range" ".1" "sleep" "function" ":wait" "with-cursor")}
        {Lisp-Entry "evaluate-range" #f 219 11 219 25 ("'<expr>" "either" "name" "function" "map" "user-message" "evaluate-expressions" "collect-names" "names" "get-col" "col" "get-start" "get-row" "line" "get-locat-container" "container" "get-string" "expressions" "bell" "not" "if" "get-focused-process" "debugged" "let" "range")}
        {Lisp-Entry "collect-names" #f 235 11 235 24 ("string:" "read-text-forms" "form-name" "form" "function" "map" "self" "explorer-class" "new" "expl" "let" "expressions" "range")}
        {Lisp-Entry "need-definition?" #f 247 11 247 27 ()}
        {Lisp-Entry "explorer-class" #f 256 11 256 25 ("Scheme-Explorer")}}
      {Lisp-Entry "Scheme-Text-Menu" #f 265 7 265 23 ("paste" "copy" "view" "french:" "english:" "Locales" "cut" "edit-references" "edit-definitions" "code-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "evaluate" "name:" "Context-Menu")}}})
"Section-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Section-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Section-Doc" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Section-Doc" #f 47 7 47 18 ("Doc")
        {Lisp-Entry "sort?" #f 50 12 50 17 ("set-sort?" "get-sort?")}
        {Lisp-Entry "catalog" #f 53 8 53 15 ()}
        {Lisp-Entry "get-catalog" #f 61 11 61 22 ("catalog")}
        {Lisp-Entry "set-catalog" #f 65 11 65 22 ("children" "set-catalog" "child" "function" "for-each" "catalog" "set!" "cat")}
        {Lisp-Entry "get-sort?" #f 72 18 72 27 ("sort?")}
        {Lisp-Entry "set-sort?" #f 76 18 76 27 ("designers" "descendants" "'descendants" "self" "process-refresh" "designer" "function" "for-each" "set!" "sort?" "neq?" "when" "value")}
        {Lisp-Entry "html-output-file" #f 89 11 89 27 ("name" "format" "Jazz" "'Jazz" "list" "File" "new")}
        {Lisp-Entry "get-class-image" #f 98 16 98 31 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" #f 102 16 102 37 ("nextmethod" "else" "sort?" "field-name" "case" "property")}
        {Lisp-Entry "sort-components?" #f 108 11 108 27 ("sort?")}
        {Lisp-Entry "get-row-instance" #f 112 11 112 27 ("nextmethod" "else" "Boolean-Row" "new" "sort?" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 118 11 118 37 ("sort?")}}}})
"Showcase"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "showcase" "Showcase.jazz"} 1236975967
    {Lisp-Entry "jedi.showcase.Showcase" #f 37 9 37 31 ("Scaling-Showcase" "Draw-Showcase" "DC-Showcase" "Region-Showcase" "register-autoclass" "jazz")
      {Lisp-Entry "Showcase" #f 49 7 49 15 ("threads" "threads-sheet" "text-sheet" "tree-sheet" "outline-sheet" "330" "b" "Purple" "210" "320" "500" "p" "190" "vc" "160" "vb" "va" "v2" "v1" "2" "branch:" "on-set-active-branch" "s2" "Dark-Gray" "branches-sheet" "Red" "250" "wiped" "on-wipe" ":form" "Event-Handler" "action-handler:" "24" "400" "85" "effects-sheet" "east" "west" "south" "north" "4" "layout-padding:" "border" "layout-border" "420" "40" "relative" "mode:" "vert" "second" "first" "division:" "horz" "orientation:" "split" "state:" "layout-split" "280" "Dark-Green" "center" "Dark-Blue" "5" "Dark-Red" "head" "location:" "flow" "layout" "solid" "layout-flow" "auto-size?:" "layout-sheet" "555" "870" "ss" "scaling-sheet" "558" "884" "0" "ds" "drawing-sheet" "47" "176" "152" "128" "71" "139" "236" "selected?:" "217" "259" "218" "153" "212" "180" "288" "8" "214" "185" "21" "165" "17" "239" "147" "124" "condensed?:" "101" "content:" "choices:" "19" "148" "78" "260" "22" "92" "170" "b9" "b8" "130" "b7" "110" "b6" "90" "b5" "70" "b4" "b3" "30" "b2" "image-name:" "16" "b1" "50" "width:" "row" "selection-mode:" ":icons" "portfolio:" "tv" "fill" "layout-type:" "313" "150" "tree-border" "Blue" "660" "dcs" "Green" "Color" "background:" "140" "200" "rs" "jt" "vscroll?:" "hscroll?:" "edge" "border-type:" "221" "350" "269" "text-border" "100" "300" "10" "440" "t" "Bitmap-Resource" "icon:" "32" "20" "i" "content" "title:" "views-sheet" "588" "888" "6" "Point" "position:" "tab" "name:" "600" "900" "Dimension" "size:" "View")
        {Lisp-Entry "install" #f 186 11 186 18 ("install-views" "nextmethod" "rest")}
        {Lisp-Entry "host-icon" #f 196 16 196 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 200 16 200 26 ()}
        {Lisp-Entry "host-position" #f 204 16 204 29 ("30" "50" "Point")}
        {Lisp-Entry "host-size" #f 208 16 208 25 ("650" "900" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 212 11 212 26 ("home")}
        {Lisp-Entry "resize" #f 221 11 221 17 ("tab" "'tab" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-set-active-branch" #f 226 11 226 31 ("set-active-branch" "2" "view" "branch:" "get-property" "child" "branch" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "get-stage" #f 238 11 238 20 ("locate" "get-content" "name")}
        {Lisp-Entry "install-views" #f 247 11 247 24 ("install-tree-view" "install-text")}
        {Lisp-Entry "install-text" #f 252 11 252 23 ("jt" "'jt" "locate" "get-controller" "set-moniker" "exists?" "when" "Jedi-Project" "File" "file" "let")}
        {Lisp-Entry "install-tree-view" #f 259 11 259 28 ("25" "0" "naturals" "5" "=" "when" "father:" "cell" "format" "title" "let*" "n" "function" "for-each" "node" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "tv" "'tv" "locate" "tree" "let")}
        {Lisp-Entry "on-wipe" #f 282 11 282 18 ("Blue" "Red" "name:" "Color" "get-background" "eq?" "if" "set-background" "0.005" "delay:" "right" "'right" "direction:" "Wipe-Effect" "new" "get-root" "set-effect" "wiped" "'wiped" "locate" "canvas" "let" "evt")}}
      {Lisp-Entry "Region-Showcase" #f 293 7 293 22 ("View")
        {Lisp-Entry "draw" #f 297 11 297 15 ("8" "160" "Bitmap-Resource" "get-application" "get-icons-cache" "draw-image" "Red" "Color" "fill-region" "or" "'or" "combine!" "120" "180" "70" "30" "sec" "100" "145" "50" "Rect" "rect:" "frs" "Region" "new" "rgn" "with-closed" "10" "draw-text" "Caption" "name:" "Font" "set-font" ":transparent" "set-bk-mode" "lv" "lh" "context" "surface")}}
      {Lisp-Entry "DC-Showcase" #f 318 7 318 18 ("View")
        {Lisp-Entry "draw" #f 322 11 322 15 ("10" "Point" "destination:" "bit-blit" "Green" "name:" "Color" "0" "Rect" "fill-rect" "size:" "Memory-Surface" "new" "memory-dc" "with-closed" "32" "Dimension" "size" "let" "lv" "lh" "context" "surface")}}
      {Lisp-Entry "Draw-Showcase" #f 337 7 337 20 ("View")
        {Lisp-Entry "draw" #f 341 11 341 15 ("250" "draw-text" "frame-rect" "Dark" "Medium" "340" "Light" "320" "White" "360" "400" "300" "200" "Black" "set-text-color" "Green" "name:" "Color" "214" "118" "0" "fill-rect" "30" "650" "10" "450" "Rect" "new" "draw-gradient" "lv" "lh" "context" "surface")}
        {Lisp-Entry "draw-gradient" #f 353 11 353 24 ("Blue" "1" "Red" "name:" "Color" "0" "list" "gradient-fill" "rect" "surface")}}
      {Lisp-Entry "Scaling-Showcase" #f 365 7 365 23 ("View")}}})
"Slot-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Slot-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Slot-Doc" #f 37 9 37 30 ("jazz")
      {Lisp-Entry "Slot-Doc" #f 45 7 45 15 ("Definition-Doc")
        {Lisp-Entry "construct-literal" #f 49 16 49 33 ("doc:" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-image" #f 58 16 58 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" #f 62 11 62 37 ("package-name")}}}})
"Smoker"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "smoker" "Smoker.jazz"} 1226584790
    {Lisp-Entry "jedi.smoker.Smoker" #f 37 9 37 27 ("jazz")
      {Lisp-Entry "Smoker" #f 44 7 44 13 ("Jedi")
        {Lisp-Entry "conclude-process" #f 47 11 47 27 ("smoke" "Smoker-Suite" "new" "suite" "let")}}}})
"Smoker-Builder"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "smoker" "Smoker-Builder.jazz"} 1227977718
    {Lisp-Entry "jedi.smoker.Smoker-Builder" #f 37 9 37 35 ("jazz")
      {Lisp-Entry "Smoker-Builder" #f 44 7 44 21 ("Object")}
      {Lisp-Entry "Smoker-Builder" #f 50 7 50 21 ("Object")
        {Lisp-Entry "Smoker-Project" #f 53 14 53 28 ()}
        {Lisp-Entry "build/run" #f 57 18 57 27 ("set-done" "run" "step-it" "cancel-requested?" "unless" "build" "wait-for" "user-message" "2" "0" "Range" "set-range" "Smoker-Project" "Launcher-Project" "find-project" "project" "let" "activity" "function" "execute:" "self" "context:" "name:" "Activity" "new")}
        {Lisp-Entry "build" #f 78 11 78 16 ("keep-reporter?:" "threaded?:" "build" "project")}
        {Lisp-Entry "run" #f 82 11 82 14 ("wait?:" "create-process" "format" "command" "outputed-file" "parse" "pathname" "let*" "project")}}}})
"Smoker-Suite"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "smoker" "Smoker-Suite.jazz"} 1227977718
    {Lisp-Entry "jedi.smoker.Smoker-Suite" #f 37 9 37 33 ("jazz")
      {Lisp-Entry "Smoker-Suite" #f 44 7 44 19 ("Object")}
      {Lisp-Entry "Smoker-Suite" #f 50 7 50 19 ("Object")
        {Lisp-Entry "smoke" #f 53 18 53 23 ("run-builds" "run-searches" "run-showcase" "run-validations")}
        {Lisp-Entry "run-validations" #f 75 11 75 26 ("10" "set-done" "step-it" "2" "sleep" "report-success?:" "validate" "Validation-Suite" "suite" "let" "user-message" "1" "0" "Range" "set-range" "while" "activity" "function" "execute:" "self" "context:" "name:" "Activity" "new")}
        {Lisp-Entry "run-showcase" #f 98 11 98 23 ("5" "0" "naturals" "add-threaded-icon" "n" "function" "for-each" "'threads" "threads" "let" "threads-sheet" "'threads-sheet" "set-selection-name" "'tab" "locate" "tab" "get-guest" "showcase" "Showcase" "new-frame" "frame" "let*")}
        {Lisp-Entry "run-searches" #f 114 11 114 23 ("on-search" "set!" "1" "sleep" "wait-for" "when" "while" "running" "let" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "unimplemented" "set-search-targets" "end-edition" "set-visible?" "targets" "'targets" "locate" "tree" "get-search" "view" "get-guest" "manager" "get-search-manager" "frame" "get-application" "appl" "let*")}
        {Lisp-Entry "run-builds" #f 144 11 144 21 ("7000" "Puzzle-Project" "5000" "1000" "Yoda-Project" "8000" "0" "Launcher-Project" "run-project-builds")}
        {Lisp-Entry "run-project-builds" #f 150 11 150 29 ("keep-reporter?:" "threaded?:" "build" "set!" "find-project" "project" "wait-for" "when" "while" "running" "let" "sleep" "thread" "function" "execute:" "self" "context:" "format" "name:" "Thread" "new" "unimplemented" "wait-beetween" "0" "wait-before" "project-title" "project-class" "title")}}}})
"Sound-File"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "resource" "Sound-File.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.resource.Sound-File" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Sound-File" #f 45 7 45 17 ("Resource-File")
        {Lisp-Entry "resource-class" #f 48 11 48 25 ("Sound-Resource")}}}})
"Spy-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "spy" "Spy-View.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.spy.Spy-View" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Spy-View" #f 49 7 49 15 ("row" "selection-mode:" "tree" "tree-header" "fill" "layout-type:" "content" "vscroll?:" "tree-scroller" "edge" "border-type:" "306" "33" "0" "tree-border" "on-on/off" "710" "on/off" "on-slowdown" "686" "slowdown" "on-clear" ":form" "605" "clear" "on-spy-family" "180" "spy-family" "on-spy" "156" "spy" "76" "keyboard" "52" "mouse" "28" "paint" "selected?:" ":icons" "portfolio:" "on-category" "parent:" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "6" "4" "Point" "position:" "all" "name:" "east" "location:" "339" "736" "Dimension" "size:" "View")
        {Lisp-Entry "clients" #f 52 12 52 19 ("set-clients" "get-clients")}
        {Lisp-Entry "active?" #f 55 8 55 15 ()}
        {Lisp-Entry "slowdown?" #f 56 8 56 17 ()}
        {Lisp-Entry "slowdown-quantum" #f 57 8 57 24 ("1000")}
        {Lisp-Entry "category" #f 58 8 58 16 ("all" "'all")}
        {Lisp-Entry "old-consumer" #f 59 8 59 20 ()}
        {Lisp-Entry "get-tree" #f 86 18 86 26 ("tree" "'tree" "locate")}
        {Lisp-Entry "get-clients" #f 95 18 95 29 ("clients")}
        {Lisp-Entry "set-clients" #f 99 18 99 29 ("activate" "set!" "clients" "unspy" "for-each" "active?" "when" "list")}
        {Lisp-Entry "activate" #f 106 11 106 19 ("on/off" "'on/off" "locate" "set-selected?" "clients" "spy" "for-each" "active?" "set!")}
        {Lisp-Entry "destroy" #f 117 11 117 18 ("nextmethod" "set-clients")}
        {Lisp-Entry "resize" #f 122 11 122 17 ("tree-border" "'tree-border" "size-figure" "on/off" "'on/off" "slowdown" "'slowdown" "0" "clear" "'clear" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-category" #f 130 11 130 22 ("get-sender" "get-name" "category" "set!" "evt")}
        {Lisp-Entry "on-spy" #f 134 11 134 17 ("list" "set-clients" "views" "windows" "case" "figure" "spy-domain" "domain" "let*" "pos" "view" "position" "window" "function" "pick-figure" "unimplemented" "evt")}
        {Lisp-Entry "on-spy-family" #f 144 11 144 24 ("collect-family" "set-clients" "views" "windows" "case" "figure" "spy-domain" "domain" "let*" "pos" "view" "position" "window" "function" "pick-figure" "unimplemented" "evt")}
        {Lisp-Entry "pick-figure" #f 154 11 154 22 ("tooltips?:" "report-figure?:" "obscure-unhighlighted?:" "views" "'views" "eq?" "highlight-figure?:" "highlight:" "click:" "get-player" "list" "exclude:" "pick-figure" "spy-domain" "domain" "let" "unimplemented" "action")}
        {Lisp-Entry "on-clear" #f 168 11 168 19 ("get-tree" "remove-every-row" "evt")}
        {Lisp-Entry "on-slowdown" #f 172 11 172 22 ("not" "slowdown?" "set!" "evt")}
        {Lisp-Entry "on-on/off" #f 176 11 176 20 ("unspy" "clients" "spy" "for-each" "if" "not" "active?" "set!" "evt")}
        {Lisp-Entry "spy-domain" #f 188 29 188 39 ()}
        {Lisp-Entry "spy" #f 192 29 192 32 ("client")}
        {Lisp-Entry "unspy" #f 196 29 196 34 ("client")}}}})
"Stack-Presenter"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "debuggee" "Stack-Presenter.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.debuggee.Stack-Presenter" #f 37 9 37 52 ("jazz")}})
"Static-Init-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Static-Init-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Static-Init-Entry" #f 37 9 37 45 ("jazz")
      {Lisp-Entry "Static-Init-Entry" #f 45 7 45 24 ("Hierarchical-Entry")
        {Lisp-Entry "construct-literal" #f 49 16 49 33 ("self" "new" "references" "column" "line" "name" "modifiers" "context")}
        {Lisp-Entry "present-name" #f 53 11 53 23 ()}
        {Lisp-Entry "print-catalog" #f 57 11 57 24 ("references" "column" "line" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 64 11 64 20 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" #f 73 11 73 25 ("references" "update-index" "key" "function" "for-each" "references-index" "definitions-index")}}}})
"Synchronize-Box"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Synchronize-Box.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Synchronize-Box" #f 37 9 37 47 ("jazz")
      {Lisp-Entry "Synchronize-Box" #f 48 7 48 22 ("on-no-action" "535" "no-action" "on-copy-left" "513" "copy-left" "on-copy-right" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "Dimension" "size:" "9" "491" "Point" "position:" "copy-right" "name:" "Message-Box")
        {Lisp-Entry "layout-box" #f 63 11 63 21 ("get-height" "400" "Dimension" "new" "set-size" "border" "'border" "locate" "border-view" "nextmethod" "dialog-size" "let" "default" "actions" "content" "icon" "size" "title" "selection" "text")}}}})
"Synchronize-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Synchronize-Entry.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Synchronize-Entry" #f 37 9 37 49 ("jazz")
      {Lisp-Entry "Synchronize-Entry" #f 45 7 45 24 ("Object")
        {Lisp-Entry "kind" #f 48 18 48 22 ()}
        {Lisp-Entry "left" #f 49 18 49 22 ()}
        {Lisp-Entry "right" #f 50 18 50 23 ()}
        {Lisp-Entry "action" #f 51 18 51 24 ()}
        {Lisp-Entry "initialize" #f 54 11 54 21 ("action~self" "right~self" "left~self" "kind~self" "set!" "nextmethod" "right-value" "right" "left-value" "left" "kind")}
        {Lisp-Entry "print" #f 62 11 62 16 ("action" "right" "left" "format" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Synchronize-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Synchronize-Tree.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Synchronize-Tree" #f 37 9 37 48 ("Synchronize-Right-Column" "Synchronize-Action-Column" "Synchronize-Left-Column" "register-autoclass" "jazz")
      {Lisp-Entry "Synchronize-Tree" #f 47 7 47 23 ("right" "75" "action" "center" "justification:" "80" "left" "toplevel-controls?:" "200" "width:" "title:" "name:" "multiple-selection?:" "path" "filled-column:" "row" "selection-mode:" ":icons" "portfolio:" "Tree-View")}
      {Lisp-Entry "Synchronize-Item-Column" #f 63 7 63 30 ("Tree-Column")
        {Lisp-Entry "draw-cell" #f 66 11 66 20 ("0" "2" "16" "-" "quotient" "get-application" "get-icons-cache" "draw-image" "present-image" "image" "present?" "not" "when" "get-right" "get-left" "node" "'node" "get-kind" "=" "and" "lvl?" "let" "draw-background" "height" "width" "cell" "row" "context" "surface")}
        {Lisp-Entry "present?" #f 75 38 75 46 ("cell")}
        {Lisp-Entry "present-image" #f 79 38 79 51 ("cell")}}
      {Lisp-Entry "Synchronize-Left-Column" #f 88 7 88 30 ("Synchronize-Item-Column")
        {Lisp-Entry "present?" #f 91 11 91 19 ("get-left" "cell")}
        {Lisp-Entry "present-image" #f 95 11 95 24 ("Bitmap-Resource" "cell")}}
      {Lisp-Entry "Synchronize-Action-Column" #f 107 7 107 32 ("Tree-Column")
        {Lisp-Entry "draw-cell" #f 110 11 110 20 ("0" "1" "2" "16" "-" "quotient" "+" "get-icons-cache" "draw-image" "get-right" "get-left" "action-image" "image" "get-application" "appl" "when" "get-action" "action" "let" "draw-background" "height" "width" "cell" "row" "context" "surface")}}
      {Lisp-Entry "Synchronize-Right-Column" #f 128 7 128 31 ("Synchronize-Item-Column")
        {Lisp-Entry "present?" #f 131 11 131 19 ("get-right" "cell")}
        {Lisp-Entry "present-image" #f 135 11 135 24 ("Bitmap-Resource" "cell")}}}})
"Syntax-Doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "doc" "Syntax-Doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.doc.Syntax-Doc" #f 37 9 37 32 ("jazz")
      {Lisp-Entry "Syntax-Doc" #f 46 7 46 17 ("Element-Doc")
        {Lisp-Entry "parameters" #f 49 12 49 22 ("generate")}
        {Lisp-Entry "get-class-image" #f 57 16 57 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-row-instance" #f 61 11 61 27 ("nextmethod" "else" "String-Row" "new" "parameters" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" #f 67 11 67 37 ("parameters")}}}})
"Text-Showcase"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "showcase" "Text-Showcase.jazz"} 1226584790
    {Lisp-Entry "jedi.showcase.Text-Showcase" #f 37 9 37 36 ("jazz")
      {Lisp-Entry "Text-Showcase" #f 45 7 45 20 ("View")}}})
"Text-Workspace"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "workspace" "Text-Workspace.jazz"} 1229802703
    {Lisp-Entry "jedi.workspace.Text-Workspace" #f 37 9 37 38 ("jazz")
      {Lisp-Entry "Text-Workspace" #f 46 7 46 21 ("Repositories-Manager" "Workbench-Manager" "Hierarchy-Browser" "Chapters-Browser" "31" "46" "Profile-Results" "Search-Results" "Properties-Manager" "Console-Manager" "model-name:" "selection" "second" "-27" "vert" "5" "Rect" "insets:" "36" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Jazz-Text-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" #f 71 11 71 23 ("text" "'text")}}}})
"Threads-Showcase"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "showcase" "Threads-Showcase.jazz"} 1226584790
    {Lisp-Entry "jedi.showcase.Threads-Showcase" #f 37 9 37 39 ("jazz")
      {Lisp-Entry "Threads-Showcase" #f 48 7 48 23 ("View")}
      {Lisp-Entry "Threads-Showcase" #f 54 7 54 23 ("Bitmap-Resource" "icons:" "height:" "width:" "portfolio" "470" "776" "32" "2" "area" "on-resume-threads" "224" "resume-threads" "on-suspend-threads" "114" "suspend-threads" "on-add-threads" ":form" "Event-Handler" "action-handler:" "22" "100" "Dimension" "size:" "4" "Point" "position:" "title:" "add-threads" "name:" "View")
        {Lisp-Entry "threads" #f 57 8 57 15 ()}
        {Lisp-Entry "slowdown" #f 58 8 58 16 ()}
        {Lisp-Entry "start" #f 59 8 59 13 ()}
        {Lisp-Entry "count" #f 60 8 60 13 ("0")}
        {Lisp-Entry "done?" #f 61 8 61 13 ()}
        {Lisp-Entry "destroy-component" #f 73 11 73 28 ("nextmethod" "stop-showcase")}
        {Lisp-Entry "start-showcase" #f 78 11 78 25 ("add-threads" "done?" "0" "count" "current-time" "time->seconds" "start" "set!")}
        {Lisp-Entry "stop-showcase" #f 85 11 85 24 ("threads" "alive?" "running?" "and" "thread" "some?" "function" "wait-while" "done?" "set!")}
        {Lisp-Entry "add-icon" #f 96 11 96 19 ("32" "Dimension" "size:" "get-height" "42" "get-width" "-" "random" "Point" "position:" "parent:" "portfolio" "'portfolio" "portfolio:" "0" "image-name:" "Showcase-Icon" "new" "get-size" "size" "'area" "locate" "area" "let*" "n")}
        {Lisp-Entry "add-threaded-icon" #f 107 18 107 35 ("10" "5" "Language" "category-compiled?" "if" "length" "*" "cons" "threads" "set!" "animate-icon" "slowdown" "sleep" "done?" "not" "while" "function" "execute:" "self" "context:" "information:" "name:" "Thread" "new" "thread" "add-icon" "icon" "let*" "n")}
        {Lisp-Entry "on-add-threads" #f 122 11 122 25 ("add-threads" "evt")}
        {Lisp-Entry "on-suspend-threads" #f 126 11 126 29 ("threads" "suspend" "thread" "function" "for-each" "evt")}
        {Lisp-Entry "on-resume-threads" #f 132 11 132 28 ("threads" "resume" "thread" "function" "for-each" "evt")}
        {Lisp-Entry "add-threads" #f 138 11 138 22 ("5" "0" "naturals" "add-threaded-icon" "n" "function" "for-each")}
        {Lisp-Entry "report-timing" #f 144 11 144 24 ("start" "current-time" "time->seconds" "-" "/" "user-message" "0" "100" "modulo" "=" "when" "count" "increase!")}
        {Lisp-Entry "print" #f 150 11 150 16 ("object->serial" "format" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "Showcase-Icon" #f 162 9 162 22 ("Image-View")
          {Lisp-Entry "direction-h" #f 165 10 165 21 ()}
          {Lisp-Entry "direction-v" #f 166 10 166 21 ()}
          {Lisp-Entry "prepare" #f 169 13 169 20 ("direction-v" "5" "11" "random" "-" "direction-h" "set!" "nextmethod" "rest")}
          {Lisp-Entry "animate-icon" #f 175 20 175 32 ("rebound-icon" "move-icon")}
          {Lisp-Entry "move-icon" #f 180 13 180 22 ("direction-v" "get-v" "direction-h" "get-h" "+" "Point" "new" "set-position" "get-position" "pos" "let")}
          {Lisp-Entry "rebound-icon" #f 185 13 185 25 ("direction-v" "get-height" "get-bottom" "get-top" "-" "direction-h" "set!" "get-width" "get-right" ">" "0" "get-left" "<" "or" "when" "parent" "get-size" "area" "get-rect" "rect" "let")}}}}})
"Tree-Showcase"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "showcase" "Tree-Showcase.jazz"} 1236975967
    {Lisp-Entry "jedi.showcase.Tree-Showcase" #f 37 9 37 36 ("jazz")
      {Lisp-Entry "Tree-Showcase" #f 48 7 48 20 ("View")}
      {Lisp-Entry "Tree-Showcase" #f 54 7 54 20 ("center" "justification:" "80" "tree-info" "419" "518" "tree-info-border" "415" "selection" "395" "first-displayed-offset" "375" "first-displayed-rank" "355" "first-displayed" "335" "visible-height" "16" "170" "315" "visible-count" "on-update-information" "275" "update-information" "on-show-hide" "235" "show/hide" "on-remove-rows" "205" "remove-rows" "on-add-row" "24" "160" "175" "add-row" "display-images?" "110" "toplevel-controls?" "50" "row-spacing" "30" "column-spacing" "on-setting" ":form" "Event-Handler" "action-handler:" "checked?:" "20" "120" "10" "340" "header?" "100" "85" "130" "width:" "title:" ":icons" "portfolio:" "row" "selection-mode:" "multiple-selection?:" "row-spacing:" "0" "column-spacing:" "filled-column:" "tree" "fill" "layout-type:" "content" "vscroll?:" "edge" "border-type:" "457" "319" "6" "3" "Point" "position:" "tree-border" "name:" "466" "940" "Dimension" "size:" "View")
        {Lisp-Entry "host-title" #f 103 16 103 26 ()}
        {Lisp-Entry "host-position" #f 107 16 107 29 ("60" "39" "Point")}
        {Lisp-Entry "host-size" #f 111 16 111 25 ("466" "940" "Dimension")}
        {Lisp-Entry "install" #f 120 11 120 18 ("update-information" "setup-tree" "nextmethod" "rest")}
        {Lisp-Entry "setup-tree" #f 131 11 131 21 ("10" "0" "naturals" "3" "/=" "visible?:" "5" "=" "when" "cell" "format" "title" "let*" "n" "function" "for-each" "node" "Bitmap-Resource" "add-row" "'tree" "locate" "tree" "let")}
        {Lisp-Entry "add-row" #f 151 11 151 18 ("Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "random-height" "row-height:" "father:" "add-row" "visible?" "visible?:" "right" "middle" "image" "title" "father" "tree")}
        {Lisp-Entry "random-height" #f 155 11 155 24 ("60" "random" "10" "+")}
        {Lisp-Entry "guest-actions" #f 164 11 164 24 ("nextmethod" "tree-showcase" "'tree-showcase" "find-actions" "cons")}
        {Lisp-Entry "resize" #f 174 11 174 17 ("tree-info-border" "'tree-info-border" "0" "tree-border" "'tree-border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-setting" #f 180 11 180 21 ("set-display-images?" "display-images?" "get-node-column" "set-toplevel-controls?" "toplevel-controls?" "set-row-spacing" "row-spacing" "0" "1" "if" "set-column-spacing" "column-spacing" "get-checked?" "set-header?" "header?" "get-name" "case" "'tree" "locate" "tree" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "Unique-Id" #f 191 14 191 23 ("0")}
        {Lisp-Entry "Last-Added-Row" #f 194 14 194 28 ()}
        {Lisp-Entry "on-add-row" #f 198 11 198 21 ("update-information" "and" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "children:" "random-height" "row-height:" "collapsed" "'collapsed" "state:" "father:" "add-row" "Last-Added-Row" "set!" "increase!" "Unique-Id" "format" "title" "let" "row" "for-each" "get-shift?" "use-last-added?" "get-row" "n" "function" "map" "list" "null?" "if" "rows" "get-selection" "sel" "'tree" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "on-remove-rows" #f 211 11 211 25 ("update-information" "remove-row" "row" "for-each" "get-row" "n" "function" "map" "rows" "get-selection" "sel" "'tree" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "on-show-hide" #f 221 11 221 23 ("update-information" "not" "set-visible?" "get-visible-flag" "visible?" "get-user-data" "target" "row" "for-each" "get-row" "n" "function" "map" "rows" "get-selection" "sel" "tree-info" "'tree-info" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "on-update-information" #f 233 11 233 32 ("update-information" "evt")}
        {Lisp-Entry "update-information" #f 242 11 242 29 ("display-tree" "update-fields")}
        {Lisp-Entry "update-fields" #f 247 11 247 24 ("get-selection" "selection" "'selection" "'first-displayed-offset" "'first-displayed-rank" "get-children" "car" "get-title" "essay" "row" "'first-displayed" "'visible-height" "format" "'visible-count" "set-title" "internal-fields" "first-displayed-offset" "first-displayed-rank" "first-displayed" "visible-height" "visible-count" "receive" "'tree" "locate" "tree" "let")}
        {Lisp-Entry "display-tree" #f 258 11 258 23 ("get-root-row" "remove-every-row" "with-update-locked" "subrow" "get-sons" "iterate" "user-data:" "display-row" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "subdest" "let" "dest" "row" "function" "proc" "tree-info" "'tree-info" "info" "'tree" "locate" "tree" "letrec")}
        {Lisp-Entry "display-row" #f 275 11 275 22 ("list" "get-visible-flag" "c6" "c5" "c4" "color:" "c3" "c2" "Tree-Label" "c1" "get-image" "image:" "get-title" "title:" "Tree-Node" "new" "c0" "Dark-Blue" "Dark-Red" "name:" "Color" "if" "color" "get-visible?" "visible?" "row-rank" "essay" "function" "rank" "get-children" "car" "node" "let*" "internal-fields" "next" "previous" "state" "level" "receive" "row" "tree")}
        {Lisp-Entry "row-rank" #f 291 11 291 19 ("error" "get-root-row" "get-sons" "iterate" "increase!" "continuation-return" "eq?" "if" "subrow" "proc" "-1" "rank" "letrec" "return" "function" "continuation-capture" "row" "tree")}
        {Lisp-Entry "Node-Column" #f 310 9 310 20 ("Tree-Node-Column")
          {Lisp-Entry "draw-cell" #f 313 13 313 22 ("0" "draw-title" "Dark-Red" "Red" "name:" "Color" "if" "fill-rect" "selected?:" "getf" "selected?" "text-rect" "rect" "let" "nextmethod" "height" "width" "cell" "row" "context" "surface")}}
        {Lisp-Entry "Middle-Column" #f 326 9 326 22 ("Tree-Column")
          {Lisp-Entry "draw-cell" #f 329 13 329 22 ("Dark-Blue" "Blue" "name:" "Color" "if" "fill-rect" "selected?:" "getf" "selected?" "0" "Rect" "new" "rect" "let" "height" "width" "cell" "row" "context" "surface")}}
        {Lisp-Entry "Right-Column" #f 340 9 340 21 ("Tree-Column")
          {Lisp-Entry "draw-cell" #f 343 13 343 22 ("Dark-Green" "Green" "name:" "Color" "if" "fill-rect" "selected?:" "getf" "selected?" "0" "Rect" "new" "rect" "let" "height" "width" "cell" "row" "context" "surface")}}}}})
"Tree-Showcase-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "showcase" "Tree-Showcase-Actions.jazz"} 1226584790
    {Lisp-Entry "jedi.showcase.Tree-Showcase-Actions" #f 37 9 37 44 ("jazz")
      {Lisp-Entry "Tree-Showcase-Actions" #f 47 7 47 28 ("F5" "Shortcut" "shortcut:" "on-update-information" ":document" "Event-Handler" "action-handler:" "update-information" "name:" "Actions")}}})
"Type-Extractor"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "registry" "Type-Extractor.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.registry.Type-Extractor" #f 42 9 42 51 ("jazz")
      {Lisp-Entry "Type-Extractor" #f 53 7 53 21 ("Object")
        {Lisp-Entry "library" #f 56 8 56 15 ()}
        {Lisp-Entry "name" #f 57 8 57 12 ()}
        {Lisp-Entry "com-classes?" #f 58 8 58 20 ()}
        {Lisp-Entry "pure-dispatch?" #f 59 8 59 22 ()}
        {Lisp-Entry "to-emit" #f 60 8 60 15 ()}
        {Lisp-Entry "emited" #f 61 8 61 14 ()}
        {Lisp-Entry "waiting" #f 62 8 62 15 ()}
        {Lisp-Entry "initialize" #f 65 11 65 21 ("pure-dispatch?~self" "com-classes?~self" "name~self" "library~self" "set!" "nextmethod" "pure-dispatch?" "pure-dispatch?:" "com-classes?" "com-classes?:" "default-name" "name" "name:" "library" "library:")}
        {Lisp-Entry "default-name" #f 73 11 73 23 ("get-name" "lib")}
        {Lisp-Entry "extract" #f 77 18 77 25 ("emit-package-footer" "emit-library-types" "emit-package-header" "format" "name" "output-header" "printer" "function" "parse" "call-with-output-file" "activity" "activity:" "file")}
        {Lisp-Entry "emit-package-header" #f 92 11 92 30 ("name" "format" "printer")}
        {Lisp-Entry "emit-package-footer" #f 96 11 96 30 ("format" "printer")}
        {Lisp-Entry "emit-section-header" #f 100 11 100 30 ("format" "printer" "section-name")}
        {Lisp-Entry "emit-library-types" #f 107 11 107 29 ("debug" "not-null?" "emit-type-information" "info" "function" "for-each" "length" "0" "Range" "new" "set-range" "when" "waiting" "emited" "info-name" "map" "to-emit" "set!" "library" "get-types" "types" "let" "activity" "printer")}
        {Lisp-Entry "emit-type-information" #f 121 11 121 32 ("1" "delta-pos" "emit-waiting" "emited" "emit-type-info" "cons" "waiting" "set!" "waiting-implemented" "waiting-upon" "user-message" "when" "get-name" "name" "let" "throw-cancel" "cancel-requested?" "and" "if" "activity" "printer" "info")}
        {Lisp-Entry "emit-waiting" #f 137 11 137 23 ("remove!" "waiting" "cons" "set!" "emit-type-information" "emited" "every?" "member?" "and" "when" "names" "info" "bind" "pair" "function" "for-each" "processed" "let" "activity" "printer" "name")}
        {Lisp-Entry "waiting-implemented" #f 153 11 153 30 ("get-implemented-types" "emited" "not" "to-emit" "member?" "and" "when" "get-name" "name" "let" "function" "collect" "info")}
        {Lisp-Entry "emit-type-info" #f 162 11 162 25 ("error" "else" "emit-max" "TKIND_MAX" "emit-union" "TKIND_UNION" "emit-alias" "TKIND_ALIAS" "emit-com-class" "TKIND_COCLASS" "emit-dispatch" "TKIND_DISPATCH" "emit-interface" "TKIND_INTERFACE" "emit-package" "TKIND_MODULE" "emit-record" "TKIND_RECORD" "emit-enum" "TKIND_ENUM" "ecase" "get-kind" "kind" "let" "printer" "info")}
        {Lisp-Entry "emit-enum" #f 177 11 177 20 ("emit-variables" "null?" "if" "format" "emit-section-header" "get-variables" "variables" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-record" #f 188 11 188 22 ("emit-variables" "null?" "if" "format" "emit-section-header" "get-variables" "variables" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-package" #f 199 11 199 23 ("format" "emit-section-header" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-interface" #f 205 11 205 25 ("com-external" "'com-external" "emit-functions" "intern-type" "type-name" "either" "final-typedesc" "TYPEDESC" "'desc" "coerce" "essay" "ptr-typedesc" "VT_PTR" "=" "pointer?" "vt" "'vt" "type" "tdesc" "elemdescVar" "get" "typedesc" "get-member-name" "desc" "function" "for-each" "or" "when" "pure-dispatch?" "if" "format" "emit-section-header" "car" "ascendant" "get-implemented-types" "interfaces" "get-functions" "functions" "get-variables" "variables" "get-guid" "guid" "get-name" "name" "let*" "printer" "info")}
        {Lisp-Entry "emit-dispatch" #f 231 11 231 24 ("emit-interface" "printer" "info")}
        {Lisp-Entry "emit-com-class" #f 235 11 235 25 ("essay" "com-method" "'com-method" "emit-functions" "set!" "get-functions" "functions" "tail" "interface" "bind" "pair" "function" "for-each-pair" "null?" "names" "let" "begin" "and" "else" "car" "1" "0" "length" "case" "com-classes?" "if" "format" "emit-section-header" "info-name" "map" "interface-names" "get-implemented-types" "interfaces" "get-guid" "guid" "get-name" "name" "let*" "printer" "info")}
        {Lisp-Entry "emit-alias" #f 262 11 262 21 ("list" "cons" "waiting" "set!" "emit-alias-code" "emited" "member?" "if" "desc" "tdescAlias" "get-attr" "get" "get-referenced-type" "aliased" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-alias-code" #f 270 11 270 26 ("format" "emit-section-header" "printer" "aliased" "name")}
        {Lisp-Entry "emit-union" #f 277 11 277 21 ("format" "emit-section-header" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-max" #f 285 11 285 19 ("format" "emit-section-header" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-functions" #f 291 11 291 25 ("cons" "set!" "essay" "emit-function" "memq?" "not" "invkind" "'invkind" "get" "effective-name" "effective" "get-member-name" "name" "let*" "tail" "desc" "bind" "pair" "function" "for-each-pair" "format" "when" "null?" "if" "trailer" "printer" "modifiers" "header" "functions" "names" "info")}
        {Lisp-Entry "emit-function" #f 306 11 306 24 ("reverse!" "VARENUM" "value->name" "item" "map" "cParams" "'cParams" "0" "naturals" "or" "'<in-out>" "and" "parameter-direction" "param-direction" "param-type-name" "interface-kind?" "if" "param-pointer?" "get-referenced-type" "VT_USERDEFINED" "param-referenced" "param-typedesc" "param-type" "ptr-ptr-type" "ptr-ptr-typedesc" "ptr-pointer?" "ptr-type" "ptr-typedesc" "pointer?" "type" "'tdesc" "typedesc" "array-ref" "param" "n" "function" "for-each" "get-function-parameters" "params" "let" "cons" "set!" "unpl" "'unpl" "eq?" "when" "format" "intern-type" "return-type-name" "either" "final-return-typedesc" "TYPEDESC" "'desc" "coerce" "essay" "ptr-return-typedesc" "VT_PTR" "=" "return-pointer?" "vt" "'vt" "return-type" "tdesc" "elemdescFunc" "get" "return-typedesc" "unimplemented" "let*" "equal?" "test:" "member?" "unless" "trailer" "printer" "modifiers" "header" "desc" "effective" "info")}
        {Lisp-Entry "interface-kind?" #f 359 11 359 26 ("TKIND_COCLASS" "TKIND_DISPATCH" "TKIND_INTERFACE" "=" "or" "get-kind" "kind" "let" "when" "info")}
        {Lisp-Entry "effective-name" #f 367 11 367 25 ("putref-name" "INVOKE_PROPERTYPUTREF" "put-name" "INVOKE_PROPERTYPUT" "get-name" "INVOKE_PROPERTYGET" "INVOKE_FUNC" "ecase" "name" "kind")}
        {Lisp-Entry "get-name" #f 375 11 375 19 ("concatenate" "string->symbol" "name")}
        {Lisp-Entry "put-name" #f 379 11 379 19 ("concatenate" "string->symbol" "name")}
        {Lisp-Entry "putref-name" #f 383 11 383 22 ("concatenate" "string->symbol" "name")}
        {Lisp-Entry "parameter-direction" #f 387 11 387 30 ("error" "else" "'<out>" "'<in>" "or" "'<in-out>" "cond" "not" "and" "unspecified?" "IDLFLAG_FOUT" "out?" "IDLFLAG_FIN" "mask-bit-set?" "in?" "wIDLFlags" "idldesc" "get" "flags" "let*" "param")}
        {Lisp-Entry "emit-variables" #f 398 11 398 25 ("essay" "emit-variable" "tail" "desc" "bind" "pair" "function" "for-each-pair" "format" "when" "null?" "if" "trailer" "printer" "variables" "info")}
        {Lisp-Entry "emit-variable" #f 408 11 408 24 ("VARENUM" "value->name" "unpl" "'unpl" "=" "and" "when" "TKIND_RECORD" "read-variant" "TKIND_ENUM" "ecase" "format" "intern-type" "variable-type-name" "lpvarValue" "'lpvarValue" "value" "vt" "'vt" "basetype" "tdesc" "elemdescVar" "get" "typedesc" "get-member-name" "name" "get-kind" "kind" "let*" "trailer" "printer" "desc" "info")}
        {Lisp-Entry "info-name" #f 425 11 425 20 ("get-name" "info")}
        {Lisp-Entry "intern-type" #f 434 11 434 22 ("cdr" "format" "car" "pair?" "name" "idl-type-info" "let*" "get-name" "add-modifier" "'desc" "get-referenced-type" "referenced" "VT_USERDEFINED" "=" "if" "vt" "'vt" "get" "type" "debug?" "let" "pointer?" "desc" "info")}
        {Lisp-Entry "idl-type-info" #f 448 11 448 24 ("VARENUM" "value->name" "error" "else" "VT_LPWSTR" "VT_LPSTR" "VT_CY" "VT_SAFEARRAY" "VT_DISPATCH" "VT_UNKNOWN" "VT_USERDEFINED" "VT_DATE" "VT_VARIANT" "VT_BSTR" "VT_CARRAY" "cons" "VT_PTR" "VT_HRESULT" "VT_BOOL" "VT_INT" "VT_R8" "VT_R4" "VT_I4" "VT_I2" "VT_I1" "VT_UINT" "VT_UI4" "VT_UI2" "VT_UI1" "VT_VOID" "ecase" "type")}
        {Lisp-Entry "add-modifier" #f 478 11 478 23 ("format" "if" "pointer?" "name")}}}})
"Type-Viewer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "registry" "Type-Viewer.jazz"} 1236975967
    {Lisp-Entry "jazz.language.jazz.registry.Type-Viewer" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "Type-Viewer" #f 56 7 56 18 ("Code" "Font" "font:" "Default" "Text-Style" "default-style:" "descr" "second" "descr-border" "269" "width:" "on-selection-change" "selection-handler:" "library" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "first" "library-border" "30" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "center" "splitter" "on-browse" "tail" "100" "title:" "browse" "on-generate" ":form" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "22" "generate" "0" "6" "1" "Rect" "layout-insets:" "flow" "north" "location:" "33" "300" "toolbar" "name:" "border" "layout-type:" "739" "693" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "library" #f 59 8 59 15 ()}
        {Lisp-Entry "singleton" #f 80 23 80 32 ("new-frame" "Type-Viewer" "get-stage" "find-host" "either")}
        {Lisp-Entry "destroy" #f 85 11 85 18 ("nextmethod" "library" "set!")}
        {Lisp-Entry "host-icon" #f 95 16 95 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 99 16 99 26 ()}
        {Lisp-Entry "host-position" #f 103 16 103 29 ("14" "503" "Point")}
        {Lisp-Entry "host-size" #f 107 16 107 25 ("635" "557" "Dimension")}
        {Lisp-Entry "host-workspaces" #f 111 11 111 26 ("home")}
        {Lisp-Entry "on-generate" #f 120 11 120 22 ("extract" ":pure-dispatch?" ":library" "Type-Extractor" "new" "extractor" "shift-down?" "pure-dispatch?" "extensions:" "default-extension:" "initial-filename:" "choose-new-file" "file" "get-name" "name" "let*" "bell" "library" "null?" "if" "evt")}
        {Lisp-Entry "on-browse" #f 130 11 130 20 ("extensions:" "choose-file" "view-file" "evt")}
        {Lisp-Entry "on-selection-change" #f 134 11 134 30 ("get-row" "get-user-data" "library" "describe-item" "null?" "if" "get-single-selection" "selection" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "view-file" #f 142 18 142 27 ("file:" "Type-Lib" "new" "view-library" "file")}
        {Lisp-Entry "view-registered-library" #f 146 18 146 41 (":language-id" ":minor-version" ":major-version" "guid:" "Type-Lib" "new" "view-library" "li" "mi" "ma" "g")}
        {Lisp-Entry "view-library" #f 150 18 150 30 ("describe-item" "insert-library" "remove-every-row" "with-update-locked" "'library" "locate" "tree" "let" "library" "set!" "function" ":wait" "with-cursor" "lib")}
        {Lisp-Entry "insert-library" #f 167 11 167 25 ("get-types" "insert-info" "info" "function" "for-each" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "add-row" "node" "library" "get-name" "title" "let*" "tree")}
        {Lisp-Entry "insert-info" #f 175 11 175 22 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "dynamic" "'dynamic" "state:" "father:" "add-row" "else" "TKIND_UNION" "TKIND_ALIAS" "TKIND_DISPATCH" "TKIND_INTERFACE" "TKIND_COCLASS" "TKIND_RECORD" "Bitmap-Resource" "TKIND_ENUM" "ecase" "icon" "get-kind" "kind" "get-doc" "doc" "get-name" "name" "let*" "node" "tree" "info")}
        {Lisp-Entry "update-info-row" #f 191 11 191 26 ("get-variables" "insert-variable" "get-functions" "insert-function" "desc" "function" "for-each" "get-user-data" "info" "get-parent" "tree" "let" "row")}
        {Lisp-Entry "insert-function" #f 202 11 202 26 ("cons" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "else" "INVOKE_PROPERTYPUTREF" "INVOKE_PROPERTYPUT" "INVOKE_PROPERTYGET" "Bitmap-Resource" "INVOKE_FUNC" "invkind" "'invkind" "get" "ecase" "icon" "get-member-name" "name" "let" "node" "tree" "desc" "info")}
        {Lisp-Entry "insert-variable" #f 213 11 213 26 ("cons" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "'expanded" "state:" "father:" "add-row" "get-member-name" "name" "let" "node" "tree" "desc" "info")}
        {Lisp-Entry "describe-item" #f 223 11 223 24 ("get-output" "set-content" "describe-member" "else" "describe-info" "Type-Info" "describe-lib" "Type-Lib" "typecase" "List-Factory" "new" "fact" "descr" "'descr" "locate" "text" "let" "when" "item")}
        {Lisp-Entry "describe-lib" #f 234 11 234 23 ("get-lib-file" "get-lib-guid" "get-doc" "get-name" "format" "put" "fact" "item")}
        {Lisp-Entry "describe-info" #f 242 11 242 24 ("get-implemented-types" "info" "function" "map" "get-guid" "get-kind" "TYPEKIND" "value->name" "get-doc" "get-name" "format" "put" "fact" "item")}
        {Lisp-Entry "describe-member" #f 250 11 250 26 ("describe-variable" "VARDESC" "describe-function" "FUNCDESC" "typecase" "desc" "info" "bind" "fact" "item")}
        {Lisp-Entry "describe-function" #f 257 11 257 28 ("0" "naturals" "get-name" "get-referenced-type" "referenced" "ptr-ptr-type" "ptr-ptr-typedesc" "when" "make-string" "length" "10" "-" "1" "max" "padding" "param-type-name" "ptr-type" "TYPEDESC" "'desc" "coerce" "essay" "ptr-typedesc" "VT_USERDEFINED" "user?" "VT_PTR" "=" "pointer?" "parameter-direction" "direction" "vt" "'vt" "type" "'tdesc" "typedesc" "array-ref" "param" "let*" "n" "function" "for-each" "get-function-parameters" "params" "let" "tdesc" "elemdescFunc" "describe-type" "cParamsOpt" "'cParamsOpt" "cParams" "'cParams" "oVft" "'oVft" "callconv" "'callconv" "CALLCONV" "invkind" "'invkind" "INVOKEKIND" "funckind" "'funckind" "get" "FUNCKIND" "value->name" "format" "put" "fact" "desc" "info")}
        {Lisp-Entry "describe-type" #f 291 11 291 24 ("VARENUM" "value->name" "get-name" "'desc" "get-referenced-type" "referenced" "VT_USERDEFINED" "=" "if" "vt" "'vt" "get" "type" "let" "desc" "info")}
        {Lisp-Entry "parameter-direction" #f 299 11 299 30 ("error" "else" "'<out>" "'<in>" "or" "'<in-out>" "cond" "not" "and" "unspecified?" "IDLFLAG_FOUT" "out?" "IDLFLAG_FIN" "mask-bit-set?" "in?" "wIDLFlags" "idldesc" "get" "flags" "let*" "param")}
        {Lisp-Entry "describe-variable" #f 310 11 310 28 ("TKIND_UNION" "else" "cElements" "rgbounds" "tdescElem" "'tdescElem" "ARRAYDESC" "'desc" "coerce" "arraydesc" "let" "VT_CARRAY" "case" "TKIND_RECORD" "read-variant" "format" "put" "TKIND_ENUM" "ecase" "lpvarValue" "'lpvarValue" "value" "describe-type" "type" "tdesc" "elemdescVar" "get" "typedesc" "get-kind" "kind" "let*" "fact" "desc" "info")}}
      {Lisp-Entry "Type-Tree" #f 340 7 340 16 ("Tree-View")
        {Lisp-Entry "update-row" #f 343 11 343 21 ("update-info-row" "row")}}}})
"User-Log"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "log" "User-Log.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.log.User-Log" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "User-Log" #f 50 7 50 15 ("Log-View")
        {Lisp-Entry "external-name" #f 53 16 53 29 ("user-log" "'user-log" "rest")}
        {Lisp-Entry "finish" #f 57 11 57 17 ("separator3" "'separator3" "0" "8" "Dimension" "separator2" "'separator2" "set-size" "separator1" "'separator1" "close" "none" "'none" "set-border-type" "log-border" "'log-border" "splitter" "'splitter" "locate" "zoom" "nextmethod" "initargs")}
        {Lisp-Entry "host-icon" #f 71 16 71 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 75 16 75 26 ()}
        {Lisp-Entry "get-tools-view" #f 84 11 84 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" #f 88 11 88 24 ("acquire-focus" "log-tree" "'log-tree" "locate" "tree" "let")}
        {Lisp-Entry "view-entry" #f 98 11 98 21 ("node")}
        {Lisp-Entry "edit-entry" #f 107 11 107 21 ("bell" "user-message" "else" "output-table" "Data-Table" "typecase" "when" "get-entry" "entry" "let" "node")}
        {Lisp-Entry "output-tables" #f 120 11 120 24 ("sql" "'sql" "select-workspace" "get-application" "appl" "when" "output-tables" "get-sql-console-text" "text" "let" "select?" "select?:" "name" "name:" "tables")}
        {Lisp-Entry "output-table" #f 130 11 130 23 ("list" "output-tables" "select?" "select?:" "name" "name:" "table")}}}})
"Variable-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Variable-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Variable-Entry" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Variable-Entry" #f 45 7 45 21 ("Definition-Entry")
        {Lisp-Entry "construct-literal" #f 49 16 49 33 ("self" "new" "references" "column" "line" "type" "name" "modifiers" "context")}
        {Lisp-Entry "print-catalog" #f 53 11 53 24 ("references" "column" "line" "type" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" #f 60 11 60 20 ("Bitmap-Resource")}}}})
"Vertical-View"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "test" "Vertical-View.jazz"} 1236975967
    {Lisp-Entry "jedi.test.Vertical-View" #f 37 9 37 32 ("jazz")
      {Lisp-Entry "Vertical-View" #f 47 7 47 20 ("View")}
      {Lisp-Entry "Vertical-View" #f 53 7 53 20 ("View")
        {Lisp-Entry "Toto" #f 56 9 56 13 ("100" "Dimension" "size:" "0" "Point" "position:" "text" "content" "name:" "vscroll?:" "hscroll?:" "edge" "border-type:" "Border-View")}
        {Lisp-Entry "install" #f 66 11 66 18 ("3" "0" "naturals" "->string" "title:" "Label-View" "else" "Horizontal-View" "2" "toto" "'toto" "name:" "self" "parent:" "Toto" "new" "1" "case" "n" "function" "for-each" "nextmethod" "rest")}
        {Lisp-Entry "layout" #f 81 11 81 17 ("increase!" "set-size" "Point" "set-position" "view" "function" "for-each-view" "0" "v" "Dimension" "new" "child-size" "get-height" "quotient" "height" "get-width" "width" "get-size" "size" "length" "let*" "children" "when")}
        {Lisp-Entry "draw" #f 101 11 101 15 ("Dark-Red" "name:" "Color" "get-bounds" "fill-rect" "lv" "lh" "context" "surface")}}}})
"Workbench"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Workbench.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Workbench" #f 37 9 37 41 ("jazz")
      {Lisp-Entry "Workbench" #f 53 7 53 16 ("catalog?:" "Project")
        {Lisp-Entry "projects-table" #f 60 8 60 22 ("eq?" "test:" "make-table")}
        {Lisp-Entry "categories-table" #f 61 8 61 24 ("eq?" "test:" "make-table")}
        {Lisp-Entry "resources-table" #f 62 8 62 23 ("equal?" "test:" "make-table")}
        {Lisp-Entry "sources-table" #f 64 8 64 21 ("equal?" "test:" "make-table")}
        {Lisp-Entry "get-projects-table" #f 72 18 72 36 ("projects-table")}
        {Lisp-Entry "find-project" #f 76 18 76 30 ("projects-table" "table-ref" "type-name")}
        {Lisp-Entry "require-project" #f 80 18 80 33 ("error" "find-project" "either" "type-name")}
        {Lisp-Entry "find-source" #f 90 18 90 29 ("get-source-entry" "source")}
        {Lisp-Entry "find-filename" #f 94 18 94 31 ("continuation-return" "get-effective-source" "get-name" "ci=?" "when" "descendant" "for-each-project-file" "return" "function" "continuation-capture" "filename")}
        {Lisp-Entry "catalog-name" #f 109 11 109 23 ("workbench" "'workbench")}
        {Lisp-Entry "load-catalogs" #f 113 18 113 31 ("include-self?:" "load-catalog" "for-each-project" "user-message" "function" ":wait" "with-cursor")}
        {Lisp-Entry "load-catalog" #f 123 18 123 30 ("require-catalog" "load-content" "get-catalog?" "when" "project")}
        {Lisp-Entry "get-effective-editable?" #f 133 11 133 34 ()}
        {Lisp-Entry "add-to-project" #f 142 21 142 35 ("add-entry" "Jazz-File" "add-resource" "resource-class" "resource-type" "type" "Resource-File" "add-source" "get-source" "source" "let" "set-project" "class-of" "type-name" "identifier-name" "projects-table" "table-set!" "set-parent-project" "self" "set-workbench" "Project" "is?" "when" "Project-File" "typecase" "component" "name" "project")}
        {Lisp-Entry "remove-from-project" #f 160 21 160 40 ("remove-entry" "Jazz-File" "remove-resource" "resource-class" "resource-type" "type" "Resource-File" "remove-source" "get-source" "source" "let" "class-of" "type-name" "identifier-name" "projects-table" "table-clear" "Project" "is?" "when" "Project-File" "typecase" "component" "name" "project")}
        {Lisp-Entry "for-each-project" #f 180 18 180 34 ("Project" "is?" "when" "level" "descendant" "function" "for-each-descendant" "include-self?" "include-self?:" "proc")}
        {Lisp-Entry "for-each-project-file" #f 188 18 188 39 ("Project-File" "is?" "when" "level" "descendant" "function" "for-each-descendant" "include-self?" "include-self?:" "proc")}
        {Lisp-Entry "for-each-jazz-file" #f 196 18 196 36 ("Jazz-File" "is?" "when" "level" "descendant" "function" "for-each-descendant" "include-self?" "include-self?:" "proc")}
        {Lisp-Entry "add-entry" #f 204 18 204 27 ("categories-table" "table-set!" "entry" "category-name")}
        {Lisp-Entry "remove-entry" #f 208 18 208 30 ("categories-table" "table-clear" "category-name")}
        {Lisp-Entry "get-entry" #f 212 18 212 27 ("categories-table" "table-ref" "category-name")}
        {Lisp-Entry "get-entry-source" #f 216 18 216 34 ("get-source" "when" "get-entry" "file" "let" "category-name")}
        {Lisp-Entry "add-resource" #f 222 11 222 23 ("resources-table" "table-set!" "cons" "key" "get-base" "name" "let*" "source" "type")}
        {Lisp-Entry "remove-resource" #f 228 11 228 26 ("resources-table" "table-clear" "cons" "key" "get-base" "name" "let*" "source" "type")}
        {Lisp-Entry "get-resource" #f 234 18 234 30 ("resources-table" "table-ref" "cons" "key" "let" "name" "type")}
        {Lisp-Entry "get-bitmap-resource" #f 239 18 239 37 ("get-name" "bitmap" "'bitmap" "get-resource" "resource")}
        {Lisp-Entry "get-icon-resource" #f 243 18 243 35 ("icon" "'icon" "get-resource" "name")}
        {Lisp-Entry "add-source" #f 247 18 247 28 ("table-ref" "cons" "sources-table" "table-set!" "get-name" "name" "let" "when" "entry" "source")}
        {Lisp-Entry "remove-source" #f 253 18 253 31 ("table-ref" "remove!" "sources-table" "table-set!" "get-name" "name" "let" "when" "entry" "source")}
        {Lisp-Entry "get-source-entry" #f 259 18 259 34 ("get-effective-source" "pathname=?" "entry" "function" "find-if" "sources-table" "table-ref" "entries" "get-name" "name" "let*" "source")}
        {Lisp-Entry "find-workbench" #f 272 11 272 25 ("self")}
        {Lisp-Entry "update" #f 281 18 281 24 ("resources-table" "categories-table" "sources-table" "projects-table" "empty-table")}
        {Lisp-Entry "get-class-image" #f 293 16 293 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-presentation" #f 297 11 297 27 ()}
        {Lisp-Entry "can-cut-component?" #f 301 11 301 29 ()}
        {Lisp-Entry "can-copy-component?" #f 305 11 305 30 ()}
        {Lisp-Entry "can-rename-component?" #f 309 11 309 32 ()}
        {Lisp-Entry "can-delete-component?" #f 313 11 313 32 ()}
        {Lisp-Entry "can-move-component?" #f 317 11 317 30 ()}
        {Lisp-Entry "get-addable-classes" #f 321 11 321 30 ("Project-Group" "list")}}}})
"Workbench-Designer"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Workbench-Designer.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Workbench-Designer" #f 37 9 37 50 ("jazz")
      {Lisp-Entry "Workbench-Designer" #f 46 7 46 25 ("Designer")
        {Lisp-Entry "project-designers" #f 49 8 49 25 ()}
        {Lisp-Entry "initialize" #f 57 11 57 21 ("install-projects-designers" "nextmethod" "apply" "rest")}
        {Lisp-Entry "install-projects-designers" #f 62 11 62 37 ("add-designer" "reference" "for-each-project")}
        {Lisp-Entry "cleanup-project-designers" #f 67 11 67 36 ("get-output" "project-designers" "set!" "save" "get-modified?" "when" "cons" "put" "class-of" "type-name" "identifier-name" "reference" "find-project" "if" "designer" "project" "function" "for-each-designer" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "set-name" #f 83 11 83 19 ("set-name" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "use-owner?" "bind-keywords" "rest" "name" "component")}
        {Lisp-Entry "set-tag-module" #f 92 11 92 25 ("set-tag-module" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "use-owner?" "bind-keywords" "rest" "tag-module" "parent" "component")}
        {Lisp-Entry "set-property" #f 101 11 101 23 ("set-property" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "use-owner?" "bind-keywords" "rest" "value" "property" "component")}
        {Lisp-Entry "add-child" #f 110 11 110 20 ("add-child" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "use-owner?" "bind-keywords" "rest" "parent" "child")}
        {Lisp-Entry "remove-child" #f 119 11 119 23 ("remove-child" "" "get-project-designer" "designer" "let" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parent" "parent" "let*" "rest" "child")}
        {Lisp-Entry "move-components" #f 128 11 128 26 ("move-components" "'move-components" "unimplemented" "rest" "destination" "components")}
        {Lisp-Entry "cut-components" #f 137 11 137 25 ("cut-components" "get-project-designer" "designer" "let" "nextmethod" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parents" "parents" "let*" "components")}
        {Lisp-Entry "copy-components" #f 146 11 146 26 ("copy-components" "get-project-designer" "designer" "let" "nextmethod" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parents" "parents" "let*" "components")}
        {Lisp-Entry "paste-clipboard" #f 155 11 155 26 ("paste-clipboard" "" "get-project-designer" "designer" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "let" "rest" "parent")}
        {Lisp-Entry "get-parents" #f 163 11 163 22 ("get-parent" "component" "function" "map" "components")}
        {Lisp-Entry "find-modification-owner" #f 174 11 174 34 ("get-presentation" "error" "get-effective-editable?" "not" "if" "find-components-owner" "owner" "let" "components")}
        {Lisp-Entry "find-components-owner" #f 181 11 181 32 ("car" "error" "1" "length" ">" "map" "remove-duplicates" "owners" "let" "pair?" "get-parent" "Project" "is?" "reference" "eq?" "or" "if" "component" "function" "find-owner-project" "letrec" "components")}
        {Lisp-Entry "add-designer" #f 200 11 200 23 ("add-project-designer" "reference:" "form:" "Designer" "new" "designer" "get-self-form" "form" "class-of" "class" "let*" "project")}
        {Lisp-Entry "add-project-designer" #f 207 11 207 31 ("cons" "project-designers" "set!" "designer" "project")}
        {Lisp-Entry "remove-designer" #f 211 11 211 26 ("assq" "remove!" "project-designers" "set!" "project")}
        {Lisp-Entry "get-project-designer" #f 215 21 215 41 ("project-designers" "assq-value" "project")}
        {Lisp-Entry "for-each-designer" #f 219 11 219 28 ("project-designers" "designer" "project" "bind" "pair" "function" "for-each" "proc")}
        {Lisp-Entry "project-add" #f 226 21 226 32 ("add-designer" "Project" "is?" "when" "level" "descendant" "function" "for-each-descendant" "project")}
        {Lisp-Entry "project-remove" #f 233 21 233 35 ("cleanup-project-designers" "project")}
        {Lisp-Entry "save-designer" #f 245 21 245 34 ("designer" "project" "function" "for-each-designer" "save" "set!" "get-modified?" "when" "some-modified?" "let")}}}})
"Workbench-Editor"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Workbench-Editor.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Workbench-Editor" #f 37 9 37 48 ("jazz")
      {Lisp-Entry "Workbench-Editor" #f 46 7 46 23 ("Descendants-Editor")
        {Lisp-Entry "form-model" #f 49 11 49 21 ("nextmethod" "else" "Workbench-Tree" "tree" "get-name" "case" "form")}}}})
"Workbench-Manager"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Workbench-Manager.jazz"} 1237248381
    {Lisp-Entry "jedi.builder.workbench.Workbench-Manager" #f 37 9 37 49 ("jazz")
      {Lisp-Entry "Workbench-Manager" #f 63 7 63 24 ("Dark-Blue" "Color" "highlight-color:" "291" "width:" "title:" "descendant" "highlight-edited?:" "show-header?:" "tree" "flat?:" "scroller" "center" "location:" "descendants" "on-highlight-document" ":form" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "22" "highlight-document" "tools" "name:" "border" "layout-type:" "400" "650" "Dimension" "size:" "Exit-Listener" "Editor-View")
        {Lisp-Entry "external-name" #f 76 16 76 29 ("workbench-manager" "'workbench-manager" "rest")}
        {Lisp-Entry "host-icon" #f 85 16 85 25 ("Bitmap-Resource")}
        {Lisp-Entry "host-title" #f 89 16 89 26 ()}
        {Lisp-Entry "install-in-host" #f 93 11 93 26 ("setup-active-project" "host")}
        {Lisp-Entry "setup-active-project" #f 97 11 97 31 ("find-project" "activate-project" "and" "when" "get-workbench" "get-active-project" "project" "workbench" "'workbench" "get-preferences" "pref" "let*")}
        {Lisp-Entry "get-tools-view" #f 110 11 110 25 ("tools" "'tools" "locate")}
        {Lisp-Entry "focus-default" #f 114 11 114 24 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" #f 124 11 124 19 ("tree" "descendants" "locate")}
        {Lisp-Entry "new-controller" #f 133 11 133 25 ("self" "Workbench-Manager-Controller" "new")}
        {Lisp-Entry "install" #f 142 11 142 18 ("get-workbench" "set-client" "get-application" "add-exit-listener" "self" "'descendants" "locate" "set-editor" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "get-designer-class" #f 150 11 150 29 ("Workbench-Designer")}
        {Lisp-Entry "prepare-exit" #f 154 11 154 23 ("save-designer" "get-form" "get-origin" "file?" "designer" "and" "when")}
        {Lisp-Entry "on-designer" #f 164 11 164 22 ("child-remove" ":child-remove" "parent:" "child:" "get-property" "child-add" ":child-add" "get-kind" "case" "nextmethod" "evt")}
        {Lisp-Entry "child-add" #f 171 11 171 20 ("designer" "project-add" "Project" "is?" "when" "parent" "child")}
        {Lisp-Entry "child-remove" #f 176 11 176 23 ("designer" "project-remove" "Project" "is?" "when" "child")}
        {Lisp-Entry "key-press" #f 186 11 186 20 ("launch-selection" "case" "key")}
        {Lisp-Entry "on-highlight-document" #f 191 11 191 32 ("highlight-document" "evt")}
        {Lisp-Entry "on-add-project" #f 195 11 195 25 ("add-project" "evt")}
        {Lisp-Entry "on-add-file" #f 199 11 199 22 ("add-file" "evt")}
        {Lisp-Entry "on-add-group" #f 203 11 203 23 ("add-group" "evt")}
        {Lisp-Entry "on-install-project" #f 207 11 207 29 ("install-project" "directory:" "extensions:" "choose-file" "directory" "function" "with-import-directory" "file" "selected-object" "parent" "get-shift?" "current-directory?" "let*" "evt")}
        {Lisp-Entry "on-import-files" #f 216 11 216 26 ("get-shift?" "import-files" "evt")}
        {Lisp-Entry "on-import-directory" #f 220 11 220 30 ("get-shift?" "import-directory" "evt")}
        {Lisp-Entry "on-synchronize-content" #f 224 11 224 33 ("synchronize-content" "evt")}
        {Lisp-Entry "on-update-catalog" #f 228 11 228 28 ("update-catalog" "evt")}
        {Lisp-Entry "on-edit" #f 232 11 232 18 ("edit-selection" "evt")}
        {Lisp-Entry "on-activate" #f 236 11 236 22 ("activate-selection" "evt")}
        {Lisp-Entry "on-run" #f 240 11 240 17 ("run-selection" "evt")}
        {Lisp-Entry "on-debug" #f 244 11 244 19 ("debug-selection" "evt")}
        {Lisp-Entry "on-launch" #f 248 11 248 20 ("launch-selection" "evt")}
        {Lisp-Entry "on-distribute" #f 252 11 252 24 ("distribute-selection" "evt")}
        {Lisp-Entry "on-properties" #f 256 11 256 24 ("show-properties" "evt")}
        {Lisp-Entry "highlight-document" #f 265 11 265 29 ("highlight-document-component" "get-tree" "acquire-focus" "find-source" "project-file" "get-workbench" "workbench" "not" "get-moniker" "moniker" "get-controller" "controller" "let*" "bell" "Document" "is-not?" "if" "current-document" "guest" "let")}
        {Lisp-Entry "highlight-document-component" #f 281 11 281 39 ("row-rank" "set-single-selection" "ensure-expanded" "bell" "not" "if" "component-row" "row" "get-tree" "tree" "let*" "component")}
        {Lisp-Entry "select-current" #f 295 18 295 32 ("select-project")}
        {Lisp-Entry "select-project" #f 299 11 299 25 ("activate-project" "when" "Project-Selector" "get-modal" "project" "let")}
        {Lisp-Entry "edit-current" #f 310 18 310 30 ("current-project" "edit-project")}
        {Lisp-Entry "edit-selection" #f 314 11 314 25 ("edit-project" "Project" "edit-workbench" "Workbench" "typecase" "object" "function" "for-each" "selected-objects" "objects" "let")}
        {Lisp-Entry "Workbench-File" #f 323 14 323 28 ("Profile" "File")}
        {Lisp-Entry "edit-workbench" #f 327 11 327 25 ("edit-document" "Workbench-File" "file" "get-application" "appl" "let")}
        {Lisp-Entry "edit-project" #f 333 11 333 23 ("get-application" "edit-document" "find-module-source" "source" "not" "get-module-name" "module-name" "let" "bell" "Project" "is-not?" "if" "project")}
        {Lisp-Entry "Project-Templates-Directory" #f 350 14 350 41 ("Jazz" "Directory")}
        {Lisp-Entry "File-Templates-Directory" #f 353 14 353 38 ("Jazz" "Directory")}
        {Lisp-Entry "add-project" #f 357 21 357 32 ("get-workbench" "selected-object" "either" "add-project-to")}
        {Lisp-Entry "add-project-to" #f 361 21 361 35 ("user-message" "car" "activate-project" "collect-projects" "projects" "select-component" "descendants" "'descendants" "process-refresh" "acquire-focus" "update-project-catalog" "designer" "get-project-designer" "save" "for-each" "recursive?:" "import-pathname" "src-component" "not-null?" "leaves?:" "nodes?:" "get-content" "ci=?" "test:" "get-name" "member?" "not" "dir" "collect-if" "src-content" "src-directory" "install-project" "project-component" "append" "project-file" "function" "with-update-locked" "parse" "load-package" "repository-add-package" "new-file" "package-file" "repository-find-package" "unless" "copy-template" "project-directories" "'project-directories" "format" "project-module" "'project-module" "project-title" "'project-title" "'project" "product-directories" "'product-directories" "product-module" "'product-module" "product-title" "'product-title" "'product" "'package" "cons" "list" "associations" "destination" "Project-Templates-Directory" "new-directory" "capitalize" "project" "last" "product" "split-identifier" "->string" "map" "package-parts" "string->symbol" "package-name" "repository-packages-directory" "tokenise-filename" "Directory" "new" "directory" "let*" "New-Project-Dialog" "get-modal" "package" "repository" "template" "kind" "receive" "Project" "Project-Group" "is?" "or" "when" "get-tree" "tree" "let" "parent")}
        {Lisp-Entry "add-file" #f 410 21 410 29 ("get-tree" "select-component" "ascendant-project" "import-pathname" "component" "copy-template" "'module" "'name" "cons" "list" "associations" "parse" "find-pathname-module" "module" "destination" "concatenate" "File-Templates-Directory" "new-file" "extract-extension" "extension" "let*" "directory:" "New-File-Dialog" "get-modal" "name" "directory" "template" "kind" "receive" "create-directories" "yes" "'yes" "question" "'question" "type:" "get-list" "format" "message-box" "=" "exists?" "get-current-directory" "Profile" "Directory" "must-exist?:" "default-import-directory" "default-directory" "Project" "Project-Group" "is?" "or" "when" "get-workbench" "selected-object" "either" "parent" "let")}
        {Lisp-Entry "add-group" #f 429 21 429 30 ("parent:" "get-tree" "add-component-class" "Project" "Project-Group" "is?" "or" "when" "get-workbench" "selected-object" "either" "parent" "let")}
        {Lisp-Entry "install-project" #f 441 11 441 26 ("get-presentation" "user-message" "load-catalog" "get-tree" "reorder-component" "set-tag-module" "designer" "add-child" "parent:" "workbench:" "new" "project" "Project" "subtype?" "get-workbench" "workbench" "load-class" "class" "get-name" "error" "not" "if" "parse" "find-pathname-module" "module" "get-base" "string->symbol" "name" "list" "validate-pathnames" "when" "ascendant-project" "parent-project" "let" "descendant?" "parent" "file")}
        {Lisp-Entry "MaxFiles-Warning" #f 466 14 466 30 ("100")}
        {Lisp-Entry "import-filter?" #f 470 11 470 25 ("get-application" "known-extension-frame-class" "get-name" "ci=?" "test:" "member?" "or" "if" "get-include-extensions" "effective-include-extensions" "extensions" "get-extension" "ext" "let" "file" "project")}
        {Lisp-Entry "import-directory" #f 480 11 480 27 ("parse" "user-message" "descendants" "'descendants" "designer" "process-refresh" "import-pathname" "component" "let" "list" "validate-pathnames" "yes" "'yes" "question" "'question" "type:" "format" "message-box" "eq?" "or" "when" "MaxFiles-Warning" "max-count:" "import-filter?" "file" "filter:" "count-files" "count" "directory:" "choose-directory" "function" "with-import-directory" "directory" "ascendant-project" "project" "selected-object" "parent" "let*" "current-directory?")}
        {Lisp-Entry "import-files" #f 495 11 495 23 ("import-pathnames" "directory:" "multiple-selection?:" "choose-file" "directory" "function" "with-import-directory" "files" "ascendant-project" "project" "selected-object" "parent" "let*" "current-directory?")}
        {Lisp-Entry "import-pathnames" #f 504 21 504 37 ("format-plural" "format-cardinality" "user-message" "length" "count" "get-name" "key:" "nu<?" "sort" "descendants" "'descendants" "designer" "process-refresh" "import-pathname" "component" "let" "pathname" "function" "for-each" "validate-pathnames" "when" "parent" "pathnames" "project")}
        {Lisp-Entry "import-pathname" #f 516 11 516 26 ("import-file" "import-filter?" "or" "File" "sort?:" "directories?:" "files?:" "import-pathname" "string=?" "unless" "function" "iterate-directory" "when" "directory" "'directory" "set-property" "descendant?:" "not" "design-events?:" "designer" "add-child" "directory:" "Project-Directory" "new" "subgroup" "install-project" "determine-project-file?" "exists?" "and" "if" "format" "new-file" "project-file" "Directory" "typecase" "get-name" "name" "let" "recursive?" "recursive?:" "descendant?" "parent" "pathname" "project")}
        {Lisp-Entry "import-file" #f 551 11 551 22 ("add-entry" "set-name" "when" "source" "'source" "set-property" "descendant?:" "not" "design-events?:" "designer" "add-child" "get-workbench" "workbench" "source:" "name:" "new" "project-file" "get-base" "string->symbol" "Jazz-File" "eq?" "if" "name" "get-extension" "extension-model" "model" "let*" "descendant?" "parent" "file")}
        {Lisp-Entry "determine-project-file?" #f 564 11 564 34 ("Project" "autoload" "subtype?" "in-manifest?" "extends" "name" "type" "package" "receive" "extract-jazz-file-category" "info" "ci=?" "when" "get-extension" "ext" "let" "file")}
        {Lisp-Entry "default-import-directory" #f 576 11 576 35 ("anchorize" "when" "dir" "let" "else" "get-directory" "Project-Directory" "Project" "typecase" "function" "default" "letrec" "must-exist?" "must-exist?:" "object")}
        {Lisp-Entry "with-import-directory" #f 591 11 591 32 ("function" "with-preserved-current-directory" "exists?" "and" "if" "default-import-directory" "not" "essay" "default-directory" "let" "proc" "object" "current-directory?")}
        {Lisp-Entry "extension-model" #f 600 11 600 26 ("Project-File" "else" "Sound-File" "Icon-File" "Cursor-File" "Bitmap-File" "C-File" "Java-File" "Jazz-File" "ci=?" "test:" "member?" "cond" "ext")}
        {Lisp-Entry "ascendant-project" #f 611 21 611 38 ("get-parent" "ascendant-project" "Project" "is?" "if" "component")}
        {Lisp-Entry "synchronize-content" #f 622 11 622 30 ("content:" "confirmation" "'confirmation" "type:" "Synchronize-Box" "class:" "reverse" "bind" "info" "for-each" "children:" "add-row" "Bitmap-Resource" "image:" "join" "title:" "Tree-Node" "c0" "add" "'tree" "locate" "tree" "200" "500" "Dimension" "size:" "Synchronize-Border" "border" "message-box" "null?" "get-output" "out-of-synch" "case-insensitive?:" "right-key:" "left-key:" "key:" "ci<?" "sort" "directory?" "when" ":same" ":right" "list" "put" ":left" "case" "cons" "right" "left" "key" "what" "merge-ordered" "get-content" "content" "get-children" "children" "path" "fold" "letrec" "pathname" "pathname-name" "get-name" "->string" "component" "function" "component-name" "List-Factory" "new" "fact" "let" "error" "exists?" "not" "if" "must-exist?:" "default-import-directory" "directory" "ascendant-project" "project" "selected-object" "object" "let*")}
        {Lisp-Entry "validate-pathnames" #f 675 11 675 29 ("for-each" "get-entry" "jazz-file" "get-base" "string->symbol" "name" "let*" "Jazz-File" "eq?" "get-extension" "extension-model" "model" "let" "import-filter?" "when" "File" "recursive?:" "sort?:" "directories?:" "files?:" "iterate-directory" "Directory" "typecase" "pathname" "iterate" "get-workbench" "workbench" "letrec" "report" "function" "validate" "pathnames" "project")}
        {Lisp-Entry "validate" #f 700 11 700 19 ("message-box" "when" "0" "subseq" "get-presentation" "get-name" ":hyperlink" ":bulleted" "list" "highlight-document-component" "close-modal-dialog" "action" "get-project" "project" "map" ",header" "text" "format-is/are" "format-y/ies" "format-plural" "format" "header" ">" "too-many?" "10" "max-displayed" "length" "count" "let*" "null?" "if" "get-output" "put" "jazz-file" "function" "List-Factory" "new" "already-defined" "get-workbench" "workbench" "let" "iterate")}
        {Lisp-Entry "activate-selection" #f 744 18 744 36 ("selected-object" "activate-object")}
        {Lisp-Entry "activate-object" #f 748 11 748 26 ("bell" "activate-project" "concrete?" "Project" "is?" "and" "if" "object")}
        {Lisp-Entry "activate-project" #f 755 11 755 27 ("update-project-actions" "get-application" "appl" "highlight-component" "ensure-expanded" "visible?:" "user-data-row" "row" "set-active-project" "unhighlight-component" "when" "get-tree" "tree" "let" "get-active-project" "eq?" "unless" "project")}
        {Lisp-Entry "update-catalog" #f 775 11 775 25 ("update-project-catalog" "Project" "is?" "when" "object" "for-each" "selected-objects" "objects" "let" "function" ":wait" "with-cursor")}
        {Lisp-Entry "update-project-catalog" #f 785 11 785 33 ("update" "load-content" "require-catalog" "catalog" "let" "project")}
        {Lisp-Entry "test-current" #f 796 18 796 30 ("project-test" "current-project" "project" "let")}
        {Lisp-Entry "run-current" #f 806 18 806 29 ("run-project" "current-project" "project" "let")}
        {Lisp-Entry "run-selection" #f 811 18 811 31 ()}
        {Lisp-Entry "run-project" #f 815 11 815 22 ("get-application" "run-project" "project")}
        {Lisp-Entry "debug-current" #f 824 18 824 31 ("current-project" "debug-project")}
        {Lisp-Entry "debug-selection" #f 828 18 828 33 ("debug-project" "current-project" "project" "let")}
        {Lisp-Entry "debug-project" #f 833 11 833 24 ("get-application" "debug-project" "project")}
        {Lisp-Entry "launch-selection" #f 842 18 842 34 ("selected-components" "edit-document" "get-extension" "ext" "get-effective-source" "file" "let*" "Project-File" "debug-project" "Project" "typecase" "component" "function" "for-each" "get-tree" "tree" "get-application" "appl" "let")}
        {Lisp-Entry "on-build-current" #f 861 11 861 27 ("build-project" "bell" "not" "if" "current-project" "project" "let" "evt")}
        {Lisp-Entry "build-current" #f 868 18 868 31 ("build-project" "current-project" "project" "let")}
        {Lisp-Entry "build-project" #f 873 11 873 24 ("project-build" "project")}
        {Lisp-Entry "compile-current" #f 882 18 882 33 ("compile-moniker" "get-controller" "get-moniker" "moniker" "save" "get-modified?" "Document" "is?" "and" "when" "current-document" "guest" "let")}
        {Lisp-Entry "compile-moniker" #f 891 18 891 33 ("compile-file" "error" "not" "if" "find-source" "project-file" "get-workbench" "workbench" "let*" "moniker")}
        {Lisp-Entry "compile-file" #f 899 11 899 23 ("show-console?:" "->string" "list" "arguments:" "launch-executable" "get-project" "project-kernel" "kernel" "bell" "not" "if" "parse" "find-pathname-module" "name" "let" "project-file" "moniker")}
        {Lisp-Entry "preprocess-current" #f 912 18 912 36 ("preprocess-file" "error" "not" "if" "find-source" "file" "get-workbench" "workbench" "get-controller" "get-moniker" "moniker" "let*" "save" "get-modified?" "Document" "is?" "and" "when" "current-document" "guest" "let")}
        {Lisp-Entry "preprocess-file" #f 925 11 925 26 ("get-duration-in-seconds" "force?:" "preprocess" "Output-Log" "select-palette" "select-results" "clear-results" "Timer" "new" "timer" "get-output-log" "output" "user-message" "prepare-directories" "prepare-maps" "get-project" "project" "thread" "function" "proc" "let" "file" "moniker")}
        {Lisp-Entry "clean-current" #f 947 18 947 31 ("clean-project" "current-project" "project" "let")}
        {Lisp-Entry "clean-project" #f 952 11 952 24 ("bell" "concrete?" "if" "project")}
        {Lisp-Entry "on-distribute-current" #f 964 11 964 32 ("distribute-project" "bell" "not" "if" "selected-project" "project" "let" "evt")}
        {Lisp-Entry "distribute-current" #f 971 18 971 36 ("distribute-project" "current-project" "project" "let")}
        {Lisp-Entry "distribute-selection" #f 976 11 976 31 ("selected-project" "distribute-project")}
        {Lisp-Entry "distribute-project" #f 980 11 980 29 ("set-visible?" "bring-to-front" "get-guest" "compare-trees" "function" ":wait" "with-cursor" "host-visible?:" "ignored-extensions:" "ignored-leaves:" "ignored-nodes:" "left-content:" "right-moniker:" "left-moniker:" "Compare-Directories" "new-frame" "frame" "extensions" "files" "list" "ignored-dirs" "project-distribution-list" "content" "project-distribution-directory" "right" "project-distribution" "left" "backup" "'backup" "mode" "let*" "project")}
        {Lisp-Entry "selected-object" #f 1001 11 1001 26 ("selected-component" "get-tree" "tree" "let")}
        {Lisp-Entry "selected-objects" #f 1006 11 1006 27 ("selected-components" "get-tree" "tree" "let")}
        {Lisp-Entry "selected-project" #f 1011 11 1011 27 ("Project" "is?" "when" "selected-object" "object" "let")}
        {Lisp-Entry "selected-concrete-project" #f 1017 11 1017 36 ("concrete?" "Project" "is?" "and" "when" "selected-object" "object" "let")}
        {Lisp-Entry "current-project" #f 1024 11 1024 26 ("error" "get-active-project" "not" "if")}
        {Lisp-Entry "new-menu" #f 1035 18 1035 26 ("get-tree" "client:" "Element-Menu" "new" "else" "new-project-menu" "new-concrete-project-menu" "concrete?" "if" "Project" "new-group-menu" "Project-Group" "new-workbench-menu" "Workbench" "typecase" "selected-object" "object" "let")}
        {Lisp-Entry "new-group-menu" #f 1047 11 1047 25 ("layout-menu" "cleanup-separators" "update-group/project-menu" "get-tree" "client:" "Group-Menu" "new" "menu" "let" "object")}
        {Lisp-Entry "new-workbench-menu" #f 1055 11 1055 29 ("layout-menu" "cleanup-separators" "update-group/project-menu" "get-catalog?" "update-catalog" "'update-catalog" "locate" "set-visible?" "get-tree" "client:" "Workbench-Menu" "new" "menu" "let" "object")}
        {Lisp-Entry "new-concrete-project-menu" #f 1064 11 1064 36 ("layout-menu" "cleanup-separators" "update-group/project-menu" "get-catalog?" "update-catalog" "'update-catalog" "locate" "set-visible?" "get-tree" "client:" "Concrete-Project-Menu" "new" "menu" "let" "object")}
        {Lisp-Entry "new-project-menu" #f 1073 11 1073 27 ("layout-menu" "cleanup-separators" "update-group/project-menu" "get-catalog?" "update-catalog" "'update-catalog" "locate" "set-visible?" "get-tree" "client:" "Project-Menu" "new" "menu" "let" "object")}
        {Lisp-Entry "update-group/project-menu" #f 1082 11 1082 36 ("import-directory" "'import-directory" "import-files" "'import-files" "install-project" "'install-project" "add-file" "'add-file" "add-project" "'add-project" "1" "get-selection" "length" ">" "get-tree" "tree" "set-visible?" "when" "locate-component" "item" "let" "name" "hide-item" "define" "menu")}
        {Lisp-Entry "describe-state" #f 1102 11 1102 25 ("resource" "get-resources-table" "category" "get-categories-table" "name" "get-projects-table" "table-keys/values" "when" "0" "subseq" "if" "project" "bind" "for-each" "5" "length" ">" "more?" "car" "class-of" "type-name" "pair" "function" "key:" "designer" "get-project-designers" "<" "sort" "pairs" "let*" "get-active-project" ":console" "format" "get-workbench" "workbench" "let" "pos")}}
      {Lisp-Entry "Workbench-Manager-Controller" #f 1148 7 1148 35 ("Editor-View-Controller")
        {Lisp-Entry "document-status" #f 1151 11 1151 26 ()}}
      {Lisp-Entry "Synchronize-Border" #f 1160 7 1160 25 ("tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "flat?:" "Outline-Border" "name:" "Color" "border-color:" "solid" "border-type:" "Border-View")}
      {Lisp-Entry "Group-Menu" #f 1177 7 1177 17 ("delete-selection" "synchronize-content" "import-directory" "cut" "import-files" "workbench-manager" "Action" "action:" "Bitmap-Resource" "icon:" "add-item" "before:" "title:" "add-file" "name:" "Component-Menu")}
      {Lisp-Entry "Project-Menu" #f 1196 7 1196 19 ("delete-selection" "update-catalog" "synchronize-content" "import-directory" "cut" "import-files" "add-file" "workbench-manager" "Action" "action:" "Bitmap-Resource" "icon:" "add-item" "before:" "title:" "edit" "name:" "Component-Menu")}
      {Lisp-Entry "Concrete-Project-Menu" #f 1219 7 1219 28 ("workbench-manager" "Action" "action:" "default?:" "cut" "before:" "title:" "activate" "name:" "Project-Menu")}
      {Lisp-Entry "Workbench-Menu" #f 1233 7 1233 21 ("visible?:" "synchronize-content" "Bitmap-Resource" "icon:" "import-files" "install-project" "workbench-manager" "Action" "action:" "add-file" "before:" "title:" "add-project" "name:" "Project-Menu")}
      {Lisp-Entry "Element-Menu" #f 1249 7 1249 19 ("delete-selection" "launch" "workbench-manager" "Action" "action:" "Bitmap-Resource" "icon:" "default?:" "cut" "before:" "title:" "edit" "name:" "Component-Menu")}}})
"Workbench-Manager-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Workbench-Manager-Actions.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Workbench-Manager-Actions" #f 37 9 37 57 ("jazz")
      {Lisp-Entry "Workbench-Manager-Actions" #f 47 7 47 32 ("on-launch" "launch" "on-add-dependency" "add-dependency" "on-activate" "activate" "on-update-catalog" "update-catalog" "on-edit" "edit" "on-synchronize-content" "synchronize-content" "on-import-directory" "import-directory" "on-import-files" "import-files" "on-install-project" "install-project" "on-add-group" "add-group" "on-add-file" "add-file" ":control" "Shortcut" "shortcut:" "on-add-project" ":guest" ":client" ":form" "Event-Handler" "action-handler:" "add-project" "name:" "Actions")}}})
"Workbench-Preferences"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "preference" "Workbench-Preferences.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.preference.Workbench-Preferences" #f 37 9 37 54 ("jazz")
      {Lisp-Entry "Workbench-Preferences" #f 47 7 47 28 ("title:" "Preferences")
        {Lisp-Entry "active-project" #f 50 12 50 26 ("generate")}}}})
"Workbench-Tree"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Workbench-Tree.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Workbench-Tree" #f 37 9 37 46 ("jazz")
      {Lisp-Entry "Workbench-Tree" #f 51 7 51 21 ("show-branches?:" "reorderable?:" "editable?:" "draggable?:" ":icons" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "focus-actions" #f 58 11 58 24 ("nextmethod" "workbench-tree" "'workbench-tree" "find-actions" "cons")}
        {Lisp-Entry "on-add-project" #f 63 11 63 25 ("get-manager" "add-project" "evt")}
        {Lisp-Entry "on-add-file" #f 67 11 67 22 ("get-manager" "add-file" "evt")}
        {Lisp-Entry "on-add-group" #f 71 11 71 23 ("get-manager" "add-group" "evt")}
        {Lisp-Entry "get-manager" #f 75 11 75 22 ("get-host" "get-guest")}
        {Lisp-Entry "context-menu" #f 79 11 79 23 ("track-popup-menu" "when" "new-menu" "menu" "function" "with-context-click" "get-manager" "manager" "let" "pos")}
        {Lisp-Entry "can-copy?" #f 91 11 91 20 ()}
        {Lisp-Entry "can-paste-properties?" #f 95 11 95 32 ()}
        {Lisp-Entry "get-draggable?" #f 99 11 99 25 ()}
        {Lisp-Entry "update-selection" #f 104 11 104 27 ("selected-components" "expand-state")}
        {Lisp-Entry "use-add-menu?" #f 108 11 108 24 ()}
        {Lisp-Entry "row-state" #f 112 11 112 20 ("collapsed" "'collapsed" "expanded" "'expanded" "1" "<" "if" "level" "update?" "component")}
        {Lisp-Entry "double-click" #f 118 11 118 23 ("launch-selection" "Group" "or" "unless" "nextmethod" "activate-selection" "concrete?" "Project" "is?" "and" "if" "selected-component" "component" "get-manager" "manager" "let" "pos")}
        {Lisp-Entry "return-press" #f 129 11 129 23 ("launch-selection" "Group" "unless" "activate-selection" "concrete?" "Project" "is?" "and" "if" "selected-component" "component" "get-manager" "manager" "let" "key")}
        {Lisp-Entry "receive-files" #f 139 11 139 24 ("bell" "ascendant-project" "import-pathnames" "Project-Group" "Project" "is?" "or" "get-manager" "manager" "get-row" "get-user-data" "get-workbench" "not" "if" "data" "view->tree" "cell" "let*" "pathnames" "pos")}
        {Lisp-Entry "addable-root-classes" #f 150 11 150 31 ("Module" "Project" "Group" "list")}}}})
"Workbench-Tree-Actions"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "Workbench-Tree-Actions.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench.Workbench-Tree-Actions" #f 37 9 37 54 ("jazz")
      {Lisp-Entry "Workbench-Tree-Actions" #f 47 7 47 29 ("on-add-group" "add-group" "on-add-file" "add-file" ":control" "Shortcut" "shortcut:" "on-add-project" ":focus" "Event-Handler" "action-handler:" "add-project" "name:" "Actions")}}})
"Zip-File-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Zip-File-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Zip-File-Entry" #f 37 9 37 42 ("jazz")
      {Lisp-Entry "Zip-File-Entry" #f 45 7 45 21 ("File-Entry")
        {Lisp-Entry "print-catalog" #f 48 11 48 24 ("definitions" "print-catalog" "definition" "function" "for-each" "time" "file" "self" "class-of" "type-name" "identifier-name" "2" "format" "not" "when" "printer" "first?")}
        {Lisp-Entry "update-indexes" #f 66 11 66 25 ("definitions" "update-indexes" "definition" "function" "for-each" "references-index" "definitions-index")}}}})
"Zipped-Entry"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "entry" "Zipped-Entry.jazz"} 1236813156
    {Lisp-Entry "jazz.catalog.entry.Zipped-Entry" #f 37 9 37 40 ("jazz")
      {Lisp-Entry "Zipped-Entry" #f 46 7 46 19 ("Catalog-Entry")
        {Lisp-Entry "zipped" #f 49 8 49 14 ()}
        {Lisp-Entry "definitions" #f 50 8 50 19 ()}
        {Lisp-Entry "category-name" #f 51 8 51 21 ()}
        {Lisp-Entry "construct-literal" #f 55 16 55 33 ("self" "new" "definitions" "zipped" "context")}
        {Lisp-Entry "initialize" #f 59 11 59 21 ("set-root-definition" "self" "set-parent" "definition" "function" "for-each" "get-entry" "extract-base" "category-name~self" "definitions~self" "zipped~self" "set!" "nextmethod" "definitions" "zipped")}
        {Lisp-Entry "set-file-definition" #f 70 11 70 30 ("definitions" "set-file-definition" "definition" "function" "for-each" "nextmethod" "def")}
        {Lisp-Entry "print-catalog" #f 77 18 77 31 ("definitions" "1" "+" "print-catalog" "definition" "function" "for-each" "zipped" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-moniker" #f 93 11 93 22 ("zipped")}
        {Lisp-Entry "get-category-name" #f 97 11 97 28 ("category-name")}
        {Lisp-Entry "update-indexes" #f 106 11 106 25 ("definitions" "update-indexes" "definition" "function" "for-each" "references-index" "definitions-index")}
        {Lisp-Entry "edit" #f 117 11 117 15 ("zipped" "edit-document" "get-application" "appl" "let" "rest")}}}})
"_builder"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "_builder.jazz"} 1236975967
    {Lisp-Entry "jedi.builder" #f 37 9 37 21 ("jazz")
      {Lisp-Entry "find-kernel" #f 50 20 50 31 ("kernel-platform" "executable-extension" "concatenate" "tokenise-filename" "File" "new" "kernel-source" "destination-directory" "dir" "let" "destination")}
      {Lisp-Entry "require-kernel" #f 55 20 55 34 ("error" "exists?" "if" "find-kernel" "kernel" "let" "destination")}
      {Lisp-Entry "find-actual-kernel" #f 62 20 62 38 ("tokenise-filename" "File" "new" "kernel-platform" "executable-extension" "kernel-install" "concatenate" "filename" "let")}
      {Lisp-Entry "require-actual-kernel" #f 67 20 67 41 ("error" "exists?" "if" "find-actual-kernel" "kernel" "let")}
      {Lisp-Entry "launch-executable" #f 74 20 74 37 ("show-console:" "stderr-redirection:" "stdout-redirection:" "stdin-redirection:" "get-parent" "directory:" "parse" "path:" "list" "open-process" "debug" "append" "arguments-arg" "either" "runtime-arg" "let*" "wait?" "wait?:" "show-console?" "show-console?:" "arguments" "arguments:" "runtime-arguments" "runtime-arguments:" "executable")}}})
"_c"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "_c.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c" #f 37 9 37 24 ("jazz")}})
"_catalog"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "_catalog.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog" #f 37 9 37 21 ("jazz")}})
"_clike"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "clike" "_clike.jazz"} 1236813156
    {Lisp-Entry "jazz.language.clike" #f 37 9 37 28 ("jazz")}})
"_commonlisp"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "commonlisp" "_commonlisp.jazz"} 1236813156
    {Lisp-Entry "jazz.language.commonlisp" #f 37 9 37 33 ("jazz")}})
"_console"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "console" "_console.jazz"} 1236975967
    {Lisp-Entry "jazz.console" #f 37 9 37 21 ("jazz")
      {Lisp-Entry "Banner-Color" #f 48 19 48 31 ("Dark-Green" "name:" "Color")}
      {Lisp-Entry "Prompt-Color" #f 49 19 49 31 ("Dark-Blue" "name:" "Color")}
      {Lisp-Entry "Expression-Color" #f 50 19 50 35 ("Black" "name:" "Color")}
      {Lisp-Entry "Eval-Color" #f 51 19 51 29 ("Dark-Red" "name:" "Color")}
      {Lisp-Entry "get-console-manager" #f 54 20 54 39 ("Console-Manager" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-console-text" #f 58 20 58 36 ("get-console-manager" "get-text")}
      {Lisp-Entry "get-console-text-manager" #f 62 20 62 44 ("get-parent" "get-creator" "text")}}})
"_csharp"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "csharp" "_csharp.jazz"} 1236813156
    {Lisp-Entry "jazz.language.csharp" #f 37 9 37 29 ("jazz")}})
"_css"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "css" "_css.jazz"} 1236813156
    {Lisp-Entry "jazz.language.css" #f 37 9 37 26 ("jazz")}})
"_debuggee"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "debuggee" "_debuggee.jazz"} 1237219903
    {Lisp-Entry "jazz.language.jazz.debuggee" #f 37 9 37 36 ("jazz")
      {Lisp-Entry "In-Pick?" #f 54 12 54 20 ()}
      {Lisp-Entry "All-Pickers" #f 57 12 57 23 ()}
      {Lisp-Entry "Highlight-Figure?" #f 60 12 60 29 ()}
      {Lisp-Entry "Highlighted-Player" #f 63 12 63 30 ()}
      {Lisp-Entry "Highlighted-View" #f 66 12 66 28 ()}
      {Lisp-Entry "Highlighted-Root-Rect" #f 69 12 69 33 ()}
      {Lisp-Entry "Highlighted-View-Rect" #f 72 12 72 33 ()}
      {Lisp-Entry "Highlighted-Row-Rect" #f 75 12 75 32 ()}
      {Lisp-Entry "Report-Figure?" #f 78 12 78 26 ()}
      {Lisp-Entry "Obscure-Unhighlighted?" #f 81 12 81 34 ()}
      {Lisp-Entry "pick-figure" #f 85 20 85 31 ("simulate-mouse-move" "cons" "invalidate-window" "tooltips?" "highlight" "menu" "click" "install-overlays" "exclude" "memq?" "not" "or" "and" "overlapped" "for-each" "obscure-unhighlighted?" "Obscure-Unhighlighted?" "report-figure?" "Report-Figure?" "highlight-figure?" "Highlight-Figure?" "All-Pickers" "set!" "setup-pick" "not-null?" "when" "get-toplevel" "toplevel" "process-windows" "windows" "let" "function" "with-locked-update" "In-Pick?" "unless" "include" "include:")}
      {Lisp-Entry "setup-pick" #f 116 13 116 23 ("end-pick" "set-escape-handler" "inhibit-view-cursor")}
      {Lisp-Entry "install-overlays" #f 121 13 121 29 ("tooltips?:" "highlight:" "menu:" "click:" "get-size" "size:" "0" "Point" "position:" "parent:" "Picker-Overlay" "new" "get-root" "root" "let" "window" "function" "for-each-window" "tooltips?" "highlight" "menu" "click" "overlapped")}
      {Lisp-Entry "remove-overlays" #f 135 13 135 28 ("close" "Picker-Overlay" "find-type" "overlay" "when" "get-root" "root" "let" "window" "function" "for-each-window" "overlapped")}
      {Lisp-Entry "for-each-window" #f 145 13 145 28 ("get-visible?" "View-Player" "is?" "Overlapped" "is-not?" "eq?" "or" "and" "when" "level" "window" "function" "for-each-descendant" "proc" "overlapped")}
      {Lisp-Entry "simulate-mouse-move" #f 155 13 155 32 ("Highlighted-Row-Rect" "Highlighted-View-Rect" "Highlighted-Root-Rect" "Highlighted-View" "Highlighted-Player" "set!" "highlight-info" "row-rect" "view-rect" "root-rect" "receive" "mouse-position" "pos" "find-picker" "picker" "get-overlapped" "overlapped" "get-root" "root" "get-display" "display" "get-player" "player" "let*" "when" "mouse-view" "view" "let")}
      {Lisp-Entry "find-picker" #f 172 13 172 24 ("All-Pickers" "eq?" "picker" "function" "find-if" "overlapped")}
      {Lisp-Entry "end-pick" #f 178 13 178 21 ("close-pickers" "set-escape-handler" "setup-highlight" "inhibit-view-cursor" "In-Pick?" "set!")}
      {Lisp-Entry "close-pickers" #f 186 13 186 26 ("set!" "All-Pickers" "remove-overlays" "for-each")}
      {Lisp-Entry "setup-highlight" #f 196 13 196 28 ("eq?" "and" "if" "Highlighted-Root-Rect" "set!" "old-player" "let" "Highlighted-Row-Rect" "Highlighted-View-Rect" "nu/=?" "Highlighted-View" "Highlighted-Player" "neq?" "or" "highlight-info" "row-rect" "view-rect" "root-rect" "player" "receive" "get-handle" "when" "window" "redraw-window" "define" "pos" "view")}
      {Lisp-Entry "highlight-info" #f 222 13 222 27 ("essay" "row-rect" "determine-row-rect" "view-row-rect" "acquire" "view-rect" "get-bounds" "root-rect" "get-root" "root" "get-display" "display" "get-player" "player" "let*" "values" "not" "if" "pos" "view")}
      {Lisp-Entry "determine-row-rect" #f 235 13 235 31 ("cell-rect" "view->tree" "cell" "let" "Tree-View" "is?" "when" "pos" "view")}
      {Lisp-Entry "Picker-Overlay" #f 247 7 247 21 ("View")
        {Lisp-Entry "click" #f 250 12 250 17 ("generate")}
        {Lisp-Entry "menu" #f 251 12 251 16 ("generate")}
        {Lisp-Entry "highlight" #f 252 12 252 21 ("generate")}
        {Lisp-Entry "tooltips?" #f 253 12 253 21 ("generate")}
        {Lisp-Entry "cursor-update" #f 261 11 261 24 (":spy" "set-cursor" "pos")}
        {Lisp-Entry "get-tooltip?" #f 270 11 270 23 ("tooltips?")}
        {Lisp-Entry "get-formatted-tooltip?" #f 274 11 274 33 ()}
        {Lisp-Entry "get-tooltip-context" #f 278 11 278 30 ("Label" "name:" "Font" "font:" "bounds:" "view-describe" "display-description" "text:" "self" "view:" "Tooltip-Context" "new" "player" "bounds" "either" "acquire" "rect" "determine-row-rect" "row-rect" "root" "get-bounds" "view-bounds" "get-root" "view-root" "get-player" "view-player" "let*" "when" "find-view-info" "view" "receive" "pos")}
        {Lisp-Entry "display-description" #f 295 11 295 30 ("format" ":bulleted" "list" "value" "name" "bind" "info" "function" "map" "cons" "description")}
        {Lisp-Entry "mouse-move" #f 308 11 308 21 ("self" "user-message" "not" "Report-Figure?" "setup-highlight" "eq?" "if" "proc" "let" "highlight" "when" "find-view-info" "view" "receive" "nextmethod" "pos")}
        {Lisp-Entry "mouse-up" #f 322 11 322 19 ("click" "end-pick" "function" "with-locked-update" "find-view-info" "view" "receive" "nextmethod" "pos")}
        {Lisp-Entry "find-view-info" #f 331 11 331 25 ("values" "essay" "view-pos" "list" "ignore:" "find-drawing" "view" "self" "acquire" "root-pos" "get-root" "root" "let*" "pos")}
        {Lisp-Entry "context-menu" #f 344 11 344 23 ("processed" "acquire" "track-popup-menu" "setup-actions" "get-root" "root" "let" "find-view-info" "view" "receive" "close-popups" "nextmethod" "menu" "not" "if" "pos")}
        {Lisp-Entry "setup-actions" #f 356 11 356 24 ("get-children" "execute:" "Event-Handler" "set-action-handler" "invoke" "self" ":action" "Action-Event" "new" "apply" "get-properties" "pos:" "view:" "augment" "properties" "when" "end-pick" "event" "execute" "get-action-handler" "action-handler" "let*" "item" "function" "for-each" "pos" "view" "menu")}
        {Lisp-Entry "Overlay-Color" #f 374 14 374 27 ("0.25" "alpha:" "Black" "name:" "Color")}
        {Lisp-Entry "Highlight-Color" #f 378 14 378 29 ("177" "blue:" "green:" "109" "red:" "Color")}
        {Lisp-Entry "Highlight-Proc" #f 381 14 381 28 ("Highlight-Color" "set-color" "2" "set-line-width" "solid" "'solid" "set-style" "surface" "function")}
        {Lisp-Entry "draw" #f 388 11 388 15 ("nu/=?" "Highlighted-View-Rect" "and" "Highlighted-Row-Rect" "Highlight-Proc" "Highlighted-Root-Rect" "rectangle" "Highlight-Figure?" "Overlay-Color" "get-bounds" "fill-rect" "Obscure-Unhighlighted?" "when" "get-root" "neq?" "Highlighted-Player" "not" "or" "if" "lv" "lh" "context" "surface")}}}})
"_development"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "development" "_development.jazz"} 1236975967
    {Lisp-Entry "jedi.development" #f 37 9 37 25 ("jazz")
      {Lisp-Entry "Interactive-Object" #f 61 19 61 37 ()}
      {Lisp-Entry "in" #f 65 20 65 22 ("Interactive-Object" "set!" "object")}
      {Lisp-Entry "hex" #f 69 20 69 23 ("format" "n")}
      {Lisp-Entry "iter-list" #f 81 13 81 22 ("cdr" "iter-list" "car" "when" "proc" "lst")}
      {Lisp-Entry "iter-node" #f 87 13 87 22 ("get-children" "for-each" "function" "iter" "letrec" "proc" "node")}
      {Lisp-Entry "iter" #f 95 13 95 17 ("iter-node" "JML-Node" "is?" "iter-list" "null/pair?" "cond" "proc" "obj")}
      {Lisp-Entry "foldl-list" #f 100 13 100 23 ("car" "cdr" "foldl-list" "not" "if" "s" "f" "x")}
      {Lisp-Entry "foldr-list" #f 106 13 106 23 ("cdr" "foldr-list" "car" "not" "if" "s" "f" "x")}
      {Lisp-Entry "foldl-node" #f 112 13 112 23 ("foldl-node" "c" "function" "get-children" "foldl" "s" "f" "x")}
      {Lisp-Entry "foldr-node" #f 119 13 119 23 ("s" "f" "x")}
      {Lisp-Entry "foldl-component" #f 123 13 123 28 ("foldl-component" "c" "function" "get-children" "foldl" "s" "f" "x")}
      {Lisp-Entry "foldr-component" #f 130 13 130 28 ("s" "f" "x")}
      {Lisp-Entry "foldl" #f 134 13 134 18 ("foldl-component" "Component" "foldl-node" "JML-Node" "is?" "foldl-list" "null/pair?" "cond" "s" "f" "x")}
      {Lisp-Entry "foldr" #f 140 13 140 18 ("foldr-component" "Component" "foldr-node" "JML-Node" "is?" "foldr-list" "null/pair?" "cond" "s" "f" "x")}
      {Lisp-Entry "iter-map" #f 146 13 146 21 ("get-output" "put" "x" "function" "iter" "List-Factory" "new" "fact" "let" "obj" "proc")}
      {Lisp-Entry "iter-linearize" #f 154 13 154 27 ("identity" "iter-map" "obj")}
      {Lisp-Entry "fold-map" #f 158 13 158 21 ("cons" "lst" "x" "function" "foldr" "obj" "proc")}
      {Lisp-Entry "foldl-map" #f 165 13 165 22 ("cons" "lst" "x" "function" "foldl" "obj" "proc")}
      {Lisp-Entry "fold-linearize" #f 172 13 172 27 ("identity" "fold-map" "obj")}
      {Lisp-Entry "fold" #f 176 13 176 17 ("fold-component" "Component" "fold-node" "JML-Node" "is?" "foldl-list" "null/pair?" "cond" "s" "f" "x")}
      {Lisp-Entry "fold-node" #f 182 13 182 22 ("get-children" "fold-node" "c" "function" "for-each" "ps" "let" "s" "f" "x")}
      {Lisp-Entry "fold-component" #f 190 13 190 27 ("get-children" "fold-component" "c" "function" "for-each" "ps" "let" "s" "f" "x")}
      {Lisp-Entry "component->jml" #f 198 13 198 27 ("component-self->jml" "fold" "x")}
      {Lisp-Entry "component-self->jml" #f 204 13 204 32 ("object->serial" "serial" "'serial" "get-size" "size" "'size" "get-position" "Figure" "is?" "essay" "position" "'position" "get-name" "name" "'name" "list" "properties:" "class-of" "type-name" "identifier-name" "JML-Element" "new" "p" "c")}
      {Lisp-Entry "component-ascendants->jml" #f 214 13 214 38 ("find-toplevel" "if" "get-parent" "parent" "let" "component-self->jml" "component->jml" "define" "c")}
      {Lisp-Entry "pprint-component" #f 230 13 230 29 (":console" "component->jml" "pretty-print" "x")}
      {Lisp-Entry "pprint-component-ascendants" #f 236 13 236 40 (":console" "component-ascendants->jml" "pretty-print" "x")}
      {Lisp-Entry "ppc" #f 247 13 247 16 ("unspecified" "pprint-component" "c")}
      {Lisp-Entry "ppa" #f 252 13 252 16 ("unspecified" "pprint-component-ascendants" "c")}
      {Lisp-Entry "inspect" #f 262 20 262 27 ("cons" "client:" "get-local-process" "process:" "host-title:" "Inspector-View" "new-frame" "format" "title" "get-application" "appl" "let" ":value" "kind" "object")}
      {Lisp-Entry "inspect-form" #f 268 20 268 32 ("0" "print-form" "Form-Printer" "new" "printer" "get-form" "Form" "is?" "if" "form" "let" "output" "function" "with-text-inspector" "form/component")}
      {Lisp-Entry "inspect-branches" #f 277 20 277 36 ("0" "print-form" "Form-Printer" "new" "printer" "not" "get-restore-form" "form" "get-name" "format" "set!" "if" "branch" "for-each-branch" "first?" "let" "output" "function" "with-text-inspector" "component")}
      {Lisp-Entry "with-text-inspector" #f 295 13 295 32 ("set-visible?" "bring-to-front" "set-modified?" "text-beginning" "set-caret" "get-controller" "set-moniker" "get-guest" "text" "host-workspace:" "host-visible?:" "Jazz-Text-View" "new-frame" "frame" "selected-workspace" "get-name" "workspace" "let*" "parse" "call-with-output-file" "create-temporary-file" "file" "let" "proc")}
      {Lisp-Entry "with-text-inspector" #f 310 13 310 32 ("set-visible?" "bring-to-front" "set-modified?" "text-beginning" "set-caret" "Text-Printer" "new" "output" "get-guest" "text" "host-workspace:" "host-visible?:" "Jazz-Text-View" "new-frame" "frame" "selected-workspace" "get-name" "workspace" "let*" "proc")}
      {Lisp-Entry "design" #f 328 20 328 26 ("client:" "new-frame" "Manager-View" "'Manager-View" "View-Editor" "'View-Editor" "autoload" "View" "is?" "editor" "new" "class?" "if" "component" "let" "class/component")}
      {Lisp-Entry "rsw" #f 339 20 339 23 ("name")}
      {Lisp-Entry "rsp" #f 343 20 343 23 ("Palettes" "table-set!" "name")}
      {Lisp-Entry "cc" #f 352 20 352 22 ("initial-color:" "Color-Request" "get-modal" "dispatch" "Color" "is?" "not" "or" "if" "color" "let" "color-or-name")}
      {Lisp-Entry "cf" #f 357 20 357 22 ("choose-file")}
      {Lisp-Entry "cmf" #f 361 20 361 23 ("multiple-selection?:" "choose-file")}
      {Lisp-Entry "cnf" #f 365 20 365 23 ("choose-new-file")}
      {Lisp-Entry "cd" #f 369 20 369 22 ("choose-directory")}
      {Lisp-Entry "cp" #f 373 20 373 22 ("user-message" "set-clipboard-text" "cd" "get-list" "format" "path" "let")}
      {Lisp-Entry "md" #f 380 20 380 22 ("get-modal" "class")}
      {Lisp-Entry "compile-classes" #f 389 20 389 35 ("format-plural" "format" "message-box" "increase!" "compile-moniker" "get-manifest-source" "file" "let" "class-name" "function" "for-each" "get-workbench-manager" "workbench-manager" "get-application" "appl" "0" "compiled" "let*" "compile-classes" "'compile-classes" "unimplemented" "rest" "class-names")}
      {Lisp-Entry "find-files" #f 410 20 410 30 ("debug" "match" "when" "get-name" "name" "file" "function" "iterate-directory" "Regular-Expression" "new" "regexp" "let" "directory" "pattern")}
      {Lisp-Entry "rename-files" #f 419 20 419 32 (":bulleted" "list" "map" "augment" "when" "format-plural" "format" "cons" "message-box" "get-output" "directories?:" "files?:" "increase!" "move-pathname" "get-directory" "new-file" "replace" "new-name" "put" "null?" "if" "match" "get-name" "name" "let*" "file" "function" "iterate-directory" "List-Factory" "failed" "0" "succeeded" "replacement-regexp" "Regular-Expression" "new" "find-regexp" "title:" "choose-directory" "directory" "let" "replacement" "find")}
      {Lisp-Entry "Receiver-View" #f 452 7 452 20 ("Dark" "name:" "Color" "background:" "View")
        {Lisp-Entry "invite" #f 455 12 455 18 ("set-invite" "get-invite")}
        {Lisp-Entry "receiver" #f 456 12 456 20 ("generate")}
        {Lisp-Entry "get-invite" #f 463 18 463 28 ("invite")}
        {Lisp-Entry "set-invite" #f 467 18 467 28 ("invalidate-view" "invite" "set!" "value")}
        {Lisp-Entry "receive-files" #f 472 11 472 24 ("self" "receiver" "files" "pos")}
        {Lisp-Entry "Background-Font" #f 476 14 476 29 ("Heading1" "name:" "Font")}
        {Lisp-Entry "draw" #f 480 11 480 15 ("Gray" "get-v" "2" "get-h" "+" "draw-text" "Black" "name:" "Color" "set-text-color" "get-display-size" "center" "pos" "get-text-extent" "extent" "invite" "either" "localize" "title" "let*" "Background-Font" "set-font" "lv" "lh" "context" "surface")}}
      {Lisp-Entry "setup-receiver" #f 493 13 493 27 ("receiver:" "224" "434" "Dimension" "host-size:" "169" "219" "Point" "host-position:" "either" "host-title:" "Receiver-View" "new-palette" "invite" "invite:" "size" "size:" "position" "position:" "title" "title:" "receiver")}
      {Lisp-Entry "rer" #f 508 20 508 23 ("match" "Regular-Expression" "new" "replace" "string" "to" "from")}
      {Lisp-Entry "class-instances" #f 518 20 518 35 ("class-live-instances" "live:" "class-all-instances" "all:" "list" "class")}
      {Lisp-Entry "reporting-allocations" #f 523 20 523 41 ("0" "/=" "bind" "info" "function" "collect-if" "-" "identity" "class" "type-name" "case" "list" "all" "after" "class-all-instances" "before" "zone-statistics" "car" "map" "classes" "let*" "name" "'name" "return" "return:" "proc" "result-proc" "zone")}
      {Lisp-Entry "icf" #f 542 20 542 23 ("location:" "last-break:" "last-call:" "last-eval:" "list" "object-location" "location" "tlf" "toplevel" "function-container" "container" "closure-function" "function" "frame-procedure" "closure" "either" "object" "binder-last-break" "last-break" "binder-last-call" "last-call" "binder-last-eval" "last-eval" "get-address" "address" "get-thread" "thread" "let*" "frame")}
      {Lisp-Entry "tlf" #f 558 13 558 16 ("tlf" "null?" "if" "function-container" "container" "let" "function")}
      {Lisp-Entry "debug-table" #f 571 20 571 31 ("0" "display-table" "set-current-request" "get-sql-console-text" "text" "let" "250" "max-display" "max-display:" "name" "name:" "table")}}})
"_diff"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "diff" "_diff.jazz"} 1236813156
    {Lisp-Entry "jazz.language.diff" #f 37 9 37 27 ("jazz")}})
"_doc"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "_doc.jazz"} 1236813156
    {Lisp-Entry "jazz.doc" #f 37 9 37 17 ("jazz")}})
"_html"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "html" "_html.jazz"} 1236813156
    {Lisp-Entry "jazz.language.html" #f 37 9 37 27 ("jazz")}})
"_ide"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "_ide.jazz"} 1236813156
    {Lisp-Entry "jazz.ide" #f 37 9 37 17 ("jazz")}})
"_inspector"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "inspector" "_inspector.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz.inspector" #f 37 9 37 37 ("jazz")
      {Lisp-Entry "Unbound" #f 48 12 48 19 ("cons")}
      {Lisp-Entry "package-unbound" #f 52 20 52 35 ("Unbound")}
      {Lisp-Entry "package-info" #f 56 20 56 32 ("list" "128" "0" "subseq" "concatenate" "set!" "512" "cardinality" ">" "when" "more-value?" "context:" "frame:" "memq?" "or" "if" "more?" ":reader" "->string" "else" "cond" "presented" "object->serial" "serial" "Unbound" "eq?" "unbound?" "let*" ":value" "kind" "value" "name")}
      {Lisp-Entry "more-value?" #f 66 13 66 24 ("category?" "Field" "Number" "Char" "Boolean" "Symbol" "is-not?" "empty-string?" "null?" "not" "and" "value")}
      {Lisp-Entry "inspect-value" #f 82 20 82 33 ("inspect-slots" "else" "inspect-sequence" "Sequence" "inspect-table" "Table" "inspect-list" "List" "typecase" "value")}
      {Lisp-Entry "inspect-list" #f 90 13 90 25 ("get-output" "increase!" "rest" "'rest" "cdr" "set!" "car" "package-info" "put" "begin" "pair?" "if" "not-null?" "while" "0" "rank" "List-Factory" "new" "fact" "let" "lst")}
      {Lisp-Entry "inspect-table" #f 104 13 104 26 ("get-output" "package-info" "put" "value" "key" "function" "iterate-table" "List-Factory" "new" "fact" "let" "table")}
      {Lisp-Entry "inspect-sequence" #f 112 13 112 29 ("List" "coerce" "cardinality" "0" "naturals" "package-info" "map" "seq")}
      {Lisp-Entry "inspect-slots" #f 116 13 116 26 ("car" "key:" "<" "sort" "if" "slot-value" "else" "read-property" "property?" "cond" "field-name" "package-info" "slot" "function" "map" "infos" "all-slots" "slots" "class-of" "class" "let*" "object")}}})
"_java"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "_java.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java" #f 37 9 37 27 ("jazz")}})
"_javascript"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "_javascript.jazz"} 1236813156
    {Lisp-Entry "jazz.language.javascript" #f 37 9 37 33 ("jazz")}})
"_jazz"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "_jazz.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jazz" #f 37 9 37 27 ("jazz")}})
"_jedi"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "_jedi.jazz"} 1226584790
    {Lisp-Entry "jedi" #f 37 9 37 13 ("jazz")}})
"_jml"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jml" "_jml.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jml" #f 37 9 37 26 ("jazz")}})
"_lisp"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "_lisp.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp" #f 37 9 37 27 ("jazz")}})
"_lua"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "_lua.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lua" #f 37 9 37 26 ("jazz")}})
"_prop"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "prop" "_prop.jazz"} 1236813156
    {Lisp-Entry "jazz.language.prop" #f 37 9 37 27 ("jazz")}})
"_properties"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "properties" "_properties.jazz"} 1236813156
    {Lisp-Entry "jazz.language.properties" #f 37 9 37 33 ("jazz")}})
"_python"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "_python.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python" #f 37 9 37 29 ("jazz")}})
"_recorder"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "recorder" "_recorder.jazz"} 1236813157
    {Lisp-Entry "jazz.recorder" #f 37 9 37 22 ("jazz")
      {Lisp-Entry "Recording?" #f 44 19 44 29 ()}
      {Lisp-Entry "Recording-Playing?" #f 47 19 47 37 ()}
      {Lisp-Entry "macro-recording?" #f 51 20 51 36 ("Recording?")}
      {Lisp-Entry "set-macro-recording?" #f 54 20 54 40 ("Recording?" "set!" "flag")}
      {Lisp-Entry "macro-playing?" #f 58 20 58 34 ("Recording-Playing?")}
      {Lisp-Entry "set-macro-playing?" #f 61 20 61 38 ("Recording-Playing?" "set!" "flag")}}})
"_scheme"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "scheme" "_scheme.jazz"} 1236813157
    {Lisp-Entry "jazz.language.scheme" #f 37 9 37 29 ("jazz")}})
"_workbench"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "workbench" "_workbench.jazz"} 1236813157
    {Lisp-Entry "jedi.builder.workbench" #f 37 9 37 31 ("jazz")
      {Lisp-Entry "*active-repositories*" #f 49 12 49 33 ()}
      {Lisp-Entry "get-active-repositories" #f 53 13 53 36 ("*active-repositories*")}
      {Lisp-Entry "set-active-repositories" #f 57 13 57 36 ("*active-repositories*" "set!" "repositories")}
      {Lisp-Entry "*active-workbench*" #f 66 12 66 30 ()}
      {Lisp-Entry "get-workbench" #f 70 13 70 26 ("*active-workbench*")}
      {Lisp-Entry "set-workbench" #f 74 13 74 26 ("*active-workbench*" "set!" "workbench")}
      {Lisp-Entry "*active-project*" #f 83 12 83 28 ()}
      {Lisp-Entry "get-active-project" #f 87 20 87 38 ("*active-project*")}
      {Lisp-Entry "set-active-project" #f 91 20 91 38 ("*active-project*" "set!" "project")}
      {Lisp-Entry "collect-projects" #f 95 20 95 36 ("queue-list" "enqueue" "concrete?" "Project" "is?" "and" "when" "level" "file" "function" "for-each-descendant" "new-queue" "projects" "let" "project")}
      {Lisp-Entry "build-preferences" #f 110 13 110 30 ("build" "'build" "get-preferences")}}})
"autoload"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "recorder" "autoload.jazz"} 1236813157
    {Lisp-Entry "jazz.recorder.autoload" #f 37 9 37 31 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "ide" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.ide.autoload" #f 37 9 37 26 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "doc" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.doc.autoload" #f 37 9 37 26 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "console" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.console.autoload" #f 37 9 37 30 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "catalog" "autoload.jazz"} 1236813155
    {Lisp-Entry "jazz.catalog.autoload" #f 37 9 37 30 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "scheme" "autoload.jazz"} 1236813157
    {Lisp-Entry "jazz.language.scheme.autoload" #f 37 9 37 38 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "python" "autoload.jazz"} 1236813157
    {Lisp-Entry "jazz.language.python.autoload" #f 37 9 37 38 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "properties" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.properties.autoload" #f 37 9 37 42 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "prop" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.prop.autoload" #f 37 9 37 36 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lua" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lua.autoload" #f 37 9 37 35 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "lisp" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.lisp.autoload" #f 37 9 37 36 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jml" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.jml.autoload" #f 37 9 37 35 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "jazz" "autoload.jazz"} 1236906043
    {Lisp-Entry "jazz.language.jazz.autoload" #f 37 9 37 36 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "javascript" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.javascript.autoload" #f 37 9 37 42 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.autoload" #f 37 9 37 36 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "html" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.html.autoload" #f 37 9 37 36 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "diff" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.diff.autoload" #f 37 9 37 36 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "css" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.css.autoload" #f 37 9 37 35 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "csharp" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.csharp.autoload" #f 37 9 37 38 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "commonlisp" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.commonlisp.autoload" #f 37 9 37 42 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "clike" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.clike.autoload" #f 37 9 37 37 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "c" "autoload.jazz"} 1236813156
    {Lisp-Entry "jazz.language.c.autoload" #f 37 9 37 33 ("jazz")}}
  {Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "autoload.jazz"} 1236813157
    {Lisp-Entry "jedi.autoload" #f 37 9 37 22 ("jazz")}})
"development"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "builder" "development.scm"} 1236813157
    {Lisp-Entry "jedi.builder.development" #f 38 8 38 32 ()
      {Lisp-Entry "expand" #f 49 9 49 15 ("current-output-port" "expand-to-port" "library-name")}
      {Lisp-Entry "expand-source" #f 53 9 53 22 ("jazz.present-source" "pretty-print" "read-source?:" "parse-read?:" "jazz.read-toplevel-form" "syntax" "jazz.resource-pathname" "source" "jazz.find-module-src" "src" "let*" "library-name")}
      {Lisp-Entry "expand-syntax" #f 62 9 62 22 ("jazz.source-code" "%%cdr" "jazz.expand-library" "library" "'library" "case" "jazz.requested-module-resource" "jazz.requested-module-name" "parameterize" "jazz.present-source" "pretty-print" "read-source?:" "parse-read?:" "jazz.read-toplevel-form" "syntax" "jazz.resource-pathname" "source" "jazz.find-module-src" "src" "let*" "library-name")}
      {Lisp-Entry "expand-to-file" #f 75 9 75 23 ("expand-to-port" "port" "lambda" "call-with-output-file" "car" "null?" "if" "filename" "let" "rest" "library-name")}
      {Lisp-Entry "expand-to-port" #f 82 9 82 23 ("jazz.expand-library" "library" "jazz.expand-module" "module" "case" "jazz.requested-module-resource" "jazz.requested-module-name" "parameterize" "pretty-print" "cdr" "rest" "car" "kind" "parse-read?:" "jazz.read-toplevel-form" "form" "jazz.resource-pathname" "source" "jazz.find-module-src" "src" "let*" "port" "library-name")}}})
"java.lang.Class"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "java" "lang" "java.lang.Class.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.java.lang.java.lang.Class" #f 37 9 37 58 ("jazz")
      {Lisp-Entry "java.lang.Class" #f 43 7 43 22 ("java.lang.Object")
        {Lisp-Entry "forName" #f 46 51 46 58 ()}
        {Lisp-Entry "getName" #f 47 51 47 58 ()}}}})
"java.lang.ClassLoader"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "java" "lang" "java.lang.ClassLoader.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.java.lang.java.lang.ClassLoader" #f 37 9 37 64 ("jazz")
      {Lisp-Entry "java.lang.ClassLoader" #f 43 7 43 28 ("java.lang.Object")
        {Lisp-Entry "getSystemClassLoader" #f 46 54 46 74 ()}}}})
"java.lang.Object"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "java" "lang" "java.lang.Object.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.java.lang.java.lang.Object" #f 37 9 37 59 ("jazz")
      {Lisp-Entry "java.lang.Object" #f 43 7 43 23 ("Java-Object")
        {Lisp-Entry "getClass" #f 46 51 46 59 ()}
        {Lisp-Entry "toString" #f 47 51 47 59 ()}}}})
"java.lang.StackTraceElement"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "java" "lang" "java.lang.StackTraceElement.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.java.lang.java.lang.StackTraceElement" #f 37 9 37 70 ("jazz")
      {Lisp-Entry "java.lang.StackTraceElement" #f 43 7 43 34 ("java.lang.Object")
        {Lisp-Entry "getFileName" #f 46 46 46 57 ()}
        {Lisp-Entry "getLineNumber" #f 47 46 47 59 ()}
        {Lisp-Entry "getClassName" #f 48 46 48 58 ()}
        {Lisp-Entry "getMethodName" #f 49 46 49 59 ()}}}})
"java.lang.String"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "java" "lang" "java.lang.String.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.java.lang.java.lang.String" #f 37 9 37 59 ("jazz")
      {Lisp-Entry "java.lang.String" #f 43 7 43 23 ("java.lang.Object")
        {Lisp-Entry "length" #f 46 45 46 51 ()}}}})
"java.lang.Throwable"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "java" "lang" "java.lang.Throwable.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.java.lang.java.lang.Throwable" #f 37 9 37 62 ("jazz")
      {Lisp-Entry "java.lang.Throwable" #f 43 7 43 26 ("java.lang.Object")
        {Lisp-Entry "getMessage" #f 46 74 46 84 ()}
        {Lisp-Entry "getStackTrace" #f 47 74 47 87 ()}}}})
"org.jazzscheme.java.Runtime"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "org" "jazzscheme" "java" "org.jazzscheme.java.Runtime.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.org.jazzscheme.java.org.jazzscheme.java.Runtime" #f 37 9 37 80 ("jazz")
      {Lisp-Entry "org.jazzscheme.java.Runtime" #f 43 7 43 34 ("java.lang.Object")
        {Lisp-Entry "getRuntime" #f 46 63 46 73 ()}
        {Lisp-Entry "forName" #f 47 63 47 70 ()}
        {Lisp-Entry "getConnection" #f 48 63 48 76 ()}}}})
"org.jazzscheme.test.Test"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "org" "jazzscheme" "test" "org.jazzscheme.test.Test.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.org.jazzscheme.test.org.jazzscheme.test.Test" #f 37 9 37 77 ("jazz")
      {Lisp-Entry "org.jazzscheme.test.Test" #f 43 7 43 31 ("java.lang.Object")
        {Lisp-Entry "<init>" #f 46 11 46 17 ()}
        {Lisp-Entry "<init>" #f 47 45 47 51 ()}
        {Lisp-Entry "<init>" #f 48 45 48 51 ()}
        {Lisp-Entry "<init>" #f 49 45 49 51 ()}
        {Lisp-Entry "<init>" #f 50 45 50 51 ()}
        {Lisp-Entry "<init>" #f 51 45 51 51 ()}
        {Lisp-Entry "cj" #f 52 45 52 47 ()}
        {Lisp-Entry "test" #f 53 45 53 49 ()}
        {Lisp-Entry "test" #f 54 45 54 49 ()}
        {Lisp-Entry "test" #f 55 45 55 49 ()}
        {Lisp-Entry "testJDBC" #f 56 45 56 53 ()}}}})
"org.jazzscheme.test.X"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jazz" "language" "java" "java" "org" "jazzscheme" "test" "org.jazzscheme.test.X.jazz"} 1236813156
    {Lisp-Entry "jazz.language.java.Java.org.jazzscheme.test.org.jazzscheme.test.X" #f 37 9 37 74 ("jazz")
      {Lisp-Entry "org.jazzscheme.test.X" #f 43 7 43 28 ("*" "y" "x" "java.lang.Object")
        {Lisp-Entry "test" #f 46 41 46 45 ()}}}})
"product"
 ({Lisp-File-Entry {File Jazz "lib" "jedi" "src" "jedi" "product.jazz"} 1237253565
    {Lisp-Entry "jedi.product" #f 37 9 37 21 ("build" "build:" "update" "update:" "run" "run:" "icon:" "title:" "jedi" "'jedi" "register-product" "else" "jazz.ui.window.platform.x11" "x11" "jazz.ui.window.platform.windows" "Jedi-Critical-Platform-Modules" "definition" "windows" "cond-expand" "jazz")
      {Lisp-Entry "run" #f 45 13 45 16 ("boot-environment" "Jedi" "'Jedi" "jedi" "'jedi" "module-autoload" "new" "appl" "let")}
      {Lisp-Entry "Jedi-Critical-Modules" #f 55 12 55 33 ("jedi.builder.workbench" "jedi.builder.development" "jedi.builder" "jazz.groupware.compare.Tree-Comparer" "jazz.groupware.compare.Text-Comparer" "jazz.groupware.compare.Directory-Comparer" "jazz.groupware.compare.Compare-Trees" "jazz.groupware.compare.Compare-Texts" "jazz.groupware.compare.Compare-Text-View" "jazz.groupware.compare.Compare-Directories" "jazz.jrm" "jazz.jml.model.JML-Text" "jazz.jml.model.JML-Element" "jazz.jml.model.JML-Node" "jazz.jml.parser.JML-Parser" "jazz.jml" "jazz.debugger" "jazz.debuggee" "jedi.application.Jedi" "jazz.ide.IDE" "jazz.ui.workspace.Workspace-Preferences" "jazz.ui.workspace" "jazz.system.application.Application" "jazz.system.process.Process" "jazz.ui.tree.Tree-Row" "jazz.ui.tree.Tree-Column" "jazz.ui.tree.Tree-View" "jazz.language.jazz.parser.Jazz-Parser" "jazz.language.scheme.parser.Scheme-Parser" "jazz.language.lisp.parser.Lisp-Parser" "jazz.language.lisp.catalog.Lisp-File-Entry" "jazz.language.lisp.catalog.Lisp-Entry" "jazz.catalog.parser.File-Parser" "jazz.catalog.entry.File-Entry" "jazz.catalog.entry.Indexed-Entry" "jazz.catalog.entry.Catalog-Entry" "jazz.catalog.catalog.Indexed-Catalog" "jazz.catalog.catalog.Filing-Catalog" "jazz.catalog.catalog.Catalog" "jazz.language.lisp.text.Lisp-Text-View" "jazz.language.jazz.text.Jazz-Text-View" "jazz.ui.text.Text-Colorizer" "jazz.ui.text.Code-Text-View" "jazz.ui.text.Text-View" "jazz.ui.outline.Outline-View" "jazz.ui.outline.Outline-Row" "jazz.ui.text.Text-Style" "jazz.ui.text.Style" "jazz.ui.text.Run" "jazz.ui.text.Line" "jazz.ui.text.Paragraph" "jazz.ui.text.Format" "jazz.library.exemplar" "jazz.library.node" "jazz.graphic.Font-Metrics" "jazz.graphic.font.Font" "jazz.language.scheme.text.Scheme-Explorer" "jazz.language.lisp.text.Lisp-Explorer" "jazz.language.jazz.text.Jazz-Explorer" "jazz.ui.text.Code-Explorer" "jazz.ui.text.Text-Explorer" "jazz.platform" "jazz.ui.image.Portfolio" "jazz.ui.image.Image" "jazz.ui.offscreen" "jazz.ui.window.Toplevel" "jazz.ui.window.View-Player" "jazz.ui.window.Window" "jazz.ui.window" "jazz.ui.view.Stage" "jazz.ui.view.Stage-Border" "jazz.ui.view.Splitter-View" "jazz.ui.view.Tool-Button" "jazz.ui.view.Image-Tool" "jazz.ui.view.Container" "jazz.ui.view.Layout-View" "jazz.ui.view.Scrollbar" "jazz.ui.view.View" "jazz.ui.view.Drawing" "jazz.ui.view" "jazz.ui.hosting.Toolbar-Host" "jazz.ui.hosting.Frame-Host" "jazz.ui.hosting.Docked-Host" "jazz.ui.hosting.Caption-Host" "jazz.ui.hosting.Host-View" "jazz.ui.layout.Figure" "jazz.ui.dialog" "jazz.graphic.Surface" "jazz.graphic.Color" "jazz.library.component.Form" "jazz.library.component.Branch" "jazz.library.component.Component" "jazz.utilities" "jazz.literals" "jazz.io" "time.implementation" "statprof" "irregex.implementation.irregex")}
      {Lisp-Entry "update" #f 195 13 195 19 ("jedi.product" "'jedi.product" "jedi" "'jedi" "build-module" "Jedi-Critical-Platform-Modules" "Jedi-Critical-Modules" "compile-module" "for-each" "jazz.literals" "'jazz.literals" "load-module")}
      {Lisp-Entry "build" #f 208 13 208 18 ("include-compiler?:" "jedi" "'jedi" "build-executable" "update")}}})
