"ADO-Connection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "connection" "ado" "ADO-Connection.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.connection.ado.ADO-Connection" () 37 9 ("jazz")
      {Lisp-Entry "ADO-Connection" () 45 7 ("Connection")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "setup-connection" () 51 11 ("0" "put-CommandTimeout" "ADODB.Connection" "cocreate" "handle" "set!" "nextmethod")}
        {Lisp-Entry "destroy-connection" () 57 11 ("nextmethod" "set!" "corelease" "Close" "handle" "when")}
        {Lisp-Entry "get-handle" () 70 18 ("handle")}
        {Lisp-Entry "open" () 79 11 ("nextmethod" "ADODB.adConnectUnspecified" "handle" "Open" "get-connection-string" "connection-string" "let" "rest" "data-source")}
        {Lisp-Entry "get-state" () 90 11 ("unknown" "else" "closed" "ADODB.adStateClosed" "open" "ADODB.adStateOpen" "=" "cond" "handle" "get-State" "state" "let")}
        {Lisp-Entry "new-request" () 102 11 ("self" "ADO-Request" "new")}
        {Lisp-Entry "execute" () 111 11 ("ADODB.adExecuteNoRecords" "ADODB.adCmdText" "bit-or" "handle" "Execute" "recordset" "affected" "receive" "command")}
        {Lisp-Entry "begin-transaction" () 122 11 ("handle" "BeginTrans")}
        {Lisp-Entry "commit-transaction" () 126 11 ("handle" "CommitTrans")}
        {Lisp-Entry "rollback-transaction" () 130 11 ("handle" "RollbackTrans")}}}})
"ADO-Recordset"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "connection" "ado" "ADO-Recordset.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.connection.ado.ADO-Recordset" () 37 9 ("jazz")
      {Lisp-Entry "ADO-Recordset" () 45 7 ("ADODB" "COM" "System" "Utilities" "Recordset")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "setup-recordset" () 51 11 ("ADODB.Recordset" "cocreate" "handle" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "destroy-recordset" () 56 11 ("nextmethod" "set!" "corelease" "Close" "adStateClosed" "get-State" "/=" "handle" "and" "when")}
        {Lisp-Entry "get-handle" () 69 18 ("handle")}
        {Lisp-Entry "opened?" () 78 11 ("handle" "not-null?")}
        {Lisp-Entry "open" () 82 11 ("options" "lock-type" "cursor-type" "Open" "1" "+" "handle" "put-MaxRecords" "true" "max-load" "neq?" "when" "else" "format" "data-source" "get-handle" "cond" "connection" "let" "command")}
        {Lisp-Entry "get-state" () 104 11 ("unknown" "else" "closed" "ADODB.adStateClosed" "open" "ADODB.adStateOpen" "=" "cond" "handle" "get-State" "state" "let")}
        {Lisp-Entry "new-recordset-metadata" () 116 11 ("handle" "get-Fields" "ADO-Recordset-Metadata" "new")}
        {Lisp-Entry "get-field-type" () 120 11 ("get-Type" "field" "metadata")}
        {Lisp-Entry "get-field-value" () 124 11 ("get-Value" "field" "metadata")}
        {Lisp-Entry "safe-field-value" () 128 11 ("get-field-value" "else" "ADODB.adVarBinary" "ADODB.adLongVarBinary" "get-field-type" "ecase" "field" "metadata")}
        {Lisp-Entry "next-recordset!" () 140 11 ("set!" "destroy-recordset" "handle" "NextRecordset" "new-handle" "records-affected" "receive")}
        {Lisp-Entry "move-first" () 151 11 ("handle" "MoveFirst")}
        {Lisp-Entry "move-last" () 155 11 ("handle" "MoveLast")}
        {Lisp-Entry "move-next" () 159 11 ("handle" "MoveNext")}
        {Lisp-Entry "move-previous" () 163 11 ("handle" "MovePrevious")}
        {Lisp-Entry "at-bof?" () 167 11 ("handle" "get-BOF")}
        {Lisp-Entry "at-eof?" () 171 11 ("handle" "get-EOF")}
        {Lisp-Entry "iterate-records" () 175 11 ("move-next" "not" "and" "while" "move-first" "at-eof?" "unless" "proc")}}}})
"ADO-Recordset-Metadata"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "connection" "ado" "ADO-Recordset-Metadata.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.connection.ado.ADO-Recordset-Metadata" () 37 9 ("jazz")
      {Lisp-Entry "ADO-Recordset-Metadata" () 45 7 ("Recordset-Metadata")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle" "set!" "nextmethod" "hnd")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-count" () 76 11 ("handle" "get-Count")}
        {Lisp-Entry "get-field" () 80 11 ("handle" "get-Item" "field-name")}
        {Lisp-Entry "get-field-value" () 84 11 ("get-Value" "get-field" "field" "with-closed" "field-name")}
        {Lisp-Entry "get-field-name" () 89 11 ("get-Name" "field")}
        {Lisp-Entry "get-field-type" () 93 11 ("get-Type" "field")}
        {Lisp-Entry "get-field-size" () 97 11 ("get-DefinedSize" "field")}
        {Lisp-Entry "get-field-precision" () 101 11 ("get-Precision" "field")}}}})
"ADO-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "connection" "ado" "ADO-Request.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.connection.ado.ADO-Request" () 37 9 ("jazz")
      {Lisp-Entry "ADO-Request" () 45 7 ("Request")
        {Lisp-Entry "new-recordset" () 48 11 ("connection" "connection:" "ADO-Recordset" "new" "apply" "rest" "request")}}}})
"ADODB"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "ADODB.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.com.ADODB" () 37 9 ("jazz")}})
"ADOX"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "ADOX.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.com.ADOX" () 37 9 ("jazz")}})
"AST"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "runtime" "AST.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.javaparser.runtime.AST" () 37 9 ("jazz")
      {Lisp-Entry "AST" () 45 7 ("ast-hidden-after" "ast-next-sibling" "ast-first-child" "ast-text" "ast-column" "ast-line" "ast-locatable" "ast-kind" "ast-null?" "Object")
        {Lisp-Entry "assert-kind" () 48 21 ("self" "error" "get-kind" "=" "unless" "kind")}
        {Lisp-Entry "get-null?" () 58 18 ("self" "ast-null?")}
        {Lisp-Entry "get-kind" () 62 18 ("self" "ast-kind")}
        {Lisp-Entry "get-locatable?" () 66 18 ("self" "ast-locatable")}
        {Lisp-Entry "get-line" () 70 18 ("self" "ast-line")}
        {Lisp-Entry "get-column" () 74 18 ("self" "ast-column")}
        {Lisp-Entry "get-text" () 78 18 ("self" "ast-text")}
        {Lisp-Entry "get-first-child" () 82 18 ("self" "ast-first-child")}
        {Lisp-Entry "get-next-sibling" () 86 18 ("self" "ast-next-sibling")}
        {Lisp-Entry "print" () 95 11 ("description" "get-kind" "token-type-name" "format" "get-null?" "if" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "description" () 105 26 ("get-text")}
        {Lisp-Entry "describe" () 109 18 ("1" "+" "describe" "when" "get-next-sibling" "sibling" "get-first-child" "child" "let" "get-column" "get-line" "get-locatable?" "if" "get-text" "get-kind" "token-type-name" "2" "*" ":console" "format" "0" "level")}
        {Lisp-Entry "token-type-name" () 126 23 ("token-types" "value->name" "type")}
        {Lisp-Entry "token-types" () 130 34 ()}
        {Lisp-Entry "bool" () 139 17 ()}
        {Lisp-Entry "int" () 140 17 ()}
        {Lisp-Entry "bool" () 141 17 ()}
        {Lisp-Entry "int" () 142 17 ()}
        {Lisp-Entry "int" () 143 17 ()}
        {Lisp-Entry "Object" () 144 17 ()}
        {Lisp-Entry "Object" () 145 17 ()}
        {Lisp-Entry "Object" () 146 17 ()}
        {Lisp-Entry "Object" () 147 17 ()}}}})
"Accelerator-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Accelerator-Table.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.utility.Accelerator-Table" () 37 9 ("jazz")
      {Lisp-Entry "Symbolic-Keys" () 45 19 ("VK_DIVIDE" "Divide" "VK_MULTIPLY" "Multiply" "VK_SUBTRACT" "Subtract" "VK_ADD" "Add" "VK_DELETE" "Delete" "VK_PAUSE" "Pause" "VK_INSERT" "Insert" "VK_NEXT" "Next" "VK_PRIOR" "Prior" "VK_DOWN" "Down" "VK_RIGHT" "Right" "VK_UP" "Up" "VK_LEFT" "Left" "VK_END" "End" "VK_HOME" "Home" "VK_TAB" "Tab" "VK_SPACE" "Space" "VK_RETURN" "Return" "VK_OEM_7" "Quote" "VK_OEM_6" "Close-Bracket" "VK_OEM_5" "Backslash" "VK_OEM_4" "Open-Bracket" "VK_OEM_3" "Tilde" "VK_OEM_2" "Slash" "VK_OEM_1" "Semi-Colon" "VK_OEM_PERIOD" "Period" "VK_OEM_COMMA" "Comma" "VK_OEM_PLUS" "Plus" "VK_OEM_MINUS" "Minus" "VK_BACK" "Backspace" "VK_ESCAPE" "Escape" "VK_F12" "F12" "VK_F11" "F11" "VK_F10" "F10" "VK_F9" "F9" "VK_F8" "F8" "VK_F7" "F7" "VK_F6" "F6" "VK_F5" "F5" "VK_F4" "F4" "VK_F3" "F3" "VK_F2" "F2" "VK_F1" "F1" "cons" "list")}
      {Lisp-Entry "Accelerator-Table" () 92 7 ("Object")
        {Lisp-Entry "handle" () 95 8 ()}
        {Lisp-Entry "accel-array" () 96 8 ()}
        {Lisp-Entry "accel-size" () 97 8 ()}
        {Lisp-Entry "initialize" () 100 11 ("destroy-mandatory" "create-table" "handle" "set!" "nextmethod" "action-items")}
        {Lisp-Entry "destroy" () 106 11 ("nextmethod" "accel-size" "0" "naturals" "ACCEL-cmd-ref" "unregister-cookie-id" "accel-array" "ACCEL-array-ref" "accel" "let" "n" "dynamic" "function" "for-each" "set!" "DestroyAcceleratorTable" "handle" "when")}
        {Lisp-Entry "get-handle" () 117 18 ("handle")}
        {Lisp-Entry "create-table" () 121 18 ("CreateAcceleratorTable" "accel-size" "accel-array" "set!" "naturals" "ACCEL-cmd-set!" "ACCEL-key-set!" "FVIRTKEY" "bit-or" "ACCEL-fVirt-set!" "FSHIFT" ":shift" "shift" "FALT" ":alt" "alt" "0" "FCONTROL" ":control" "memq?" "control" "get-key" "key" "get-modifiers" "modifiers" "ACCEL-array-ref" "r" "register-cookie-id" "id" "get-shortcut" "Shortcut" "is?" "if" "shortcut" "let" "n" "action-item" "dynamic" "function" "for-each" "make-ACCEL-array" "array" "length" "size" "let*" "when" "action-items")}
        {Lisp-Entry "get-key" () 144 11 ("error" "cdr" "Symbolic-Keys" "assq" "info" "let" "char->integer" "char?" "if" "key")}}}})
"Access-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Data-Source.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "Access-Data-Source" () 46 7 ("Data-Source")
        {Lisp-Entry "database" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "dsn" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "external-name" () 54 16 ("access" "rest")}
        {Lisp-Entry "new-inventory" () 63 11 ("password" "database" "Access-Inventory" "new" "false" "read-only?" "read-only?:" "connection")}
        {Lisp-Entry "new-connection" () 72 11 ("self" "ADO-Connection" "new")}
        {Lisp-Entry "get-connection-string" () 76 11 ("password" "username" "either" "database" "parse" "format" "dsn" "if")}
        {Lisp-Entry "get-connection-properties" () 85 11 ("password" "password:" "username" "username:" "database" "database:" "list")}
        {Lisp-Entry "present" () 96 11 ("database" "get-name" "format" "dsn" "if")}
        {Lisp-Entry "present-detailed" () 102 11 ("database" "get-name" "format" ":bulleted" "list")}
        {Lisp-Entry "get-class-presentation" () 114 16 ()}
        {Lisp-Entry "property-presentation" () 119 16 ("nextmethod" "else" "dsn" "database" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 126 11 ("nextmethod" "else" "true" "nullable?:" "String-Row" "dsn" "extensions:" "parameters:" "open" "mode:" "Access-Database-Row" "new" "database" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 133 11 ("password" "username" "database" "dsn" "class-info")}}}})
"Access-Database-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Database-Row.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Database-Row" () 37 9 ("jazz")
      {Lisp-Entry "Access-Database-Row" () 46 7 ("File-Row")
        {Lisp-Entry "edit" () 49 11 ("self" "get-tree" "expand" "edit-in-cell")}
        {Lisp-Entry "close-editor" () 54 11 ("self" "get-tree" "collapse" "nextmethod")}}}})
"Access-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Datatype.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "get-systypes" () 46 13 ("4" "2" "0" "8" "1" "Systype")}
      {Lisp-Entry "Access-Datatype" () 62 7 ("Datatype")}}})
"Access-Inventory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory" () 45 7 ("Inventory")
        {Lisp-Entry "engine" () 48 8 ()}
        {Lisp-Entry "database" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" ":access-database-version" "get-version" "get-name" "access-database" "type-connection-string" "OpenDatabase" "database" "0" "get-Item" "workspace" "get-Workspaces" "workspaces" "with-closed" "destroy-inventory" ":cleanup" ":dao-version" ":register" "get-DAO-version" "dao" "validate-version" "DAO.DBEngine" "cocreate" "engine" "set!" "parse" "format" "error" "exists?" "unless" "nextmethod" "false" "read-only?" "read-only?:" "password" "pathname" "connection")}
        {Lisp-Entry "destroy" () 66 11 ("nextmethod" "destroy-inventory")}
        {Lisp-Entry "destroy-inventory" () 71 11 ("set!" "corelease" "engine" "cointerface-refcount" "***" "debug" "Close" "database" "when")}
        {Lisp-Entry "get-version" () 90 11 ("0" "Version" "new" "split" "parse-integer" "map" "minor" "major" "bind" "database" "get-Version" "string" "let")}
        {Lisp-Entry "get-DAO-version" () 96 18 ("0" "Version" "new" "split" "parse-integer" "map" "minor" "major" "bind" "engine" "get-Version" "string" "let")}
        {Lisp-Entry "type-connection-string" () 107 11 ()}
        {Lisp-Entry "get-tables" () 116 11 ("get-output" "self" "Access-Inventory-Table" "put" "corelease" "DAO.dbSystemObject" "get-Attributes" "mask-bit-set?" "if" "get-Item" "table" "get-Count" "below" "0" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "database" "get-TableDefs" "tables" "with-closed")}
        {Lisp-Entry "get-table" () 127 11 ("corelease" "self" "Access-Inventory-Table" "new" "DAO.dbSystemObject" "get-Attributes" "mask-bit-set?" "not" "if" "get-Item" "table" "let" "database" "get-TableDefs" "tables" "with-closed" "name")}
        {Lisp-Entry "create-table" () 136 11 ("database" "CreateTableDef" "self" "Access-Inventory-Table" "new" "name")}
        {Lisp-Entry "append-table" () 140 11 ("get-handle" "Append" "database" "get-TableDefs" "tabledefs" "with-closed" "table")}
        {Lisp-Entry "remove-table" () 145 11 ("Delete" "database" "get-TableDefs" "tabledefs" "with-closed" "name")}
        {Lisp-Entry "column-supports-property?" () 151 11 ("true" "else" "equal?" "test:" "get-name" "member?" "get-datatype" "third" "datatype" "let" "allow-zero-length?" "case" "property" "object")}
        {Lisp-Entry "get-views" () 163 11 ()}
        {Lisp-Entry "get-view" () 167 11 ("rest" "name")}
        {Lisp-Entry "create-view" () 171 11 ("views-unsupported" "name")}
        {Lisp-Entry "append-view" () 175 11 ("views-unsupported" "view")}
        {Lisp-Entry "remove-view" () 179 11 ("views-unsupported" "name")}
        {Lisp-Entry "views-unsupported" () 183 11 ("error")}
        {Lisp-Entry "get-relations" () 192 11 ("get-Item" "self" "Access-Inventory-Relation" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "database" "get-Relations" "relations" "with-closed")}
        {Lisp-Entry "get-relation" () 198 11 ("get-Item" "self" "Access-Inventory-Relation" "new" "database" "get-Relations" "relations" "with-closed" "name")}
        {Lisp-Entry "create-relation" () 203 11 ("database" "CreateRelation" "self" "Access-Inventory-Relation" "new" "name")}
        {Lisp-Entry "append-relation" () 207 11 ("get-handle" "Append" "database" "get-Relations" "relations" "with-closed" "relation")}
        {Lisp-Entry "remove-relation" () 212 11 ("Delete" "database" "get-Relations" "relations" "with-closed" "name")}
        {Lisp-Entry "get-procedures" () 222 11 ("get-Item" "self" "Access-Inventory-Procedure" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "database" "get-QueryDefs" "procedures" "with-closed")}
        {Lisp-Entry "Procedure-Not-Existant" () 228 13 ()}
        {Lisp-Entry "get-procedure" () 232 11 ("self" "Access-Inventory-Procedure" "new" "when" "Procedure-Not-Existant" "cotry" "if" "procedure" "get-Item" "dynamic" "function" "action" "let" "database" "get-QueryDefs" "procedures" "with-closed" "true" "error?" "error?:" "name")}
        {Lisp-Entry "create-procedure" () 245 11 ("database" "CreateQueryDef" "self" "Access-Inventory-Procedure" "new" "name")}
        {Lisp-Entry "append-procedure" () 249 11 ("procedure")}
        {Lisp-Entry "remove-procedure" () 254 11 ("database" "DeleteQueryDef" "name")}}}})
"Access-Inventory-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory-Column" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory-Column" () 45 7 ("Inventory-Column")}
      {Lisp-Entry "Access-Inventory-Column" () 51 7 ("Inventory-Column")
        {Lisp-Entry "handle" () 54 8 ()}
        {Lisp-Entry "initialize" () 57 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "index-column?" "parent" "inventory")}
        {Lisp-Entry "destroy" () 63 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "reload" () 68 11 ("get-title" "get-Item" "handle" "set!" "parent" "get-handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "get-handle" () 78 18 ("handle")}
        {Lisp-Entry "get-default-value" () 82 11 ("empty-string?" "if" "handle" "get-DefaultValue" "value" "let")}
        {Lisp-Entry "set-default-value" () 89 11 ("either" "handle" "put-DefaultValue" "value")}
        {Lisp-Entry "get-description" () 93 11 ("get-property")}
        {Lisp-Entry "set-description" () 97 11 ("set-property" "value")}
        {Lisp-Entry "get-datatype" () 101 11 ("get-size" "get-type" "Access-Datatype" "new-datatype")}
        {Lisp-Entry "get-type" () 105 11 ("2" "handle" "get-Type" "DAO.DataTypeEnum" "value->name" "symbol->string" "subseq")}
        {Lisp-Entry "get-size" () 109 11 ("handle" "get-Size")}
        {Lisp-Entry "set-datatype" () 113 11 ("put-Size" "when" "append" "string->symbol" "DAO.DataTypeEnum" "name->value" "handle" "put-Type" "get-size" "size" "get-name" "name" "let" "value")}
        {Lisp-Entry "set-size" () 121 11 ("handle" "put-Size" "when" "size")}
        {Lisp-Entry "get-nullable?" () 126 11 ("handle" "get-Required" "not")}
        {Lisp-Entry "set-nullable?" () 130 11 ("not" "handle" "put-Required" "value")}
        {Lisp-Entry "get-validation-rule" () 134 11 ("empty-string?" "if" "handle" "get-ValidationRule" "value" "let")}
        {Lisp-Entry "set-validation-rule" () 141 11 ("either" "handle" "put-ValidationRule" "value")}
        {Lisp-Entry "get-validation-text" () 145 11 ("empty-string?" "if" "handle" "get-ValidationText" "value" "let")}
        {Lisp-Entry "set-validation-text" () 152 11 ("either" "handle" "put-ValidationText" "value")}
        {Lisp-Entry "get-allow-zero-length?" () 156 11 ("handle" "get-AllowZeroLength")}
        {Lisp-Entry "set-allow-zero-length?" () 160 11 ("handle" "put-AllowZeroLength" "value")}
        {Lisp-Entry "get-display-format" () 164 11 ("get-property")}
        {Lisp-Entry "set-display-format" () 168 11 ("set-property" "value")}
        {Lisp-Entry "get-ordinal-position" () 172 11 ("handle" "get-OrdinalPosition")}
        {Lisp-Entry "set-ordinal-position" () 176 11 ("handle" "put-OrdinalPosition" "value")}
        {Lisp-Entry "get-auto-increment?" () 180 11 ("DAO.dbAutoIncrField" "get-attributes" "mask-bit-set?")}
        {Lisp-Entry "set-auto-increment?" () 184 11 ("DAO.dbAutoIncrField" "get-attributes" "mask-bit-set" "set-attributes" "value")}
        {Lisp-Entry "get-title" () 188 11 ("handle" "get-Name")}
        {Lisp-Entry "get-fixed?" () 192 11 ("DAO.dbFixedField" "get-attributes" "mask-bit-set?")}
        {Lisp-Entry "get-indexes" () 196 11 ("handle" "get-Indexes")}
        {Lisp-Entry "get-order" () 200 11 ("ascending" "descending" "DAO.dbDescending" "get-attributes" "mask-bit-set?" "if")}
        {Lisp-Entry "get-attributes" () 211 11 ("handle" "get-Attributes")}
        {Lisp-Entry "set-attributes" () 215 11 ("handle" "put-Attributes" "value")}
        {Lisp-Entry "Property-Inexistant" () 219 12 ()}
        {Lisp-Entry "Object-Already-Existant" () 223 12 ()}
        {Lisp-Entry "Element-Not-Found" () 227 12 ()}
        {Lisp-Entry "get-property" () 231 11 ("get-Value" "null?" "if" "Property-Inexistant" "get-Item" "cotry" "property" "handle" "get-Properties" "properties" "with-closed" "property-name")}
        {Lisp-Entry "set-property" () 239 11 ("Element-Not-Found" "Delete" "set-existant-property" "Object-Already-Existant" "Append" "cotry" "DAO.dbText" "CreateProperty" "property" "if" "handle" "get-Properties" "properties" "with-closed" "value" "property-name")}
        {Lisp-Entry "set-existant-property" () 249 11 ("put-Value" "when" "Property-Inexistant" "get-Item" "cotry" "property" "handle" "get-Properties" "properties" "with-closed" "value" "property-name")}}}})
"Access-Inventory-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory-Constraint.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory-Constraint" () 45 7 ("COM" "System" "Utilities" "Kernel" "Inventory-Constraint")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}}}})
"Access-Inventory-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory-Index.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory-Index" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory-Index" () 45 7 ("Inventory-Index")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "fields" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 68 18 ("handle")}
        {Lisp-Entry "get-title" () 72 11 ("handle" "get-Name")}
        {Lisp-Entry "get-fields" () 76 11 ("get-effective-fields" "fields" "either")}
        {Lisp-Entry "get-effective-fields" () 80 11 ("DAO._Field" "get-Item" "item" "true" "self" "inventory" "Access-Inventory-Column" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "DAO.IndexFields" "coquery" "index-fields" "handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "set-fields/orders" () 88 18 ("Append" "DAO.IndexFields" "coquery" "index-fields" "get-Fields" "fields" "DAO.dbDescending" "put-Attributes" "descending" "eq?" "when" "handle" "CreateField" "field" "with-closed" "cadr" "field-order" "car" "field-name" "let" "field-values" "dynamic" "function" "for-each" "value")}
        {Lisp-Entry "get-unique?" () 101 11 ("handle" "get-Unique")}
        {Lisp-Entry "set-unique?" () 105 18 ("handle" "put-Unique" "value")}
        {Lisp-Entry "get-required?" () 109 11 ("handle" "get-Required")}
        {Lisp-Entry "get-ignore-nulls?" () 113 11 ("handle" "get-IgnoreNulls")}}}})
"Access-Inventory-Primary-Key"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory-Primary-Key.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory-Primary-Key" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory-Primary-Key" () 45 7 ("Inventory-Primary-Key")
        {Lisp-Entry "index" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "index~self" "set!" "nextmethod" "index" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "set!" "index" "close")}
        {Lisp-Entry "get-index" () 68 17 ("index")}
        {Lisp-Entry "get-title" () 72 11 ("index" "get-title")}
        {Lisp-Entry "get-fields" () 76 11 ("index" "get-fields")}}}})
"Access-Inventory-Procedure"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory-Procedure.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory-Procedure" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory-Procedure" () 45 7 ("Inventory-Procedure")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 67 11 ("handle" "get-Name")}
        {Lisp-Entry "get-text" () 71 11 ("handle" "get-SQL")}
        {Lisp-Entry "set-text" () 75 18 ("handle" "put-SQL" "value")}}}})
"Access-Inventory-Relation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory-Relation.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory-Relation" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory-Relation" () 45 7 ("Inventory-Relation")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-title" () 71 18 ("handle" "get-Name")}
        {Lisp-Entry "get-primary-table" () 75 11 ("handle" "get-Table")}
        {Lisp-Entry "set-primary-table" () 79 11 ("handle" "put-Table" "value")}
        {Lisp-Entry "get-primary-field-names" () 83 11 ("get-Count" "0" "naturals" "get-Name" "get-Item" "field" "n" "dynamic" "function" "map" "handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "set-primary-field-names" () 91 11 ("Append" "CreateField" "field" "field-name" "dynamic" "function" "for-each" "handle" "get-Fields" "fields" "with-closed" "values")}
        {Lisp-Entry "get-foreign-table" () 99 11 ("handle" "get-ForeignTable")}
        {Lisp-Entry "set-foreign-table" () 103 11 ("handle" "put-ForeignTable" "value")}
        {Lisp-Entry "get-foreign-field-names" () 107 11 ("get-Count" "0" "naturals" "get-ForeignName" "get-Item" "field" "n" "dynamic" "function" "map" "handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "set-foreign-field-names" () 115 11 ("length" "0" "naturals" "put-ForeignName" "get-Item" "field" "i" "field-name" "dynamic" "function" "for-each" "handle" "get-Fields" "fields" "with-closed" "values")}
        {Lisp-Entry "get-unique?" () 124 11 ("DAO.dbRelationUnique" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-unique?" () 128 18 ("DAO.dbRelationUnique" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-dont-enforce?" () 132 11 ("DAO.dbRelationDontEnforce" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "get-inherited?" () 136 11 ("DAO.dbRelationInherited" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "get-update-cascade?" () 140 11 ("DAO.dbRelationUpdateCascade" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-update-cascade?" () 144 18 ("DAO.dbRelationUpdateCascade" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-delete-cascade?" () 148 11 ("DAO.dbRelationDeleteCascade" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-delete-cascade?" () 152 18 ("DAO.dbRelationDeleteCascade" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-left?" () 156 11 ("DAO.dbRelationLeft" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-left?" () 160 18 ("DAO.dbRelationLeft" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-right?" () 164 11 ("DAO.dbRelationRight" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-right?" () 168 18 ("DAO.dbRelationRight" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-attribute" () 172 11 ("handle" "get-Attributes")}
        {Lisp-Entry "set-attribute" () 176 11 ("handle" "put-Attributes" "value")}}}})
"Access-Inventory-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory-Table.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory-Table" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory-Table" () 45 7 ("Inventory-Table")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "indexes" () 49 8 ("not-loaded")}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-owner" () 68 11 ()}
        {Lisp-Entry "get-handle" () 72 18 ("handle")}
        {Lisp-Entry "get-title" () 76 11 ("handle" "get-Name")}
        {Lisp-Entry "get-linked?" () 80 11 ("handle" "get-SourceTableName" "empty-string?" "not")}
        {Lisp-Entry "get-connect" () 84 11 ("handle" "get-Connect")}
        {Lisp-Entry "set-connect" () 88 11 ("handle" "put-Connect" "connect")}
        {Lisp-Entry "get-source-table-name" () 92 11 ("handle" "get-SourceTableName")}
        {Lisp-Entry "set-source-table-name" () 96 11 ("handle" "put-SourceTableName" "source-table-name")}
        {Lisp-Entry "get-validation-rule" () 100 11 ("empty-string?" "if" "handle" "get-ValidationRule" "value" "let")}
        {Lisp-Entry "set-validation-rule" () 107 11 ("either" "handle" "put-ValidationRule" "value")}
        {Lisp-Entry "get-validation-text" () 111 11 ("empty-string?" "if" "handle" "get-ValidationText" "value" "let")}
        {Lisp-Entry "set-validation-text" () 118 11 ("either" "handle" "put-ValidationText" "value")}
        {Lisp-Entry "get-description" () 122 11 ("get-property")}
        {Lisp-Entry "set-description" () 126 11 ("set-property" "value")}
        {Lisp-Entry "get-primary-key" () 135 18 ("get-output" "car" "corelease" "Access-Inventory-Index" "self" "inventory" "Access-Inventory-Primary-Key" "put" "get-Primary" "if" "get-Item" "index" "get-Count" "below" "0" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Indexes" "indexes" "with-closed")}
        {Lisp-Entry "create-primary-key" () 146 18 ("Access-Inventory-Index" "self" "inventory" "Access-Inventory-Primary-Key" "new" "Append" "DAO.IndexFields" "coquery" "index-fields" "get-Fields" "fields" "DAO.dbDescending" "put-Attributes" "descending" "eq?" "when" "CreateField" "with-closed" "order" "field" "bind" "field/order" "dynamic" "function" "for-each" "true" "put-Primary" "handle" "CreateIndex" "primary-index" "let" "fields/orders" "name")}
        {Lisp-Entry "remove-primary-key" () 161 11 ("Delete" "handle" "get-Indexes" "indexes-handle" "with-closed" "get-index" "index" "let" "name")}
        {Lisp-Entry "append-primary-key" () 167 11 ("get-index" "get-handle" "Append" "handle" "get-Indexes" "indexes-handle" "with-closed" "primary-key")}
        {Lisp-Entry "get-columns" () 177 11 ("get-Item" "false" "self" "inventory" "Access-Inventory-Column" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "get-column" () 183 11 ("get-Item" "false" "self" "inventory" "Access-Inventory-Column" "new" "handle" "get-Fields" "fields" "with-closed" "name")}
        {Lisp-Entry "create-column" () 188 11 ("handle" "CreateField" "false" "self" "inventory" "Access-Inventory-Column" "new" "name")}
        {Lisp-Entry "append-column" () 192 11 ("get-handle" "Append" "handle" "get-Fields" "fields" "with-closed" "column")}
        {Lisp-Entry "remove-column" () 197 11 ("Delete" "handle" "get-Fields" "fields" "with-closed" "name")}
        {Lisp-Entry "indexes-loaded?" () 207 11 ("not-loaded" "indexes" "neq?")}
        {Lisp-Entry "load-indexes" () 211 11 ("get-effective-indexes" "indexes" "set!" "indexes-loaded?" "unless")}
        {Lisp-Entry "get-indexes" () 216 11 ("indexes" "load-indexes")}
        {Lisp-Entry "get-effective-indexes" () 221 11 ("get-output" "corelease" "self" "inventory" "Access-Inventory-Index" "put" "get-Primary" "get-Foreign" "not" "and" "if" "get-Item" "index" "get-Count" "below" "0" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Indexes" "indexes" "with-closed")}
        {Lisp-Entry "get-index" () 233 11 ("get-indexes" "get-title" "=" "index" "dynamic" "function" "find-if" "name")}
        {Lisp-Entry "create-index" () 239 11 ("handle" "CreateIndex" "self" "inventory" "Access-Inventory-Index" "new" "name")}
        {Lisp-Entry "append-index" () 243 11 ("cons" "indexes" "set!" "get-handle" "Append" "handle" "get-Indexes" "indexes-handle" "with-closed" "load-indexes" "new-index")}
        {Lisp-Entry "remove-index" () 250 11 ("remove!" "indexes" "set!" "Delete" "handle" "get-Indexes" "indexes-handle" "with-closed" "get-index" "index" "let" "name")}
        {Lisp-Entry "get-triggers" () 262 11 ()}
        {Lisp-Entry "get-trigger" () 266 11 ("rest" "name")}
        {Lisp-Entry "triggers-unsupported" () 270 11 ("error")}
        {Lisp-Entry "create-trigger" () 274 11 ("triggers-unsupported" "name")}
        {Lisp-Entry "append-trigger" () 278 11 ("triggers-unsupported" "trigger")}
        {Lisp-Entry "delete-trigger" () 282 11 ("triggers-unsupported" "name")}
        {Lisp-Entry "get-constraints" () 291 11 ()}
        {Lisp-Entry "get-constraint" () 295 11 ("rest" "name")}
        {Lisp-Entry "constraints-unsupported" () 299 11 ("error")}
        {Lisp-Entry "create-constraint" () 303 11 ("constraints-unsupported" "name")}
        {Lisp-Entry "append-constraint" () 307 11 ("constraints-unsupported" "constraint")}
        {Lisp-Entry "delete-constraint" () 311 11 ("constraints-unsupported" "name")}
        {Lisp-Entry "Property-Inexistant" () 320 12 ()}
        {Lisp-Entry "Object-Already-Existant" () 324 12 ()}
        {Lisp-Entry "Element-Not-Found" () 328 12 ()}
        {Lisp-Entry "get-property" () 332 11 ("get-Value" "null?" "if" "Property-Inexistant" "get-Item" "cotry" "property" "handle" "get-Properties" "properties" "with-closed" "property-name")}
        {Lisp-Entry "set-property" () 340 11 ("Element-Not-Found" "Delete" "set-existant-property" "Object-Already-Existant" "Append" "cotry" "DAO.dbText" "CreateProperty" "property" "if" "handle" "get-Properties" "properties" "with-closed" "value" "property-name")}
        {Lisp-Entry "set-existant-property" () 350 11 ("put-Value" "when" "Property-Inexistant" "get-Item" "cotry" "property" "handle" "get-Properties" "properties" "with-closed" "value" "property-name")}}}})
"Access-Inventory-Updater"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Inventory-Updater.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Inventory-Updater" () 37 9 ("jazz")
      {Lisp-Entry "Access-Inventory-Updater" () 45 7 ("Inventory-Updater")}}})
"Access-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Provider.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Provider" () 37 9 ("jazz")
      {Lisp-Entry "Access-Provider" () 45 7 ("Provider")
        {Lisp-Entry "external-name" () 48 11 ("access")}
        {Lisp-Entry "get-datatype" () 57 11 ("Access-Datatype")}
        {Lisp-Entry "present" () 66 11 ()}
        {Lisp-Entry "browser-class" () 75 11 ("Access-Widget")}
        {Lisp-Entry "new-updater" () 84 11 ("Access-Inventory-Updater" "new" "connection")}}}})
"Access-Widget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "access" "Access-Widget.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.access.Access-Widget" () 37 9 ("jazz")
      {Lisp-Entry "Access-Widget" () 48 7 ("password" "password-border" "password-label" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "username" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "style:" "edge" "border-type:" "username-border" "username-label" "extensions:" "parameters:" "file" "protocol:" "database-browser" "5" "0" "Point" "position:" "title:" "database-label" "name:" "Dimension" "size:" "Data-Source-Widget")
        {Lisp-Entry "get-data-source" () 72 11 ("password" "password:" "username" "get-string-content" "username:" "database-browser" "locate" "get-moniker" "database:" "Access-Data-Source" "new")}
        {Lisp-Entry "set-data-source" () 79 11 ("get-password" "password" "get-username" "username" "set-string-content" "get-database" "database-browser" "locate" "set-moniker" "source")}
        {Lisp-Entry "setup-username/password-mode" () 85 11 ("select-all" "username" "acquire-focus" "false" "database-browser" "locate" "set-enabled?")}
        {Lisp-Entry "set-enabled?" () 96 11 ("invalidate-view" "password" "username" "database-browser" "locate" "set-enabled?" "enabled?" "set!" "flag")}
        {Lisp-Entry "get-tab-stops" () 109 11 ("password" "username" "database-browser" "locate" "get-text" "list")}
        {Lisp-Entry "set-default-focus" () 116 11 ("database-browser" "locate" "get-text" "set-focus")}
        {Lisp-Entry "on-return-press" () 120 11 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "validate-content" () 130 11 ("parse" "format" "exists?" "throw-cancel" "focus-body" "yes:" "message-box" "not-null?" "unless" "get-moniker" "moniker" "validate-content" "database-browser" "locate" "browser" "let")}}}})
"Action"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "action" "Action.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.action.Action" () 37 9 ("jazz")
      {Lisp-Entry "Action" () 40 7 ("Object")
        {Lisp-Entry "action-context" () 43 8 ()}
        {Lisp-Entry "action-name" () 44 8 ()}
        {Lisp-Entry "properties" () 45 8 ()}
        {Lisp-Entry "initialize" () 48 11 ("properties~self" "action-name~self" "action-context~self" "set!" "nextmethod" "properties" "action-name" "action-context")}
        {Lisp-Entry "print" () 55 11 ("properties" "action-name" "action-context" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-action-context" () 68 18 ("action-context")}
        {Lisp-Entry "get-action-name" () 72 18 ("action-name")}
        {Lisp-Entry "get-properties" () 76 18 ("properties")}}}})
"Action-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Action-Event.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.event.Action-Event" () 37 9 ("jazz")
      {Lisp-Entry "Action-Event" () 44 7 ("Event")}}})
"Action-Icon"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Action-Icon.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Action-Icon" () 37 9 ("jazz")
      {Lisp-Entry "Action-Icon" () 47 7 (":icons" "portfolio:" "tooltip?:" "Dimension" "size:" "Push-Tool")
        {Lisp-Entry "finish" () 54 11 ("preload-images" "nextmethod" "rest")}}}})
"Action-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "action" "Action-Item.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.action.Action-Item" () 37 9 ("jazz")
      {Lisp-Entry "Action-Item" () 45 7 ("Component")
        {Lisp-Entry "action-handler" () 48 12 ("set-action-handler" "get-action-handler")}
        {Lisp-Entry "shortcut" () 49 12 ("set-shortcut" "get-shortcut")}
        {Lisp-Entry "enabled?" () 50 12 ("set-enabled?" "get-enabled?" "true")}
        {Lisp-Entry "actionables" () 53 8 ()}
        {Lisp-Entry "get-action-handler" () 61 18 ("action-handler")}
        {Lisp-Entry "set-action-handler" () 65 18 ("action-handler" "set!" "value")}
        {Lisp-Entry "get-shortcut" () 69 18 ("shortcut")}
        {Lisp-Entry "set-shortcut" () 73 18 ("process-shortcut-update" "shortcut" "set!" "value")}
        {Lisp-Entry "get-enabled?" () 78 18 ("enabled?")}
        {Lisp-Entry "set-enabled?" () 82 18 ("process-enabled-update" "enabled?" "set!" "value")}
        {Lisp-Entry "register-actionable" () 92 18 ("enabled-update" "self" "shortcut-update" "cons" "actionables" "set!" "actionable")}
        {Lisp-Entry "unregister-actionable" () 98 18 ("remove!" "actionables" "set!" "actionable")}
        {Lisp-Entry "process-shortcut-update" () 102 11 ("actionables" "self" "shortcut-update" "actionable" "dynamic" "function" "for-each")}
        {Lisp-Entry "process-enabled-update" () 108 11 ("actionables" "self" "enabled-update" "actionable" "dynamic" "function" "for-each")}
        {Lisp-Entry "invoke" () 123 18 ("invoke" ":action" "Action-Event" "new" "apply" "action-handler" "get-properties" "either" "let*" "enabled?" "when" "event" "event:" "action" "action:" "properties" "sender")}
        {Lisp-Entry "get-class-image" () 136 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 141 16 ("nextmethod" "else" "shortcut" "field-name" "case" "property")}
        {Lisp-Entry "can-rename-component?" () 147 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 151 11 ("false")}
        {Lisp-Entry "can-move-component?" () 155 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 159 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 163 11 ("shortcut")}}}})
"Actionable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "action" "Actionable.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.action.Actionable" () 37 9 ("jazz")
      {Lisp-Entry "Actionable" () 45 11 ()
        {Lisp-Entry "shortcut-update" () 48 35 ("action-item")}
        {Lisp-Entry "enabled-update" () 49 35 ("action-item")}}}})
"Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "action" "Actions.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.action.Actions" () 37 9 ("jazz")
      {Lisp-Entry "Actions" () 45 7 ("Component")
        {Lisp-Entry "can-rename-component?" () 53 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 57 11 ("false")}
        {Lisp-Entry "can-move-component?" () 61 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 65 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 69 11 ()}
        {Lisp-Entry "get-addable-classes" () 73 11 ("Action-Item" "list")}
        {Lisp-Entry "get-addable-details" () 78 11 ("shortcut" "name-info")}}}})
"Activities-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "activity" "Activities-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.activity.Activities-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Activities-Manager" () 47 7 ("width:" "title:" "row" "selection-mode:" "multiple-selection?:" "on-return-press" "return-press-handler:" "on-context-menu" "context-menu-handler:" "on-double-click" "double-click-handler:" "results" "header" "fill" "content" "flat?:" "hscroll?:" "vscroll?:" "center" "scroller" "on-launch" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "launch" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "external-name" () 65 16 ("activities-manager" "rest")}
        {Lisp-Entry "palette-class" () 75 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 80 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 85 16 ()}
        {Lisp-Entry "get-tools-view" () 94 11 ("tools" "locate")}}}})
"Activity"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "activity" "Activity.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.activity.Activity" () 37 9 ("jazz")
      {Lisp-Entry "Activity" () 46 7 ("Thread")
        {Lisp-Entry "reporter" () 49 8 ()}
        {Lisp-Entry "unregister?" () 50 8 ("false")}
        {Lisp-Entry "initialize" () 58 11 ("destroy-mandatory" "unregister?~self" "set!" "nextmethod" "apply" "others" "false" "unregister?" "bind-keywords" "rest")}
        {Lisp-Entry "destroy" () 70 11 ("nextmethod" "unregister-reporter")}
        {Lisp-Entry "unregister-reporter" () 75 11 ("set!" "get-manager" "unregister-activity" "reporter" "unregister?" "and" "when")}
        {Lisp-Entry "get-manager" () 86 18 ("get-activity-manager" "false" "visible?" "visible?:")}
        {Lisp-Entry "get-reporter" () 95 18 ("get-manager" "register-activity" "set!" "reporter" "unless")}
        {Lisp-Entry "cancel-requested?" () 101 18 ("get-reporter" "cancel-requested?")}
        {Lisp-Entry "set-range" () 105 18 ("get-reporter" "set-range" "range")}
        {Lisp-Entry "user-message" () 109 18 ("get-reporter" "get-user-message" "apply" "rest" "fmt")}
        {Lisp-Entry "update-view" () 113 18 ("get-reporter" "get-root" "update-view")}
        {Lisp-Entry "set-pos" () 117 18 ("get-reporter" "set-pos" "pos")}
        {Lisp-Entry "delta-pos" () 121 18 ("get-reporter" "delta-pos" "increment")}
        {Lisp-Entry "set-step" () 125 18 ("get-reporter" "set-step" "increment")}
        {Lisp-Entry "step-it" () 129 18 ("get-reporter" "step-it")}
        {Lisp-Entry "set-done" () 133 18 ("get-reporter" "set-done")}}}})
"Activity-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "activity" "Activity-Manager.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.activity.Activity-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Activity-Manager" () 48 7 ("border" "fill" "layout-type:" "root" "name:" "Dimension" "size:" "Point" "position:" "title:" "Palette")
        {Lisp-Entry "window-style" () 58 11 ("WS_CLIPCHILDREN" "WS_POPUP" "bit-or" "rest")}
        {Lisp-Entry "show" () 62 11 ("show-noactivate" "get-application" "get-active?" "when" "true" "set-visible-flag")}
        {Lisp-Entry "dispatch-message" () 69 11 ("nextmethod" "MA_NOACTIVATE" "WM_MOUSEACTIVATE" "eq?" "if" "lparam" "wparam" "msg")}
        {Lisp-Entry "on-close" () 80 11 ("hide" "evt")}
        {Lisp-Entry "destroy" () 84 11 ("nextmethod" "destroy-manager")}
        {Lisp-Entry "close-manager" () 94 18 ("close" "dynamic" "function" "execute-primary" "get-reporters" "not-null?" "unless")}
        {Lisp-Entry "toggle-visible?" () 106 18 ("set-visible?" "delay:" "up" "direction:" "Wipe-Effect" "new" "root" "set-effect" "length" "1" "null?" "if" "/" "delay" "get-reporters" "reporters" "let*" "when" "get-visible?" "not" "visible?" "let")}
        {Lisp-Entry "register-activity" () 121 18 ("update-rectangle" "update-title" "get-width" "-" "Dimension" "set-size" "get-height" "height" "rank:" "parent:" "Activity-Reporter" "new" "dynamic" "function" "receive-primary" "reporter" "locate" "border" "1" "max-reporter-rank" "+" "0" "null?" "if" "rank" "get-reporters" "reporters" "get-size" "size" "let*")}
        {Lisp-Entry "unregister-activity" () 134 18 ("update-rectangle" "update-title" "close" "dynamic" "function" "execute-primary" "reporter")}
        {Lisp-Entry "update-title" () 147 21 ("activities" "child" "when" "get-application" "get-status-bar" "status" "let" "set-title" "1" "format-cardinality" "format" "0" "=" "if" "text" "get-reporters" "get-done" "not" "reporter" "dynamic" "function" "count-if" "n" "let*")}
        {Lisp-Entry "update-rectangle" () 161 21 ("get-v" "-" "get-h" "Point" "new" "2" "8" "*" "height" "car" "get-size" "get-height" "v" "max-reporter-rank" "1" "+" "n" "let*" "Dimension" "set-size" "set-position" "hide" "begin" "null?" "if" "manager-position" "base" "get-reporters" "reporters" "get-width" "width" "let" "compact-reporters")}
        {Lisp-Entry "compact-reporters" () 178 21 ("reporter-rank" "key:" "get-reporters" "" "sort" "increase!" "set-rank" "reporter" "dynamic" "function" "for-each" "0" "rank" "let")}
        {Lisp-Entry "clear-done" () 186 18 ("update-rectangle" "get-reporters" "close" "get-done" "when" "reporter" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-reporters" () 199 21 ("border" "locate" "get-children")}
        {Lisp-Entry "max-reporter-rank" () 203 11 ("reporter-rank" "map" "generic-max" "apply" "reporters")}
        {Lisp-Entry "reporter-rank" () 207 11 ("get-rank" "reporter")}}
      {Lisp-Entry "Activities-Border" () 216 7 ("View")
        {Lisp-Entry "draw" () 219 11 ("bottom" "sunken" "right" "top" "left" "edges:" "outer:" "raised" "inner:" "draw-edge" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}}}})
"Activity-Reporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "activity" "Activity-Reporter.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.activity.Activity-Reporter" () 37 9 ("jazz")
      {Lisp-Entry "Activity-Reporter" () 47 7 ("on-cancel" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "cancel" "progress" "0" "Point" "position:" "message" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "rank" () 50 12 ("set-rank" "get-rank")}
        {Lisp-Entry "cancelled?" () 53 8 ("false")}
        {Lisp-Entry "done?" () 54 8 ("false")}
        {Lisp-Entry "install" () 64 11 ("0" "set-pos" "locate" "progress" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-rank" () 75 18 ("rank")}
        {Lisp-Entry "set-rank" () 79 18 ("8" "get-height" "*" "+" "Point" "new" "set-position" "get-size" "size" "let" "set!" "rank" "/=" "when" "r")}
        {Lisp-Entry "cancel-requested?" () 86 18 ("cancelled?")}
        {Lisp-Entry "get-done" () 90 18 ("done?")}
        {Lisp-Entry "resize" () 99 11 ("cancel" "move-figure" "progress" "0" "message" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-cancel" () 106 11 ("set-message" "true" "cancelled?" "set!" "update-rectangle" "close" "get-frame" "frame" "let" "done?" "if" "evt")}
        {Lisp-Entry "set-message" () 120 18 ("message" "locate" "set-title" "dynamic" "function" "execute-primary" "msg")}
        {Lisp-Entry "user-message" () 126 18 ("format" "apply" "set-message" "rest" "fmt")}
        {Lisp-Entry "set-done" () 130 18 ("get-frame" "update-title" "Bitmap-Resource" "cancel" "locate" "set-image-name" "true" "done?" "set!" "dynamic" "function" "execute-primary")}
        {Lisp-Entry "set-infinite?" () 138 18 ("progress" "locate" "set-infinite?" "dynamic" "function" "execute-primary" "flag")}
        {Lisp-Entry "set-range" () 144 18 ("progress" "locate" "set-range" "dynamic" "function" "execute-primary" "range")}
        {Lisp-Entry "set-pos" () 150 18 ("progress" "locate" "set-pos" "dynamic" "function" "execute-primary" "pos")}
        {Lisp-Entry "delta-pos" () 156 18 ("progress" "locate" "delta-pos" "dynamic" "function" "execute-primary" "increment")}
        {Lisp-Entry "set-step" () 162 18 ("progress" "locate" "set-step" "dynamic" "function" "execute-primary" "increment")}
        {Lisp-Entry "step-it" () 168 18 ("progress" "locate" "step-it" "dynamic" "function" "execute-primary")}}}})
"Add-File-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Add-File-Dialog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.builder.workbench.Add-File-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "Add-File-Dialog" () 48 7 ("on-cancel" "cancel" "on-ok" ":host" "action-handler:" "default?:" "ok" "on-content-change" "content-change-handler:" "Default" "Text-Style" "default-style:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "name-text" "hscroll?:" "name-border" "name-label" "show-unfocused-selection?:" "editable?:" "text" "scroller" "moniker-border" "on-moniker-update" "moniker-update-handler:" "display-protocol?:" "dir" "protocol:" "directory" "directory-label" "display-images?:" "controls?:" "toplevel-controls?:" "width:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-double-click" "Event-Handler" "double-click-handler:" "on-selection-change" "form:" "Selection-Handler" "selection-handler:" "tooltip-text:" "tooltip?:" "can-select-empty?:" "row" "selection-mode:" "default-row-height:" "Ansi-Var" "show-header?:" ":icons" "portfolio:" "kinds" "fill" "layout-type:" "document" "vscroll?:" "entry" "style:" "edge" "border-type:" "kind-border" "content" "Default-GUI" "description" "Label-Bold" "Font" "font:" "9" "Point" "position:" "title:" "title" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "directory" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "finish" () 79 11 ("directory" "locate" "set-moniker" "setup-kinds" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" () 85 11 ("kinds" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "Kinds" () 95 14 ("text" "sql" "java" "c" "scheme" "project" "module" "product" "template:" "jazz" "kind:" "name:")}
        {Lisp-Entry "setup-kinds" () 116 11 ("update-ok" "ensure-displayed" "0" "set-single-selection" "get-children" "child" "for-each" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "father:" "add-row" "row" "icon" "name" "get-property" "title" "let*" "father" "node" "dynamic" "function" "insert" "letrec" "remove-every-row" "Kinds" "parse-jml" "root" "name-text" "text" "kinds" "locate" "tree" "let")}
        {Lisp-Entry "dialog-class" () 143 16 ("Add-Document-Host-Dialog")}
        {Lisp-Entry "Add-Document-Host-Dialog" () 148 14 ("Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "validate-dialog" () 160 11 ("throw-cancel" "message-box" "when" "validate-name" "message" "format" "new-file" "destination" "extract-extension" "extension" "let*" "get-modal-result" "name" "directory" "template" "kind" "receive")}
        {Lisp-Entry "get-modal-result" () 170 11 ("name-text" "get-string-content" "directory" "locate" "get-moniker" "template" "kind" "get-property" "values" "selected-kind" "node" "let")}
        {Lisp-Entry "selected-kind" () 175 11 ("get-user-data" "node" "get-row" "row" "get-single-selection" "rank" "kinds" "locate" "tree" "let*")}
        {Lisp-Entry "get-tab-stops" () 188 11 ("name-text" "kinds" "locate" "list")}
        {Lisp-Entry "on-selection-change" () 199 11 ("update-ok" "evt")}
        {Lisp-Entry "on-content-change" () 203 11 ("update-ok" "evt")}
        {Lisp-Entry "on-moniker-update" () 207 11 ("update-ok" "evt")}
        {Lisp-Entry "on-double-click" () 211 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-return-press" () 219 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-escape-press" () 227 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update-ok" () 237 11 ("name-text" "get-string-content" "empty-string?" "not" "directory" "get-moniker" "kind" "selected-kind" "get-property" "and" "ok" "locate" "set-enabled?")}
        {Lisp-Entry "validate-name" () 241 11 ("else" "in-manifest?" "and" "find-symbol" "symbol" "memv?" "numeric?" "char" "dynamic" "function" "every?" "alphabetic?" "eqv?" "or" "not" "first" "let" "cond" "jazz" "case" "parse" "format" "get-workbench" "find-source" "if" "validate-name" "unimplemented" "destination" "name" "kind")}
        {Lisp-Entry "Header-Color" () 272 14 ("blue:" "green:" "red:" "Color" "new")}
        {Lisp-Entry "draw" () 276 11 ("Header-Color" "White" "name:" "Color" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "update" "context" "dc")}}
      {Lisp-Entry "Name-Text-View" () 286 7 ("Plain-Text-View")
        {Lisp-Entry "get-context-menu" () 289 11 ("new-text-context-menu")}}}})
"Add-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "menu" "Add-Menu.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.menu.Add-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Add-Menu" () 45 7 ("Context-Menu")
        {Lisp-Entry "add-components" () 48 21 ("class:" "client:" "list" "properties:" "on-add" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "icon:" "Label-Item" "get-class-presentation" "localize" "format" "title" "get-class-image" "icon" "self" "parent:" "Separator-Item" "new" "null?" "if" "class" "for-each" "addable-classes" "classes" "let" "dynamic" "function" "with-update-locked" "client")}
        {Lisp-Entry "on-add" () 62 11 ("add-component-class" "class:" "class" "client:" "get-property" "client" "let" "evt")}}}})
"Adox-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Data-Source.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Data-Source" () 46 7 ("Data-Source")
        {Lisp-Entry "dsn" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "external-name" () 53 16 ("adox" "rest")}
        {Lisp-Entry "new-inventory" () 62 11 ("get-connection-string" "Adox-Inventory" "new" "rest" "connection")}
        {Lisp-Entry "new-connection" () 71 11 ("self" "ADO-Connection" "new")}
        {Lisp-Entry "get-connection-string" () 75 11 ("format" "dsn" "when")}
        {Lisp-Entry "get-class-presentation" () 86 16 ()}
        {Lisp-Entry "property-presentation" () 91 16 ("nextmethod" "else" "dsn" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 97 11 ("nextmethod" "else" "String-Row" "new" "dsn" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 103 11 ("password" "username" "dsn" "class-info")}}}})
"Adox-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Datatype.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "get-types" () 46 13 ()}
      {Lisp-Entry "Adox-Datatype" () 50 7 ("Datatype")}}})
"Adox-Inventory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Inventory.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Inventory" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Inventory" () 45 7 ("Inventory")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "put-ActiveConnection" "ADOX.Catalog" "cocreate" "handle" "set!" "nextmethod" "connection-string" "connection")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-tables" () 68 11 ("get-output" "0" "naturals" "self" "Adox-Inventory-Table" "put" "get-Type" "=" "unless" "get-Item" "table" "n" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "get-Count" "count" "let" "handle" "get-Tables" "tables" "with-closed")}
        {Lisp-Entry "get-table" () 80 11 ("get-Item" "self" "Adox-Inventory-Table" "new" "handle" "get-Tables" "tables" "with-closed" "name")}
        {Lisp-Entry "get-views" () 85 11 ("get-Item" "self" "Adox-Inventory-View" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "handle" "get-Views" "views" "with-closed")}
        {Lisp-Entry "get-procedures" () 91 11 ("get-Item" "self" "Adox-Inventory-Procedure" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "handle" "get-Procedures" "procedures" "with-closed")}}}})
"Adox-Inventory-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Inventory-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Inventory-Column" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Inventory-Column" () 45 7 ("Inventory-Column")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "index-column?" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 67 11 ("handle" "get-Name")}
        {Lisp-Entry "get-datatype" () 71 11 ("get-size" "get-type" "Adox-Datatype" "new-datatype")}
        {Lisp-Entry "get-type" () 75 11 ("2" "handle" "get-Type" "ADOX.DataTypeEnum" "value->name" "symbol->string" "subseq")}
        {Lisp-Entry "get-size" () 79 11 ("handle" "get-DefinedSize")}
        {Lisp-Entry "get-scale" () 83 11 ("handle" "get-NumericScale")}
        {Lisp-Entry "get-precision" () 87 11 ("handle" "get-Precision")}
        {Lisp-Entry "get-nullable?" () 91 11 ("ADOX.adColNullable" "handle" "get-Attributes" "mask-bit-set?")}
        {Lisp-Entry "get-fixed?" () 95 11 ("ADOX.adColFixed" "handle" "get-Attributes" "mask-bit-set?")}
        {Lisp-Entry "get-description" () 99 11 ()}}}})
"Adox-Inventory-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Inventory-Constraint.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Inventory-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Inventory-Constraint" () 45 7 ("Inventory-Constraint")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 67 11 ("handle" "get-Name")}}}})
"Adox-Inventory-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Inventory-Index.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Inventory-Index" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Inventory-Index" () 45 7 ("Inventory-Index")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 67 11 ("handle" "get-Name")}
        {Lisp-Entry "get-unique?" () 71 11 ("handle" "get-Unique")}
        {Lisp-Entry "get-required?" () 75 11 ("unspecified")}
        {Lisp-Entry "get-ignore-nulls?" () 79 11 ("handle" "get-IndexNulls")}
        {Lisp-Entry "get-primary?" () 83 11 ("handle" "get-PrimaryKey")}
        {Lisp-Entry "get-fields" () 87 11 ("get-Item" "true" "self" "inventory" "Adox-Inventory-Column" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "handle" "get-Columns" "fields" "with-closed")}}}})
"Adox-Inventory-Procedure"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Inventory-Procedure.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Inventory-Procedure" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Inventory-Procedure" () 45 7 ("Inventory-Procedure")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 67 11 ("handle" "get-Name")}
        {Lisp-Entry "get-text" () 71 11 ("get-text" "unimplemented")}}}})
"Adox-Inventory-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Inventory-Table.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Inventory-Table" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Inventory-Table" () 45 7 ("Inventory-Table")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 67 11 ("handle" "get-Name")}
        {Lisp-Entry "get-columns" () 71 11 ("get-Item" "false" "self" "inventory" "Adox-Inventory-Column" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "handle" "get-Columns" "columns" "with-closed")}
        {Lisp-Entry "get-keys" () 78 26 ("get-output" "0" "naturals" "put" "columns" "get-Item" "key" "n" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "get-Count" "count" "let" "handle" "get-Keys" "keys" "with-closed")}
        {Lisp-Entry "get-indexes" () 89 11 ("get-Item" "self" "inventory" "Adox-Inventory-Index" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "handle" "get-Indexes" "indexes" "with-closed")}
        {Lisp-Entry "get-triggers" () 95 11 ()}
        {Lisp-Entry "get-constraints" () 99 11 ()}}}})
"Adox-Inventory-Trigger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Inventory-Trigger.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Inventory-Trigger" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Inventory-Trigger" () 45 7 ("Inventory-Trigger")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 67 11 ("handle" "get-Name")}}}})
"Adox-Inventory-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "adox" "Adox-Inventory-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.adox.Adox-Inventory-View" () 37 9 ("jazz")
      {Lisp-Entry "Adox-Inventory-View" () 46 7 ("Inventory-View")
        {Lisp-Entry "handle" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 68 11 ("handle" "get-Name")}}}})
"Alias-Configuration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Alias-Configuration.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Alias-Configuration" () 37 9 ("jazz")
      {Lisp-Entry "Alias-Configuration" () 46 7 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "alias" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "directory" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "get-domain" () 63 16 ("nextmethod" "else" "field-name" "case" "property")}
        {Lisp-Entry "get-class-presentation" () 74 16 ()}
        {Lisp-Entry "property-presentation" () 79 16 ("nextmethod" "else" "directory" "alias" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" () 86 11 ("alias" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 90 11 ("alias")}
        {Lisp-Entry "set-presentation" () 94 11 ("string->symbol" ":alias" "self" "set-property" "presentation" "designer")}
        {Lisp-Entry "get-row-instance" () 98 11 ("nextmethod" "else" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 104 11 ("directory" "alias")}}}})
"Aliases-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Aliases-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Aliases-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Aliases-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 58 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 62 11 ("false")}
        {Lisp-Entry "can-move-component?" () 66 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 70 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 74 11 ("Alias-Configuration" "list")}
        {Lisp-Entry "get-addable-details" () 79 11 ("directory" "alias")}}}})
"Aligned-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Aligned-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.display.Aligned-Column" () 37 9 ("jazz")
      {Lisp-Entry "Aligned-Column" () 44 7 ("Display-Column")
        {Lisp-Entry "alignment" () 47 8 ()}
        {Lisp-Entry "max-data" () 48 8 ("0")}
        {Lisp-Entry "initialize" () 56 11 ("alignment~self" "set!" "nextmethod" "apply" "others" "left" "alignment" "bind-keywords" "rest" "displayer")}
        {Lisp-Entry "prepare-print" () 67 11 ("content" "set!" "max-data" ">" "when" "length" "let" "data" "dynamic" "function" "for-each" "nextmethod")}
        {Lisp-Entry "print-to" () 76 11 ("right" "border-after" "border" "format" "left" "alignment" "case" "length" "max-data" "-" "padding" "let" "printer" "previous-data" "previous-column" "data")}}}})
"Aligned-Column-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Aligned-Column-Preferences.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.display.Aligned-Column-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Aligned-Column-Preferences" () 44 7 ("Column-Preferences")
        {Lisp-Entry "alignment" () 47 12 ("generate" "accessors" "left")}
        {Lisp-Entry "column-class" () 55 11 ("Aligned-Column")}
        {Lisp-Entry "new-column" () 59 11 ("alignment" "alignment:" "minimum" "minimum:" "border-after" "border-after:" "border" "border:" "Aligned-Column" "new" "display")}}}})
"Alignment-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "designer" "Alignment-Editor.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.designer.Alignment-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Alignment-Editor" () 47 7 ("on-resize-both" "resize-both" "on-resize-height" "resize-height" "on-resize-width" "resize-width" "on-space-vertically" "space-vertically" "on-space-horizontally" "space-horizontally" "on-center-vertically" "center-vertically" "on-center-horizontally" "center-horizontally" "on-align-bottom" "align-bottom" "on-align-top" "align-top" "on-align-right" "align-right" "on-align-left" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" "tooltip-text:" "align-left" "name:" "View")
        {Lisp-Entry "client" () 50 12 ("set-client" "get-client")}
        {Lisp-Entry "flow-layout" () 53 8 ()}
        {Lisp-Entry "external-name" () 74 16 ("alignment-editor" "rest")}
        {Lisp-Entry "palette-class" () 83 16 ("Tool-Palette")}
        {Lisp-Entry "palette-title" () 87 16 ()}
        {Lisp-Entry "client-activate" () 91 11 ("get-client" "set-client" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "finish" () 102 11 ("layout-view" "0" "5" "4" "Rect" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "layout" () 108 11 ("get-height" "get-width" "children" "flow-layout" "layout")}
        {Lisp-Entry "on-align-left" () 112 11 ("align-left" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-align-top" () 119 11 ("align-top" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-align-right" () 126 11 ("align-right" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-align-bottom" () 133 11 ("align-bottom" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-center-horizontally" () 140 11 ("center-horizontally" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-center-vertically" () 147 11 ("center-vertically" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-space-horizontally" () 154 11 ("space-horizontally" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-space-vertically" () 161 11 ("space-vertically" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-resize-width" () 168 11 ("resize-width" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-resize-height" () 175 11 ("resize-height" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "on-resize-both" () 182 11 ("resize-both" "bell" "View-Editor" "is-not?" "if" "current-document" "editor" "let" "evt")}
        {Lisp-Entry "get-client" () 194 18 ("client")}
        {Lisp-Entry "set-client" () 198 18 ("client" "set!" "clt")}}}})
"Analyser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "analysis" "Analyser.fusion"} {Time 128360666680000000L}
    {Lisp-Entry "jedi.analysis.Analyser" () 37 9 ("jazz")
      {Lisp-Entry "Analyser" () 44 7 ("Object")
        {Lisp-Entry "source" () 47 8 ()}
        {Lisp-Entry "load-categories?" () 50 29 ("false")}
        {Lisp-Entry "load-all" () 54 23 ("autoload" "user-message" "category-loaded?" "not" "when" "properties" "source" "category-name" "dynamic" "function" "for-each-source")}
        {Lisp-Entry "process-category" () 63 11 ("code-walk2" "read" "eof-object?" "not" "while" "expr" "let" "File-Reader" "new" "reader" "with-closed" "get-manifest-source" "source" "set!" "walker" "name")}
        {Lisp-Entry "process-all" () 71 11 ("process-category" "autoload" "load-categories?" "class-of" "null?" "and" "when" "user-message" "properties" "source" "category-name" "dynamic" "function" "for-each-source" "define-hook" "symbol-hook" "form-hook" "category-hook" "new-walker" "walker" "let")}
        {Lisp-Entry "load-hook" () 82 29 ("entering?" "category-name" "param")}
        {Lisp-Entry "category-hook" () 86 29 ("properties" "interfaces" "ascendant" "packages" "category-name" "param")}
        {Lisp-Entry "form-hook" () 90 29 ("form" "param" "category")}
        {Lisp-Entry "toplevel-hook" () 94 29 ("name" "param")}
        {Lisp-Entry "symbol-hook" () 98 29 ("symbol" "param")}
        {Lisp-Entry "define-hook" () 102 29 ("entering?" "symbol" "param")}
        {Lisp-Entry "go" () 106 26 ("process-all")}}}})
"Anchor-Style"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Anchor-Style.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Anchor-Style" () 37 9 ("jazz")
      {Lisp-Entry "Anchor-Style" () 45 7 ("Text-Style")}
      {Lisp-Entry "Anchor-Style" () 51 7 ("initialize" "label" "highlight" "color" "font" "alignment" "Text-Style")}}})
"Application"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "application" "Application.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.application.Application" () 37 9 ("jazz")
      {Lisp-Entry "Application" () 66 7 ("Exit-Listener" "Save-Environment-Listener" "Event-Consumer" "History-Provider" "Context-Provider" "Process")
        {Lisp-Entry "toplevel" () 69 8 ()}
        {Lisp-Entry "stage" () 70 8 ()}
        {Lisp-Entry "menubar" () 71 8 ()}
        {Lisp-Entry "status-bar" () 72 8 ()}
        {Lisp-Entry "user-pathname" () 73 8 ()}
        {Lisp-Entry "user" () 74 8 ()}
        {Lisp-Entry "focus-listeners" () 75 8 ()}
        {Lisp-Entry "application-listeners" () 76 8 ("eq?" "new-hashtable")}
        {Lisp-Entry "selected-owner" () 77 8 ()}
        {Lisp-Entry "selected" () 78 8 ()}
        {Lisp-Entry "selected-listeners" () 79 8 ()}
        {Lisp-Entry "event-consumer" () 80 8 ("self")}
        {Lisp-Entry "history-manager" () 81 8 ("self" "History-Manager" "new")}
        {Lisp-Entry "repositories-preferences" () 82 8 ()}
        {Lisp-Entry "active?" () 83 8 ("false")}
        {Lisp-Entry "application-actions" () 84 8 ()}
        {Lisp-Entry "user-actions" () 85 8 ()}
        {Lisp-Entry "guest-actions" () 86 8 ()}
        {Lisp-Entry "focus-actions" () 87 8 ()}
        {Lisp-Entry "bindings" () 88 8 ()}
        {Lisp-Entry "bindings-designer" () 89 8 ()}
        {Lisp-Entry "accelerators-table" () 90 8 ()}
        {Lisp-Entry "accelerators-handle" () 91 8 ()}
        {Lisp-Entry "accelerators-dispatch" () 92 8 ()}
        {Lisp-Entry "accelerators-hook" () 93 8 ()}
        {Lisp-Entry "prepare-exit" () 96 11 ()}
        {Lisp-Entry "external-name" () 100 16 ("application" "rest")}
        {Lisp-Entry "get-toplevel" () 109 18 ("toplevel")}
        {Lisp-Entry "get-stage" () 113 18 ("stage")}
        {Lisp-Entry "get-menubar" () 117 18 ("menubar")}
        {Lisp-Entry "set-menubar" () 121 18 ("menubar" "set!" "bar")}
        {Lisp-Entry "get-status-bar" () 125 18 ("status-bar")}
        {Lisp-Entry "set-status-bar" () 129 18 ("status-bar" "set!" "status")}
        {Lisp-Entry "get-user" () 133 18 ("user")}
        {Lisp-Entry "Java-Classpath" () 143 14 ("Native" "File")}
        {Lisp-Entry "test-java" () 152 11 ("format" "message-box" "true" "java.lang.Class" "forName" "class" "java.lang.ClassLoader" "getSystemClassLoader" "loader" "let*" "c-test" "Java-Classpath" "classpath:" "setup-jvm")}
        {Lisp-Entry "prepare-environment" () 160 11 ("log-user" "use-user?" "when" "set-look" "list" "set-looks" "Windows-Look" "windows-look" "Flat-Look" "new" "flat-look" "let" "test-java" "setup-accelerators" "self" "set-application" "nextmethod" "rest")}
        {Lisp-Entry "start-environment" () 174 11 ("register-clipboard-formats" "setup-repositories" "initialize-toplevel" "initialize-messaging" "initialize-dde" "setup-bindings" "nextmethod" "rest")}
        {Lisp-Entry "finalize-environment" () 187 11 ("install-wallpaper" "stage" "when" "restored" "get-toplevel-state" "if" "toplevel" "get-root" "set-state" "false" "error?:" "get-preferences" "pref" "let" "splash-screen" ":arrow" "set-cursor" "nextmethod" "rest")}
        {Lisp-Entry "setup-user" () 197 11 ("user" "get-class-actions" "set-user-actions" "create-user" "use-user-class?" "use-user?" "and" "when" "rest")}
        {Lisp-Entry "finish-environment" () 203 11 ("remove-splash-screen" "reload-session" "err" "continue-handler:" "init" "dynamic" "function" "with-safe-execution" "user" "when" "self" "add-save-environment-listener" "nextmethod" "rest")}
        {Lisp-Entry "conclude-environment" () 217 11 ("err" "continue-handler:" "finalize" "dynamic" "function" "with-safe-execution" "user" "when" "true" "toplevel" "set-visible?" "update-windowing-actions" "nextmethod" "rest")}
        {Lisp-Entry "clipboard-prefix" () 235 26 ("process-version" "present" "process-name" "format")}
        {Lisp-Entry "register-clipboard-formats" () 241 29 ("register-jazz-clipboard-formats")}
        {Lisp-Entry "Clipboard-Stack" () 250 14 ()}
        {Lisp-Entry "Max-Stack" () 253 14 ()}
        {Lisp-Entry "get-clipboard-stack" () 257 18 ("Clipboard-Stack")}
        {Lisp-Entry "empty-clipboard-stack?" () 261 18 ("Clipboard-Stack" "null?")}
        {Lisp-Entry "add-clipboard" () 265 18 ("trim-clipboard" "get-clipboard" "cons" "Clipboard-Stack" "set!")}
        {Lisp-Entry "push-clipboard-list" () 270 18 ("trim-clipboard" "append" "Clipboard-Stack" "set!" "error" "Max-Stack" ">" "if" "length" "pushed" "let" "list")}
        {Lisp-Entry "trim-clipboard" () 278 11 ("1" "-" "tail" "set-cdr!" "Max-Stack" "Clipboard-Stack" "length" ">" "when")}
        {Lisp-Entry "pop-clipboard" () 283 18 ("set-clipboard" "cdr" "set!" "Clipboard-Stack" "car" "string" "let")}
        {Lisp-Entry "on-paste-from-stack" () 290 18 ("paste-clipboard" "pop-clipboard" "Clipboard-Stack" "null?" "bell" "Text-View" "is-not?" "if" "get-focus" "focus" "let" "evt")}
        {Lisp-Entry "on-pop-clipboard-stack" () 300 18 ("user-message" "pop-clipboard" "string" "let" "bell" "Clipboard-Stack" "null?" "if" "evt")}
        {Lisp-Entry "on-add-history" () 312 18 ("history-manager" "add-current" "evt")}
        {Lisp-Entry "on-backward-history" () 316 18 ("history-manager" "go-backward-history" "evt")}
        {Lisp-Entry "on-forward-history" () 320 18 ("history-manager" "go-forward-history" "evt")}
        {Lisp-Entry "add-history" () 324 18 ("history-manager" "add-history" "item")}
        {Lisp-Entry "current-history-item" () 328 11 ("current-history-item" "Document" "is?" "get-guest" "guest" "when" "current-frame" "frame" "let")}
        {Lisp-Entry "update-history-actions" () 336 18 ("forward-history" "backward-history" "application" "Action" "set-action-enabled?" "get-forward-history" "forward" "history-manager" "get-backward-history" "backward" "let")}
        {Lisp-Entry "get-recorder" () 348 26 ()}
        {Lisp-Entry "use-user?" () 357 29 ("true")}
        {Lisp-Entry "use-user-logging?" () 361 29 ("false")}
        {Lisp-Entry "use-user-class?" () 365 29 ("false")}
        {Lisp-Entry "log-user" () 369 11 ("setup-user-alias" "setup-user-file" "windows-user" "else" "login-user" "use-user-logging?" "standard-user" "cond" "user" "command-argument" "user-arg" "let*")}
        {Lisp-Entry "standard-user" () 378 11 ("format" "File" "else" "Users" "list" "Directory" "new" "use-user-class?" "not" "cond" "username")}
        {Lisp-Entry "windows-user" () 385 11 ("get-windows-user-name" "standard-user")}
        {Lisp-Entry "login-user" () 389 11 ("LOGINDONE" "exit" "signal" "Cancel-Signal" "catch" "use-user-class?" "use-user-class?:" "Login-Dialog" "get-modal" "Default-User" "either" "Default-Start?" "get-system-property" "command-argument" "or" "if" "LOGIN" "debug" "format" "Users" "list" "File" "new" "name" "let")}
        {Lisp-Entry "setup-user-file" () 405 11 ("user-pathname" "set!" "get-base" "get-parent" "else" "get-name" "setup-new-user" "use-user-class?" "cond" "exists?" "not" "if" "user")}
        {Lisp-Entry "setup-new-user" () 414 11 ("copy-user" "format" "new-file" "file" "else" "user-pathname" "set!" "use-user-class?" "not" "cond" "copy-user-settings" "create-directories" "user" "cons" "list" "associations" "Template-Expander" "new" "expander" "let" "name" "directory")}
        {Lisp-Entry "copy-user-settings" () 430 11 ("true" ":touch-files?" "copy-template" "dst" "src" "dynamic" "function" ":copier" "new-directory" "copy-directory" "Home" "Directory" "settings" "let" "associations" "expander" "directory")}
        {Lisp-Entry "copy-user" () 438 11 ("copy-template" "Home" "File" "template" "let" "associations" "expander" "file")}
        {Lisp-Entry "copy-template" () 443 11 ("expand" "File-Printer" "new" "printer" "with-closed" "associations" "expander" "destination" "template")}
        {Lisp-Entry "setup-user-alias" () 448 11 ("get-parent" "else" "user-pathname" "get-list" "use-user-class?" "not" "cond" "User" "set-alias" "user")}
        {Lisp-Entry "create-user" () 456 11 ("User" "err" "continue-handler:" "format" "list" "continue-text:" "Guillaume" "else" "case" "with-safe-execution" "title:" "load-source" "new" "user" "set!" "with-continue" "dynamic" "function" "with-execution-context" "user-pathname" "get-base" "string->symbol" "user-name" "let")}
        {Lisp-Entry "preserve-environment" () 483 11 ("call-save-environment-listeners" "nextmethod")}
        {Lisp-Entry "close-environment" () 488 11 ("nextmethod" "save-page-setup" "save-bindings" "uninitialize-dde" "close-all" "confirm-all-close" "call-exit-listeners")}
        {Lisp-Entry "confirm-all-close" () 501 18 ("get-children" "confirm-close" "unless" "for-each" "when" "dependent-document?" "get-controller" "controller" "Document" "get-guest" "guest" "View-Host" "is?" "and" "frame" "dynamic" "function" "frame-dependent-document?" "get-stage" "stage" "let")}
        {Lisp-Entry "close-all" () 517 11 ("close-children" "when" "get-stage" "stage" "let")}
        {Lisp-Entry "focus-exit" () 523 11 ("validate-focus")}
        {Lisp-Entry "Splash-Screen" () 532 14 ()}
        {Lisp-Entry "Splash-End" () 535 14 ()}
        {Lisp-Entry "splash-screen" () 539 29 ()}
        {Lisp-Entry "show-splash-screen" () 543 11 ("clock" "+" "essay" "Splash-End" "show-splash" "Splash-Screen" "set!" "duration" "duration:")}
        {Lisp-Entry "remove-splash-screen" () 548 11 ("remove-splash" "-" "sleep" ">" "Splash-End" "and" "clock" "time" "let" "Splash-Screen" "when")}
        {Lisp-Entry "show-splash" () 556 29 ()}
        {Lisp-Entry "remove-splash" () 560 29 ("splash-screen")}
        {Lisp-Entry "on-about" () 569 18 ("show-about" "evt")}
        {Lisp-Entry "show-about" () 573 26 ("title:" "if" "when" "format" "Dark-Blue" "name:" "Color" "color:" "monospace?:" "underline?:" "italic?:" "bold?:" "point-size:" "font-name:" "Font" "font:" "list" "append!" "message-box" "process-email" "email" "process-version" "present" "version" "process-licensee" "licensee" "process-copyright" "copyright" "process-owner" "owner" "process-name" "name" "let")}
        {Lisp-Entry "exit-listeners" () 605 8 ()}
        {Lisp-Entry "add-exit-listener" () 608 18 ("cons" "exit-listeners" "set!" "listener")}
        {Lisp-Entry "remove-exit-listener" () 612 18 ("remove!" "exit-listeners" "set!" "listener")}
        {Lisp-Entry "call-exit-listeners" () 616 18 ("exit-listeners" "prepare-exit" "listener" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-active?" () 627 18 ("active?")}
        {Lisp-Entry "deactivate" () 631 26 ("get-root" "invalidate-caption" "false" "active?" "set!" "toplevel" "close-popups")}
        {Lisp-Entry "activate" () 637 26 ("verify-reloads" "function" "set-delayed-mouse-action" "mouse-clicked?" "if" "get-root" "invalidate-caption" "toplevel" "when" "true" "active?" "set!")}
        {Lisp-Entry "verify-reloads" () 649 18 ("true" "include-invisibles?:" "get-windows" "get-controller" "verify-reload" "Document" "get-guest" "guest" "let" "Host-Frame" "is?" "window" "dynamic" "function" "for-each" "stage" "when")}
        {Lisp-Entry "verify-reload" () 659 18 ("get-controller" "verify-reload" "get-guest" "document" "when" "find-document" "frame" "let" "moniker")}
        {Lisp-Entry "save-environment-listeners" () 671 8 ()}
        {Lisp-Entry "add-save-environment-listener" () 674 18 ("cons" "save-environment-listeners" "set!" "listener")}
        {Lisp-Entry "remove-save-environment-listener" () 678 18 ("remove!" "save-environment-listeners" "set!" "listener")}
        {Lisp-Entry "call-save-environment-listeners" () 682 18 ("save-environment-listeners" "save-environment" "listener" "dynamic" "function" "for-each")}
        {Lisp-Entry "reload-session" () 693 18 ("reload-opened-windows")}
        {Lisp-Entry "reload-opened-windows" () 697 26 ()}
        {Lisp-Entry "reload-component" () 701 26 ("properties" "class")}
        {Lisp-Entry "save-environment" () 705 11 ("save-all-guest" "save-application")}
        {Lisp-Entry "save-application" () 710 11 ("get-current-directory" "current-directory:" "branch:" "context" "active-context:" "preferences-designer" "set-property" "preferences-root" "when")}
        {Lisp-Entry "save-all-guest" () 717 11 ("get-children" "session" "session-designer" "save-guest" "get-guest" "guest" "Host-Frame" "is?" "frame" "dynamic" "function" "for-each" "when" "get-stage" "stage" "let")}
        {Lisp-Entry "display-aliases?" () 734 26 ("true")}
        {Lisp-Entry "display-protocol?" () 738 26 ("true")}
        {Lisp-Entry "application-anchors" () 742 26 ("get-products-hashtable" "not" "if" "get-workbench" "workbench" "let" "get-aliases" "gather-keys" "append!" "list" "Directory" "new" "alias" "dynamic" "function" "map")}
        {Lisp-Entry "add-focus-listener" () 757 18 ("add-listener" "focus-listeners" "set!" "listener")}
        {Lisp-Entry "remove-focus-listener" () 761 18 ("remove-listener" "focus-listeners" "set!" "listener")}
        {Lisp-Entry "process-focus-change" () 765 18 ("update-focus-actions" "invoke" "listener" "dynamic" "function" "for-each" "self" ":focus-change" "Focus-Event" "new" "evt" "let" "focus-listeners" "when" "new-focus" "old-focus")}
        {Lisp-Entry "update-focus-actions" () 774 18 ("focus-update-actions" "can-select-all?" "select-all" "can-delete?" "delete" "can-paste-properties?" "paste-properties" "pop-clipboard-stack" "Clipboard-Stack" "paste-from-stack" "application" "can-paste?" "paste" "can-copy?" "copy" "can-cut?" "cut" "can-redo?" "redo" "can-undo?" "undo" "view" "Action" "set-action-enabled?" "preferences-root" "when" "View" "is?" "and" "view?" "get-focus" "focus" "let*")}
        {Lisp-Entry "add-selected-listener" () 797 18 ("add-listener" "selected-listeners" "set!" "listener")}
        {Lisp-Entry "remove-selected-listener" () 801 18 ("remove-listener" "selected-listeners" "set!" "listener")}
        {Lisp-Entry "get-selected" () 805 18 ("selected")}
        {Lisp-Entry "get-selected-owner" () 809 18 ("selected-owner")}
        {Lisp-Entry "set-selected" () 813 18 ("process-selected-change" "selected" "/=" "or" "when" "selected-owner" "neq?" "new-owner?" "let" "false" "force?" "force?:" "sel" "owner")}
        {Lisp-Entry "close-selected" () 819 18 ("false" "selected" "process-selected-change" "set!" "selected-owner" "eq?" "when" "owner")}
        {Lisp-Entry "process-selected-change" () 825 11 ("invoke" "listener" "dynamic" "function" "for-each" "force?:" "self" ":selected-change" "Selected-Event" "new" "evt" "let" "selected-listeners" "when" "selected" "selected-owner" "set!" "force?" "new-selected" "old-selected" "owner")}
        {Lisp-Entry "add-application-listener" () 840 18 ("get-application-listeners" "add-listener" "set-application-listeners" "listener" "category")}
        {Lisp-Entry "remove-application-listener" () 844 18 ("get-application-listeners" "remove-listener" "set-application-listeners" "listener" "category")}
        {Lisp-Entry "process-application-event" () 848 18 ("self" "invoke" "listener" "dynamic" "function" "for-each" "Application-Event" "new" "apply" "evt" "get-application-listeners" "listeners" "let" "properties" "sender" "kind" "category")}
        {Lisp-Entry "get-application-listeners" () 856 11 ("application-listeners" "hash-ref" "category")}
        {Lisp-Entry "set-application-listeners" () 860 11 ("application-listeners" "hash-set!" "listeners" "category")}
        {Lisp-Entry "get-repositories-preferences" () 869 18 ("repositories-preferences")}
        {Lisp-Entry "setup-repositories" () 873 11 ("load-repositories-preferences")}
        {Lisp-Entry "repositories-file" () 877 11 ("User" "File")}
        {Lisp-Entry "load-repositories-preferences" () 881 11 ("repositories-preferences" "set!" "install-context" "read-from-file" "instantiate" "preferences" "exists?" "when" "repositories-file" "file" "let" "dynamic" "function" "with-safe-execution")}
        {Lisp-Entry "get-repository-classes" () 891 26 ()}
        {Lisp-Entry "base-frame-class" () 900 26 ()}
        {Lisp-Entry "default-frame-class" () 904 26 ()}
        {Lisp-Entry "file-frame-class" () 908 26 ("error" "extension-frame-class" "either" "get-extension" "extension" "let" "file")}
        {Lisp-Entry "extension-frame-class" () 914 26 ("unknown-extension-frame-class" "known-extension-frame-class" "user-extension-frame-class" "either" "ext")}
        {Lisp-Entry "user-extension-frame-class" () 920 11 ("extension-frame-class" "user" "when" "ext")}
        {Lisp-Entry "known-extension-frame-class" () 925 26 ("ext")}
        {Lisp-Entry "unknown-extension-frame-class" () 929 26 ()}
        {Lisp-Entry "frame-class" () 933 26 ("file-frame-class" "default-frame-class" "not" "if" "file" "file:")}
        {Lisp-Entry "get-default-frame-class" () 939 11 ("default-frame-class" "autoload" "if" "get-frame-model" "model" "get-workspace-preferences" "pref" "let*")}
        {Lisp-Entry "initialize-messaging" () 953 11 ("setup-messaging")}
        {Lisp-Entry "initialize-toplevel" () 963 11 ("initialize-actions" "stage-window" "stage" "ensure-displayed" "new-toplevel" "toplevel" "set!")}
        {Lisp-Entry "new-toplevel" () 970 26 ("Toplevel" "new")}
        {Lisp-Entry "initialize-actions" () 974 11 ("self" "get-class-actions" "set-application-actions")}
        {Lisp-Entry "setup-accelerators" () 983 11 ("=-hash" "=" "new-hashtable" "accelerators-dispatch" "get-handle" "accelerators-handle" "all-accelerators-table" "accelerators-table" "set!")}
        {Lisp-Entry "register-actions-shortcuts" () 989 11 ("hash-add" "for-each-reversed" "get-children" "hash-remove!" "get-shortcut" "shortcut" "let" "action-item" "actions" "dynamic" "function" "for-each" "accelerators-dispatch" "when" "new-actions" "old-actions")}
        {Lisp-Entry "update-accelerator" () 1007 18 ("hash-add" "accelerators-dispatch" "hash-remove!" "when" "new-shortcut" "old-shortcut" "action-item")}
        {Lisp-Entry "dispatch-shortcut" () 1014 18 ("true" "self" "car" "invoke" "not-null?" "when" "get-bound-actions" "action-items" "let" "accelerators-hook" "if" "shortcut")}
        {Lisp-Entry "get-bound-actions" () 1023 18 ("accelerators-dispatch" "hash-ref" "shortcut")}
        {Lisp-Entry "get-accelerators-hook" () 1027 18 ("accelerators-hook")}
        {Lisp-Entry "set-accelerators-hook" () 1031 18 ("accelerators-hook" "set!" "value")}
        {Lisp-Entry "setup-bindings" () 1040 11 ("err" "continue-handler:" "set-active-branch" "Branch" "is?" "when" "user" "locate-component" "branch" "let" "reference:" "get-form" "form:" "Designer" "new" "bindings-designer" "load-bindings" "bindings" "set!" "dynamic" "function" "with-safe-execution")}
        {Lisp-Entry "load-bindings" () 1053 29 ("read-from-file" "instantiate" "exists?" "when" "User" "File" "file" "let")}
        {Lisp-Entry "save-bindings" () 1059 11 ("save" "get-modified?" "bindings-designer" "and" "when")}
        {Lisp-Entry "get-bindings" () 1064 18 ("bindings")}
        {Lisp-Entry "get-bindings-designer" () 1068 18 ("bindings-designer")}
        {Lisp-Entry "set-application-actions" () 1077 18 ("set!" "application-actions" "register-actions-shortcuts" "actions-list")}
        {Lisp-Entry "set-user-actions" () 1082 18 ("set!" "user-actions" "register-actions-shortcuts" "actions-list")}
        {Lisp-Entry "set-guest-actions" () 1087 18 ("set!" "guest-actions" "register-actions-shortcuts" "actions-list")}
        {Lisp-Entry "set-focus-actions" () 1092 18 ("set!" "focus-actions" "register-actions-shortcuts" "actions-list")}
        {Lisp-Entry "get-menubar-class" () 1102 18 ("cdr" "autoload" ":menubar" "assq" "model-info" "get-toolbar-classes" "classes" "let*" "when" "workspaces" "get-preferences" "pref" "let")}
        {Lisp-Entry "find-menubar" () 1111 18 ("toplevel" "get-workspace-splitter" "find-palette" "when" "get-menubar-class" "menubar-class" "let")}
        {Lisp-Entry "update-menubar-buttons" () 1117 18 ("update-buttons" "menubar" "when")}
        {Lisp-Entry "Undisplayed-Message" () 1127 14 ()}
        {Lisp-Entry "set-status-message" () 1131 18 ("->string" "else" "Locales" "is?" "cond" "set-title" "Undisplayed-Message" "set!" "not" "if" "get-message-view" "message" "let" "msg")}
        {Lisp-Entry "get-message-view" () 1141 18 ("message" "find-component" "status-bar" "when")}
        {Lisp-Entry "show-undisplayed-message" () 1146 18 ("set!" "set-status-message" "Undisplayed-Message" "when")}
        {Lisp-Entry "process-messages" () 1157 11 ("DispatchMessage" "TranslateMessage" "accelerators-handle" "TranslateAccelerator" "=" "when" "0" "NULL" "GetMessage" "while" "get-toplevel" "get-handle" "hwnd" "MSG-make" "msg" "let")}
        {Lisp-Entry "process-one-message" () 1167 11 ("DispatchMessage" "TranslateMessage" "accelerators-handle" "TranslateAccelerator" "=" "0" "GetMessage" "when" "get-handle" "hwnd" "let" "MSG-make" "msg" "with" "get-toplevel" "window")}
        {Lisp-Entry "class-actions" () 1181 11 ("nextmethod" "application" "find-actions" "cons")}
        {Lisp-Entry "process-alias" () 1191 11 ("nextmethod" "else" "get-banner-icons-cache" ":banner-icons" "get-invite-icons-cache" ":invite-icons" "get-large-icons-cache" ":large-icons" "get-small-icons-cache" ":small-icons" "get-icons-cache" ":icons" "get-user" ":user" "get-focus" ":focus" "focus-guest" ":focus-guest" "current-guest" ":guest" "current-document" ":document" "current-frame" ":frame" "get-root" ":wallpaper" "get-stage" ":stage" "get-toplevel" ":toplevel" "self" ":application" "case" "name")}
        {Lisp-Entry "text-menu" () 1216 26 ("new-text-context-menu" "text")}
        {Lisp-Entry "show-box" () 1225 11 ("ui-message-box" "system-message" "apply" "get-application" "get-bindings" "not" "if" "rest" "text")}
        {Lisp-Entry "get-output-log" () 1236 26 ()}
        {Lisp-Entry "All-Results" () 1245 14 ()}
        {Lisp-Entry "Active-Results" () 1248 14 ()}
        {Lisp-Entry "navigable-results" () 1252 26 ("navigable-results" "must-implement")}
        {Lisp-Entry "get-navigable-results" () 1256 11 ("navigable-results" "set!" "All-Results" "unless")}
        {Lisp-Entry "get-active-results" () 1262 18 ("get-navigable-results" "car" "set!" "Active-Results" "unless")}
        {Lisp-Entry "set-active-results" () 1268 18 ("Active-Results" "set!" "results")}
        {Lisp-Entry "on-select-workspace" () 1277 18 ("workspace:" "get-property" "select-workspace" "evt")}
        {Lisp-Entry "on-next-workspace" () 1281 18 ("select-next-workspace" "evt")}
        {Lisp-Entry "on-previous-workspace" () 1285 18 ("select-previous-workspace" "evt")}
        {Lisp-Entry "on-workspace" () 1289 18 ("true" "set-selected?" ":group" "Radio-Tool" "class:" "unselect-elements" "not" "if" "locate-component" "radio" "get-name" "name" "workspace:" "get-property" "workspace" "let*" "when" "find-toolbar" "toolbar" "let" "activate" "get-kind" "case" "evt")}
        {Lisp-Entry "select-workspace" () 1302 18 ("workspaces" "list" "get-preferences" "apply-preferences" "name")}
        {Lisp-Entry "select-next-workspace" () 1306 18 ("apply-preferences" "eq?" "unless" "length" "1" "+" "modulo" "element" "next" "position" "return:" "find" "rank" "get-preferences" "get-children" "Workspace-Preferences" "collect-type" "workspaces" "get-workspace-preferences" "current" "let*")}
        {Lisp-Entry "select-previous-workspace" () 1315 21 ("apply-preferences" "eq?" "unless" "element" "previous" "1" "length" "-" "0" "=" "if" "previous-rank" "position" "return:" "find" "rank" "get-preferences" "get-children" "Workspace-Preferences" "collect-type" "workspaces" "get-workspace-preferences" "current" "let*")}
        {Lisp-Entry "workspace-installed" () 1325 26 ()}
        {Lisp-Entry "on-zoom-horizontally" () 1329 18 ("true" "set!" "unzoom" "zoom" "workspace-zoomable?" "split" "get-state" "=" "when" "vert" "get-orientation" "eq?" "if" "window" "splitter" "get-stage-border" "for-each-splitter" "return" "call/ec" "false" "started?" "let" "dynamic" "function" "with-locked-update" "evt")}
        {Lisp-Entry "on-zoom-vertically" () 1348 18 ("true" "set!" "unzoom" "zoom" "split" "get-state" "=" "when" "horz" "get-orientation" "eq?" "if" "window" "splitter" "for-each-splitter" "return" "call/ec" "get-stage-border" "border" "false" "started?" "let" "dynamic" "function" "with-locked-update" "evt")}
        {Lisp-Entry "on-maximize/restore" () 1368 18 ("maximize" "restore" "get-maximized?" "if" "get-stage" "stage" "let" "evt")}
        {Lisp-Entry "on-full-screen" () 1375 18 ("full-screen-stage" "selected-workspace" "set-fullscreen?" "get-toplevel" "get-fullscreen?" "fullscreen?" "true" ":fullscreen-warned?" "preferences-designer" "set-property" "message-box" "get-fullscreen-warned?" "not" "when" "get-preferences" "pref" "let" "evt")}
        {Lisp-Entry "full-screen-stage" () 1385 18 ("get-stage-border" "full-screen" "fullscreen?")}
        {Lisp-Entry "toggle-full-screen" () 1389 18 ("full-screen" "get-toplevel" "get-fullscreen?" "not" "fullscreen?" "let" "window")}
        {Lisp-Entry "full-screen" () 1394 18 ("unzoom" "zoom" "if" "set-full?" "splitter" "for-each-splitter" "set-fullscreen?" "dynamic" "function" "with-locked-update" "get-fullscreen?" "neq?" "when" "get-stage" "stage" "get-toplevel" "toplevel" "let" "fullscreen?" "window")}
        {Lisp-Entry "get-toolbar-class" () 1415 18 ("cdr" "autoload" ":toolbar" "assq" "model-info" "get-toolbar-classes" "classes" "let*" "when" "workspaces" "get-preferences" "pref" "let")}
        {Lisp-Entry "find-toolbar" () 1424 18 ("toplevel" "get-workspace-splitter" "find-palette" "when" "get-toolbar-class" "toolbar-class" "let")}
        {Lisp-Entry "get-context-text" () 1435 11 ()}
        {Lisp-Entry "get-text-class" () 1444 26 ("Plain-Text-View")}
        {Lisp-Entry "get-explorer-class" () 1448 26 ("Explorer-View" "get-explorer-class" "unimplemented")}
        {Lisp-Entry "Icons-Cache" () 1459 14 ()}
        {Lisp-Entry "Small-Icons-Cache" () 1462 14 ()}
        {Lisp-Entry "Large-Icons-Cache" () 1465 14 ()}
        {Lisp-Entry "Invite-Icons-Cache" () 1468 14 ()}
        {Lisp-Entry "Banner-Icons-Cache" () 1471 14 ()}
        {Lisp-Entry "get-icons-cache" () 1475 18 ("height:" "width:" "Portfolio" "new" "set!" "Icons-Cache" "unless")}
        {Lisp-Entry "get-small-icons-cache" () 1481 18 ("height:" "width:" "Portfolio" "new" "set!" "Small-Icons-Cache" "unless")}
        {Lisp-Entry "get-large-icons-cache" () 1487 18 ("height:" "width:" "Portfolio" "new" "set!" "Large-Icons-Cache" "unless")}
        {Lisp-Entry "get-invite-icons-cache" () 1493 18 ("height:" "width:" "Portfolio" "new" "set!" "Invite-Icons-Cache" "unless")}
        {Lisp-Entry "get-banner-icons-cache" () 1499 18 ("height:" "width:" "Portfolio" "new" "set!" "Banner-Icons-Cache" "unless")}
        {Lisp-Entry "get-cataloguer" () 1510 26 ()}
        {Lisp-Entry "get-catalog-context" () 1514 26 ()}
        {Lisp-Entry "display-boot-time" () 1523 11 ("clocks/second" "clock" "-" "/" "user-message" "launch-time")}
        {Lisp-Entry "user-feedback" () 1529 11 ("message")}
        {Lisp-Entry "get-event-consumer" () 1538 11 ("event-consumer")}
        {Lisp-Entry "set-event-consumer" () 1542 11 ("event-consumer" "set!" "consumer")}
        {Lisp-Entry "deliver-event" () 1546 11 ("event" "proc" "target" "handler")}
        {Lisp-Entry "record-event?" () 1550 26 ("true" "event")}
        {Lisp-Entry "fresh-prompt" () 1559 18 ("ensure-displayed" "fresh-prompt" "when" "get-console-text" "either" "let" "false" "force?" "force?:" "text" "text:")}
        {Lisp-Entry "on-console" () 1566 18 ("true" "force?:" "fresh-prompt" "when" "show-console" "Console-Text-View" "get-focus" "is?" "had-focus?" "let" "evt")}
        {Lisp-Entry "on-debugger" () 1573 18 ("true" "force?:" "get-debugger-console-text" "text:" "fresh-prompt" "when" "Debugger-Console-Manager" "class:" "show-console" "Debugger-Console-Text-View" "get-focus" "is?" "had-focus?" "let" "evt")}
        {Lisp-Entry "on-dialect-console" () 1581 18 ("true" "force?:" "get-dialect-console-text" "text:" "fresh-prompt" "when" "Dialect-Console-Manager" "class:" "show-console" "Dialect-Console-Text-View" "get-focus" "is?" "had-focus?" "let" "evt")}
        {Lisp-Entry "on-sql-console" () 1588 18 ("true" "force?:" "get-sql-console-text" "text:" "fresh-prompt" "when" "sql" "workspace:" "SQL-Console-Manager" "class:" "show-console" "SQL-Console-Text-View" "get-focus" "is?" "had-focus?" "let" "on-sql-console" "unimplemented" "evt")}
        {Lisp-Entry "show-console" () 1597 18 ("get-text" "acquire-focus" "focus?" "and" "when" "workspace" "workspace:" "select-palette" "console" "let" "Jazz-Console-Manager" "class" "class:")}
        {Lisp-Entry "on-sql-connections" () 1605 11 ("true" "focus?:" "sql" "workspace:" "SQL-Connections-Manager" "select-palette" "on-sql-connections" "unimplemented" "evt")}
        {Lisp-Entry "on-sql-inventory" () 1611 11 ("true" "focus?:" "sql" "workspace:" "Inventory-Browser" "select-palette" "on-sql-inventory" "unimplemented" "evt")}
        {Lisp-Entry "on-sql-tree-output" () 1617 11 ("true" "focus?:" "sql" "SQL-Tree-Output" "select-palette" "on-sql-tree-output" "unimplemented" "evt")}
        {Lisp-Entry "log-error" () 1629 16 ("log-generic-error" "else" "log-walk-error" "Walk-Error" "log-read-error" "Read-Error" "typecase" "output" "error")}
        {Lisp-Entry "edit-error" () 1637 16 ("edit-generic-error" "else" "edit-walk-error" "Walk-Error" "edit-read-error" "Read-Error" "typecase" "error")}
        {Lisp-Entry "edit-error-child" () 1645 16 ("edit-generic-error-child" "else" "edit-walk-error-child" "Walk-Error" "edit-read-error-child" "Read-Error" "typecase" "info" "error")}
        {Lisp-Entry "log-generic-error" () 1653 16 ("user-data:" "Bitmap-Resource" "image:" "get-message" "log-line" "output" "error")}
        {Lisp-Entry "edit-generic-error" () 1658 16 ("bell" "error")}
        {Lisp-Entry "edit-generic-error-child" () 1663 16 ("bell" "info" "error")}
        {Lisp-Entry "report-read-error" () 1673 11 ("stop-debugging" "edit-read-error" "=" "when" "no:" "yes:" "title:" "type:" "message-box" "code" "no" "yes" "present-message" "message" "let*" "exception")}
        {Lisp-Entry "present-read-error" () 1688 16 (":hyperlink" ":bulleted" "edit" "close-modal-dialog" "function" "action" "let" "list" "get-message" "message" "get-base" "string?" "if" "format" "header" "get-source" "source" "let*" "active-content?" "prefix?" "error")}
        {Lisp-Entry "log-read-error" () 1702 16 ("user-data:" "Bitmap-Resource" "image:" "get-message" "log-line" "output" "error")}
        {Lisp-Entry "edit-read-error" () 1707 16 ("get-application" "edit-document" "Range" "new" "selection:" "message-box" "string?" "if" "get-end" "end" "get-start" "start" "get-source" "source" "let" "error")}
        {Lisp-Entry "edit-read-error-child" () 1717 16 ("edit-generic-error-child" "info" "error")}
        {Lisp-Entry "report-walk-error" () 1727 11 ("stop-debugging" "highlight-walk-problems" "=" "when" "no:" "yes:" "title:" "type:" "message-box" "code" "no" "yes" "present-message" "message" "let*" "exception")}
        {Lisp-Entry "present-walk-error" () 1742 16 (":hyperlink" "if" ":bulleted" "list" "edit-child" "close-modal-dialog" "action" "walk-problem-message" "message" "let" "problem" "dynamic" "function" "map" "cons" "get-category-name" "format-plural" "format" "header" "length" "count" "get-problems" "problems" "let*" "active-content?" "prefix?" "error")}
        {Lisp-Entry "log-walk-error" () 1762 16 ("get-problems" "cons" "father:" "format" "walk-problem-declarations" "declarations" "walk-problem-message" "message" "problem" "dynamic" "function" "for-each" "user-data:" "Bitmap-Resource" "image:" "expanded" "state:" "get-message" "log-line" "row" "let" "output" "error")}
        {Lisp-Entry "edit-walk-error" () 1772 16 ("edit-generic-error" "error")}
        {Lisp-Entry "edit-walk-error-child" () 1777 16 ("acquire-focus" "true" "set-visible?" "bring-to-front" "set-selection" "get-guest" "range" "text" "frame" "receive" "when" "edit-walk-problem" "location" "user-message" "walk-problem-message" "message" "let" "problem" "error")}
        {Lisp-Entry "edit-walk-problem" () 1791 16 ("Jazz-Code-Location" "new" "find-location" "closure-function" "object-location" "location" "closure?" "definition-value" "value" "definition?" "and" "when" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "walk-problem-declarations" "declarations" "let" "problem")}
        {Lisp-Entry "highlight-walk-problems" () 1803 11 ("0" "Cell" "new" "ensure-cell-displayed" "acquire-focus" "true" "set-visible?" "bring-to-front" "get-end" "apply-style" "Walk-Fatal" "fatal" "Walk-Warning" "warning" "case" "style" "set!" "" "not" "or" "get-start" "get-row" "row" "get-guest" "range" "text" "frame" "receive" "when" "edit-walk-problem" "location" "walk-problem-message" "message" "Interpreter" "walk-problem-severity" "severity" "problem" "dynamic" "function" "for-each" "first-row" "first-text" "get-problems" "problems" "let" "exception")}
        {Lisp-Entry "exception-reported" () 1835 11 ("cleanup-mouse-processing" "Exception" "catch")}
        {Lisp-Entry "present-execution-context" () 1841 11 ("prefix?:" "type:" "Exception-Presenter" "new" "present" "prefix?" "type" "exception")}
        {Lisp-Entry "get-search-manager" () 1850 26 ()}
        {Lisp-Entry "get-search-results" () 1854 26 ("Search-Results" "singleton-docked" "get-guest")}
        {Lisp-Entry "active-search" () 1858 18 ("get-guest" "get-search" "when" "get-search-manager" "manager" "let")}
        {Lisp-Entry "update-search-actions" () 1865 18 ("replace-all-selected" "replace-all" "replace&find-forward" "replace" "find-backward" "find-forward" ">" "pop-results" "edit-current" "edit-previous" "1" ">=" "edit-next" "application" "Action" "set-action-enabled?" "in-modal?" "get-results-stack" "results-stack-count" "get-tree" "get-visible-count" "results-count" "get-search-results" "results" "length" "count" "get-windows" "not" "if" "frames" "get-stage" "stage" "let*")}
        {Lisp-Entry "on-find" () 1890 18 ("active-window" "next-tab" "search" "function" "update-search" "evt")}
        {Lisp-Entry "on-find-in-files" () 1894 18 ("jazz-files" "next-radio" "search" "function" "update-search" "evt")}
        {Lisp-Entry "update-search" () 1898 11 ("select-search" "get-searches" "list" "set-search-targets" "first" "equal?" "not-null?" "or" "unless" "get-search-targets" "targets" "dynamic" "function" "for-each" "text" "bring-search-with-domain" "get-visible?" "get-window-focus" "eq?" "end-edition" "get-targets-tree" "tree" "let" "when" "get-search" "search" "get-guest" "manager" "get-search-manager" "palette" "get-selected-string" "Text-View" "not" "and" "if" "string" "Tree-Embedded-Search-Text-View" "is?" "internal?" "get-focus" "focus" "let*" "domain" "proc")}
        {Lisp-Entry "end-search-edition" () 1922 18 ("end-edition" "get-targets-tree" "tree" "get-search" "search" "get-guest" "manager" "get-search-manager" "palette" "let*")}
        {Lisp-Entry "bring-search-with-domain" () 1930 11 ("true" "set-visible?" "bring-to-front" "set-search-domain" "get-search" "search" "let" "locate" "set-selection-name" "domain" "tab" "manager" "palette")}
        {Lisp-Entry "on-edit-next" () 1938 18 ("get-active-results" "edit-next" "evt")}
        {Lisp-Entry "on-edit-previous" () 1942 18 ("get-active-results" "edit-previous" "evt")}
        {Lisp-Entry "on-edit-current" () 1946 18 ("get-active-results" "edit-current" "evt")}
        {Lisp-Entry "on-pop-results" () 1950 18 ("get-search-results" "clear-results" "evt")}
        {Lisp-Entry "on-find-forward" () 1954 18 ("on-find-forward" "bell" "get-find-targets" "stage" "first-child" "get-guest" "get-text-view" "select-next" "unless" "not" "if" "active-search" "search" "let" "evt")}
        {Lisp-Entry "on-find-backward" () 1962 18 ("on-find-backward" "bell" "get-find-targets" "stage" "first-child" "get-guest" "get-text-view" "select-previous" "unless" "not" "if" "active-search" "search" "let" "evt")}
        {Lisp-Entry "on-replace" () 1970 18 ("on-replace" "bell" "not" "if" "active-search" "search" "let" "evt")}
        {Lisp-Entry "on-replace&find-forward" () 1977 18 ("on-replace&find-forward" "bell" "not" "if" "active-search" "search" "let" "evt")}
        {Lisp-Entry "on-replace-all" () 1984 18 ("on-replace-all" "bell" "not" "if" "active-search" "search" "let" "evt")}
        {Lisp-Entry "on-replace-all-selected" () 1991 18 ("on-replace-all-selected" "bell" "not" "if" "active-search" "search" "let" "evt")}
        {Lisp-Entry "on-quick-find" () 1998 18 ("acquire-focus" "focus-document" "Document" "get-guest" "guest" "bell" "Host-Frame" "is-not?" "stage" "first-child" "frame" "let" "get-focus" "=" "if" "get-text" "text" "get-quick-find" "quick-find" "let*" "evt")}
        {Lisp-Entry "get-quick-find" () 2012 26 ("quick-find" "find-toolbar" "locate")}
        {Lisp-Entry "get-search-targets" () 2021 18 ("get-search-targets" "Search-Targets" "get-system-property" "not" "if" "active-search" "search" "let")}
        {Lisp-Entry "set-search-targets" () 2028 18 ("set-search-targets" "Search-Targets" "set-system-property" "not" "if" "active-search" "search" "let" "targets")}
        {Lisp-Entry "get-find-targets" () 2035 18 ("get-search-targets" "first" "map")}
        {Lisp-Entry "get-replace-targets" () 2039 18 ("get-search-targets" "second" "map")}
        {Lisp-Entry "get-whole-words?" () 2043 18 ("get-whole-words?" "Search-Whole-Words?" "get-system-property" "not" "if" "active-search" "search" "let")}
        {Lisp-Entry "get-ignore-case?" () 2050 18 ("get-ignore-case?" "Search-Ignore-Case?" "get-system-property" "not" "if" "active-search" "search" "let")}
        {Lisp-Entry "get-preserve-case?" () 2057 18 ("get-preserve-case?" "Search-Preserve-Case?" "get-system-property" "not" "if" "active-search" "search" "let")}
        {Lisp-Entry "get-play-recording?" () 2064 18 ("get-play-recording?" "Search-Play-Recording?" "get-system-property" "not" "if" "active-search" "search" "let")}
        {Lisp-Entry "get-expression?" () 2071 18 ("get-expression?" "Search-Expression?" "get-system-property" "not" "if" "active-search" "search" "let")}
        {Lisp-Entry "DDE-Instance" () 2084 26 ()}
        {Lisp-Entry "Application-Service" () 2088 26 ()}
        {Lisp-Entry "System-Topic" () 2092 26 ()}
        {Lisp-Entry "initialize-dde" () 2097 11 ("DNS_REGISTER" "NULL" "DdeNameService" "System-Topic" "CP_WINUNICODE" "process-name" "DdeCreateStringHandle" "Application-Service" "DDE-Instance" "set!" "DMLERR_NO_ERROR" "=" "when" "APPCLASS_STANDARD" "get-dde-callback" "0" "DdeInitialize" "instance" "err" "receive")}
        {Lisp-Entry "uninitialize-dde" () 2107 11 ("DdeUninitialize" "DNS_UNREGISTER" "NULL" "Application-Service" "DdeNameService" "DDE-Instance" "when")}
        {Lisp-Entry "on-new" () 2118 26 ("get-default-frame-class" "new-event" "evt")}
        {Lisp-Entry "on-open" () 2122 26 ("open-files" "evt")}
        {Lisp-Entry "open-files" () 2126 18 ("get-name" "file" "dynamic" "function" "key:" ">" "sort" "edit-file" "for-each" "true" "multiple-selection?:" "open-extensions" "extensions:" "OpenFile-Dialog" "get-modal" "files" "let" "directory" "directory:")}
        {Lisp-Entry "receive-files" () 2132 26 ("edit-file" "class:" "edit-document" "file?" "when" "pathname" "dynamic" "function" "for-each" "else" "Jazz-Text-View" "shift-down?" "Jazz-Plain-Text-View" "alt-down?" "cond" "class" "let" "user-message" "set-current-directory" "parse" "filename" "dir" "let*" "car" "directory?" "1" "length" "=" "and" "if" "pathnames" "pos")}
        {Lisp-Entry "edit-file" () 2149 26 ("edit-document" "file")}
        {Lisp-Entry "open-extensions" () 2154 26 ()}
        {Lisp-Entry "find-document" () 2158 18 ("stage" "get-children" "pathname=" "get-controller" "get-moniker" "guest-moniker" "Document" "get-guest" "guest" "let" "Host-Frame" "is?" "and" "frame" "dynamic" "function" "find-if" "moniker")}
        {Lisp-Entry "edit-document" () 2169 18 ("false" "verify-reload" "acquire-focus" "set-visible?" "bring-to-front" "get-guest" "set-selection" "true" "set-wrap?" "wrap?" "report-duration" "IDE" "self" "typed?" "get-controller" "set-moniker" "Timer" "new" "timer" "document" "host" "initialize:" "activate-focus?" "host-focus?:" "visible?" "host-visible?:" "workspace" "host-workspace:" "new-frame" ":wait" "with-cursor" "file-frame-class" "either" "class" "values" "return-new?" "new?" "dynamic" "function" "result" "find-document" "force-new?" "frame" "let*" "get-entry" "cons" "selection" "get-file" "set!" "Zipped" "is?" "file" "let" "error" "exists?" "not" "if" "when" "moniker")}
        {Lisp-Entry "edit-help-document" () 2218 18 ("false" "set-editable?" "get-guest" "text" "edit-document" "frame" "let*" "moniker")}
        {Lisp-Entry "edit-filename" () 2224 18 ("get-controller" "verify-reload" "get-guest" "text" "get-source" "edit-document" "frame" "error" "not" "if" "find-filename" "project-file" "get-workbench" "workbench" "let*" "filename")}
        {Lisp-Entry "edit-category" () 2234 26 ("name")}
        {Lisp-Entry "browse-url" () 2238 18 ("refresh" "true" "set-visible?" "bring-to-front" "set-url" "get-guest" "explorer" "false" "host-visible?:" "get-explorer-class" "new-frame" "let*" "not" "if" "find-explorer-frame" "frame" "let" "url")}
        {Lisp-Entry "find-explorer-frame" () 2254 18 ("stage" "get-children" "get-browser" "get-site" "get-current-url" "=" "Explorer-View" "get-guest" "guest" "Host-Frame" "is?" "and" "frame" "dynamic" "function" "find-if" "parse" "string" "let" "find-explorer-frame" "unimplemented" "url")}
        {Lisp-Entry "on-close" () 2266 26 ("0" "WM_CLOSE" "send-message" "validate-focus" "when" "stage" "first-window" "frame" "let" "evt")}
        {Lisp-Entry "on-close-all" () 2273 26 ("stage" "get-windows" "close" "confirm-close" "get-controller" "close-on-close-all?" "Document" "and" "get-guest" "guest" "let" "Host-Frame" "is?" "when" "window" "dynamic" "function" "for-each" "evt")}
        {Lisp-Entry "on-save-all" () 2283 26 ("save-all" "evt")}
        {Lisp-Entry "on-print" () 2287 26 ("print-document" "current-guest" "guest" "let" "evt")}
        {Lisp-Entry "on-print-layout" () 2292 26 ("print-layout" "current-guest" "guest" "let" "evt")}
        {Lisp-Entry "on-print-preview" () 2297 26 ("print-preview" "current-guest" "guest" "let" "evt")}
        {Lisp-Entry "on-exit-application" () 2302 26 ("exit-process" "evt")}
        {Lisp-Entry "save-all" () 2306 18 ("false" "include-invisibles?:" "stage" "get-windows" "save" "get-modified?" "dependent-document?" "xor" "get-moniker" "or" "and" "get-controller" "controller" "get-guest" "guest" "Host-Frame" "is?" "when" "window" "for-each" "main-documents?" "dynamic" "function" "save-documents" "let" "true" "save-unanchored?" "save-unanchored?:" "Document" "class" "class:")}
        {Lisp-Entry "edit-definition" () 2330 26 ("rest" "object")}
        {Lisp-Entry "edit-references" () 2334 26 ("rest" "object")}
        {Lisp-Entry "context-update" () 2343 11 ("context" "user-message" "modify-user" "modify-catalogs" "nextmethod")}
        {Lisp-Entry "modify-catalogs" () 2350 11 ("get-children" "get-active?" "set-active?" "get-catalog" "catalog" "get-name" "name" "let*" "config" "dynamic" "function" "for-each" "get-cataloguer" "cataloguer" "when" "false" "error?:" "catalogs" "get-preferences" "pref" "let")}
        {Lisp-Entry "modify-user" () 2362 11 ("finalize" "init" "autoload" "new" "set!" "User" "get-user-class" "either" "class" "false" "error?:" "get-preferences" "pref" "let" "close" "user" "when")}
        {Lisp-Entry "on-add-to-favorites" () 2381 11 ("add-to-favorites" "bell" "not" "if" "current-document" "guest" "let" "evt")}
        {Lisp-Entry "Default-Page-Setup" () 2393 14 ()}
        {Lisp-Entry "Default-Page-Setup-Designer" () 2396 14 ()}
        {Lisp-Entry "Default-Page-Setup-Form" () 2399 14 ("form>>")}
        {Lisp-Entry "Default-Page-Setup-File" () 2403 14 ("User" "File")}
        {Lisp-Entry "default-page-setup" () 2407 18 ("setup-page-setup" "Default-Page-Setup" "not" "when")}
        {Lisp-Entry "default-page-setup-designer" () 2413 18 ("setup-page-setup" "Default-Page-Setup-Designer" "not" "when")}
        {Lisp-Entry "setup-page-setup" () 2419 11 ("reference:" "get-form" "form:" "Designer" "new" "Default-Page-Setup-Designer" "instantiate" "Default-Page-Setup" "set!" "Default-Page-Setup-Form" "read-from-file" "exists?" "if" "form" "Default-Page-Setup-File" "file" "let*")}
        {Lisp-Entry "save-page-setup" () 2426 11 ("save" "Default-Page-Setup-File" "set-origin" "get-origin" "not" "get-form" "form" "let" "Default-Page-Setup-Designer" "when")}
        {Lisp-Entry "get-documentation-cataloguer" () 2439 26 ()}
        {Lisp-Entry "on-zoom-out" () 2448 11 ("true" "-" "scale-view" "get-scaling" "scaling" "bell" "not" "if" ":what" "get-property" "scaled-view" "view" "let" "evt")}
        {Lisp-Entry "on-zoom-in" () 2456 11 ("true" "+" "scale-view" "get-scaling" "scaling" "bell" "not" "if" ":what" "get-property" "scaled-view" "view" "let" "evt")}
        {Lisp-Entry "on-unzoom" () 2464 11 ("false" "scale-view" "bell" "not" "if" ":what" "get-property" "scaled-view" "view" "let" "evt")}
        {Lisp-Entry "scaled-view" () 2471 11 ("mouse-view" "current-document" "document" "case" "what")}
        {Lisp-Entry "scale-view" () 2477 11 ("set-scaled?" "set-scaling" "user-message" "scaled?" "scaling" "view")}
        {Lisp-Entry "on-capture-document" () 2489 11 ("tooltips?:" "report-figure?:" "false" "feedback-figure?:" "feedback:" "true" "draw-overlays?:" "export-picture" "get-guest" "guest" "View-Host" "is?" "when" "get-player" "player" "let" "pos" "view" "position" "window" "dynamic" "function" "pick-figure" "evt")}
        {Lisp-Entry "on-capture-root" () 2504 11 ("tooltips?:" "report-figure?:" "false" "feedback-figure?:" "feedback:" "true" "draw-overlays?:" "export-picture" "get-root" "root" "let" "pos" "view" "position" "window" "dynamic" "function" "pick-figure" "evt")}
        {Lisp-Entry "update-windowing-actions" () 2521 26 ()}
        {Lisp-Entry "update-window-actions" () 2525 18 ("restore-all" "minimize-all" "tile-vertically" "tile-horizontally" "cascade" "toggle-window" "current-window" "previous-window" "2" "next-window" "print" "print-preview" "print-layout" "page-setup" "compare-saved" "revert-saved" "save-all" "save-as" "save" "guest" "close-all" "not" "1" ">=" "and" "close" "application" "Action" "set-action-enabled?" "in-modal?" "length" "count" "get-windows" "frames" "let*" "when" "get-stage" "stage" "let")}
        {Lisp-Entry "on-next-window" () 2553 26 ("current-frame" "acquire-focus" "send-to-back" "first-window" "first" "get-stage" "stage" "let*" "evt")}
        {Lisp-Entry "on-previous-window" () 2560 26 ("current-frame" "acquire-focus" "bring-to-front" "last-window" "last" "get-stage" "stage" "let*" "evt")}
        {Lisp-Entry "on-current-window" () 2567 26 ("acquire-focus" "first-window" "first" "get-stage" "stage" "let*" "evt")}
        {Lisp-Entry "on-toggle-window" () 2573 26 ("bell" "toggle-text" "Text-View" "is?" "if" "current-document" "text" "let" "evt")}
        {Lisp-Entry "toggle-text" () 2580 11 ("else" "toggle-jazz-text" "toggle-c++-text" "ci=" "test:" "Cpp-Extensions" "member?" "cond" "get-extension" "ext" "bell" "not" "if" "get-controller" "get-moniker" "file" "let" "text")}
        {Lisp-Entry "toggle-c++-text" () 2590 11 ("edit-filename" "format" "filename" "ci=" "if" "toggled" "get-extension" "ext" "get-base" "base" "let*" "file")}
        {Lisp-Entry "toggle-jazz-text" () 2598 11 ("get-controller" "verify-reload" "get-guest" "text" "edit-document" "frame" "false" "get-name" "get-source-file" "c++" "bell" "Project" "autoload" "is-not?" "if" "get-product" "project" "find-source" "project-file" "get-workbench" "workbench" "let*" "file")}
        {Lisp-Entry "on-cascade" () 2610 26 ("on-cascade" "unimplemented" "get-windows" "frames" "get-stage" "stage" "let*" "evt")}
        {Lisp-Entry "on-tile-horizontally" () 2616 26 ("increase!" "Dimension" "set-size" "Point" "new" "set-position" "frame" "for-each" "restore" "dynamic" "function" "with-locked-update" "0" "t" "quotient" "h" "get-height" "height" "get-width" "width" "length" "count" "get-windows" "frames" "get-stage" "stage" "let*" "evt")}
        {Lisp-Entry "on-tile-vertically" () 2634 26 ("increase!" "Dimension" "set-size" "Point" "new" "set-position" "frame" "for-each" "restore" "dynamic" "function" "with-locked-update" "0" "l" "quotient" "w" "get-height" "height" "get-width" "width" "length" "count" "get-windows" "frames" "get-stage" "stage" "let*" "evt")}
        {Lisp-Entry "on-minimize-all" () 2653 26 ("SW_MINIMIZE" "show-window" "window" "dynamic" "function" "for-each" "get-windows" "windows" "get-stage" "stage" "let*" "evt")}
        {Lisp-Entry "on-restore-all" () 2663 26 ("SW_RESTORE" "show-window" "window" "dynamic" "function" "for-each" "get-windows" "windows" "get-stage" "stage" "let*" "evt")}
        {Lisp-Entry "on-select-window" () 2673 26 ("acquire-focus" "bring-to-front" "SW_RESTORE" "show-window" "Palette" "is?" "unless" ":window" "get-property" "window" "let" "evt")}}}})
"Application-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "application" "Application-Actions.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.application.Application-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Application-Actions" () 47 7 ("Prior" "on-restore-all" "restore-all" "Next" "on-minimize-all" "minimize-all" "on-tile-vertically" "tile-vertically" "on-tile-horizontally" "tile-horizontally" "on-cascade" "cascade" "F7" "on-preprocess-file" "preprocess" "Tab" "on-toggle-window" "toggle-window" "on-current-window" "current-window" "on-previous-window" "previous-window" "on-next-window" "next-window" "on-previous-workspace" "previous-workspace" "F6" "on-next-workspace" "next-workspace" "Backspace" "on-full-screen" "full-screen" "Home" "on-maximize/restore" "maximize/restore" "Space" "on-zoom-vertically" "zoom-vertically" "Return" "on-zoom-horizontally" "zoom-horizontally" "on-quick-find" "quick-find" "on-replace-all-selected" "replace-all-selected" "on-replace-all" "replace-all" "on-replace&find-forward" "replace&find-forward" "on-replace" "replace" "on-find-backward" "find-backward" "F3" "on-find-forward" "find-forward" "on-pop-results" "pop-results" "on-edit-current" "edit-current" "on-edit-previous" "edit-previous" "on-edit-next" "edit-next" "on-find-in-files" "find-in-files" "on-find" "find" "Right" "on-forward-history" "forward-history" "Left" "on-backward-history" "backward-history" "on-add-history" "add-history" "on-pop-clipboard-stack" "pop-clipboard-stack" ":shift" "on-paste-from-stack" "paste-from-stack" "on-exit-application" "exit" "on-page-setup" "page-setup" ":alt" "on-print-preview" "print-preview" "on-print-layout" "print-layout" "on-print" "print" "on-save-all" "save-all" "on-close-all" "close-all" "F4" "on-close" "close" "on-open" "open" ":control" "Shortcut" "shortcut:" "on-new" ":application" "Event-Handler" "action-handler:" "new" "name:" "Actions")}}})
"Application-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "application" "Application-Event.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.application.Application-Event" () 37 9 ("jazz")
      {Lisp-Entry "Application-Event" () 45 7 ("Event")}}})
"Application-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "application" "Application-Preferences.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.application.Application-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Application-Preferences" () 46 7 ("interface" "workspaces" "tools" "documents" "favorites" "aliases" "name:" "Process-Preferences")
        {Lisp-Entry "toplevel-title" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "toplevel-state" () 50 12 ("generate" "accessors" "restored")}
        {Lisp-Entry "catalog-types" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "documented?" () 52 12 ("generate" "accessors" "false")}
        {Lisp-Entry "fullscreen-warned?" () 53 12 ("generate" "accessors" "false")}
        {Lisp-Entry "walk-form" () 72 16 ("push-reference" "in-manifest?" "when" "cdr" "catalog-type" "info" "dynamic" "function" "for-each" "get-property" "catalog-types" "let" "nextmethod" "form" "analyser")}
        {Lisp-Entry "get-row-instance" () 87 11 ("nextmethod" "else" "Boolean-Row" "documented?" "String-Row" "new" "toplevel-title" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 94 11 ("documented?" "catalog-types" "toplevel-state" "toplevel-title" "protocols" "current-directory" "active-context")}}}})
"Archive-Schema-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "archive" "Archive-Schema-Browser.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.archive.Archive-Schema-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Archive-Schema-Browser" () 48 7 ("Ansi-Var" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "body" "schema-combo" "edge" "border-type:" "schema-border" "schema-label" "extensions:" "parameters:" "file" "protocol:" "file-browser" "6" "0" "Point" "position:" "title:" "file-label" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "get-source" () 66 18 ("schema-combo" "get-value" "file-browser" "locate" "get-moniker" "Archive-Schema-Source" "new")}
        {Lisp-Entry "set-source" () 72 18 ("setup-source" "value")}
        {Lisp-Entry "setup-source" () 81 11 ("schema-combo" "set-content" "file-browser" "locate" "set-moniker" "get-schema" "content" "get-file" "if" "moniker" "let" "source")}
        {Lisp-Entry "moniker-changed" () 93 11 ("either" "schema-combo" "set-content" "update-valid-combo" "present-schema" "car" "kind" "schema" "bind" "title" ":schemas" "getf" "typed-schemas" "Schema-Archive" "read-header" "properties" "version" "receive" "valid-archive-pathname?" "when" "get-moniker" "file" "file-browser" "locate" "browser" "let*")}
        {Lisp-Entry "valid-archive-pathname?" () 106 11 ("exists?" "get-extension" "=" "and" "file")}
        {Lisp-Entry "update-schema-combo" () 117 11 ("false" "select-all" "acquire-focus" "get-text" "text" "message-box" "true" "update-valid-combo" ":schemas" "getf" "typed-schemas" "let" "Schema-Archive" "read-header" "properties" "version" "receive" "valid-archive-pathname?" "if" "get-moniker" "file" "file-browser" "locate" "browser" "let*")}
        {Lisp-Entry "update-valid-combo" () 132 11 ("schema-combo" "locate" "set-choices" "list" "present-schema" "title" "kind" "schema" "bind" "typed-schema" "dynamic" "function" "map" "choices" "let" "typed-schemas")}
        {Lisp-Entry "present-schema" () 142 11 ("present" "format" "Provider" "get-provider" "provider" "let" "kind" "schema")}
        {Lisp-Entry "validate-content" () 152 11 ("schema-combo" "locate" "validate-content")}}
      {Lisp-Entry "Archive-Browser" () 161 7 ("Moniker-Widget")
        {Lisp-Entry "moniker-update" () 164 11 ("moniker-changed")}}
      {Lisp-Entry "Schema-Combo" () 173 7 ("condensed?:" "Combo-Box")
        {Lisp-Entry "update-choices" () 180 11 ("update-schema-combo")}}}})
"Archive-Schema-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "archive" "Archive-Schema-Source.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.archive.Archive-Schema-Source" () 37 9 ("jazz")
      {Lisp-Entry "Archive-Schema-Source" () 45 7 ("Schema-Source" "Object")
        {Lisp-Entry "file" () 48 8 ()}
        {Lisp-Entry "schema" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("schema~self" "file~self" "set!" "nextmethod" "schema" "file")}
        {Lisp-Entry "get-file" () 63 18 ("file")}
        {Lisp-Entry "get-schema" () 67 18 ("schema")}
        {Lisp-Entry "present" () 76 11 ("schema" "file" "get-name" "format")}
        {Lisp-Entry "present-detailed" () 82 11 ("schema" "file" "get-name" "format" ":bulleted" "list")}
        {Lisp-Entry "get-data-schema" () 94 11 ("get-schema" "load-archive" "archive" "=" "assert" "schema" "valid-schema" "provider" "name" "bind" ":schemas" "getf" "schemas" "let" "file" "Schema-Archive" "read-header" "properties" "version" "receive" "reporter" "reporter:")}
        {Lisp-Entry "valid-schema" () 103 11 ("assoc" "either" "error" "empty-string?" "if" "schemas" "schema")}}}})
"Array-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Array-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Array-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Array-Tester" () 44 7 ("title:" "Tester")
        {Lisp-Entry "test" () 51 11 ("test-array" "invoke")}
        {Lisp-Entry "array" () 61 14 ("int" "new-array")}
        {Lisp-Entry "test-array" () 65 11 ()}}}})
"Automata"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "automata" "Automata.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.automata.Automata" () 37 9 ("jazz")
      {Lisp-Entry "no-char" () 40 12 ("no-char")}
      {Lisp-Entry "Automata" () 49 7 ("Object")
        {Lisp-Entry "nbVectored" () 52 8 ()}
        {Lisp-Entry "nbListed" () 53 8 ()}
        {Lisp-Entry "nbLettered" () 54 8 ()}
        {Lisp-Entry "start" () 55 8 ()}
        {Lisp-Entry "initialize" () 58 11 ("start~self" "nbLettered~self" "nbListed~self" "0" "nbVectored~self" "set!" "s")}
        {Lisp-Entry "run" () 65 18 ("transition" "when" "start" "state" "iterate" "let" "tape")}}
      {Lisp-Entry "Tape" () 76 7 ("Object")
        {Lisp-Entry "paragraphs" () 79 8 ()}
        {Lisp-Entry "limit" () 80 8 ()}
        {Lisp-Entry "row" () 81 8 ()}
        {Lisp-Entry "col" () 82 8 ()}
        {Lisp-Entry "scan" () 83 8 ()}
        {Lisp-Entry "start-row" () 84 8 ()}
        {Lisp-Entry "start-col" () 85 8 ()}
        {Lisp-Entry "found" () 86 8 ()}
        {Lisp-Entry "initialize" () 89 11 ("Queue" "new" "found~self" "start-col~self" "0" "start-row~self" "row" "paragraphs" "element" "get-string" "scan~self" "col~self" "row~self" "limit~self" "paragraphs~self" "set!" "c" "r" "l" "p")}
        {Lisp-Entry "get-next" () 100 18 ("-" "no-char" "paragraphs" "element" "get-string" "0" "1" "+" "set!" "begin" "limit" "row" "" "scan" "length" "col" "=" "if")}
        {Lisp-Entry "add-found" () 113 18 ("found" "enqueue" "info")}
        {Lisp-Entry "get-found" () 117 18 ("found" "queue-list")}}
      {Lisp-Entry "Transitions" () 126 7 ("Object")
        {Lisp-Entry "add-transition" () 129 26 ("state" "char")}
        {Lisp-Entry "follow" () 130 26 ("char")}}
      {Lisp-Entry "NbAscii" () 138 12 ()}
      {Lisp-Entry "NbTransitions" () 139 12 ("2" "NbAscii" "+")}
      {Lisp-Entry "EOFTransition" () 140 12 ("NbAscii")}
      {Lisp-Entry "NotAsciiTransition" () 141 12 ("1" "NbAscii" "+")}
      {Lisp-Entry "VectoredTransitions" () 144 7 ("Transitions")
        {Lisp-Entry "vector" () 147 18 ()}
        {Lisp-Entry "initialize" () 150 11 ("Nil" "NbTransitions" "make-vector" "vector" "set!" "rest")}
        {Lisp-Entry "add-transition" () 154 11 ("NotAsciiTransition" "NbAscii" ">" "if" "char->integer" "vector" "set-element!" "state" "c")}
        {Lisp-Entry "follow" () 158 11 ("NotAsciiTransition" "NbAscii" ">" "if" "char->integer" "vector" "element" "c")}}
      {Lisp-Entry "State" () 167 7 ("Object")
        {Lisp-Entry "name" () 170 8 ()}
        {Lisp-Entry "transitions" () 171 8 ()}
        {Lisp-Entry "initialize" () 174 11 ("transitions" "name" "set!" "t" "n")}
        {Lisp-Entry "add-transition" () 179 18 ("transitions" "add-transition" "state" "c")}
        {Lisp-Entry "transition" () 183 26 ("Nil" "EOFTransition" "action" "follow" "no-char" "neq?" "if" "get-next" "c" "let" "tape")}
        {Lisp-Entry "follow" () 191 18 ("transitions" "follow" "c")}
        {Lisp-Entry "action" () 195 26 ("tape")}}
      {Lisp-Entry "StartState" () 203 7 ("State")
        {Lisp-Entry "initialize" () 206 11 ("nextmethod" "t")}
        {Lisp-Entry "transition" () 210 11 ("nextmethod" "get-col" "set-start-col" "get-row" "set-start-row" "tape")}}
      {Lisp-Entry "FoundState" () 221 7 ("State")
        {Lisp-Entry "found" () 224 8 ()}
        {Lisp-Entry "next-state" () 225 8 ()}
        {Lisp-Entry "initialize" () 228 11 ("Nil" "nextmethod" "next-state" "found" "set!" "ns" "f")}
        {Lisp-Entry "transition" () 234 11 ("get-next-state" "action" "tape")}
        {Lisp-Entry "action" () 239 11 ("get-start-col" "get-start-row" "found" "list" "add-found" "tape")}}}})
"BaseCodec"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "license" "BaseCodec.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.license.basecodec" () 37 9 ("jazz")
      {Lisp-Entry "Hash32" () 45 12 ()}
      {Lisp-Entry "unhash32" () 49 13 ("List" "coerce" "Hash32" "get-rank" "c" "dynamic" "function" "map" "string")}
      {Lisp-Entry "recode" () 55 20 ("get-output" ">" "when" "decrease!" "bit-mask" "bit-and" "shift-right" "put" "-" "extra-bits" ">=" "while" "increase!" "shift-left" "bit-or" "set!" "dynamic" "function" "for-each" "List-Factory" "new" "out" "bit-in-value" "0" "value" "cdr" "in" "let" "bit-out" "bit-in" "list")}
      {Lisp-Entry "encode32" () 74 20 ("String" "5" "8" "recode" "Hash32" "element" "n" "dynamic" "function" "map" "coerce" "list")}
      {Lisp-Entry "decode32" () 81 20 ("8" "5" "recode" "unhash32" "remove-nils" "list" "let" "string")}
      {Lisp-Entry "valid32?" () 86 20 ("unhash32" "not-null?" "every?" "string")}}})
"Basic-Slide"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "slide" "Basic-Slide.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.slide.Basic-Slide" () 37 9 ("jazz")
      {Lisp-Entry "Basic-Slide" () 46 7 ("Slide")}}})
"Basic-Slide-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "slide" "Basic-Slide-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.slide.Basic-Slide-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Basic-Slide-Text-View" () 47 7 ("editable?:" "White" "Color" "color:" "Plain" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "show-unfocused-selection?:" "enabled?:" "Plain-Formatted-Text-View")
        {Lisp-Entry "get-presentation" () 60 11 ("get-guest")}
        {Lisp-Entry "mouse-down" () 69 11 ("get-presentation" "acquire-focus" "pos")}
        {Lisp-Entry "cursor-update" () 78 11 (":no" ":finger" "set-cursor" "get-focus" "get-presentation" "eq?" "if" "view")}
        {Lisp-Entry "draw-enabled?" () 89 11 ("true")}
        {Lisp-Entry "get-context-menu" () 98 11 ("new-text-context-menu")}}}})
"Basic-Slide-Title"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "slide" "Basic-Slide-Title.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.slide.Basic-Slide-Title" () 37 9 ("jazz")
      {Lisp-Entry "Basic-Slide-Title" () 46 7 ("center" "justification:" "Label-View")
        {Lisp-Entry "get-presentation" () 58 11 ("parent" "get-parent")}
        {Lisp-Entry "mouse-down" () 67 11 ("get-presentation" "acquire-focus" "pos")}
        {Lisp-Entry "cursor-update" () 76 11 (":no" ":finger" "set-cursor" "get-focus" "get-presentation" "eq?" "if" "view")}}}})
"Binary"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Binary.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.utility.Binary" () 37 9 ("jazz")
      {Lisp-Entry "Binary" () 44 7 ("Object")}}})
"Binding-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Binding-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.frame.Binding-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Binding-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-image" () 57 11 ("Bitmap-Resource")}}}})
"Binding-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Binding-Tester.fusion"} {Time 128360666680000000L}
    {Lisp-Entry "jazz.validate.suite.Binding-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Binding-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-function" "test-bind" "test-with" "test-letrec" "test-let" "invoke")}
        {Lisp-Entry "test-let" () 65 11 ("self" "code-walk" "error?" "begin" "cons" "lst" "reverse" "equal?" "5" "set!" "8" "3" "y" "4" "+" "2" "x" "let" "=" "rpt" "validate")}
        {Lisp-Entry "test-letrec" () 103 11 ("3" "+" "x" "error?" "begin" "5" "-" "*" "1" "0" "if" "n" "function" "fact" "letrec" "=" "rpt" "validate")}
        {Lisp-Entry "test-with" () 125 11 ()}
        {Lisp-Entry "test-bind" () 134 11 ("error?" "begin" "6" "+" "3" "2" "1" "list" "z" "y" "x" "bind" "=" "rpt" "validate")}
        {Lisp-Entry "test-function" () 148 11 ("reverse" "cons" "for-each" "list" "9" "*" "dynamic" "map" "set!" "let" "4" "1" "equal?" "5" "3" "+" "y" "x" "2" "function" "=" "rpt" "validate")}}}})
"Bindings"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "action" "Bindings.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.action.Bindings" () 37 9 ("jazz")
      {Lisp-Entry "Bindings" () 45 7 ("Component")}}})
"Bindings-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Bindings-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Bindings-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Bindings-Manager" () 49 7 ("on-return-press" "return-press-handler:" "on-double-click" "double-click-handler:" "bindings" "fill" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "center" "bindings-border" "default?:" "on-bind-key" "title:" "tail" "bind-key" "on-edit-action" "edit-action" "on-restore-key" "restore-key" "2" "on-unbind-key" "unbind-key" "on-categorize" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "categorize" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "toolbar" "name:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "categorized?" () 52 8 ("false")}
        {Lisp-Entry "conclude" () 74 11 ("view-bindings" "nextmethod" "initargs")}
        {Lisp-Entry "frame-icon" () 85 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 90 16 ()}
        {Lisp-Entry "frame-position" () 95 16 ("Point")}
        {Lisp-Entry "frame-size" () 100 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 104 11 ("home")}
        {Lisp-Entry "get-tree" () 113 11 ("bindings" "locate")}
        {Lisp-Entry "on-categorize" () 122 11 ("view-bindings" "name" "bindings" "locate" "set-toplevel-controls?" "not" "categorized?" "set!" "evt")}
        {Lisp-Entry "on-show-all" () 128 11 ("evt")}
        {Lisp-Entry "on-double-click" () 132 11 ("bind-key" "evt")}
        {Lisp-Entry "on-return-press" () 136 11 ("bind-key" "evt")}
        {Lisp-Entry "on-unbind-key" () 140 11 ("unbind-key" "evt")}
        {Lisp-Entry "on-restore-key" () 144 11 ("restore-key" "evt")}
        {Lisp-Entry "on-bind-key" () 148 11 ("bind-key" "evt")}
        {Lisp-Entry "on-edit-action" () 152 11 ("edit-action" "evt")}
        {Lisp-Entry "unbind-key" () 161 11 ("update-action-item" "update-accelerator" "shortcut" "set-property" "get-shortcut" "old" "get-bindings-designer" "designer" "rank" "action-item" "receive" "bell" "null?" "if" "selected-action-item" "info" "get-tree" "tree" "get-application" "appl" "let")}
        {Lisp-Entry "restore-key" () 175 11 ("update-action-item" "update-accelerator" "shortcut" "remove-property" "get-shortcut" "old" "get-bindings-designer" "designer" "rank" "action-item" "receive" "bell" "null?" "if" "selected-action-item" "info" "get-tree" "tree" "get-application" "appl" "let")}
        {Lisp-Entry "bind-key" () 189 11 ("update-action-item" "update-accelerator" "Shortcut-Chooser" "get-modal" "shortcut" "set-property" "get-shortcut" "old" "get-bindings-designer" "designer" "rank" "action-item" "receive" "bell" "null?" "if" "selected-action-item" "info" "get-tree" "tree" "get-application" "appl" "let")}
        {Lisp-Entry "update-action-item" () 203 11 ("invalidate-cell" "shortcut" "owner-image" "image:" "Tree-Image" "get-shortcut" "present-shortcut" "title:" "Tree-Label" "set-cell-data" "2" "owner-cell" "1" "Cell" "new" "key-cell" "let" "rank" "action-item" "designer" "tree")}
        {Lisp-Entry "edit-action" () 217 11 ("get-method-name" "edit-definition" "get-action-handler" "action-handler" "rank" "action-item" "receive" "bell" "null?" "if" "selected-action-item" "info" "get-application" "appl" "let")}
        {Lisp-Entry "selected-action-item" () 234 11 ("values" "Action-Item" "is?" "get-user-data" "data" "get-row" "row" "when" "get-single-selection" "rank" "get-tree" "tree" "let*")}
        {Lisp-Entry "view-bindings" () 249 11 ("view-bindings" "get-tree" "tree" "flat" "categorized" "categorized?" "if" "kind" "get-bindings" "bindings" "get-bindings-designer" "designer" "get-application" "appl" "let")}}}})
"Bindings-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "action" "Bindings-Preferences.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.action.Bindings-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Bindings-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 58 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 62 11 ("false")}
        {Lisp-Entry "can-move-component?" () 66 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 70 11 ("false")}}}})
"Bindings-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Bindings-Tree.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Bindings-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Bindings-Tree" () 46 7 ("center" "justification:" "owner" "key" "toplevel-controls?:" "width:" "title:" "name:" "name" "filled-column:" ":icons" "portfolio:" "Tree-View")
        {Lisp-Entry "view-bindings" () 61 21 ("view-list" "list" "view-flat" "flat" "view-categorized" "categorized" "case" "remove-every-row" "dynamic" "function" "with-update-locked" "kind" "bindings" "designer")}
        {Lisp-Entry "view-categorized" () 71 11 ("get-children" "present-shortcut" "father:" "owner-image" "owner" "get-shortcut" "shortcut" "action" "user-data:" "Tree-Image" "Tree-Label" "Bitmap-Resource" "image:" "get-name" "->string" "title:" "Tree-Node" "new" "list" "children:" "add-row" "row" "let" "Actions" "is?" "when" "actions" "dynamic" "function" "for-each" "bindings" "designer")}
        {Lisp-Entry "view-flat" () 83 11 ("get-children" "user-data:" "present-shortcut" "Tree-Label" "Bitmap-Resource" "get-name" "format" "title:" "Tree-Node" "list" "children:" "add-row" "owner-image" "image:" "Tree-Image" "new" "owner" "get-shortcut" "shortcut" "let" "action" "Actions" "is?" "when" "actions" "dynamic" "function" "for-each" "bindings" "designer")}
        {Lisp-Entry "view-list" () 94 11 ("user-data:" "present-shortcut" "Tree-Label" "Bitmap-Resource" "get-parent" "get-name" "format" "title:" "Tree-Node" "list" "children:" "add-row" "owner-image" "image:" "Tree-Image" "new" "owner" "get-shortcut" "shortcut" "let" "action" "dynamic" "function" "for-each" "actions" "designer")}
        {Lisp-Entry "present-shortcut" () 102 21 ("present" "not" "if" "shortcut")}
        {Lisp-Entry "owner-image" () 108 21 ("default-owner-image" "else" "root-owner-image" "get-reference" "eq?" "branch-owner-image" "Branch" "is?" "cond" "find-owner" "owner" "let" "property" "component" "designer")}
        {Lisp-Entry "default-owner-image" () 115 11 ()}
        {Lisp-Entry "root-owner-image" () 119 11 ("Bitmap-Resource")}
        {Lisp-Entry "branch-owner-image" () 123 11 ("Bitmap-Resource")}}}})
"Bitmap"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Bitmap.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Bitmap" () 37 9 ("jazz")
      {Lisp-Entry "Bitmap" () 46 7 ("Handle-Container" "Object")
        {Lisp-Entry "handle" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "height" "width" "dc" "get-hdc" "CreateCompatibleBitmap" "handle~self" "set!" "not" "if" "nextmethod" "handle" "handle:")}
        {Lisp-Entry "destroy" () 63 11 ("nextmethod" "handle" "DeleteObject")}
        {Lisp-Entry "get-handle" () 68 11 ("handle")}
        {Lisp-Entry "get-size" () 72 18 ("BITMAP-bmHeight-ref" "BITMAP-bmWidth-ref" "Dimension" "new" "size-of-BITMAP" "handle" "GetObject" "BITMAP-make" "info" "let")}}}})
"Bitmap-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "resource" "Bitmap-File.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.resource.Bitmap-File" () 37 9 ("jazz")
      {Lisp-Entry "Bitmap-File" () 45 7 ("Resource-File")
        {Lisp-Entry "resource-class" () 48 11 ("Bitmap-Resource")}
        {Lisp-Entry "resource-marker" () 52 11 ()}}}})
"Bitmap-Resource"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "resource" "Bitmap-Resource.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.resource.Bitmap-Resource" () 37 9 ("jazz")
      {Lisp-Entry "Bitmap-Resource" () 43 7 ("Resource")
        {Lisp-Entry "resource-type" () 52 16 ("bitmap")}}}})
"Book-Controller"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "book" "Book-Controller.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.book.Book-Controller" () 37 9 ("jazz")
      {Lisp-Entry "Book-Controller" () 45 7 ("Document-Controller")
        {Lisp-Entry "get-modified?" () 48 11 ("false" "true" "get-editor" "get-modified?" "when" "section" "name" "dynamic" "function" "document" "for-each-section" "return" "lambda" "call/ec")}
        {Lisp-Entry "set-modified?" () 58 11 ("update-status" "get-editor" "set-modified?" "section" "name" "dynamic" "function" "document" "for-each-section" "state")}}}})
"Book-Section"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "book" "Book-Section.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.book.Book-Section" () 37 9 ("jazz")
      {Lisp-Entry "Book-Section" () 45 7 ("Object")
        {Lisp-Entry "title" () 48 8 ()}
        {Lisp-Entry "model-name" () 49 8 ()}
        {Lisp-Entry "client" () 50 8 ()}
        {Lisp-Entry "designer" () 51 8 ()}
        {Lisp-Entry "editor" () 52 8 ()}
        {Lisp-Entry "initialize" () 55 11 ("editor" "editor~self" "designer" "designer~self" "client" "client~self" "model-name" "model-name~self" "title~self" "set!" "nextmethod" "title" "title:")}
        {Lisp-Entry "print" () 68 11 ("title" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-title" () 79 18 ("title")}
        {Lisp-Entry "set-title" () 83 18 ("title" "set!" "value")}
        {Lisp-Entry "get-model-name" () 87 18 ("model-name")}
        {Lisp-Entry "set-model-name" () 91 18 ("model-name" "set!" "value")}
        {Lisp-Entry "get-client" () 95 18 ("client")}
        {Lisp-Entry "set-client" () 99 18 ("set-client" "editor" "when" "designer" "client" "set!" "value")}
        {Lisp-Entry "get-designer" () 106 18 ("editor" "get-designer" "set!" "designer" "unless")}
        {Lisp-Entry "set-designer" () 112 18 ("designer" "set!" "value")}
        {Lisp-Entry "get-editor" () 116 18 ("editor")}
        {Lisp-Entry "set-editor" () 120 18 ("editor" "set!" "value")}}}})
"Book-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "book" "Book-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.book.Book-View" () 37 9 ("jazz")
      {Lisp-Entry "Book-View" () 47 7 ("Document" "Layout-View")
        {Lisp-Entry "sections" () 50 8 ("eq?" "new-hashtable")}
        {Lisp-Entry "book" () 51 8 ()}
        {Lisp-Entry "controller" () 52 8 ()}
        {Lisp-Entry "default-extension" () 55 11 ()}
        {Lisp-Entry "extensions" () 56 11 ()}
        {Lisp-Entry "focus-document" () 57 11 ()}
        {Lisp-Entry "current-history-item" () 58 11 ()}
        {Lisp-Entry "compare-moniker" () 59 11 ("moniker")}
        {Lisp-Entry "destroy" () 62 11 ("nextmethod" "controller" "close")}
        {Lisp-Entry "get-book" () 67 18 ("book")}
        {Lisp-Entry "set-book" () 71 18 ("book" "set!" "value")}
        {Lisp-Entry "get-version" () 80 18 ("book" "get-version")}
        {Lisp-Entry "get-properties" () 84 18 ("book" "get-properties")}
        {Lisp-Entry "get-description" () 88 18 ("book" "get-description")}
        {Lisp-Entry "get-book-name" () 92 18 ("book" "get-book-name")}
        {Lisp-Entry "add-section" () 101 18 ("sections" "hash-set!" "book" "get-client" "when" "section" "name")}
        {Lisp-Entry "remove-section" () 106 18 ("sections" "hash-set!" "book" "get-client" "when" "name")}
        {Lisp-Entry "get-section" () 111 18 ("error" "sections" "hash-ref" "either" "name")}
        {Lisp-Entry "get-client" () 116 18 ("get-section" "get-client" "name")}
        {Lisp-Entry "get-designer" () 120 18 ("get-section" "get-designer" "name")}
        {Lisp-Entry "get-editor" () 124 18 ("get-section" "get-editor" "name")}
        {Lisp-Entry "for-each-section" () 128 18 ("book" "get-names" "get-section" "name" "dynamic" "function" "for-each" "proc")}
        {Lisp-Entry "set-client-from-forms" () 139 18 ("clients-update" "set-client" "book" "book:" "instantiate" "client" "let" "form" "name" "dynamic" "function" "for-each-property" "client-forms")}
        {Lisp-Entry "clients-update" () 147 26 ("set-client" "get-section" "section" "let" "client" "name" "dynamic" "function" "book" "for-each-client")}
        {Lisp-Entry "update-names" () 154 11 ("branch:" "set-name" "get-designer" "designer" "get-client" "client" "let" "section" "name" "dynamic" "function" "for-each-section" "book-name")}
        {Lisp-Entry "new-event" () 168 16 ("set-visible?" "bring-to-front" "update-names" "clients-update" "update-status" "set-newname" "List-Factory" "new" "fact" "get-controller" "controller" "collect-names" "unique-domain-name" "book-name" "get-guest" "book-view" "rest" "false" "new-frame" "apply" "frame" "let*" "true" "host-visible?" "host-visible?:")}
        {Lisp-Entry "collect-names" () 184 16 ("get-children" "get-book-name" "neq?" "and" "get-guest" "guest" "Host-Frame" "is?" "when" "frame" "dynamic" "function" "collect" "get-stage" "stage" "class-of" "model" "let" "book")}
        {Lisp-Entry "empty-sections" () 200 18 ("clients-update" "set-name" "get-designer" "designer" "let" "set-client" "self" "book:" "instantiate" "client" "get-model-name" "model-name:" "action:" "true" "textual?:" "Form" "new" "form" "get-name" "old-name" "get-client" "old-client" "get-section" "section" "let*" "name" "dynamic" "function" "for-each" "sections")}
        {Lisp-Entry "install-in-host" () 219 11 ("get-controller" "install-in-host" "nextmethod" "host")}
        {Lisp-Entry "get-controller" () 229 11 ("new-controller" "set!" "controller" "unless")}
        {Lisp-Entry "new-controller" () 235 11 ("self" "Book-Controller" "new")}
        {Lisp-Entry "save" () 239 11 ("get-controller" "save")}
        {Lisp-Entry "save-as" () 243 11 ("get-controller" "save-as")}
        {Lisp-Entry "save-to" () 247 11 ("get-controller" "save-to" "moniker")}
        {Lisp-Entry "save-all" () 251 26 ("get-controller" "save-all")}
        {Lisp-Entry "install-scroller?" () 255 11 ("false")}
        {Lisp-Entry "get-moniker" () 259 11 ("get-controller" "get-moniker")}
        {Lisp-Entry "set-moniker" () 263 11 ("get-controller" "set-moniker" "moniker")}
        {Lisp-Entry "verify-reload" () 267 11 ()}
        {Lisp-Entry "reload-moniker" () 271 11 ("update-moniker-time" "reload-content" "dynamic" "function" "with-locked-update" "when" "moniker")}
        {Lisp-Entry "reload-content" () 279 11 ("update-status" "false" "set-modified?" "load-content" "empty-content" "moniker")}
        {Lisp-Entry "empty-content" () 286 29 ()}
        {Lisp-Entry "get-modified?" () 290 11 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" () 294 11 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "update-status" () 298 11 ("get-controller" "update-status")}
        {Lisp-Entry "update-moniker-time" () 302 11 ("get-controller" "update-moniker-time" "moniker")}
        {Lisp-Entry "confirm-close" () 306 11 ("get-controller" "confirm-close" "rest")}
        {Lisp-Entry "tool-update" () 310 11 ("tool?")}
        {Lisp-Entry "console-update" () 314 11 ("console?")}
        {Lisp-Entry "load-content" () 323 11 ("update-status" "clients-update" "book" "load-content" "moniker")}
        {Lisp-Entry "save-content" () 334 11 ("process-saved" "update-status" "set-modified?" "update-moniker-time" "print-to" "format" "get-title" "output-section" "false" "set!" "output-properties" "output-version" "get-description" "output-header" "when" "first?" "true" "set-printer-use-utf8?" "File-Printer" "new" "printer" "with-closed" "get-editor" "process-saving" "branch:" "get-client" "set-name" "get-form" "set-origin" "get-designer" "designer" "section" "name" "for-each-section" "get-base" "base" "let" "dynamic" "function" ":wait" "with-cursor" "moniker")}
        {Lisp-Entry "output-version" () 366 11 ("get-version" "format" "printer")}
        {Lisp-Entry "output-properties" () 370 11 ("null?" "if" "format" "get-properties" "properties" "let" "printer")}}}})
"Boolean-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Boolean-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Boolean-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Boolean-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "memq?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 62 11 ("if" "value")}
        {Lisp-Entry "setup-entry" () 73 11 ("parent:" "Boolean-Entry" "new" "client" "view")}}}})
"Boolean-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "entry" "Boolean-Entry.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.entry.Boolean-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Boolean-Entry" () 46 7 ("checkbox" "name:" "Property-Entry")
        {Lisp-Entry "get-value" () 59 11 ("checkbox" "locate" "get-checked?")}
        {Lisp-Entry "set-value" () 63 11 ("checkbox" "locate" "set-checked?" "value")}
        {Lisp-Entry "get-modified?" () 67 11 ("checkbox" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" () 71 11 ("checkbox" "locate" "set-modified?" "value")}}}})
"Boolean-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Boolean-Row.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.row.Boolean-Row" () 37 9 ("jazz")
      {Lisp-Entry "Boolean-Row" () 44 7 ("Object")}
      {Lisp-Entry "Boolean-Row" () 48 7 ("Combo-Row")
        {Lisp-Entry "initialize" () 51 11 ("set-choices" "nextmethod" "apply" "rest")}
        {Lisp-Entry "double-click" () 56 11 ("focus-editor" "value" "not" "set-edited-value" "enter-edited-value" "pos")}}}})
"Boolean-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Boolean-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Boolean-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Boolean-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-boolean" "invoke")}
        {Lisp-Entry "test-boolean" () 61 11 ("not" "" "ci=" "/=" "=" "rpt" "validate")}}}})
"Booter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "Booter.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.Booter" () 37 9 ("jazz")
      {Lisp-Entry "Booter" () 44 7 ("Object")
        {Lisp-Entry "boot-environment" () 47 23 ("boot-environment" "self" "eval-symbol" "new" "process" "else" "string->symbol" "cond" "name" "arg" "let*" "Home" "Jazz" "Boot" "find-alias" "Application" "get-system-property" "format" "message-box" "command-argument" "when" "rest")}}}})
"Border-Layout"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "layout" "Border-Layout.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.layout.Border-Layout" () 37 9 ("jazz")
      {Lisp-Entry "Border-Layout" () 45 7 ("Layout")
        {Lisp-Entry "layout" () 48 11 ("get-bottom" "get-right" "get-top" "get-left" "+" "center" "east" "get-width" "west" "decrease!" "-" "south" "increase!" "Dimension" "set-size" "Point" "new" "set-position" "get-size" "get-height" "let" "north" "get-location" "=" "when" "for-each" "bottom" "right" "top" "left" "docked" "reverse" "reversed" "get-visible?" "Figure" "is?" "and" "figure" "dynamic" "function" "collect-if" "visibles" "let*" "0" "Rect" "insets" "insets:" "height" "width" "figures")}}}})
"Border-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Border-View.fusion"} {Time 128369339220000000L}
    {Lisp-Entry "jazz.ui.view.Border-View" () 37 9 ("jazz")
      {Lisp-Entry "Border-View" () 49 7 ("fill" "layout-type:" "Layout-View")
        {Lisp-Entry "border-type" () 53 12 ("set-border-type" "get-border-type" "solid")}
        {Lisp-Entry "border-color" () 54 12 ("set-border-color" "get-border-color" "Black" "name:" "Color")}
        {Lisp-Entry "border-insets" () 55 12 ("set-border-insets" "get-border-insets" "1" "Rect")}
        {Lisp-Entry "style" () 56 12 ("set-style" "get-style")}
        {Lisp-Entry "get-border-type" () 68 18 ("border-type")}
        {Lisp-Entry "set-border-type" () 72 18 ("invalidate-borders" "recalculate-border-insets" "border-type" "set!" "type")}
        {Lisp-Entry "get-border-color" () 78 18 ("border-color")}
        {Lisp-Entry "set-border-color" () 82 18 ("invalidate-borders" "border-color" "set!" "color")}
        {Lisp-Entry "get-border-insets" () 87 18 ("border-insets")}
        {Lisp-Entry "set-border-insets" () 91 18 ("layout-view" "border-insets" "set!" "insets")}
        {Lisp-Entry "get-style" () 96 18 ("style")}
        {Lisp-Entry "set-style" () 100 18 ("recalculate-border-insets" "style" "set!" "value")}
        {Lisp-Entry "recalculate-border-insets" () 105 11 ("3" "shadow" "2" "else" "1" "entry" "style" "palette" "raised" "edge" "0" "Rect" "set-border-insets" "none" "border-type" "case")}
        {Lisp-Entry "add-child" () 117 11 ("layout-view" "View" "is?" "when" "nextmethod" "child")}
        {Lisp-Entry "fill-position" () 128 11 ("get-top" "border-insets" "get-left" "Point" "new" "nextmethod" "+")}
        {Lisp-Entry "fill-size" () 133 11 ("get-bottom" "get-top" "get-right" "border-insets" "get-left" "+" "Dimension" "new" "nextmethod" "-")}
        {Lisp-Entry "inner?" () 145 11 ("children" "memq?" "view")}
        {Lisp-Entry "invalidate-borders" () 154 11 ("border-insets" "insets:" "invalidate-border")}
        {Lisp-Entry "draw" () 163 11 ("+" "line" "Black" "Pen" "set-pen" "get-bottom" "get-right" "-" "0" "expand-rect" "shadow" "raised" "rectangle" "edges:" "2" "1" "border-insets" "get-left" "inner:" "sunken" "outer:" "draw-edge" "else" "Outline-Border" "inflate-rect" "inner" "outline/edge/flat?" "outline" "Entry-Border" "name:" "Color" "entry/edge/flat?" "get-element" "entry" "style" "=" "and" "cond" "get-look" "look" "let" "edge" "frame-rect" "border-color" "when" "solid" "unspecified" "none" "border-type" "case" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-children" () 192 11 ("top" "edges:" "raised" "inner:" "sunken" "outer:" "draw-edge" "get-bounds" "bounds" "with" "palette" "border-type" "case" "nextmethod" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "get-class-image" () 206 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-row-instance" () 210 11 ("nextmethod" "else" "Color-Row" "new" "border-color" "field-name" "case" "property")}}}})
"Box"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Box.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.utility.Box" () 37 9 ("jazz")
      {Lisp-Entry "Box" () 43 7 ("Object")
        {Lisp-Entry "boxed" () 46 15 ()}
        {Lisp-Entry "initialize" () 49 11 ("boxed~self" "set!" "nextmethod" "boxed")}
        {Lisp-Entry "print" () 54 11 ("self" "class-of" "type-name" "identifier-name" "format" "boxed" "not" "if" "readably" "printer")}
        {Lisp-Entry "get-boxed" () 68 18 ("boxed")}}}})
"Branch"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "component" "Branch.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.component.Branch" () 37 9 ("jazz")
      {Lisp-Entry "get-class-image" () 45 13 ("Bitmap-Resource")}
      {Lisp-Entry "get-name-mandatory?" () 50 13 ("true")}
      {Lisp-Entry "get-name-unicity?" () 55 13 ("true")}
      {Lisp-Entry "Branch" () 59 7 ("Component")
        {Lisp-Entry "client-form" () 62 12 ("set-client-form" "get-client-form")}
        {Lisp-Entry "client" () 65 8 ()}
        {Lisp-Entry "restore-form" () 66 8 ()}
        {Lisp-Entry "restoreable?" () 67 8 ("true")}
        {Lisp-Entry "install" () 70 11 ("default-client" "client" "set!" "nextmethod" "rest")}
        {Lisp-Entry "default-client" () 75 11 ("get-client" "Branch" "parent" "is?" "if")}
        {Lisp-Entry "get-client" () 86 18 ("client")}
        {Lisp-Entry "set-client" () 90 18 ("client" "set!" "clt")}
        {Lisp-Entry "get-client-form" () 94 18 ("client-form")}
        {Lisp-Entry "set-client-form" () 98 18 ("client-form" "set!" "form")}
        {Lisp-Entry "get-restore-form" () 102 18 ("restore-form")}
        {Lisp-Entry "get-restoreable?" () 106 18 ("restoreable?")}
        {Lisp-Entry "set-restoreable?" () 110 18 ("restoreable?" "set!" "value")}
        {Lisp-Entry "install-branch" () 119 11 ("nextmethod" "self" "parent" "install-branch" "br")}
        {Lisp-Entry "configure-client" () 124 21 ("parent" "set-branch" "creator" "client" "install-form" "client-form" "neq?" "configure-inherited" "configured" "let" "install" "action:" "self" "context:" "Restore-Form" "new" "restore-form" "set!" "restoreable?" "when")}
        {Lisp-Entry "configure-inherited" () 134 11 ("restore-form" "self" "creator" "client" "install-form" "client-form:" "get-property" "client-form" "when" "get-class-form" "form" "let")}
        {Lisp-Entry "configure-inherited" () 144 11 ("restore-form" "self" "creator" "client" "install-form" "neq?" "client-form:" "get-property" "client-form" "get-class-form" "form" "type-ascendant" "configure-inherited" "configured" "let" "Branch" "subtype?" "when" "model")}
        {Lisp-Entry "installed?" () 156 18 ("restore-form")}
        {Lisp-Entry "restore-client" () 165 21 ("set!" "restore-form" "client" "install-form" "parent" "set-branch" "restore-client" "branch" "when")}
        {Lisp-Entry "set-presentation" () 178 11 ("branch:" "string->symbol" "self" "set-name" "presentation" "designer")}
        {Lisp-Entry "display-property?" () 182 11 ("client-form" "field-name" "memq?" "not" "nextmethod" "and" "property")}}}})
"Branch-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Branch-Tester.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.suite.Branch-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Branch-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ()}}}})
"Branches-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "branch" "Branches-Editor.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.branch.Branches-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Branches-Editor" () 49 7 ("width:" "branch" "tree" "shown?:" "header" "content" "flat?:" "vscroll?:" "hscroll?:" "scroller" "on-new-default" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "Dimension" "size:" "new-default" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "external-name" () 65 16 ("branches-editor" "rest")}
        {Lisp-Entry "palette-class" () 75 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 80 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 85 16 ()}
        {Lisp-Entry "client-activate" () 89 11 ("get-designer" "set-designer" "get-client" "set-client" "set-editor" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "client-deactivate" () 97 11 ("set-designer" "set-client" "set-editor")}
        {Lisp-Entry "focus-default" () 108 11 ("auto-select-first" "acquire-focus" "locate" "tree" "let")}
        {Lisp-Entry "get-tools-view" () 114 11 ("tools" "locate")}
        {Lisp-Entry "install-in-host" () 123 11 ("2" "0" "Rect" "set-layout-insets" "fill" "get-root" "set-layout-type" "nextmethod" "host")}
        {Lisp-Entry "get-tree" () 134 18 ("tree" "locate")}
        {Lisp-Entry "on-new-default" () 143 11 ("new-default" "evt")}
        {Lisp-Entry "new-default" () 152 29 ("get-tree" "new-default-branch")}
        {Lisp-Entry "get-editor" () 161 18 ("get-tree" "get-editor")}
        {Lisp-Entry "set-editor" () 165 18 ("get-tree" "set-editor" "editor")}
        {Lisp-Entry "get-client" () 174 18 ("get-tree" "get-client")}
        {Lisp-Entry "set-client" () 178 18 ("get-tree" "set-client" "client")}
        {Lisp-Entry "get-designer" () 187 18 ("get-tree" "get-designer")}
        {Lisp-Entry "set-designer" () 191 18 ("get-tree" "set-designer" "designer")}}}})
"Branches-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "branch" "Branches-Tree.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.branch.Branches-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Branches-Tree" () 49 7 ("width:" "title:" "branch" "name:" "on-selection-change" "form:" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "multiple-selection?:" "Tree-View")
        {Lisp-Entry "editor" () 52 8 ()}
        {Lisp-Entry "client" () 53 8 ()}
        {Lisp-Entry "designer" () 54 8 ()}
        {Lisp-Entry "context-menu" () 67 11 ("track-popup-menu" "layout-menu" "action-handler:" "title:" "icon:" "Label-Item" "class:" "list" "properties:" "on-add-branch" "method-name:" "self" "target:" "Event-Handler" "handler" "title" "get-class-image" "icon" "Separator-Item" "class" "for-each" "parent:" "Context-Menu" "submenu" "get-class-presentation" "format" "set-title" "get-addable-default-branch" "default" "let" "true" "=" "if" "rename" "close" "Branch" "is-not?" "separator" "false" "set-visible?" "null?" "with-update-locked" "when" "selected-branch" "branch" "get-addable-branches" "client" "essay" "classes" "add" "locate" "item" "Branch-Menu" "new" "menu" "let*" "dynamic" "function" "with-context-click" "pos")}
        {Lisp-Entry "on-add-branch" () 103 11 ("add-branch" "selected-branch" "parent" "client" "get-addable-default-branch" "class:" "get-property" "either" "class" "let" "evt")}
        {Lisp-Entry "new-default-branch" () 109 18 ("add-branch" "selected-branch" "either" "parent" "get-addable-branches" "add-here?" "get-addable-default-branch" "class" "let*" "client" "when")}
        {Lisp-Entry "add-branch" () 118 18 ("rename-branch" "branch-index" "set-single-selection" "update-tree" "install" "action:" "false" "textual?:" "Form" "client-form:" "set-property" "branch:" "add-child" "editor" "get-designer" "designer" "parent:" "new" "branch" "get-branches" "branch-presentation-request" "presentation" "let" "parent" "class")}
        {Lisp-Entry "branch-presentation-request" () 131 29 (":validator" ":unicity-domain" "not" ":accepts-empty?" "get-class-presentation" "format" "title:" "request-string" "presentation" "branch-name-validator" "name-validator" "get-presentation" "component" "dynamic" "function" "map" "essay" "unicity-domain" "get-name-unicity?" "name-unicity?" "get-name-mandatory?" "name-mandatory?" "let*" "initial-value" "initial-value:" "brothers" "class")}
        {Lisp-Entry "branch-name-validator" () 140 29 ()}
        {Lisp-Entry "on-close-branch" () 144 11 ("delete-selection" "evt")}
        {Lisp-Entry "delete-selection" () 148 11 ("remove-branch" "bell" "Branch" "is-not?" "if" "selected-branch" "branch" "let")}
        {Lisp-Entry "remove-branch" () 155 29 ("update-tree" "remove-child" "select-branch" "editor" "get-designer" "designer" "get-client" "client" "let" "branch")}
        {Lisp-Entry "on-rename-branch" () 163 11 ("rename-selected-branch" "evt")}
        {Lisp-Entry "rename-selected-branch" () 167 11 ("rename-branch" "get-presentation" "initial-value:" "get-brothers" "class-of" "branch-presentation-request" "presentation" "selected-branch" "branch" "let*")}
        {Lisp-Entry "rename-branch" () 173 11 ("branch-index" "set-single-selection" "update-tree" "set-presentation" "editor" "get-designer" "designer" "get-client" "Branch" "is?" "if" "client" "let" "presentation" "branch")}
        {Lisp-Entry "on-branch-properties" () 181 11 ("true" ":select-palette?" "show-properties" "evt")}
        {Lisp-Entry "show-properties" () 185 11 ("workspace:" "Properties-Manager" "select-palette" "when" "focus?:" "true" "force?:" "self" "origin:" "list" "if" "editor" "set-selection" "selected-branch" "branch" "let" "false" "select-palette?" "select-palette?:")}
        {Lisp-Entry "maybe-show-properties" () 192 11 ("show-properties" "Branch" "is?" "get-client" "eq?" "car" "1" "length" "=" "and" "null?" "or" "get-selection" "selection" "selected-branch" "branch" "let" "editor" "when")}
        {Lisp-Entry "get-editor" () 209 18 ("editor")}
        {Lisp-Entry "set-editor" () 213 18 ("on-editor" "method-name:" "target:" "Event-Handler" "new" "add-editor-listener" "set!" "self" "remove-editor-listener" "editor" "/=" "when" "edt")}
        {Lisp-Entry "on-editor" () 222 11 ("branch:" "branch-changed" ":branch-changed" "designer:" "set-designer" ":designer-change" "client:" "get-property" "set-client" ":client-change" "get-kind" "case" "evt")}
        {Lisp-Entry "branch-changed" () 229 11 ("branch-index" "set-single-selection" "branch")}
        {Lisp-Entry "get-designer" () 238 18 ("designer")}
        {Lisp-Entry "set-designer" () 242 26 ("install-listener" "set!" "uninstall-listener" "designer" "/=" "when" "dsg")}
        {Lisp-Entry "install-listener" () 251 11 ("add-designer-listener" "on-designer" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "designer")}
        {Lisp-Entry "uninstall-listener" () 256 11 ("self" "remove-designer-listener" "designer")}
        {Lisp-Entry "on-designer" () 260 11 (":presentation" "component:" "get-property" "presentation-change" ":presentation-change" "get-kind" "case" "evt")}
        {Lisp-Entry "presentation-change" () 265 11 ("invalidate-cell" "get-cell-data" "set-title" "0" "Cell" "cell" "let" "client" "eq?" "when" "presentation" "component")}
        {Lisp-Entry "get-client" () 277 18 ("client")}
        {Lisp-Entry "set-client" () 281 18 ("update-selection" "update-tree" "set!" "client" "/=" "when" "clt")}
        {Lisp-Entry "update" () 293 11 ("update-selection" "update-tree")}
        {Lisp-Entry "update-tree" () 298 11 ("get-branches" "sort-branches" "insert-branch" "branch" "dynamic" "function" "for-each" "insert-client" "node" "let" "client" "when" "remove-every-row")}
        {Lisp-Entry "sort-branches" () 307 29 ("branches")}
        {Lisp-Entry "update-selection" () 311 11 ("set-single-selection" "either" "user-data-index" "index" "get-active-branch" "branch" "let*" "false" "generate-event?:" "set-selection" "client" "null?" "if")}
        {Lisp-Entry "insert-client" () 321 11 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "add-row" "component-image" "image" "client" "get-presentation" "title" "let")}
        {Lisp-Entry "insert-branch" () 327 11 ("sort-branches" "insert-branch" "child" "dynamic" "function" "for-each" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "father:" "add-row" "handle" "component-image" "image" "component-presentation" "title" "get-children" "children" "let" "branch" "node")}
        {Lisp-Entry "component-presentation" () 337 29 ("get-presentation" "component")}
        {Lisp-Entry "component-image" () 341 29 ("get-component-image" "component")}
        {Lisp-Entry "can-undo?" () 350 11 ("false")}
        {Lisp-Entry "can-redo?" () 354 11 ("false")}
        {Lisp-Entry "can-delete?" () 358 11 ("Branch" "is?" "selected-branch" "branch" "let")}
        {Lisp-Entry "on-selection-change" () 368 11 ("get-application" "update-focus-actions" "maybe-show-properties" "client" "selected-branch" "either" "select-branch" "evt")}
        {Lisp-Entry "selected-branch" () 374 18 ("get-row" "get-user-data" "when" "get-single-selection" "selection" "let")}
        {Lisp-Entry "select-branch" () 380 11 ("editor" "process-branch-changing" "dynamic" "function" ":wait" "with-cursor" "client" "get-active-branch" "either" "neq?" "and" "when" "branch")}
        {Lisp-Entry "branch-index" () 387 11 ("user-data-index" "branch")}}
      {Lisp-Entry "Branch-Menu" () 396 7 ("branch-properties" "properties" "rename-branch" "rename" "close-branch" "close" "separator" "add-branch" "branches-tree" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "add" "name:" "Context-Menu")}}})
"Branches-Tree-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "branch" "Branches-Tree-Actions.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.branch.Branches-Tree-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Branches-Tree-Actions" () 47 7 ("on-branch-properties" "properties" "F2" "on-rename-branch" "rename" "Delete" "Shortcut" "shortcut:" "on-close-branch" "close" "on-add-branch" ":focus" "Event-Handler" "action-handler:" "add" "name:" "Actions")}}})
"Branches-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "branch" "Branches-Viewer.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.branch.Branches-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "Branches-Viewer" () 48 7 ("width:" "branch" "tree" "shown?:" "header" "content" "flat?:" "vscroll?:" "hscroll?:" "scroller" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "palette-class" () 67 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 72 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 77 16 ()}
        {Lisp-Entry "client-activate" () 81 11 ("current-document" "set-client")}
        {Lisp-Entry "client-deactivate" () 85 11 ("set-client")}
        {Lisp-Entry "focus-default" () 94 11 ("auto-select-first" "acquire-focus" "locate" "tree" "let")}
        {Lisp-Entry "install-in-host" () 105 11 ("2" "0" "Rect" "set-layout-insets" "fill" "get-root" "set-layout-type" "nextmethod" "host")}
        {Lisp-Entry "get-tree" () 116 18 ("tree" "locate")}
        {Lisp-Entry "get-client" () 125 18 ("get-tree" "get-client")}
        {Lisp-Entry "set-client" () 129 18 ("get-tree" "set-client" "client")}}
      {Lisp-Entry "Viewer-Tree" () 138 7 ("width:" "title:" "branch" "name:" "on-selection-change" ":self" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "multiple-selection?:" "Tree-View")
        {Lisp-Entry "client" () 146 8 ()}
        {Lisp-Entry "get-client" () 154 18 ("client")}
        {Lisp-Entry "set-client" () 158 18 ("update-tree" "set!" "client" "/=" "when" "clt")}
        {Lisp-Entry "update-tree" () 164 11 ("get-branches" "insert-branch" "branch" "dynamic" "function" "for-each" "insert-client" "node" "let" "client" "when" "remove-every-row")}
        {Lisp-Entry "insert-client" () 173 11 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "add-row" "component-image" "image" "client" "get-presentation" "title" "let")}
        {Lisp-Entry "insert-branch" () 179 11 ("insert-branch" "child" "dynamic" "function" "for-each" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "father:" "add-row" "handle" "component-image" "image" "get-presentation" "title" "get-children" "children" "let" "branch" "node")}
        {Lisp-Entry "component-image" () 189 29 ("get-component-image" "component")}
        {Lisp-Entry "on-selection-change" () 198 11 ("client" "selected-branch" "either" "select-branch" "evt")}
        {Lisp-Entry "selected-branch" () 202 18 ("get-row" "get-user-data" "when" "get-single-selection" "selection" "let")}
        {Lisp-Entry "select-branch" () 208 11 ("client" "set-active-branch" "when" "branch")}}}})
"Break-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "break" "Break-Event.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.debugger.break.Break-Event" () 37 9 ("jazz")
      {Lisp-Entry "Break-Event" () 45 7 ("Event")}}})
"Break-Loop"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "loop" "Break-Loop.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.loop.Break-Loop" () 37 9 ("jazz")
      {Lisp-Entry "Break-Loop" () 45 7 ("Object")
        {Lisp-Entry "level" () 48 8 ("0")}
        {Lisp-Entry "type" () 49 8 ()}
        {Lisp-Entry "message" () 50 8 (":empty")}
        {Lisp-Entry "frame" () 51 8 ()}
        {Lisp-Entry "stack" () 52 8 ()}
        {Lisp-Entry "command" () 53 8 ()}
        {Lisp-Entry "get-level" () 56 18 ("level")}
        {Lisp-Entry "set-level" () 60 11 ("dynamic" "function" "execute-primary" "call-on-level-change" "level" "set!" "l")}
        {Lisp-Entry "get-type" () 68 18 ("type")}
        {Lisp-Entry "set-type" () 72 11 ("type" "set!" "t")}
        {Lisp-Entry "get-message" () 76 18 ("message")}
        {Lisp-Entry "set-message" () 80 11 ("level" "user-message" "clear-user-message" ":empty" "=" "if" "when" "message" "set!" "msg")}
        {Lisp-Entry "get-frame" () 88 18 ("frame")}
        {Lisp-Entry "set-frame" () 92 11 ("frame" "set!" "f")}
        {Lisp-Entry "get-frame-address" () 96 18 ("frame")}
        {Lisp-Entry "set-frame-address" () 100 11 ("new-frame" "get-application" "get-local-debuggee" "get-main-thread" "thread" "let" "frame" "set!" "not" "if" "address")}
        {Lisp-Entry "get-stack" () 107 18 ("stack")}
        {Lisp-Entry "set-stack" () 111 11 ("stack" "set!" "s")}
        {Lisp-Entry "get-command" () 115 11 ("command")}
        {Lisp-Entry "set-command" () 119 11 ("command" "set!" "cmd")}
        {Lisp-Entry "continuable-loop" () 123 11 ("true" "set!" "continue" "throw-toplevel" "toplevel" "throw-stop" "stop" "case" "set-command" "command" "cmd" "sleep" "process-one-message" "Stop-Signal" "catch" "if" "not" "while" "primary-thread?" "primary?" "false" "continue?" "get-process" "process" "let")}
        {Lisp-Entry "break-loop" () 140 18 ("set-frame" "continuable-loop" "when" "set-command" "1" "level" "+" "set-level" "set-message" "runtime-stack" "set-stack" "set-frame-address" "set-type" "begin" "unwind-protect" "level~self" "old-level" "stack~self" "old-stack" "frame~self" "old-frame" "message~self" "old-message" "type~self" "old-type" "let" "proc" "proc:" "frame" "frame:" "message" "message:" "break" "type" "type:")}
        {Lisp-Entry "stop" () 164 18 ("stop" "set-command")}
        {Lisp-Entry "toplevel" () 168 18 ("toplevel" "set-command")}
        {Lisp-Entry "continue" () 172 18 ("continue" "set-command")}
        {Lisp-Entry "level-change-listeners" () 181 8 ()}
        {Lisp-Entry "add-level-change-listener" () 184 18 ("add-listener" "level-change-listeners" "set!" "listener")}
        {Lisp-Entry "remove-level-change-listener" () 188 18 ("remove-listener" "level-change-listeners" "set!" "listener")}
        {Lisp-Entry "call-on-level-change" () 192 11 ("invoke" "listener" "dynamic" "function" "for-each" "self" ":level-change" "Break-Event" "new" "evt" "let" "level-change-listeners" "when")}}}})
"BrowseFolder-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "BrowseFolder-Dialog.fusion"} {Time 128360914360000000L}
    {Lisp-Entry "jazz.ui.dialog.BrowseFolder-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "BrowseFolder-Dialog" () 46 7 ("Dialog")
        {Lisp-Entry "get-modal" () 50 16 ("tokenise" "Directory" "anchorize" "adjust-string" "String" "coerce" "string" "SHGetPathFromIDList" "MAX_PATH" "size:" "Ansi-String" "path" "throw-cancel" "not" "SHBrowseForFolder" "items" "either" "lpszTitle" "get-browse-callback" "lpfn" "pidlRoot" "NULL" "get-handle" "if" "get-toplevel" "toplevel" "hwndOwner" "set" "BROWSEINFO" "new" "r" "parse" "set-current-directory" "get-current-directory" "set!" "when" "preserved" "let" "close-all-popups" "anchors" "anchors:" "directory" "directory:" "title" "title:")}}}})
"Build-Options"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "tools" "Build-Options.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.tools.Build-Options" () 37 9 ("jazz")
      {Lisp-Entry "Build-Options" () 45 7 ("force-link?" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "log?" "north" "location:" "6" "0" "Rect" "layout-insets:" "flow" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "View")}}})
"Build-Policies"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "policy" "Build-Policies.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.policy.Build-Policies" () 37 9 ("jazz")
      {Lisp-Entry "Build-Policies" () 47 7 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 59 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 63 11 ("false")}
        {Lisp-Entry "can-move-component?" () 67 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 71 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 75 11 ("Build-Policy" "list")}
        {Lisp-Entry "get-addable-details" () 80 11 ("sealed?" "distribution?" "generate-symbols?" "debug-executable?" "debug-c++-code?" "optimize?" "validate?" "name-info")}}}})
"Build-Policy"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "policy" "Build-Policy.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.policy.Build-Policy" () 37 9 ("jazz")
      {Lisp-Entry "Build-Policy" () 47 7 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "validate?" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "optimize?" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "debug-c++-code?" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "debug-executable?" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "generate-symbols?" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "distribution?" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "sealed?" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "get-domain" () 69 16 ("nextmethod" "else" "Boolean-Domain" "new" "sealed?" "distribution?" "generate-symbols?" "debug-executable?" "debug-c++-code?" "optimize?" "validate?" "field-name" "case" "property")}
        {Lisp-Entry "property-presentation" () 81 16 ("nextmethod" "else" "sealed?" "distribution?" "generate-symbols?" "debug-executable?" "debug-c++-code?" "optimize?" "validate?" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 93 11 ("sealed?" "distribution?" "generate-symbols?" "debug-executable?" "debug-c++-code?" "optimize?" "validate?")}
        {Lisp-Entry "get-row-instance" () 98 11 ("nextmethod" "else" "Boolean-Row" "new" "sealed?" "distribution?" "generate-symbols?" "debug-executable?" "debug-c++-code?" "optimize?" "validate?" "field-name" "case" "property")}}}})
"Build-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "preferences" "Build-Preferences.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.preferences.Build-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Build-Preferences" () 47 7 ("policies" "name:" "title:" "Preferences")
        {Lisp-Entry "cpp-builder" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "active-project" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "active-policy" () 52 12 ("generate" "accessors")}}}})
"C-Definition-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "C-Definition-Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.C-Definition-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "C-Definition-Declaration" () 40 7 ("Declaration")
        {Lisp-Entry "signature" () 43 8 ()}}}})
"C-Type-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "C-Type-Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.C-Type-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "C-Type-Declaration" () 40 7 ("Declaration")
        {Lisp-Entry "expansion" () 43 8 ()}
        {Lisp-Entry "references" () 44 8 ()}}}})
"CDispatcher"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "CDispatcher.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.CDispatcher" () 37 9 ("jazz")
      {Lisp-Entry "CDispatcher" () 44 7 ("S_OK" "invoke-event-handler" "Invoke" "argerr" "exception" "result" "params" "DISPPARAMS&" "flags" "riid" "dispid" "GetIDsOfNames" "names-count" "names" "reserved" "GetTypeInfo" "lcid" "info" "int" "E_NOTIMPL" "GetTypeInfoCount" "debug-ole" "int&" "GUID" "guid:" "WinIDL" "WinError" "OLE" "System" "Utilities" "IDispatch" "CoObject")
        {Lisp-Entry "event-handlers" () 50 8 ()}
        {Lisp-Entry "register-event-handler" () 58 18 ("cons" "event-handlers" "set!" "event-handler" "dispid")}
        {Lisp-Entry "unregister-event-handler" () 62 18 ("car" "key:" "remove!" "event-handlers" "set!" "dispid")}
        {Lisp-Entry "GetTypeInfoCount" () 71 17 ()}
        {Lisp-Entry "GetTypeInfo" () 76 17 ()}
        {Lisp-Entry "GetIDsOfNames" () 81 17 ()}
        {Lisp-Entry "Invoke" () 86 17 ()}
        {Lisp-Entry "invoke-event-handler" () 92 11 ("invoke" "self" ":dispatch" "Dispatch-Event" "new" "evt" "cdr" "event-handler" "when" "event-handlers" "assq" "event-handler-info" "let" "params" "flags" "dispid")}}}})
"COM"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "COM.fusion"} {Time 128360666680000000L}
    {Lisp-Entry "COM" () 37 9 ("jazz")}})
"CPS"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "scheme" "CPS.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "CPS" () 37 9 ("jazz")}})
"CSS-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "css" "CSS-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.css.CSS-Entry" () 37 9 ("jazz")
      {Lisp-Entry "CSS-Entry" () 45 7 ("Indexed-Entry")
        {Lisp-Entry "construct-literal" () 49 16 ("self" "new" "column" "line" "name" "context")}
        {Lisp-Entry "initialize" () 53 11 ("nextmethod" "column" "line" "name")}
        {Lisp-Entry "print-catalog" () 57 11 ("column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 69 11 ("Bitmap-Resource")}}}})
"CSS-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "css" "CSS-File-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.css.CSS-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "CSS-File-Entry" () 45 7 ("File-Entry")
        {Lisp-Entry "get-image" () 48 11 ("Bitmap-Resource")}}}})
"CSS-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "css" "CSS-Parser.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.css.CSS-Parser" () 37 9 ("jazz")
      {Lisp-Entry "CSS-Parser" () 45 7 ("File-Parser")
        {Lisp-Entry "parse" () 48 11 ("catalog" "CSS-File-Entry" "new" "parse-definitions" "definitions" "let" "time" "file")}
        {Lisp-Entry "parse-definitions" () 53 11 ("get-output" "length" "0" "naturals" "put" "when" "parse-line" "entry" "no" "line" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "parse-line" () 65 11 ("+" "CSS-Entry" "new" "split-selector" "offset" "name" "receive" "subseq" "selector" "end" "let*" ">" "start:" "css-constituent?" "skip" "start" "0" "=" "when" "skip-whitespace" "col" "let" "no" "line")}
        {Lisp-Entry "split-selector" () 77 11 ("+" "else" "1" "subseq" "=" "0" "values" "null?" "cond" "position" "return:" "find" "pos" "let" "selector")}
        {Lisp-Entry "css-constituent?" () 87 11 ("=" "alphanumeric?" "or" "char")}}}})
"CSS-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "css" "CSS-Text-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.css.CSS-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "CSS-Text-Preferences" () 47 7 ("Dark-Blue" "keyword-color:" "definition-color:" "Purple" "balanced-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "CppJava-Text-Preferences")}}})
"CSS-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "css" "CSS-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.css.CSS-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "CSS-Text-View" () 46 7 ("CppJava-Text-View")
        {Lisp-Entry "install" () 49 11 ("get-keyword-color" "Keyword" "get-definition-color" "Definition" "get-balanced-comment-color" "Balanced-Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 59 16 ("css-text" "rest")}
        {Lisp-Entry "preferences" () 63 11 ("css-text" "documents" "get-preferences")}
        {Lisp-Entry "favorite-completions" () 72 11 ("preferences" "get-completions")}
        {Lisp-Entry "Syntax-Targets" () 81 14 ()}
        {Lisp-Entry "Syntax-Automata" () 84 14 ()}
        {Lisp-Entry "syntax-targets" () 88 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 94 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 100 11 ("get-keywords" "keyword" "str" "dynamic" "function" "map" "balanced-comment-backward" "false" "balanced-comment" "list" "append")}
        {Lisp-Entry "colorize-type" () 106 11 ("Keyword" "colorize-keyword" "keyword" "colorize-balanced-comment-backward" "balanced-comment-backward" "Balanced-Comment" "colorize-balanced-comment" "balanced-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "Keywords" () 118 12 ()}
        {Lisp-Entry "get-keywords" () 122 11 ("Keywords")}}}})
"CSharp-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "CSharp-Text-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.CSharp-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "CSharp-Text-Preferences" () 47 7 ("completions:" "keywords:" "Dark-Orange" "user-macro-color:" "user-keyword-color:" "Dark-Blue" "keyword-color:" "Dark-Green" "balanced-comment-color:" "Purple" "line-comment-color:" "title-color:" "Dark-Red" "name:" "Color" "definition-color:" "title:" "CppJava-Text-Preferences")}}})
"CSharp-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "CSharp-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.CSharp-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "CSharp-Text-View" () 45 7 ("CppJava-Text-View")
        {Lisp-Entry "external-name" () 49 16 ("csharp-text" "rest")}
        {Lisp-Entry "preferences" () 53 11 ("csharp-text" "documents" "get-preferences")}
        {Lisp-Entry "frame-workspaces" () 62 11 ("text")}
        {Lisp-Entry "favorite-completions" () 71 11 ("csharp-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "get-first-special?" () 80 11 ("false")}
        {Lisp-Entry "Keywords" () 89 12 ()}
        {Lisp-Entry "get-keywords" () 125 11 ("Keywords")}
        {Lisp-Entry "get-user-macros" () 134 11 ("csharp-text" "documents" "get-preferences" "get-macros" "user")}
        {Lisp-Entry "get-user-keywords" () 138 11 ("csharp-text" "documents" "get-preferences" "get-keywords" "user")}
        {Lisp-Entry "get-user-types" () 142 11 ("csharp-text" "documents" "get-preferences" "get-types" "user")}
        {Lisp-Entry "Syntax-Targets" () 151 14 ()}
        {Lisp-Entry "Syntax-Automata" () 154 14 ()}
        {Lisp-Entry "syntax-targets" () 158 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 164 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "colorize-entries" () 170 11 ()}}}})
"Cairo-Client-Surface"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Cairo-Client-Surface.fusion"} {Time 128360915100000000L}
    {Lisp-Entry "jazz.ui.graphic.Cairo-Client-Surface" () 38 9 ("jazz")
      {Lisp-Entry "Cairo-Client-Surface" () 48 7 ("Cairo-Win32-Surface")
        {Lisp-Entry "window" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("get-handle" "GetDC" "nextmethod" "window" "set!" "wnd")}
        {Lisp-Entry "destroy-hdc" () 60 11 ("hdc" "window" "get-handle" "ReleaseDC")}}}})
"Cairo-Image-Surface"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "cairo" "Cairo-Image-Surface.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.cairo.Cairo-Image-Surface" () 0 9 ("jazz")
      {Lisp-Entry "Cairo-Image-Surface" () 8 7 ("Cairo-Surface")
        {Lisp-Entry "initialize" () 10 11 ("nextmethod" "0" "cairo_image_surface_create" "set-surface" "rest" "height" "width" "self")}
        {Lisp-Entry "change-size" () 15 18 ("0" "cairo_image_surface_create" "set-surface" "get-surface" "cairo_surface_destroy" "get-context" "cairo_destroy" "height" "width" "self")}
        {Lisp-Entry "set-offset" () 20 18 ("exact->inexact" "get-surface" "cairo_surface_set_device_offset" "y" "x" "self")}}}})
"Cairo-Memory-Surface"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Cairo-Memory-Surface.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Cairo-Memory-Surface" () 0 9 ("jazz")
      {Lisp-Entry "Cairo-Memory-Surface" () 9 7 ("Cairo-Win32-Surface")
        {Lisp-Entry "size" () 12 8 ()}
        {Lisp-Entry "initialize" () 15 11 ("size~self" "set!" "nextmethod" "get-height" "get-width" "0" "cairo_image_surface_create" "surface" "let*" "Dimension" "size" "size:" "compatibility-dc")}
        {Lisp-Entry "get-size" () 21 11 ("size")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "cairo" "Cairo-Memory-Surface.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.cairo.Cairo-Memory-Surface" () 0 9 ("jazz")
      {Lisp-Entry "Cairo-Memory-Surface" () 8 7 ("Cairo-Surface")
        {Lisp-Entry "linked-surface" () 10 8 ("generate")}
        {Lisp-Entry "initialize" () 12 11 ("nextmethod" "set-linked-surface" "exact->inexact" "get-surface" "cairo_surface_create_similar" "set-surface" "surface" "height" "width" "self")}
        {Lisp-Entry "change-size" () 17 18 ("get-linked-surface" "cairo_surface_create_similar" "set-surface" "get-surface" "cairo_surface_destroy" "get-context" "cairo_destroy" "height" "width" "self")}
        {Lisp-Entry "set-offset" () 22 18 ("exact->inexact" "get-surface" "cairo_surface_set_device_offset" "y" "x" "self")}}}})
"Cairo-Surface"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "cairo" "Cairo-Surface.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.cairo.Cairo-Surface" () 0 9 ("jazz")
      {Lisp-Entry "Cairo-Surface" () 8 7 ("Object")
        {Lisp-Entry "clipper-rect" () 11 8 ("generate")}
        {Lisp-Entry "width" () 13 8 ("generate")}
        {Lisp-Entry "height" () 14 8 ("generate")}
        {Lisp-Entry "surface" () 15 8 ("generate")}
        {Lisp-Entry "context" () 16 8 ("generate")}
        {Lisp-Entry "glyph-array" () 18 8 ("generate")}
        {Lisp-Entry "array-length" () 19 8 ("generate")}
        {Lisp-Entry "initialize" () 22 11 ("Rect" "new" "setup-clipper" "0" "set-array-length" "set-glyph-array" "get-surface" "cairo_create" "set-context" "set-height" "set-width" "rest" "height" "width" "self")}
        {Lisp-Entry "destroy" () 31 11 ("free-glyph-array" "glyph-array" "when" "get-surface" "cairo_surface_destroy" "get-context" "cairo_destroy" "self")}
        {Lisp-Entry "with-saved-context" () 43 11 ("cairo_restore" "result" "let" "get-context" "cairo_save" "thunk" "self")}
        {Lisp-Entry "reset-clipper" () 56 18 ("get-context" "cairo_reset_clip" "self")}
        {Lisp-Entry "setup-clipper" () 60 18 ("set-clipper-rect" "clipper" "self")}
        {Lisp-Entry "get-clipper" () 64 18 ("get-bottom" "get-right" "get-top" "get-clipper-rect" "get-left" "Rect" "new" "self")}
        {Lisp-Entry "set-clipper" () 72 18 ("select-clipper" "get-bottom" "set-bottom" "get-right" "set-right" "get-top" "set-top" "get-left" "get-clipper-rect" "set-left" "rect" "self")}
        {Lisp-Entry "select-clipper" () 80 18 ("cairo_clip" "draw-rectangle" "get-context" "cairo_reset_clip" "rect" "self")}
        {Lisp-Entry "with-transform" () 92 18 ("cairo_set_matrix" "cairo_scale" "cairo_translate" "begin" "rect-intersection!" "set-clipper" "get-clipper" "old-clipper" "Rect" "new" "clipper" "cairo_identity_matrix" "get-context" "cairo_get_matrix" "cairo_matrix_t-make" "old-matrix" "let" "cheight" "1" "cwidth" "cv" "*" "+" "not" "if" "ch" "dv" "-" "dh" "let*" "proc" "sc?" "sc" "sv" "sh" "height" "width" "lv" "lh" "self")}
        {Lisp-Entry "get-text-extent" () 139 18 ("cairo_font_extents_t-height-ref" "cairo_text_extents_t-x_advance-ref" "Dimension" "new" "get-context" "cairo_text_extents" "get-text-metrics" "metrics" "cairo_text_extents_t-make" "extents" "let" "text" "self")}
        {Lisp-Entry "get-font-height" () 146 18 ("cairo_font_extents_t-height-ref" "get-context" "cairo_font_extents" "cairo_font_extents_t-make" "extents" "let" "self")}
        {Lisp-Entry "get-text-metrics" () 152 18 ("get-context" "cairo_font_extents" "cairo_font_extents_t-make" "info" "let" "self")}
        {Lisp-Entry "cairo_extents->dimension" () 158 18 ("cairo_text_extents_t-height-ref" "cairo_text_extents_t-width-ref" "Dimension" "new" "extents" "self")}
        {Lisp-Entry "get-text-width" () 162 18 ("cairo_text_extents_t-x_advance-ref" "get-context" "cairo_text_extents" "cairo_text_extents_t-make" "extents" "let" "text" "self")}
        {Lisp-Entry "draw-text" () 168 18 ("cairo_show_glyphs" "cairo_text_extents_t-x_advance-ref" "set!" "1" "cairo_glyph_extents" "cairo_glyph_t-y-set!" "exact->inexact" "cairo_glyph_t-x-set!" "string-ref" "char->integer" "-" "cairo_glyph_t-index-set!" "glyph-array-ref" "glyph" "0" "i" "iterate" "cairo_font_extents_t-ascent-ref" "+" "y" "get-context" "cairo_font_extents" "set-array-length" "2" "*" "alloc-glyph-array" "set-glyph-array" "free-glyph-array" "get-glyph-array" "when" "begin" "get-array-length" "" "if" "string-length" "lgt" "cairo_text_extents_t-make" "extents" "cairo_font_extents_t-make" "font-ext" "uph" "let" "rest" "string" "v" "h" "self")}
        {Lisp-Entry "fill-region" () 219 18 ("cdr" "car" "fill-rect" "null?" "not" "when" "get-rectangles" "rects" "iterate" "let" "color" "region" "self")}
        {Lisp-Entry "gradient-fill" () 226 18 ("cairo_pattern_destroy" "fill" "get-context" "cairo_set_source" "draw-rectangle" "1" "0" "add-color-stop-rgb" "get-right" "get-left" "cairo_pattern_create_linear" "pattern" "2" "get-top" "get-bottom" "-" "/" "mid" "let*" "lambda" "with-saved-context" "rest" "end" "start" "rect" "self")}
        {Lisp-Entry "fill-rect" () 239 18 ("fill" "draw-rectangle" "set-color" "lambda" "with-saved-context" "color" "rect" "self")}
        {Lisp-Entry "ellipse" () 252 18 ("fill" "stroke-preserve" "get-width" "Pen" "and" "set-line-width" "get-color-for-object" "Color" "is?" "set-color" "begin" "if" "M_PI" "*" "1" "0" "cairo_arc" "cairo_scale" "2" "/" "+" "get-context" "cairo_translate" "h" "-" "w" "get-bottom" "bottom" "get-top" "top" "get-right" "right" "get-left" "left" "let" "lambda" "with-saved-context" "inside" "outside" "rect" "self")}
        {Lisp-Entry "draw-edge" () 285 18 ("2" "-" "Draw-Edge-Light" "Draw-Edge-Medium" "1" "+" "line" "memq?" "Draw-Edge-Dark" "sunken" "White" "set-color" "raised" "begin" "and" "cond" "set-line-width" "get-bottom" "get-top" "get-right" "get-left" "lambda" "with-saved-context" "bottom" "top" "right" "left" "eq?" "if" "let" "outer" "outer:" "inner" "inner:" "rectangle" "edges" "edges:" "rect" "self")}
        {Lisp-Entry "draw-arrow-tip" () 350 18 ("right" "height" "left" "down" "0" "naturals" "2" "line" "n" "for-each" "set!" "+" "-" "width" "let" "up" "case" "1" "set-line-width" "lambda" "with-saved-context" "direction" "size" "v" "h" "self")}
        {Lisp-Entry "draw-scroll-bar" () 391 18 ("4" "get-top" "3" "get-left" "+" "draw-arrow-tip" "Black" "0" "else" "dv" "down" "up" "2" "right" "1" "left" "eq?" "cond" "dh" "let" "rectangle" "edges:" "outer:" "raised" "inner:" "draw-edge" "fill" "Draw-Edge-Light" "set-color" "draw-rectangle" "lambda" "with-saved-context" "direction" "rect" "self")}
        {Lisp-Entry "draw-caption" () 409 18 ("9" "maximize" "8" "move-to-rel" "0" "line-to-rel" "restore" "6" "line-to" "5" "minimize" "stroke" "line-to-no-stroke" "3" "4" "move-to" "set-line-width" "close" "eq?" "cond" "Black" "raised" "outer:" "-" "1" "+" "Rect" "new" "rectangle" "edges:" "sunken" "inner:" "draw-edge" "begin" "if" "fill" "Draw-Edge-Light" "set-color" "draw-rectangle" "get-bottom" "bottom" "get-top" "top" "get-right" "right" "get-left" "left" "let" "lambda" "with-saved-context" "pushed?" "type" "rect" "self")}
        {Lisp-Entry "draw-radio-button" () 471 18 ("Black" "when" "Draw-Edge-Light" "Draw-Edge-Dark" "stroke" "Draw-Edge-Medium" "7" "4" "3" "1" "set-line-width" "fill" "White" "Light-Background" "if" "set-color" "M_PI" "*" "0" "get-context" "cairo_arc" "r" "get-bottom" "get-top" "y" "2" "get-right" "-" "/" "get-left" "+" "x" "let" "lambda" "with-saved-context" "selected?" "selected?:" "inactive?" "inactive?:" "rect" "self")}
        {Lisp-Entry "draw-push-button" () 501 18 ("stroke" "line-to-no-stroke" "move-to" "White" "2" "+" "Draw-Edge-Medium" "get-bottom" "get-right" "-" "get-top" "get-left" "line" "Draw-Edge-Dark" "set-color" "begin" "if" "1" "set-line-width" "lambda" "with-saved-context" "false" "pushed?" "rect" "self")}
        {Lisp-Entry "bit-blit" () 535 18 ("cairo_restore" "fill" "cairo_rectangle" "get-surface" "cairo_set_source_surface" "cairo_save" "get-context" "dest-context" "let" "h" "w" "y" "x" "dest-surface" "self")}
        {Lisp-Entry "draw-check" () 547 18 ("stroke" "7" "4" "6" "3" "1" "5" "2" "0" "+" "line" "v" "h" "self")}
        {Lisp-Entry "draw-raised" () 558 18 ("line-to" "Dark-Pen" "stroke" "get-right" "get-top" "line-to-no-stroke" "1" "get-bottom" "-" "get-left" "move-to" "Light-Background-Pen" "set-pen" "lambda" "with-saved-context" "rect" "self")}
        {Lisp-Entry "with-outside/inside" () 572 11 ("fill" "stroke-preserve" "1" "get-width" "Pen" "and" "set-line-width" "get-color" "Color" "is?" "set-color" "begin" "if" "lambda" "with-saved-context" "procedure" "inside" "outside" "self")}
        {Lisp-Entry "frame-rect" () 594 18 ("stroke" "get-bottom" "get-right" "-" "get-top" "get-left" "+" "Rect" "new" "draw-rectangle" "set-color" "1" "set-line-width" "lambda" "with-saved-context" "color" "rect" "self")}
        {Lisp-Entry "rectangle" () 608 18 ("draw-rectangle" "lambda" "with-outside/inside" "inside" "outside" "rect" "self")}
        {Lisp-Entry "set-pen" () 619 18 ("get-color" "set-color" "get-width" "set-line-width" "pen" "self")}
        {Lisp-Entry "add-color-stop-rgb" () 629 11 ("get-blue" "get-green" "get-red" "cairo_pattern_add_color_stop_rgb" "color" "offset" "pattern" "self")}
        {Lisp-Entry "draw-rectangle" () 633 18 ("get-context" "cairo_rectangle" "get-bottom" "h" "get-right" "-" "w" "get-top" "y" "get-left" "exact->inexact" "x" "let" "rect" "self")}
        {Lisp-Entry "move-to" () 641 18 ("exact->inexact" "get-context" "cairo_move_to" "y" "x" "surface")}
        {Lisp-Entry "line-to" () 645 18 ("stroke" "line-to-no-stroke" "v" "h" "self")}
        {Lisp-Entry "line-to-rel" () 650 18 ("exact->inexact" "get-context" "cairo_rel_line_to" "dv" "dh" "self")}
        {Lisp-Entry "move-to-rel" () 654 18 ("exact->inexact" "get-context" "cairo_rel_move_to" "dv" "dh" "self")}
        {Lisp-Entry "line-to-preserve" () 658 18 ("stroke-preserve" "line-to-no-stroke" "v" "h" "self")}
        {Lisp-Entry "line-to-no-stroke" () 663 18 ("exact->inexact" "get-context" "cairo_line_to" "+" "move-to" "begin" "=" "if" "let" "get-current-point" "cur-v" "cur-h" "receive" "v" "h" "self")}
        {Lisp-Entry "line" () 678 18 ("line-to" "move-to" "dest-v" "dest-h" "v" "h" "self")}
        {Lisp-Entry "set-color" () 683 18 ("get-blue" "get-green" "get-red" "exact->inexact" "get-context" "cairo_set_source_rgb" "color" "surface")}
        {Lisp-Entry "stroke" () 688 18 ("get-context" "cairo_stroke" "surface")}
        {Lisp-Entry "stroke-preserve" () 692 18 ("get-context" "cairo_stroke_preserve" "self")}
        {Lisp-Entry "paint" () 696 18 ("get-context" "cairo_paint" "self")}
        {Lisp-Entry "fill" () 700 18 ("get-context" "cairo_fill" "self")}
        {Lisp-Entry "select-font" () 704 18 ("get-context" "cairo_select_font_face" "weight" "slant" "family" "surface")}
        {Lisp-Entry "set-line-width" () 708 18 ("exact->inexact" "get-context" "cairo_set_line_width" "w" "self")}
        {Lisp-Entry "get-current-point" () 712 18 ("values" "cairo_free_point" "get-point-y" "y" "get-point-x" "x" "get-context" "cairo_current_point" "point" "let*" "self")}
        {Lisp-Entry "set-font" () 720 18 ("get-size" "exact->inexact" "cairo_set_font_size" "get-color" "set-color" "get-cairo-handle" "get-context" "cairo_set_font_face" "font" "self")}
        {Lisp-Entry "write-text" () 726 18 ("get-context" "cairo_show_text" "str" "surface")}
        {Lisp-Entry "get-status" () 730 18 ("get-context" "cairo_status" "surface")}
        {Lisp-Entry "new-context" () 734 18 ("get-surface" "cairo_create" "set-context" "get-context" "cairo_destroy" "self")}}
      {Lisp-Entry "naturals" () 743 13 ("1" "+" "naturals" "cons" "=" "if" "to" "from")}}})
"Cairo-Win32-Surface"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Cairo-Win32-Surface.fusion"} {Time 128370216840000000L}
    {Lisp-Entry "jazz.ui.graphic.Cairo-Win32-Surface" () 38 9 ("jazz")
      {Lisp-Entry "Cairo-Win32-Surface" () 52 7 ("Surface")
        {Lisp-Entry "clipper" () 55 8 ()}
        {Lisp-Entry "surface" () 57 8 ()}
        {Lisp-Entry "hdc" () 58 8 ()}
        {Lisp-Entry "context" () 59 8 ()}
        {Lisp-Entry "highlight-color" () 61 8 ()}
        {Lisp-Entry "dash-array" () 63 8 ()}
        {Lisp-Entry "empty-array" () 64 8 ()}
        {Lisp-Entry "glyph-array" () 66 8 ()}
        {Lisp-Entry "array-length" () 67 8 ("0")}
        {Lisp-Entry "initialize" () 70 11 ("destroy-mandatory" "cairo_create" "context~self" "cairo_win32_surface_get_dc" "hdc~self" "surface~self" "set!" "nextmethod" "rest" "surface")}
        {Lisp-Entry "destroy" () 78 11 ("nextmethod" "destroy-context" "destroy-surface")}
        {Lisp-Entry "new-context" () 84 18 ("surface" "cairo_create" "context" "set!" "destroy-context")}
        {Lisp-Entry "destroy-surface" () 89 29 ("set!" "cairo_surface_destroy" "surface" "when")}
        {Lisp-Entry "destroy-context" () 95 29 ("set!" "cairo_destroy" "context" "when")}
        {Lisp-Entry "cairo-finish" () 102 18 ("surface" "cairo_surface_finish")}
        {Lisp-Entry "get-context" () 111 18 ("context")}
        {Lisp-Entry "get-surface" () 115 18 ("surface")}
        {Lisp-Entry "logical->device" () 124 18 ("1" "0" "double-array-ref" "new" "get-v" "get-h" "exact->inexact" "context" "cairo_user_to_device" "array" "let" "Point" "typecase" "shape")}
        {Lisp-Entry "device->logical" () 131 18 ("get-bottom" "get-right" "array2" "get-top" "get-left" "array1" "Rect" "1" "0" "double-array-ref" "new" "get-v" "get-h" "exact->inexact" "context" "cairo_device_to_user" "array" "let" "Point" "typecase" "shape")}
        {Lisp-Entry "with-saved-context" () 147 11 ("cairo_restore" "result" "let" "context" "cairo_save" "thunk")}
        {Lisp-Entry "setup-clipper" () 159 18 ("clipper~self" "set!" "clipper")}
        {Lisp-Entry "get-clipper" () 163 18 ("get-bottom" "get-right" "get-top" "clipper" "get-left" "Rect" "new")}
        {Lisp-Entry "set-clipper" () 170 18 ("select-clipper" "get-bottom" "set-bottom" "get-right" "set-right" "get-top" "set-top" "get-left" "clipper" "set-left" "rect")}
        {Lisp-Entry "select-clipper" () 178 18 ("cairo_clip" "draw-rectangle" "context" "cairo_reset_clip" "rect")}
        {Lisp-Entry "with-clipper" () 184 18 ("when" "true" "set!" "set-clipper" "begin" "unwind-protect" "false" "selected?" "let" "rect-intersection" "new-clipper" "get-clipper" "old-clipper" "with" "with-clipper" "unimplemented" "proc" "clip-rect")}
        {Lisp-Entry "with-transform" () 211 18 ("cairo_set_matrix" "cairo_scale" "exact->inexact" "cairo_translate" "begin" "set-clipper" "rect-intersection" "new-clipper" "get-clipper" "old-clipper" "Rect" "new" "clipper" "cairo_identity_matrix" "context" "cairo_get_matrix" "cairo_matrix_t-make" "old-matrix" "let" "cheight" "ceil" "1" "cwidth" "cv" "*" "+" "floor" "not" "if" "ch" "dv" "-" "dh" "let*" "proc" "sc?" "sc" "sv" "sh" "height" "width" "lv" "lh" "drawing")}
        {Lisp-Entry "set-text-color" () 241 18 ("set-color" "color")}
        {Lisp-Entry "get-char-widths" () 245 18 ("cairo_text_extents_t-x_advance-ref" "round" "context" "cairo_glyph_extents" "cairo_glyph_t-y-set!" "exact->inexact" "cairo_glyph_t-x-set!" "cairo_glyph_t-index-set!" "begin" "int-array-set!" "" "if" "do" "to" "from" "i" "for" "loop" "1" "-" "+" "alloc-int-array" "array" "cairo_glyph_t-make" "gly" "cairo_text_extents_t-make" "ext" "let" "last" "last:" "0" "first" "first:")}
        {Lisp-Entry "get-text-extent" () 263 18 ("cairo_font_extents_t-height-ref" "cairo_text_extents_t-x_advance-ref" "round" "Dimension" "new" "context" "cairo_text_extents" "get-text-metrics" "metrics" "cairo_text_extents_t-make" "extents" "with" "text")}
        {Lisp-Entry "get-font-height" () 272 18 ("cairo_font_extents_t-height-ref" "round" "context" "cairo_font_extents" "cairo_font_extents_t-make" "extents" "with")}
        {Lisp-Entry "get-text-metrics" () 278 18 ("context" "cairo_font_extents" "cairo_font_extents_t-make" "info" "let")}
        {Lisp-Entry "cairo_extents->dimension" () 284 18 ("cairo_text_extents_t-height-ref" "cairo_text_extents_t-width-ref" "ceil" "Dimension" "new" "extents")}
        {Lisp-Entry "get-text-width" () 290 18 ("cairo_text_extents_t-x_advance-ref" "ceil" "context" "cairo_text_extents" "cairo_text_extents_t-make" "extents" "with" "text")}
        {Lisp-Entry "with-highlight-color" () 296 18 ("result" "set!" "highlight-color" "old-color" "let" "proc" "color")}
        {Lisp-Entry "draw-text" () 304 18 ("round" "cairo_show_glyphs" "height" "get" "Rect" "new" "fill-rect" "highlight-color" "cairo_text_extents_t-x_advance-ref" "1" "get-context" "cairo_glyph_extents" "cairo_glyph_t-y-set!" "exact->inexact" "cairo_glyph_t-x-set!" "cairo_glyph_t-index-set!" "string-ref" "char->integer" "-" "ch" "glyph-array-ref" "glyph" "when" "0" "i" "iterate" "cairo_font_extents_t-ascent-ref" "+" "y" "context" "cairo_font_extents" "2" "*" "alloc-glyph-array" "set!" "free-glyph-array" "glyph-array" "begin" "array-length" "" "length" "lgt" "cairo_text_extents_t-make" "extents" "cairo_font_extents_t-make" "font-ext" "uph" "coerce-string" "string?" "if" "let" "rest" "str" "v" "h")}
        {Lisp-Entry "draw-tabbed-text" () 335 18 ("-" "cdr" "1" "car" "" "while" "subseq!" "draw-text" "+" "set!" "=" "not" "element" "eq?" "when" "length" "below" "from" "i" "for" "loop" "tab" "0" "beginning" "uph" "let" "origin" "tab-stops" "str" "v" "h")}
        {Lisp-Entry "fill-region" () 352 18 ("fill-rect" "do" "get-rectangles" "in" "rect" "for" "loop" "color" "region")}
        {Lisp-Entry "gradient-fill" () 357 18 ("cairo_pattern_destroy" "fill" "context" "cairo_set_source" "draw-rectangle" "1" "0" "add-color-stop-rgb" "get-right" "get-left" "exact->inexact" "cairo_pattern_create_linear" "pattern" "2" "get-top" "get-bottom" "-" "/" "mid" "let*" "dynamic" "function" "with-saved-context" "rest" "end" "start" "rect")}
        {Lisp-Entry "ellipse" () 370 18 ("fill" "stroke-preserve" "get-width" "Pen" "and" "set-line-width" "get-color-for-object" "Color" "is?" "set-color" "begin" "if" "M_PI" "*" "1" "0" "cairo_arc" "cairo_scale" "2" "/" "+" "context" "cairo_translate" "h" "-" "w" "get-bottom" "bottom" "get-top" "top" "get-right" "right" "get-left" "left" "let" "dynamic" "function" "with-saved-context" "inside" "outside" "rect")}
        {Lisp-Entry "draw-image" () 400 18 ("cairo_paint" "exact->inexact" "context" "cairo_set_source_surface" "dynamic" "function" "with-saved-context" "v" "h" "handle")}
        {Lisp-Entry "draw-scroll-bar" () 412 18 ("4" "get-top" "3" "get-left" "+" "draw-arrow-tip" "Black" "0" "else" "dv" "down" "up" "2" "right" "1" "left" "eq?" "cond" "dh" "let" "rectangle" "edges:" "outer:" "raised" "inner:" "draw-edge" "fill" "Draw-Edge-Light" "name:" "Color" "set-color" "draw-rectangle" "dynamic" "function" "with-saved-context" "direction" "rect")}
        {Lisp-Entry "draw-caption" () 430 18 ("9" "maximize" "8" "move-to-rel" "0" "line-to-rel" "restore" "6" "5" "minimize" "stroke" "line-to" "3" "4" "move-to" "set-line-width" "close" "eq?" "cond" "let" "Black" "raised" "outer:" "get-bottom" "get-right" "-" "get-top" "1" "get-left" "+" "Rect" "new" "rectangle" "edges:" "sunken" "inner:" "draw-edge" "begin" "if" "fill" "Draw-Edge-Light" "name:" "Color" "set-color" "draw-rectangle" "dynamic" "function" "with-saved-context" "false" "pushed?" "type" "rect")}
        {Lisp-Entry "draw-radio-button" () 488 18 ("Black" "when" "Draw-Edge-Light" "Draw-Edge-Dark" "stroke" "Draw-Edge-Medium" "7" "4" "3" "1" "set-line-width" "fill" "White" "Light-Background" "name:" "Color" "if" "set-color" "M_PI" "*" "0" "context" "cairo_arc" "r" "get-bottom" "get-top" "y" "2" "get-right" "-" "/" "get-left" "+" "x" "let" "dynamic" "function" "with-saved-context" "selected?" "selected?:" "false" "inactive?" "inactive?:" "rect")}
        {Lisp-Entry "draw-push-button" () 518 18 ("stroke" "line-to-no-stroke" "move-to" "White" "2" "+" "Draw-Edge-Medium" "get-bottom" "get-right" "-" "get-top" "get-left" "line" "Draw-Edge-Dark" "name:" "Color" "set-color" "begin" "if" "1" "set-line-width" "dynamic" "function" "with-saved-context" "false" "pushed?" "rect")}
        {Lisp-Entry "bit-blit" () 552 18 ("cairo_restore" "paint" "get-v" "destination" "get-h" "exact->inexact" "get-surface" "cairo_set_source_surface" "cairo_save" "get-context" "dest-context" "let" "dest-dc")}
        {Lisp-Entry "set-font" () 569 18 ("get-point-size" "*" "/" "exact->inexact" "cairo_set_font_size" "get-cairo-font" "context" "cairo_set_font_face" "font")}
        {Lisp-Entry "set-pen" () 574 18 ("get-color" "set-color" "get-width" "set-line-width" "pen")}
        {Lisp-Entry "draw-edge" () 579 18 ("Draw-Edge-Light" "blue:" "green:" "red:" "new" "2" "-" "Draw-Edge-Medium" "get-bottom" "Draw-Edge-Dark" "sunken" "get-right" "get-top" "+" "get-left" "line" "White" "name:" "Color" "set-color" "raised" "cond" "memq?" "when" "1" "set-line-width" "dynamic" "function" "with-saved-context" "bottom" "top" "right" "left" "eq?" "if" "let" "outer" "outer:" "inner" "inner:" "rectangle" "edges" "edges:" "rect")}
        {Lisp-Entry "fill-rect" () 658 18 ("fill" "draw-rectangle" "set-color" "dynamic" "function" "with-saved-context" "color" "rect")}
        {Lisp-Entry "draw-check" () 666 18 ("stroke" "7" "4" "6" "3" "1" "5" "2" "0" "+" "line" "v" "h")}
        {Lisp-Entry "draw-raised" () 677 18 ("line-to" "Dark" "stroke" "get-right" "get-top" "line-to-no-stroke" "1" "get-bottom" "-" "get-left" "move-to" "Light-Background" "name:" "Color" "color:" "Pen" "new" "set-pen" "dynamic" "function" "with-saved-context" "rect")}
        {Lisp-Entry "draw-arrow-tip" () 691 18 ("right" "height" "left" "down" "0" "naturals" "2" "decrease!" "line" "n" "for-each" "increase!" "+" "-" "width" "let" "up" "case" "1" "set-line-width" "dynamic" "function" "with-saved-context" "direction" "size" "v" "h")}
        {Lisp-Entry "with-outside/inside" () 732 11 ("fill" "stroke-preserve" "1" "get-width" "Pen" "and" "set-line-width" "get-color-for-object" "Color" "is?" "set-color" "begin" "if" "dynamic" "function" "with-saved-context" "procedure" "inside" "outside")}
        {Lisp-Entry "frame-rect" () 753 18 ("stroke" "get-bottom" "get-right" "-" "get-top" "get-left" "+" "Rect" "new" "draw-rectangle" "set-color" "1" "set-line-width" "dynamic" "function" "with-saved-context" "color" "rect")}
        {Lisp-Entry "rectangle" () 767 18 ("draw-rectangle" "dynamic" "function" "with-outside/inside" "inside" "outside" "rect")}
        {Lisp-Entry "get-color-for-object" () 778 18 ("Color" "get-name" "eval-symbol" "not" "if" "get-color" "color" "let" "Pen" "is?" "when" "object")}
        {Lisp-Entry "move-to" () 791 18 ("exact->inexact" "context" "cairo_move_to" "v" "h")}
        {Lisp-Entry "line-to" () 795 18 ("stroke" "exact->inexact" "line-to-no-stroke" "v" "h")}
        {Lisp-Entry "line-to-preserve" () 800 18 ("stroke-preserve" "exact->inexact" "line-to-no-stroke" "v" "h")}
        {Lisp-Entry "line-to-no-stroke" () 805 18 ("exact->inexact" "cairo_line_to" "+" "move-to" "begin" "=" "if" "let" "get-point-y" "cur-v" "get-point-x" "cur-h" "context" "cairo_current_point" "pt" "let*" "v" "h")}
        {Lisp-Entry "line-to-rel" () 822 18 ("exact->inexact" "context" "cairo_rel_line_to" "dv" "dh")}
        {Lisp-Entry "move-to-rel" () 826 18 ("exact->inexact" "context" "cairo_rel_move_to" "dv" "dh")}
        {Lisp-Entry "line" () 830 18 ("line-to" "move-to" "dest-v" "dest-h" "v" "h")}
        {Lisp-Entry "pixel-to" () 835 18 ("1" "+" "line-to" "move-to" "v" "h")}
        {Lisp-Entry "set-line-width" () 840 18 ("exact->inexact" "context" "cairo_set_line_width" "w")}
        {Lisp-Entry "get-line-width" () 844 18 ("context" "cairo_get_line_width")}
        {Lisp-Entry "set-color-alpha" () 848 18 ("context" "cairo_set_source_rgba" "a" "b" "g" "r")}
        {Lisp-Entry "stroke" () 852 18 ("context" "cairo_stroke")}
        {Lisp-Entry "stroke-preserve" () 856 18 ("context" "cairo_stroke_preserve")}
        {Lisp-Entry "paint" () 860 18 ("context" "cairo_paint")}
        {Lisp-Entry "fill" () 864 18 ("context" "cairo_fill")}
        {Lisp-Entry "draw-rectangle" () 868 18 ("exact->inexact" "context" "cairo_rectangle" "get-bottom" "h" "get-right" "-" "w" "get-top" "y" "get-left" "x" "let" "rect")}
        {Lisp-Entry "set-color" () 880 18 ("exact->inexact" "context" "cairo_set_source_rgb" "get-blue" "b" "get-green" "g" "get-red" "/" "r" "let" "color")}
        {Lisp-Entry "add-color-stop-rgb" () 890 11 ("exact->inexact" "cairo_pattern_add_color_stop_rgb" "get-blue" "blue" "get-green" "green" "get-red" "/" "red" "let" "color" "offset" "pattern")}
        {Lisp-Entry "cairo-status" () 897 18 ("context" "cairo_status")}
        {Lisp-Entry "cairo-surface-status" () 901 18 ("surface" "cairo_surface_status")}}}})
"Calendar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "time" "Calendar.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.time.Calendar" () 37 9 ("jazz")
      {Lisp-Entry "Calendar" () 44 7 ("Object")}}})
"Calendar-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "calendar" "Calendar-Actions.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.calendar.Calendar-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Calendar-Actions" () 46 7 ("Next" "on-next" "next" "Prior" "Shortcut" "shortcut:" "on-prior" ":focus" "Event-Handler" "action-handler:" "prior" "name:" "Actions")}}})
"Calendar-Day"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "calendar" "Calendar-Day.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.calendar.Calendar-Day" () 37 9 ("jazz")
      {Lisp-Entry "Calendar-Day" () 46 7 ("View")
        {Lisp-Entry "week" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "day" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "date" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "selected?" () 54 8 ("false")}
        {Lisp-Entry "print" () 57 11 ("date" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-manager" () 68 11 ("get-calendar" "get-manager")}
        {Lisp-Entry "get-calendar" () 77 18 ("parent")}
        {Lisp-Entry "same-day?" () 81 11 ("get-calendar" "get-date" "date" "=")}
        {Lisp-Entry "same-month?" () 85 11 ("get-calendar" "get-date" "date" "get-month" "=")}
        {Lisp-Entry "get-selected?" () 94 18 ("selected?")}
        {Lisp-Entry "set-selected?" () 98 18 ("invalidate-view" "selected?" "set!" "flag")}
        {Lisp-Entry "mouse-down" () 108 11 ("self" "set-selection" "acquire-focus" "get-calendar" "calendar" "let" "pos")}
        {Lisp-Entry "double-click" () 119 11 ("self" "get-manager" "double-click-day" "pos")}
        {Lisp-Entry "Current-Day-Font" () 128 14 ("bold?:" "9" "point-size:" "font-name:" "Font")}
        {Lisp-Entry "draw" () 132 11 ("draw-header" "draw-day" "self" "day-color" "either" "fill-rect" "get-calendar" "calendar" "let" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-day" () 140 29 ("dc")}
        {Lisp-Entry "draw-header" () 144 29 ("draw-text" "Black" "else" "White" "Color" "not" "cond" "set-text-color" "day-label" "same-month?" "let*" "Ansi-Var" "name:" "Font" "Current-Day-Font" "current-day?" "if" "set-font" "selection-color" "fill-rect" "get-right" "0" "Rect" "new" "header" "let" "selected?" "when" "get-bounds" "bounds" "with" "context" "dc")}
        {Lisp-Entry "selection-color" () 156 11 ("Unfocused-Selection" "Focused-Selection" "name:" "Color" "focused?" "if")}
        {Lisp-Entry "day-color" () 162 11 ("Light-Purple" "White" "name:" "Color" "same-month?" "if")}
        {Lisp-Entry "current-day?" () 168 11 ("local-date" "date" "day-date" "=")}
        {Lisp-Entry "day-label" () 172 11 ("->string" "month-abbrev" "localize" "format" "1" "=" "and" "if" "date" "get-day" "day" "let" "same-month?")}
        {Lisp-Entry "draw-day" () 180 11 ("set!" "3" "if" "increase!" "+" "Rect" "new" "get-color" "color" "let" "event" "for-each" "get-client" "get-holiday-color" "fill-rect" "get-bounds" "bounds" "with" "when" "col" "0" "row" "v" "1" "h" "get-date" "time" "dynamic" "function" "key:" "append" "" "sort" "displayed" "collect-events" "events" "collect-holidays" "holidays" "collect-recurring" "recurring" "get-editor" "editor" "get-calendar" "calendar" "let*" "nextmethod" "dc")}
        {Lisp-Entry "focused?" () 213 29 ("parent" "get-focus" "eq?")}}}})
"Calendar-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "calendar" "Calendar-Dialog.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.calendar.Calendar-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "Calendar-Dialog" () 47 7 ("on-cancel" "cancel" "default?:" "on-ok" ":host" "action-handler:" "title:" "ok" "on-escape-press" "escape-press-handler:" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "calendar" "calendar-border" "Dimension" "size:" "5" "9" "Point" "position:" "navigator" "name:" "Layout-View")
        {Lisp-Entry "host-title" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "initial-date" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "multiple-selection?" () 52 12 ("generate" "accessors" "false")}
        {Lisp-Entry "finish" () 64 11 ("set-selection" "find-calendar-day" "day" "initial-date" "set-date" "multiple-selection?" "set-multiple-selection?" "navigator" "locate" "get-calendar" "calendar" "let" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" () 73 11 ("navigator" "locate" "get-calendar" "acquire-focus" "set-title" "host-title" "when" "nextmethod" "host")}
        {Lisp-Entry "dialog-title" () 86 16 ()}
        {Lisp-Entry "dialog-size" () 91 16 ("Dimension")}
        {Lisp-Entry "double-click-day" () 100 18 ("get-modal-result" "get-host" "end-modal" "day")}
        {Lisp-Entry "on-return-press" () 105 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 111 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "get-modal-result" () 121 11 ("get-selection" "get-date" "get-calendar" "calendar" "locate" "navigator" "let*")}}}})
"Calendar-Navigator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "calendar" "Calendar-Navigator.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.calendar.Calendar-Navigator" () 37 9 ("jazz")
      {Lisp-Entry "Calendar-Navigator" () 47 7 ("calendar" "entry" "style:" "edge" "border-type:" "calendar-border" "on-next-month" "next-month" "on-double-click" "double-click-handler:" "monospace?:" "underline?:" "italic?:" "bold?:" "color:" "point-size:" "font-name:" "Font" "font:" "justification:" "month" "2" "0" "Rect" "layout-insets:" "month-header" "on-previous-month" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "previous-month" "flow" "centered" "center" "north" "location:" "Dimension" "size:" "tools" "name:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "finish" () 67 11 ("get-calendar" "get-date" "update-month" "tools" "centered" "month-header" "locate" "layout-view" "nextmethod" "host")}
        {Lisp-Entry "get-tree" () 80 18 ("tree" "locate")}
        {Lisp-Entry "get-calendar" () 84 18 ("calendar" "locate")}
        {Lisp-Entry "on-double-click" () 93 11 ("find-calendar-day" "set-selection" "set-date" "get-calendar" "calendar" "month-date" "local-date" "day-date" "date" "let*" "month" "get-sender" "get-name" "case" "evt")}
        {Lisp-Entry "on-previous-month" () 103 11 ("goto-previous-month" "get-calendar" "calendar" "let" "evt")}
        {Lisp-Entry "on-next-month" () 108 11 ("goto-next-month" "get-calendar" "calendar" "let" "evt")}
        {Lisp-Entry "update-month" () 118 18 ("get-year" "month-name" "localize" "format" "month" "locate" "set-title" "date")}}
      {Lisp-Entry "Navigator-Calendar" () 127 7 ("Calendar-View")
        {Lisp-Entry "date-update" () 130 11 ("date" "parent" "get-parent" "update-month" "nextmethod")}}}})
"Calendar-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "calendar" "Calendar-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.calendar.Calendar-View" () 37 9 ("jazz")
      {Lisp-Entry "Calendar-View" () 46 7 ("View")
        {Lisp-Entry "date" () 49 12 ("set-date" "get-date")}
        {Lisp-Entry "spacing" () 50 12 ("set-spacing" "get-spacing" "1")}
        {Lisp-Entry "multiple-selection?" () 51 12 ("set-multiple-selection?" "get-multiple-selection?" "false")}
        {Lisp-Entry "selection" () 54 8 ()}
        {Lisp-Entry "finish" () 57 11 ("date" "find-calendar-day" "set-selection" "install-days" "set-date" "nextmethod" "rest")}
        {Lisp-Entry "get-date" () 69 18 ("date")}
        {Lisp-Entry "set-date" () 73 18 ("date-update" "get-finished?" "when" "local-date" "day-date" "either" "date" "set!" "value")}
        {Lisp-Entry "date-update" () 79 29 ("invalidate-view" "update-days")}
        {Lisp-Entry "get-spacing" () 84 18 ("spacing")}
        {Lisp-Entry "set-spacing" () 88 18 ("spacing" "set!" "value")}
        {Lisp-Entry "get-multiple-selection?" () 92 18 ("multiple-selection?")}
        {Lisp-Entry "set-multiple-selection?" () 96 18 ("multiple-selection?" "set!" "value")}
        {Lisp-Entry "get-manager" () 100 26 ("Calendar-Dialog" "find-ascendant")}
        {Lisp-Entry "guest-actions" () 109 11 ("nextmethod" "calendar" "find-actions" "cons")}
        {Lisp-Entry "on-prior" () 119 11 ("prior-press" "evt")}
        {Lisp-Entry "on-next" () 123 11 ("next-press" "evt")}
        {Lisp-Entry "focus-gain" () 132 11 ("invalidate-view" "selection" "when")}
        {Lisp-Entry "focus-lose" () 137 11 ("invalidate-view" "selection" "when" "view" "window")}
        {Lisp-Entry "left-arrow-press" () 147 11 ("0" "move-selection" "modifiers")}
        {Lisp-Entry "up-arrow-press" () 151 11 ("0" "move-selection" "modifiers")}
        {Lisp-Entry "right-arrow-press" () 155 11 ("0" "1" "move-selection" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 159 11 ("1" "0" "move-selection" "modifiers")}
        {Lisp-Entry "prior-press" () 163 26 ("goto-previous-month")}
        {Lisp-Entry "next-press" () 167 26 ("goto-next-month")}
        {Lisp-Entry "move-selection" () 171 11 ("find-calendar-cell" "set-selection" "get-week" "4" "ny" "get-day" "+" "6" "min" "0" "max" "nx" "let" "bell" "selection" "null?" "if" "dy" "dx")}
        {Lisp-Entry "install-days" () 184 11 ("6" "7" "0" "naturals" "1" "add" "set!" "install-day" "day" "week" "dynamic" "function" "for-each" "calendar-base" "let" "date" "when")}
        {Lisp-Entry "install-day" () 195 11 ("date:" "day:" "week:" "self" "parent:" "calendar-day-class" "new" "date" "day" "week")}
        {Lisp-Entry "calendar-day-class" () 199 29 ("Calendar-Day")}
        {Lisp-Entry "calendar-base" () 203 11 ("date" "first-day-of-month" "first-day-of-week")}
        {Lisp-Entry "update-days" () 212 11 ("6" "7" "0" "naturals" "cdr" "1" "add" "set!" "set-date" "car" "calendar-day" "day" "week" "dynamic" "function" "for-each" "children" "scan" "calendar-base" "date" "let")}
        {Lisp-Entry "layout" () 230 11 ("children" "Dimension" "set-size" "spacing" "*" "1" "+" "Point" "new" "set-position" "get-day" "col" "get-week" "row" "Calendar-Day" "is?" "when" "view" "dynamic" "function" "for-each" "6" "get-height" "height" "7" "get-width" "/" "floor" "width" "let")}
        {Lisp-Entry "day-color" () 247 26 ("day")}
        {Lisp-Entry "find-calendar-day" () 256 18 ("children" "get-date" "=" "Calendar-Day" "is?" "and" "view" "dynamic" "function" "find-if" "date")}
        {Lisp-Entry "find-calendar-cell" () 263 18 ("children" "get-week" "get-day" "=" "Calendar-Day" "is?" "and" "view" "dynamic" "function" "find-if" "y" "x")}
        {Lisp-Entry "get-selection" () 276 18 ("selection")}
        {Lisp-Entry "set-selection" () 280 18 ("selection-update" "true" "set!" "false" "set-selected?" "selection" "neq?" "when" "day")}
        {Lisp-Entry "selection-update" () 290 29 ()}
        {Lisp-Entry "goto-previous-month" () 299 18 ("date" "previous-month" "goto-month")}
        {Lisp-Entry "goto-next-month" () 303 18 ("date" "next-month" "goto-month")}
        {Lisp-Entry "goto-month" () 307 11 ("find-calendar-day" "set-selection" "set-date" "month")}}}})
"Cancel-Signal"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "signal" "Cancel-Signal.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.signal.Cancel-Signal" () 37 9 ("jazz")
      {Lisp-Entry "Cancel-Signal" () 44 7 ("Signal")
        {Lisp-Entry "forwardable?" () 47 11 ("true")}}}})
"Canvas"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "canvas" "Canvas.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.canvas.Canvas" () 37 9 ("jazz")
      {Lisp-Entry "Canvas" () 49 7 ("Component")
        {Lisp-Entry "violations" () 52 12 ("set-violations" "get-violations")}
        {Lisp-Entry "violations-factory" () 55 8 ("List-Factory" "new")}
        {Lisp-Entry "get-integrity-manager" () 63 11 ("Integrity-Manager" "new")}
        {Lisp-Entry "validate-integrity" () 67 18 ("select-violations-manager" "IDI_ERROR" "icon:" "format-plural" "length" "count" "format" "message-box" "null?" "if" "update-violations-manager" "get-presentation" "presentation" "user-message" "when" "get-output" "violations" "set!" "self" "validate-integrity" "violations-factory" "reset" "get-integrity-manager" "integrity-manager" "let" "true" "report?" "report?:" "reporter" "reporter:" "context" "context:")}
        {Lisp-Entry "get-violations-manager" () 85 11 ("violations-manager-class" "singleton-docked" "get-guest")}
        {Lisp-Entry "update-violations-manager" () 89 11 ("update" "get-violations-manager" "manager" "let" "violations")}
        {Lisp-Entry "select-violations-manager" () 94 18 ("true" "focus?:" "violations-manager-workspace" "workspace:" "violations-manager-class" "select-palette" "select-first" "select-results" "get-violations-manager" "manager" "let")}
        {Lisp-Entry "violations-manager-class" () 101 29 ("Violations-Manager")}
        {Lisp-Entry "violations-manager-workspace" () 105 29 ()}
        {Lisp-Entry "get-violations" () 114 18 ("violations")}
        {Lisp-Entry "set-violations" () 118 18 ("violations" "set!" "value")}
        {Lisp-Entry "add-violation" () 122 18 ("violations-factory" "put" "violation")}
        {Lisp-Entry "clear-violations" () 126 18 ("violations" "set!" "violations-factory" "reset")}}}})
"Canvas-Element"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "canvas" "Canvas-Element.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.canvas.Canvas-Element" () 37 9 ("jazz")
      {Lisp-Entry "Canvas-Element" () 44 7 ("Component")
        {Lisp-Entry "get-name-mandatory?" () 53 16 ("true")}
        {Lisp-Entry "get-name-unicity?" () 58 16 ("get-name-mandatory?")}
        {Lisp-Entry "presentation->name" () 63 16 ("=" "empty-string?" "or" "get-name-mandatory?" "not" "and" "if" "presentation")}
        {Lisp-Entry "name->presentation" () 70 16 ("get-name-mandatory?" "or" "if" "name")}
        {Lisp-Entry "can-view-properties?" () 77 11 ("false")}
        {Lisp-Entry "get-addable-details" () 82 11 ("name-info")}}}})
"Canvas-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "canvas" "Canvas-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.canvas.Canvas-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Canvas-Manager" () 48 7 ("card-border" "bottom-right" "toplevel-controls?:" "element" "details" "vscroll?:" "hscroll?:" "document" "details-border" "details-pane" "relative" "mode:" "vert" "editor-splitter" "fill" "second" "right" "title:" "descendant" "on-tab-press" "tab-press-handler:" "highlight-edited?:" "tree" "header" "content" "scroller" "descendants" "entry" "style:" "edge" "border-type:" "first" "4" "Point" "position:" "descendants-border" "division:" "horz" "orientation:" "split" "state:" "center" "splitter" "on-new" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "new" "north" "location:" "7" "flow" "toolbar" "name:" "2" "0" "Rect" "layout-insets:" "border" "layout-type:" "Dimension" "size:" "Editor-View")
        {Lisp-Entry "frame-icon" () 84 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-position" () 89 16 ()}
        {Lisp-Entry "frame-size" () 94 16 ()}
        {Lisp-Entry "frame-workspaces" () 99 11 ("home")}
        {Lisp-Entry "new-event" () 109 16 ("set-visible?" "bring-to-front" "set-client" "instantiate" "client" "name:" "Canvas-Base" "model-name:" "action:" "true" "textual?:" "Form" "new" "form" "update-status" "set-newname" "get-controller" "controller" "collect-names" "unique-domain-name" "newname" "localize" "newbase" "get-guest" "manager" "false" "host-visible?:" "new-frame" "apply" "frame" "let*" "rest")}
        {Lisp-Entry "collect-names" () 126 16 ("get-children" "get-client" "get-name" "neq?" "and" "get-guest" "guest" "Host-Frame" "is?" "when" "frame" "dynamic" "function" "collect" "get-stage" "stage" "class-of" "model" "let" "base")}
        {Lisp-Entry "Canvas-Manager-Controller" () 143 9 ("Editor-View-Controller")
          {Lisp-Entry "document-status" () 146 13 ("modified-status" "name-status" "format")}}
        {Lisp-Entry "new-controller" () 153 11 ("self" "Canvas-Manager-Controller" "new")}
        {Lisp-Entry "tool-preferences" () 162 11 ("canvas-manager" "tools" "get-preferences")}
        {Lisp-Entry "install" () 171 11 ("details" "self" "descendants" "locate" "set-editor" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" () 177 11 ("get-size" "set-size" "cascade-position" "set-position" "when" "tool-preferences" "pref" "let" "nextmethod" "host")}
        {Lisp-Entry "focus-document" () 185 11 ("tree" "descendants" "locate" "acquire-focus")}
        {Lisp-Entry "selection-changed" () 194 11 ("update-new" "nextmethod" "focus?" "force-parent?" "origin" "new" "old")}
        {Lisp-Entry "update-new" () 199 11 (":french" "french:" ":english" "localize-to" "format" "english:" "Locales" "get-class-presentation" "pres" "car" "class" "true" "set-tooltip-text" "false" "set-enabled?" "begin" "1" "length" "/=" "if" "new" "tool" "get-addable-classes" "essay" "classes" "get-client" "client" "details" "locate" "tree" "let*")}
        {Lisp-Entry "on-editor" () 221 11 ("save-client" "Custom-Card" "is?" "when" "get-card" "current" ":saving" "setup-card" "setup-details" "get-selection" "car" "component" "let" ":selection-changing" "get-kind" "case" "nextmethod" "evt")}
        {Lisp-Entry "setup-details" () 239 11 ("card-update" "categorized" "get-tree" "set-filter" "is?" "designer" "set-designer" "begin" "self" "set-editor" "details-border" "locate" "parent:" "details" "name:" "new" "card" "class-of" "neq?" "or" "Details-Card" "get-custom-details" "either" "details-class" "close" "when" "null?" "if" "get-details" "current" "let" "component")}
        {Lisp-Entry "get-details" () 261 11 ("details" "details-border" "locate" "find-component")}
        {Lisp-Entry "get-card" () 270 11 ("properties" "card-border" "locate" "find-component")}
        {Lisp-Entry "setup-card" () 274 11 ("card-update" "categorized" "get-tree" "set-filter" "designer" "set-designer" "self" "set-editor" "card-border" "locate" "parent:" "properties" "name:" "new" "card" "class-of" "neq?" "or" "Properties-Card" "get-custom-card" "either" "card-class" "close" "null?" "if" "save-client" "Custom-Card" "is?" "when" "get-card" "current" "let" "component")}
        {Lisp-Entry "card-update" () 293 26 ("card")}
        {Lisp-Entry "on-selection-change" () 302 11 ("false" "focus?:" "true" "force-parent?:" "origin:" "list" "set-selection" "get-user-data" "component" "get-row" "row" "let*" "when" "get-single-selection" "selection" "log" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-new" () 314 18 ("acquire-focus" "generate-event?:" "set-single-selection" "row-rank" "rank" "component-row" "row" "origin:" "list" "set-selection" "false" "select?:" "tree" "descendants" "add-component-class" "component" "get-addable-classes" "car" "class" "get-client" "client" "locate" "details" "let*" "evt")}
        {Lisp-Entry "on-tab-press" () 326 18 ("get-row" "auto-select" "when" "get-single-selection" "rank" "acquire-focus" "card" "locate" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "Validation-Reporter" () 340 9 ("invite" "name:" "title:" "Progress-Reporter")
          {Lisp-Entry "dialog-title" () 348 18 ()}}
        {Lisp-Entry "on-validate-integrity" () 353 11 ("true" "cancelable?:" "Validation-Reporter" "progress-reporter:" "self" "context:" "name:" "Jedi" "get-application" "typed?" "not" "threaded?:" "set-done" "user-message" "reporter:" "validate-integrity" "reporter" "dynamic" "function" "with-progress" "get-designer" "designer" "get-client" "client" "let" "evt")}
        {Lisp-Entry "Cascade-Position" () 373 14 ("Point")}
        {Lisp-Entry "Cascade-Step" () 376 14 ("Dimension")}
        {Lisp-Entry "cascade-position" () 380 11 ("Cascade-Step" "increase!" "get-position" "frame" "dynamic" "function" "key:" "member?" "if" "true" "while" "return" "lambda" "call/ec" "Cascade-Position" "pos" "collect-managers" "frames" "let")}
        {Lisp-Entry "collect-managers" () 391 11 ("get-stage" "get-children" "Canvas-Manager" "get-guest" "Host-Frame" "is?" "and" "frame" "dynamic" "function" "collect-if")}}}})
"Canvas-Node"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "canvas" "Canvas-Node.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.canvas.Canvas-Node" () 37 9 ("jazz")
      {Lisp-Entry "Canvas-Node" () 44 7 ("Component")
        {Lisp-Entry "get-class-image" () 53 16 ("Bitmap-Resource")}
        {Lisp-Entry "name->presentation" () 58 16 ("get-class-presentation" "name")}
        {Lisp-Entry "can-rename-component?" () 63 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 68 11 ("false")}
        {Lisp-Entry "can-move-component?" () 73 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 78 11 ("false")}
        {Lisp-Entry "indexable?" () 83 11 ("false")}
        {Lisp-Entry "get-addable-details" () 88 11 ("name-info")}
        {Lisp-Entry "get-categorized-properties" () 93 11 ()}}}})
"CanvasToSql-Exporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "canvas" "CanvasToSql-Exporter.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.canvas.CanvasToSql-Exporter" () 37 9 ("jazz")
      {Lisp-Entry "CanvasToSQL-Exporter" () 44 7 ("SQL" "System" "Utilities" "Object")
        {Lisp-Entry "provider" () 47 8 ()}
        {Lisp-Entry "separator" () 48 8 ()}
        {Lisp-Entry "keys" () 49 8 ()}
        {Lisp-Entry "key-suffix" () 50 8 ("0")}
        {Lisp-Entry "key-id?" () 51 8 ("false")}
        {Lisp-Entry "key-serial" () 52 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "printer" () 53 8 ("String-Printer" "new")}
        {Lisp-Entry "Default-Separator" () 56 14 ()}
        {Lisp-Entry "initialize" () 60 11 ("key-id?~self" "Default-Separator" "either" "separator~self" "get-provider" "Provider" "is?" "if" "provider~self" "set!" "nextmethod" "false" "key-id?" "key-id?:" "separator" "separator:" "provider" "provider:")}
        {Lisp-Entry "export" () 74 18 ("export-code" "export-component" "export-deletes" "export-header" "canvas")}
        {Lisp-Entry "export-to" () 81 18 ("format" "File-Printer" "new" "printer" "with-closed" "export" "code" "let" "file" "canvas")}
        {Lisp-Entry "export-code" () 87 11 ("format" "String-Printer" "new" "printer" "get-output" "code" "let")}
        {Lisp-Entry "export-header" () 94 29 ("canvas")}
        {Lisp-Entry "export-deletes" () 98 29 ("canvas")}
        {Lisp-Entry "export-component" () 102 29 ("export-children" "export-properties" "component")}
        {Lisp-Entry "export-properties" () 107 29 ("component")}
        {Lisp-Entry "export-children" () 111 29 ("get-children" "export-component" "child" "dynamic" "function" "for-each" "component")}
        {Lisp-Entry "output-section" () 123 11 ("printer" "format" "section")}
        {Lisp-Entry "ouput-comment" () 131 11 ("printer" "format" "comment")}
        {Lisp-Entry "format-sql-value" () 140 11 ("provider" "format-value" "value")}
        {Lisp-Entry "select-primary-key" () 149 11 ("informix" "separator" "format-sql-value" "printer" "sqlserver" "provider" "external-name" "case" "increase!" "key-suffix" "format" "string->symbol" "var" "let" "get-serial-key" "register-primary-key" "key-id?" "if" "column" "table" "component")}
        {Lisp-Entry "get-serial-key" () 170 11 ("+" "1" "hash-set!" "null?" "if" "key-serial" "hash-ref" "id" "let" "table")}
        {Lisp-Entry "with-serial-insert" () 177 11 ("else" "separator" "printer" "format" "sqlserver" "provider" "external-name" "case" "proc" "table")}
        {Lisp-Entry "register-primary-key" () 187 11 ("cons" "keys" "set!" "value" "component")}
        {Lisp-Entry "get-primary-key" () 192 11 ("error" "cdr" "if" "keys" "assq" "info" "let" "component")}
        {Lisp-Entry "insert-row" () 204 11 ("symbol?" "when" "value" "property" "dynamic" "function" "for-each-property" "separator" "printer" "join" "format" "command" "property-value" "format-sql-value" "map" "values" "property-column" "map-property" "columns" "let*" "properties" "table")}
        {Lisp-Entry "property-column" () 220 11 ("value" "column")}
        {Lisp-Entry "property-value" () 224 11 ("default-value" "null?" "not" "if" "value" "column")}
        {Lisp-Entry "default-value" () 230 29 ("error" "column")}}}})
"Caption-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Caption-Root.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Caption-Root" () 37 9 ("jazz")
      {Lisp-Entry "Caption-Root" () 48 7 ("Root-View")
        {Lisp-Entry "maximized?" () 51 8 ("false")}
        {Lisp-Entry "get-maximized?" () 59 18 ("maximized?")}
        {Lisp-Entry "set-maximized?" () 63 18 ("restore" "maximize" "if" "value")}
        {Lisp-Entry "caption-icon" () 74 29 ()}
        {Lisp-Entry "caption-title" () 78 29 ()}
        {Lisp-Entry "caption-font" () 82 29 ("Label-Bold" "name:" "Font")}
        {Lisp-Entry "caption-focused?" () 86 29 ()}
        {Lisp-Entry "caption-visible?" () 90 29 ()}
        {Lisp-Entry "caption-rect" () 99 29 ("+" "get-width" "-" "Rect" "new" "4" "0" "maximized?" "if" "border" "let")}
        {Lisp-Entry "Active-Colors" () 109 14 ("blue:" "green:" "red:" "Dark-Red" "name:" "Color" "list")}
        {Lisp-Entry "Inactive-Colors" () 112 14 ("blue:" "green:" "red:" "Light-Red" "name:" "Color" "list")}
        {Lisp-Entry "Active-Colors" () 117 14 ("blue:" "green:" "0" "red:" "Color" "list")}
        {Lisp-Entry "Inactive-Colors" () 121 14 ("blue:" "green:" "red:" "Color" "list")}
        {Lisp-Entry "draw" () 125 11 ("draw-caption" "caption-visible?" "rectangle" "edges:" "outer:" "raised" "inner:" "draw-edge" "get-bounds" "bounds" "with" "maximized?" "not" "when" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-caption" () 133 11 ("draw-text" "title-offset" "White" "Color" "set-text-color" "set-font" "get-v" "get-top" "get-h" "get-left" "+" "get-application" "get-icons-cache" "draw-image" "icon-offset" "offset" "let" "when" "gradient-fill" "3" "-" "1" "line" "Light" "name:" "Pen" "set-pen" "get-height" "height" "get-width" "width" "second" "end" "first" "start" "Inactive-Colors" "Active-Colors" "if" "colors" "caption-focused?" "focused?" "caption-font" "font" "caption-title" "title" "caption-icon" "icon" "let*" "caption-rect" "rect" "with" "context" "dc")}
        {Lisp-Entry "icon-offset" () 157 29 ("2" "Point")}
        {Lisp-Entry "title-offset" () 161 29 ("3" "Point")}}}})
"Capture-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Capture-Event.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.event.Capture-Event" () 37 9 ("jazz")
      {Lisp-Entry "Capture-Event" () 44 7 ("Event")
        {Lisp-Entry "window" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("window" "set!" "nextmethod" "wnd" "sender" "kind")}
        {Lisp-Entry "get-window" () 60 18 ("window")}}}})
"Card"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "card" "Card.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.card.Card" () 37 9 ("jazz")
      {Lisp-Entry "Card" () 46 7 ("Layout-View")
        {Lisp-Entry "editor" () 49 8 ()}
        {Lisp-Entry "client" () 50 8 ()}
        {Lisp-Entry "designer" () 51 8 ()}
        {Lisp-Entry "destroy" () 59 11 ("nextmethod" "set-editor" "set-designer")}
        {Lisp-Entry "get-editor" () 70 26 ("editor")}
        {Lisp-Entry "set-editor" () 74 26 ("on-editor" "method-name:" "target:" "Event-Handler" "new" "add-editor-listener" "set!" "self" "remove-editor-listener" "editor" "/=" "when" "edt")}
        {Lisp-Entry "on-editor" () 83 29 ("get-force?" "force?:" "get-selection" "car" "set-client" ":selection-changed" "designer:" "get-property" "set-designer" ":designer-change" "get-kind" "case" "evt")}
        {Lisp-Entry "get-client" () 94 26 ("client")}
        {Lisp-Entry "set-client" () 98 26 ("client-update" "set!" "client" "/=" "or" "when" "false" "force?" "force?:" "clt")}
        {Lisp-Entry "client-update" () 104 26 ()}
        {Lisp-Entry "get-designer" () 113 26 ("designer")}
        {Lisp-Entry "set-designer" () 117 26 ("set!" "install-listener" "uninstall-listener" "designer" "/=" "when" "dsg")}
        {Lisp-Entry "on-designer" () 126 11 ("call-property-change" ":property-change" "get-kind" "case" "evt")}
        {Lisp-Entry "call-property-change" () 132 29 ("value:" "property:" "property-change" "client" "eq?" "when" "component:" "get-property" "component" "let" "evt")}
        {Lisp-Entry "property-change" () 138 26 ("value" "property" "component")}
        {Lisp-Entry "install-listener" () 147 11 ("add-designer-listener" "on-designer" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "designer")}
        {Lisp-Entry "uninstall-listener" () 152 11 ("self" "remove-designer-listener" "designer")}
        {Lisp-Entry "enter-value" () 161 26 ("designer" "set-property" "client" "when" "value" "property")}}}})
"Catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "catalog" "Catalog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.catalog.Catalog" () 37 9 ("jazz")
      {Lisp-Entry "Catalog" () 45 7 ("Object")
        {Lisp-Entry "name" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("name~self" "set!" "nextmethod" "name")}
        {Lisp-Entry "print" () 56 11 ("name" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-name" () 67 18 ("name")}
        {Lisp-Entry "in-memory?" () 71 26 ("false")}
        {Lisp-Entry "present" () 80 26 ()}
        {Lisp-Entry "get-active?" () 89 26 ("true")}
        {Lisp-Entry "set-active?" () 93 26 ("flag")}
        {Lisp-Entry "activate" () 97 26 ()}
        {Lisp-Entry "deactivate" () 101 26 ()}
        {Lisp-Entry "get-definitions" () 110 26 ("name")}
        {Lisp-Entry "get-category-definitions" () 114 26 ("name")}
        {Lisp-Entry "get-file-entry" () 118 26 ("file")}
        {Lisp-Entry "get-references" () 122 26 ("name")}
        {Lisp-Entry "get-completions" () 126 26 ("name")}
        {Lisp-Entry "in-context?" () 135 26 ("true" "context")}}}})
"Catalog-Configuration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "catalog" "Catalog-Configuration.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.catalog.Catalog-Configuration" () 37 9 ("jazz")
      {Lisp-Entry "Catalog-Configuration" () 48 7 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "type" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "output-file" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "directories" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "extensions" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "recursive?" () 55 12 ("generate" "accessors" "true")}
        {Lisp-Entry "active?" () 56 12 ("generate" "accessors" "false")}
        {Lisp-Entry "references?" () 57 12 ("generate" "accessors" "false")}
        {Lisp-Entry "get-domain" () 70 16 ("nextmethod" "else" "Boolean-Domain" "new" "references?" "active?" "recursive?" "field-name" "case" "property")}
        {Lisp-Entry "get-class-presentation" () 82 16 ()}
        {Lisp-Entry "property-presentation" () 87 16 ("nextmethod" "else" "references?" "active?" "recursive?" "extensions" "directories" "output-file" "type" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" () 100 11 ("false" "property")}
        {Lisp-Entry "get-presentation" () 105 11 ("name" "name->presentation")}
        {Lisp-Entry "set-presentation" () 110 11 ("presentation->name" "self" "set-name" "presentation" "designer")}
        {Lisp-Entry "get-row-instance" () 115 11 ("nextmethod" "else" "Boolean-Row" "references?" "active?" "recursive?" "Directory-Group-Row" "directories" "save" "mode:" "File-Row" "output-file" "collect-catalog-types" "choices:" "Combo-Row" "new" "type" "field-name" "case" "property")}
        {Lisp-Entry "collect-catalog-types" () 125 11 ("get-catalog-types" "->string" "list" "car" "type" "info" "dynamic" "function" "map" "get-preferences" "pref" "let")}
        {Lisp-Entry "get-categorized-properties" () 134 11 ("references?" "active?" "recursive?" "extensions" "directories" "output-file" "type")}}}})
"Catalog-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Catalog-Entry.fusion"} {Time 128360666680000000L}
    {Lisp-Entry "jazz.catalog.entry.Catalog-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Catalog-Entry" () 45 7 ("Object")
        {Lisp-Entry "parent" () 48 8 ()}
        {Lisp-Entry "root-definition" () 49 8 ()}
        {Lisp-Entry "file-definition" () 50 8 ()}
        {Lisp-Entry "get-parent" () 58 18 ("parent")}
        {Lisp-Entry "set-parent" () 62 18 ("parent" "set!" "p")}
        {Lisp-Entry "get-root-definition" () 66 26 ("root-definition")}
        {Lisp-Entry "set-root-definition" () 70 26 ("root-definition" "set!" "def")}
        {Lisp-Entry "get-file-definition" () 74 26 ("file-definition")}
        {Lisp-Entry "set-file-definition" () 78 26 ("file-definition" "set!" "def")}
        {Lisp-Entry "get-file" () 87 26 ()}
        {Lisp-Entry "get-moniker" () 91 26 ()}
        {Lisp-Entry "get-title" () 95 26 ()}
        {Lisp-Entry "get-category-name" () 99 26 ()}
        {Lisp-Entry "get-name" () 103 26 ()}
        {Lisp-Entry "get-line" () 107 26 ()}
        {Lisp-Entry "get-column" () 111 26 ()}
        {Lisp-Entry "get-definitions" () 115 26 ()}
        {Lisp-Entry "get-image" () 119 26 ()}
        {Lisp-Entry "present" () 128 26 ("mode")}
        {Lisp-Entry "present-name" () 132 26 ()}
        {Lisp-Entry "present-detailed" () 136 26 ("present-name")}
        {Lisp-Entry "edit" () 145 26 ("rest")}
        {Lisp-Entry "edit-reference" () 150 26 ("edit" "apply" "->string" "list" "get-application" "set-search-targets" "rest" "target")}
        {Lisp-Entry "insert-definition" () 160 26 ("insert-self-definitions" "dynamic" "get-state" "eq?" "unless" "insert-self" "row" "let" "sort?" "father" "tree")}
        {Lisp-Entry "insert-self" () 166 29 ("self" "user-data:" "image:" "present-detailed" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "dynamic" "expanded" "insert-state" "if" "state" "get-definitions" "definitions" "get-image" "image" "let*" "father" "tree")}
        {Lisp-Entry "insert-self-definitions" () 173 29 ("get-definitions" "insert-definitions" "sort?" "father" "tree")}
        {Lisp-Entry "insert-state" () 177 29 ("expanded" "definitions")}
        {Lisp-Entry "insert-definitions" () 181 11 ("insert-definition" "definition" "dynamic" "function" "for-each" "sort-definitions" "if" "ordered" "let" "sort?" "definitions" "father" "tree")}
        {Lisp-Entry "sort-definitions" () 188 11 ("present-name" "definition" "dynamic" "function" "key:" "" "sort" "definitions")}
        {Lisp-Entry "update-indexes" () 197 26 ("references-index" "definitions-index")}}}})
"Catalog-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Catalog-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Catalog-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Catalog-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-catalog" "invoke")}
        {Lisp-Entry "test-catalog" () 61 11 ()}}}})
"Catalogs-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tools" "Catalogs-Manager.fusion"} {Time 128367194540000000L}
    {Lisp-Entry "jazz.ui.tools.Catalogs-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Catalogs-Manager" () 48 7 ("statistics" "references?" "display-images?:" "toplevel-controls?:" "width:" "node" "selection-mode:" "multiple-selection?:" "on-double-click" "double-click-handler:" "name" "filled-column:" "catalogs" "document" "fill" "layout-type:" "content" "vscroll?:" "entry" "style:" "edge" "border-type:" "2" "catalogs-border" "default?:" "on-update" "form:" "Event-Handler" "action-handler:" "7" "Point" "position:" "title:" "update" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "external-name" () 66 16 ("catalogs-manager" "rest")}
        {Lisp-Entry "finish" () 75 11 ("view-catalogs" "nextmethod" "initargs")}
        {Lisp-Entry "frame-icon" () 86 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 91 16 ()}
        {Lisp-Entry "frame-position" () 96 16 ("Point")}
        {Lisp-Entry "frame-size" () 101 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 105 11 ("home")}
        {Lisp-Entry "resize" () 114 11 ("catalogs-border" "size-figure" "0" "update" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-change-active" () 120 11 ("get-checked?" "set-active?" "get-user-data" "catalog" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "view-catalogs" () 131 18 ("get-indexed-catalogs" "list" "children:" "add-row" "get-statistics" "c2" "get-references?" "Tree-Label" "c1" "content-change-handler:" "user-data:" "get-active?" "checked?:" "get-name" "->string" "title:" "Check-Box" "c0" "on-change-active" "method-name:" "self" "target:" "Event-Handler" "new" "handler" "catalog" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "catalogs" "locate" "tree" "let")}
        {Lisp-Entry "get-indexed-catalogs" () 145 11 ("get-application" "get-cataloguer" "get-catalogs" "Indexed-Catalog" "is?" "catalog" "dynamic" "function" "collect-if")}
        {Lisp-Entry "on-update" () 151 18 ("update-selection" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-double-click" () 157 11 ("update-selection" "dynamic" "function" ":wait" "with-cursor" "catalogs" "get-name" "case" "get-alt?" "alt?" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "update-selection" () 167 11 ("update" "get-row" "get-user-data" "catalog" "let" "item" "dynamic" "function" "for-each" "get-selection" "selection" "catalogs" "locate" "tree" "let*")}
        {Lisp-Entry "confirm-close" () 181 11 ("save-session" "rest")}
        {Lisp-Entry "save-session" () 185 11 ("Opened-Windows" "properties" "push-property" "get-size" "size:" "get-position" "position:" "external-name" "list" "info" "let")}}}})
"Catalogs-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "catalog" "Catalogs-Preferences.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.catalog.Catalogs-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Catalogs-Preferences" () 47 7 ("title:" "Preferences")
        {Lisp-Entry "main" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "recolorize-on-save?" () 51 12 ("generate" "accessors" "true")}
        {Lisp-Entry "can-rename-component?" () 63 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 67 11 ("false")}
        {Lisp-Entry "can-move-component?" () 71 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 75 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 79 11 ("Catalog-Configuration" "list")}
        {Lisp-Entry "get-addable-details" () 84 11 ("references?" "active?" "recursive?" "extensions" "directories" "output-file" "type" "name-info")}}}})
"Cataloguer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "catalog" "Cataloguer.fusion"} {Time 128363203500000000L}
    {Lisp-Entry "jazz.catalog.catalog.Cataloguer" () 37 9 ("jazz")
      {Lisp-Entry "Cataloguer" () 45 7 ("Object")
        {Lisp-Entry "catalogs" () 48 8 ()}
        {Lisp-Entry "get-catalogs" () 56 18 ("catalogs")}
        {Lisp-Entry "get-catalog" () 60 18 ("add-catalog" "create-catalog" "catalog" "error" "when" "not" "if" "catalogs" "get-preferences" "find-component" "pref" "let" "find-catalog" "either" "report?" "report?:" "true" "error?" "error?:" "name")}
        {Lisp-Entry "get-main-catalog" () 71 18 ("catalogs" "get-preferences" "get-main" "get-catalog")}
        {Lisp-Entry "add-catalog" () 75 18 ("list" "append!" "set!" "catalogs" "memq?" "unless" "catalog")}
        {Lisp-Entry "remove-catalog" () 80 18 ("remove!" "set!" "catalogs" "memq?" "when" "catalog")}
        {Lisp-Entry "find-catalog" () 85 18 ("catalogs" "get-name" "=" "catalog" "dynamic" "function" "find-if" "name")}
        {Lisp-Entry "for-each-catalog" () 91 11 ("catalogs" "in-context?" "get-active?" "and" "when" "catalog" "dynamic" "function" "for-each" "list" "pair?" "if" "let" "proc" "context")}
        {Lisp-Entry "preload-catalogs" () 99 31 ("user-message" "catalogs" "get-preferences" "get-children" "preload-catalog" "for-each")}
        {Lisp-Entry "preload-catalog" () 104 11 ("false" "report?:" "get-catalog" "user-message" "get-name" "name" "let" "config")}
        {Lisp-Entry "create-catalog" () 115 11 ("report?:" "get-references-size" "get-definitions-size" "get-content-size" "get-references?" "get-active?" "get-recursive?" "get-extensions" "get-directories" "get-output-file" "get-name" "new" "catalog-class" "class" "get-type" "type" "let*" "report?" "pref")}
        {Lisp-Entry "catalog-class" () 132 11 ("cdr" "autoload" "error" "not" "if" "get-preferences" "get-catalog-types" "assq" "pair" "let" "type")}
        {Lisp-Entry "save-catalogs" () 144 18 ("catalogs" "save" "catalog" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-context" () 155 18 ("list" "symbol?" "if" "get-application" "get-catalog-context" "context" "let")}
        {Lisp-Entry "class-definition?" () 167 11 ("Class-Entry" "is?" "object")}
        {Lisp-Entry "get-definitions" () 171 18 ("get-output" "get-definitions" "put-sequence" "catalog" "dynamic" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "name")}
        {Lisp-Entry "get-definition" () 179 18 ("car" "not-null?" "when" "get-definitions" "definitions" "let" "name")}
        {Lisp-Entry "get-category-definitions" () 186 18 ("get-output" "get-category-definitions" "put-sequence" "catalog" "dynamic" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "name")}
        {Lisp-Entry "get-coalesced-definitions" () 194 18 ("Category-Entry" "car" "is?" "length" "1" "=" "and" "if" "Constructor-Entry" "is-not?" "entry" "dynamic" "function" "collect-if" "coalesced" "get-definitions" "definitions" "let*" "get-context" "context" "context:" "name")}
        {Lisp-Entry "get-references" () 205 18 ("get-output" "get-references" "put-sequence" "catalog" "dynamic" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "name")}
        {Lisp-Entry "get-file-entries" () 213 18 ("get-output" "put" "when" "get-file-entry" "entry" "catalog" "dynamic" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "file")}
        {Lisp-Entry "get-completions" () 228 18 ("get-output" "get-completions" "put-sequence" "catalog" "dynamic" "function" "for-each-catalog" "List-Factory" "new" "fact" "let" "get-context" "context" "context:" "name")}}}})
"Catch-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Catch-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.frame.Catch-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Catch-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-image" () 57 11 ("Bitmap-Resource")}}}})
"Category-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Category-Declaration.fusion"} {Time 128360671600000000L}
    {Lisp-Entry "jazz.language.declaration.Category-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Category-Declaration" () 40 7 ("Namespace-Declaration")
        {Lisp-Entry "metaclass" () 43 8 ("generate")}}}})
"Category-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Category-Doc.fusion"} {Time 128360671600000000L}
    {Lisp-Entry "jazz.doc.doc.Category-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Category-Doc" () 45 7 ("Element-Doc")
        {Lisp-Entry "extends" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "catalog" () 51 8 ()}
        {Lisp-Entry "get-catalog" () 59 11 ("catalog")}
        {Lisp-Entry "set-catalog" () 63 11 ("children" "set-catalog" "child" "dynamic" "function" "for-each" "catalog" "set!" "cat")}
        {Lisp-Entry "update-indexes" () 75 11 ("children" "update-indexes" "child" "dynamic" "function" "for-each" "nextmethod" "references-index" "definitions-index")}
        {Lisp-Entry "print-catalog" () 82 11 ("children" "1" "+" "print-catalog" "child" "dynamic" "function" "for-each" "doc" "extends" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" () 98 11 ("doc" "name" "format")}
        {Lisp-Entry "print-html" () 107 11 ("print-html" "self" "Category-Doc-HTML-Printer" "new" "let" "printer" "formatter")}
        {Lisp-Entry "property-presentation" () 119 16 ("nextmethod" "else" "extends" "field-name" "case" "property")}
        {Lisp-Entry "sort-components?" () 125 11 ("true")}}
      {Lisp-Entry "Category-Doc-HTML-Printer" () 129 7 ("HTML-Printer")
        {Lisp-Entry "print-html" () 132 11 ("style-sheet:" "1" "header-level:" "true" "header?:" "print-children-html" "doc" "formatter" "printer" "format" "line" "for-each" "dynamic" "function" "name" "with-document")}
        {Lisp-Entry "print-children-html" () 148 29 ("print-group" "print-group-index" "outside" "get-package-name" "not" "doc" "dynamic" "function" "collect-if" "inside" "children" "Method-Doc" "collect-type" "methods" "let*")}
        {Lisp-Entry "print-group-index" () 158 11 ("get-name" "name" "let" "child" "dynamic" "function" "for-each" "printer" "format" "when" "group" "title")}
        {Lisp-Entry "print-group" () 171 11 ("formatter" "print-content" "child" "dynamic" "function" "for-each" "printer" "format" "when" "group" "title")}}}})
"Category-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Category-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Category-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Category-Entry" () 45 7 ("Java-Entry")
        {Lisp-Entry "extends" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("extends~self" "set!" "nextmethod" "definitions" "column" "line" "extends" "name" "qualified" "modifiers")}
        {Lisp-Entry "get-extends" () 56 18 ("extends")}
        {Lisp-Entry "set-extends" () 60 18 ("extends" "set!" "value")}
        {Lisp-Entry "present" () 64 11 ("get-category-name" "mode")}
        {Lisp-Entry "update-indexes" () 73 11 ("extends" "last" "update-index" "qualified" "dynamic" "function" "for-each" "nextmethod" "references-index" "definitions-index")}
        {Lisp-Entry "insert-self-definitions" () 85 11 ("nextmethod" "insert-inherited" "insert-interfaces" "insert-ascendants" "sort?" "father" "tree")}
        {Lisp-Entry "collect-ascendants" () 92 11 ("get-output" "extends" "get-extends" "for-each" "put" "get-list" "memq?" "not" "and" "get-qualified-category" "category" "when" "qualified" "dynamic" "function" "process" "letrec" "List-Factory" "new" "fact" "get-catalog" "catalog" "let")}
        {Lisp-Entry "collect-inherited" () 106 11 ("get-definitions" "ascendant" "dynamic" "function" "map" "append" "apply" "ascendants")}
        {Lisp-Entry "insert-ascendants" () 110 29 ("user-data:" "get-image" "present-name" "category" "dynamic" "function" "for-each" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" ":row-height" "collapsed" "state:" "father:" "add-row" "row" "when" "collect-ascendants" "ascendants" "let" "father" "tree")}
        {Lisp-Entry "insert-interfaces" () 119 29 ("father" "tree")}
        {Lisp-Entry "insert-interfaces-list" () 123 11 ("get-extends" "for-each" "user-data:" "get-image" "present-name" "get-qualified-category" "interface" "qualified" "dynamic" "function" "insert" "letrec" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" ":row-height" "collapsed" "state:" "father:" "add-row" "row" "get-catalog" "catalog" "let" "when" "interfaces" "title" "father" "tree")}
        {Lisp-Entry "insert-inherited" () 141 11 ("true" "insert-definitions" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" ":row-height" "collapsed" "state:" "father:" "add-row" "row" "let" "when" "collect-inherited" "inherited" "collect-ascendants" "ascendants" "let*" "father" "tree")}}}})
"Category-Moniker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "category" "Category-Moniker.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.library.category.Category-Moniker" () 37 9 ("jazz")
      {Lisp-Entry "Category-Moniker" () 45 7 ("Moniker")
        {Lisp-Entry "category-name" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "category-name" "context")}
        {Lisp-Entry "print" () 56 11 ("category-name" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-name" () 67 11 ("category-name")}
        {Lisp-Entry "get-file" () 71 11 ("get-source")}
        {Lisp-Entry "get-protocol" () 81 16 ("category")}
        {Lisp-Entry "new-moniker" () 86 16 ("car" "self" "new" "list")}
        {Lisp-Entry "present" () 90 11 ("category-name" "format")}
        {Lisp-Entry "initialize" () 99 11 ("category-name" "set!" "nextmethod" "name")}
        {Lisp-Entry "get-source" () 109 18 ("error" "category-name" "get-manifest-source" "either")}
        {Lisp-Entry "load-lines" () 119 11 ("get-source" "load-lines")}
        {Lisp-Entry "save-lines" () 123 11 ("get-source" "save-lines" "lines")}
        {Lisp-Entry "load-form" () 127 11 ("get-source" "load-form")}}}})
"Cell"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Cell.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.utility.Cell" () 37 9 ("jazz")
      {Lisp-Entry "Cell" () 43 7 ("Numeric")
        {Lisp-Entry "row" () 46 15 ("generate")}
        {Lisp-Entry "col" () 47 15 ("generate")}
        {Lisp-Entry "initialize" () 50 11 ("col" "row" "set!" "nextmethod" "c" "r")}
        {Lisp-Entry "copy-object" () 56 11 ("col" "row" "Cell" "new" "deep?")}
        {Lisp-Entry "compare-object" () 60 11 ("get-col" "col" ":equal" "/=" "get-row" "row" "compare" "compared" "let" ":incompatible" "Cell" "is-not?" "if" "target")}
        {Lisp-Entry "print" () 69 11 ("col" "row" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "increase-row" () 81 18 ("+" "row" "set!" "1" "delta")}
        {Lisp-Entry "increase-col" () 85 18 ("+" "col" "set!" "1" "delta")}
        {Lisp-Entry "negate" () 94 11 ("col" "row" "-" "Cell" "new")}
        {Lisp-Entry "add" () 98 11 ("self" "error" "else" "integer?" "get-col" "col" "get-row" "row" "+" "new" "Cell" "is?" "cond" "n")}
        {Lisp-Entry "inverse" () 104 11 ("self" "error")}
        {Lisp-Entry "multiply" () 108 11 ("self" "error" "col" "row" "*" "Cell" "new" "integer?" "if" "n")}}}})
"Cell-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Cell-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Cell-Row" () 37 9 ("jazz")
      {Lisp-Entry "Cell-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 53 11 ("get-col" "get-row" "format" "cell")}
        {Lisp-Entry "get-edited-value" () 64 11 ("Cell" "new" "col" "row" "bind" "editor" "get-string-content" "read-delimited-string" "list" "let")}
        {Lisp-Entry "edit" () 70 11 ("get-tree" "expand/collapse" "get-col" "value" "get-row" "self" "add-row" "edit-in-cell")}
        {Lisp-Entry "close-editor" () 77 11 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" () 82 11 ("get-sons" "nextmethod" "or")}}}})
"Chapters-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "code" "Chapters-Browser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.code.Chapters-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Chapters-Browser" () 48 7 ("width:" "title:" "on-selection-change" "Selection-Handler" "selection-handler:" "show-header?:" "Axis" "sons-class:" "chapters" "shown?:" "header" "content" "flat?:" "hscroll?:" "vscroll?:" "scroller" "on-update" "update" "on-toggle-sorted" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "Dimension" "size:" "sorted?" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "client" () 51 12 ("set-client" "get-client")}
        {Lisp-Entry "external-name" () 68 16 ("chapters-browser" "rest")}
        {Lisp-Entry "palette-class" () 78 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 83 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 88 16 ()}
        {Lisp-Entry "client-activate" () 92 11 ("set-client" "Text-View" "is?" "if" "current-document" "guest" "let")}
        {Lisp-Entry "client-deactivate" () 99 11 ("set-client")}
        {Lisp-Entry "get-tools-view" () 108 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 112 11 ("acquire-focus" "chapters" "locate" "tree" "let")}
        {Lisp-Entry "get-sorted?" () 122 11 ("sorted?" "locate" "get-selected?")}
        {Lisp-Entry "on-toggle-sorted" () 131 11 ("update" "evt")}
        {Lisp-Entry "on-update" () 135 11 ("update" "evt")}
        {Lisp-Entry "on-selection-change" () 139 11 ("head" ":force-vertical" "ensure-displayed" "false" ":ensure-displayed?" "Cell" "Range" "new" "set-selection" "client" "paragraph-length" "len" "get-col" "col" "row" "get-row" "get-user-data" "cdr" "pos" "let*" "when" "get-single-selection" "selection" "chapters" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "get-client" () 158 18 ("client")}
        {Lisp-Entry "set-client" () 162 18 ("update" "set!" "client" "/=" "when" "clt")}
        {Lisp-Entry "update" () 168 11 ("length" "+" "cons" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" ":row-height" "state:" "father:" "add-row" "row" "collapsed" "eq?" "state" "Bitmap-Resource" "image" "find-father-row" "father" "false" "first?" "title" "header" "pos" "level" "bind" "info" "for-each" "previous-row" "get-root-row" "root-row" "true" "expanded" "insert-item" "set!" "when" "first-row" "fourth" "key:" "" "sort" "get-sorted?" "sorted" "get-remaining-chapters" "remaining" "get-first-chapter" "first" "get-chapters" "lst" "let*" "dynamic" "function" "with-update-locked" "remove-every-row" "client" "not" "if" "chapters" "locate" "tree" "let")}
        {Lisp-Entry "insert-item" () 195 11 ("length" "+" "0" "cons" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "Bitmap-Resource" "if" "image" "let" "title" "header" "pos" "level" "bind" "first?" "item" "state" "father" "tree")}
        {Lisp-Entry "find-father-row" () 201 11 ("get-user-data" "car" "" "eq?" "if" "row" "dynamic" "function" "for-each-ancestor" "return" "lambda" "call/ec" "when" "level" "previous-row" "root-row")}}}})
"Char-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Char-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Char-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Char-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-char" "invoke")}
        {Lisp-Entry "test-char" () 61 11 ()}}}})
"Check-Box"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Check-Box.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Check-Box" () 37 9 ("jazz")
      {Lisp-Entry "Check-Box" () 47 7 ("View")
        {Lisp-Entry "box-size" () 50 14 ()}
        {Lisp-Entry "checked?" () 54 12 ("set-checked?" "get-checked?" "false")}
        {Lisp-Entry "color" () 55 12 ("set-color" "get-color" "Black" "name:" "Color")}
        {Lisp-Entry "tracking?" () 58 8 ("false")}
        {Lisp-Entry "inside?" () 59 8 ("false")}
        {Lisp-Entry "default-size" () 62 11 ("Dimension")}
        {Lisp-Entry "get-sort-value" () 66 11 ("title" "localize")}
        {Lisp-Entry "get-checked?" () 75 18 ("checked?")}
        {Lisp-Entry "set-checked?" () 79 18 ("invalidate-view" "call-content-change" "checked?" "set!" "flag")}
        {Lisp-Entry "get-color" () 85 18 ("color")}
        {Lisp-Entry "set-color" () 89 18 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "change-state" () 99 29 ("checked?" "not" "set-checked?" "reverse?")}
        {Lisp-Entry "text-extent" () 108 11 ("font" "text-extent" "Dimension" "not" "if" "localize" "title" "let")}
        {Lisp-Entry "box-rect" () 115 11 ("+" "box-size" "0" "Rect" "new" "2" "get-height" "-" "quotient" "v" "text-extent" "extent" "let*")}
        {Lisp-Entry "draw" () 126 11 ("draw-text" "color" "determine-color" "either" "set-text-color" "font" "set-font" "Focused-Selection" "get-width" "Rect" "new" "cell" "row" "get-selection-mode" "memq?" "Tree-View" "outline" "is?" ":selected?" "getf" "selected?" "let" "when" "+" "3" "draw-check" "White" "Medium" "name:" "Color" "if" "inflate-rect" "fill-rect" "rectangle" "edges:" "outer:" "sunken" "inner:" "draw-edge" "inside?" "tracking?" "and" "enabled?" "not" "or" "grayed?" "box-rect" "rect" "2" "-" "quotient" "v" "h" "get-height" "height" "text-extent" "extent" "localize" "title" "let*" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-check" () 151 29 ("draw-check" "Black" "Dark" "name:" "Pen" "if" "set-pen" "checked?" "when" "grayed?" "v" "h" "dc")}
        {Lisp-Entry "mouse-down" () 162 11 ("invalidate-view" "acquire-capture" "inside?" "tracking?" "set!" "enabled?" "when" "true" "focus?:" "outline-select" "box-rect" "in-rect?" "not" "outline" "and" "if" "pos")}
        {Lisp-Entry "drag-move" () 172 11 ("invalidate-view" "set!" "inside?" "neq?" "over-view?" "over?" "let" "tracking?" "when" "pos")}
        {Lisp-Entry "drag-up" () 180 11 ("self" "process-action" "outline" "not" "if" "true" "set-modified?" "shift-down?" "change-state" "inside?" "false" "set!" "release-capture" "tracking?" "when" "rest" "pos")}}}})
"Check-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Check-Item.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.Check-Item" () 37 9 ("jazz")
      {Lisp-Entry "Check-Item" () 45 7 ("Label-Item")
        {Lisp-Entry "checked?" () 48 12 ("set-checked?" "get-checked?" "false")}
        {Lisp-Entry "get-checked?" () 56 18 ("checked?")}
        {Lisp-Entry "set-checked?" () 60 18 ("invalidate-view" "checked?" "set!" "flag")}
        {Lisp-Entry "preferred-prefix-width" () 70 11 ("0" "checked?" "if")}
        {Lisp-Entry "draw-prefix" () 79 11 ("Bitmap-Resource" "get-small-icons-cache" "draw-image" "2" "top" "5" "left" "get-application" "appl" "let" "checked?" "when" "context" "dc")}}}})
"ChickenScheme"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "scheme" "ChickenScheme.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "ChickenScheme" () 37 9 ("jazz")}})
"Child-Process"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "shell" "Child-Process.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.shell.Child-Process" () 37 9 ("jazz")
      {Lisp-Entry "Child-Process" () 44 7 ("WinUser" "WinShell" "WinKernel" "WinBase" "WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "process-id" () 47 8 ()}
        {Lisp-Entry "process-handle" () 48 8 ()}
        {Lisp-Entry "input-pipe" () 49 8 ()}
        {Lisp-Entry "output-pipe" () 50 8 ()}
        {Lisp-Entry "error-pipe" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("destroy-mandatory" "error-pipe" "output-pipe" "input-pipe" "process-id" "process-handle" "set!" "nextmethod" "error" "output" "input" "id" "handle")}
        {Lisp-Entry "destroy" () 64 11 ("nextmethod" "error-pipe" "output-pipe" "input-pipe" "close")}
        {Lisp-Entry "get-process-handle" () 76 18 ("process-handle")}
        {Lisp-Entry "get-process-id" () 80 18 ("process-id")}
        {Lisp-Entry "get-input-pipe" () 84 18 ("input-pipe")}
        {Lisp-Entry "get-output-pipe" () 88 18 ("output-pipe")}
        {Lisp-Entry "get-error-pipe" () 92 18 ("error-pipe")}
        {Lisp-Entry "get-standard-input" () 96 18 ("input-pipe" "get-printer")}
        {Lisp-Entry "get-standard-output" () 100 18 ("output-pipe" "get-reader")}
        {Lisp-Entry "get-standard-error" () 104 18 ("error-pipe" "get-reader")}}}})
"Children-Descriptor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "descriptor" "Children-Descriptor.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.descriptor.Children-Descriptor" () 37 9 ("jazz")
      {Lisp-Entry "Children-Descriptor" () 45 7 ("Component")
        {Lisp-Entry "get-class-descriptor" () 54 16 ("Descriptors.Children-Descriptor")}}}})
"Children-Rights"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "security" "Children-Rights.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.security.Children-Rights" () 37 9 ("jazz")
      {Lisp-Entry "Children-Rights" () 44 7 ("Rights")}}})
"Children-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Children-Tree.fusion"} {Time 128360666680000000L}
    {Lisp-Entry "jazz.designer.editor.Children-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Children-Tree" () 46 7 ("on-selection-change" ":self" "Event-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" ":icons" "portfolio:" "reorderable?:" "draggable?:" "Components-Tree")
        {Lisp-Entry "base" () 49 12 ("set-base" "get-base")}
        {Lisp-Entry "details" () 50 12 ("set-details" "get-details")}
        {Lisp-Entry "get-base" () 62 18 ("base")}
        {Lisp-Entry "set-base" () 66 18 ("base" "set!" "value")}
        {Lisp-Entry "get-details" () 70 18 ("details")}
        {Lisp-Entry "set-details" () 74 18 ("details" "set!" "value")}
        {Lisp-Entry "branch-changed" () 83 11 ("update")}
        {Lisp-Entry "update" () 92 11 ("insert-rows" "setup-columns" "dynamic" "function" "with-update-locked" "selected-components" "selected-components:" "get-expand-state" "expand-state" "expand-state:")}
        {Lisp-Entry "setup-columns" () 99 11 ("width:" "title:" "name:" "Tree-Label-Column" "class:" "self" "context:" "add-column" "set-width" "set-title" "set-name" "get-node-column" "column" "false" "begin" "when" "detail-presentation" "title" "category-field" "property" "let*" "filled?" "width" "name" "bind" "detail" "dynamic" "function" "for-each" "first?" "node-column" "get-name" "details" "null?" "not" "or" "if" "true" "preserve-node-column?:" "remove-columns" "set-filled-column" "get-addable-base" "client" "essay" "base" "set!" "get-header" "header" "let")}
        {Lisp-Entry "insert-rows" () 124 11 ("update-selection" "insert-components" "get-recursive-details?" "recursive?" "let" "client" "when" "remove-every-row" "selected-components" "expand-state")}
        {Lisp-Entry "insert-components" () 132 11 ("get-presentation" "key:" "" "sort" "sort-components?" "if" "insert-component" "Group" "is?" "unless" "child" "dynamic" "function" "for-each" "get-components" "components" "let" "recursive?" "father" "component")}
        {Lisp-Entry "insert-component" () 142 29 ("insert-components" "user-data:" "children:" "expanded" "state:" "father:" "add-row" "cons" "children" "title" "value" "property" "filled?" "width" "name" "Tree-Label" "if" "detail" "dynamic" "function" "map" "labels" "image:" "title:" "Tree-Node" "new" "node" "get-component-image" "ni" "present-property" "nt" "read-property" "nv" "category-field" "np" "car" "nn" "let*" "filled" "name-info" "set!" "not" "is?" "based?" "rest" "first" "bind" "details" "base" "and" "when" "row" "let" "recursive?" "father" "component")}
        {Lisp-Entry "present-location" () 170 11 ("get-presentation" "localize" "ascendant" "dynamic" "function" "map" "join" "null?" "if" "collect-ascendants" "cdr" "ascendants" "let" "component")}
        {Lisp-Entry "on-designer" () 182 11 ("value:" "property:" "component:" "property-change" ":property-change" "child-remove" ":child-remove" "parent:" "child:" "get-property" "child-add" ":child-add" "get-kind" "case" "evt")}
        {Lisp-Entry "child-add" () 189 11 ("false" "insert-component" "dynamic" "function" "with-update-locked" "client" "neq?" "Group" "is?" "or" "unless" "parent" "child")}
        {Lisp-Entry "child-remove" () 196 11 ("remove-row" "dynamic" "function" "with-update-locked" "when" "component-row" "row" "let" "client" "get-parent" "neq?" "Group" "is?" "or" "unless" "child")}
        {Lisp-Entry "property-change" () 205 11 ("invalidate-cell" "set-title" "present-property" "title" "get-cell-data" "data" "Cell" "new" "cell" "let*" "get-user-data" "eq?" "rank" "row" "dynamic" "function" "for-each-visible-row" "when" "position" "return:" "car" "key:" "details" "field-name" "find" "col" "let" "client" "get-parent" "neq?" "Group" "is?" "or" "unless" "value" "property" "component")}}}})
"ChooseColor-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "ChooseColor-Dialog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.dialog.ChooseColor-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "ChooseColor-Dialog" () 47 7 ("Dialog")
        {Lisp-Entry "custom-colors" () 51 19 ("int" "new-array")}
        {Lisp-Entry "get-modal" () 56 16 ("error" "throw-cancel" "0" "=" "CommDlgExtendedError" "code" "get" ":colorref" "ChooseColor" "if" "CC_FULLOPEN" "CC_RGBINIT" "CC_ANYCOLOR" "bit-or" "Flags" "custom-colors" "lpCustColors" "Black" "name:" "Color" "either" "get-ref" "rgbResult" "get-toplevel" "get-handle" "hwndOwner" "size-of" "lStructSize" "set" "CHOOSECOLOR" "new" "r" "let" "close-all-popups" "initial-color" "initial-color:")}}}})
"ChooseFont-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "ChooseFont-Dialog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.dialog.ChooseFont-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "ChooseFont-Dialog" () 47 7 ("Dialog")
        {Lisp-Entry "get-modal" () 51 16 ("error" "throw-cancel" "=" "CommDlgExtendedError" "code" ":logfont" "Font" "ChooseFont" "0" "CF_INITTOLOGFONTSTRUCT" "CF_NOSCRIPTSEL" "CF_EFFECTS" "CF_SCREENFONTS" "bit-or" "Flags" "get-ref" "rgbColors" "lpLogFont" "get-toplevel" "get-handle" "hwndOwner" "size-of" "lStructSize" "set" "LOGFONT" "get-logfont" "if" "logfont" "CHOOSEFONT" "new" "r" "let" "close-all-popups" "Black" "name:" "Color" "initial-color" "initial-color:" "initial-font" "initial-font:")}}}})
"Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Chooser.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Chooser" () 47 7 ("on-cancel" "cancel" "on-ok" ":host" "Event-Handler" "action-handler:" "title:" "ok" "content" "Default-GUI" "description" "Label-Bold" "Font" "font:" "9" "Point" "position:" "title" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "resize" () 64 11 ("cancel" "ok" "move-figure" "content" "locate" "size-figure" "nextmethod" "dv" "dh")}}}})
"Class-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "tools" "Class-Browser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.tools.Class-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Class-Browser" () 49 7 ("width:" "display-images?:" "on-double-click" "double-click-handler:" ":icons" "portfolio:" "multiple-selection?:" "classes" "document" "classes-border" "on-browse" "action-handler:" "7" "title:" "browse" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "focus-selects-all?:" "show-unfocused-selection?:" "accepts-returns?:" "top-padding:" "left-padding:" "name" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "entry" "style:" "edge" "border-type:" "9" "2" "Point" "position:" "name-border" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "text" () 52 12 ()}
        {Lisp-Entry "palette-icon" () 77 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 82 16 ()}
        {Lisp-Entry "palette-position" () 87 16 ("Point")}
        {Lisp-Entry "palette-size" () 92 16 ("Dimension")}
        {Lisp-Entry "install-in-host" () 96 11 ("name" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "get-text" () 106 18 ("name" "locate" "get-string-content")}
        {Lisp-Entry "set-text" () 110 18 ("either" "name" "locate" "set-string-content" "value")}
        {Lisp-Entry "guest-actions" () 120 11 ("nextmethod" "class-browser" "find-actions" "cons")}
        {Lisp-Entry "resize" () 130 11 ("classes-border" "size-figure" "0" "browse" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-browse" () 136 11 ("true" ":size-range" "get-root-class" ":root" "browse-inheritance-tree" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-return-press" () 145 11 ("on-browse" "evt")}
        {Lisp-Entry "on-double-click" () 149 11 ("type-name" "edit-definition" "get-application" "appl" "get-user-data" "type" "get-row" "row" "when" "get-single-selection" "selection" "get-sender" "tree" "let*" "evt")}
        {Lisp-Entry "on-touch-files" () 159 11 ("touch-selection" "evt")}
        {Lisp-Entry "get-root-class" () 163 11 ("string->symbol" "autoload" "Object" "empty-string?" "if" "get-string-content" "string" "name" "locate" "text" "let*")}
        {Lisp-Entry "browse-inheritance-tree" () 176 11 ("key:" "type-descendants" "sort" "subtype" "for-each" "collapsed" "if" "get-end" "" "get-start" ">=" "and" "or" "when" "size" "proc" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "essay" "father" "type-ascendant" "ascendant" "type-name" "->string" "title" "expanded" "state" "let*" "upward" "else" "0" "void" "eq?" "class-sizes" "fourth" "class?" "size-of" "structure?" "cond" "type" "get-size" "letrec" "remove-every-row" "dynamic" "function" "with-update-locked" "classes" "locate" "tree" "let" "true" "size-range" "size-range:" "Object" "root" "root:")}
        {Lisp-Entry "selected-categories" () 215 11 ("get-row" "get-user-data" "category" "let" "rank" "dynamic" "function" "map" "get-selection" "selection" "classes" "locate" "tree" "let*")}
        {Lisp-Entry "selected-files" () 224 11 ("selected-categories" "type-name" "get-manifest-source" "category" "dynamic" "function" "collect")}
        {Lisp-Entry "touch-selection" () 236 11 ("format-plural" "format" "message-box" "touch" "file" "dynamic" "function" "for-each" "length" "count" "selected-files" "files" "let*")}}}})
"Class-Browser-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "tools" "Class-Browser-Actions.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.tools.Class-Browser-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Class-Browser-Actions" () 47 7 (":alt" "Shortcut" "shortcut:" "on-touch-files" ":guest" "Event-Handler" "action-handler:" "touch-files" "name:" "Actions")}}})
"Class-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Class-Declaration.fusion"} {Time 128360666680000000L}
    {Lisp-Entry "jazz.language.declaration.Class-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Class-Declaration" () 40 7 ("Category-Declaration")
        {Lisp-Entry "ascendant" () 43 8 ("generate")}
        {Lisp-Entry "interfaces" () 44 8 ("generate")}}}})
"Class-Descriptor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "descriptor" "Class-Descriptor.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.descriptor.Class-Descriptor" () 37 9 ("jazz")
      {Lisp-Entry "Class-Descriptor" () 45 7 ("Component")
        {Lisp-Entry "title" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "image" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "name-prohibited?" () 50 12 ("generate" "accessors" "false")}
        {Lisp-Entry "name-mandatory?" () 51 12 ("generate" "accessors" "false")}
        {Lisp-Entry "name-unicity?" () 52 12 ("generate" "accessors" "false")}
        {Lisp-Entry "get-class-descriptor" () 61 16 ("Descriptors.Class-Descriptor")}}}})
"Class-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Class-Doc.fusion"} {Time 128360666680000000L}
    {Lisp-Entry "jazz.doc.doc.Class-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Class-Doc" () 45 7 ("Category-Doc")
        {Lisp-Entry "implements" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "print-catalog" () 56 11 ("children" "1" "+" "print-catalog" "child" "dynamic" "function" "for-each" "doc" "implements" "extends" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" () 72 11 ("name" "format")}
        {Lisp-Entry "get-class-image" () 82 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 87 16 ("nextmethod" "else" "implements" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 93 11 ("implements" "extends" "package-name")}}}})
"Class-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Class-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Class-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Class-Entry" () 45 7 ("Category-Entry")
        {Lisp-Entry "implements" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "definitions" "column" "line" "implements" "extends" "name" "modifiers" "context")}
        {Lisp-Entry "initialize" () 56 11 ("implements~self" "set!" "nextmethod" "definitions" "column" "line" "implements" "extends" "name" "qualified" "modifiers")}
        {Lisp-Entry "get-implements" () 61 18 ("implements")}
        {Lisp-Entry "set-implements" () 65 18 ("implements" "set!" "value")}
        {Lisp-Entry "print-catalog" () 69 11 ("definitions" "1" "+" "print-catalog" "definition" "dynamic" "function" "for-each" "column" "line" "implements" "extends" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 80 11 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" () 89 11 ("implements" "last" "update-index" "qualified" "dynamic" "function" "for-each" "nextmethod" "references-index" "definitions-index")}
        {Lisp-Entry "insert-interfaces" () 101 11 ("implements" "insert-interfaces-list" "father" "tree")}}}})
"Class-Rights"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "security" "Class-Rights.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.security.Class-Rights" () 37 9 ("jazz")
      {Lisp-Entry "Class-Rights" () 44 7 ("Rights")
        {Lisp-Entry "model" () 47 12 ("generate" "accessors")}
        {Lisp-Entry "print" () 55 11 ("model" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-model-class" () 66 18 ("model" "autoload")}
        {Lisp-Entry "find-component-rights" () 75 18 ("get-ancestry" "self" "cdr" "when" "car" "find-child-rights" "child-rights" "let" "null?" "if" "ancestry" "rights" "dynamic" "function" "proc" "letrec" "component" "reference")}
        {Lisp-Entry "children-rights" () 91 18 ("children" "find-component")}
        {Lisp-Entry "child-rights" () 95 18 ("get-children" "when" "children-rights" "children" "let")}
        {Lisp-Entry "find-child-rights" () 101 18 ("child-rights" "get-model-class" "is?" "child-right" "dynamic" "function" "find-if" "component")}
        {Lisp-Entry "properties-rights" () 112 18 ("properties" "find-component")}
        {Lisp-Entry "property-rights" () 116 18 ("get-children" "when" "properties-rights" "properties" "let")}
        {Lisp-Entry "filter-properties" () 122 18 ("can-access?" "field-name" "get-name" "eq?" "and" "some?" "property" "dynamic" "function" "collect-if" "property-rights" "property-rigths" "let" "properties")}}}})
"Class-Wizard"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "wizard" "Class-Wizard.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.wizard.Class-Wizard" () 37 9 ("jazz")
      {Lisp-Entry "Class-Wizard" () 48 7 ("cancel" "default?:" "action-handler:" "ok" "Default-GUI" "Font" "font:" "title:" "prefix" "on-cancel" "escape-press-handler:" "on-ok" ":host" "Event-Handler" "return-press-handler:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "text" "name:" "edge" "border-type:" "Point" "position:" "Dimension" "size:" "Wizard")
        {Lisp-Entry "install-in-host" () 60 11 ("text" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "dialog-class" () 71 16 ("Class-Wizard-Dialog")}
        {Lisp-Entry "Class-Wizard-Dialog" () 76 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")
          {Lisp-Entry "get-modal-result" () 83 13 ("text" "guest" "locate" "get-string-content")}}}}})
"Classpath-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Classpath-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Classpath-Row" () 37 9 ("jazz")
      {Lisp-Entry "Classpath-Row" () 45 7 ("String-Row")
        {Lisp-Entry "present" () 53 11 ("else" "join" "List" "is?" "null?" "nullable?" "and" "cond" "value")}
        {Lisp-Entry "get-edited-value" () 64 11 ("split" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-string-content" "string" "let")}}}})
"Client-DC"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Client-DC.fusion"} {Time 128360915140000000L}
    {Lisp-Entry "jazz.ui.graphic.Client-DC" () 37 9 ("jazz")
      {Lisp-Entry "Client-DC" () 45 7 ("DC")
        {Lisp-Entry "window" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("get-handle" "GetDC" "hdc" "window" "set!" "NULL" "nextmethod" "wnd")}
        {Lisp-Entry "destroy-hdc" () 58 11 ("hdc" "window" "get-handle" "ReleaseDC")}}}})
"Closure-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Closure-Frame.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.frame.Closure-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Closure-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "presented" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("unmarshal" "self" "new" "presented" "name" "address" "ior" "context")}
        {Lisp-Entry "initialize" () 56 11 ("present-frame" "either" "presented~self" "set!" "nextmethod" "presented" "name" "address" "thread")}
        {Lisp-Entry "print" () 61 11 ("presented" "name" "address" "thread" "marshal" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "present" () 75 11 ("presented")}
        {Lisp-Entry "present-frame" () 79 11 ("present-closure" "address" "frame-procedure" "closure" "let")}
        {Lisp-Entry "present-closure" () 84 11 ("closure-function" "present-function" "closure")}
        {Lisp-Entry "present-function" () 88 11 ("present-inner-function" "else" "present-toplevel-function" "function-method?" "null?" "cond" "function")}
        {Lisp-Entry "present-toplevel-function" () 94 11 ("field-name" "field-creator" "type-name" "format" "null?" "if" "object-definer" "definer" "let" "function")}
        {Lisp-Entry "present-inner-function" () 104 11 ("1" "function-rank" "+" "present-function" "format" "function-container" "container" "let" "function")}
        {Lisp-Entry "get-image" () 111 11 ("Bitmap-Resource")}}}})
"CoClosure-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "CoClosure-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.frame.CoClosure-Frame" () 37 9 ("jazz")
      {Lisp-Entry "CoClosure-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-image" () 57 11 ("Bitmap-Resource")}}}})
"CoError"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "com" "CoError.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.kernel.runtime.CoError" () 37 9 ("jazz")
      {Lisp-Entry "CoError" () 44 7 ("Object" "get-errorinfo-description" "Error")
        {Lisp-Entry "hresult" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("get-coerror-message" "set-message" "hresult~self" "set!" "nextmethod" "message/cointerface" "hresult")}
        {Lisp-Entry "get-hresult" () 56 18 ("hresult")}
        {Lisp-Entry "get-message" () 60 11 ("hresult" "format" "message" "either")}
        {Lisp-Entry "get-coerror-message" () 65 11 ("get-errorinfo-message" "string?" "if" "message/cointerface" "hresult")}
        {Lisp-Entry "get-errorinfo-message" () 71 11 ("get-errorinfo-description" "format" "cointerface" "hresult")}
        {Lisp-Entry "Object" () 82 17 ()}}}})
"CoInterface"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "com" "CoInterface.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.kernel.runtime.CoInterface" () 37 9 ("jazz")
      {Lisp-Entry "CoInterface" () 44 7 ("Object")
        {Lisp-Entry "print" () 47 11 ("dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"CoLibrary"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "CoLibrary.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.CoLibrary" () 37 9 ("jazz")
      {Lisp-Entry "CoLibrary" () 44 7 ("Object")
        {Lisp-Entry "library-interfaces" () 47 26 ()}
        {Lisp-Entry "library-classes" () 51 26 ()}
        {Lisp-Entry "library-file" () 55 18 ("append" "Idl" "list" "File" "new" "self" "class-of" "type-name" "->string" "name" "let")}
        {Lisp-Entry "register" () 60 18 ("register-classes" "register-library")}
        {Lisp-Entry "register-library" () 65 11 ("register" "library-file" "file:" "Type-Lib" "new" "type-lib" "with-closed")}
        {Lisp-Entry "register-classes" () 70 11 ("library-classes" "register-class" "class" "dynamic" "function" "for-each")}
        {Lisp-Entry "register-class" () 76 11 ("class")}
        {Lisp-Entry "print" () 80 11 ("dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"CoObject"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "com" "CoObject.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.kernel.runtime.CoObject" () 37 9 ("jazz")
      {Lisp-Entry "CoObject" () 44 7 ("Object")
        {Lisp-Entry "print" () 47 11 ("dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Coalesced-Frames-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Coalesced-Frames-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Coalesced-Frames-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Coalesced-Frames-Snapshot" () 46 7 ("Frame-Snapshot")
        {Lisp-Entry "lisp-frame" () 49 8 ()}
        {Lisp-Entry "c++-frame" () 50 8 ()}
        {Lisp-Entry "eval-frame" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("eval-frame" "c++-frame" "lisp-frame" "set!" "nextmethod" "eval" "c++" "lisp" "thread")}
        {Lisp-Entry "get-frame" () 66 11 ("c++-frame" "lisp-frame" "either")}
        {Lisp-Entry "get-parameters" () 70 11 ("get-frame" "get-parameters")}
        {Lisp-Entry "present" () 79 11 ("get-frame" "present")}
        {Lisp-Entry "get-image" () 83 11 ("get-frame" "get-image")}
        {Lisp-Entry "edit" () 92 11 ("get-frame" "c++-frame" "edit" "shift-down?" "if")}}}})
"Code-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Code-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Code-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Code-Entry" () 45 7 ("Java-Entry")
        {Lisp-Entry "type" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("type~self" "set!" "nextmethod" "definitions" "column" "line" "type" "name")}
        {Lisp-Entry "get-type" () 56 18 ("type")}}}})
"Code-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Code-Explorer.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Code-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "Code-Explorer" () 45 7 ("Text-Explorer")
        {Lisp-Entry "backward-expr" () 48 26 ("string" "kind" "set!" "backward-word" "when")}
        {Lisp-Entry "forward-expr" () 54 26 ("string" "kind" "set!" "forward-word" "when")}
        {Lisp-Entry "collect-backward-exprs" () 60 18 ("get-mark" "cons" "set!" "backward-expr" "while" "list" "let")}
        {Lisp-Entry "collect-forward-exprs" () 67 18 ("get-output" "decrease!" "get-mark" "put" "forward-expr" "0" ">=" "and" "while" "List-Factory" "new" "fact" "let" "n")}}}})
"Code-Generator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "generator" "Code-Generator.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.generator.Code-Generator" () 37 9 ("jazz")
      {Lisp-Entry "Code-Generator" () 44 7 ("Object")
        {Lisp-Entry "emit-section-header" () 52 11 ("format" "printer" "section-name")}
        {Lisp-Entry "emit-parameters" () 59 11 ("cdr" "car" "else" "set!" "variable-symbol" "format" "variable?" "cond" "not-null?" "while" "printer" "parameters")}}}})
"Code-Location"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Code-Location.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Code-Location" () 37 9 ("jazz")
      {Lisp-Entry "Code-Location" () 45 7 ("Object")
        {Lisp-Entry "edit" () 48 26 ("rest")}}}})
"Code-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "syntax" "Code-Syntax.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.syntax.Code-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "Code-Syntax" () 45 7 ("Text-Syntax")
        {Lisp-Entry "auto-complete-characters" () 53 26 ()}
        {Lisp-Entry "auto-complete-char?" () 57 26 ("text-constituent?" "not" "auto-complete-characters" "memq?" "or" "last" "key")}}}})
"Code-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Code-Text-Actions.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Code-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Code-Text-Actions" () 46 7 ("on-paste&next" "paste&next" "F2" "on-paste&stay" "paste&stay" "F5" "on-recolorize-syntax" "recolorize-syntax" "on-update-catalog" "update-catalog" "Up" "on-exit-composite" "exit-composite" "Down" "on-enter-composite" "enter-composite" "Right" "on-forward" "forward" "Left" ":alt" ":control" "on-backward" "backward" ":shift" "on-edit-references" "edit-references" "F12" "Shortcut" "shortcut:" "on-edit-definition" ":focus" "Event-Handler" "action-handler:" "edit-definition" "name:" "Actions")}}})
"Code-Text-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Code-Text-Event.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Code-Text-Event" () 37 9 ("jazz")
      {Lisp-Entry "Code-Text-Event" () 45 7 ("Text-Event")}}})
"Code-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Code-Text-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Code-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Code-Text-Preferences" () 47 7 ("Text-Preferences")}
      {Lisp-Entry "Completion-List-Row" () 55 7 ("List-Row")
        {Lisp-Entry "get-subrow-class" () 58 11 ("Completion-Row")}
        {Lisp-Entry "auto-number?" () 62 11 ("false")}
        {Lisp-Entry "get-list-value" () 66 11 ("car" "key:" "value" "" "sort")}
        {Lisp-Entry "add-value" () 70 11 ("class:" "cdr" "car" "self" "add-row" "class" "value")}
        {Lisp-Entry "new-value" () 74 11 ("cons" "request-title" "prefix" "let")}
        {Lisp-Entry "request-title" () 79 11 ("initial-value:" ":prefix" "title:" "request-string" "current")}}
      {Lisp-Entry "Completion-Row" () 88 7 ("String-Row")
        {Lisp-Entry "get-subvalue" () 96 11 ("get-value" "get-title" "cons")}}}})
"Code-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Code-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Code-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Code-Text-View" () 49 7 ("left-padding:" "Code" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Text-View")
        {Lisp-Entry "Completion-Color" () 52 12 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "completion-color" () 56 12 ("set-completion-color" "get-completion-color" "Completion-Color")}
        {Lisp-Entry "completion-active?" () 59 8 ("false")}
        {Lisp-Entry "mouse-copy-selection" () 60 8 ()}
        {Lisp-Entry "new-syntax" () 67 11 ("Code-Syntax" "new")}
        {Lisp-Entry "frame-workspaces" () 76 11 ("debugger" "text")}
        {Lisp-Entry "get-completion-color" () 85 18 ("completion-color")}
        {Lisp-Entry "set-completion-color" () 89 18 ("invalidate-view" "completion-color" "set!" "value")}
        {Lisp-Entry "escape-press" () 94 11 ("remove-completion" "key")}
        {Lisp-Entry "tab-press" () 98 11 ("tabulate" "insert-char" "get-end" "get-start" "get-row" "=" "empty-selection?" "or" "shift-key?" "navigate-view" "accepts-returns?" "not" "end-completion" "has-completion?" "if" "modifiers" "key")}
        {Lisp-Entry "backspace-press" () 108 11 ("true" "complete-current" "when" "insert-char/backspace" "completion-active?" "not" "if" "get-start" "previous-cell" "previous" "let" "false" "word?" "word?:" "key")}
        {Lisp-Entry "char-press" () 116 11 ("show-arguments" "=" "when" "flash-matching-character" "auto-complete" "translated" "key")}
        {Lisp-Entry "insert-newline" () 123 11 ("nextmethod" "end-completion")}
        {Lisp-Entry "focus-lose" () 128 11 ("end-completion" "nextmethod" "view" "window")}
        {Lisp-Entry "mouse-down" () 134 11 ("nextmethod" "else" "self" "mouse-copy" "cond" "shift-down?" "shift?" "control-down?" "control?" "alt-down?" "alt?" "let" "end-completion" "pos")}
        {Lisp-Entry "mouse-down" () 145 11 ("nextmethod" "get-selection" "alt-down?" "essay" "mouse-copy-selection" "set!" "end-completion" "pos")}
        {Lisp-Entry "drag-up" () 155 11 ("set!" "mouse-insert" "set-selection" "get-string" "copy" "get-start" "expr-range" "selection" "has-selection?" "if" "range" "let*" "alt-down?" "mouse-copy-selection" "and" "when" "nextmethod" "rest" "pos")}
        {Lisp-Entry "select-outer" () 165 11 ("nextmethod" "end-completion")}
        {Lisp-Entry "context-menu" () 170 11 ("get-context-menu" "track-popup-menu" "edit-references" "edit-definition" ":move-caret" "context-menu-click" "always" "else" "never" "outside-selection" "not" "and" "cond" "move-caret" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "focus-actions" () 188 11 ("nextmethod" "code-text" "find-actions" "cons")}
        {Lisp-Entry "explorer-class" () 198 11 ("Code-Explorer")}
        {Lisp-Entry "on-backward" () 207 18 ("backward-expr" "evt")}
        {Lisp-Entry "on-forward" () 211 18 ("forward-expr" "evt")}
        {Lisp-Entry "on-enter-composite" () 215 18 ("enter-composite" "evt")}
        {Lisp-Entry "on-exit-composite" () 219 18 ("exit-composite" "evt")}
        {Lisp-Entry "forward-expr" () 223 29 ("get-range" "set-selection" "forward-expr" "when" "get-end" "end:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "backward-expr" () 229 29 ("get-range" "set-selection" "backward-expr" "when" "get-start" "start:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "enter-composite" () 235 29 ("set-caret" "enter-composite" "when" "get-end" "end:" "get-start" "start:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "exit-composite" () 241 29 ("set-caret" "exit-list" "when" "end:" "get-end" "start:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "move-caret" () 247 11 ("end-completion" "nextmethod" "shift?" "direction" "pos")}
        {Lisp-Entry "get-context" () 257 26 ("true")}
        {Lisp-Entry "header-string?" () 261 11 ("last" "first" "=" "2" "length" ">=" "string?" "and" "form")}
        {Lisp-Entry "edition-workspace" () 268 29 ()}
        {Lisp-Entry "on-edit-definition" () 272 11 ("get-context" "context:" "current-history-item" "history-item:" "edit-definition" "standardize-form" "else" "browse-url" "URL" "is?" "edition-workspace" "workspace:" "edit-document" "file?" "length" "-" "1" "subseq" "edit-filename" "header-string?" "cond" "when" "get-application" "appl" "current-expr" "form" "let" "evt")}
        {Lisp-Entry "on-edit-references" () 287 11 ("get-context" "context:" "current-history-item" "history-item:" "edit-references" "standardize-form" "when" "get-application" "appl" "current-expr" "form" "let" "evt")}
        {Lisp-Entry "standardize-form" () 295 11 ("else" "dispatch->name" "dispatch?" "tag->name" "tag?" "cond" "form")}
        {Lisp-Entry "on-add-to-favorites" () 301 11 (":symbol" "list" "Favorite-Symbol" "Favorites-Manager" "singleton-palette" "get-guest" "add-to-favorites" "when" "current-expr" "form" "let" "evt")}
        {Lisp-Entry "expr-at" () 307 29 ("pos")}
        {Lisp-Entry "edit-symbol-class" () 311 29 ("false" "symbol")}
        {Lisp-Entry "edit-definition" () 315 21 (":definitions" "history-item:" "Definitions-Menu" "new" "track-popup-menu" "car" "edit" "add-history" "bell" "0" "case" "get-context" "context:" "get-coalesced-definitions" "list" "standardize-form" "current-history-item" "item" "get-cataloguer" "cataloguer" "appl" "let*" "else" "browse-url" "URL" "is?" "edit-document" "file?" "length" "-" "1" "subseq" "get-application" "edit-filename" "header-string?" "cond" "when" "view->text" "expr-at" "form" "let" "pos")}
        {Lisp-Entry "edit-references" () 337 21 (":definitions" "target:" "history-item:" "References-Menu" "new" "track-popup-menu" "else" "car" "edit-reference" "add-history" "1" "bell" "0" "length" "case" "get-context" "context:" "get-references" "list" "standardize-form" "current-history-item" "item" "get-cataloguer" "cataloguer" "get-application" "appl" "let*" "when" "view->text" "expr-at" "form" "let" "pos")}
        {Lisp-Entry "current-history-item" () 357 11 ("History-File-Item" "History-Document-Item" "new" "when" "get-frame" "frame" "not" "if" "get-moniker" "moniker" "get-selection" "selection" "let")}
        {Lisp-Entry "save-content" () 372 11 ("update-catalog" "nextmethod" "moniker")}
        {Lisp-Entry "on-update-catalog" () 383 18 ("bell" "update-catalog" "unless" "evt")}
        {Lisp-Entry "update-catalog" () 388 11 ("true" "user-message" "get-moniker" "update-file" "when" "require-catalog" "catalog" "let")}
        {Lisp-Entry "require-catalog" () 396 11 ("require-catalog" "get-workbench" "get-source-entry" "entry" "when" "get-moniker" "moniker" "let")}
        {Lisp-Entry "on-recolorize-syntax" () 409 18 ("recolorize-syntax" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "recolorize-syntax" () 415 18 ("true" "recoloring?:" "colorize-syntax" "uncolorize-all")}
        {Lisp-Entry "uncolorize-all" () 420 11 ("get-length" "0" "naturals" "uncolorize-row" "for-each")}
        {Lisp-Entry "preferences" () 424 29 ()}
        {Lisp-Entry "syntax-targets" () 428 29 ()}
        {Lisp-Entry "syntax-automata" () 432 29 ()}
        {Lisp-Entry "compute-syntax-targets" () 436 29 ()}
        {Lisp-Entry "compute-syntax-automata" () 440 29 ("cpp/java-constituent?" "self" "false" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-syntax" () 444 11 ("colorize-entries" "when" "text-beginning" "colorize-syntax-from" "true" "entries?" "entries?:" "false" "recoloring?" "recoloring?:")}
        {Lisp-Entry "colorize-syntax-from" () 450 11 ("finish-current" "when" "false" "colorize-type" "set!" "length" "+" "end" "Cell" "new" "start" "col" "row" "type" "target" "bind" "car" "info" "while" "0" "get-limit" "get-paragraphs" "syntax-automata" "automata-search" "found" "syntax-targets" "targets" "self" "new-colorizer" "not" "essay" "colorizer" "let" "recoloring?" "pos")}
        {Lisp-Entry "apply-coloring" () 465 21 ("apply-style" "not" "if" "style-name" "end" "start" "colorizer")}
        {Lisp-Entry "colorize-type" () 471 29 ("recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "colorize-balanced-comment" () 475 29 ("set!" "cdr" "apply-coloring" "2" "+" "Cell" "new" "balanced-comment-backward" "=" "if" "col" "row" "type" "target" "bind" "car" "info" "let" "while" "return" "lambda" "call/ec" "style" "colorizer" "end" "start" "found")}
        {Lisp-Entry "colorize-balanced-comment-backward" () 489 21 ("cdr" "apply-coloring" "=" "type" "target" "pos" "bind" ":reverse?" "true" ":extended?" "position:" "list" "multisearch-string" "let" "when" "close" "close:" "open" "open:" "recolorize?" "style" "colorizer" "end" "start" "found")}
        {Lisp-Entry "colorize-line-comment" () 499 21 ("car" "second" "while" "cdr" "set!" "row" "3" "+" "paragraph-length" "get-row" "Cell" "new" "apply-coloring" "not" "if" "2" "next" "get-char" "=" "and" "title?" "let" "title-char" "title-style" "line-style" "colorizer" "end" "start" "found")}
        {Lisp-Entry "colorize-keyword" () 512 21 ("cdr" "apply-coloring" "style" "colorizer" "end" "start" "found")}
        {Lisp-Entry "find-specifier-end" () 517 11 ("Cell" "new" "when" "position" "return:" "start:" "find-balanced" "eq?" "or" "element" "nxt" "let" "length" "1" "+" ">=" "unless" "paragraph-string" "str" "get-col" "col" "get-row" "row" "let*" "start")}
        {Lisp-Entry "recolorize-text" () 529 11 ("finish-current" "false" "colorize-type" "length" "end" "col" "row" "car" "info" "while" "get-col" "get-paragraphs" "syntax-automata" "automata-search" "found" "self" "new-colorizer" "colorizer" "uncolorize-row" "for-each" "1" "+" "naturals" "range" "set!" "=" "type" "target" "bind" ":reverse?" "true" ":extended?" "position:" "close" "open" "multisearch-string" "opening" "when" "syntax-targets" "targets" "0" "get-row" "Cell" "new" "pos" "let" "end-row" "start")}
        {Lisp-Entry "colorize-entries" () 553 26 ("colorize-entry" "for-each" "when" "get-parsed-entries" "entries" "let")}
        {Lisp-Entry "get-parsed-entries" () 559 29 ("get-definitions" "get-controller" "get-moniker-time" "get-time" "=" "car" "file-entry" "cpp/java" "context:" "get-file-entries" "entries" "let*" "get-application" "get-cataloguer" "cataloguer" "get-modified?" "not" "file?" "and" "when" "get-moniker" "moniker" "let")}
        {Lisp-Entry "colorize-entry" () 570 11 ("get-definitions" "for-each" "get-implements" "get-extends" "colorize-entry" "class-of" "Class-Entry" "equal?" "Definition" "stylize" "get-limit" "" "when" "length" "+" "end" "Cell" "new" "start" "get-column" "column" "get-line" "line" "get-name" "name" "let*" "dynamic" "function" "proc" "letrec" "entry")}
        {Lisp-Entry "recolorize-entries" () 589 18 ("colorize-entry" "for-each" "false" "entries?:" "colorize-syntax" "uncolorize-all" "when" "get-parsed-entries" "entries" "let")}
        {Lisp-Entry "on-paste&stay" () 602 18 ("set-caret" "paste-clipboard" "get-start" "pos" "let" "evt")}
        {Lisp-Entry "on-paste&next" () 608 18 ("0" "1" "Cell" "+" "set-caret" "paste-clipboard" "get-start" "pos" "let" "evt")}
        {Lisp-Entry "read-text-forms" () 619 11 ("eof-object?" "read-until" "String-Reader" "new" "reader" "with-closed" "get-string" "either" "let" "false" "console?" "console?:" "string" "string:" "range")}
        {Lisp-Entry "offset-pos/range" () 625 11 ("get-col" "Cell" "+" "Range" "new" "get-end" "get-start" "get-row" "0" "=" "if" "range" "pos")}
        {Lisp-Entry "tabulate" () 638 26 ("subseq" "insert-string" "position" "return:" "whitespace?" "not" "c" "dynamic" "function" "find-if" "rank" "1" "-" "paragraph-string" "line" "=" "0" ">" "and" "when" "get-col" "col" "get-row" "row" "get-start" "pos" "let*" "selected-lines" "tabulate-line" "untabulate-line" "shift-down?" "for-each" "has-selection?" "if")}
        {Lisp-Entry "tabulate-line" () 653 29 ("String" "coerce" "list" "0" "Cell" "Range" "new" "replace-text" "row")}
        {Lisp-Entry "untabulate-line" () 658 11 ("list" "1" "Range" "replace-text" "0" "Cell" "new" "get-char" "space/tab?" "when" "row")}
        {Lisp-Entry "space/tab?" () 664 11 ("memq?" "c")}
        {Lisp-Entry "tabulate-lines" () 668 26 ("end" "start")}
        {Lisp-Entry "favorite-completions" () 677 29 ()}
        {Lisp-Entry "get-selection-color" () 681 11 ("completion-color" "nextmethod" "completion-active?" "not" "if")}
        {Lisp-Entry "back-symbol" () 687 11 ("either" "get-symbol-string" "append" "0" "char-backward" "string" "keyword" "symbol" "get-kind" "memq?" "backward-expr" "and" "end:" "start:" "self" "explorer-class" "new" "expl" "string-delimiter?" "unless" "c" "previous-cell" "prev" "let" "get-end" "has-selection?" "if" "get-char" "syntax" "text-constituent?" "not" "or" "when" "postfix" "pos")}
        {Lisp-Entry "alphabetize-completion" () 704 11 ("String" "coerce" "element" "length" ">" "if" "completion" "dynamic" "function" "map" "" "sort" "remove-duplicates" "alphabet-char" "let" "offset" "completions")}
        {Lisp-Entry "completion-string" () 713 11 ("else" "alphabetize-completion" "alphabet" "offset" "prefix" "common" "5" ">" "car" "found" "user-message" "null?" "cond" "count" "symbol-completions" "completions" "complete-name?" "cdr" "subseq" "either" "append" "clear-user-message" "begin" "if" "macro-playing?" "not" "feedback?" "=" "test:" "assoc" "favorite" "favorite-completions" "favorites" "length" "size" "let*" "when" "back-symbol" "name" "let" "postfix" "pos")}
        {Lisp-Entry "complete-name?" () 757 29 ("2" ">=" "size")}
        {Lisp-Entry "symbol-completions" () 761 29 ("cons" "set!" "->string" "compare-n" "when" "cdr" "favorite" "pair" "dynamic" "function" "for-each" "length" "get-context" "context:" "get-completions" "completions" "not" "get-application" "get-cataloguer" "cataloguer" "let" "numeric?" "if" "favorites" "name")}
        {Lisp-Entry "auto-complete" () 777 29 ("insert-char/backspace" "end-completion" "list" "replace-selection" "auto-complete-characters" "memq?" "completion-active?" "and" "when" "subseq" "replacement-string" "position" "return:" "find" "offset" "cn" "selection-lines" "join" "completion-string" "true" "false" "String" "coerce" "complete-current" "syntax" "auto-complete-char?" "not" "if" "self" "class-of" "class" "1" "-" "get-char" "0" "get-col" ">" "essay" "last" "get-end" "end" "let*" "get-start" "get-style-at" "key")}
        {Lisp-Entry "complete-current" () 794 11 ("length" "+" "next-cell" "set-completion" "insert-string" "list" "get-end" "get-start" "previous-cell" "Range" "new" "replace-text" "end-completion" "begin" "not" "completion-string" "string" "let" "insert-char/backspace" "get-style-at" "textual-style?" "if" "inserted?" "back?" "postfix" "pos" "key")}
        {Lisp-Entry "has-completion?" () 808 21 ("has-selection?" "completion-active?" "and")}
        {Lisp-Entry "set-completion" () 812 11 ("set-selection" "true" "completion-active?" "set!" "range")}
        {Lisp-Entry "remove-completion" () 817 11 ("false" "set!" "list" "replace-selection" "completion-active?" "when")}
        {Lisp-Entry "end-completion" () 823 21 ("get-end" "set-caret" "false" "set!" "completion-active?" "when")}
        {Lisp-Entry "convert-completion" () 829 21 ("false" "set-anchor?:" "Range" "new" "set-selection" "end-completion" "get-end" "end" "get-start" "start" "let" "completion-active?" "when")}
        {Lisp-Entry "insert-char/backspace" () 837 11 ("flash-matching-character" "backspace" "list" "replace-selection" "completion-active?" "insert-char" "/=" "if" "when" "false" "word?" "word?:" "c")}
        {Lisp-Entry "show-arguments" () 853 29 ()}
        {Lisp-Entry "cursor-update" () 862 11 (":finger" "set-cursor" "show-text-cursor" "nextmethod" "alt-down?" "not" "if" "pos")}
        {Lisp-Entry "mouse-copy" () 869 11 ("true" "mouse-insert" "get-string" "copy" "let" "1" "get-start" "-" "set-start" "control-down?" "expr-range" "range" "view->text" "cell" "let*" "when" "destination" "pos")}
        {Lisp-Entry "expr-range" () 881 29 ("pos")}
        {Lisp-Entry "left-arrow-press" () 890 11 ("nextmethod" "convert-completion" "modifiers")}
        {Lisp-Entry "up-arrow-press" () 895 11 ("nextmethod" "convert-completion" "modifiers")}
        {Lisp-Entry "right-arrow-press" () 900 11 ("nextmethod" "convert-completion" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 905 11 ("nextmethod" "convert-completion" "modifiers")}
        {Lisp-Entry "on-tabify" () 915 11 ("tabify" "evt")}
        {Lisp-Entry "tabify" () 919 11 ("1" "get-end" "+" "get-start" "get-row" "naturals" "tabify-line" "for-each")}
        {Lisp-Entry "tabify-line" () 924 11 ("make-string" "append!" "list" "Cell" "Range" "new" "replace-text" "modulo" "spaces" "tab-size" "/" "floor" "tabs" "char->column" "column" "0" ">" "and" "when" "position" "return:" "whitespace?" "not" "c" "dynamic" "function" "find-if" "char" "paragraph-string" "line" "let*" "row")}
        {Lisp-Entry "flash-character?" () 942 29 ("false" "char")}
        {Lisp-Entry "flash-matching-character" () 946 21 ("get-start" "flash-character" "backward-expr" "if" "start:" "self" "explorer-class" "new" "expl" "bell" "err" "Explore-Error" "catch" "get-char" "flash-character?" "get-end" "previous-cell" "pos" "let" "at-beginning?" "not" "empty-selection?" "and" "when")}
        {Lisp-Entry "flash-character" () 958 11 ("3" "collect-forward-exprs" "get-range" "get-string" "mark" "dynamic" "function" "map" "user-message" "end:" "1" "+" "start:" "explorer-class" "expl" "false" "visible?:" "Dimension" "size:" "position:" "Tooltip" "tool" "self" "get-desktop" "acquire" "tran" "text->view" "pos" "let*" "sleep" "update-view" "next-cell" "Range" "new" "set-selection" "get-selection" "old" "let" "cell-displayed?" "if" "macro-playing?" "unless" "end" "start")}
        {Lisp-Entry "on-browse-java" () 982 11 ("browse-java" "evt")}
        {Lisp-Entry "browse-java" () 986 11 ("list" "browse-classes" "get-guest" "manager" "Java-Manager" "new-frame" "host" "error" "not" "org.apache.bcel.Repository" "lookupClass" "javaClass" "->string" "classname" "let*" "bell" "Symbol" "is-not?" "if" "current-expr" "expr" "let")}
        {Lisp-Entry "on-patch-file" () 1005 11 ("user-message" "edit-document" ":source" "name" "map-set!" "true" ":overwrite-read-only?" "copy-file" "create-directories" "close" "save" "get-player" "frame" "get-application" "appl" "get-patches" "patches" "User" "list" "File" "new" "patched" "get-name" "filename" "controller" "get-moniker" "file" "let*" "evt")}
        {Lisp-Entry "on-set-read/write" () 1022 11 ("update-status" "set-read/write" "controller" "get-moniker" "moniker" "let" "evt")}
        {Lisp-Entry "debug-view" () 1034 11 ("Development" "set-%t" "get-name" "equal?" "element" "dynamic" "function" "find-if" "entry" "get-parsed-entries" "entries" "text" "car" "string" "range-strings" "strings" "get-selection" "range" "let*" "nextmethod" "view")}}
      {Lisp-Entry "Definitions-Menu" () 1051 7 ("Context-Menu")
        {Lisp-Entry "definitions" () 1054 12 ("set-definitions" "get-definitions")}
        {Lisp-Entry "history-item" () 1055 12 ("set-history-item" "get-history-item")}
        {Lisp-Entry "get-definitions" () 1058 18 ("definitions")}
        {Lisp-Entry "set-definitions" () 1062 18 ("definitions" "set!" "list")}
        {Lisp-Entry "get-history-item" () 1066 18 ("history-item")}
        {Lisp-Entry "set-history-item" () 1070 18 ("history-item" "set!" "item")}
        {Lisp-Entry "finish" () 1074 11 ("key:" "make-condensed-menu" "get-string" "parent" "user-data" "create-item" "menu" "let*" "definition<?" "sort" ":definition" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "present" "title" "let" "definition" "dynamic" "function" "for-each" "definitions" "length" "" "if" "nextmethod" "rest")}
        {Lisp-Entry "definition<?" () 1088 11 ("definitions" "present" "" "y" "x")}
        {Lisp-Entry "on-action" () 1092 11 (":definition" "get-property" "edit" "history-item" "get-application" "add-history" "evt")}}
      {Lisp-Entry "References-Menu" () 1102 7 ("Context-Menu")
        {Lisp-Entry "target" () 1105 12 ("set-target" "get-target")}
        {Lisp-Entry "definitions" () 1106 12 ("set-definitions" "get-definitions")}
        {Lisp-Entry "history-item" () 1107 12 ("set-history-item" "get-history-item")}
        {Lisp-Entry "get-target" () 1110 18 ("target")}
        {Lisp-Entry "set-target" () 1114 18 ("target" "set!" "trg")}
        {Lisp-Entry "get-definitions" () 1118 18 ("definitions")}
        {Lisp-Entry "set-definitions" () 1122 18 ("definitions" "set!" "list")}
        {Lisp-Entry "get-history-item" () 1126 18 ("history-item")}
        {Lisp-Entry "set-history-item" () 1130 18 ("history-item" "set!" "item")}
        {Lisp-Entry "finish" () 1134 11 ("key:" "make-condensed-menu" "get-string" "parent" "user-data" "create-item" "menu" "let*" "definition<?" "sort" ":definition" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "references" "present" "->string" "title" "let" "definition" "dynamic" "function" "for-each" "definitions" "length" "" "if" "nextmethod" "rest")}
        {Lisp-Entry "definition<?" () 1148 11 ("references" "present" "" "y" "x")}
        {Lisp-Entry "on-action" () 1152 11 ("target" ":definition" "get-property" "edit-reference" "history-item" "get-application" "add-history" "evt")}}}})
"Code-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "code" "Code-Tree.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.code.Code-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Code-Tree" () 45 7 ("Tree-View")
        {Lisp-Entry "sort?" () 48 12 ("generate" "accessors" "false")}
        {Lisp-Entry "insert-definition" () 51 18 ("self" "insert-definition" "sort?" "definition" "father")}
        {Lisp-Entry "update-row" () 55 11 ("sort?" "self" "insert-definition" "get-user-data" "definition" "let" "row")}}}})
"Collector-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Collector-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Collector-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Collector-Snapshot" () 45 7 ("Component")
        {Lisp-Entry "phase" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "roots" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "triggers" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "stack" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "incremental-buffer-percentage" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "incremental-optimal-spread" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "expand-zone-percentage" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "expand-zone-minimum" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 59 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" () 63 11 ("expand-zone-minimum" ":expand-zone-minimum" "expand-zone-percentage" ":expand-zone-percentage" "incremental-optimal-spread" ":incremental-optimal-spread" "incremental-buffer-percentage" ":incremental-buffer-percentage" "stack" ":stack" "triggers" ":triggers" "roots" ":roots" "phase" ":phase" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Collector-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Collector-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Collector-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Collector-Tester" () 45 7 ("title:" "Tester")}}})
"Color"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Color.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Color" () 37 9 ("jazz")
      {Lisp-Entry "Color" () 44 7 ("Object")
        {Lisp-Entry "name" () 47 15 ("generate")}
        {Lisp-Entry "red" () 48 15 ("generate")}
        {Lisp-Entry "green" () 49 15 ("generate")}
        {Lisp-Entry "blue" () 50 15 ("generate")}
        {Lisp-Entry "initialize" () 53 11 ("blue" "blue~self" "green" "green~self" "red" "red~self" "name~self" "set!" "nextmethod" "name" "name:")}
        {Lisp-Entry "compare-object" () 64 11 (":not-equal" "else" ":equal" "blue" "green" "get-ref" "red" "and" "get-name" "=" "name" "if" ":incompatible" "Color" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 77 11 ("blue" "green" "red" "self" "class-of" "type-name" "identifier-name" "format" "name" "if" "readably" "printer")}
        {Lisp-Entry "white?" () 94 18 ("blue" "green" "red" "=" "and")}
        {Lisp-Entry "parse-string" () 106 23 ("blue:" "green:" "red:" "integer?" "blue" "green" "red" "bind" "3" "eval-symbol" "Constants" "memq?" "car" "symbol?" "1" "=" "and" "self" "type:" "object:" "Convertion-Error" "new" "signal" "dynamic" "function" "err" "length" "len" "read-string-content" "lst" "let*" "empty-string?" "if" "string")}
        {Lisp-Entry "present" () 124 18 ("blue" "green" "red" "format" "->string" "name" "if")}
        {Lisp-Entry "determine-color" () 138 18 ("self" "else" "get-opposite" "Light-Gray" "registered-color" "not" "cond" "selected?" "enabled?")}
        {Lisp-Entry "get-opposite" () 145 18 ("else" "Gray" "Dark-Gray" "Yellow" "registered-color" "Dark-Red" "name" "case")}
        {Lisp-Entry "rgb->hls" () 153 18 ("rgb" ":colorref" "Color" "new" "ref" "ColorRGBToHLS" "saturation" "lightness" "hue" "receive")}
        {Lisp-Entry "hls->rgb" () 158 18 (":colorref" "Color" "new" "blue-part" "green-part" "red-part" "ColorHLSToRGB" "ref" "let")}
        {Lisp-Entry "color-cycle" () 169 23 ("hls->rgb" "blue:" "green:" "red:" "Color" "new" "hls" "round" "+" "n" "dynamic" "function" "map" "blue-part" "sat" "green-part" "lig" "red-part" "hue" "rgb->hls" "get-colorref" "ref" "/" "inc" "*" "cardinality" "cycle-naturals" "seq" "let*" "subcycle" "cycle" "base")}}}})
"Color-Button"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Color-Button.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Color-Button" () 37 9 ("jazz")
      {Lisp-Entry "Color-Button" () 46 7 ("Push-Icon")
        {Lisp-Entry "color" () 49 12 ("set-color" "get-color")}
        {Lisp-Entry "get-color" () 57 18 ("color")}
        {Lisp-Entry "set-color" () 61 18 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "action-properties" () 71 11 ("color" "color:" "list")}
        {Lisp-Entry "draw-tool" () 80 11 ("Dark" "name:" "Color" "get-enabled?" "fill-rect" "Rect" "new" "offset-rect" "rect" "1" "2" "pushed" "state" "=" "if" "offset" "let*" "color" "when" "nextmethod" "context" "dc")}}}})
"Color-Combo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Color-Combo.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Color-Combo" () 37 9 ("jazz")
      {Lisp-Entry "Color-Combo" () 47 7 ("color" "Black" "border-color:" "solid" "border-type:" "color-border" "2" "Rect" "layout-insets:" "fill" "layout-type:" "White" "Color" "background:" "Dimension" "size:" "color-contour" "name:" "Combo-Box")
        {Lisp-Entry "form-model" () 57 11 ("nextmethod" "else" "Color-Text-View" "body" "get-name" "case" "form")}
        {Lisp-Entry "get-color" () 68 18 ("color" "locate" "get-background")}
        {Lisp-Entry "set-color" () 72 18 ("select-all" "present" "null?" "if" "set-string-content" "body" "locate" "text" "let" "set-color-value" "color")}
        {Lisp-Entry "set-color-value" () 79 11 ("locate" "set-background" "color")}
        {Lisp-Entry "content-change" () 88 11 ("get-content" "Color" "parse-string" "set-color-value" "origin")}
        {Lisp-Entry "button-action" () 92 11 ("initiator:" "on-color-picked" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "colors:" "Color-Picker" "popup" "get-height" "get-width" "-" "Point" "new" "pos" "let")}
        {Lisp-Entry "on-color-picked" () 97 11 ("popup" "content-change" "set-color" "close-popups" "color:" "get-property" "color" "let" "evt")}
        {Lisp-Entry "layout" () 109 11 ("pick" "get-width" "-" "Dimension" "set-size" "get-right" "new" "scroller" "0" "Point" "set-position" "color-contour" "locate" "countour" "get-height" "width" "get-size" "size" "let")}}
      {Lisp-Entry "Color-View" () 125 7 ("View")
        {Lisp-Entry "draw" () 128 11 ("get-height" "0" "1" "get-width" "-" "line" "Black" "name:" "Pen" "set-pen" "get-size" "size" "let" "background" "null?" "when" "nextmethod" "lv" "lh" "update" "context" "dc")}}}})
"Color-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editors" "Color-Editor.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.editors.Color-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Color-Editor" () 47 7 ("2" "1" "Rect" "layout-insets:" "Dimension" "size:" "color-contour" "name:" "Color-Combo")
        {Lisp-Entry "value-row" () 50 12 ("set-value-row" "get-value-row")}
        {Lisp-Entry "get-value-row" () 58 18 ("value-row")}
        {Lisp-Entry "set-value-row" () 62 18 ("body" "locate" "set-value-row" "value-row" "set!" "value")}
        {Lisp-Entry "content-change" () 67 11 ("nextmethod" "value-row" "editor-return" "origin")}}}})
"Color-Picker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Color-Picker.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Color-Picker" () 37 9 ("jazz")
      {Lisp-Entry "Color-Picker" () 48 7 ("title:" "more" "0" "fill" "south" "Dimension" "size:" "center" "location:" "colors" "name:" "4" "Rect" "layout-insets:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "colors" () 51 12 ("set-colors" "get-colors")}
        {Lisp-Entry "geometry" () 52 12 ("set-geometry" "get-geometry")}
        {Lisp-Entry "get-colors" () 67 18 ("colors")}
        {Lisp-Entry "set-colors" () 71 18 ("layout-view" "invalidate-tools" "colors" "set!" "value")}
        {Lisp-Entry "get-geometry" () 77 18 ("geometry")}
        {Lisp-Entry "set-geometry" () 81 18 ("layout-view" "geometry" "set!" "value")}
        {Lisp-Entry "set-action-handler" () 91 11 ("more" "colors" "locate" "get-children" "set-action-handler" "tool" "dynamic" "function" "for-each" "action-handler" "set!" "handler")}
        {Lisp-Entry "Default-Colors" () 104 14 ("Dark-Gray" "Gray" "Light-Gray" "Dark-Purple" "Purple" "Light-Purple" "Dark-Blue" "Blue" "Light-Blue" "Dark-Green" "Green" "Light-Green" "Dark-Yellow" "Yellow" "Light-Yellow" "Dark-Orange" "Orange" "Light-Orange" "Dark-Red" "Red" "Light-Red" "Black" "White" "name:" "Color")}
        {Lisp-Entry "effective-colors" () 139 11 ("Default-Colors" "colors" "either")}
        {Lisp-Entry "invalidate-tools" () 148 11 ("effective-colors" "action-handler" "action-handler:" "color:" "Dimension" "size:" "parent:" "Color-Tool" "new" "color" "get-children" "close" "tool" "dynamic" "function" "for-each" "colors" "locate" "view" "let")}
        {Lisp-Entry "layout" () 163 11 ("nextmethod" "Dimension" "set-size" "0" "naturals" "2" "Point" "new" "set-position" "element" "tool" "*" "+" "n" "v" "h" "dynamic" "function" "for-each" "get-col" "columns" "get-row" "rows" "8" "3" "Cell" "either" "geometry" "when" "get-children" "children" "colors" "locate" "view" "let*")}}
      {Lisp-Entry "Color-Tool" () 186 7 ("Push-Tool")
        {Lisp-Entry "color" () 189 12 ("set-color" "get-color")}
        {Lisp-Entry "get-color" () 192 18 ("color")}
        {Lisp-Entry "set-color" () 196 18 ("color" "set!" "value")}
        {Lisp-Entry "get-tooltip?" () 200 11 ("true")}
        {Lisp-Entry "get-tooltip-text" () 204 11 ("get-name" "->string" "color" "null?" "if")}
        {Lisp-Entry "action-properties" () 210 11 ("color" "color:" "list")}
        {Lisp-Entry "mouse-enter" () 214 11 ("invalidate-view" "highlighted" "set-state")}
        {Lisp-Entry "mouse-leave" () 219 11 ("invalidate-view" "inactive" "set-state")}
        {Lisp-Entry "mouse-up" () 224 11 ("self" "process-action" "pos")}
        {Lisp-Entry "up" () 228 11 ()}
        {Lisp-Entry "draw-highlighted" () 232 11 ("nextmethod" "draw-pushed" "mouse-down?" "if" "dc")}
        {Lisp-Entry "draw-tool" () 238 11 ("get-bottom" "+" "2" "get-left" "1" "get-top" "-" "get-right" "line" "Pen" "set-pen" "fill-rect" "color" "if" "Dark" "name:" "Color" "frame-rect" "inside" "inflate-rect" "outside" "get-bounds" "rect" "with" "nextmethod" "context" "dc")}}
      {Lisp-Entry "More-Tool" () 255 7 ("Label-Tool")
        {Lisp-Entry "mouse-enter" () 258 11 ("invalidate-view" "highlighted" "set-state")}
        {Lisp-Entry "mouse-leave" () 263 11 ("invalidate-view" "inactive" "set-state")}
        {Lisp-Entry "mouse-up" () 268 11 ("ChooseColor-Dialog" "get-modal" "color:" "list" "self" "process-action" "close-popups" "pos")}
        {Lisp-Entry "up" () 273 11 ()}
        {Lisp-Entry "draw-highlighted" () 277 11 ("nextmethod" "draw-pushed" "mouse-down?" "if" "dc")}}}})
"Color-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Color-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Color-Row" () 37 9 ("jazz")
      {Lisp-Entry "Color-Row" () 48 7 ("Value-Row")
        {Lisp-Entry "present" () 56 11 ("present" "get-name" "format" "Color" "is-not?" "null?" "if" "color")}
        {Lisp-Entry "update-color" () 70 18 ("get-edited-value" "color" "editor" "locate" "set-background")}
        {Lisp-Entry "draw-cell" () 79 11 ("get-bottom" "get-left" "get-top" "1" "get-right" "line" "Pen" "set-pen" "fill-rect" "if" "Black" "name:" "Color" "frame-rect" "inflate-rect" "inner" "-" "3" "2" "Rect" "new" "outer" "with" "0" "draw-at" "height" "width" "cell" "row" "column" "value" "context" "dc")}
        {Lisp-Entry "new-editor" () 95 11 ("self" "value-row:" "editor-class" "new")}
        {Lisp-Entry "editor-class" () 100 11 ("Color-Row-Editor")}
        {Lisp-Entry "get-edited-value" () 104 11 ("Color" "parse-string" "body" "editor" "locate" "get-string-content" "content" "let")}
        {Lisp-Entry "set-edited-value" () 109 11 ("color" "set-background" "present" "body" "editor" "locate" "set-string-content" "value")}
        {Lisp-Entry "get-edited-modified?" () 114 11 ("body" "editor" "locate" "get-controller" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" () 118 11 ("body" "editor" "locate" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" () 122 11 ("body" "editor" "locate" "show-text-cursor")}
        {Lisp-Entry "focused-editor" () 126 11 ("body" "editor" "locate")}}
      {Lisp-Entry "Color-Row-Editor" () 135 7 ("2" "1" "Rect" "layout-insets:" "Dimension" "size:" "color-contour" "name:" "Color-Combo")
        {Lisp-Entry "value-row" () 143 12 ("set-value-row" "get-value-row")}
        {Lisp-Entry "form-model" () 146 11 ("nextmethod" "else" "Color-Value-Text-View" "body" "get-name" "case" "form")}
        {Lisp-Entry "get-value-row" () 152 18 ("value-row")}
        {Lisp-Entry "set-value-row" () 156 18 ("body" "locate" "set-value-row" "value-row" "set!" "value")}
        {Lisp-Entry "content-change" () 161 11 ("nextmethod" "enter-edited-value" "popup" "value-row" "editor-return" "return" "case" "origin")}}
      {Lisp-Entry "Color-Value-Text-View" () 173 7 ("Color-Text-View")
        {Lisp-Entry "value-row" () 176 12 ("set-value-row" "get-value-row")}
        {Lisp-Entry "get-value-row" () 184 18 ("value-row")}
        {Lisp-Entry "set-value-row" () 188 18 ("value-row" "set!" "value")}
        {Lisp-Entry "up-arrow-press" () 197 11 ("value-row" "editor-up-arrow" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 201 11 ("value-row" "editor-down-arrow" "modifiers")}
        {Lisp-Entry "document-menu" () 205 11 ()}
        {Lisp-Entry "focus-validate" () 214 11 ("value-row" "editor-focus-validate" "view")}
        {Lisp-Entry "focus-lose" () 218 11 ("value-row" "editor-focus-lose" "nextmethod" "view" "window")}
        {Lisp-Entry "focus-master" () 223 11 ("value-row" "get-tree")}}}})
"Color-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Color-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Color-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Color-Text-View" () 45 7 ("Combo-Text-View")
        {Lisp-Entry "symbol-completions" () 53 11 ("complete" "Symbol-Completer" "new" "completer" "Color.Constants" "domain" "let*" "favorites" "name")}}}})
"Colored-Overlay"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "overlay" "Colored-Overlay.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.overlay.Colored-Overlay" () 37 9 ("jazz")
      {Lisp-Entry "Colored-Overlay" () 45 7 ("Overlay")
        {Lisp-Entry "color" () 48 8 ()}
        {Lisp-Entry "transparency" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("transparency~self" "color~self" "set!" "nextmethod" "transparency" "transparency:" "color" "color:")}
        {Lisp-Entry "draw-overlay" () 58 11 ("transparency" "draw-colored-overlay" "color" "when" "height" "width" "dc" "view")}}}})
"Column-Detail"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "choosers" "Column-Detail.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.choosers.Column-Detail" () 37 9 ("jazz")
      {Lisp-Entry "Column-Detail" () 45 7 ("Object")
        {Lisp-Entry "name" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "width" () 49 12 ("generate" "accessors" "0")}
        {Lisp-Entry "filled?" () 50 12 ("generate" "accessors" "false")}
        {Lisp-Entry "displayed?" () 51 12 ("generate" "accessors" "false")}
        {Lisp-Entry "construct-literal" () 55 16 ("self" "new" "displayed?" "filled?" "width" "name" "context")}
        {Lisp-Entry "initialize" () 59 11 ("displayed?" "filled?" "width" "name" "set!" "nextmethod" "d?" "f?" "w" "n")}
        {Lisp-Entry "copy-object" () 67 11 ("displayed?" "filled?" "width" "name" "Column-Detail" "new" "deep?")}
        {Lisp-Entry "foldable?" () 71 11 ("true")}
        {Lisp-Entry "fold-object" () 75 11 ("displayed?" "filled?" "width" "name" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 85 11 ("displayed?" "filled?" "width" "name" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Column-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Column-Menu.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Column-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Column-Menu" () 46 7 ("on-fill-to-column" "fill-to-column" "on-mark-column" ":focus" "Event-Handler" "action-handler:" "title:" "mark-column" "name:" "Context-Menu")}}})
"Column-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Column-Preferences.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.display.Column-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Column-Preferences" () 45 7 ("Preferences")
        {Lisp-Entry "border" () 48 12 ("generate" "accessors" "0")}
        {Lisp-Entry "border-after" () 49 12 ("generate" "accessors" "0")}
        {Lisp-Entry "minimum" () 50 12 ("generate" "accessors" "0")}
        {Lisp-Entry "presentation-property?" () 58 11 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 62 11 ("name" "column-class" "type-name" "format" "title" "either")}
        {Lisp-Entry "set-presentation" () 66 11 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "column-class" () 75 29 ("Display-Column")}
        {Lisp-Entry "new-column" () 79 26 ("display")}}}})
"Columns-Display"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Columns-Display.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.display.Columns-Display" () 37 9 ("jazz")
      {Lisp-Entry "Columns-Display" () 44 7 ("Object")
        {Lisp-Entry "columns" () 47 18 ()}
        {Lisp-Entry "line" () 48 18 ("0")}
        {Lisp-Entry "initialize" () 56 11 ("nextmethod" "rest")}
        {Lisp-Entry "get-columns" () 65 18 ("columns")}
        {Lisp-Entry "add-column" () 74 18 ("insert!" "position" "return:" "find" "rank" "let" "list" "append!" "columns" "set!" "null?" "if" "before" "before:" "column")}
        {Lisp-Entry "add-columns" () 81 18 ("add-column" "column" "dynamic" "function" "for-each" "before" "before:" "columns")}
        {Lisp-Entry "newline" () 92 18 ("line" "increase!")}
        {Lisp-Entry "print-to" () 96 18 ("print-columns" "prepare-columns" "printer")}
        {Lisp-Entry "prepare-columns" () 101 18 ("prepare-print" "prepare-empties" "prepare-base")}
        {Lisp-Entry "prepare-base" () 107 11 ("columns" "rewind" "fill-empty" "column" "dynamic" "function" "for-each")}
        {Lisp-Entry "prepare-empties" () 114 11 ("columns" "set!" "replace-empty" "data" "get-empty?" "unless" "column" "dynamic" "function" "for-each" "previous-data" "previous-column" "let" "line" "below" "0" "from" "n" "for" "loop")}
        {Lisp-Entry "prepare-print" () 126 11 ("columns" "prepare-print" "get-empty?" "unless" "column" "dynamic" "function" "for-each")}
        {Lisp-Entry "print-columns" () 135 18 ("format" "/=" "columns" "when" "set!" "print-to" "get-next" "data" "get-empty?" "unless" "column" "dynamic" "function" "for-each" "previous-data" "previous-column" "below" "0" "from" "n" "for" "loop" "1" "line" "-" "last" "let" "printer")}}}})
"Combo-Box"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Combo-Box.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Combo-Box" () 37 9 ("jazz")
      {Lisp-Entry "Combo-Box" () 66 7 ("Ansi-Var" "Font" "font:" "Default" "Text-Style" "default-style:" "show-unfocused-selection?:" "accepts-returns?:" "top-padding:" "1" "left-padding:" "body" "content" "scroller" "name:" "Combo-View")
        {Lisp-Entry "condensed?" () 69 12 ("set-condensed?" "get-condensed?" "false")}
        {Lisp-Entry "content" () 70 12 ("set-content" "get-content")}
        {Lisp-Entry "choices" () 71 12 ("set-choices" "get-choices")}
        {Lisp-Entry "nullable?" () 72 12 ("set-nullable?" "get-nullable?" "false")}
        {Lisp-Entry "choices-updater" () 73 12 ("set-choices-updater" "get-choices-updater")}
        {Lisp-Entry "entry-test" () 74 12 ("set-entry-test" "get-entry-test")}
        {Lisp-Entry "default-size" () 84 11 ("Dimension")}
        {Lisp-Entry "button-action" () 93 11 ("alternate-position:" "get-height" "get-v" "6" "get-h" "+" "Point" "new" "track-popup-menu" "get-size" "size" "get-position" "pos" "layout-menu" "inactive" "highlighted" "mouse-view" "eq?" "set-state" "bell" "begin" "not" "if" "get-pick" "pick" "new-choices-menu" "menu" "let" "update-choices" "when")}
        {Lisp-Entry "on-action" () 107 29 ("combo-choice" "popup" "call-content-change" "true" "set-modified?" "select-all" "set-entry" "get-body" "text" "get-user-data" "choice" "get-title" "entry" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "combo-choice" () 119 29 ()}
        {Lisp-Entry "get-nullable?" () 128 18 ("nullable?")}
        {Lisp-Entry "set-nullable?" () 132 18 ("nullable?" "set!" "value")}
        {Lisp-Entry "get-condensed?" () 136 18 ("condensed?")}
        {Lisp-Entry "set-condensed?" () 140 18 ("condensed?" "set!" "value")}
        {Lisp-Entry "get-choices-updater" () 144 18 ("choices-updater")}
        {Lisp-Entry "set-choices-updater" () 148 18 ("true" "get-pick" "set-enabled?" "pick" "kind" "eq?" "and" "when" "choices-updater" "set!" "value")}
        {Lisp-Entry "get-entry-test" () 154 18 ("entry-test")}
        {Lisp-Entry "set-entry-test" () 158 18 ("entry-test" "set!" "value")}
        {Lisp-Entry "update-choices" () 167 29 ("true" "self" "choices" "null?" "choices-updater" "and" "if")}
        {Lisp-Entry "new-choices-menu" () 173 29 ("new-choices-menu-plain" "new-choices-menu-condensed" "condensed?" "if" "choices" "when")}
        {Lisp-Entry "new-choices-menu-plain" () 180 29 ("action-handler:" "user-data:" "=" "checked?:" "title:" "Check-Item" "present-choice" "title" "parent:" "Separator-Item" "not" "if" "choice" "dynamic" "function" "for-each" "on-action" "method-name:" "self" "target:" "Event-Handler" "action-handler" "either" "handler" "Context-Menu" "new" "menu" "get-entry" "current" "let" "choices" "when")}
        {Lisp-Entry "new-choices-menu-condensed" () 194 11 ("key:" "make-condensed-menu" "present-choice" "get-string" "action-handler:" "cons" "user-data:" "=" "checked?:" "title:" "parent:" "Check-Item" "parent" "string" "value" "dynamic" "function" "create-leaf" "on-action" "method-name:" "self" "target:" "Event-Handler" "action-handler" "either" "handler" "Context-Menu" "new" "menu" "get-entry" "current" "let" "choices" "when")}
        {Lisp-Entry "highlight-pick?" () 211 11 ("true")}
        {Lisp-Entry "set-enabled?" () 220 11 ("invalidate-view" "get-pick" "Medium" "White" "name:" "Color" "if" "set-background" "get-body" "set-enabled?" "enabled?" "set!" "flag")}
        {Lisp-Entry "inner?" () 233 11 ("children" "memq?" "view")}
        {Lisp-Entry "get-choices" () 242 18 ("choices")}
        {Lisp-Entry "set-choices" () 246 18 ("car" "set-value" "not-null?" "choices-updater" "or" "get-pick" "set-enabled?" "pick" "kind" "eq?" "when" "choices" "set!" "get-choice" "old" "let" "value")}
        {Lisp-Entry "get-choice" () 255 11 ("get-entry" "entry->choice")}
        {Lisp-Entry "present-choices" () 264 18 ("choices" "present-choice" "map" "format")}
        {Lisp-Entry "present-choice" () 269 21 ("first" "localize" "value->presented" "not" "if" "presented" "value" "bind" "when" "choice")}
        {Lisp-Entry "present-value" () 282 18 ("present-choice" "value->presented" "not" "if" "value->choice" "choice" "let" "value")}
        {Lisp-Entry "value->choice" () 289 11 ("choices" "assoc" "value")}
        {Lisp-Entry "value->presented" () 293 26 ("localize" "->string" "value")}
        {Lisp-Entry "presented->value" () 297 26 ("presented")}
        {Lisp-Entry "entry->choice" () 306 11 ("choices" "value->presented" "not" "if" "localize" "localized" "string" "tryout" "presented" "value" "bind" "when" "choice" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "=" "entry-test" "either" "test" "let" "entry")}
        {Lisp-Entry "edit" () 330 18 ("focus-body")}
        {Lisp-Entry "focus-body" () 334 11 ("select-all" "acquire-focus" "get-body" "text" "let")}
        {Lisp-Entry "get-entry" () 345 26 ("get-content")}
        {Lisp-Entry "set-entry" () 349 26 ("set-content" "content")}
        {Lisp-Entry "get-content" () 353 18 ("get-body" "get-string-content")}
        {Lisp-Entry "set-content" () 357 18 ("localize" "if" "get-body" "set-string-content" "content")}
        {Lisp-Entry "get-value" () 361 18 ("car" "presented->value" "get-content" "format" "message:" "Parse-Error" "new" "signal" "get-pick" "get-enabled?" "not" "if" "get-choice" "choice" "let")}
        {Lisp-Entry "set-value" () 370 18 ("present-value" "set-entry" "value")}
        {Lisp-Entry "get-modified?" () 374 18 ("get-body" "get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" () 378 18 ("get-body" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "validate-content" () 387 11 ("get-value" "set-entry" "throw-cancel" "focus-body" "yes" "no:" "yes:" "type:" "get-message" "message-box" "case" "err" "Parse-Error" "catch" "format" "no" "message" "question" "if" "type" "present-choice" "unique-entry" "car" "essay" "unique" "choices" "length" "1" "=" "unique?" "let*")}
        {Lisp-Entry "layout" () 408 11 ("get-width" "-" "Dimension" "new" "set-size" "0" "Point" "set-position" "get-height" "width" "get-pick" "pick" "locate" "scroller" "get-size" "size" "let")}}}})
"Combo-Button"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Combo-Button.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Combo-Button" () 37 9 ("jazz")
      {Lisp-Entry "Combo-Button" () 46 7 ("Push-Tool")
        {Lisp-Entry "get-combo" () 55 18 ("parent")}
        {Lisp-Entry "get-enabled?" () 64 11 ("parent" "get-enabled?" "enabled?" "and")}
        {Lisp-Entry "get-state" () 68 11 ("self" "parent" "child-state")}
        {Lisp-Entry "mouse-enter" () 72 11 ("self" "parent" "enter-child")}
        {Lisp-Entry "mouse-leave" () 76 11 ("self" "parent" "leave-child")}
        {Lisp-Entry "mouse-down" () 80 11 ("self" "parent" "child-down" "pos")}
        {Lisp-Entry "drag-up" () 84 11 ("self" "parent" "child-up" "rest" "pos")}
        {Lisp-Entry "close-popups" () 93 11 ("invalidate-view" "nextmethod" "double-click" "mouse-down" "memq?" "unless" "exclude" "exclude:" "false" "all?" "all?:" "event" "event:")}
        {Lisp-Entry "down" () 104 11 ("self" "process-action" "pick" "parent" "get-kind" "=" "get-enabled?" "when")}
        {Lisp-Entry "up" () 110 11 ("self" "process-action" "choose" "parent" "get-kind" "=" "when")}
        {Lisp-Entry "light-pen" () 120 11 ("Light-Background" "name:" "Pen")}
        {Lisp-Entry "dark-pen" () 124 11 ("Dark" "name:" "Pen")}
        {Lisp-Entry "draw-inactive" () 128 11 ("Medium" "Light" "name:" "Color" "get-enabled?" "if" "frame-rect" "get-bounds" "bounds" "with" "parent" "highlight-pick?" "when" "dc")}
        {Lisp-Entry "draw-tool" () 134 11 ("draw-ellipsis" "choose" "draw-arrow" "pick" "parent" "get-kind" "case" "context" "dc")}
        {Lisp-Entry "draw-arrow" () 140 11 ("down" "3" "draw-arrow-tip" "1" "get-height" "v" "2" "get-width" "/" "floor" "-" "+" "h" "get-offset" "offset" "get-size" "size" "let*" "Dark" "Black" "name:" "Pen" "get-enabled?" "if" "set-pen" "dc")}
        {Lisp-Entry "draw-ellipsis" () 149 11 ("enabled?" "get-v" "get-h" "draw-text" "Black" "name:" "Color" "set-text-color" "center" "justify" "pos" "get-text-extent" "extent" "title" "get-offset" "offset" "get-size" "size" "let*" "dc")}
        {Lisp-Entry "get-offset" () 159 11 ("0" "1" "choose" "pushed" "get-state" "memq?" "if")}}}})
"Combo-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Combo-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Combo-Row" () 37 9 ("jazz")
      {Lisp-Entry "Combo-Row" () 46 7 ("Value-Row")}}})
"Combo-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Combo-Text-Actions.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Combo-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Combo-Text-Actions" () 46 7 ("Return" ":control" "Shortcut" "shortcut:" "on-push-button" ":focus" "Event-Handler" "action-handler:" "push-button" "name:" "Actions")}}})
"Combo-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Combo-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Combo-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Combo-Text-View" () 45 7 ("IDE-Text-View")
        {Lisp-Entry "get-combo" () 53 11 ("parent" "get-parent")}
        {Lisp-Entry "focus-actions" () 62 11 ("nextmethod" "combo-text" "find-actions" "cons")}
        {Lisp-Entry "on-push-button" () 67 11 ("push-button" "get-combo" "combo" "let" "evt")}
        {Lisp-Entry "return-press" () 77 11 ("return" "get-combo" "content-change" "key")}
        {Lisp-Entry "complete-name?" () 86 11 ("1" ">=" "size")}
        {Lisp-Entry "favorite-completions" () 90 11 ()}
        {Lisp-Entry "symbol-completions" () 94 11 ("complete" "Symbol-Completer" "new" "completer" "present-choice" "choice" "dynamic" "function" "map" "domain" "get-choices" "choices" "get-combo" "combo" "let*" "favorites" "name")}}}})
"Combo-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Combo-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Combo-View" () 37 9 ("jazz")
      {Lisp-Entry "Combo-View" () 48 7 ("on-pick" "form:" "Event-Handler" "action-handler:" "Medium" "Color" "background:" "pick" "name:" "View")
        {Lisp-Entry "kind" () 51 12 ("set-kind" "get-kind" "pick")}
        {Lisp-Entry "state" () 54 8 ("inactive")}
        {Lisp-Entry "get-body" () 67 18 ("body" "locate")}
        {Lisp-Entry "get-pick" () 71 18 ("pick" "locate")}
        {Lisp-Entry "get-kind" () 75 18 ("kind")}
        {Lisp-Entry "set-kind" () 79 18 ("invalidate-view" "true" "get-pick" "set-enabled?" "eq?" "when" "set!" "error" "choose" "pick" "kind" "memq?" "not" "if" "value")}
        {Lisp-Entry "get-state" () 88 18 ("state")}
        {Lisp-Entry "set-state" () 92 18 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "on-pick" () 102 18 ("button-action" "evt")}
        {Lisp-Entry "button-action" () 106 29 ()}
        {Lisp-Entry "push-button" () 110 18 ("inactive" "button-action" "pushed" "set-state" "begin" "unwind-protect")}
        {Lisp-Entry "child-state" () 123 18 ("else" "pushed" "pick" "highlighted" "body" "out-choose" "choose-failed" "choose" "state" "case" "get-name" "name" "let" "child")}
        {Lisp-Entry "highlight-pick?" () 130 26 ("false")}
        {Lisp-Entry "popup-destroy" () 139 11 ("invalidate-view" "inactive" "out-choose" "highlighted" "set-state" "choose" "state" "case" "popup")}
        {Lisp-Entry "layout" () 151 11 ("9" "Dimension" "set-size" "0" "Point" "set-position" "get-pick" "pick" "get-body" "body" "let")}
        {Lisp-Entry "enter-child" () 165 18 ("invalidate-view" "choose" "out-choose" "pushed" "out-pushed" "highlighted" "set-state" "inactive" "state" "case" "self" "mouse-down-view" "get-parent" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when" "child")}
        {Lisp-Entry "leave-child" () 174 18 ("invalidate-view" "out-choose" "choose" "out-pushed" "pushed" "inactive" "set-state" "highlighted" "state" "case" "child")}
        {Lisp-Entry "child-down" () 182 18 ("invalidate-view" "close-popups" "choose-failed" "Popup" "is-not?" "inactive" "not" "popup" "let" "kind" "choose" "highlighted" "state" "pick" "down" "pushed" "set-state" "body" "get-name" "case" "enabled?" "when" "pos" "child")}
        {Lisp-Entry "child-up" () 209 18 ("invalidate-view" "out-pushed" "highlighted" "choose-failed" "pushed" "state" "case" "inactive" "set-state" "choose" "kind" "=" "if" "up" "unwind-protect" "enabled?" "when" "pos" "child")}}}})
"Command-Line"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "process" "Command-Line.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.process.Command-Line" () 37 9 ("jazz")
      {Lisp-Entry "Command-Line" () 45 7 ("Object")
        {Lisp-Entry "for-each-action" () 53 23 ("argument-example" "bind-optionals" "rest" "argument-help" "argument" "arguments" "section" "list" "sections" "action-help" "action" "bind" "info" "dynamic" "function" "for-each" "actions" "proc")}
        {Lisp-Entry "present-version" () 74 16 ("present" "format" "version" "name")}
        {Lisp-Entry "present-syntax" () 80 16 ("format" "name")}
        {Lisp-Entry "present-help" () 85 16 ("get-output" "argument-example" "bind-optionals" "rest" "argument-help" "argument" "section" "format" "action-help" "bind" "action" "case" "info" "type" "dynamic" "function" "for-each-action" "String-Printer" "new" "printer" "let" "actions")}
        {Lisp-Entry "present-examples" () 104 16 ("get-output" "present-argument-value" "when" "argument-example" "bind-optionals" "rest" "argument-help" "argument" "module-pathname" "get-name" "format" "action-help" "bind" "action" "case" "info" "type" "dynamic" "function" "for-each-action" "String-Printer" "new" "printer" "let" "actions")}
        {Lisp-Entry "present-argument-value" () 121 16 ("format" "string?" "if" "value")}
        {Lisp-Entry "command-help" () 127 23 ("title:" "present-examples" "present-help" "present-syntax" "present-version" "format" "message-box" "actions" "version" "name")}}}})
"CommonLisp-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "CommonLisp-Explorer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.text.CommonLisp-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "CommonLisp-Explorer" () 45 7 ("Lisp-Explorer")
        {Lisp-Entry "Modifiers" () 48 14 ()}
        {Lisp-Entry "get-modifiers" () 52 11 ("Modifiers")}
        {Lisp-Entry "Toplevels" () 61 14 ("defstruct" "defparameter" "defvar" "defmacro" "defun")}
        {Lisp-Entry "definition-name?" () 65 11 ("Toplevels" "memq?" "name")}
        {Lisp-Entry "walk-declaration" () 74 11 ("exit-list" "walk-unknown" "else" "walk-define-variable" "define-modify-macro" "define-condition" "defpackage" "defclass" "defstruct" "defparameter" "defvar" "walk-define-macro" "defmacro" "walk-define" "defgeneric" "defmethod" "defun" "walk-eval-when" "eval-when" "case" "find-marked-symbol" "symbol" "and" "true" "kind" "code" "start" "forward-expr" "not" "if" "end" "get-row" "=" "null?" "or" "when" "enter-list" "list?" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-eval-when" () 99 11 ("walk-declarations" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define" () 103 11 ("walk-declarations" "exit-list" "walk-parameters" "false" "get-marked" "set!" "get-row" "null?" "or" "symbol" "kind" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "=" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-macro" () 121 11 ("walk-declarations" "exit-list" "code" "walk-expressions" "false" "get-marked" "set!" "get-row" "null?" "or" "symbol" "kind" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "=" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-variable" () 139 11 ("walk-declarations" "exit-list" "walk-parameters" "false" "get-marked" "set!" "get-row" "null?" "or" "symbol" "kind" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "=" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-unknown" () 157 11 ("walk-expressions" "true" "code" "walk-expression" "when" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}}}})
"CommonLisp-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "parser" "CommonLisp-Parser.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.parser.CommonLisp-Parser" () 37 9 ("jazz")
      {Lisp-Entry "CommonLisp-Parser" () 45 7 ("Lisp-Parser")
        {Lisp-Entry "explorer-class" () 48 11 ("CommonLisp-Explorer" "file")}}}})
"CommonLisp-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "CommonLisp-Text-Preferences.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.text.CommonLisp-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "CommonLisp-Text-Preferences" () 49 7 ("completions:" "quotation-color:" "named-string-color:" "string-color:" "boolean-color:" "number-color:" "Ochre" "char-color:" "keyword-color:" "Dark-Green" "declaration-color:" "Dark-Blue" "declaration-keyword-color:" "Text-Gray" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Lisp-Text-Preferences")
        {Lisp-Entry "get-categorized-properties" () 86 11 ("translate-keys?" "keyword-color" "declaration-color" "expr-comment-color" "comment-color" "title-color" "completions")}
        {Lisp-Entry "get-row-instance" () 91 11 ("nextmethod" "else" "Boolean-Row" "translate-keys?" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "declaration-color" "expr-comment-color" "comment-color" "title-color" "field-name" "case" "property")}}}})
"CommonLisp-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "CommonLisp-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.text.CommonLisp-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "CommonLisp-Text-View" () 48 7 ("tooltip?:" "WinUser" "WinDef" "System" "Utilities" "Development" "Lisp-Text-View")
        {Lisp-Entry "install" () 55 11 ("Red" "Color" "frame:" "Reference" "get-quotation-color" "Quotation" "get-named-string-color" "Named-String" "get-delimited-string-color" "Delimited-String" "get-string-color" "String" "get-boolean-color" "Boolean" "get-char-color" "Char" "get-keyword-color" "Keyword" "get-declaration-color" "Declaration" "get-declaration-keyword-color" "Declaration-Keyword" "get-expr-comment-color" "Expr-Comment" "get-comment-color" "Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 74 16 ("commonlisp-text" "rest")}
        {Lisp-Entry "default-extension" () 78 11 ()}
        {Lisp-Entry "extensions" () 82 11 ()}
        {Lisp-Entry "get-context-menu" () 91 11 ("CommonLisp-Text-Menu" "new")}
        {Lisp-Entry "default-preferences" () 100 14 ("completions:" "Dark-Blue" "keyword-color:" "Dark-Green" "declaration-color:" "Dark-Orange" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "form>>")}
        {Lisp-Entry "preferences" () 105 11 ("commonlisp-text" "documents" "get-preferences")}
        {Lisp-Entry "declaration-style" () 109 11 ("Declaration" "documented?")}
        {Lisp-Entry "Specials" () 118 12 ("receive" "prog1" "parameterize" "letrec" "let*" "let" "lambda" "if" "2" "do" "define-macro" "define" "cond" "1" "case" "call/cc" "0" "begin")}
        {Lisp-Entry "get-specials" () 136 11 ("Specials")}
        {Lisp-Entry "explorer-class" () 145 11 ("CommonLisp-Explorer")}}
      {Lisp-Entry "CommonLisp-Text-Menu" () 154 7 ("recolorize-syntax" "update-catalog" "edit-references" "code-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "edit-definition" "name:" "Context-Menu")}}})
"Compare-Databases"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Databases.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Databases" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Databases" () 46 7 ("title:" "trees" "name:" "Compare-Forms")
        {Lisp-Entry "external-name" () 55 16 ("compare-databases" "rest")}
        {Lisp-Entry "frame-title" () 65 16 ()}}}})
"Compare-Diff"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Diff.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Diff" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Diff" () 46 7 ("Object")
        {Lisp-Entry "green" () 49 18 ()}
        {Lisp-Entry "blue" () 50 18 ()}
        {Lisp-Entry "initialize" () 53 11 ("blue" "green" "set!" "nextmethod" "b" "g")}
        {Lisp-Entry "get-start" () 59 21 ("blue" "get-start" "green" "if")}
        {Lisp-Entry "get-end" () 63 21 ("green" "get-end" "blue" "if")}
        {Lisp-Entry "print" () 67 11 ("blue" "green" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Compare-Directories"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Directories.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Directories" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Directories" () 48 7 ("Compare-Trees")}}})
"Compare-Directories-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "preferences" "Compare-Directories-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.preferences.Compare-Directories-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Directories-Preferences" () 46 7 ("Bitmap-Resource" "icon:" "title:" "Compare-Trees-Preferences")
        {Lisp-Entry "get-addable-classes" () 53 11 ("Favorite-Compare-Directories" "list")}
        {Lisp-Entry "get-addable-details" () 63 11 ("check-algorithm" "ignored-extensions" "ignored-leaves" "ignored-nodes" "right" "left" "mode" "name-info")}}}})
"Compare-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Entry" () 45 7 ("Object")
        {Lisp-Entry "kind" () 48 18 ()}
        {Lisp-Entry "left" () 49 18 ()}
        {Lisp-Entry "left-value" () 50 18 ()}
        {Lisp-Entry "right" () 51 18 ()}
        {Lisp-Entry "right-value" () 52 18 ()}
        {Lisp-Entry "action" () 53 18 ()}
        {Lisp-Entry "parent" () 54 18 ()}
        {Lisp-Entry "children" () 55 18 ()}
        {Lisp-Entry "initialize" () 58 11 ("children~self" "action~self" "right-value~self" "right~self" "left-value~self" "left~self" "kind~self" "parent~self" "set!" "nextmethod" "right-value" "right" "left-value" "left" "kind" "parent")}
        {Lisp-Entry "print" () 70 11 ("action" "right" "left" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Compare-Files"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Files.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Files" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Files" () 47 7 ("Compare-Texts")
        {Lisp-Entry "external-name" () 51 16 ("compare-files" "rest")}
        {Lisp-Entry "install-configuration" () 60 18 ("get-blue" "get-green" "install-monikers" "config")}
        {Lisp-Entry "add-to-favorites" () 69 11 ("Favorite-Compare-Files" "Favorites-Manager" "singleton-palette" "get-guest" "add-to-favorites" "blue:" "green:" "list" "initargs" "blue" "locate" "get-moniker" "green" "title" "let*")}}}})
"Compare-Forms"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Forms.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Forms" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Forms" () 46 7 ("green" "green-border" "file" "protocol:" "blue" "blue-border" "title:" "trees" "name:" "Compare-Trees")
        {Lisp-Entry "frame-icon" () 64 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 69 16 ()}
        {Lisp-Entry "form-present" () 78 11 ("get-presentation" "get-name" "form")}
        {Lisp-Entry "form-image" () 84 11 ("get-model" "get-class-image" "Bitmap-Resource" "form")}
        {Lisp-Entry "new-comparer" () 95 11 ("Form-Comparer" "new")}
        {Lisp-Entry "scan-feedback" () 99 11 ("form-present" "user-message" "right" "left")}
        {Lisp-Entry "moniker->tree" () 103 11 ("load-form" "moniker")}
        {Lisp-Entry "present-root" () 112 11 ("format" "=" "if" "r" "present-item" "l" "let" "right" "left")}
        {Lisp-Entry "present-item" () 120 11 ("car" "form-present" "Form" "is?" "if" "item")}
        {Lisp-Entry "present-value" () 126 11 ("->string" "leaf" "node" "case" "value" "kind")}
        {Lisp-Entry "entry-image" () 132 11 ("Bitmap-Resource" "leaf" "form-image" "node" "get-kind" "case" "ref" "entry")}}}})
"Compare-Forms-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "preferences" "Compare-Forms-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.preferences.Compare-Forms-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Forms-Preferences" () 46 7 ("Bitmap-Resource" "icon:" "title:" "Compare-Trees-Preferences")}}})
"Compare-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Item" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Item" () 45 7 ("Object")
        {Lisp-Entry "moniker" () 48 18 ()}
        {Lisp-Entry "name" () 49 18 ()}
        {Lisp-Entry "value" () 50 18 ()}
        {Lisp-Entry "initialize" () 53 11 ("value~self" "name~self" "moniker~self" "set!" "nextmethod" "value" "name" "moniker")}
        {Lisp-Entry "print" () 60 11 ("value" "name" "moniker" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-moniker" () 71 18 ("moniker")}}}})
"Compare-Line"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Line.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Line" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Line" () 46 7 ("Object")
        {Lisp-Entry "moniker" () 49 18 ()}
        {Lisp-Entry "string" () 50 18 ()}
        {Lisp-Entry "rank" () 51 18 ()}
        {Lisp-Entry "initialize" () 54 11 ("rank" "string" "moniker" "set!" "nextmethod" "r" "s" "m")}
        {Lisp-Entry "get-string" () 61 18 ("string")}
        {Lisp-Entry "print" () 65 11 ("string" "rank" "moniker" "get-base" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Compare-Node"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Node.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Node" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Node" () 46 7 ("Object")
        {Lisp-Entry "lines" () 49 18 ()}
        {Lisp-Entry "children" () 50 18 ()}
        {Lisp-Entry "key" () 51 18 ()}
        {Lisp-Entry "initialize" () 54 11 ("key" "lines" "set!" "nextmethod" "k" "l")}
        {Lisp-Entry "set-lines" () 60 21 ("lines" "set!" "l")}
        {Lisp-Entry "print" () 64 11 ("children" "lines" "length" "String" "key" "coerce" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "add-line" () 73 21 ("cons" "lines" "set!" "line")}
        {Lisp-Entry "add-child" () 77 21 ("cons" "children" "set!" "node")}
        {Lisp-Entry "get-moniker-line" () 81 11 ("eq?" "test:" "get-moniker" "line" "dynamic" "function" "key:" "lines" "find" "moniker")}
        {Lisp-Entry "extract-diff" () 85 21 ("get-moniker-line" "list" "moniker2" "moniker1")}}}})
"Compare-Run"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Run.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Run" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Run" () 46 7 ("Object")
        {Lisp-Entry "color" () 49 18 ()}
        {Lisp-Entry "start" () 50 18 ()}
        {Lisp-Entry "end" () 51 18 ()}
        {Lisp-Entry "initialize" () 54 11 ("end" "start" "color" "set!" "nextmethod" "e" "s" "c")}
        {Lisp-Entry "get-range" () 61 21 ("1" "+" "paragraph-length" "get-limit" "end" "=" "if" "0" "start" "Cell" "Range" "new" "text")}
        {Lisp-Entry "get-height" () 65 21 ("get-start" "get-end" "get-row" "-" "get-range" "range" "let" "text")}
        {Lisp-Entry "print" () 70 11 ("end" "start" "color" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Compare-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Text-Actions.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Text-Actions" () 47 7 ("F12" "on-keep-both" "keep-both" "on-keep-blue-file" "keep-blue-file" "keep-blue" "F11" "on-keep-blue" "keep-blue&next-diff" "on-keep-green-file" "keep-green-file" "keep-green" "F10" ":next?" "on-keep-green" "keep-green&next-diff" "on-compare-previous" "compare-previous" "on-compare-next" "compare-next" ":shift" "on-previous-diff" "previous-diff" "F9" "on-next-diff" ":focus-guest" "next-diff" "on-edit-references" "edit-references" "on-edit-definition" ":focus" "edit-definition" "on-save-to-both" "save-to-both" "on-save-to-blue" "save-to-blue" "on-save-to-green" "save-to-green" "on-save-as" "save-as" ":control" "Shortcut" "shortcut:" "on-save" "save" "on-open-blue" "open-blue" "on-open-green" ":document" "Event-Handler" "action-handler:" "open-green" "name:" "Actions")}}})
"Compare-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Text-View" () 48 7 ("Code" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "IDE-Text-View")
        {Lisp-Entry "focus-actions" () 60 11 ("nextmethod" "compare-text" "find-actions" "cons")}
        {Lisp-Entry "context-menu" () 70 11 ("get-context-menu" "track-popup-menu" ":move-caret" "context-menu-click" "always" "else" "never" "outside-selection" "not" "and" "cond" "move-caret" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "edition-workspace" () 81 11 ("groupware")}
        {Lisp-Entry "colorize-syntax" () 90 11 ("rest")}
        {Lisp-Entry "recolorize-text" () 94 11 ("end-row" "start")}
        {Lisp-Entry "mouse-down" () 103 11 ("get-start" "get-row" "line-color" "user-message" "nextmethod" "pos")}
        {Lisp-Entry "line-color" () 108 11 ("else" "blue" "Blue-Color" "green" "Green-Color" "eq?" "cond" "get-color" "color" "let" "Text-Style" "is?" "get-style" "style" "first" "run" "get-guest" "guest" "get-frame" "frame" "length" "1" "=" "get-runs" "runs" "get-paragraph" "paragraph" "let*" "get-limit" "" "0" ">=" "and" "when" "row")}
        {Lisp-Entry "get-run" () 124 11 ("Compare-Run" "new" "increase!" "+" "decrease!" "1" "-" "eq?" "while" "get-guest" "guest" "get-frame" "frame" "get-limit" "limit" "end" "start" "let*" "when" "line-color" "color" "let" "row")}
        {Lisp-Entry "get-diff" () 139 11 ("get-start" "-" "blue" "1" "get-end" "+" "Compare-Diff" "new" "green" "get-color" "case" "when" "get-run" "run" "get-guest" "guest" "get-frame" "frame" "let*" "row")}
        {Lisp-Entry "select-diff" () 149 21 ("bell" "set-selection" "if" "get-end" "next-line-or-end-of-text" "0" "get-start" "Cell" "Range" "new" "essay" "new-selection" "let" "default-selection" "diff")}
        {Lisp-Entry "goto-next-diff" () 159 21 ("get-row" "next-diff" "=" "if" "select-diff" "false" "get-end" "move-forward" "set-caret" "selection" "old-selection" "let")}
        {Lisp-Entry "goto-previous-diff" () 165 21 ("get-row" "previous-diff" "=" "if" "select-diff" "false" "get-start" "move-backward" "set-caret" "selection" "old-selection" "let")}
        {Lisp-Entry "goto-first-diff" () 171 21 ("selection" "text-beginning" "get-row" "next-diff" "select-diff")}
        {Lisp-Entry "goto-last-diff" () 175 21 ("selection" "text-ending" "get-row" "previous-diff" "select-diff")}
        {Lisp-Entry "next-diff" () 179 11 ("increase!" "line-color" "null?" "" "and" "while" "get-length" "len" "get-diff" "diff" "let" "row")}
        {Lisp-Entry "previous-diff" () 187 11 ("decrease!" "line-color" "null?" "0" ">=" "and" "while" "get-diff" "diff" "let" "row")}
        {Lisp-Entry "previous-end-of-line" () 194 21 ("paragraph-length" "1" "-" "Cell" "new" "0" "=" "if" "row")}
        {Lisp-Entry "next-line-or-end-of-text" () 200 21 ("0" "1" "+" "paragraph-length" "Cell" "new" "get-limit" "=" "if" "row")}
        {Lisp-Entry "keep-green" () 206 21 ("Range" "new" "set-selection" "range" "let" "previous-end-of-line" "set-caret" "1" "get-end" "+" "naturals" "uncolorize-row" "n" "dynamic" "function" "for-each" "get-green" "self" "get-range" "replace-text" "get-blue" "when" "bell" "null?" "if" "get-row" "get-diff" "diff" "get-start" "pos" "let*")}
        {Lisp-Entry "keep-blue" () 223 21 ("previous-end-of-line" "-" "Cell" "Range" "new" "set-selection" "get-height" "0" "row-count" "range" "let" "set-caret" "self" "get-range" "replace-text" "get-green" "1" "get-end" "+" "naturals" "uncolorize-row" "n" "dynamic" "function" "for-each" "get-blue" "when" "bell" "null?" "if" "get-row" "get-diff" "diff" "get-start" "pos" "let*")}
        {Lisp-Entry "keep-both" () 242 21 ("1" "get-end" "+" "naturals" "uncolorize-row" "n" "dynamic" "function" "for-each" "bell" "null?" "if" "get-row" "get-diff" "diff" "get-start" "pos" "let*")}
        {Lisp-Entry "get-context-menu" () 252 11 ("Compare-Text-Menu" "new")}}
      {Lisp-Entry "Compare-Text-Menu" () 261 7 ("edit-references" "code-text" "edit-definition" "save-to-both" "save-to-blue" "save-to-green" "save-as" "Bitmap-Resource" "icon:" "save" "open-blue" "compare-text" "Action" "action:" "title:" "open-green" "name:" "Context-Menu")}}})
"Compare-Texts"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Texts.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Texts" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Texts" () 51 7 ("left-padding:" "text" "content" "vscroll?:" "hscroll?:" "on-compare" "compare" "blue" "blue-border" "blue-label" "on-return-press" "return-press-handler:" "file" "protocol:" "green" "entry" "style:" "edge" "border-type:" "9" "green-border" "Default-GUI" "Font" "font:" "title:" "green-label" "on-keep-both" "keep-both" "on-keep-blue" "keep-blue" "on-keep-green" "keep-green" "on-previous-diff" "previous-diff" "on-next-diff" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "7" "2" "Point" "position:" "next-diff" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "Green-Color" () 54 12 ("blue:" "green:" "0" "red:" "Color")}
        {Lisp-Entry "Blue-Color" () 55 12 ("blue:" "green:" "0" "red:" "Color")}
        {Lisp-Entry "green" () 58 8 ()}
        {Lisp-Entry "blue" () 59 8 ()}
        {Lisp-Entry "compare-directory" () 60 8 ()}
        {Lisp-Entry "compare-directory-cookie" () 61 8 ()}
        {Lisp-Entry "frame-icon" () 90 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 95 16 ()}
        {Lisp-Entry "frame-position" () 100 16 ("Point")}
        {Lisp-Entry "frame-size" () 105 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 109 11 ("groupware")}
        {Lisp-Entry "resize" () 118 11 ("blue-border" "blue-label" "green-border" "2" "get-width" "resize-parts" "second-dh" "first-dh" "bind" "3" "text" "child" "size-figure" "0" "compare" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-compare" () 129 11 ("text" "locate" "acquire-focus" "require-blue" "require-green" "compare-monikers" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-return-press" () 136 11 ("on-compare" "evt")}
        {Lisp-Entry "on-next-diff" () 140 11 ("acquire-focus" "text" "locate" "goto-next-diff" "evt")}
        {Lisp-Entry "on-previous-diff" () 145 11 ("acquire-focus" "text" "locate" "goto-previous-diff" "evt")}
        {Lisp-Entry "on-compare-next" () 150 11 ("compare-next" "evt")}
        {Lisp-Entry "on-compare-previous" () 154 11 ("compare-previous" "evt")}
        {Lisp-Entry "on-keep-green-file" () 158 11 ("keep-green-file" "evt")}
        {Lisp-Entry "on-keep-blue-file" () 162 11 ("keep-blue-file" "evt")}
        {Lisp-Entry "on-keep-green" () 166 11 ("goto-next-diff" ":next?" "get-property" "when" "text" "locate" "keep-green" "evt")}
        {Lisp-Entry "on-keep-blue" () 172 11 ("goto-next-diff" ":next?" "get-property" "when" "text" "locate" "keep-blue" "evt")}
        {Lisp-Entry "on-keep-both" () 178 11 ("text" "locate" "keep-both" "evt")}
        {Lisp-Entry "compare-next" () 187 29 ("compare-next" "bell" "Compare-Trees" "is-not?" "if" "current-guest" "guest" "let" "get-player" "close")}
        {Lisp-Entry "compare-previous" () 195 29 ("compare-previous" "bell" "Compare-Trees" "is-not?" "if" "current-guest" "guest" "let" "get-player" "close")}
        {Lisp-Entry "keep-green-file" () 203 29 ("merge-leaves" "goto-next-comparable" "not" "copy-right" "bell" "Compare-Trees" "is-not?" "if" "current-guest" "guest" "let" "get-player" "close")}
        {Lisp-Entry "keep-blue-file" () 214 29 ("merge-leaves" "goto-next-comparable" "not" "copy-left" "bell" "Compare-Trees" "is-not?" "if" "current-guest" "guest" "let" "get-player" "close")}
        {Lisp-Entry "get-tab-stops" () 230 11 ("blue" "green" "locate" "get-text" "list")}
        {Lisp-Entry "compare-monikers" () 241 18 ("goto-first-diff" "when" "layout-scrollee" "colorize-output" "has-differences?" "output" "gc-triggers" "->string" "message-box" "bell" "compare-monikers" "begin" "Comparer-Application" "get-application" "typed?" "false" "clear-all" "install-monikers" "locate" "text" "new-comparer" "compare" "let" "set-title" "=" "if" "frame-title" "format" "title" "blue" "get-name" "green" "get-player" "player" "let*" "compare-directory-cookie~self" "compare-directory~self" "set!" "compare-directory-cookie" "compare-directory-cookie:" "compare-directory" "compare-directory:" "blue-moniker" "green-moniker")}
        {Lisp-Entry "new-comparer" () 269 29 ("Text-Comparer" "new")}
        {Lisp-Entry "require-green" () 273 11 ("error" "get-green" "either")}
        {Lisp-Entry "require-blue" () 278 11 ("error" "get-blue" "either")}
        {Lisp-Entry "get-green" () 283 11 ("get-moniker" "get-read-only?" "if" "green" "locate" "browser" "let")}
        {Lisp-Entry "get-blue" () 290 11 ("get-moniker" "get-read-only?" "if" "blue" "locate" "browser" "let")}
        {Lisp-Entry "install-monikers" () 297 29 ("set!" "blue" "green" "locate" "set-moniker" "blue-moniker" "green-moniker")}
        {Lisp-Entry "colorize-output" () 304 11 ("paragraphs:" "styles:" "formats:" "Formatted-Text" "set-formatted-content" "get-string" "true" "set!" "/=" "when" "0" "else" "2" "1" "case" "style" "let" "color" "line" "rank2" "rank1" "bind" "info" "dynamic" "function" "map" "paragraphs" "false" "has-differences?" "styles" "Blue-Color" "blue" "Green-Color" "color:" "green" "font:" "base:" "Text-Style" "new" "intern-style" "plain" "Code" "name:" "Font" "font" "Default" "get-format" "list" "formats" "let*" "text" "output")}
        {Lisp-Entry "on-open-green" () 328 11 ("green" "open-item" "evt")}
        {Lisp-Entry "on-open-blue" () 332 11 ("blue" "open-item" "evt")}
        {Lisp-Entry "open-item" () 336 11 ("get-source" "groupware" "workspace:" "edit-document" "Moniker" "is?" "if" "get-application" "appl" "let" "item")}
        {Lisp-Entry "on-save-to-green" () 348 11 ("save-to-green" "evt")}
        {Lisp-Entry "on-save-to-blue" () 352 11 ("save-to-blue" "evt")}
        {Lisp-Entry "on-save-to-both" () 356 11 ("save-to-both" "evt")}
        {Lisp-Entry "save" () 360 11 ("get-host" "close" "compare-directory-cookie" "merge-done" "compare-directory" "when" "save-to-both")}
        {Lisp-Entry "save-as" () 367 11 ("text" "locate" "save-as")}
        {Lisp-Entry "save-to-green" () 371 11 ("green" "save-to")}
        {Lisp-Entry "save-to-blue" () 375 11 ("blue" "save-to")}
        {Lisp-Entry "save-to-both" () 379 11 ("get-modification-time" "set-modification-time" "File" "is?" "and" "when" "blue" "green" "save-to")}
        {Lisp-Entry "save-to" () 386 11 ("get-content" "save-lines" "locate" "text" "let" "ensure-read/write" "item")}}}})
"Compare-Trees"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Trees.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Trees" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Trees" () 51 7 ("center" "justification:" "right-value" "left-value" "width:" "row" "selection-mode:" "on-context-menu" "context-menu-handler:" "on-double-click" "double-click-handler:" "multiple-selection?:" "name" "filled-column:" "results" "document" "outline" "results-border" "on-transfer" "transfer" "on-build-updater" "build-updater" "on-no-action" "no-action" "on-copy-left" "copy-left" "on-merge-leaves" "merge-leaves" "on-copy-right" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "copy-right" "default?:" "on-compare" "action-handler:" "7" "compare" "whitespace" "timestamp" "4" "check-algorithm" "blue" "blue-border" "blue-label" "green" "green-border" "8" "green-label" "trees" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "Default-GUI" "Font" "font:" "base-date" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "entry" "edge" "border-type:" "selected?:" "merge" "backup" "styled" "style:" "5" "Point" "position:" "title:" "mode" "name:" "Dimension" "size:" "Tool-View")
        {Lisp-Entry "mode" () 54 12 ("set-mode" "get-mode")}
        {Lisp-Entry "base-date" () 55 12 ("set-base-date" "get-base-date")}
        {Lisp-Entry "left-moniker" () 56 12 ("set-left-moniker" "get-left-moniker" ":uninitialized")}
        {Lisp-Entry "right-moniker" () 57 12 ("set-right-moniker" "get-right-moniker" ":uninitialized")}
        {Lisp-Entry "left-content" () 58 12 ("set-left-content" "get-left-content" "true")}
        {Lisp-Entry "right-content" () 59 12 ("set-right-content" "get-right-content" "true")}
        {Lisp-Entry "ignored-nodes" () 60 12 ("set-ignored-nodes" "get-ignored-nodes")}
        {Lisp-Entry "ignored-leaves" () 61 12 ("set-ignored-leaves" "get-ignored-leaves")}
        {Lisp-Entry "ignored-extensions" () 62 12 ("set-ignored-extensions" "get-ignored-extensions")}
        {Lisp-Entry "check-algorithm" () 63 12 ("set-check-algorithm" "get-check-algorithm")}
        {Lisp-Entry "left-root" () 66 8 ()}
        {Lisp-Entry "left-base" () 67 8 ()}
        {Lisp-Entry "right-root" () 68 8 ()}
        {Lisp-Entry "right-base" () 69 8 ()}
        {Lisp-Entry "root-entry" () 70 8 ()}
        {Lisp-Entry "installed-configuration" () 71 8 ()}
        {Lisp-Entry "$Left-Value-Column" () 121 12 ("1")}
        {Lisp-Entry "$Right-Value-Column" () 122 12 ("2")}
        {Lisp-Entry "$Left-Column" () 123 12 ("3")}
        {Lisp-Entry "$Action-Column" () 124 12 ("4")}
        {Lisp-Entry "$Right-Column" () 125 12 ("5")}
        {Lisp-Entry "install" () 133 11 ("load-session" "nextmethod" "rest")}
        {Lisp-Entry "frame-workspaces" () 143 11 ("groupware")}
        {Lisp-Entry "focus-default" () 147 11 ("results" "locate" "acquire-focus")}
        {Lisp-Entry "get-left-content" () 156 18 ("left-content")}
        {Lisp-Entry "set-left-content" () 160 18 ("left-content" "set!" "content")}
        {Lisp-Entry "get-right-content" () 164 18 ("right-content")}
        {Lisp-Entry "set-right-content" () 168 18 ("right-content" "set!" "content")}
        {Lisp-Entry "get-ignored-nodes" () 172 18 ("ignored-nodes")}
        {Lisp-Entry "set-ignored-nodes" () 176 18 ("ignored-nodes" "set!" "ignored")}
        {Lisp-Entry "get-ignored-leaves" () 180 18 ("ignored-leaves")}
        {Lisp-Entry "set-ignored-leaves" () 184 18 ("ignored-leaves" "set!" "ignored")}
        {Lisp-Entry "get-ignored-extensions" () 188 18 ("ignored-extensions")}
        {Lisp-Entry "set-ignored-extensions" () 192 18 ("ignored-extensions" "set!" "ignored")}
        {Lisp-Entry "guest-actions" () 201 11 ("nextmethod" "compare-trees" "find-actions" "cons")}
        {Lisp-Entry "frame-activate" () 211 11 ("results" "locate" "acquire-focus" "get-finished?" "when" "nextmethod")}
        {Lisp-Entry "resize" () 217 11 ("results" "invalidate-header" "results-border" "transfer" "build-updater" "no-action" "copy-left" "merge-leaves" "copy-right" "compare" "blue-border" "green-border" "check-algorithm" "move-figure" "0" "trees" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-copy-right" () 235 11 ("bell" "goto-next-comparable" "unless" ":next?" "get-property" "when" "copy-right" "evt")}
        {Lisp-Entry "copy-right" () 242 21 ("get-selection" "invalidate-cell" "$Action-Column" "Cell" "new" "cell" "copy-right" "set-action" "get-right" "get-left" "node" "get-kind" "=" "and" "unless" "get-row" "get-user-data" "entry" "n" "for-each" "dynamic" "function" "with-update-locked" "results" "locate" "tree" "let")}
        {Lisp-Entry "on-copy-left" () 255 11 ("bell" "goto-next-comparable" "unless" ":next?" "get-property" "when" "copy-left" "evt")}
        {Lisp-Entry "copy-left" () 262 21 ("get-selection" "invalidate-cell" "copy-left" "set-action" "$Action-Column" "Cell" "new" "cell" "get-right" "get-left" "node" "get-kind" "=" "and" "unless" "get-row" "get-user-data" "entry" "n" "for-each" "dynamic" "function" "with-update-locked" "results" "locate" "tree" "let")}
        {Lisp-Entry "on-merge-leaves" () 275 11 ("merge-leaves" "evt")}
        {Lisp-Entry "merge-leaves" () 279 21 ("compare-leaves" "get-right" "get-left" "leaf" "get-kind" "=" "and" "car" "get-row" "get-user-data" "entry" "let" "bell" "1" "length" ">" "if" "not-null?" "when" "get-selection" "selection" "results" "locate" "tree" "let*")}
        {Lisp-Entry "on-no-action" () 290 11 ("get-selection" "invalidate-cell" "$Action-Column" "Cell" "new" "cell" "set-action" "get-right" "get-left" "node" "get-kind" "=" "and" "unless" "get-row" "get-user-data" "entry" "n" "for-each" "dynamic" "function" "with-update-locked" "results" "locate" "tree" "let" "evt")}
        {Lisp-Entry "on-compare-next" () 303 11 ("compare-next" "evt")}
        {Lisp-Entry "on-compare-previous" () 307 11 ("compare-previous" "evt")}
        {Lisp-Entry "compare-next" () 311 21 ("merge-leaves" "bell" "goto-next-comparable" "not" "if")}
        {Lisp-Entry "compare-previous" () 317 21 ("merge-leaves" "bell" "goto-previous-comparable" "not" "if")}
        {Lisp-Entry "on-build-updater" () 324 11 ("updater-built" "build-updater" "choose-updater" "file" "let" "evt")}
        {Lisp-Entry "choose-updater" () 330 29 ("SaveFile-Dialog" "get-modal")}
        {Lisp-Entry "on-transfer" () 334 11 ("transfer" "evt")}
        {Lisp-Entry "transfer" () 338 29 ("increase!" "decrease!" "remove-row" "$Action-Column" "set-action" "$Right-Column" "invalidate-cell" "$Left-Column" "Cell" "new" "cell" "begin" "null?" "or" "node" "get-kind" "=" "and" "set-left" "left-root" "new-left" "add-item" "set-right" "right-root" "make-item" "new-right" "let" "delete-item" "copy-item" "if" "case" "copy-left" "copy-right" "memq?" "when" "get-action" "action" "get-right" "right" "get-left" "left" "get-father" "entry-father" "get-user-data" "entry" "get-row" "row" "" "while" "dynamic" "function" "with-update-locked" "0" "n" "get-visible-count" "count" "results" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "on-double-click" () 390 11 ("on-merge-leaves" "results" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-return-press" () 397 11 ("on-compare" "else" "on-merge-leaves" "results" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-compare" () 406 29 ("compare-trees" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-context-menu" () 412 11 ("get-compare-menu" "track-popup-menu" "dynamic" "function" "with-context-click" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-next-comparable" () 421 11 ("bell" "goto-next-comparable" "unless" "evt")}
        {Lisp-Entry "on-previous-comparable" () 426 11 ("bell" "goto-previous-comparable" "unless" "evt")}
        {Lisp-Entry "on-next-uncomparable" () 431 11 ("bell" "goto-next-uncomparable" "unless" "evt")}
        {Lisp-Entry "on-previous-uncomparable" () 436 11 ("bell" "goto-previous-uncomparable" "unless" "evt")}
        {Lisp-Entry "get-tab-stops" () 446 11 ("blue" "text" "green" "base-date" "locate" "list")}
        {Lisp-Entry "load-session" () 458 11 ("get-base-dates" "Base-Dates" "set!" "compare-directories" "tools" "get-preferences" "pref" "let")}
        {Lisp-Entry "save-guest" () 463 11 ("Base-Dates" "base-dates:" "get-right-moniker" "right-moniker:" "get-left-moniker" "left-moniker:" "get-base-date" "base-date:" "get-mode" "mode:" "add-guest-preferences" "session" "designer")}
        {Lisp-Entry "Base-Dates" () 477 14 ()}
        {Lisp-Entry "on-configure" () 481 18 (":configuration" "get-property" "install-configuration" "evt")}
        {Lisp-Entry "on-register-base-date" () 485 18 ("set-base-date" "set-cdr!" "cons" "set!" "not" "Base-Dates" "assq" "pair" "universal-date" "present" "date" "let" "merge" "/=" "mode" "name" "bind" "error" "installed-configuration" "null?" "if" "evt")}
        {Lisp-Entry "on-reset-actions" () 499 18 ("reset-actions" "evt")}
        {Lisp-Entry "configure" () 503 18 ("compare-directories" "tools" "get-preferences" "child" "install-configuration" "name")}
        {Lisp-Entry "install-configuration" () 507 18 ("results" "locate" "remove-every-row" "get-check-algorithm" "set-check-algorithm" "get-ignored-extensions" "set-ignored-extensions" "get-ignored-leaves" "set-ignored-leaves" "get-ignored-nodes" "set-ignored-nodes" "get-right" "set-right-moniker" "get-left" "set-left-moniker" "get-name" "find-base-date" "merge" "=" "essay" "set-base-date" "get-mode" "set-mode" "installed-configuration" "set!" "config")}
        {Lisp-Entry "find-base-date" () 520 11 ("Base-Dates" "assq" "cdr" "name")}
        {Lisp-Entry "on-open-green" () 524 11 ("groupware" "workspace:" "edit-document" "get-application" "appl" "bell" "get-left" "null?" "node" "get-kind" "=" "or" "if" "get-row" "get-user-data" "entry" "let" "when" "get-single-selection" "selection" "results" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "on-open-blue" () 535 11 ("groupware" "workspace:" "edit-document" "get-application" "appl" "bell" "get-right" "null?" "node" "get-kind" "=" "or" "if" "get-row" "get-user-data" "entry" "let" "when" "get-single-selection" "selection" "results" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "get-mode" () 551 11 ("mode" "locate" "get-selected-element")}
        {Lisp-Entry "set-mode" () 555 11 ("locate" "set-selected-element" "mode")}
        {Lisp-Entry "get-check-algorithm" () 559 11 ("check-algorithm" "locate" "get-selected-element")}
        {Lisp-Entry "set-check-algorithm" () 563 11 ("timestamp" "either" "check-algorithm" "locate" "set-selected-element" "algorithm")}
        {Lisp-Entry "get-base-date" () 567 11 ("Date" "parse-string" "empty-string?" "if" "base-date" "locate" "get-string-content" "text" "let")}
        {Lisp-Entry "set-base-date" () 574 11 ("base-date" "locate" "set-string-content" "else" "present" "Date" "is?" "false" "eq?" "null?" "or" "cond" "text" "let" "date")}
        {Lisp-Entry "get-left-moniker" () 579 29 ("get-moniker" "set!" "left-moniker" "get-read-only?" "if" "green" "locate" "browser" "let")}
        {Lisp-Entry "set-left-moniker" () 586 29 ("green" "locate" "set-moniker" "left-moniker" "set!" "moniker")}
        {Lisp-Entry "get-right-moniker" () 591 29 ("get-moniker" "set!" "right-moniker" "get-read-only?" "if" "blue" "locate" "browser" "let")}
        {Lisp-Entry "set-right-moniker" () 598 29 ("blue" "locate" "set-moniker" "right-moniker" "set!" "moniker")}
        {Lisp-Entry "select-all" () 603 11 ("true" "user-origin?:" "results" "locate" "select-all" "rest")}
        {Lisp-Entry "require-left-moniker" () 612 11 ("error" "get-left-moniker" "either")}
        {Lisp-Entry "require-right-moniker" () 617 11 ("error" "get-right-moniker" "either")}
        {Lisp-Entry "new-comparer" () 622 29 ("Tree-Comparer" "new")}
        {Lisp-Entry "get-trees" () 626 29 ("require-right-moniker" "require-left-moniker" "moniker->tree" "values")}
        {Lisp-Entry "moniker->tree" () 631 29 ("moniker")}
        {Lisp-Entry "compare-trees" () 635 18 ("essay" "user-message" "display-results" "scan-feedback" "right" "left" "dynamic" "function" "feedback:" "get-check-algorithm" "check-algorithm:" "ignored-extensions" "ignored-extensions:" "ignored-leaves" "ignored-leaves:" "ignored-nodes" "ignored-nodes:" "right-content" "right-content:" "left-content" "left-content:" "compare-nodes" "scanned-values" "has-differences?" "entry" "new-comparer" "comparer" "let" "right-base" "tree-base" "left-base" "right-root" "left-root" "set!" "get-trees" "right-tree" "left-tree" "receive")}
        {Lisp-Entry "scan-feedback" () 656 29 ("user-message" "right" "left")}
        {Lisp-Entry "display-results" () 665 11 ("set-selection" "0" "display-entry" "remove-every-row" "dynamic" "function" "with-update-locked" "root-entry" "set!" "results" "locate" "tree" "get-merge-date" "date" "get-mode" "mode" "let*" "entry")}
        {Lisp-Entry "display-entry" () 677 11 ("get-children" "1" "+" "display-entry" "child" "dynamic" "function" "for-each" "ensure-expanded" "setup-action" "not" "when" "user-data:" "list" "children:" "expanded" "collapsed" "state:" "father:" "add-row" "row" "c5" "c4" "c3" "get-right-value" "c2" "get-left-value" "present-value" "Tree-Label" "c1" "image:" "title:" "Tree-Node" "new" "c0" "entry-image" "image" "present-item" "present-root" "2" "" "if" "name" "node" "=" "and" "lvl?" "either" "ref" "get-action" "action" "get-right" "right" "get-left" "left" "get-kind" "kind" "let*" "level" "entry" "father" "tree" "date" "mode")}
        {Lisp-Entry "setup-action" () 701 11 ("setup-merge" "merge" "setup-backup" "backup" "case" "entry" "base-date" "mode")}
        {Lisp-Entry "setup-backup" () 707 11 ("backup-action" "set-action" "get-right-value" "right-value" "get-right" "right" "get-left-value" "left-value" "get-left" "left" "let" "entry" "base-date")}
        {Lisp-Entry "setup-merge" () 715 11 ("merge-action" "set-action" "get-right-value" "right-value" "get-right" "right" "get-left-value" "left-value" "get-left" "left" "let" "leaf" "get-kind" "=" "when" "entry" "base-date")}
        {Lisp-Entry "reset-actions" () 724 11 ("invalidate-view" "get-selection" "get-row" "n" "for-each" "setup-action" "Compare-Entry" "is?" "when" "get-user-data" "entry" "let" "row" "dynamic" "function" "proc" "self" "comparer" "results" "locate" "tree" "get-merge-date" "base-date" "get-mode" "mode" "let*")}
        {Lisp-Entry "backup-action" () 740 29 ("copy-right" "right-value" "right" "left-value" "left" "base-date")}
        {Lisp-Entry "merge-action" () 744 29 ("right-value" "right" "left-value" "left" "base-date")}
        {Lisp-Entry "get-merge-date" () 748 29 ("get-time" "get-base-date" "date" "let" "merge" "=" "when" "mode")}
        {Lisp-Entry "build-updater" () 761 29 ("increase!" "left-root" "copy-left" "right-root" "make-item" "either" "add-action" "copy-right" "case" "get-action" "action" "get-right" "right" "get-left" "left" "get-father" "entry-father" "get-user-data" "entry" "get-row" "row" "" "while" "0" "n" "get-visible-count" "count" "results" "locate" "tree" "let*" "Updater-Builder" "new" "builder" "with-closed" "file")}
        {Lisp-Entry "add-action" () 779 11 ("add-copy" "add-delete" "null?" "if" "builder" "dst" "src")}
        {Lisp-Entry "updater-built" () 785 29 ("groupware" "workspace:" "get-application" "edit-document" "file")}
        {Lisp-Entry "add-item" () 794 29 ("copy-item" "dst" "src")}
        {Lisp-Entry "copy-item" () 798 29 ("error" "dst" "src")}
        {Lisp-Entry "delete-item" () 802 29 ("error" "item")}
        {Lisp-Entry "compare-leaves" () 806 29 ("user-data" "right" "left")}
        {Lisp-Entry "merge-done" () 810 18 ("goto-next-comparable" "remove-row" "get-row" "row" "let" "when" "user-data-index" "n" "results" "locate" "tree" "let*" "user-data")}
        {Lisp-Entry "goto-next-comparable" () 819 21 ("comparable?" "goto-next" "rank")}
        {Lisp-Entry "goto-previous-comparable" () 823 21 ("comparable?" "goto-previous" "rank")}
        {Lisp-Entry "goto-next-uncomparable" () 827 21 ("uncomparable?" "goto-next" "rank")}
        {Lisp-Entry "goto-previous-uncomparable" () 831 21 ("uncomparable?" "goto-previous" "rank")}
        {Lisp-Entry "goto-next" () 835 21 ("list" "set-selection" "when" "find-next" "next" "1" "generic-max" "apply" "+" "0" "null?" "if" "either" "get-selection" "selection" "results" "locate" "tree" "let*" "rank" "predicate")}
        {Lisp-Entry "goto-previous" () 845 21 ("list" "set-selection" "when" "find-previous" "previous" "generic-min" "apply" "1" "get-visible-count" "-" "null?" "if" "either" "get-selection" "selection" "results" "locate" "tree" "let*" "rank" "predicate")}
        {Lisp-Entry "find-next" () 856 11 ("finally" "return" "when" "get-user-data" "entry" "get-row" "row" "with" "get-visible-count" "below" "from" "n" "for" "loop" "predicate" "rank" "tree")}
        {Lisp-Entry "find-next" () 865 11 ("when" "get-user-data" "entry" "get-row" "row" "let*" "do" "get-visible-count" "below" "from" "n" "for" "loop" "return" "lambda" "call/ec" "predicate" "rank" "tree")}
        {Lisp-Entry "find-previous" () 876 11 ("when" "get-user-data" "entry" "get-row" "row" "let*" "do" "0" "downto" "from" "n" "for" "loop" "return" "lambda" "call/ec" "predicate" "rank" "tree")}
        {Lisp-Entry "comparable?" () 887 11 ("get-right" "get-left" "leaf" "get-kind" "=" "and" "entry")}
        {Lisp-Entry "uncomparable?" () 891 11 ("get-right" "get-left" "xor" "entry")}
        {Lisp-Entry "make-item" () 900 29 ("father" "root" "item")}
        {Lisp-Entry "tree-base" () 904 29 ("tree")}
        {Lisp-Entry "trim-left" () 908 29 ("item")}
        {Lisp-Entry "trim-right" () 912 29 ("item")}
        {Lisp-Entry "present-root" () 916 29 ("either" "present-item" "right" "left")}
        {Lisp-Entry "present-item" () 920 29 ("item")}
        {Lisp-Entry "present-value" () 924 29 ("value" "kind")}
        {Lisp-Entry "entry-image" () 928 29 ("leaf" "Bitmap-Resource" "node" "get-kind" "case" "ref" "entry")}
        {Lisp-Entry "action-image" () 934 29 ("copy-left" "merge" "else" "Bitmap-Resource" "null?" "cond" "copy-right" "case" "right" "left" "action")}
        {Lisp-Entry "get-compare-menu" () 948 29 ("Compare-Menu" "new")}}
      {Lisp-Entry "Item-Column" () 957 7 ("Tree-Column")
        {Lisp-Entry "draw-cell" () 960 11 ("0" "2" "-" "quotient" "get-application" "get-icons-cache" "draw-image" "present-image" "image" "present?" "not" "when" "get-right" "get-left" "node" "get-kind" "=" "and" "lvl?" "let" "draw-background" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "present?" () 968 38 ("cell")}
        {Lisp-Entry "present-image" () 972 38 ("cell")}}
      {Lisp-Entry "Left-Column" () 981 7 ("Item-Column")
        {Lisp-Entry "draw-cell" () 985 11 ("nextmethod" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "present?" () 989 11 ("get-left" "cell")}
        {Lisp-Entry "present-image" () 993 11 ("Bitmap-Resource" "cell")}}
      {Lisp-Entry "Action-Column" () 1002 7 ("Tree-Column")
        {Lisp-Entry "draw-cell" () 1005 11 ("0" "1" "2" "-" "quotient" "+" "get-icons-cache" "draw-image" "get-right" "get-left" "action-image" "image" "get-application" "appl" "when" "get-action" "action" "let" "draw-background" "height" "width" "cell" "row" "context" "dc")}}
      {Lisp-Entry "Right-Column" () 1019 7 ("Item-Column")
        {Lisp-Entry "draw-cell" () 1023 11 ("nextmethod" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "present?" () 1027 11 ("get-right" "cell")}
        {Lisp-Entry "present-image" () 1031 11 ("Bitmap-Resource" "cell")}}
      {Lisp-Entry "Compare-Menu" () 1040 7 ("on-open-blue" "open-blue" "on-open-green" "open-green" "open-group" "on-reset-actions" "reset-actions" "on-register-base-date" ":document" "Event-Handler" "action-handler:" "register-base-date" "action-group" "name:" "Bitmap-Resource" "icon:" "title:" "Context-Menu")}
      {Lisp-Entry "Configure-Menu" () 1060 7 ("Context-Menu")
        {Lisp-Entry "finish" () 1063 11 ("update-menu" "nextmethod" "rest")}
        {Lisp-Entry "update-menu" () 1068 18 ("compare-directories" "tools" "get-preferences" "get-children" ":configuration" "list" "properties:" "on-configure" "method-name:" ":document" "target-name:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "get-presentation" "title" "let" "config" "dynamic" "function" "for-each")}}}})
"Compare-Trees-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Compare-Trees-Actions.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.compare.Compare-Trees-Actions" () 38 9 ("jazz")
      {Lisp-Entry "Compare-Trees-Actions" () 48 7 ("on-compare-previous" "compare-previous" ":control" "on-compare-next" "compare-next" "copy-left" "F11" "on-copy-left" "copy-left&next-comparable" "on-copy-righ" "copy-right" "F10" ":next?" "on-copy-right" "copy-right&next-comparable" "on-previous-uncomparable" "previous-uncomparable" ":alt" "on-next-uncomparable" "next-uncomparable" ":shift" "on-previous-comparable" "previous-comparable" "F9" "Shortcut" "shortcut:" "on-next-comparable" ":document" "Event-Handler" "action-handler:" "next-comparable" "name:" "Actions")}}})
"Compare-Trees-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "preferences" "Compare-Trees-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.preferences.Compare-Trees-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Compare-Trees-Preferences" () 45 7 ("Frame-Preferences")
        {Lisp-Entry "active-configuration" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "base-dates" () 49 12 ("generate" "accessors")}}}})
"Compiled-Procedure-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Compiled-Procedure-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.frame.Compiled-Procedure-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Compiled-Procedure-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "present" () 53 11 ("name")}
        {Lisp-Entry "get-image" () 57 11 ("Bitmap-Resource")}}}})
"Completion-Popup"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "text" "Completion-Popup.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.text.Completion-Popup" () 37 9 ("jazz")
      {Lisp-Entry "Completion-Popup" () 45 7 ("5" "Point" "position:" "tree" "name:" "Dimension" "size:" "Popup")
        {Lisp-Entry "owner-text" () 48 12 ("set-owner-text" "get-owner-text")}
        {Lisp-Entry "get-owner-text" () 56 18 ("owner-text")}
        {Lisp-Entry "set-owner-text" () 60 18 ("owner-text" "set!" "text")}
        {Lisp-Entry "focus-lose" () 64 11 ("close" "owner-text" "/=" "when" "nextmethod" "receiving")}}}})
"Complex"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.tutorials" "lib" "mandelbrot" "jazz" "Complex.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "mandelbrot" () 37 4 ()}
    {Lisp-Entry "Complex" () 40 7 ("Number")
      {Lisp-Entry "r" () 43 15 ()}
      {Lisp-Entry "i" () 44 15 ()}
      {Lisp-Entry "construct-literal" () 48 16 ("self" "new" "i" "r" "context")}
      {Lisp-Entry "initialize" () 52 11 ("i~self" "r~self" "set!" "nextmethod" "i" "r")}
      {Lisp-Entry "print" () 58 11 ("i" "r" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
      {Lisp-Entry "get-real" () 70 18 ("r")}
      {Lisp-Entry "get-imaginary" () 74 18 ("i")}
      {Lisp-Entry "negate" () 83 11 ("i" "r" "-" "Complex" "new")}
      {Lisp-Entry "norm" () 87 11 ("i" "2" "r" "expt" "+" "sqrt")}
      {Lisp-Entry "add" () 91 11 ("self" "error" "else" "integer?" "get-i" "i" "get-r" "r" "+" "new" "Complex" "is?" "cond" "n")}
      {Lisp-Entry "inverse" () 97 11 ("self" "error")}
      {Lisp-Entry "multiply" () 101 11 ("self" "error" "+" "get-i" "i" "get-r" "r" "*" "-" "new" "Complex" "is?" "if" "n")}}})
"Component"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "component" "Component.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.component.Component" () 37 9 ("jazz")
      {Lisp-Entry "Component-Class" () 45 7 ("Class")
        {Lisp-Entry "class-descriptor" () 54 37 ()}
        {Lisp-Entry "get-class-descriptor" () 58 31 ("class-descriptor")}
        {Lisp-Entry "presentation->name" () 62 26 ("string->symbol" "=" "empty-string?" "or" "if" "presentation")}
        {Lisp-Entry "name->presentation" () 68 26 ("->string" "name")}
        {Lisp-Entry "get-descriptor" () 72 18 ("get-descriptor" "unimplemented")}
        {Lisp-Entry "get-class-form" () 77 26 ("class-form")}
        {Lisp-Entry "get-class-presentation" () 86 26 ("type-name" "->string" "get-title" "if" "self" "get-descriptor" "descriptor" "let")}
        {Lisp-Entry "get-class-image" () 93 26 ("Bitmap-Resource" "get-image" "if" "self" "get-descriptor" "descriptor" "let")}
        {Lisp-Entry "get-name-prohibited?" () 100 26 ("false" "get-name-prohibited?" "if" "self" "get-descriptor" "descriptor" "let")}
        {Lisp-Entry "get-name-mandatory?" () 107 26 ("false" "get-name-mandatory?" "if" "self" "get-descriptor" "descriptor" "let")}
        {Lisp-Entry "get-name-unicity?" () 114 26 ("false" "get-name-unicity?" "if" "self" "get-descriptor" "descriptor" "let")}
        {Lisp-Entry "property-presentation" () 121 26 ("->string" "get-title" "if" "self" "get-property-descriptor" "descriptor" "else" "visible?" "children" "before" "presentation-info" "name-info" "class-info" "case" "field-name" "name" "let" "property-presentation" "unimplemented" "property")}
        {Lisp-Entry "detail-presentation" () 138 26 ("property-presentation" "else" "presentation-info" "name-info" "class-info" "field-name" "case" "detail-presentation" "unimplemented" "property")}
        {Lisp-Entry "persist-property?" () 148 26 ("true" "property")}}
      {Lisp-Entry "Component" () 152 7 ("Object")
        {Lisp-Entry "Installed-Flag" () 163 14 ()}
        {Lisp-Entry "Finished-Flag" () 164 14 ()}
        {Lisp-Entry "Visible-Flag" () 165 14 ()}
        {Lisp-Entry "Layout-Valid-Flag" () 166 14 ()}
        {Lisp-Entry "name" () 169 8 ()}
        {Lisp-Entry "parent" () 170 8 ()}
        {Lisp-Entry "branch" () 171 8 ()}
        {Lisp-Entry "creation-form" () 172 8 ()}
        {Lisp-Entry "creator" () 173 8 ()}
        {Lisp-Entry "creator-branch" () 174 8 ()}
        {Lisp-Entry "event-consumer" () 176 8 ()}
        {Lisp-Entry "designers" () 177 8 ()}
        {Lisp-Entry "surrogate" () 178 8 ()}
        {Lisp-Entry "index" () 179 8 ()}
        {Lisp-Entry "flags" () 180 8 ("Visible-Flag")}
        {Lisp-Entry "before" () 183 12 ("set-before" "get-before")}
        {Lisp-Entry "children" () 184 12 ("set-children" "get-children")}
        {Lisp-Entry "visible?" () 185 12 ("set-visible?" "get-visible?")}
        {Lisp-Entry "class-info" () 186 12 ("get-class-info")}
        {Lisp-Entry "name-info" () 187 12 ("get-name-info")}
        {Lisp-Entry "presentation-info" () 188 12 ("get-presentation-info")}
        {Lisp-Entry "get-name" () 197 18 ("name")}
        {Lisp-Entry "set-name" () 202 18 ("name" "set!" "value")}
        {Lisp-Entry "get-parent" () 207 18 ("parent")}
        {Lisp-Entry "set-parent" () 211 26 ("install-in-parent" "set!" "self" "remove-child" "parent" "when" "value")}
        {Lisp-Entry "get-before" () 220 18 ("before")}
        {Lisp-Entry "set-before" () 224 18 ("child" "self" "parent" "send-child-before" "get-finished?" "when" "before" "set!" "value")}
        {Lisp-Entry "get-children" () 231 18 ("children")}
        {Lisp-Entry "set-children" () 235 26 ("self" "set-parent" "do" "in" "child" "for" "loop" "when" "children" "set!" "lst")}
        {Lisp-Entry "get-branch" () 243 18 ("branch")}
        {Lisp-Entry "set-branch" () 248 18 ("branch" "set!" "value")}
        {Lisp-Entry "get-form" () 253 18 ("creation-form")}
        {Lisp-Entry "set-form" () 258 18 ("creation-form" "set!" "value")}
        {Lisp-Entry "get-creator" () 263 18 ("creator")}
        {Lisp-Entry "set-creator" () 268 18 ("creator" "set!" "value")}
        {Lisp-Entry "get-creator-branch" () 273 18 ("creator-branch")}
        {Lisp-Entry "set-creator-branch" () 278 18 ("creator-branch" "set!" "value")}
        {Lisp-Entry "get-class-info" () 282 11 ("self" "class-of" "get-class-presentation")}
        {Lisp-Entry "get-class-form" () 287 11 ("car" "not-null?" "if" "get-class-forms" "forms" "let")}
        {Lisp-Entry "get-class-forms" () 294 19 ()}
        {Lisp-Entry "get-name-info" () 298 11 ("name")}
        {Lisp-Entry "get-presentation-info" () 302 11 ("get-presentation")}
        {Lisp-Entry "get-installed?" () 311 21 ("Installed-Flag" "flags" "mask-bit-set?")}
        {Lisp-Entry "set-installed?" () 315 21 ("Installed-Flag" "mask-bit-set" "flags" "set!" "flag")}
        {Lisp-Entry "get-finished?" () 319 21 ("Finished-Flag" "flags" "mask-bit-set?")}
        {Lisp-Entry "set-finished?" () 323 11 ("Finished-Flag" "mask-bit-set" "flags" "set!" "flag")}
        {Lisp-Entry "print" () 332 11 ("get-installed-branches" "component" "map" "branch" "get-presentation" "not" "if" "name" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "initialize" () 353 11 ("initialize-component" "self" "class-of" "setup-toplevel-context" "get-origin" "not" "and" "when" "get-class-form" "form" "let" "nextmethod" "rest")}
        {Lisp-Entry "initialize-component" () 361 29 ("hide" "show" "if" "initially-visible?" "neq?" "when" "get-visible?" "visible?" "let" "conclude" "set-finished?" "install-in-parent" "finish" "true" "set-installed?" "install" "prepare" "rest")}
        {Lisp-Entry "default-name" () 376 29 ()}
        {Lisp-Entry "default-parent" () 380 29 ()}
        {Lisp-Entry "prepare" () 384 29 ("prepare-component" "prepare-parent" "initargs")}
        {Lisp-Entry "prepare-parent" () 389 11 ("default-parent" "not" "if" "parent" "set!" "not-found:" "parent:" "getf" "arg" "let" "initargs")}
        {Lisp-Entry "prepare-component" () 394 11 ("creator-branch:" "set-creator-branch" "creator:" "set-creator" "get-class-form" "form:" "set-form" "default-name" "name:" "getf" "either" "set-name" "initargs")}
        {Lisp-Entry "install" () 401 29 ("install-component" "initargs")}
        {Lisp-Entry "install-component" () 405 11 ("get-class-forms" "install-inherited" "initargs")}
        {Lisp-Entry "install-inherited" () 409 11 ("self" "car" "install-form" "cdr" "install-inherited" "not-null?" "when" "forms")}
        {Lisp-Entry "install-form" () 415 18 ("get-children" "install-children" "get-properties" "install-properties" "when" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "install-children" () 421 29 ("install-child" "do" "in" "child" "for" "loop" "restore-form" "creator-branch" "creator" "children")}
        {Lisp-Entry "install-child" () 426 26 ("error" "else" "close" "get-component" "child" "remove" "equal?" "find-to-modify" "install-form" "remember-reference" "set!" "locate" "modify" "remember-creation" "add-to-index" "when" "creator-branch:" "creator:" "form:" "name:" "parent:" "new-in" "component" "self" "either" "require-form-model" "get-model-name" "load-source" "if" "model" "get-tag-source" "source" "let*" "new" "case" "get-name" "name" "get-action" "action" "let" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "install-properties" () 449 11 ("cddr" "write-property-to" "remember-property" "set-car!" "self" "class-of" "component-property" "set!" "symbol?" "when" "cadr" "value" "car" "expr" "let" "not-null?" "while" "restore-form" "properties")}
        {Lisp-Entry "find-to-modify" () 462 26 ("locate" "find-component-with" "either" "test" "name")}
        {Lisp-Entry "require-form-model" () 469 29 ("form-model" "form")}
        {Lisp-Entry "form-model" () 475 26 ("get-model" "form")}
        {Lisp-Entry "finish" () 479 29 ("write-properties" "creator~self" "set!" "self" "install-form" "true" "neq?" "if" "when" "others" "creator" "form" "bind-keywords" "initargs")}
        {Lisp-Entry "write-properties" () 490 18 ("self" "write-initarg-to" "do" "in-properties" "value" "property" "for" "loop" "properties")}
        {Lisp-Entry "install-in-parent" () 497 29 ("parent-add-child" "get-editor" "install-surrogate" "get-surrogate" "surrogate" "set-designers" "get-designers" "designers" "let" "parent" "when")}
        {Lisp-Entry "parent-add-child" () 508 18 ("self" "add-child" "parent" "when")}
        {Lisp-Entry "conclude" () 513 29 ("initargs")}
        {Lisp-Entry "close" () 522 11 ("destroy-component" "destroyed?" "unless")}
        {Lisp-Entry "destroy-component" () 527 19 ("self" "call-destroy" "destroy-component" "Component" "is?" "when" "children" "in" "child" "for" "loop" "set-active-branch")}
        {Lisp-Entry "destroy" () 535 11 ("nextmethod" "name" "remove-from-index" "creator" "self" "remove-child" "parent" "when")}
        {Lisp-Entry "close-children" () 543 18 ("close" "do" "children" "in" "child" "for" "loop")}
        {Lisp-Entry "confirm-close" () 548 26 ("true" "rest")}
        {Lisp-Entry "initially-visible?" () 557 26 ("true")}
        {Lisp-Entry "get-visible?" () 561 26 ("get-visible-flag")}
        {Lisp-Entry "set-visible?" () 565 26 ("hide" "show" "get-visible-flag" "/=" "when" "set-visible-flag" "get-finished?" "not" "if" "flag")}
        {Lisp-Entry "show" () 574 26 ("true" "set-visible-flag")}
        {Lisp-Entry "hide" () 578 26 ("false" "set-visible-flag")}
        {Lisp-Entry "get-visible-flag" () 582 18 ("Visible-Flag" "flags" "mask-bit-set?")}
        {Lisp-Entry "set-visible-flag" () 586 18 ("Visible-Flag" "mask-bit-set" "flags" "set!" "flag")}
        {Lisp-Entry "get-properties" () 596 23 ("self" "all-fields" "property-getter" "property?" "and" "property" "dynamic" "function" "collect-if")}
        {Lisp-Entry "component-property" () 603 11 ("error" "initer-property?" "property?" "or" "if" "category-field" "field" "let" "name" "category")}
        {Lisp-Entry "initer-property?" () 610 19 ("creator-branch" "creator" "form" "parent" "memq?" "name")}
        {Lisp-Entry "write-property-to" () 614 11 ("property-setter" "setter" "let" "property?" "when" "value" "property" "object")}
        {Lisp-Entry "write-initarg-to" () 620 11 ("keyword->symbol" "class-of" "component-property" "write-property-to" "value" "property" "object")}
        {Lisp-Entry "get-filtered-properties" () 624 18 ("map" "else" "error" "category-field" "either" "symbol?" "string?" "cond" "object" "dynamic" "function" "standardize" "letrec" "self" "class-of" "class" "get-all-properties" "true" "eq?" "get-categorized-properties" "properties" "let" "=" "if" "categorized" "filter" "filter:")}
        {Lisp-Entry "get-all-properties" () 643 11 ("self" "class-of" "all-fields" "display-filtered-property?" "property" "collect-if" "field-name" "=" "and" "" "or" "yr" "get-row-class" "get-filter-rank" "xr" "let" "categorized" "all" "memq?" "if" "y" "x" "dynamic" "function" "sort" "filter")}
        {Lisp-Entry "display-filtered-property?" () 657 11 ("display-property?" "get-filter-name" "=" "get-row-class" "class" "let" "categorized" "all" "memq?" "or" "property-getter" "property?" "and" "filter" "property")}
        {Lisp-Entry "name?" () 671 18 ("pair?" "null?" "integer?" "symbol?" "or" "object")}
        {Lisp-Entry "add-child" () 678 26 ("find-component" "send-child-before" "list" "append!" "children" "set!" "not" "if" "get-before" "Component" "is?" "essay" "before" "let" "child")}
        {Lisp-Entry "add-child-at" () 685 18 ("insert!" "children" "set!" "rank" "child")}
        {Lisp-Entry "append-child" () 689 18 ("list" "append!" "children" "set!" "child")}
        {Lisp-Entry "remove-child" () 693 26 ("remove!" "children" "set!" "child")}
        {Lisp-Entry "replace-child" () 697 26 ("remove!" "insert!" "set!" "self" "set-parent" "children" "element" "child" "let" "replacement" "rank")}
        {Lisp-Entry "send-child-to-front" () 704 26 ("move-to-head!" "children" "set!" "child")}
        {Lisp-Entry "send-child-to-back" () 708 26 ("move-to-tail!" "children" "set!" "child")}
        {Lisp-Entry "send-child-before" () 712 18 ("insert!" "set!" "error" "position" "return:" "find" "either" "essay" "rank" "children" "remove!" "removed" "let*" "target" "child")}
        {Lisp-Entry "child" () 718 18 ("error" "find-component" "either" "name")}
        {Lisp-Entry "find-component" () 723 18 ("equal?" "find-component-with" "name")}
        {Lisp-Entry "find-component-with" () 727 18 ("find-child-with" "component-alias" "either" "else" "cdr" "next" "when" "car" "sub" "let" "pair?" "1" "-" "parent" "find-component" "0" "=" "integer?" "error" "null?" "cond" "self" "get-player" "if" "test" "name")}
        {Lisp-Entry "brother" () 749 18 ("parent" "child" "name")}
        {Lisp-Entry "child-ranked" () 753 18 ("children" "element" "rank")}
        {Lisp-Entry "component-alias" () 757 26 ("get-process" "process-alias" "else" "creator" ":creator" "parent" ":parent" "self" ":self" "case" "name")}
        {Lisp-Entry "find-child" () 765 18 ("children" "find-if" "get-name" "equal?" "child" "dynamic" "function" "proc" "with" "name")}
        {Lisp-Entry "find-child-with" () 772 18 ("children" "find-if" "get-name" "child" "dynamic" "function" "proc" "with" "test" "name")}
        {Lisp-Entry "find-type" () 779 18 ("children" "find-if" "is?" "child" "dynamic" "function" "proc" "with" "type")}
        {Lisp-Entry "find-key" () 786 18 ("children" "=" "child" "dynamic" "function" "find-if" "value" "key")}
        {Lisp-Entry "find-ascendant" () 792 18 ("set!" "is-not?" "and" "while" "get-parent" "parent" "let" "type")}
        {Lisp-Entry "collect-ascendants" () 799 18 ("is?" "if" "cons" "set!" "is-not?" "not" "or" "and" "while" "get-parent" "parent" "ascendants" "let" "type")}
        {Lisp-Entry "child-rank" () 810 18 ("position" "return:" "children" "find" "child")}
        {Lisp-Entry "get-frame" () 814 26 ()}
        {Lisp-Entry "get-brothers" () 818 18 ("get-children" "self" "remove" "parent" "when")}
        {Lisp-Entry "has-parent?" () 823 18 ("has-parent?" "eq?" "or" "parent" "and" "component")}
        {Lisp-Entry "get-root-parent" () 827 18 ("get-root-parent" "self" "parent" "not" "if")}
        {Lisp-Entry "get-visible-children" () 833 18 ("children" "get-visible?" "child" "dynamic" "function" "collect-if")}
        {Lisp-Entry "get-ancestry" () 839 18 ("error" "null?" "when" "get-parent" "cons" "set!" "neq?" "while" "self" "scan" "ancestry" "let" "root")}
        {Lisp-Entry "get-self-form" () 855 23 ("definition-value" "eq?" "when" "field-creator" "creator" "class-form" "category-field" "definition" "self" "class-of" "metaclass" "let*")}
        {Lisp-Entry "add-form" () 863 26 ("append-child" "child-form" "parent-form")}
        {Lisp-Entry "add-to-index" () 872 26 ("true" "hash-set!" "hash-ref" "if" "new-index" "set!" "index" "not" "when" "component" "name")}
        {Lisp-Entry "remove-from-index" () 881 26 ("hash-clear" "index" "and" "when" "component" "name")}
        {Lisp-Entry "new-index" () 886 29 ("eq?" "new-hashtable")}
        {Lisp-Entry "locate" () 890 26 ("else" "true" "eq?" "error" "not" "cond" "locate-component" "component" "let" "name")}
        {Lisp-Entry "locate-component" () 897 18 ("hash-ref" "index" "essay" "else" "null?" "if" "cdr" "next" "when" "car" "locate-component" "sub" "let" "pair?" "cond" "name")}
        {Lisp-Entry "get-database-component" () 914 18 ("get-root-parent")}
        {Lisp-Entry "get-event-consumer" () 923 11 ("event-consumer")}
        {Lisp-Entry "set-event-consumer" () 927 11 ("event-consumer" "set!" "consumer")}
        {Lisp-Entry "deliver-event" () 931 11 ("event" "proc" "target" "handler")}
        {Lisp-Entry "first-child" () 940 18 ("car" "children" "null?" "if")}
        {Lisp-Entry "last-child" () 946 18 ("children" "last")}
        {Lisp-Entry "bring-to-front" () 950 26 ("self" "send-child-to-front" "parent" "when")}
        {Lisp-Entry "send-to-back" () 955 26 ("self" "send-child-to-back" "parent" "when")}
        {Lisp-Entry "send-before" () 960 26 ("self" "send-child-before" "parent" "when" "target")}
        {Lisp-Entry "get-branches" () 970 18 ("children" "collect-if" "Branch" "is?" "child" "dynamic" "function" "proc" "with")}
        {Lisp-Entry "branch-installed?" () 977 18 ("branch")}
        {Lisp-Entry "get-active-branch" () 981 18 ("get-active-branch" "Branch" "self" "is?" "essay" "branch" "not" "if")}
        {Lisp-Entry "get-active-branch-name" () 987 18 ("get-name" "when" "get-active-branch" "branch" "let")}
        {Lisp-Entry "get-active-branch-presentation" () 993 18 ("get-presentation" "not" "if" "get-active-branch" "branch" "let")}
        {Lisp-Entry "set-active-branch" () 1000 18 ("install-branch" "locate" "Branch" "is?" "let" "restore-client" "branch" "when" "self" "eq?" "not" "or" "if" "active-branch")}
        {Lisp-Entry "install-branch" () 1008 29 ("configure-client" "restore-client" "branch" "neq?" "when" "br")}
        {Lisp-Entry "for-each-branch" () 1016 18 ("get-branches" "for-each-branch" "branch" "dynamic" "function" "for-each" "proc")}
        {Lisp-Entry "with-each-branch" () 1023 18 ("set-active-branch" "branch" "dynamic" "function" "for-each-branch" "get-branch" "active-branch" "let" "proc")}
        {Lisp-Entry "get-installed-branches" () 1032 18 ("get-installed-branches" "cons" "branch" "not" "if")}
        {Lisp-Entry "iterate-branch-spine" () 1038 18 ("creator-effective-form" "self" "get-parent" "set!" "get-client-form" "Branch" "is?" "while" "get-active-branch" "either" "let" "branch" "branch:" "proc")}
        {Lisp-Entry "creator-effective-form" () 1050 18 ("class-of" "form" "creator" "self" "eq?" "if" "get-class-form")}
        {Lisp-Entry "save-session" () 1063 26 ()}
        {Lisp-Entry "get-integrity-manager" () 1079 26 ()}
        {Lisp-Entry "validate-component" () 1083 26 ("get-categorized-properties" "validate-property" "self" "property-field" "property" "let" "symbol" "dynamic" "function" "for-each" "manager" "context" "client" "root")}
        {Lisp-Entry "validate-property" () 1090 26 ("validate" "self" "read-property" "value" "property-domain" "domain" "let" "manager" "context" "client" "root" "property")}
        {Lisp-Entry "search-component" () 1101 26 ("search-type" "search-name" "not" "or" "and" "type:" "type" "name:" "getf" "name" "let" "target")}
        {Lisp-Entry "search-name" () 1108 21 ("true" ":ignore-case?" "search" "get-presentation" "localize" "presentation" "let" "name")}
        {Lisp-Entry "search-type" () 1113 21 ("self" "is?" "type")}
        {Lisp-Entry "search-text" () 1117 21 ("false" "else" "search-plain-text" "Text" "search-formatted-text" "Formatted-Text" "typecase" "search-text" "unimplemented" "target" "text")}
        {Lisp-Entry "search-plain-text" () 1129 11 ("get-paragraphs" "true" ":ignore-case?" "search" "line" "dynamic" "function" "some?" "target" "text")}
        {Lisp-Entry "search-formatted-text" () 1135 11 ("get-paragraphs" "true" ":ignore-case?" "search" "car" "string" "let" "run" "runs" "format" "bind" "info" "dynamic" "function" "some?" "target" "text")}
        {Lisp-Entry "launch" () 1150 26 ()}
        {Lisp-Entry "component-path" () 1159 26 ("Path" "new" "null?" "when" "get-parent-component" "cons" "set!" "error" "not" "if" "get-name" "name" "neq?" "while" "self" "scan" "path" "let" "creator" "root")}
        {Lisp-Entry "present-path" () 1173 26 ("Path" "new" "values" "null?" "get-parent-component" "cons" "set!" "present-in-path?" "when" "error" "not" "if" "get-name" "name" "neq?" "while" "self" "scan" "pres" "path" "let" "root")}
        {Lisp-Entry "present-in-path?" () 1190 26 ("true")}
        {Lisp-Entry "unfold-branches" () 1199 18 ("cons" "eq?" "set-active-branch" "false" "set-restoreable?" "child" "when" "" "apply" "client" "let" "self" "=" "if" "branch-name" "instantiate" "get-branches" "branch" "dynamic" "function" "map" "all-branch-names" "get-name" "essay" "active-branch-name" "get-branch" "active-branch" "get-creator" "get-form" "form" "let*" "include-root?" "include-root?:" "properties" "properties:" "true" "branches" "branches:")}
        {Lisp-Entry "get-domain" () 1226 31 ("Value-Domain" "else" "Boolean-Domain" "visible?" "Presentation-Domain" "presentation-info" "Name-Domain" "new" "name-info" "field-name" "case" "property")}
        {Lisp-Entry "property-domain" () 1234 26 ("set-property-domain" "domain" "field-creator" "class" "get-property-domain" "either" "get-domain" "essay" "descriptor-domain" "field-name" "self" "class-of" "get-property-descriptor" "descriptor" "let*" "property-domain" "unimplemented" "property")}
        {Lisp-Entry "search-descendants" () 1252 26 ("search-descendants" "unimplemented" "get-children" "not" "if" "criteria")}
        {Lisp-Entry "presentation-property?" () 1263 26 ("false" "property")}
        {Lisp-Entry "get-presentation" () 1267 26 ("name" "name->presentation" "get-presentation" "unimplemented")}
        {Lisp-Entry "set-presentation" () 1273 26 ("presentation->name" "self" "set-name" "set-presentation" "unimplemented" "presentation" "designer")}
        {Lisp-Entry "get-string-presentation" () 1279 21 ("get-name" "either")}
        {Lisp-Entry "set-string-presentation" () 1283 21 ("self" "set-name" "empty-string?" "if" "presentation" "designer")}
        {Lisp-Entry "present-property" () 1289 26 ("present" "property-domain" "domain" "let" "value" "property")}
        {Lisp-Entry "get-parent-component" () 1294 26 ("get-parent")}
        {Lisp-Entry "get-components" () 1298 26 ("get-children")}
        {Lisp-Entry "get-component-image" () 1302 26 ("self" "class-of" "get-class-image")}
        {Lisp-Entry "can-cut-component?" () 1308 26 ("can-delete-component?")}
        {Lisp-Entry "can-copy-component?" () 1312 26 ("true")}
        {Lisp-Entry "can-paste-component?" () 1316 26 ("true")}
        {Lisp-Entry "can-rename-component?" () 1320 26 ("get-name-prohibited?" "not" "can-rename-component?" "unimplemented")}
        {Lisp-Entry "can-delete-component?" () 1326 26 ("true")}
        {Lisp-Entry "can-move-component?" () 1330 26 ("true")}
        {Lisp-Entry "can-view-properties?" () 1334 26 ("true")}
        {Lisp-Entry "determine-can-paste" () 1338 18 ("determine-paster" "boolean" "true" "try-parent?")}
        {Lisp-Entry "determine-paster" () 1342 18 ("false" "parent" "else" "self" "addable-class?" "every?" "memq?" "cond" "get-master-model" "parcel" "dynamic" "function" "map" "remove-duplicates" "models" "get-jazz-clipboard" "read-string-element" "parcels" "let*" ":jazz-parcels" "clipboard-format-available?" "can-paste-component?" "and" "when" "determine-paster" "unimplemented" "true" "try-parent?")}
        {Lisp-Entry "can-send-before?" () 1357 26 ("sort-components?" "not" "addable-class?" "every?" "and" "before" "father" "types")}
        {Lisp-Entry "sort-components?" () 1362 26 ("false")}
        {Lisp-Entry "sort-components" () 1366 26 ("get-presentation" "component" "dynamic" "function" "key:" "smaller" "sort-predicate" "sort" "sort-components" "unimplemented" "components")}
        {Lisp-Entry "indexable?" () 1372 26 ("true")}
        {Lisp-Entry "get-surrogate" () 1376 18 ("surrogate")}
        {Lisp-Entry "component-surrogate" () 1380 26 ("Component-Surrogate" "component-surrogate" "unimplemented")}
        {Lisp-Entry "install-surrogate" () 1386 26 ("install-children-surrogates" "install-handlers" ":editor" "self" "client:" "component-surrogate" "new" "surrogate" "set!" "editor")}
        {Lisp-Entry "install-children-surrogates" () 1392 26 ("get-components" "install-surrogate" "component" "dynamic" "function" "for-each" "editor")}
        {Lisp-Entry "remove-surrogate" () 1398 18 ("remove-component-surrogate")}
        {Lisp-Entry "remove-component-surrogate" () 1402 18 ("set!" "remove-handlers" "surrogate" "when" "get-components" "remove-component-surrogate" "component" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-default-property" () 1411 26 ()}
        {Lisp-Entry "get-categorized-properties" () 1415 26 ("true")}
        {Lisp-Entry "display-property?" () 1419 26 ("children" "field-name" "neq?" "property")}
        {Lisp-Entry "get-row-class" () 1423 26 ("Value-Row" "else" "presentation-info" "name-info" "Info-Row" "class-info" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 1431 26 ("else" "Boolean-Row" "new" "visible?" "field-name" "case" "property")}
        {Lisp-Entry "update-property-row" () 1437 26 ("row")}
        {Lisp-Entry "get-addable-default" () 1441 26 ()}
        {Lisp-Entry "get-addable-classes" () 1445 26 ()}
        {Lisp-Entry "addable-class?" () 1449 26 ("get-addable-classes" "subtype?" "and" "addable-class" "dynamic" "function" "some?" "class")}
        {Lisp-Entry "get-component-classes" () 1455 26 ()}
        {Lisp-Entry "get-addable-branches" () 1459 26 ("true")}
        {Lisp-Entry "get-addable-default-branch" () 1463 26 ("Branch")}
        {Lisp-Entry "get-addable-base" () 1467 26 ("Component" "car" "length" "1" "=" "if" "when" "get-addable-classes" "classes" "let")}
        {Lisp-Entry "get-addable-details" () 1475 26 ("name-info" "when" "get-addable-base" "base" "let")}
        {Lisp-Entry "get-recursive-details?" () 1481 26 ("false")}
        {Lisp-Entry "get-class-searchable-classes" () 1485 26 ()}
        {Lisp-Entry "get-custom-details" () 1489 26 ()}
        {Lisp-Entry "get-custom-card" () 1493 26 ()}
        {Lisp-Entry "save-component-properties" () 1497 26 ("designer")}
        {Lisp-Entry "get-designers" () 1506 18 ("designers")}
        {Lisp-Entry "set-designers" () 1510 18 ("children" "set-designers" "child" "dynamic" "function" "for-each" "designers" "set!" "lst")}
        {Lisp-Entry "install-designer" () 1517 18 ("get-components" "install-designer" "child" "dynamic" "function" "for-each" "cons" "designers" "set!" "designer")}
        {Lisp-Entry "uninstall-designer" () 1524 18 ("get-components" "uninstall-designer" "child" "dynamic" "function" "for-each" "remove!" "designers" "set!" "designer")}
        {Lisp-Entry "generate-html" () 1536 26 ("print-html" "new-html-formatter" "formatter" "let" "printer")}
        {Lisp-Entry "new-html-formatter" () 1541 29 ("Formatter" "new" "new-html-formatter" "unimplemented")}
        {Lisp-Entry "print-html" () 1547 26 ("printer" "formatter")}
        {Lisp-Entry "print-component" () 1551 18 ("print-html" "self" "Component-HTML-Printer" "new" "let" "print-component" "unimplemented" "printer" "formatter")}
        {Lisp-Entry "export-text" () 1559 18 ("get-output" "set-clipboard" "generate-text" "String-Printer" "new" "printer" "let" "export-text" "unimplemented")}
        {Lisp-Entry "generate-text" () 1567 26 ("print-text" "new-text-formatter" "formatter" "let" "printer")}
        {Lisp-Entry "new-text-formatter" () 1572 29 ("Formatter" "new" "new-text-formatter" "unimplemented")}
        {Lisp-Entry "print-text" () 1578 26 ("printer" "formatter")}
        {Lisp-Entry "output-component" () 1582 26 ("text")}
        {Lisp-Entry "output-properties" () 1586 26 ("get-properties" "format" "insert-bulleted-line" "read-property" "->string" "value" "self" "class-of" "property-presentation" "localize" "title" "let" "property" "dynamic" "function" "for-each" "output-properties" "unimplemented" "text")}
        {Lisp-Entry "for-each-parent" () 1601 18 ("for-each-parent" "parent" "when" "proc")}
        {Lisp-Entry "for-each-ascendant" () 1607 18 ("for-each-parent" "self" "proc")}
        {Lisp-Entry "for-each-descendant" () 1612 18 ("0" "self" "1" "+" "do" "get-children" "in" "child" "for" "loop" "when" "level" "include?" "component" "dynamic" "function" "iterate" "letrec" "true" "include-self?" "include-self?:" "proc")}
        {Lisp-Entry "for-each-sibling" () 1622 18 ("self" "/=" "when" "parent" "get-children" "in" "child" "for" "loop" "proc")}
        {Lisp-Entry "collect-family" () 1628 18 ("get-output" "for-each-descendant" "put" "rest" "child" "dynamic" "function" "proc" "with" "List-Factory" "new" "factory" "let")}}}})
"Component-Catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "catalog" "Component-Catalog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.doc.catalog.Component-Catalog" () 37 9 ("jazz")
      {Lisp-Entry "Component-Catalog" () 45 7 ("Catalog")
        {Lisp-Entry "client" () 48 8 ()}
        {Lisp-Entry "definitions-index" () 49 8 ()}
        {Lisp-Entry "references-index" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("update-catalog-indexes" "references-index~self" "eq?" "new-hashtable" "definitions-index~self" "client~self" "set!" "nextmethod" "client" "name")}
        {Lisp-Entry "get-client" () 66 18 ("client")}
        {Lisp-Entry "get-definitions-index" () 70 18 ("definitions-index")}
        {Lisp-Entry "get-references-index" () 74 18 ("references-index")}
        {Lisp-Entry "get-statistics" () 78 18 ("format-plural" "format" "references-index" "r" "definitions-index" "hashtable-length" "d" "let")}
        {Lisp-Entry "hashtable-info" () 86 11 ("hashtable-length" "format" "hashtable")}
        {Lisp-Entry "update-catalog-indexes" () 96 11 ("definitions-index" "hash-add" "when" "get-name" "name" "let" "level" "child" "dynamic" "function" "for-each-descendant" "self" "client" "set-catalog")}
        {Lisp-Entry "get-definitions" () 110 11 ("definitions-index" "hash-ref" "name")}
        {Lisp-Entry "get-references" () 114 11 ("references-index" "hash-ref" "name")}}}})
"Component-Html-Printer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "component" "Component-Html-Printer.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.component.Component-Html-Printer" () 37 9 ("jazz")
      {Lisp-Entry "Component-HTML-Printer" () 44 7 ("HTML-Printer")
        {Lisp-Entry "print-html" () 52 11 ("false" "header?:" "print-component" "dynamic" "function" "client" "get-presentation" "with-document")}
        {Lisp-Entry "print-component" () 59 11 ("print-properties")}
        {Lisp-Entry "print-children" () 63 11 ("client" "get-children" "get-title" "printer" "format" "issue" "group" "dynamic" "function" "for-each")}
        {Lisp-Entry "print-properties" () 76 11 ("get-all-properties" "->string" "presented" "client" "read-property" "value" "let*" "property" "dynamic" "function" "for-each" "printer" "format")}
        {Lisp-Entry "get-all-properties" () 86 11 ("field-name" "key:" "client" "class-of" "all-fields" "display-property?" "collect-if" "" "sort")}
        {Lisp-Entry "display-property?" () 90 11 ("client" "display-property?" "property-getter" "property?" "and" "property")}}}})
"Component-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "menu" "Component-Menu.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.menu.Component-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Component-Menu" () 47 7 ("properties" "before-properties" "rename" "rename-component" "delete" "components-tree" "delete-selection" "end-edit-group" "paste-properties" "paste" "copy" "view" "Action" "action:" "cut" "end-add-group" "add-menu" "Bitmap-Resource" "icon:" "title:" "add-item" "name:" "Context-Menu")
        {Lisp-Entry "client" () 50 12 ("set-client" "get-client")}
        {Lisp-Entry "finish" () 69 11 ("self" "client" "update-menu" "nextmethod" "rest")}
        {Lisp-Entry "component-alias" () 74 11 ("nextmethod" "else" "client" ":client" "case" "name")}
        {Lisp-Entry "get-client" () 85 18 ("client")}
        {Lisp-Entry "set-client" () 89 18 ("client" "set!" "clt")}}}})
"Component-Parcel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "clipboard" "Component-Parcel.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.clipboard.Component-Parcel" () 37 9 ("jazz")
      {Lisp-Entry "Component-Parcel" () 45 7 ("Entity-Parcel")
        {Lisp-Entry "get-master" () 53 18 ("content" "car")}
        {Lisp-Entry "get-master-model" () 57 18 ("autoload" "in-manifest?" "when" "get-model-name" "model-name" "get-master" "master" "let*" "get-master-model" "unimplemented")}
        {Lisp-Entry "get-master-name" () 68 18 ("get-name" "get-master" "master" "let")}}}})
"Component-Surrogate"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "surrogate" "Component-Surrogate.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.surrogate.Component-Surrogate" () 37 9 ("jazz")
      {Lisp-Entry "Component-Surrogate" () 44 7 ("Component")
        {Lisp-Entry "client" () 47 18 ()}
        {Lisp-Entry "editor" () 48 18 ()}
        {Lisp-Entry "initialize" () 56 11 ("set-client" "editor~self" "set!" "nextmethod" "editor" "editor:" "client" "client:")}
        {Lisp-Entry "install-handlers" () 67 26 ()}
        {Lisp-Entry "remove-handlers" () 71 26 ()}
        {Lisp-Entry "get-client" () 80 18 ("client")}
        {Lisp-Entry "set-client" () 84 18 ("client" "set!" "clt")}
        {Lisp-Entry "outer-client" () 88 26 ("client")}
        {Lisp-Entry "get-editor" () 97 18 ("editor")}
        {Lisp-Entry "redraw-border" () 106 26 ()}
        {Lisp-Entry "select" () 115 26 ("focus?" "rank")}
        {Lisp-Entry "unselect" () 119 26 ()}
        {Lisp-Entry "get-selected?" () 123 18 ("get-selection" "client" "memq?")}
        {Lisp-Entry "selection-rank" () 127 18 ("position" "return:" "get-selection" "client" "find")}
        {Lisp-Entry "get-selection" () 131 18 ("editor" "get-selection")}
        {Lisp-Entry "set-selection" () 135 18 ("editor" "set-selection" "selection")}
        {Lisp-Entry "acquire-selection" () 139 18 ("client" "list" "set-selection")}
        {Lisp-Entry "get-component-selection" () 143 26 ("get-selection")}
        {Lisp-Entry "close-selection" () 147 26 ("get-client" "get-editor" "get-designer" "remove-child" "surrogate" "get-surrogate" "outer-client" "outer" "for-each" "1" "length" "=" "if" "set-selection" "get-parent" "client" "dynamic" "function" "map" "remove-duplicates" "parents" "get-component-selection" "selection" "let*")}}}})
"Component-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Component-Tester.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.suite.Component-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Component-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ()}}}})
"Component-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Component-Viewer.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Component-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "Component-Viewer" () 46 7 ("Object")}
      {Lisp-Entry "Component-Viewer" () 52 7 ("HTML-Viewer")
        {Lisp-Entry "editor" () 55 8 ()}
        {Lisp-Entry "client" () 56 8 ()}
        {Lisp-Entry "destroy" () 64 11 ("nextmethod" "set-editor")}
        {Lisp-Entry "get-editor" () 74 26 ("editor")}
        {Lisp-Entry "set-editor" () 78 26 ("on-editor" "method-name:" "target:" "Event-Handler" "new" "add-editor-listener" "set!" "self" "remove-editor-listener" "editor" "/=" "when" "edt")}
        {Lisp-Entry "on-editor" () 87 29 ("get-selection" "car" "set-client" ":selection-changed" "get-kind" "case" "evt")}
        {Lisp-Entry "get-client" () 97 26 ("client")}
        {Lisp-Entry "set-client" () 101 26 ("client-update" "set!" "client" "/=" "or" "when" "false" "force?" "force?:" "clt")}
        {Lisp-Entry "client-update" () 107 26 ("get-action-list" "get-browser" "set-action-list" "set-text" "empty-string?" "get-output" "text" "generate-html" "html-printer" "String-Printer" "new" "printer" "let*" "navigate" "client" "null?" "if" "when" "get-site" "site" "let")}}}})
"Components-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Components-Tree.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Components-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Components-Tree" () 51 7 ("Components-Viewer")
        {Lisp-Entry "last-class" () 54 8 ()}
        {Lisp-Entry "focus-actions" () 62 11 ("nextmethod" "components-tree" "find-actions" "cons")}
        {Lisp-Entry "get-last-class" () 72 18 ("last-class")}
        {Lisp-Entry "on-delete-selection" () 81 11 ("delete-selection" "evt")}
        {Lisp-Entry "on-rename-component" () 85 11 ("rename-selection" "evt")}
        {Lisp-Entry "on-preview-html" () 89 11 ("set-text" "get-guest" "view" "Dimension" "host-size:" "Point" "host-position:" "host-title:" "HTML-Viewer" "new-frame" "frame" "get-output" "text" "let*" "generate-html" "String-Printer" "new" "printer" "with-closed" "get-presentation" "format" "title" "dynamic" "function" ":wait" "with-cursor" "bell" "not" "if" "selected-component" "component" "let" "evt")}
        {Lisp-Entry "on-export-html" () 105 11 ("user-message" "get-output" "set-clipboard" "generate-html" "String-Printer" "new" "printer" "dynamic" "function" ":wait" "with-cursor" "bell" "not" "if" "selected-component" "component" "let" "evt")}
        {Lisp-Entry "on-export-text" () 117 11 ("user-message" "export-text" "dynamic" "function" ":wait" "with-cursor" "bell" "not" "if" "selected-component" "component" "let" "evt")}
        {Lisp-Entry "on-properties" () 127 11 ("show-properties" "evt")}
        {Lisp-Entry "focus-gain" () 136 11 ("selected-components" "get-editor" "get-application" "set-selected" "nextmethod")}
        {Lisp-Entry "focus-update-actions" () 141 11 ("can-rename?" "rename" "components-tree" "Action" "set-action-enabled?")}
        {Lisp-Entry "on-editor" () 150 11 ("nextmethod" "else" "get-user-origin?" "get-force-parent?" "get-origin" "get-old" "get-selection" "selection-changed" ":selection-changed" "branch-changed" ":branch-changed" "end-edition" ":saving" "get-kind" "case" "evt")}
        {Lisp-Entry "branch-changed" () 158 29 ()}
        {Lisp-Entry "selection-changed" () 162 29 ("focus?" "force-parent?" "origin" "old" "selection")}
        {Lisp-Entry "client-update" () 171 11 ("update")}
        {Lisp-Entry "set-designer" () 180 18 ("highlight-edited" "install-listener" "set!" "uninstall-listener" "get-reference" "unhighlight-edited" "designer" "/=" "when" "dsg")}
        {Lisp-Entry "highlight-edited" () 196 29 ("component")}
        {Lisp-Entry "unhighlight-edited" () 200 29 ("component")}
        {Lisp-Entry "component-presentation" () 209 29 ("get-presentation" "component")}
        {Lisp-Entry "component-image" () 213 29 ("get-component-image" "component")}
        {Lisp-Entry "component-state" () 217 29 ("component")}
        {Lisp-Entry "parent-relocation" () 226 29 ("parent")}
        {Lisp-Entry "relocation-parent" () 230 29 ("class" "destination")}
        {Lisp-Entry "can-undo?" () 239 11 ("false")}
        {Lisp-Entry "can-redo?" () 243 11 ("false")}
        {Lisp-Entry "can-cut?" () 247 11 ("redundant-descendant?" "not" "can-cut-component?" "Component" "is?" "client" "neq?" "component" "dynamic" "function" "every?" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-copy?" () 258 11 ("redundant-descendant?" "not" "can-copy-component?" "Component" "is?" "component" "dynamic" "function" "every?" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-paste?" () 268 11 ("determine-unique-paster" "Component" "is?" "component" "dynamic" "function" "every?" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-paste-properties?" () 276 11 ("class-of" "subtype?" "component" "dynamic" "function" "every?" "get-master-model" "parcel-model" "car" "parcel" "let*" "1" "length" "=" "get-jazz-clipboard" "read-string-element" "parcels" ":jazz-parcels" "clipboard-format-available?" "when" "selected-components" "components" "let")}
        {Lisp-Entry "can-delete?" () 290 11 ("redundant-descendant?" "not" "can-delete-component?" "Component" "is?" "client" "neq?" "component" "dynamic" "function" "every?" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-rename?" () 301 11 ("can-rename-component?" "Component" "is?" "car" "component" "1" "length" "=" "and" "selected-components" "components" "let")}
        {Lisp-Entry "can-select-all?" () 309 11 ("true")}
        {Lisp-Entry "redundant-descendant?" () 314 11 ("has-parent?" "neq?" "and" "target" "dynamic" "function" "some?" "components" "component")}
        {Lisp-Entry "cut-selection" () 321 11 ("true" ":can-survive?" "designer" "cut-components" "get-selection" "with-deleted-selection" "dynamic" "function" "with-update-locked" "bell" "null?" "if" "selected-components" "components" "let")}
        {Lisp-Entry "copy-selection" () 333 11 (":duration" "get-application" "update-focus-actions" "designer" "copy-components" "dynamic" "function" ":wait" "with-cursor" "bell" "null?" "if" "selected-components" "components" "let")}
        {Lisp-Entry "Paste-Reporter" () 345 9 ("invite" "name:" "title:" "Progress-Reporter")
          {Lisp-Entry "dialog-title" () 353 18 ()}}
        {Lisp-Entry "paste-clipboard" () 358 11 ("true" "cancelable?:" "Paste-Reporter" "progress-reporter:" "self" "context:" "name:" "Jedi" "get-application" "typed?" "not" "threaded?:" "set-done" "user-message" "get-model" "get-master" "master" "parcel" "key:" "partition" "reporter:" "relocation-parent" "designer" "paste-parcels" "model" "bind" "info" "for-each" ":wait" "with-cursor" "with-update-locked" "length" "0" "Range" "new" "set-range" "reporter" "dynamic" "function" "with-progress" "get-jazz-parcels" "parcels" "client" "selected-component" "either" "parent" "let")}
        {Lisp-Entry "paste-properties" () 385 11 ("designer" "paste-properties" "selected-components" "components" "let")}
        {Lisp-Entry "delete-selection" () 390 11 ("true" ":can-survive?" "designer" "delete-components" "dynamic" "function" "with-deleted-selection" "confirm-close" "get-selected-data" "components" "not-null?" "when" "get-selection" "selection" "let")}
        {Lisp-Entry "confirm-close" () 401 11 ("confirm-action" "components")}
        {Lisp-Entry "confirm-action" () 405 11 ("throw-cancel" "cancel" "false" "no" "true" "yes" "case" "confirmation" "type:" "localize" "message-box" "code" "let" "text")}
        {Lisp-Entry "on-add-component" () 418 11 ("add-component-class" "car" "class" "addable-classes" "remove-nils" "classes" "1" "length" "=" "when" "selected-components" "components" "let" "evt")}
        {Lisp-Entry "addable-classes" () 427 11 ("cons" "set!" "memq?" "and" "when" "class-of" "model" "classes" "get-addable-classes" "essay" "parent-classes" "get-parent" "parent-relocation" "parent" "let*" "else" "Component" "is-not?" "addable-root-classes" "not" "cond" "selected-component" "component" "let")}
        {Lisp-Entry "add-component-class" () 444 11 ("select-component" "create-new-component" "child" "add-component-request" "values" "if" "creation-info" "get-parent" "set!" "get-addable-classes" "memq?" "not" "when" "extra-properties" "client" "relocation-parent" "either" "selected-component" "selected" "let*" "true" "select?" "select?:" "properties" "properties:" "presentation" "presentation:" "parent" "parent:" "class")}
        {Lisp-Entry "add-component-request" () 459 29 ("component-properties-request" "get-children" "component-presentation-request" "values" "parent" "class")}
        {Lisp-Entry "component-presentation-request" () 464 29 (":validator" ":unicity-domain" "not" ":accepts-empty?" "french:" "format" "english:" "Locales" "new" "title:" "request-string" "presentation" "get-class-presentation" "localize" "pres" "component-name-validator" "name-validator" "get-presentation" "component" "dynamic" "function" "map" "essay" "unicity-domain" "get-name-unicity?" "name-unicity?" "get-name-mandatory?" "name-mandatory?" "let*" "get-name-prohibited?" "if" "initial-value" "initial-value:" "brothers" "class")}
        {Lisp-Entry "component-properties-request" () 476 29 ("class")}
        {Lisp-Entry "component-name-validator" () 480 29 ()}
        {Lisp-Entry "create-new-component" () 484 11 ("install-new-component" "dynamic" "function" "with-update-locked" "last-class" "set!" "set-name" "when" "get-designer" "designer" "presentation->name" "essay" "name" "parent:" "new" "child" "let" "added-properties" "presentation" "receive" "extra-properties" "creation-info" "parent" "class")}
        {Lisp-Entry "install-new-component" () 498 29 ("install-new-properties" "set-presentation" "when" "add-child" "extra-properties" "added-properties" "presentation" "parent" "child" "designer")}
        {Lisp-Entry "install-new-properties" () 505 29 ("append" "add-properties" "extra-properties" "added-properties" "child" "designer")}
        {Lisp-Entry "add-properties" () 509 29 ("designer" "set-property" "value" "property" "dynamic" "function" "for-each-property" "properties" "component")}
        {Lisp-Entry "rename-selection" () 520 11 ("rename-component" "when" "selected-component" "component" "let")}
        {Lisp-Entry "rename-component" () 526 18 ("select-all" "acquire-focus" "self" "set-tree" "set-client" "get-string-content" "function" ":end-proc" "true" ":draw-preserved?" "3" "Point" ":location" ":editor" "edit-cell" "set-string-content" "ensure-row-displayed" "font" "font:" "top-padding:" "1" "left-padding:" "get-content" "Tree-Embedded-Presentation-Text-View" "text" "hscroll?:" "false" "vscroll?:" "parent:" "Scroller-View" "scroller" "Dark-Red" "name:" "Color" "border-color:" "solid" "border-type:" "Border-View" "border" "end-rename" "0" "Cell" "new" "cell" "row-rank" "rank" "get-presentation" "initial-value:" "get-brothers" "class-of" "component-presentation-request" "presentation" "let*" "ensure-expanded" "when" "component-row" "row" "let" "component")}
        {Lisp-Entry "end-rename" () 553 11 ("select-component" "acquire-focus" "reorder-component" "sort-components?" "and" "when" "get-parent" "parent" "let" "designer" "set-presentation" "get-cell-data" "set-title" "dynamic" "function" "with-update-locked" "presentation" "cell" "component")}
        {Lisp-Entry "move-components" () 570 11 ("select-components" "send-component-before" "send-before" "for-each" "essay" "target-data" "element" "length" "" "1" "+" "after" "before" "case" "position" "son-rank" "rank" "get-sons" "sons" "get-father" "father" "move-components" "bell" "not" "class-of" "relocation-parent" "component" "key:" "uniform" "parent" "let" "row" "eq?" "if" "dynamic" "function" "with-update-locked" "get-user-data" "destination" "get-part" "part" "get-row" "dst" "get-view" "get-selected-data" "components" "get-designer" "designer" "let*" "target" "source")}
        {Lisp-Entry "move-component-row" () 595 11 ("find-component-position" "not" "if" "dynamic" "function" "move-row" "sort-components?" "sort?" "client" "either" "destination" "get-user-data" "source" "let*" "get-sons" "length" "1" "=" "get-father" "eq?" "and" "unless" "position" "position:" "father" "row")}
        {Lisp-Entry "reorder-component" () 607 18 ("get-father" "move-component-row" "find-row" "row" "let" "component")}
        {Lisp-Entry "find-component-position" () 612 29 ("get-presentation" "find-ordered-position" "father" "row" "component")}
        {Lisp-Entry "find-component-insertion" () 616 29 ("find-row" "son-rank" "when" "target" "component" "parent-row")}
        {Lisp-Entry "send-component-before" () 621 29 ("before" "component")}
        {Lisp-Entry "get-row-reorder-target" () 630 11 (":part" ":row" "self" "view:" "Tree-Drop-Target" "new" "when" "else" "after" "=" "4" "3" "cond" "part" "can-send-before?" "cdr" "either" "/=" "addable-class?" "has-parent?" "every?" "neq?" "or" "not" "and" "move?" "visible-count" "" "before" "+" "2" "1" "memq?" "if" "essay" "before-rank" "get-sons" "last" "before-last" "eq?" "before?" "dst-parent" "row-rank" "dst-rank" "get-father" "dst-father" "dst" "get-parent" "parent-relocation" "component" "key:" "uniform" "src-parent" "class-of" "remove-duplicates" "src-types" "get-row" "get-user-data" "n" "dynamic" "function" "map" "src" "contiguous-range" "src-range" "get-source" "get-view" "get-selection" "src-selection" "let*" "quarter" "row" "drag-drop")}
        {Lisp-Entry "get-row-target" () 654 11 ("else" "get-row-reorder-target" "Descendants-Tree" ":row" "self" "view:" "Tree-Drop-Target" "new" "addable-class?" "when" "get-user-data" "component" "autoload" "class" "get-model" "model" "Model-Icon" "typecase" "get-view" "view" "get-source" "source" "let*" "row" "drag-drop")}
        {Lisp-Entry "receive-drop" () 674 11 ("receive-model" "Model-Icon" "typecase" "move-components" "self" "eq?" "if" "get-target" "target" "get-view" "view" "get-source" "source" "let*" "drag-drop" "pos" "sender")}
        {Lisp-Entry "receive-model" () 688 11 ("rename-component" ":centered?" "0" "Point" "position:" "get-designer" "add-view" "dynamic" "function" "with-update-locked" "false" "visible?:" "new" "child" "get-row" "get-user-data" "parent" "self" "get-model" "eval-symbol" "model" "let*" "target" "window")}
        {Lisp-Entry "show-properties" () 704 18 ("-" "value" "property" "locate" "set-width" "get-width" "width" "let" "expand/collapse" "set-parent" "auto-expanded-row" "set!" ":row-height" "father:" "Editor-Row" "class:" "add-row" "subrow" "get-height" "+" "height" "2" "borders-height" "header-height" "set-client" "designer" "set-designer" "get-editor" "set-editor" "categorized" "set-filter" "true" "get-header" "set-flat?" "get-tree" "tree" "parent:" "Properties-Card" "card" "1" "Rect" ":border-insets" "edge" "border-type:" "Border-View" "new" "border" "selected-component" "component" "get-row" "row" "get-single-selection" "selection" "let*")}
        {Lisp-Entry "show-properties" () 729 26 ("editor" "show-properties")}
        {Lisp-Entry "on-selection-change" () 738 11 ("false" "focus?:" "true" "force?:" "self" "origin:" "selected-components" "set-selection" "get-application" "get-selected-owner" "eq?" "editor" "and" "when" "evt")}
        {Lisp-Entry "select-component" () 743 18 ("set-single-selection" "when" "component-visible-row" "row" "let" "component")}
        {Lisp-Entry "select-components" () 750 18 ("set-selection" "component-visible-row" "map" "remove-nils" "rows" "let" "components")}
        {Lisp-Entry "find-row" () 756 29 ("component-row" "component")}}}})
"Components-Tree-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Components-Tree-Actions.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.editor.Components-Tree-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Components-Tree-Actions" () 47 7 ("on-properties" "properties" "F2" "on-rename-component" "rename" "Delete" "Shortcut" "shortcut:" "on-delete-selection" ":focus" "Event-Handler" "action-handler:" "delete" "name:" "Actions")}}})
"Components-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Components-Viewer.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Components-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "Components-Viewer" () 47 7 ("Tree-View")
        {Lisp-Entry "editor" () 50 8 ()}
        {Lisp-Entry "client" () 51 8 ()}
        {Lisp-Entry "designer" () 52 8 ()}
        {Lisp-Entry "focus-actions" () 60 11 ("nextmethod" "components-viewer" "find-actions" "cons")}
        {Lisp-Entry "destroy" () 70 11 ("nextmethod" "set-editor" "set-designer")}
        {Lisp-Entry "context-menu" () 76 11 ("track-popup-menu" "when" "get-context-menu" "menu" "let" "dynamic" "function" "with-context-click" "pos")}
        {Lisp-Entry "get-context-menu" () 84 11 ("self" "client:" "Component-Menu" "new")}
        {Lisp-Entry "update-menu" () 88 26 ("cleanup-separators" "properties" "rename-component" "delete-selection" "not" "true" "set!" "end-add-group" "set-before" "set-parent" ":control" "Shortcut" "set-accelerator" "get-title" "localize" "format" "set-title" "get-icon" "set-icon" "unique" "set-visible?" "when" "get-children" "Label-Item" "collect-type" "children" "self" "add-components" "1" "=" "use-add-menu?" "if" "add-item" "locate" "add-menu" "let" "false" "empty-add?" "can-view-properties?" "Component" "is?" "and" "can-properties?" "rename" "components-tree" "can-rename?" "delete" "can-delete?" "paste-properties" "can-paste-properties?" "paste" "can-paste?" "copy" "can-copy?" "cut" "view" "Action" "get-action-enabled?" "can-cut?" "length" "count" "car" "component" "selected-components" "components" "get-application" "appl" "let*" "menu")}
        {Lisp-Entry "use-add-menu?" () 132 26 ("true")}
        {Lisp-Entry "on-add-component" () 136 29 ("evt")}
        {Lisp-Entry "addable-classes" () 145 26 ()}
        {Lisp-Entry "addable-root-classes" () 149 26 ()}
        {Lisp-Entry "add-component-class" () 153 26 ("rest" "class")}
        {Lisp-Entry "get-editor" () 162 18 ("editor")}
        {Lisp-Entry "set-editor" () 166 18 ("editor-update" "on-editor" "method-name:" "target:" "Event-Handler" "new" "add-editor-listener" "set!" "self" "remove-editor-listener" "editor" "/=" "when" "edt")}
        {Lisp-Entry "editor-update" () 176 29 ()}
        {Lisp-Entry "on-editor" () 180 29 ("designer:" "set-designer" ":designer-change" "client:" "get-property" "set-client" ":client-change" "get-kind" "case" "evt")}
        {Lisp-Entry "get-client" () 191 18 ("client")}
        {Lisp-Entry "set-client" () 195 18 ("client-update" "set!" "client" "/=" "when" "clt")}
        {Lisp-Entry "client-update" () 201 29 ()}
        {Lisp-Entry "get-designer" () 210 18 ("designer")}
        {Lisp-Entry "set-designer" () 214 26 ("install-listener" "set!" "uninstall-listener" "designer" "/=" "when" "dsg")}
        {Lisp-Entry "install-listener" () 228 11 ("add-designer-listener" "on-designer" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "designer")}
        {Lisp-Entry "uninstall-listener" () 233 11 ("self" "remove-designer-listener" "designer")}
        {Lisp-Entry "on-designer" () 242 29 ("evt")}
        {Lisp-Entry "selected-component" () 251 18 ("get-row" "get-user-data" "when" "get-single-selection" "selection" "let")}
        {Lisp-Entry "selected-components" () 257 18 ("get-ordered-selection" "get-row" "get-user-data" "row" "dynamic" "function" "map")}
        {Lisp-Entry "component-row" () 263 18 ("get-user-data" "eq?" "when" "rank" "row" "dynamic" "function" "for-each-row" "return" "lambda" "call/ec" "component")}
        {Lisp-Entry "component-visible-row" () 273 11 ("user-data-index" "component")}
        {Lisp-Entry "preserving-update" () 282 18 ("selected-components" "selected-components:" "get-expand-state" "expand-state:" "update")}
        {Lisp-Entry "update" () 286 26 ("rest")}
        {Lisp-Entry "update-selection" () 290 26 ("generate-event?:" "true" "force?:" "component-visible-row" "collect" "set-selection" "when" "set-expand-state" "selected-components" "expand-state")}}}})
"Components-Viewer-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Components-Viewer-Actions.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.editor.Components-Viewer-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Components-Viewer-Actions" () 47 7 (":control" "Shortcut" "shortcut:" "on-add-component" ":focus" "Event-Handler" "action-handler:" "add" "name:" "Actions")}}})
"Composite-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Composite-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Composite-Row" () 37 9 ("jazz")
      {Lisp-Entry "Composite-Row" () 48 7 ("String-Row")
        {Lisp-Entry "editor-class" () 56 11 ("Composite-Text-View")}
        {Lisp-Entry "get-edited-value" () 65 11 ("current-entries" "parse-entries" "=" "empty-string?" "or" "if" "editor" "get-string-content" "string" "let")}
        {Lisp-Entry "accepts-spaces?" () 77 29 ("true")}
        {Lisp-Entry "parse-entries" () 81 29 ("parse-entry" "map" "entries")}
        {Lisp-Entry "parse-entry" () 85 29 ("entry")}
        {Lisp-Entry "parse-error" () 89 11 ("0" "Cell" "Parse-Error" "new" "signal" "get-end" "get-start" "essay" "syntax-message" "either" "let" "part" "part:" "end" "end:" "start" "start:" "message" "message:")}
        {Lisp-Entry "syntax-message" () 96 29 ()}
        {Lisp-Entry "present" () 105 11 ("present-value" "format" "null?" "if" "value")}
        {Lisp-Entry "present-value" () 112 29 ("present-entry" "map" "value")}
        {Lisp-Entry "present-entry" () 116 29 ("entry")}
        {Lisp-Entry "navigate-backward" () 125 11 ("select-part" "=" "when" "dynamic" "function" "for-each-part" "1" "get-rank" "-" "previous" "let" "bell" "null?" "if" "pos->part" "part" "editor" "get-start" "get-col" "pos" "current-entries" "entries" "let*")}
        {Lisp-Entry "navigate-forward" () 138 11 ("select-part" "=" "when" "dynamic" "function" "for-each-part" "1" "get-rank" "+" "next" "let" "bell" "null?" "if" "pos->part" "part" "editor" "get-end" "get-col" "pos" "current-entries" "entries" "let*")}
        {Lisp-Entry "current-entries" () 151 11 ("editor" "get-string-content" "determine-entries")}
        {Lisp-Entry "current-part" () 155 11 ("pos->part" "editor" "get-start" "get-col" "pos" "let" "entries")}
        {Lisp-Entry "current-position" () 160 11 ("pos->position" "editor" "get-start" "get-col" "pos" "let" "entries")}
        {Lisp-Entry "pos->part" () 165 11 ("get-end" "" "get-start" ">=" "and" "when" "part" "dynamic" "function" "for-each-part" "return" "lambda" "call/ec" "pos" "entries")}
        {Lisp-Entry "pos->position" () 175 11 ("else" "eqv?" "accepts-spaces?" "cond" "element" "c" "0" "" "true" "while" "decrease!" "1" "+" "and" "when" "find-entry-end" "end" "n" "let*" "get-position" "get-end" "get-start" "between?" "if" "part" "dynamic" "function" "for-each-part" "editor" "get-string-content" "string" "let" "return" "lambda" "call/ec" "pos" "entries")}
        {Lisp-Entry "find-entry-end" () 197 11 ("else" "increase!" "eqv?" "accepts-spaces?" "and" "cond" "element" "c" ">=" "if" "true" "while" "return" "lambda" "call/ec" "length" "len" "let" "n" "string")}
        {Lisp-Entry "for-each-part" () 210 11 ("entry" "dynamic" "function" "for-each" "proc" "entries")}
        {Lisp-Entry "view-completions" () 221 11 ("acquire-focus" "locate-prefix" "0" "set-selection" "border:" "alternate-position:" "popup" "alternate" "2" "get-height" "+" "pos" "text->view" "view" "get-row" "get-paragraph" "par" "get-start" "user-data:" "title:" "Bitmap-Resource" "image:" "Tree-Node" "list" "children:" "add-row" "name" "dynamic" "function" "for-each" "ci<" "sort" "sorted" "set-client" "set-parent" "fill" "set-layout-type" "end:" "start:" "editor" "get-selection" ":selected" "Completion-Tree" "tree" "get-content" "content" "vscroll?:" "true" "flat?:" "min" "max" "Dimension" "size:" "Scroller-View" "scroller" "blue:" "green:" "red:" "Color" "border-color:" "solid" "border-type:" "name:" "Border-View" "new" "border" "length" "*" "height" "let*" "part-domain" "domain" "end" "start" "text" "position" "receive" "bell" "null?" "if" "find-to-complete" "info" "let")}
        {Lisp-Entry "find-to-complete" () 253 11 ("get-text" "get-position" "get-end" "editor" "get-start" "get-col" "values" "when" "current-position" "position" "let" "null?" "if" "current-part" "part" "current-entries" "entries" "let*")}
        {Lisp-Entry "complete-part" () 263 11 ("insert-string" "0" "Cell" "Range" "new" "editor" "set-selection" "true" "all?:" "parent" "get-player" "close-popups" "get-row" "get-user-data" "string" "bell" "null?" "if" "get-single-selection" "rank" "let" "tree" "end" "start")}
        {Lisp-Entry "determine-entries" () 278 11 ("get-output" "split" "1" "+" "length" "increase!" "put" "determine-entry" "parts" "dynamic" "function" "for-each" "offset" "0" "rank" "List-Factory" "new" "entries" "let" "string")}
        {Lisp-Entry "determine-entry" () 291 11 ("get-output" "begin" "null?" "eqv?" "accepts-spaces?" "and" "if" "from" "n" "iterate" "c" "for" "loop" "set!" "increase!" "1" "+" "subseq" "Part" "put" "when" "dynamic" "function" "end-part" "end" "start" "0" "position" "List-Factory" "new" "parts" "let*" "offset" "rank" "string")}
        {Lisp-Entry "part-domain" () 322 29 ("position")}
        {Lisp-Entry "select-part" () 326 11 ("get-end" "get-start" "0" "Cell" "Range" "new" "editor" "set-selection" "part")}}
      {Lisp-Entry "Part" () 335 7 ("Object")
        {Lisp-Entry "rank" () 338 8 ()}
        {Lisp-Entry "position" () 339 8 ()}
        {Lisp-Entry "text" () 340 8 ()}
        {Lisp-Entry "start" () 341 8 ()}
        {Lisp-Entry "end" () 342 8 ()}
        {Lisp-Entry "initialize" () 345 11 ("end~self" "start~self" "text~self" "position~self" "rank~self" "set!" "nextmethod" "end" "start" "text" "position" "rank")}
        {Lisp-Entry "print" () 354 11 ("end" "start" "text" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-rank" () 360 18 ("rank")}
        {Lisp-Entry "get-position" () 364 18 ("position")}
        {Lisp-Entry "get-text" () 368 18 ("text")}
        {Lisp-Entry "get-start" () 372 18 ("start")}
        {Lisp-Entry "get-end" () 376 18 ("end")}}
      {Lisp-Entry "Composite-Text-View" () 385 7 ("Value-Text-View")
        {Lisp-Entry "tab-press" () 388 11 ("navigate-forward" "else" "navigate-backward" "shift-key?" "view-completions" "control-key?" "end-completion" "has-completion?" "cond" "modifiers" "key")}
        {Lisp-Entry "get-context-menu" () 395 11 ("Composite-Menu" "new")}
        {Lisp-Entry "on-navigate-backward" () 399 11 ("navigate-backward" "evt")}
        {Lisp-Entry "on-navigate-forward" () 403 11 ("navigate-forward" "evt")}
        {Lisp-Entry "on-view-completions" () 407 11 ("view-completions" "evt")}
        {Lisp-Entry "focus-actions" () 416 11 ("nextmethod" "composite-text" "find-actions" "cons")}
        {Lisp-Entry "complete-name?" () 426 11 ("1" ">=" "size")}
        {Lisp-Entry "favorite-completions" () 430 11 ()}
        {Lisp-Entry "symbol-completions" () 434 11 ("complete" "Symbol-Completer" "new" "completer" "part-domain" "domain" "let" "when" "current-position" "position" "current-entries" "entries" "let*" "favorites" "name")}}
      {Lisp-Entry "Composite-Menu" () 449 7 ("view-completions" "navigate-forward" "composite-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "navigate-backward" "name:" "Text-Context-Menu")}
      {Lisp-Entry "Completion-Tree" () 466 7 ("toplevel-controls?:" "width:" "node" "selection-mode:" ":icons" "portfolio:" "Tree-View")
        {Lisp-Entry "selected" () 474 12 ("set-selected" "get-selected")}
        {Lisp-Entry "start" () 475 12 ("set-start" "get-start")}
        {Lisp-Entry "end" () 476 12 ("set-end" "get-end")}
        {Lisp-Entry "get-selected" () 479 18 ("selected")}
        {Lisp-Entry "set-selected" () 483 18 ("selected" "set!" "value")}
        {Lisp-Entry "get-start" () 487 18 ("start")}
        {Lisp-Entry "set-start" () 491 18 ("start" "set!" "value")}
        {Lisp-Entry "get-end" () 495 18 ("end")}
        {Lisp-Entry "set-end" () 499 18 ("end" "set!" "value")}
        {Lisp-Entry "return-press" () 503 11 ("self" "end" "start" "complete-part" "key")}
        {Lisp-Entry "tab-press" () 507 11 ("self" "end" "start" "complete-part" "modifiers" "key")}
        {Lisp-Entry "double-click" () 511 11 ("self" "end" "start" "complete-part" "pos")}}}})
"Composite-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Composite-Text-Actions.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.row.Composite-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Composite-Text-Actions" () 47 7 ("Space" ":control" "on-view-completions" "view-completions" "on-navigate-forward" "navigate-forward" "Tab" ":shift" "Shortcut" "shortcut:" "on-navigate-backward" ":focus" "Event-Handler" "action-handler:" "navigate-backward" "name:" "Actions")}}})
"Computer-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Computer-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Computer-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Computer-Snapshot" () 45 7 ("Component")
        {Lisp-Entry "user-name" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "computer-name" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "processor-type" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "windows-version" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 55 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" () 59 11 ("windows-version" ":windows-version" "processor-type" ":processor-type" "computer-name" ":computer-name" "user-name" ":user-name" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Concept-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Concept-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Concept-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Concept-Doc" () 45 7 ("Doc")
        {Lisp-Entry "get-class-image" () 54 16 ("Bitmap-Resource")}}}})
"Concept-Slide"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "documentation" "Concept-Slide.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.documentation.Concept-Slide" () 37 9 ("jazz")
      {Lisp-Entry "Concept-Slide" () 46 7 ("Documentation-Slide")}}})
"Connection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "connection" "Connection.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.connection.Connection" () 37 9 ("jazz")
      {Lisp-Entry "Connection" () 45 7 ("Object")
        {Lisp-Entry "data-source" () 48 8 ()}
        {Lisp-Entry "inventory" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "open" "apply" "setup-connection" "nextmethod" "rest" "data-source")}
        {Lisp-Entry "setup-connection" () 59 19 ()}
        {Lisp-Entry "destroy" () 63 11 ("nextmethod" "destroy-connection")}
        {Lisp-Entry "destroy-connection" () 68 19 ("data-source" "set!" "close" "inventory" "when")}
        {Lisp-Entry "print" () 75 11 ("get-connection-string" "format" "data-source" "when" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-data-source" () 87 18 ("data-source")}
        {Lisp-Entry "get-inventory" () 91 18 ("reload-inventory" "apply" "inventory" "either" "rest")}
        {Lisp-Entry "reload-inventory" () 95 18 ("self" "new-inventory" "" "apply" "inventory" "set!" "data-source" "when" "rest")}
        {Lisp-Entry "open" () 105 19 ("data-source~self" "set!" "rest" "data-source")}
        {Lisp-Entry "get-state" () 114 26 ()}
        {Lisp-Entry "new-request" () 123 26 ()}
        {Lisp-Entry "supports-multirequests?" () 127 26 ("data-source" "get-provider" "supports-multirequests?")}
        {Lisp-Entry "load-request" () 136 26 (":data-class" ":max-load" "load-request" "new-request" "request" "with-closed" "data-class" "data-class:" "true" "max-load" "max-load:" "name" "name:" "command")}
        {Lisp-Entry "load-multirequest" () 141 26 (":data-classes" ":max-load" "load-multirequest" "new-request" "request" "with-closed" "data-classes" "data-classes:" "true" "max-load" "max-load:" "command")}
        {Lisp-Entry "load-rows" () 146 26 ("load-request" "get-rows" "command")}
        {Lisp-Entry "load-row" () 150 26 ("car" "length" "1" "=" "assert" "load-rows" "rows" "let" "command")}
        {Lisp-Entry "load-value" () 156 18 ("car" "get" "length" "1" "=" "assert" "load-rows" "rows" "let" "column" "command")}
        {Lisp-Entry "load-values" () 162 18 ("load-rows" "get" "row" "dynamic" "function" "map" "column" "command")}
        {Lisp-Entry "execute" () 173 26 ("command")}
        {Lisp-Entry "comment" () 177 26 ("parameters" "string")}
        {Lisp-Entry "begin-transaction" () 186 26 ()}
        {Lisp-Entry "commit-transaction" () 190 26 ()}
        {Lisp-Entry "rollback-transaction" () 194 26 ()}
        {Lisp-Entry "with-transaction" () 198 18 ("rollback-transaction" "commit-transaction" "if" "when" "true" "set!" "begin-transaction" "begin" "unwind-protect" "completed?" "false" "started?" "let" "proc")}}}})
"Connector"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Connector.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Connector" () 37 9 ("jazz")
      {Lisp-Entry "Connector" () 46 7 ("Line-View")
        {Lisp-Entry "client" () 49 12 ("set-client" "get-client")}
        {Lisp-Entry "start" () 50 12 ("set-start" "get-start")}
        {Lisp-Entry "end" () 51 12 ("set-end" "get-end")}
        {Lisp-Entry "start-view" () 54 8 ()}
        {Lisp-Entry "end-view" () 55 8 ()}
        {Lisp-Entry "initially-visible?" () 58 11 ("false")}
        {Lisp-Entry "get-client" () 67 18 ("client")}
        {Lisp-Entry "set-client" () 71 18 ("client" "set!" "value")}
        {Lisp-Entry "get-start" () 75 18 ("start")}
        {Lisp-Entry "set-start" () 79 18 ("ending-removed" "start-view" "when" "start" "set!" "value")}
        {Lisp-Entry "get-end" () 86 18 ("end")}
        {Lisp-Entry "set-end" () 90 18 ("ending-removed" "end-view" "when" "end" "set!" "value")}
        {Lisp-Entry "default-client" () 102 29 ("parent")}
        {Lisp-Entry "get-start-view" () 111 18 ("setup-ending" "set!" "start" "essay" "start-view" "either")}
        {Lisp-Entry "get-end-view" () 115 18 ("setup-ending" "set!" "end" "essay" "end-view" "either")}
        {Lisp-Entry "setup-ending" () 119 11 ("ending-added" "find-ending" "view" "when" "default-client" "find-component" "if" "client" "let" "name")}
        {Lisp-Entry "find-ending" () 128 29 ("find-component" "name" "client")}
        {Lisp-Entry "ending-added" () 132 29 ("view")}
        {Lisp-Entry "ending-removed" () 136 29 ("view")}
        {Lisp-Entry "update" () 145 18 ("set-to" "set-from" "get-position" "p" "Rect" "new" "set-bounds" "bottom" "max" "right" "get-h" "left" "get-v" "min" "-" "top" "Tolerance" "2" "line-width" "/" "+" "ceil" "lw" "get-center" "let*" "and" "when" "get-end-view" "e" "get-start-view" "s" "let")}
        {Lisp-Entry "Unselected-Color" () 168 14 ("Black" "name:" "Color")}
        {Lisp-Entry "unselected-color" () 172 29 ("Unselected-Color")}
        {Lisp-Entry "line-color" () 176 11 ("unselected-color" "get-editor" "selected-color" "if" "surrogate" "selection-rank" "rank" "let")}
        {Lisp-Entry "property-presentation" () 189 16 ("nextmethod" "else" "end" "start" "field-name" "case" "property")}
        {Lisp-Entry "component-surrogate" () 196 11 ("Connector-Surrogate")}
        {Lisp-Entry "get-row-instance" () 200 11 ("nextmethod" "else" "true" "nullable?:" "String-Row" "new" "end" "start" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 206 11 ("end" "start")}}}})
"Connector-Surrogate"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Connector-Surrogate.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Connector-Surrogate" () 37 9 ("jazz")
      {Lisp-Entry "Connector-Surrogate" () 45 7 ("Line-Surrogate")
        {Lisp-Entry "move-client?" () 48 11 ("false")}
        {Lisp-Entry "size-client?" () 52 11 ("false")}
        {Lisp-Entry "select" () 56 11 ("redraw-border" "focus?" "rank")}
        {Lisp-Entry "redraw-border" () 60 11 ("client" "invalidate-view")}
        {Lisp-Entry "draw" () 64 11 ("draw-showed-property" "dc")}
        {Lisp-Entry "draw-selected" () 68 11 ("rank" "dc")}}}})
"Console-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "Console-Manager.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.console.Console-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Console-Manager" () 48 7 ("text" "content" "flat?:" "hscroll?:" "vscroll?:" "center" "scroller" "on-clear-console" "tail" "location:" "clear" "pick" "on-print-detail-menu" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "Bitmap-Resource" "image-name:" ":icons" "portfolio:" "body" "build" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "install-in-host" () 63 11 ("get-text" "display-banner" "nextmethod" "host")}
        {Lisp-Entry "external-name" () 69 16 ("console-manager" "rest")}
        {Lisp-Entry "palette-class" () 79 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 84 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 89 16 ()}
        {Lisp-Entry "get-tools-view" () 98 11 ("tools" "locate")}
        {Lisp-Entry "get-text" () 107 18 ("text" "locate")}
        {Lisp-Entry "on-print-detail-menu" () 116 11 ("initiator:" "track-popup-menu" "layout-menu" "true" "child" "set-checked?" "get-print-detail" "detail" "console" "tools" "get-preferences" "pref" "Print-Detail-Menu" "menu" "get-size" "get-height" "0" "Point" "new" "pos" "Combo-Button" "get-combo" "Push-Icon" "typecase" "combo" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-print-detail" () 128 11 ("user-message" "print-detail" "set-preference" "detail:" "get-property" "detail" "console" "tools" "get-preferences" "pref" "let" "evt")}
        {Lisp-Entry "on-clear-console" () 135 11 ("acquire-focus" "clear-console" "get-text" "text" "let" "evt")}}
      {Lisp-Entry "Print-Detail-Menu" () 146 7 (":describe" ":reader" ":text" "detail:" "on-print-detail" ":container" "form:" "Event-Handler" "action-handler:" "title:" ":human" "name:" "Context-Menu")}}})
"Console-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "Console-Preferences.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.console.Console-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Console-Preferences" () 46 7 ("Bitmap-Resource" "icon:" "title:" "Frame-Preferences")
        {Lisp-Entry "wrap?" () 49 12 ("generate" "accessors" "true")}
        {Lisp-Entry "print-detail" () 50 12 ("generate" "accessors" ":reader")}}}})
"Console-Printer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "printer" "Console-Printer.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.printer.Console-Printer" () 37 9 ("jazz")
      {Lisp-Entry "Console-Printer" () 44 7 ("Text-Printer")
        {Lisp-Entry "initialize" () 47 11 ("get-console-text" "nextmethod")}}}})
"Console-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "Console-Text-Actions.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.console.Console-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Console-Text-Actions" () 47 7 (":shift" "insert-next-aux" "Down" "on-insert-next" "insert-next" "Tab" "insert-previous-aux" "Up" "on-insert-previous" "insert-previous" ":alt" "on-fresh-prompt" "fresh-prompt" "Return" ":control" "Shortcut" "shortcut:" "on-insert-return" ":focus" "Event-Handler" "action-handler:" "insert-return" "name:" "Actions")}}})
"Console-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "Console-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.console.Console-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Console-Text-View" () 49 7 ("Code" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "2" "left-padding:" "wrap?:" "IDE-Text-View")
        {Lisp-Entry "evaluating?" () 52 8 ("false")}
        {Lisp-Entry "last-inserted" () 53 8 ()}
        {Lisp-Entry "inserted-where" () 54 8 ()}
        {Lisp-Entry "prompt" () 55 8 ()}
        {Lisp-Entry "console-printer" () 56 8 ()}
        {Lisp-Entry "external-name" () 64 16 ("console-text" "rest")}
        {Lisp-Entry "default-tool?" () 68 11 ("true")}
        {Lisp-Entry "default-console?" () 72 11 ("true")}
        {Lisp-Entry "install" () 76 11 ("self" "Text-Printer" "new" "console-printer" "set!" "nextmethod" "rest")}
        {Lisp-Entry "palette-class" () 87 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 92 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 97 16 ()}
        {Lisp-Entry "position-host" () 106 11 ("Dimension" "set-size" "host")}
        {Lisp-Entry "focus-actions" () 115 11 ("nextmethod" "console-text" "find-actions" "cons")}
        {Lisp-Entry "on-insert-return" () 125 11 ("format" "insert-string" "evt")}
        {Lisp-Entry "on-fresh-prompt" () 129 11 ("true" "force?:" "fresh-prompt" "evt")}
        {Lisp-Entry "on-evaluate" () 133 11 ("console-evaluate" "false" "completion-active?" "set!" "evt")}
        {Lisp-Entry "on-insert-previous" () 138 11 ("insert-previous-expression" "end-completion" "has-completion?" "if" "evt")}
        {Lisp-Entry "on-insert-next" () 144 11 ("insert-next-expression" "end-completion" "has-completion?" "if" "evt")}
        {Lisp-Entry "mouse-down" () 150 11 ("prompt-at-end" "nextmethod" "pos")}
        {Lisp-Entry "return-press" () 155 11 ("prompt-command" "insert-string" "get-row" "when" "console-evaluate" "=" "last-prompt" "last" "let" "fresh-prompt" "not" "if" "previous-prompt" "prompt" "get-start" "pos" "let*" "false" "completion-active?" "set!" "key")}
        {Lisp-Entry "tab-press" () 169 11 ("insert-previous-expression" "insert-next-expression" "shift-key?" "end-completion" "has-completion?" "if" "modifiers" "key")}
        {Lisp-Entry "scrollee-size" () 177 11 ("nextmethod" "scrollee-height" "get-display-width" "Dimension" "new" "wrap?" "if")}
        {Lisp-Entry "context-menu" () 183 11 ("nextmethod" "Console-Menu" "new" "track-popup-menu" "context-menu-click" "begin" "not" "and" "if" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "set-selection" () 192 18 ("inserted-where" "set!" "nextmethod" "apply" "rest" "range")}
        {Lisp-Entry "display-banner" () 202 26 ("display-prompt" "Banner-Color" "colorize" "process-version" "present" "process-name" "format" "insert-string" "get-start" "start" "get-application" "appl" "let")}
        {Lisp-Entry "clear-console" () 210 18 ("display-banner" "clear-all")}
        {Lisp-Entry "console-evaluate" () 220 11 ("fresh-prompt" "false" "eval-from-prompt" "true" "evaluating?" "set!" "begin" "unwind-protect")}
        {Lisp-Entry "eval-from-prompt" () 229 11 ("true" "eval-command" "display-evaluation" "empty-string?" "unless" "cn" "insert-string" "text-ending" "set-caret" "command" "range" "receive" "when" "current-command" "info" "let")}
        {Lisp-Entry "eval-command" () 239 26 ("console?" "command" "name" "range")}
        {Lisp-Entry "eval-commands" () 243 26 ("console?" "commands" "names" "range")}
        {Lisp-Entry "display-evaluation" () 247 26 ("fresh-line" "console-printer" "print-evaluation" "eval-color" "with-colored-output" "result" "dynamic" "function" "for-each" "evaluation-break" "console?" "results")}
        {Lisp-Entry "print-evaluation" () 258 26 ("display" "true" "->string" "put-line" "not" "unless" "console-printer" "result")}
        {Lisp-Entry "with-colored-output" () 265 18 ("1" "get-row" "+" "naturals" "0" "Cell" "new" "row" "dynamic" "function" "for-each" "colorize" "get-start" "start" "let" "proc" "color")}
        {Lisp-Entry "evaluation-break" () 274 18 ("console-printer" "fresh-line" "text-ending" "set-caret")}
        {Lisp-Entry "get-modified?" () 285 11 ("false")}
        {Lisp-Entry "get-tooltip-context" () 289 11 ("pos")}
        {Lisp-Entry "home-column" () 293 11 ("0" "Cell" "Range" "new" "get-string" "=" "2" "paragraph-length" ">=" "and" "if" "row")}
        {Lisp-Entry "current-history-item" () 304 11 ()}
        {Lisp-Entry "recolorize-text" () 313 11 ("end-row" "start")}
        {Lisp-Entry "expression-color" () 317 26 ("Expression-Color")}
        {Lisp-Entry "eval-color" () 321 26 ("Eval-Color")}
        {Lisp-Entry "get-prompt" () 330 18 ("prompt")}
        {Lisp-Entry "set-prompt" () 334 18 ("prompt" "set!" "value")}
        {Lisp-Entry "fresh-prompt" () 338 18 ("display-prompt" "cn" "insert-string" "0" "get-col" "/=" "at-prompt?" "unless" "get-end" "pos" "let" "text-ending" "set-caret" "prompt-at-end" "evaluating?" "not" "or" "when" "false" "force?" "force?:")}
        {Lisp-Entry "at-prompt?" () 349 11 ("paragraph-string" "length" "=" "and" "current-prompt" "prompt" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "current-prompt" () 356 11 ("prompt")}
        {Lisp-Entry "display-prompt" () 360 21 ("update-view" "prompt-at-end" "get-end" "Expression-Color" "1" "length" "-" "+" "Prompt-Color" "colorize" "insert-string" "current-prompt" "prompt" "get-start" "start" "let")}
        {Lisp-Entry "prompt-at-end" () 375 18 ("inserted-where" "get-end" "last-inserted" "set!")}
        {Lisp-Entry "previous-prompt" () 380 11 ("get-start" "essay" "backward" "true" "set!" "=" "and" "if" "0" "c0" "1" "c1" "char-backward" "cr" "let" "at-beginning?" "or" "not" "while" "length" "len" "current-prompt" "prompt" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "false" "found?" "let*" "pos")}
        {Lisp-Entry "next-prompt" () 397 11 ("get-limit" "get-row" "" "+" "get-end" "next" "when" "forward" "true" "set!" "=" "and" "if" "c2" "1" "-" "c1" "0" "char-forward" "cr" "let" "at-ending?" "or" "not" "while" "length" "len" "current-prompt" "prompt" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "false" "found?" "let*" "pos")}
        {Lisp-Entry "last-prompt" () 417 11 ("previous-prompt" "text-ending" "pos" "let")}
        {Lisp-Entry "backward-prompt" () 422 11 ("set!" "when" "last-inserted" "previous-cell" "previous-prompt" "previous" "let")}
        {Lisp-Entry "forward-prompt" () 428 11 ("set!" "when" "last-inserted" "next-prompt" "next" "let")}
        {Lisp-Entry "current-command" () 434 11 ("get-string" "values" "when" "current-command-range" "range" "let")}
        {Lisp-Entry "current-command-range" () 440 21 ("Range" "new" "when" "previous-prompt" "prompt" "text-ending" "end" "let*")}
        {Lisp-Entry "prompt-command" () 447 11 ("Range" "new" "get-string" "next-cell" "set!" "get-char" "/=" "" "and" "while" "pos" "text-ending" "end" "let" "prompt")}
        {Lisp-Entry "insert-previous-expression" () 455 11 ("Range" "new" "insert-string" "get-start" "start" "set-selection" "inserted-where" "when" "empty-string?" "unless" "last-inserted" "prompt-command" "command" "true" "set!" "backward-prompt" "if" "not" "while" "false" "done?" "let")}
        {Lisp-Entry "insert-next-expression" () 470 11 ("Range" "new" "insert-string" "get-start" "start" "set-selection" "inserted-where" "when" "empty-string?" "unless" "last-inserted" "prompt-command" "command" "true" "set!" "forward-prompt" "if" "not" "while" "false" "done?" "let")}}
      {Lisp-Entry "Console-Menu" () 490 7 ("insert-next" "insert-previous" "code-text" "edit-definition" "fresh-prompt" "console-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "evaluate" "name:" "Context-Menu")}}})
"Constant-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Constant-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Constant-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Constant-Doc" () 45 7 ("Element-Doc")
        {Lisp-Entry "construct-literal" () 48 16 (":doc" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-image" () 58 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" () 62 11 ()}}}})
"Constructor-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Constructor-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Constructor-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Constructor-Entry" () 45 7 ("Method-Entry")
        {Lisp-Entry "get-image" () 48 11 ("Bitmap-Resource")}}}})
"Consumer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "consumer" "Consumer.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.consumer.Consumer" () 37 9 ("jazz")
      {Lisp-Entry "Consumer" () 40 11 ()}}})
"Contact"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "messenger" "contact" "Contact.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.messenger.contact.Contact" () 37 9 ("jazz")
      {Lisp-Entry "Contact" () 45 7 ("Component")
        {Lisp-Entry "title" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "icon" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "prompt-message" () 57 25 ("message-box" "message")}
        {Lisp-Entry "get-class-image" () 68 16 ("Bitmap-Resource")}
        {Lisp-Entry "display-property?" () 72 11 ("visible?" "children" "before" "name-info" "field-name" "memq?" "not" "property")}
        {Lisp-Entry "get-row-instance" () 76 11 ("nextmethod" "else" "String-Row" "new" "title" "field-name" "case" "property")}}}})
"Contacts"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "messenger" "contact" "Contacts.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.messenger.contact.Contacts" () 37 9 ("jazz")
      {Lisp-Entry "Contacts" () 47 7 ("Group")
        {Lisp-Entry "get-class-presentation" () 56 16 ()}
        {Lisp-Entry "get-class-image" () 61 16 ("Bitmap-Resource")}
        {Lisp-Entry "can-rename-component?" () 65 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 69 11 ("false")}
        {Lisp-Entry "can-move-component?" () 73 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 77 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 81 11 ()}}}})
"Contacts-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "messenger" "manager" "Contacts-Editor.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.messenger.manager.Contacts-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Contacts-Editor" () 45 7 ("Descendants-Editor")
        {Lisp-Entry "form-model" () 48 11 ("nextmethod" "else" "Contacts-Tree" "tree" "get-name" "case" "form")}}}})
"Contacts-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "messenger" "manager" "Contacts-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.messenger.manager.Contacts-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Contacts-Manager" () 62 7 ("width:" "title:" "descendant" "highlight-edited?:" "show-header?:" "tree" "flat?:" "scroller" "center" "descendants" "on-view" "tail" "view" "4" "on-send-message" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "send-message" "north" "location:" "6" "0" "Rect" "layout-insets:" "flow" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Exit-Listener" "Editor-View")
        {Lisp-Entry "external-name" () 78 16 ("contacts-manager" "rest")}
        {Lisp-Entry "palette-class" () 88 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 93 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 98 16 ()}
        {Lisp-Entry "get-tools-view" () 107 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 111 11 ("acquire-focus" "descendants" "locate" "tree" "let")}
        {Lisp-Entry "Contacts-Manager-Controller" () 122 9 ("Editor-View-Controller")
          {Lisp-Entry "document-status" () 125 13 ()}}
        {Lisp-Entry "new-controller" () 130 11 ("self" "Contacts-Manager-Controller" "new")}
        {Lisp-Entry "read-contacts" () 139 16 ("err" "continue-handler:" "install-context" "read-from-file" "instantiate" "contacts" "get-process" "process" "exists?" "when" "User" "File" "file" "let" "dynamic" "function" "with-safe-execution")}
        {Lisp-Entry "install" () 158 11 ("read-contacts" "set-client" "get-application" "add-exit-listener" "self" "locate" "set-editor" "false" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "resize-center" () 171 11 ("descendants" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-context-menu" () 175 11 ("track-popup-menu" "when" "selected-object" "new-context-menu" "menu" "let" "dynamic" "function" "with-context-click" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-return-press" () 186 11 ("on-send-message" "evt")}
        {Lisp-Entry "on-double-click" () 190 11 ("on-send-message" "evt")}
        {Lisp-Entry "on-send-message" () 194 11 ("send-message" "bell" "null?" "if" "selected-contact" "contact" "let" "evt")}
        {Lisp-Entry "on-view" () 201 11 ("evt")}
        {Lisp-Entry "prepare-exit" () 205 11 ("save" "get-modified?" "when")}
        {Lisp-Entry "new-context-menu" () 215 11 ("Contact-Menu" "new" "Contact" "typecase" "object")}
        {Lisp-Entry "send-message" () 225 11 ("contact")}
        {Lisp-Entry "selected-object" () 234 11 ("tree" "descendants" "locate" "selected-component")}
        {Lisp-Entry "selected-contact" () 238 11 ("Contact" "is?" "when" "selected-object" "object" "let")}
        {Lisp-Entry "Contact-Menu" () 249 9 ("on-exit" "exit" "on-select" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "select" "name:" "Context-Menu")
          {Lisp-Entry "on-send-message" () 259 13 ("evt")}}}}})
"Contacts-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "messenger" "manager" "Contacts-Tree.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.messenger.manager.Contacts-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Contacts-Tree" () 47 7 ("show-branches?:" "multiple-selection?:" "auto-expand/collapse?:" "reorderable?:" "draggable?:" ":icons" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "update-selection" () 54 11 ("selected-components" "expand-state")}
        {Lisp-Entry "row-state" () 58 11 ("collapsed" "expanded" "1" "" "if" "level" "update?" "component")}
        {Lisp-Entry "addable-root-classes" () 64 11 ("Contact" "Group" "list")}}}})
"Container"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Container.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Container" () 37 9 ("jazz")
      {Lisp-Entry "Container" () 46 7 ("content" "name:" "Layout-View")
        {Lisp-Entry "get-content" () 59 18 ("content" "child")}
        {Lisp-Entry "inner?" () 68 11 ("get-content" "eq?" "view")}}}})
"Containment-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Containment-Editor.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Containment-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Containment-Editor" () 48 7 ("View")
        {Lisp-Entry "client" () 51 12 ("set-client" "get-client")}
        {Lisp-Entry "flow-layout" () 54 8 ()}
        {Lisp-Entry "external-name" () 61 16 ("containment-editor" "rest")}
        {Lisp-Entry "palette-class" () 71 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 76 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 81 16 ()}
        {Lisp-Entry "client-activate" () 85 11 ("get-client" "set-client" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "finish" () 96 11 ("layout-view" "0" "5" "4" "Rect" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "layout" () 102 11 ("get-height" "get-width" "children" "flow-layout" "layout")}
        {Lisp-Entry "get-client" () 111 18 ("client")}
        {Lisp-Entry "set-client" () 115 18 ("set!" "client" "/=" "when" "clt")}}}})
"Content-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Content-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Content-View" () 37 9 ("jazz")
      {Lisp-Entry "Content-View" () 45 7 ("Layout-View")
        {Lisp-Entry "size-change" () 53 11 ("content-size-change" "when" "get-client" "client" "let" "nextmethod" "size")}
        {Lisp-Entry "get-container" () 65 18 ("parent")}
        {Lisp-Entry "get-client" () 69 18 ("car" "children" "not-null?" "if")}
        {Lisp-Entry "inner?" () 80 11 ("get-client" "eq?" "view")}
        {Lisp-Entry "get-scroll-client" () 89 11 ("get-scroll-client" "when" "get-client" "client" "let")}
        {Lisp-Entry "get-class-image" () 101 16 ("Bitmap-Resource")}}}})
"Context-Action"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "context" "Context-Action.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.context.Context-Action" () 37 9 ("jazz")
      {Lisp-Entry "Context-Action" () 45 7 ("Component")
        {Lisp-Entry "image" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "title" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "handler" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 54 16 ("self" "new" "handler" "title" "image" "context")}
        {Lisp-Entry "initialize" () 58 11 ("handler~self" "title~self" "image~self" "set!" "nextmethod" "handler" "title" "image")}
        {Lisp-Entry "foldable?" () 65 11 ("true")}
        {Lisp-Entry "fold-object" () 69 11 ("handler" "title" "image" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 78 11 ("handler" "title" "image" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Context-Combo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "context" "Context-Combo.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.context.Context-Combo" () 37 9 ("jazz")
      {Lisp-Entry "Context-Combo" () 46 7 ("Ansi-Var" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "body" "name:" "Combo-Box")
        {Lisp-Entry "finish" () 54 11 ("update" "nextmethod" "rest")}
        {Lisp-Entry "update" () 64 11 ("set-value" "when" "->string" "list" "get-name" "name" "let" "branch" "dynamic" "function" "map" "set-choices" "get-process" "get-context" "active" "get-children" "Branch" "collect-type" "all" "get-preferences" "pref" "let*")}
        {Lisp-Entry "selection-change" () 81 11 ("get-value" "get-process" "set-context")}
        {Lisp-Entry "combo-choice" () 90 11 ("selection-change")}}}})
"Context-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "context" "Context-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.context.Context-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Context-Manager" () 48 7 ("blue:" "green:" "red:" "Color" "background:" "Layout-View")
        {Lisp-Entry "external-name" () 56 16 ("context-manager" "rest")}
        {Lisp-Entry "palette-class" () 66 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 71 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 76 16 ()}
        {Lisp-Entry "client-activate" () 80 11 ("current-document" "install-context")}
        {Lisp-Entry "client-deactivate" () 84 11 ("install-context")}
        {Lisp-Entry "workspace-minimisable?" () 88 11 ("false")}
        {Lisp-Entry "layout" () 97 11 ("children" "+" "increase!" "-" "Dimension" "set-size" "Point" "new" "set-position" "view-height" "get-height" "height" "get-width" "width" "view" "dynamic" "function" "for-each" "top" "let")}
        {Lisp-Entry "install-context" () 114 11 ("layout-view" "get-application" "install-text" "close-children" "guest")}
        {Lisp-Entry "install-text" () 121 11 ("get-context-text" "get-height" "+" "get-width" "Dimension" "set-size" "set-text" "title:" "Bitmap-Resource" "icon:" "self" "parent:" "Context-View" "new" "view" "let" "text-view" "title" "bind" "info" "dynamic" "function" "for-each" "when" "provider")}}}})
"Context-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Context-Menu.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.menu.Context-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Context-Menu" () 45 7 ("Menu")
        {Lisp-Entry "make-condensed-menu" () 53 18 ("layout-menu" "condense-section" "parent:" "Separator-Item" "new" "false" "set!" "if" "section" "dynamic" "function" "for-each" "true" "first?" "collect-sections" "sections" "self" "top-menu" "let" "max-leafs" "max-leafs:" "identity" "key" "key:" "create-leaf" "user-items")}
        {Lisp-Entry "condense-section" () 66 11 ("layout-menu" "first" "sub-items" "Context-Menu" "submenu" "user-data:" "append" "title:" "parent:" "Label-Item" "new" "menu-item" "let*" "else" "car" ":leafs" "=" "null?" "cond" "rest" "string" "value" "bind" "item" "for-each" "menu" "items" "proc" "letrec" ":max-leafs" "second" "key:" "list" "user-item" "dynamic" "function" "map" "" "sort" "create-tree" "values-tree" "self" "top-menu" "let" "max-leafs" "key" "create-leaf" "user-items")}
        {Lisp-Entry "create-tree" () 93 11 ("0" "prefix" "sub-items" "let*" "else" "cdr" "first" "2" "=" "cond" "group" "map" "equal?" "test:" "1" "+" "subseq" "second" "title" "leaf" "key:" "partition" "groups" ":leafs" "list" "length" "" "if" "level" "items" "dynamic" "function" "proc" "letrec" "max-leafs" "let" "rest" "leafs")}}}})
"Context-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "context" "Context-Provider.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.context.Context-Provider" () 37 9 ("jazz")
      {Lisp-Entry "Context-Provider" () 45 11 ()
        {Lisp-Entry "get-context-text" () 48 35 ()}}}})
"Context-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "context" "Context-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.context.Context-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Context-Text-View" () 47 7 ("4" "top-padding:" "6" "left-padding:" "Ansi-Var" "Font" "font:" "Default" "Text-Style" "default-style:" "Light" "name:" "Color" "background:" "editable?:" "Plain-Formatted-Text-View")
        {Lisp-Entry "new-hyperlink-style" () 54 11 ("action:" "Hyperlink" "name:" "Color" "color:" "underline?:" "8" "point-size:" "font-name:" "Font" "font:" "Hyperlink-Style" "new" "action")}}}})
"Context-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "context" "Context-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.context.Context-View" () 37 9 ("jazz")
      {Lisp-Entry "Context-View" () 47 7 ("fill" "layout-type:" "content" "White" "name:" "Color" "background:" "Container")
        {Lisp-Entry "icon" () 50 12 ("set-icon" "get-icon")}
        {Lisp-Entry "title" () 51 12 ("set-title" "get-title")}
        {Lisp-Entry "get-icon" () 64 18 ("icon")}
        {Lisp-Entry "set-icon" () 68 18 ("icon" "set!" "value")}
        {Lisp-Entry "get-title" () 72 18 ("title")}
        {Lisp-Entry "set-title" () 76 18 ("title" "set!" "value")}
        {Lisp-Entry "get-text" () 85 18 ("text" "get-content" "find-component")}
        {Lisp-Entry "set-text" () 89 18 ("get-content" "set-parent" "close-text" "text")}
        {Lisp-Entry "close-text" () 94 11 ("close" "when" "get-text" "text" "let")}
        {Lisp-Entry "size-change" () 105 11 ("2" "Rect" "insets:" "invalidate-border" "invalidate-caption" "nextmethod" "size")}
        {Lisp-Entry "layout" () 116 11 ("-" "Dimension" "new" "set-size" "0" "Point" "set-position" "get-content" "content" "get-height" "height" "get-width" "width" "let")}
        {Lisp-Entry "caption-rect" () 129 11 ("get-width" "0" "Rect" "new")}
        {Lisp-Entry "invalidate-caption" () 138 11 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "Active-Colors" () 147 14 ("blue:" "green:" "6" "red:" "Color" "list")}
        {Lisp-Entry "Frame-Dark-Color" () 151 14 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "Frame-Medium-Pen" () 154 14 ("blue:" "green:" "red:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "Frame-Light-Pen" () 157 14 ("blue:" "green:" "red:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "draw" () 161 11 ("7" "6" "if" "draw-text" "White" "Color" "set-text-color" "Default-GUI" "name:" "Font" "set-font" "title" "5" "4" "get-application" "get-icons-cache" "draw-image" "icon" "when" "second" "Active-Colors" "first" "gradient-fill" "caption-rect" "caption" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "mouse-down" () 178 11 ("caption-rect" "in-rect?" "cond" "pos")}}}})
"Continue"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exception" "Continue.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.exception.Continue" () 37 9 ("jazz")
      {Lisp-Entry "Continue" () 44 7 ("Exception")}}})
"Control-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Control-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Control-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Control-Tester" () 45 7 ("title:" "Tester")}
      {Lisp-Entry "Foo" () 102 7 ("Signal")}}})
"Convertion"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "convertion" "Convertion.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "Convertion" () 37 9 ("jazz")}})
"Convertion-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exception" "Convertion-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.exception.Convertion-Error" () 37 9 ("jazz")
      {Lisp-Entry "Convertion-Error" () 44 7 ("Parse-Error")
        {Lisp-Entry "object" () 47 8 ()}
        {Lisp-Entry "type" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("type~self" "object~self" "set!" "nextmethod" "apply" "others" "type" "object" "bind-keywords" "rest")}
        {Lisp-Entry "get-object" () 63 18 ("object")}
        {Lisp-Entry "get-type" () 67 18 ("type")}
        {Lisp-Entry "get-message" () 76 11 ("format-gender" "object" "format" "type-name" "string?" "if" "type" "let")}}}})
"Cpp-Category-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Category-Entry.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Category-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Category-Entry" () 45 7 ("Cpp-Entry")
        {Lisp-Entry "construct-literal" () 49 16 ("self" "new" "name" "context")}
        {Lisp-Entry "initialize" () 53 11 ("nextmethod" "name")}
        {Lisp-Entry "print-catalog" () 57 11 ("name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 69 11 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" () 78 11 ("name" "update-index" "references-index" "definitions-index")}}}})
"Cpp-Define-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Define-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Define-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Define-Entry" () 45 7 ("Cpp-Definition-Entry")}}})
"Cpp-Definition-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Definition-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Definition-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Definition-Entry" () 45 7 ("Cpp-Entry")
        {Lisp-Entry "construct-literal" () 49 16 ("self" "new" "column" "line" "name" "context")}
        {Lisp-Entry "initialize" () 53 11 ("nextmethod" "column" "line" "name")}
        {Lisp-Entry "print-catalog" () 57 11 ("column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "update-indexes" () 69 11 ("name" "update-index" "references-index" "definitions-index")}}}})
"Cpp-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Entry" () 46 7 ("CppJava-Entry")
        {Lisp-Entry "source-frame-type" () 49 11 ("Cpp-Text-View")}}}})
"Cpp-Export-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Export-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Export-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Export-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "nb-parameters" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "column" "line" "nb-parameters" "name" "context")}
        {Lisp-Entry "initialize" () 56 11 ("nb-parameters~self" "set!" "nextmethod" "column" "line" "nb-parameters" "name")}
        {Lisp-Entry "print-catalog" () 61 11 ("column" "line" "nb-parameters" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-nb-parameters" () 73 18 ("nb-parameters")}
        {Lisp-Entry "get-image" () 82 11 ("Bitmap-Resource")}}}})
"Cpp-Extern-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Extern-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Extern-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Extern-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"Cpp-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "file" "Cpp-File.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.builder.file.Cpp-File" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-File" () 45 7 ("Product-File")
        {Lisp-Entry "precompiled-headers" () 48 12 ("generate" "accessors" "use")}
        {Lisp-Entry "warnings-as-errors?" () 49 12 ("generate" "accessors" "true")}
        {Lisp-Entry "preprocess" () 57 11 ("true" ":preprocess?" ":output" ":log" "reporter:" "compile" "warnings-as-errors?" ":warnings-as-errors?" "file:" ":project" "VC-Compiler" "new" "compiler" "dependency-modified?" "exists?" "not" "or" "when" "source" "get-base" "get-object-file" "object" "project-c++-catalog" "catalog" "let" "false" "force?" "force?:" "output" "log" "reporter" "project")}
        {Lisp-Entry "build" () 67 11 (":output" ":log" "reporter:" "compile" "warnings-as-errors?" ":warnings-as-errors?" "precompiled-headers" ":precompiled-headers" "file:" ":project" "new" "vc" "get-compiler-class" "compiler" "let*" "dependency-modified?" "exists?" "not" "or" "when" "source" "get-base" "get-object-file" "object" "project-c++-catalog" "catalog" "let" "false" "force?" "force?:" "output" "log" "reporter" "project")}
        {Lisp-Entry "dependency-modified?" () 83 11 ("false" "null?" "get-file-entry" "essay" "file-def" "get-includes" "when" "get-include-file" "include" "let" "for-each" "cons" "set!" "true" "get-time" ">" "if" "memq?" "unless" "def" "dynamic" "function" "proc" "verified" "get-modification-time" "object-time" "letrec" "return" "lambda" "call/ec" "catalog" "file" "object")}
        {Lisp-Entry "get-class-presentation" () 112 16 ()}}}})
"Cpp-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-File-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-File-Entry" () 45 7 ("CppJava-File-Entry")
        {Lisp-Entry "header?" () 48 8 ()}
        {Lisp-Entry "includes" () 49 8 ()}
        {Lisp-Entry "construct-literal" () 53 16 ("self" "new" "definitions" "time" "file" "context")}
        {Lisp-Entry "initialize" () 57 11 ("collect-includes" "includes" "file" "get-extension" "member?" "header?" "set!" "nextmethod" "d" "t" "f" "c")}
        {Lisp-Entry "collect-includes" () 63 11 ("definitions" "Cpp-Include-Entry" "is?" "entry" "dynamic" "function" "collect-if")}
        {Lisp-Entry "get-title" () 74 11 ()}
        {Lisp-Entry "get-header?" () 78 18 ("header?")}
        {Lisp-Entry "get-source?" () 82 18 ("header?" "not")}
        {Lisp-Entry "get-includes" () 86 18 ("includes")}}}})
"Cpp-Frame-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Cpp-Frame-Snapshot.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Cpp-Frame-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Frame-Snapshot" () 45 7 ("Frame-Snapshot")
        {Lisp-Entry "title" () 48 8 ()}
        {Lisp-Entry "file" () 49 8 ()}
        {Lisp-Entry "line" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("line~self" "file~self" "title~self" "set!" "nextmethod" "parameters" "line" "file" "title" "thread")}
        {Lisp-Entry "get-title" () 65 18 ("title")}
        {Lisp-Entry "get-file" () 69 18 ("file")}
        {Lisp-Entry "get-line" () 73 18 ("line")}
        {Lisp-Entry "present" () 82 11 ("get-base" "format" "title" "file" "null?" "if")}
        {Lisp-Entry "get-image" () 88 11 ("Bitmap-Resource")}
        {Lisp-Entry "edit" () 97 11 ("0" "1" "line" "-" "Cell" "Range" "new" "selection:" "false" "activate-focus?:" "edit-document" "get-application" "appl" "let" "file" "when")}}}})
"Cpp-Include-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Include-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Include-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Include-Entry" () 45 7 ("Cpp-Entry")
        {Lisp-Entry "include" () 48 8 ()}
        {Lisp-Entry "include-base" () 49 8 ()}
        {Lisp-Entry "construct-literal" () 53 16 ("self" "new" "column" "line" "include" "context")}
        {Lisp-Entry "initialize" () 57 11 ("extract-base" "include-base~self" "include~self" "set!" "nextmethod" "column" "line" "include")}
        {Lisp-Entry "print" () 63 11 ("include" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" () 69 11 ("column" "line" "include" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 81 11 ("Bitmap-Resource")}
        {Lisp-Entry "present-name" () 85 11 ("include")}
        {Lisp-Entry "get-include" () 94 18 ("include")}
        {Lisp-Entry "get-include-file" () 98 18 ("include-base" "get-catalog" "get-header")}
        {Lisp-Entry "get-header" () 102 11 ("get-file-definitions" "get-header?" "def" "dynamic" "function" "find-if" "name" "catalog")}}}})
"Cpp-Method-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Method-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Method-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Method-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "class" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "column" "line" "name" "class" "context")}
        {Lisp-Entry "initialize" () 56 11 ("class~self" "set!" "nextmethod" "column" "line" "name" "class")}
        {Lisp-Entry "print" () 61 11 ("class" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" () 67 11 ("column" "line" "name" "class" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 79 11 ("Bitmap-Resource")}}}})
"Cpp-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "parser" "Cpp-Parser.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.catalog.parser.Cpp-Parser" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Parser" () 45 7 ("File-Parser")
        {Lisp-Entry "parse" () 48 11 ("parse-definitions" "catalog" "Cpp-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" () 52 11 ("get-output" "length" "0" "naturals" "find-export" "export" "find-method" "method" "find-extern" "extern" "find-static" "static" "find-include" "include" "find-define" "define" "n" "line" "dynamic" "function" "for-each" "get-base" "Cpp-Category-Entry" "put" "get-extension" "member?" "when" "List-Factory" "new" "fact" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "define" () 86 12 ()}
        {Lisp-Entry "find-define" () 90 11 ("subseq" "Cpp-Define-Entry" "new" "cpp/java-constituent?" "or" "c" "dynamic" "function" "skip" "" ">" "and" "+" "start" "let*" "start:" "define" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}
        {Lisp-Entry "include" () 108 12 ()}
        {Lisp-Entry "find-include" () 112 11 ("subseq" "Cpp-Include-Entry" "new" "cpp/java-constituent?" "or" "c" "dynamic" "function" "skip" "1" "element" "=" "" ">" "and" "+" "start" "let*" "start:" "include" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}
        {Lisp-Entry "Static" () 130 12 ()}
        {Lisp-Entry "find-static" () 134 11 ("subseq" "Cpp-Static-Entry" "new" "cpp/java-constituent?" "skip" ">" "+" "start" "let*" "start:" "Static" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}
        {Lisp-Entry "Extern" () 158 12 ()}
        {Lisp-Entry "find-extern" () 162 11 ("subseq" "Cpp-Extern-Entry" "new" "cpp/java-constituent?" "skip" ">" "+" "start" "let*" "start:" "Extern" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}
        {Lisp-Entry "Method" () 186 12 ()}
        {Lisp-Entry "find-method" () 190 11 ("Cpp-Method-Entry" "new" "=" "c" "dynamic" "function" "subseq" "class" "cpp/java-constituent?" "skip" ">" "+" "start" "let*" "start:" "Method" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}
        {Lisp-Entry "Export" () 225 12 ()}
        {Lisp-Entry "find-export" () 229 11 ("Cpp-Export-Entry" "new" "split" "0" "whitespace?" "if" "nb-parameters" "-" "1" "parameters" "subseq" "name" "cpp/java-constituent?" "skip" ">" "+" "start" "let*" "start:" "Export" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}}}})
"Cpp-Static-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Cpp-Static-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Cpp-Static-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Static-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"Cpp-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Cpp-Text-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Cpp-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Text-Preferences" () 47 7 ("completions:" "user-type-color:" "user-keyword-color:" "Dark-Orange" "user-macro-color:" "Dark-Blue" "keyword-color:" "Dark-Green" "balanced-comment-color:" "Purple" "line-comment-color:" "title-color:" "Dark-Red" "name:" "Color" "definition-color:" "title:" "CppJava-Text-Preferences")}}})
"Cpp-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Cpp-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Cpp-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Cpp-Text-View" () 46 7 ("CppJava-Text-View")
        {Lisp-Entry "external-name" () 50 16 ("cpp-text" "rest")}
        {Lisp-Entry "preferences" () 54 11 ("cpp-text" "documents" "get-preferences")}
        {Lisp-Entry "favorite-completions" () 63 11 ("preferences" "get-completions")}
        {Lisp-Entry "Syntax-Targets" () 72 14 ()}
        {Lisp-Entry "Syntax-Automata" () 75 14 ()}
        {Lisp-Entry "syntax-targets" () 79 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 85 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "colorize-entries" () 91 11 ()}
        {Lisp-Entry "Keywords" () 100 12 ()}
        {Lisp-Entry "get-keywords" () 160 11 ("Keywords")}
        {Lisp-Entry "get-user-macros" () 169 11 ("cpp-text" "documents" "get-preferences" "get-macros" "user")}
        {Lisp-Entry "get-user-keywords" () 173 11 ("cpp-text" "documents" "get-preferences" "get-keywords" "user")}
        {Lisp-Entry "get-user-types" () 177 11 ("cpp-text" "documents" "get-preferences" "get-types" "user")}
        {Lisp-Entry "get-user-definitions" () 181 11 ("cpp-text" "documents" "get-preferences" "get-definitions" "user")}
        {Lisp-Entry "on-add-break" () 190 18 ("user-message" "set-clipboard" "get-name" "format" "break-command" "1" "get-row" "+" "row" "get-start" "start" "get-controller" "get-moniker" "file" "let*" "evt")}
        {Lisp-Entry "on-remove-break" () 199 18 ("evt")}
        {Lisp-Entry "get-context-menu" () 208 11 ("Cpp-Text-Menu" "new")}}
      {Lisp-Entry "Cpp-Text-Menu" () 212 7 ("text" "goto-line" "recolorize-syntax" "code-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "update-catalog" "name:" "Context-Menu")}}})
"CppJava-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "CppJava-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.CppJava-Entry" () 37 9 ("jazz")
      {Lisp-Entry "CppJava-Entry" () 45 7 ("Indexed-Entry")}}})
"CppJava-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "CppJava-Explorer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.CppJava-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "CppJava-Explorer" () 45 7 ("Code-Explorer")
        {Lisp-Entry "Composites" () 48 12 ()}
        {Lisp-Entry "get-syntax" () 54 11 ("cpp/java")}
        {Lisp-Entry "current-expr" () 58 18 ("get-marked" "symbol" "kind" "=" "backward-expr" "and" "when")}
        {Lisp-Entry "forward-expr" () 63 18 ("set-start" "forward-simple-expr" "found" "forward" "0" "char-forward" "=" "when" "end" "copy" "start" "let" "forward-whites")}
        {Lisp-Entry "backward-expr" () 74 18 ("else" "expr-comment" "backward" "case" "0" "char-backward" "prev" "when" "backward-simple-expr" "found" "let" "start" "set-end" "backward-whites")}
        {Lisp-Entry "forward-simple-expr" () 91 19 ("false" "else" "literal" "reference" "list" "forward-composite" "forward-expr-comment" "=" "forward-constituent" "cpp/java-constituent?" "forward-string" "string-delimiter?" "cond" "when" "0" "char-forward" "c" "let")}
        {Lisp-Entry "backward-simple-expr" () 103 19 ("false" "else" "literal" "reference" "list" "backward-composite" "=" "backward-constituent" "cpp/java-constituent?" "backward-string" "string-delimiter?" "cond" "when" "0" "char-backward" "c" "let")}
        {Lisp-Entry "forward-all-expr" () 114 18 ("start" "set!" "forward-expr" "while" "end" "copy" "initial-end" "let")}
        {Lisp-Entry "backward-all-expr" () 121 18 ("end" "set!" "backward-expr" "while" "start" "copy" "initial-start" "let")}
        {Lisp-Entry "forward-constituent" () 128 19 ("false" "else" "symbol" "kind" "set!" "cpp/java-constituent?" "not" "null?" "or" "forward" "=" "cond" "0" "char-forward" "c" "let" "true" "while" "return" "lambda" "call/ec")}
        {Lisp-Entry "backward-constituent" () 144 19 ("false" "else" "symbol" "kind" "set!" "cpp/java-constituent?" "not" "null?" "or" "backward" "1" "=" "cond" "0" "char-backward" "c" "let" "true" "while" "return" "lambda" "call/ec")}
        {Lisp-Entry "forward-expr-comment" () 160 19 ("true" "expr-comment" "kind" "set!" "forward-expr" "forward")}
        {Lisp-Entry "forward-string" () 167 19 ("else" "string" "kind" "set!" "string-delimiter?" "=" "false" "null?" "cond" "0" "char-forward" "c" "let" "true" "while" "forward" "return" "lambda" "call/ec")}
        {Lisp-Entry "backward-string" () 187 19 ("else" "string" "kind" "set!" "string-delimiter?" "1" "=" "false" "null?" "cond" "0" "char-backward" "c" "let" "true" "while" "backward" "return" "lambda" "call/ec")}
        {Lisp-Entry "forward-composite" () 207 19 ("true" "kind" "set!" "0" "char-forward" "=" "when" "forward-whites" "forward-all-expr" "forward" "end" "set-start" "delimiter" "knd")}
        {Lisp-Entry "backward-composite" () 218 19 ("true" "kind" "end" "set!" "0" "char-backward" "=" "when" "backward-whites" "backward-all-expr" "backward" "start" "copy" "initial-start" "let" "delimiter" "knd")}
        {Lisp-Entry "skip-forward" () 230 18 ("get-marked" "=" "forward-expr" "and" "name")}
        {Lisp-Entry "skip-backward" () 234 18 ("get-marked" "=" "backward-expr" "and" "name")}
        {Lisp-Entry "forward-comments" () 238 11 ("next-paragraph")}
        {Lisp-Entry "backward-comments" () 242 11 ()}
        {Lisp-Entry "forward-whites" () 246 18 ("true" "set!" "forward-comments" "forward" "=" "whitespace?" "or" "and" "if" "0" "char-forward" "c" "not" "while" "false" "done?" "let")}
        {Lisp-Entry "backward-whites" () 257 11 ("set-col" "set-row" "get-col" "start" "get-row" "limit" "paragraphs" "get-syntax" "JzTextBackwardWhites" "col" "row" "valid?" "receive" "backward-whites" "unimplemented")}
        {Lisp-Entry "outer-expr" () 271 18 ("forward" "backward" "set-end" "backward-all-expr" "skipped" "set-start" "set!" "forward-all-expr" "when" "else" "forward-expr" "open-composite?" "backward-constituent" "forward-constituent" "cpp/java-constituent?" "backward-expr" "string-delimiter?" "close-composite?" "or" "=" "and" "cond" "next-char" "nxt" "0" "previous-char" "prv" "end" "e" "start" "copy" "s" "let" "true" "outer-composite?" "outer-composite?:")}
        {Lisp-Entry "open-composite?" () 305 11 ("memq?" "char")}
        {Lisp-Entry "close-composite?" () 309 11 ("memq?" "char")}}}})
"CppJava-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "CppJava-File-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.CppJava-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "CppJava-File-Entry" () 45 7 ("File-Entry")}}})
"CppJava-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "syntax" "CppJava-Syntax.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.syntax.CppJava-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "CppJava-Syntax" () 45 7 ("Text-Syntax")
        {Lisp-Entry "get-constituent-test" () 53 11 ("cpp/java-constituent?")}
        {Lisp-Entry "auto-complete-characters" () 62 11 ("auto-complete-characters")}
        {Lisp-Entry "auto-complete-char?" () 66 11 ("syntax" "text-constituent?" "not" "lower-case?" "upper-case?" "and" "=" "or" "last" "key")}}}})
"CppJava-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "CppJava-Text-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.CppJava-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "CppJava-Text-Preferences" () 47 7 ("title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "definition-color" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "line-comment-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "balanced-comment-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "keyword-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "user-macro-color" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "user-keyword-color" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "user-type-color" () 57 12 ("generate" "accessors")}
        {Lisp-Entry "macros" () 58 12 ("generate" "accessors")}
        {Lisp-Entry "keywords" () 59 12 ("generate" "accessors")}
        {Lisp-Entry "types" () 60 12 ("generate" "accessors")}
        {Lisp-Entry "completions" () 61 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 74 11 ("user-type-color" "user-macro-color" "user-keyword-color" "keyword-color" "balanced-comment-color" "line-comment-color" "definition-color" "title-color" "completions" "types" "keywords" "macros")}
        {Lisp-Entry "get-row-instance" () 80 11 ("nextmethod" "else" "Completion-List-Row" "completions" "Macro/Keyword/Type-List-Row" "types" "keywords" "macros" "Color-Row" "new" "user-type-color" "user-macro-color" "user-keyword-color" "keyword-color" "balanced-comment-color" "line-comment-color" "definition-color" "title-color" "field-name" "case" "property")}}
      {Lisp-Entry "Macro/Keyword/Type-List-Row" () 94 7 ("List-Row")
        {Lisp-Entry "get-subrow-class" () 97 11 ("Macro/Keyword/Type-Row")}}
      {Lisp-Entry "Macro/Keyword/Type-Row" () 107 7 ("Value-Row")}}})
"CppJava-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "CppJava-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.CppJava-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "CppJava-Text-View" () 45 7 ("Code-Text-View")
        {Lisp-Entry "install" () 48 11 ("get-user-type-color" "User-Type" "get-user-keyword-color" "User-Keyword" "get-user-macro-color" "User-Macro" "get-keyword-color" "Keyword" "get-balanced-comment-color" "Balanced-Comment" "get-line-comment-color" "Line-Comment" "get-definition-color" "Definition" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "new-syntax" () 61 11 ("CppJava-Syntax" "new")}
        {Lisp-Entry "flash-character?" () 71 11 ("false" "char")}
        {Lisp-Entry "return-press" () 80 11 ("tabulate" "nextmethod" "key")}
        {Lisp-Entry "commented?" () 90 11 ("Balanced-Comment" "Line-Comment" "Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "get-keywords" () 103 29 ()}
        {Lisp-Entry "get-user-macros" () 112 29 ("user")}
        {Lisp-Entry "get-user-keywords" () 116 29 ("user")}
        {Lisp-Entry "get-user-types" () 120 29 ("user")}
        {Lisp-Entry "mouse-insert" () 129 11 ("insert-string" "dynamic" "function" "with-update-locked" "last" "text-ending" "append!" "set!" "memq?" "not" "0" "element" "syntax" "text-constituent?" "and" "previous-cell" "get-char" "sc" "text-beginning" "/=" "when" "get-end" "end" "get-start" "start" "let" "copy")}
        {Lisp-Entry "compute-syntax-targets" () 150 11 ("get-user-types" "user-type" "get-user-keywords" "user-keyword" "get-user-macros" "user-macro" "get-keywords" "keyword" "str" "dynamic" "function" "map" "line-comment" "balanced-comment-backward" "false" "balanced-comment" "list" "append" "get-application" "get-user" "user" "let")}
        {Lisp-Entry "compute-syntax-automata" () 161 11 ("cpp/java-constituent?" "self" "false" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" () 165 11 ("User-Type" "user-type" "User-Keyword" "user-keyword" "User-Macro" "user-macro" "Keyword" "colorize-keyword" "keyword" "Title" "Line-Comment" "colorize-line-comment" "line-comment" "colorize-balanced-comment-backward" "balanced-comment-backward" "Balanced-Comment" "colorize-balanced-comment" "balanced-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "explorer-class" () 181 11 ("CppJava-Explorer")}
        {Lisp-Entry "get-context" () 190 11 ("cpp/java")}
        {Lisp-Entry "current-name" () 194 11 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" () 198 11 ("read-string-element" "0" "element" "=" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" () 206 11 ("current-name")}
        {Lisp-Entry "current-expr-range" () 210 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 216 11 ("get-range" "outer-expr" "end:" "start:" "self" "CppJava-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" () 222 11 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" () 231 12 ("String" "coerce" "append" "list")}
        {Lisp-Entry "get-headers" () 237 11 ("headers")}
        {Lisp-Entry "get-first-chapter" () 241 11 ("get-name" "null?" "text-beginning" "0" "list" "get-moniker" "file" "let" "car" "get-first-special?" "if" "lst")}
        {Lisp-Entry "get-remaining-chapters" () 253 11 ("cdr" "get-first-special?" "if" "list")}}}})
"Criteria"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "criteria" "Criteria.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.criteria.Criteria" () 37 9 ("jazz")
      {Lisp-Entry "Criteria" () 44 7 ("Component")
        {Lisp-Entry "construct-literal" () 48 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "properties" () 52 32 ()}
        {Lisp-Entry "foldable?" () 56 11 ("true")}
        {Lisp-Entry "fold-object" () 60 11 ("properties" "fold-key-pair" "when" "read-property" "get-name" "name:" "eq?" "if" "value" "let" "property" "dynamic" "function" "for-each" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 71 11 ("properties" "when" "read-property" "value" "let" "property" "dynamic" "function" "for-each" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "accepts?" () 86 26 ("false" "object")}}}})
"Cryptography-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "cryptography" "Cryptography-Provider.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.cryptography.Cryptography-Provider" () 37 9 ("jazz")
      {Lisp-Entry "Cryptography-Provider" () 44 7 ("crypt-hash-data" "crypt-destroy-hash" "crypt-create-hash" "int" "crypt-release-context" "crypt-acquire-context" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "crypt-acquire-context" "handle" "set!" "nextmethod")}
        {Lisp-Entry "destroy" () 56 11 ("nextmethod" "handle" "crypt-release-context")}
        {Lisp-Entry "hash-data" () 66 18 ("crypt-hash-data" "hash" "dynamic" "function" "with-hash" "data")}
        {Lisp-Entry "with-hash" () 72 11 ("crypt-destroy-hash" "when" "handle" "crypt-create-hash" "set!" "begin" "unwind-protect" "hash" "let" "proc")}
        {Lisp-Entry "int" () 87 17 ()}
        {Lisp-Entry "void" () 88 17 ()}
        {Lisp-Entry "int" () 89 17 ()}
        {Lisp-Entry "void" () 90 17 ()}
        {Lisp-Entry "Object" () 91 17 ()}}}})
"Cursor-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Cursor-Event.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.event.Cursor-Event" () 37 9 ("jazz")
      {Lisp-Entry "Cursor-Event" () 44 7 ("Event")
        {Lisp-Entry "position" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("position" "set!" "nextmethod" "pos" "sender" "kind")}
        {Lisp-Entry "get-position" () 55 18 ("position")}}}})
"Cursor-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "resource" "Cursor-File.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.resource.Cursor-File" () 37 9 ("jazz")
      {Lisp-Entry "Cursor-File" () 45 7 ("Resource-File")
        {Lisp-Entry "resource-class" () 48 11 ("Cursor-Resource")}
        {Lisp-Entry "resource-marker" () 52 11 ()}}}})
"Cursor-Resource"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "resource" "Cursor-Resource.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.resource.Cursor-Resource" () 37 9 ("jazz")
      {Lisp-Entry "Cursor-Resource" () 43 7 ("Resource")
        {Lisp-Entry "resource-type" () 52 16 ("cursor")}}}})
"Custom-Card"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "card" "Custom-Card.fusion"} {Time 128360666680000000L}
    {Lisp-Entry "jazz.designer.card.Custom-Card" () 37 9 ("jazz")
      {Lisp-Entry "Custom-Card" () 45 7 ("Card")
        {Lisp-Entry "setup?" () 48 8 ("false")}
        {Lisp-Entry "setup-properties" () 56 11 ("true" "set!" "layout-view" "client" "setup-entry" "domain" "property" "view" "dynamic" "function" "for-each-property-view" "setup?" "unless")}
        {Lisp-Entry "update-properties" () 65 11 ("set-property-value" "client" "read-property" "value" "let" "domain" "property" "view" "dynamic" "function" "for-each-property-view")}
        {Lisp-Entry "save-properties-new" () 72 11 ("false" "set-property-modified?" "set-property" "designer" "set-name" "name-info" "field-name" "eq?" "if" "get-property-value" "value" "let" "get-property-modified?" "domain" "property" "view" "dynamic" "function" "for-each-property-view" "client" "when")}
        {Lisp-Entry "for-each-property-view" () 84 11 ("property-domain" "domain" "get-property" "client" "class-of" "category-field" "property" "let*" "Property-View" "is?" "when" "level" "view" "dynamic" "function" "for-each-descendant" "proc")}
        {Lisp-Entry "find-property-view" () 93 18 ("get-property" "eq?" "Property-View" "is?" "and" "when" "level" "component" "dynamic" "function" "for-each-descendant" "return" "lambda" "call/ec" "property")}
        {Lisp-Entry "client-update" () 108 11 ("get-properties-mapping" "property-update" "read-property" "value" "locate" "view" "let" "type" "name" "property" "bind" "mapping" "dynamic" "function" "for-each" "update-properties" "setup-properties" "client" "when")}
        {Lisp-Entry "property-update" () 120 29 ("error" "else" "set-color" "color" "false" ":seconds?" "present" "null?" "if" "date" "set-checked?" "boolean" "set-content" "text" "either" "set-string-content" "string" "case" "type" "value" "view")}
        {Lisp-Entry "save-client" () 130 26 ("save-properties" "save-properties-new")}
        {Lisp-Entry "save-properties" () 135 11 ("get-properties-mapping" "true" "set!" "save-property" "when" "locate" "view" "type" "name" "property" "bind" "mapping" "dynamic" "function" "for-each" "false" "modified?" "let")}
        {Lisp-Entry "save-property" () 146 29 ("error" "else" "get-color" "color" "Date" "parse-string" "empty-string?" "if" "content" "let" "date" "get-checked?" "boolean" "get-content" "text" "true" "set-modified?" "false" "design-events?:" "get-string-content" "client" "designer" "set-property" "get-modified?" "when" "string" "case" "type" "property" "view")}
        {Lisp-Entry "get-properties-mapping" () 179 29 ()}
        {Lisp-Entry "property-change" () 188 11 ("client-update" "value" "property" "component")}}}})
"DAO"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "DAO.scm"} {Time 128366793860000000L}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "DAO.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "DAO" () 37 9 ("jazz")}})
"DBEngine"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "DBEngine.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao.DBEngine" () 37 9 ("jazz")
      {Lisp-Entry "DBEngine" () 40 25 ("_DBEngine" "Object")}}})
"DC-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "DC-Snapshot.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.DC-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "DC-Snapshot" () 46 7 ("Viewable" "Object")
        {Lisp-Entry "Snapshot-Size" () 49 12 ("Dimension")}
        {Lisp-Entry "memory-dc" () 53 8 ()}
        {Lisp-Entry "initialize" () 56 11 ("Snapshot-Size" ":destination-size" "bit-blit" "size:" "Cairo-Memory-Surface" "new" "memory-dc" "set!" "nextmethod" "size" "dc")}
        {Lisp-Entry "get-title" () 62 11 ()}
        {Lisp-Entry "get-viewer-class" () 66 11 ("DC-Viewer")}
        {Lisp-Entry "get-memory-dc" () 70 18 ("memory-dc")}}
      {Lisp-Entry "DC-Viewer" () 79 7 ("entry" "style:" "edge" "border-type:" "Dimension" "size:" "center" "layout-type:" "Layout-View")
        {Lisp-Entry "client" () 88 12 ("generate" "accessors")}}
      {Lisp-Entry "DC-Renderer" () 96 7 ("View")
        {Lisp-Entry "draw" () 99 11 ("get-size" ":destination-size" "size:" "bit-blit" "client" "get-memory-dc" "memory-dc" "Snapshot-Size" "size" "let" "lv" "lh" "update" "context" "dc")}}}})
"DDE-Server"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dde" "DDE-Server.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.dde.dde.DDE-Server" () 37 9 ("jazz")
      {Lisp-Entry "DDE-Server" () 43 7 ("Object")}
      {Lisp-Entry "DDE-Server" () 49 7 ("Object")
        {Lisp-Entry "callback" () 52 23 ("NULL" "else" "process-execute" "XTYP_EXECUTE" "process-connect" "XTYP_CONNECT" "ecase" "data" "str2" "str1" "type")}
        {Lisp-Entry "process-connect" () 59 16 ("1" "topic" "service")}
        {Lisp-Entry "process-execute" () 63 16 ("DDE_FACK" "DdeUnaccessData" "process-open" "=" "cond" "1" "length" "-" "2" "+" "param" "0" "subseq" "cmd" "when" "position" "return:" "find" "pos" "let" "DdeAccessData" "size" "command" "receive" "data" "topic")}
        {Lisp-Entry "process-open" () 74 16 ("edit-document" "tokenise" "File" "new" "anchorize" "file" "get-application" "appl" "let" "param")}
        {Lisp-Entry "query-string" () 85 16 ("CP_WINUNICODE" "DDE-Instance" "DdeQueryString" "make-string" "buffer" "let" "str")}}}})
"Data-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Data-Column" () 37 9 ("jazz")
      {Lisp-Entry "Data-Column" () 45 7 ("Data-Object")
        {Lisp-Entry "datatype" () 48 8 ()}
        {Lisp-Entry "width" () 49 8 ()}
        {Lisp-Entry "construct-literal" () 53 16 ("properties:" "name:" "self" "new" "properties" "name" "context")}
        {Lisp-Entry "initialize" () 57 11 ("properties~self" "width~self" "datatype~self" "parent~self" "name~self" "set!" "nextmethod" "others" "bind-keywords" "properties" "properties:" "width" "width:" "datatype" "datatype:" "parent" "parent:" "name" "name:")}
        {Lisp-Entry "print-schema" () 72 21 ("properties" "datatype" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "get-kind" () 85 11 ("column")}
        {Lisp-Entry "get-datatype" () 94 18 ("datatype")}
        {Lisp-Entry "get-width" () 98 18 ("width")}
        {Lisp-Entry "property-names" () 102 11 ("description" "identity-increment" "identity-seed" "identity-replication?" "identity?" "allow-zero-length?" "validation-text" "validation-rule" "display-format" "auto-increment?" "default-value" "ordinal-position" "nullable?" "datatype")}
        {Lisp-Entry "get-property" () 106 11 ("nextmethod" "apply" "else" "width" ":width" "datatype" ":datatype" "case" "rest" "keyword")}
        {Lisp-Entry "set-property" () 113 11 ("nextmethod" "else" "width" ":width" "datatype" "set!" ":datatype" "case" "value" "keyword")}
        {Lisp-Entry "get-prefered-width" () 125 18 ("datatype" "get-size" "either")}}}})
"Data-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Constraint.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.data.Data-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "Data-Constraint" () 45 7 ("Data-Object")
        {Lisp-Entry "construct-literal" () 49 16 ("properties:" "name:" "self" "new" "properties" "name" "context")}
        {Lisp-Entry "print-schema" () 58 21 ("properties" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "get-kind" () 70 11 ("constraint")}
        {Lisp-Entry "property-names" () 79 11 ("exclude-replication?" "checked?" "text")}}}})
"Data-Container"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Container.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Data-Container" () 38 9 ("jazz")
      {Lisp-Entry "Data-Container" () 46 7 ("Object")
        {Lisp-Entry "table" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("table~self" "set!" "nextmethod" "values" "table")}
        {Lisp-Entry "get-table" () 62 18 ("table")}
        {Lisp-Entry "save" () 71 18 ("save-statement" "execute" "user" "user:" "connection")}
        {Lisp-Entry "save-statement" () 75 11 ("tie" "format" "if" "format-value" "values" "get-columns" "column" "dynamic" "function" "map" "join" "columns" "table" "get-name" "name" "let" "user")}
        {Lisp-Entry "format-value" () 83 11 ("->string" "else" "if" "boolean?" "format" "string?" "cond" "value")}}}})
"Data-Entity"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Entity.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Data-Entity" () 37 9 ("jazz")
      {Lisp-Entry "Data-Entity" () 45 7 ("Data-Object")
        {Lisp-Entry "owner" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("owner~self" "set!" "nextmethod" "apply" "others" "owner" "bind-keywords" "rest")}
        {Lisp-Entry "get-owner" () 62 18 ("owner")}
        {Lisp-Entry "get-children" () 66 26 ()}
        {Lisp-Entry "get-categorized-children" () 70 26 ("get-children")}
        {Lisp-Entry "create" () 74 26 ("name" "kind")}
        {Lisp-Entry "add" () 78 26 ("object" "kind")}
        {Lisp-Entry "object-name" () 82 21 ("get-name" "object")}}}})
"Data-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Data-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.frame.Data-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Data-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-image" () 57 11 ("Bitmap-Resource")}}}})
"Data-Group"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "view" "Data-Group.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.view.Data-Group" () 37 9 ("jazz")
      {Lisp-Entry "Data-Group" () 46 7 ("Group")}}})
"Data-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Index.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.data.Data-Index" () 37 9 ("jazz")
      {Lisp-Entry "Data-Index" () 45 7 ("Data-Object")
        {Lisp-Entry "construct-literal" () 49 16 ("properties:" "name:" "self" "new" "properties" "name" "context")}
        {Lisp-Entry "print-schema" () 58 21 ("properties" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "get-kind" () 70 11 ("index")}
        {Lisp-Entry "property-names" () 79 11 ("fields/orders" "pad-index?" "fill-factor" "recompute-statistics?" "ignore-duplicates?" "clustered?" "unique?")}
        {Lisp-Entry "present-property" () 83 11 ("nextmethod" "else" "second" "first" "field/order" "dynamic" "function" "map" "format" "fields/orders" "case" "value" "property")}}}})
"Data-Object"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Object.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Data-Object" () 37 9 ("jazz")
      {Lisp-Entry "Data-Object" () 45 7 ("Object")
        {Lisp-Entry "name" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "properties" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("properties~self" "parent~self" "name~self" "set!" "nextmethod" "properties" "properties:" "parent" "parent:" "name" "name:")}
        {Lisp-Entry "print" () 60 11 ("name" "either" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-name" () 71 18 ("name")}
        {Lisp-Entry "set-name" () 75 18 ("name" "set!" "value")}
        {Lisp-Entry "get-parent" () 79 18 ("parent")}
        {Lisp-Entry "set-parent" () 83 18 ("parent" "set!" "value")}
        {Lisp-Entry "get-kind" () 87 26 ()}
        {Lisp-Entry "Error" () 96 14 ("cons")}
        {Lisp-Entry "Inexistant" () 99 14 ("cons")}
        {Lisp-Entry "property-names" () 103 26 ()}
        {Lisp-Entry "present-property" () 107 26 ("else" "present" "Datatype" "Nil" "typecase" "value" "property")}
        {Lisp-Entry "get-properties" () 114 18 ("properties")}
        {Lisp-Entry "has-property?" () 118 18 ("get-property" "neq?" "Box" "not-found" "let" "property")}
        {Lisp-Entry "get-property" () 123 26 ("error" "neq?" "if" "Inexistant" "not-found:" "properties" "getf" "value" "let" "Error" "not-found" "keyword")}
        {Lisp-Entry "set-property" () 132 26 ("cdr" "set-car!" "list" "append!" "set!" "null?" "if" "properties" "getprop" "pair" "let" "value" "keyword")}}}})
"Data-Primary-Key"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Primary-Key.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.data.Data-Primary-Key" () 37 9 ("jazz")
      {Lisp-Entry "Data-Primary-Key" () 45 7 ("Data-Object")
        {Lisp-Entry "construct-literal" () 49 16 ("properties:" "name:" "self" "new" "properties" "name" "context")}
        {Lisp-Entry "print-schema" () 58 21 ("properties" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "get-kind" () 70 11 ("primary-key")}
        {Lisp-Entry "property-names" () 79 11 ("fill-factor" "clustered?" "fields/orders")}
        {Lisp-Entry "present-property" () 83 11 ("nextmethod" "else" "second" "first" "field/order" "dynamic" "function" "map" "format" "fields/orders" "case" "value" "property")}}}})
"Data-Procedure"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Procedure.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.data.Data-Procedure" () 37 9 ("jazz")
      {Lisp-Entry "Data-Procedure" () 45 7 ("Data-Entity")
        {Lisp-Entry "construct-literal" () 49 16 ("properties:" "name:" "self" "new" "properties" "name" "context")}
        {Lisp-Entry "print-schema" () 58 21 ("properties" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "get-kind" () 70 11 ("procedure")}
        {Lisp-Entry "property-names" () 79 11 ("text")}}}})
"Data-Relation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Relation.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Data-Relation" () 37 9 ("jazz")
      {Lisp-Entry "Data-Relation" () 45 7 ("Data-Entity")
        {Lisp-Entry "primary-table" () 48 8 ()}
        {Lisp-Entry "primary-columns" () 49 8 ()}
        {Lisp-Entry "foreign-table" () 50 8 ()}
        {Lisp-Entry "foreign-columns" () 51 8 ()}
        {Lisp-Entry "construct-literal" () 55 16 (":properties" "name:" "self" "new" "properties" "name" "context")}
        {Lisp-Entry "initialize" () 59 11 ("properties~self" "foreign-columns~self" "foreign-table~self" "primary-columns~self" "primary-table~self" "parent~self" "name~self" "set!" "nextmethod" "others" "foreign-columns" "foreign-table" "primary-columns" "primary-table" "properties" "parent" "null" "name" "bind-keywords" "rest")}
        {Lisp-Entry "print-schema" () 77 21 ("properties" "foreign-columns" "foreign-table" "primary-columns" "primary-table" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "get-kind" () 93 11 ("relation")}
        {Lisp-Entry "get-primary-table" () 102 18 ("primary-table")}
        {Lisp-Entry "get-primary-columns" () 106 18 ("primary-columns")}
        {Lisp-Entry "get-foreign-table" () 110 18 ("foreign-table")}
        {Lisp-Entry "get-foreign-columns" () 114 18 ("foreign-columns")}
        {Lisp-Entry "property-names" () 118 11 ("exclude-replication?" "checked?" "right?" "left?" "delete-cascade?" "update-cascade?" "unique?" "foreign-columns" "foreign-table" "primary-columns" "primary-table")}
        {Lisp-Entry "present-property" () 122 11 ("nextmethod" "else" "format" "foreign-columns" "primary-columns" "case" "value" "property")}
        {Lisp-Entry "get-property" () 128 11 ("nextmethod" "apply" "else" "foreign-columns" "foreign-columns:" "foreign-table" "foreign-table:" "primary-columns" "primary-columns:" "primary-table" "primary-table:" "case" "rest" "keyword")}
        {Lisp-Entry "set-property" () 137 11 ("nextmethod" "else" "foreign-columns" "foreign-columns:" "foreign-table" "foreign-table:" "primary-columns" "primary-columns:" "primary-table" "set!" "primary-table:" "case" "value" "keyword")}}}})
"Data-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Data-Row" () 38 9 ("jazz")
      {Lisp-Entry "Data-Row" () 46 7 ("Data-Container")
        {Lisp-Entry "values" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("get-columns" "column" "dynamic" "function" "map" "either" "values~self" "set!" "nextmethod" "values" "table")}
        {Lisp-Entry "print" () 57 11 ("values" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-values" () 68 18 ("values")}
        {Lisp-Entry "get" () 77 18 ("get" "map" "else" "error" "get-name" "ci=" "when" "value" "column" "dynamic" "function" "for-each" "table" "get-columns" "columns" "let" "return" "lambda" "call/ec" "string?" "values" "element" "integer?" "cond" "name/rank")}
        {Lisp-Entry "set" () 94 18 ("error" "cdr" "set!" "return" "set-car!" "get-name" "ci=" "when" "car" "column" "and" "while" "values" "scan" "table" "get-columns" "columns" "let" "value" "name")}}}})
"Data-Schema"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Schema.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Data-Schema" () 37 9 ("jazz")
      {Lisp-Entry "Data-Schema" () 45 7 ("Entity" "Data-Entity")
        {Lisp-Entry "tables" () 48 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "views" () 49 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "relations" () 50 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "procedures" () 51 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "construct-literal" () 55 16 (":procedures" ":relations" ":views" ":tables" "properties:" "self" "new" "procedures" "relations" "views" "tables" "properties" "context")}
        {Lisp-Entry "initialize" () 59 11 ("add-procedures" "add-relations" "add-views" "add-tables" "properties~self" "parent~self" "name~self" "set!" "nextmethod" "procedures" "procedures:" "relations" "relations:" "views" "views:" "tables" "tables:" "properties" "properties:" "parent" "parent:" "name" "name:")}
        {Lisp-Entry "print" () 70 11 ("procedures" "relations" "views" "tables" "hashtable-length" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-schema" () 85 18 ("print-procedures" "print-relations" "print-views" "print-tables" "properties" "self" "class-of" "type-name" "identifier-name" "format" "sort-predicates" "greater" "smaller" "equal" "receive" "printer")}
        {Lisp-Entry "print-tables" () 97 11 ("object-name" "key:" "tables" "gather" "sort" "print-schema" "false" "set!" "if" "table" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer" "smaller")}
        {Lisp-Entry "print-views" () 109 11 ("object-name" "key:" "views" "gather" "sort" "print-schema" "false" "set!" "if" "view" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer" "smaller")}
        {Lisp-Entry "print-relations" () 121 11 ("object-name" "key:" "relations" "gather" "sort" "print-schema" "false" "set!" "if" "relation" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer" "smaller")}
        {Lisp-Entry "print-procedures" () 133 11 ("object-name" "key:" "procedures" "gather" "sort" "print-schema" "false" "set!" "if" "procedure" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer" "smaller")}
        {Lisp-Entry "get-kind" () 150 11 ("schema")}
        {Lisp-Entry "create" () 159 11 ("Data-Procedure" "procedure" "Data-Relation" "relation" "Data-View" "view" "name:" "Data-Table" "new" "table" "case" "name" "kind")}
        {Lisp-Entry "add" () 167 11 ("add-procedure" "procedure" "add-relation" "relation" "add-view" "view" "add-table" "table" "case" "object" "kind")}
        {Lisp-Entry "get-children" () 180 11 ("get-output" "procedures" "relations" "views" "tables" "for-each" "put" "object" "dynamic" "function" "add" "List-Factory" "new" "fact" "let*")}
        {Lisp-Entry "get-categorized-children" () 192 11 ("get-output" "get-categorized-procedures" "get-categorized-relations" "get-categorized-views" "get-categorized-tables" "put-sequence!" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "get-tables" () 206 18 ("tables" "gather")}
        {Lisp-Entry "get-categorized-tables" () 210 18 ("collect-linked-tables" "object-name" "key:" "collect-normal-tables" "sort" "append!" "get-tables" "tables" "let" "sort-predicates" "greater" "smaller" "equal" "receive")}
        {Lisp-Entry "collect-normal-tables" () 217 18 (":linked?" "get-property" "not" "table" "dynamic" "function" "collect-if" "tables")}
        {Lisp-Entry "collect-linked-tables" () 223 18 (":linked?" "get-property" "table" "dynamic" "function" "collect-if" "tables")}
        {Lisp-Entry "get-table" () 229 18 ("tables" "hash-ref" "name")}
        {Lisp-Entry "add-table" () 233 18 ("get-name" "tables" "hash-set!" "self" "set-parent" "table")}
        {Lisp-Entry "add-tables" () 238 18 ("add-table" "for-each" "tables")}
        {Lisp-Entry "get-views" () 247 18 ("views" "gather")}
        {Lisp-Entry "get-categorized-views" () 251 18 ("object-name" "key:" "get-views" "sort" "sort-predicates" "greater" "smaller" "equal" "receive")}
        {Lisp-Entry "get-view" () 256 18 ("views" "hash-ref" "name")}
        {Lisp-Entry "add-view" () 260 18 ("get-name" "views" "hash-set!" "self" "set-parent" "view")}
        {Lisp-Entry "add-views" () 265 18 ("add-view" "for-each" "views")}
        {Lisp-Entry "get-relations" () 274 18 ("relations" "gather")}
        {Lisp-Entry "get-categorized-relations" () 278 18 ("object-name" "key:" "get-relations" "sort" "sort-predicates" "greater" "smaller" "equal" "receive")}
        {Lisp-Entry "get-relation" () 283 18 ("relations" "hash-ref" "name")}
        {Lisp-Entry "add-relation" () 287 18 ("get-name" "relations" "hash-set!" "self" "set-parent" "relation")}
        {Lisp-Entry "add-relations" () 292 18 ("add-relation" "for-each" "relations")}
        {Lisp-Entry "get-procedures" () 301 18 ("procedures" "gather")}
        {Lisp-Entry "get-categorized-procedures" () 305 18 ("object-name" "key:" "get-procedures" "sort" "sort-predicates" "greater" "smaller" "equal" "receive")}
        {Lisp-Entry "get-procedure" () 310 18 ("procedures" "hash-ref" "name")}
        {Lisp-Entry "add-procedure" () 314 18 ("get-name" "procedures" "hash-set!" "self" "set-parent" "procedure")}
        {Lisp-Entry "add-procedures" () 319 18 ("add-procedure" "for-each" "procedures")}
        {Lisp-Entry "present" () 328 18 ("name:" "get-property")}
        {Lisp-Entry "import-inventory" () 337 23 ("import-inventory" "true" "read-only?:" "get-inventory" "inventory" "let" "new-connection" "connection" "with-closed" "properties:" "self" "new" "schema" ":data-source" "get-provider" "external-name" ":provider" "present" "name:" "list" "properties" "let*" "reporter" "data-source" "source-name")}
        {Lisp-Entry "import-inventory" () 346 11 ("import-procedures" "import-relations" "import-views" "import-tables" "reporter" "inventory" "source-name")}
        {Lisp-Entry "import-tables" () 353 11 ("add-table" "create-constraints" "set-constraints" "create-triggers" "set-triggers" "create-indexes" "set-indexes" "create-columns" "set-columns" "create-primary-key" "set-primary-key" ":linked?" "getf" "unless" "user-message" "properties:" "name:" "owner:" "Data-Table" "new" "data-table" "table-properties" "properties" "get-title" "name" "get-owner" "owner" "let*" "table" "dynamic" "function" "for-each" "get-tables" "tables" "with-closed" "columns-ordinal-position-consecutive?" "columns-consecutive?" "let" "reporter" "inventory" "source-name")}
        {Lisp-Entry "table-properties" () 372 11 ("get-source-table-name" ":source-table-name" "get-connect" "essay" ":connect" "get-validation-text" ":validation-text" "get-validation-rule" ":validation-rule" "get-description" ":description" ":linked?" "list" "get-linked?" "linked?" "let" "table")}
        {Lisp-Entry "create-primary-key" () 383 11 ("properties:" "name:" "Data-Primary-Key" "new" "primary-key-properties" "properties" "get-title" "name" "let" "when" "get-primary-key" "primary-key" "with-closed" "table" "data-table")}
        {Lisp-Entry "primary-key-properties" () 391 11 ("get-fields/orders" ":fields/orders" "get-fill-factor" ":fill-factor" "get-clustered?" ":clustered?" "list" "primary-key")}
        {Lisp-Entry "create-columns" () 398 11 ("properties:" "name:" "Data-Column" "new" "increase!" "not" "essay" "column-properties" "properties" "get-title" "name" "column" "dynamic" "function" "map" "get-columns" "columns" "with-closed" "0" "ordinal-position" "let" "columns-consecutive?" "table" "data-table")}
        {Lisp-Entry "column-properties" () 409 11 ("get-identity-increment" ":identity-increment" "get-identity-seed" ":identity-seed" "get-identity-replication?" ":identity-replication?" "get-identity?" ":identity?" "get-auto-increment?" ":auto-increment?" "get-display-format" ":display-format" "get-ordinal-position" "either" ":ordinal-position" "get-description" ":description" "get-allow-zero-length?" ":allow-zero-length?" "get-validation-text" ":validation-text" "get-validation-rule" ":validation-rule" "get-default-value" ":default-value" "get-nullable?" "nullable?:" "get-datatype" ":datatype" "list" "ordinal-position" "column")}
        {Lisp-Entry "create-indexes" () 427 11 ("properties:" "name:" "Data-Index" "new" "index-properties" "properties" "get-title" "name" "let" "index" "dynamic" "function" "map" "get-indexes" "indexes" "with-closed" "table" "data-table")}
        {Lisp-Entry "index-properties" () 436 11 ("get-fields/orders" ":fields/orders" "get-pad-index?" ":pad-index?" "get-fill-factor" ":fill-factor" "get-recompute-statistics?" ":recompute-statistics?" "get-ignore-duplicates?" ":ignore-duplicates?" "get-clustered?" ":clustered?" "get-unique?" "unique?:" "list" "index")}
        {Lisp-Entry "create-triggers" () 447 11 ("properties:" "name:" "Data-Trigger" "new" "trigger-properties" "properties" "get-title" "name" "let" "trigger" "dynamic" "function" "map" "get-triggers" "triggers" "with-closed" "table" "data-table")}
        {Lisp-Entry "trigger-properties" () 456 11 ("get-text" "text:" "list" "trigger")}
        {Lisp-Entry "create-constraints" () 461 11 ("properties:" "name:" "Data-Constraint" "new" "constraint-properties" "properties" "get-title" "name" "let" "constraint" "dynamic" "function" "map" "get-constraints" "constraints" "with-closed" "table" "data-table")}
        {Lisp-Entry "constraint-properties" () 470 11 ("get-exclude-replication?" "exclude-replication?:" "get-checked?" "checked?:" "get-text" "text:" "list" "constraint")}
        {Lisp-Entry "import-views" () 477 11 ("add-view" "user-message" "properties:" "name:" "Data-View" "new" "data-view" "view-properties" "properties" "get-title" "name" "let*" "view" "dynamic" "function" "for-each" "get-views" "views" "with-closed" "reporter" "inventory" "source-name")}
        {Lisp-Entry "view-properties" () 488 11 ("get-text" "text:" "list" "view")}
        {Lisp-Entry "import-relations" () 493 11 ("add-relation" "user-message" "properties:" "name:" "Data-Relation" "new" "data-relation" "relation-properties" "properties" "get-title" "name" "let*" "relation" "dynamic" "function" "for-each" "get-relations" "relations" "with-closed" "reporter" "inventory" "source-name")}
        {Lisp-Entry "relation-properties" () 504 11 ("get-exclude-replication?" "exclude-replication?:" "get-checked?" "checked?:" "get-right?" "right?:" "get-left?" "left?:" "get-delete-cascade?" "delete-cascade?:" "get-update-cascade?" "update-cascade?:" "get-unique?" "unique?:" "get-foreign-field-names" "foreign-columns:" "get-foreign-table" "foreign-table:" "get-primary-field-names" "primary-columns:" "get-primary-table" "primary-table:" "list" "relation")}
        {Lisp-Entry "import-procedures" () 519 11 ("add-procedure" "user-message" "properties:" "name:" "Data-Procedure" "new" "data-procedure" "procedure-properties" "properties" "get-title" "name" "let*" "procedure" "dynamic" "function" "for-each" "get-procedures" "procedures" "with-closed" "reporter" "inventory" "source-name")}
        {Lisp-Entry "procedure-properties" () 530 11 ("get-text" "text:" "list" "procedure")}
        {Lisp-Entry "get-factory" () 540 11 ("Data-Schema-Factory" "new")}
        {Lisp-Entry "get-factories" () 544 11 ()}
        {Lisp-Entry "get-presentation" () 548 11 ("name:" "get-property")}
        {Lisp-Entry "set-presentation" () 552 11 ("name:" "set-property" "presentation" "controller")}
        {Lisp-Entry "can-cut-entity?" () 556 11 ("true" "false")}
        {Lisp-Entry "can-copy-entity?" () 562 11 ("true" "false")}
        {Lisp-Entry "can-paste-entity?" () 568 11 ("false")}
        {Lisp-Entry "determine-paster" () 572 11 ("rest")}
        {Lisp-Entry "can-rename-entity?" () 576 11 ("true")}
        {Lisp-Entry "can-delete-entity?" () 580 11 ("true")}
        {Lisp-Entry "can-move-entity?" () 584 11 ("true")}
        {Lisp-Entry "can-view-properties?" () 588 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 592 11 ()}}}})
"Data-Schema-Factory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "factory" "Data-Schema-Factory.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.schema.factory.Data-Schema-Factory" () 37 9 ("jazz")
      {Lisp-Entry "Data-Schema-Factory" () 45 7 ("Entity-Factory")
        {Lisp-Entry "get-class" () 48 11 ("Data-Schema")}
        {Lisp-Entry "get-name-prohibited?" () 52 11 ("false")}
        {Lisp-Entry "get-name-mandatory?" () 56 11 ("true")}
        {Lisp-Entry "get-name-unicity?" () 60 11 ("true")}
        {Lisp-Entry "presentation->name" () 64 11 ("presentation")}
        {Lisp-Entry "get-factory-presentation" () 68 11 ()}
        {Lisp-Entry "get-factory-image" () 72 11 ("Bitmap-Resource")}}}})
"Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Source.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.data.Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "Data-Source" () 45 7 ("Schema-Source" "Component")
        {Lisp-Entry "username" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "password" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 57 11 ("self" "SQL-Connections-Manager" "set-active-data-source")}
        {Lisp-Entry "validate" () 66 26 ()}
        {Lisp-Entry "get-provider" () 75 26 ("external-name" "Provider" "get-provider")}
        {Lisp-Entry "new-connection" () 84 26 ()}
        {Lisp-Entry "get-connection-string" () 88 26 ()}
        {Lisp-Entry "get-connection-properties" () 92 26 ()}
        {Lisp-Entry "new-inventory" () 101 26 ("rest" "connection")}
        {Lisp-Entry "get-data-schema" () 110 11 ("self" "present" "Data-Schema" "import-inventory" "reporter" "reporter:")}
        {Lisp-Entry "present" () 119 26 ()}
        {Lisp-Entry "get-class-presentation" () 129 16 ()}
        {Lisp-Entry "get-class-image" () 134 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-name-mandatory?" () 139 16 ("true")}
        {Lisp-Entry "get-name-unicity?" () 144 16 ("true")}
        {Lisp-Entry "presentation->name" () 149 16 ("presentation")}
        {Lisp-Entry "name->presentation" () 154 16 ("name")}
        {Lisp-Entry "property-presentation" () 159 16 ("nextmethod" "else" "password" "username" "field-name" "case" "property")}
        {Lisp-Entry "persist-property?" () 167 16 ("nextmethod" "else" "persist-passwords?" "password:" "persist-usernames?" "username:" "case" "get-process" "process" "let" "property")}
        {Lisp-Entry "get-categorized-properties" () 175 11 ("password" "username" "class-info")}
        {Lisp-Entry "get-row-instance" () 179 11 ("nextmethod" "else" "Password-Row" "password" "false" "nullable?:" "String-Row" "new" "username" "field-name" "case" "property")}}}})
"Data-Source-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "view" "Data-Source-Browser.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.view.Data-Source-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Data-Source-Browser" () 48 7 ("source" "top-padding:" "2" "left-padding:" "body" "content" "scroller" "on-provider-change" "form:" "Event-Handler" "content-change-handler:" "provider" "edge" "border-type:" "1" "provider-border" "0" "Point" "position:" "title:" "provider-label" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "provider" () 51 12 ("set-provider" "get-provider")}
        {Lisp-Entry "install" () 65 11 ("setup-providers" "nextmethod" "rest")}
        {Lisp-Entry "get-provider" () 75 18 ("provider")}
        {Lisp-Entry "set-provider" () 79 18 ("provider-update" "provider" "set!" "value")}
        {Lisp-Entry "get-data-source" () 84 18 ("get-data-source" "when" "get-data-source-browser" "browser" "let")}
        {Lisp-Entry "set-data-source" () 90 18 ("get-data-source-browser" "set-data-source" "provider-update" "set-value" "get-provider" "external-name" "set!" "set-entry" "null?" "if" "provider" "locate" "combo" "let" "source")}
        {Lisp-Entry "setup-username/password-mode" () 100 18 ("setup-username/password-mode" "when" "get-data-source-browser" "browser" "let")}
        {Lisp-Entry "set-default-focus" () 111 18 ()}
        {Lisp-Entry "on-provider-change" () 115 11 ("provider-update" "get-value" "set!" "provider" "locate" "combo" "let" "evt")}
        {Lisp-Entry "on-return-press" () 121 11 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "layout" () 131 11 ("false" "get-size" "-" "set-size" "0" "Point" "source" "set-position" "provider-border" "true" "provider-label" "locate" "set-visible?" "begin" "provider" "null?" "if")}
        {Lisp-Entry "validate-content" () 149 11 ("when" "get-data-source-browser" "browser" "let" "provider" "locate" "validate-content")}
        {Lisp-Entry "setup-providers" () 161 11 ("set-entry" "set-choices" "second" "key:" "Provider" "get-providers" "present" "external-name" "list" "dynamic" "function" "map" "" "sort" "choices" "provider" "locate" "combo" "let")}
        {Lisp-Entry "get-data-source-browser" () 178 11 ("source" "locate" "first-child")}
        {Lisp-Entry "provider-update" () 182 11 ("layout-view" "parent:" "Provider" "get-provider" "browser-class" "new" "provider" "when" "close-children" "locate" "source" "let")}}}})
"Data-Source-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "view" "Data-Source-Chooser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.view.Data-Source-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Data-Source-Chooser" () 48 7 ("on-cancel" ":host" "cancel" "on-update" ":guest" "Event-Handler" "action-handler:" "default?:" "update" "browser" "0" "Rect" "layout-insets:" "fill" "layout-type:" "database" "Default-GUI" "description" "Label-Bold" "Font" "font:" "9" "Point" "position:" "title:" "title" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "provider" () 51 12 ()}
        {Lisp-Entry "finish" () 64 11 ("target-provider" "setup-browser" "nextmethod" "rest")}
        {Lisp-Entry "target-provider" () 69 29 ("provider")}
        {Lisp-Entry "dialog-title" () 79 16 ()}
        {Lisp-Entry "dialog-size" () 84 16 ("Dimension")}
        {Lisp-Entry "get-provider" () 93 18 ("provider")}
        {Lisp-Entry "set-provider" () 97 18 ("get-browser" "set-provider" "provider" "set!" "value")}
        {Lisp-Entry "get-data-source" () 102 18 ("get-browser" "get-data-source")}
        {Lisp-Entry "set-data-source" () 106 18 ("get-browser" "set-data-source" "value")}
        {Lisp-Entry "get-browser" () 110 18 ("browser" "locate")}
        {Lisp-Entry "setup-browser" () 119 11 ("set-default-focus" "browser" "locate" "set-provider" "provider")}
        {Lisp-Entry "resize" () 129 11 ("cancel" "update" "move-figure" "database" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "get-tab-stops" () 136 11 ("get-browser" "get-tab-stops")}
        {Lisp-Entry "on-return-press" () 140 11 ("update-database" "evt")}
        {Lisp-Entry "on-update" () 144 11 ("update-database" "evt")}
        {Lisp-Entry "on-close" () 148 11 ("get-host" "close" "evt")}
        {Lisp-Entry "update-database" () 157 29 ("end-modal" "get-data-source" "source" "get-host" "dialog" "let")}
        {Lisp-Entry "Header-Color" () 168 14 ("blue:" "green:" "red:" "Color" "new")}
        {Lisp-Entry "draw" () 172 11 ("Header-Color" "White" "name:" "Color" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "update" "context" "dc")}}}})
"Data-Source-Widget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "view" "Data-Source-Widget.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.view.Data-Source-Widget" () 37 9 ("jazz")
      {Lisp-Entry "Data-Source-Widget" () 46 7 ("Layout-View")
        {Lisp-Entry "get-data-source" () 54 26 ()}
        {Lisp-Entry "set-data-source" () 58 26 ("source")}
        {Lisp-Entry "setup-username/password-mode" () 62 26 ()}
        {Lisp-Entry "set-default-focus" () 71 26 ()}}}})
"Data-Sources"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Sources.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.data.Data-Sources" () 37 9 ("jazz")
      {Lisp-Entry "Data-Sources" () 46 7 ("Group")
        {Lisp-Entry "default-source" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-image" () 58 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-presentation" () 62 11 ()}
        {Lisp-Entry "get-addable-classes" () 66 11 ("SQLServer-Data-Source" "Access-Data-Source" "Data-Group" "list")}}}})
"Data-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Table.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Data-Table" () 37 9 ("jazz")
      {Lisp-Entry "Data-Table" () 45 7 ("Data-Entity")
        {Lisp-Entry "request" () 48 8 ()}
        {Lisp-Entry "primary-key" () 49 8 ()}
        {Lisp-Entry "columns" () 50 8 ()}
        {Lisp-Entry "indexes" () 51 8 ()}
        {Lisp-Entry "triggers" () 52 8 ()}
        {Lisp-Entry "constraints" () 53 8 ()}
        {Lisp-Entry "rows" () 54 8 ()}
        {Lisp-Entry "missing?" () 55 8 ("false")}
        {Lisp-Entry "construct-literal" () 59 16 (":constraints" ":triggers" ":indexes" ":columns" ":primary-key" "properties:" "name:" "self" "new" "constraints" "triggers" "indexes" "columns" "primary-key" "properties" "name" "context")}
        {Lisp-Entry "initialize" () 63 11 ("rows~self" "set-constraints" "set-triggers" "set-indexes" "create-columns" "either" "set-columns" "set-primary-key" "request~self" "properties~self" "parent~self" "name~self" "owner~self" "set!" "nextmethod" "rows" "rows:" "constraints" "constraints:" "triggers" "triggers:" "indexes" "indexes:" "column-names" "column-names:" "columns" "columns:" "primary-key" "primary-key:" "request" "request:" "properties" "properties:" "parent" "parent:" "name" "name:" "owner" "owner:")}
        {Lisp-Entry "create-columns" () 78 11 ("name:" "Data-Column" "new" "name" "dynamic" "function" "map" "column-names")}
        {Lisp-Entry "print" () 84 11 ("format-plural" "name" "if" "format" "rows" "length" "let" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-schema" () 99 21 ("print-constraints" "print-triggers" "print-indexes" "print-columns" "print-primary-key" "properties" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "print-primary-key" () 112 11 ("print-schema" "primary-key" "null?" "if" "format" "printer")}
        {Lisp-Entry "print-columns" () 120 11 ("object-name" "key:" "columns" "" "sort" "print-schema" "false" "set!" "if" "column" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer")}
        {Lisp-Entry "print-indexes" () 132 11 ("object-name" "key:" "indexes" "" "sort" "print-schema" "false" "set!" "if" "index" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer")}
        {Lisp-Entry "print-triggers" () 144 11 ("object-name" "key:" "triggers" "" "sort" "print-schema" "false" "set!" "if" "trigger" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer")}
        {Lisp-Entry "print-constraints" () 156 11 ("object-name" "key:" "constraints" "" "sort" "print-schema" "false" "set!" "if" "constraint" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer")}
        {Lisp-Entry "get-kind" () 173 11 ("table")}
        {Lisp-Entry "create" () 182 11 ("Data-Constraint" "constraint" "Data-Trigger" "trigger" "Data-Index" "index" "Data-Column" "column" "name:" "Data-Primary-Key" "new" "primary-key" "case" "name" "kind")}
        {Lisp-Entry "add" () 191 11 ("add-constraint" "constraint" "add-trigger" "trigger" "add-index" "index" "add-column" "column" "add-primary-key" "primary-key" "case" "object" "kind")}
        {Lisp-Entry "get-request" () 205 18 ("request")}
        {Lisp-Entry "get-children" () 209 11 ("constraints" "triggers" "indexes" "columns" "list" "primary-key" "if" "append")}
        {Lisp-Entry "get-categorized-children" () 213 11 ("get-output" "constraints" "triggers" "indexes" "object-name" "key:" "columns" "" "sort" "put-sequence" "put" "primary-key" "when" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "property-names" () 224 11 ("description" "validation-text" "validation-rule" "source-table-name" "connect" ":linked?" "get-property" "if")}
        {Lisp-Entry "get-primary-key" () 235 18 ("primary-key")}
        {Lisp-Entry "set-primary-key" () 239 18 ("self" "set-parent" "when" "primary-key" "set!" "value")}
        {Lisp-Entry "add-primary-key" () 245 18 ("set-primary-key" "primary-key")}
        {Lisp-Entry "get-columns" () 255 18 ("columns")}
        {Lisp-Entry "set-columns" () 259 18 ("self" "set-parent" "column" "dynamic" "function" "for-each" "columns" "set!" "value")}
        {Lisp-Entry "get-columns-sql" () 266 18 ("columns" "append" "null?" "if" "get-name" "name" "let" "column" "dynamic" "function" "map" "join" "prefix" "prefix:")}
        {Lisp-Entry "add-column" () 276 18 ("self" "set-parent" "cons" "columns" "set!" "column")}
        {Lisp-Entry "find-column" () 282 18 ("values" "return" "get-name" "=" "when" "columns" "in" "column" "0" "from" "rank" "for" "loop" "name")}
        {Lisp-Entry "get-indexes" () 295 18 ("indexes")}
        {Lisp-Entry "set-indexes" () 299 18 ("self" "set-parent" "index" "dynamic" "function" "for-each" "indexes" "set!" "value")}
        {Lisp-Entry "add-index" () 306 18 ("self" "set-parent" "cons" "indexes" "set!" "index")}
        {Lisp-Entry "get-triggers" () 317 18 ("triggers")}
        {Lisp-Entry "set-triggers" () 321 18 ("self" "set-parent" "trigger" "dynamic" "function" "for-each" "triggers" "set!" "value")}
        {Lisp-Entry "add-trigger" () 328 18 ("self" "set-parent" "cons" "triggers" "set!" "trigger")}
        {Lisp-Entry "get-constraints" () 339 18 ("constraints")}
        {Lisp-Entry "set-constraints" () 343 18 ("self" "set-parent" "constraint" "dynamic" "function" "for-each" "constraints" "set!" "value")}
        {Lisp-Entry "add-constraint" () 350 18 ("self" "set-parent" "cons" "constraints" "set!" "constraint")}
        {Lisp-Entry "get-rows" () 361 18 ("rows")}
        {Lisp-Entry "set-rows" () 365 18 ("rows" "set!" "lst")}
        {Lisp-Entry "get-count" () 369 18 ("rows" "length")}
        {Lisp-Entry "get-missing?" () 373 18 ("missing?")}
        {Lisp-Entry "set-missing?" () 377 18 ("missing?" "set!" "value")}
        {Lisp-Entry "remove-row" () 381 18 ("remove!" "rows" "set!" "row")}
        {Lisp-Entry "remove-rows" () 385 18 ("rows" "set!")}
        {Lisp-Entry "add-row" () 389 18 ("cons" "rows" "set!" "row")}
        {Lisp-Entry "append-row" () 394 18 ("list" "append!" "rows" "set!" "row")}
        {Lisp-Entry "new-row" () 399 18 ("self" "Data-Row" "new" "add-row" "values")}
        {Lisp-Entry "get-row" () 403 18 ("rows" "element" "rank")}
        {Lisp-Entry "load-request" () 412 18 ("missing?" "append!" "rows" "set!" ":max-load" "self" "load-rows" "rows-missing?" "new-rows" "columns" "receive" "new-request" "request" "let" "true" "max-load" "max-load:" "connection" "command")}
        {Lisp-Entry "find-row" () 425 18 ("rows" "=" "when" "get" "actual" "let" "row" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "value" "name")}
        {Lisp-Entry "find-rows" () 436 18 ("rows" "get" "=" "row" "dynamic" "function" "collect-if" "value" "name")}
        {Lisp-Entry "find-row-by" () 442 18 ("rows" "find-if" "predicate")}
        {Lisp-Entry "find-rows-by" () 446 18 ("rows" "collect-if" "predicate")}
        {Lisp-Entry "filter!" () 455 18 ("car" "set!" "cddr" "set-cdr!" "not" "if" "cadr" "row" "cdr" "while" "scan" "let" "rows" "when" "predicate")}
        {Lisp-Entry "sort-by" () 472 18 ("get" "row" "dynamic" "function" "key:" "sort" "rows" "set!" ">" "" "if" "fn" "let" "true" "ascending?" "ascending?:" "name")}}}})
"Data-Trigger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-Trigger.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.data.Data-Trigger" () 37 9 ("jazz")
      {Lisp-Entry "Data-Trigger" () 45 7 ("Data-Object")
        {Lisp-Entry "construct-literal" () 49 16 ("properties:" "name:" "self" "new" "properties" "name" "context")}
        {Lisp-Entry "print-schema" () 58 21 ("properties" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "get-kind" () 70 11 ("trigger")}
        {Lisp-Entry "property-names" () 79 11 ("text")}}}})
"Data-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Data-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.schema.data.Data-View" () 37 9 ("jazz")
      {Lisp-Entry "Data-View" () 46 7 ("Data-Entity")
        {Lisp-Entry "construct-literal" () 50 16 ("properties:" "name:" "self" "new" "properties" "name" "context")}
        {Lisp-Entry "print-schema" () 59 21 ("properties" "name" "self" "class-of" "type-name" "identifier-name" "format" "printer")}
        {Lisp-Entry "get-kind" () 71 11 ("view")}
        {Lisp-Entry "property-names" () 80 11 ("text")}}}})
"Database"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "database" "Database.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.database.Database" () 37 9 ("jazz")
      {Lisp-Entry "Database" () 46 7 ("sort?:" "title:" "Group")
        {Lisp-Entry "get-class-presentation" () 59 16 ()}
        {Lisp-Entry "get-class-image" () 64 16 ("Bitmap-Resource")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "Database.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao.Database" () 37 9 ("jazz")
      {Lisp-Entry "Database" () 40 20 ("Connection&" "QueryDef&" "int" "TableDef&" "Relation&" "Property&" "Recordset&" "variant" "string" "Recordsets&" "Containers&" "Relations&" "QueryDefs&" "TableDefs&" "vtbool&" "short" "short&" "string&" "int&" "_DAO")
        {Lisp-Entry "get-CollatingOrder" () 43 47 ()}
        {Lisp-Entry "get-Connect" () 44 47 ()}
        {Lisp-Entry "get-Name" () 45 47 ()}
        {Lisp-Entry "get-QueryTimeout" () 46 47 ()}
        {Lisp-Entry "put-QueryTimeout" () 47 47 ()}
        {Lisp-Entry "get-Transactions" () 48 47 ()}
        {Lisp-Entry "get-Updatable" () 49 47 ()}
        {Lisp-Entry "get-Version" () 50 47 ()}
        {Lisp-Entry "get-RecordsAffected" () 51 47 ()}
        {Lisp-Entry "get-TableDefs" () 52 47 ()}
        {Lisp-Entry "get-QueryDefs" () 53 47 ()}
        {Lisp-Entry "get-Relations" () 54 47 ()}
        {Lisp-Entry "get-Containers" () 55 47 ()}
        {Lisp-Entry "get-Recordsets" () 56 47 ()}
        {Lisp-Entry "Close" () 57 47 ()}
        {Lisp-Entry "Execute" () 58 47 ()}
        {Lisp-Entry "_30_OpenRecordset" () 59 47 ()}
        {Lisp-Entry "CreateProperty" () 60 47 ()}
        {Lisp-Entry "CreateRelation" () 61 47 ()}
        {Lisp-Entry "CreateTableDef" () 62 47 ()}
        {Lisp-Entry "BeginTrans" () 63 47 ()}
        {Lisp-Entry "CommitTrans" () 64 47 ()}
        {Lisp-Entry "Rollback" () 65 47 ()}
        {Lisp-Entry "CreateDynaset" () 66 47 ()}
        {Lisp-Entry "CreateQueryDef" () 67 47 ()}
        {Lisp-Entry "CreateSnapshot" () 68 47 ()}
        {Lisp-Entry "DeleteQueryDef" () 69 47 ()}
        {Lisp-Entry "ExecuteSQL" () 70 47 ()}
        {Lisp-Entry "ListFields" () 71 47 ()}
        {Lisp-Entry "ListTables" () 72 47 ()}
        {Lisp-Entry "OpenQueryDef" () 73 47 ()}
        {Lisp-Entry "OpenTable" () 74 47 ()}
        {Lisp-Entry "get-ReplicaID" () 75 47 ()}
        {Lisp-Entry "get-DesignMasterID" () 76 47 ()}
        {Lisp-Entry "put-DesignMasterID" () 77 47 ()}
        {Lisp-Entry "Synchronize" () 78 47 ()}
        {Lisp-Entry "MakeReplica" () 79 47 ()}
        {Lisp-Entry "put-Connect" () 80 47 ()}
        {Lisp-Entry "NewPassword" () 81 47 ()}
        {Lisp-Entry "OpenRecordset" () 82 47 ()}
        {Lisp-Entry "get-Connection" () 83 47 ()}
        {Lisp-Entry "PopulatePartial" () 84 47 ()}}}})
"Database-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "database" "Database-Editor.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.database.Database-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Database-Editor" () 45 7 ("Descendants-Editor")
        {Lisp-Entry "form-model" () 48 11 ("nextmethod" "else" "Database-Tree" "tree" "get-name" "case" "form")}}}})
"Database-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "database" "Database-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.database.Database-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Database-Manager" () 49 7 ("visible?:" "viewer" "card" "card-border" "on-splitter-move" "move-handler:" "3" "right" "search" "search-border" "on-return-press" "return-press-handler:" "top-padding:" "left-padding:" "accepts-returns?:" "find" "9" "find-border" "8" "search-sheet" "width:" "index" "fill" "vscroll?:" "hscroll?:" "index-border" "index-sheet" "descendant" "on-tab-press" "tab-press-handler:" "highlight-edited?:" "tree" "header" "scroller" "descendants" "edge" "border-type:" "descendants-border" "content" "title:" "contents-sheet" "on-selection" "selection-handler:" "1" "Point" "position:" "tab" "center" "4" "on-edit/view" "tail" "edit/view" "on-redo" "redo" "on-undo" "undo" "on-print" "print" "on-synchronize" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "synchronize" "north" "location:" "6" "flow" "toolbar" "name:" "2" "0" "Rect" "layout-insets:" "border" "layout-type:" "Dimension" "size:" "Editor-View")
        {Lisp-Entry "mode" () 52 8 ("edit")}
        {Lisp-Entry "frame-icon" () 113 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-position" () 118 16 ()}
        {Lisp-Entry "frame-size" () 123 16 ()}
        {Lisp-Entry "frame-workspaces" () 127 11 ("database")}
        {Lisp-Entry "Empty-Database" () 132 19 ("form>>")}
        {Lisp-Entry "new-event" () 138 16 ("true" "set-visible?" "Empty-Database" "instantiate" "get-guest" "set-client" "false" "host-visible?:" "nextmethod" "apply" "frame" "let" "rest")}
        {Lisp-Entry "tool-preferences" () 150 11 ("database-manager" "tools" "get-preferences")}
        {Lisp-Entry "install" () 159 11 ("categorized" "tree" "set-filter" "properties" "viewer" "search" "index" "self" "descendants" "locate" "set-editor" "nextmethod" "rest")}
        {Lisp-Entry "client-update" () 169 11 ("search" "client" "index" "locate" "set-client" "nextmethod")}
        {Lisp-Entry "install-in-host" () 175 11 ("get-size" "set-size" "cascade-position" "set-position" "when" "tool-preferences" "pref" "let" "update-viewer" "client-update" "true" "get-browser" "get-window" "set-visible?" "viewer" "locate" "setup" "nextmethod" "host")}
        {Lisp-Entry "focus-document" () 187 11 ("tree" "descendants" "locate" "acquire-focus")}
        {Lisp-Entry "Cascade-Position" () 196 14 ("Point")}
        {Lisp-Entry "Cascade-Step" () 199 14 ("Dimension")}
        {Lisp-Entry "cascade-position" () 203 11 ("Cascade-Step" "increase!" "get-position" "frame" "dynamic" "function" "key:" "member?" "if" "true" "while" "return" "lambda" "call/ec" "Cascade-Position" "pos" "collect-managers" "frames" "let")}
        {Lisp-Entry "collect-managers" () 214 11 ("get-stage" "get-children" "Database-Manager" "get-guest" "Host-Frame" "is?" "and" "frame" "dynamic" "function" "collect-if")}
        {Lisp-Entry "resize-center" () 226 29 ("viewer" "card-border" "right" "search-border" "index-border" "descendants-border" "0" "tab" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-splitter-move" () 236 18 ("update-view" "viewer" "-" "card-border" "move-figure" "search-border" "find-border" "index-border" "descendants-border" "0" "tab" "locate" "size-figure" "right" "get-name" "case" ":delta" "get-property" "delta" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-selection" () 253 18 ("select-all" "acquire-focus" "find" "text" "search-sheet" "get-selection-name" "=" "when" "locate" "tab" "let" "evt")}
        {Lisp-Entry "on-synchronize" () 261 18 ("properties" "locate" "get-client" "synchronize-tree" "evt")}
        {Lisp-Entry "on-print" () 265 18 ("get-site" "print-browser" "evt")}
        {Lisp-Entry "on-return-press" () 269 18 ("find" "locate" "get-string-content" "search" "evt")}
        {Lisp-Entry "on-tab-press" () 273 18 ("get-row" "auto-select" "when" "get-single-selection" "rank" "acquire-focus" "properties" "locate" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "on-edit/view" () 281 18 ("edit" "view" "mode" "case" "evt")}
        {Lisp-Entry "get-site" () 287 11 ("viewer" "locate" "get-browser" "get-site")}
        {Lisp-Entry "edit" () 296 11 ("set!" "false" "viewer" "true" "card-border" "locate" "set-visible?" "edit" "mode" "/=" "when")}
        {Lisp-Entry "view" () 303 11 ("update-viewer" "set!" "true" "viewer" "false" "card-border" "locate" "set-visible?" "view" "mode" "/=" "when")}
        {Lisp-Entry "update-viewer" () 311 11 ()}
        {Lisp-Entry "synchronize-tree" () 320 11 ("contents-sheet" "tab" "set-selection-name" "row-rank" "set-single-selection" "ensure-expanded" "bell" "null?" "if" "component-row" "row" "descendants" "locate" "tree" "let*" "component")}
        {Lisp-Entry "search" () 335 11 ("search" "locate" "set-target" "target")}}
      {Lisp-Entry "Center-View" () 344 7 ("Layout-View")
        {Lisp-Entry "resize" () 347 11 ("resize-center" "nextmethod" "dv" "dh")}}}})
"Database-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "database" "Database-Tree.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.database.Database-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Database-Tree" () 46 7 ("Descendants-Tree")
        {Lisp-Entry "row-state" () 49 11 ("collapsed" "expanded" "1" "" "if" "level" "update?" "component")}}}})
"Database-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Database-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Database-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Database-Workspace" () 46 7 ("Text-Palette" "vert" "second" "Jazz-Console-Manager" "selection" "Properties-Manager" "Search-Results" "Output-Log" "model-name:" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Database-Manager" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 65 11 ("database")}}}})
"Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Datatype.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Datatype" () 37 9 ("jazz")
      {Lisp-Entry "Datatype" () 44 7 ("Object")}
      {Lisp-Entry "Datatype" () 50 7 ("Object")
        {Lisp-Entry "name" () 53 8 ()}
        {Lisp-Entry "size" () 54 8 ()}
        {Lisp-Entry "precision" () 55 8 ()}
        {Lisp-Entry "scale" () 56 8 ()}
        {Lisp-Entry "construct-literal" () 60 16 ("self" "new" "null?" "integer?" "or" "assert" "scale" "precision" "size" "name" "context")}
        {Lisp-Entry "new-datatype" () 67 23 ("get-scalable?" "get-precisionable?" "find-systype" "get-sizeable?" "if" "self" "new" "scale" "precision" "size" "name")}
        {Lisp-Entry "initialize" () 74 11 ("scale~self" "precision~self" "size~self" "name~self" "set!" "nextmethod" "scale" "precision" "size" "name")}
        {Lisp-Entry "compare-object" () 82 11 (":not-equal" "else" ":equal" "get-scale" "scale" "get-precision" "precision" "get-size" "size" "get-name" "name" "=" "and" ":incompatible" "Datatype" "is-not?" "cond" "target")}
        {Lisp-Entry "foldable?" () 94 11 ("true")}
        {Lisp-Entry "fold-object" () 98 11 ("scale" "precision" "size" "name" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 108 11 ("scale" "precision" "size" "name" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-name" () 122 18 ("name")}
        {Lisp-Entry "get-size" () 126 18 ("size")}
        {Lisp-Entry "get-precision" () 130 18 ("precision")}
        {Lisp-Entry "set-precision" () 135 18 ("precision" "set!" "value")}
        {Lisp-Entry "get-scale" () 139 18 ("scale")}
        {Lisp-Entry "set-scale" () 144 18 ("scale" "set!" "value")}
        {Lisp-Entry "has-size?" () 148 18 ("size" "not-null?")}
        {Lisp-Entry "has-precision?" () 152 18 ("precision" "not-null?")}
        {Lisp-Entry "has-scale?" () 156 18 ("scale" "not-null?")}
        {Lisp-Entry "get-native-with-value" () 160 26 ("read-only" "eq?" "double-apostrophe" "number?" "else" "format" "string?" "cond" "-" "1" "0" "subseq" "=" "2" ">=" "and" "if" "length" "len" "let" "either" "name" "find-systype" "get-default-value" "default-value" "let*" "false" "indirect?" "indirect?:" "value")}
        {Lisp-Entry "double-apostrophe" () 179 11 ("substitute-alist" "value")}
        {Lisp-Entry "get-native" () 183 26 ("else" "scale" "precision" "null?" "name" "format" "size" "cond")}
        {Lisp-Entry "get-systypes" () 200 31 ()}
        {Lisp-Entry "find-systype" () 204 23 ("get-systypes" "get-name" "=" "systype" "dynamic" "function" "find-if" "name")}
        {Lisp-Entry "get-defaultable?" () 210 18 ("get-defaultable?" "and" "name" "find-systype" "systype" "let")}
        {Lisp-Entry "get-default-value" () 215 18 ("get-default-value" "essay" "name" "find-systype" "systype" "let")}
        {Lisp-Entry "present" () 225 26 ("else" "scale" "precision" "null?" "name" "format" "size" "cond")}}}})
"Datatype-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "designer" "Datatype-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.designer.Datatype-Row" () 37 9 ("jazz")
      {Lisp-Entry "Datatype-Row" () 46 7 ("Combo-Row")
        {Lisp-Entry "datatype-class" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "allow-partial-datatype?" () 50 12 ("generate" "accessors" "false")}
        {Lisp-Entry "systypes" () 53 8 ()}
        {Lisp-Entry "initialize" () 61 11 ("systypes" "setup" "get-systypes" "essay" "systypes~self" "allow-partial-datatype?~self" "datatype-class~self" "set!" "nextmethod" "apply" "others" "false" "allow-partial-datatype?" "unavailable-systypes-message" "datatype-class" "bind-keywords" "rest")}
        {Lisp-Entry "setup" () 70 11 ("get-name" "present-format" "list" "systype" "map" "true" "set-choices" "message-box" "combo" "function" "set-choices-updater" "null?" "if" "unavailable-systypes-message" "systypes")}
        {Lisp-Entry "present" () 85 11 ("present" "null?" "if" "type")}
        {Lisp-Entry "editor-class" () 96 11 ("Datatype-Row-Editor")}
        {Lisp-Entry "get-edited-value" () 100 11 ("Datatype" "datatype-class" "either" "new" "scale" "precision" "size" "name" "receive" "when" "parse-content" "parsed" "editor" "get-content" "string" "let*")}
        {Lisp-Entry "set-edited-value" () 108 11 ("present" "editor" "set-content" "value")}
        {Lisp-Entry "read-content" () 112 11 ("separator:" "substitute" "parse-strings" "empty-string?" "not" "string" "dynamic" "function" "collect-if" "content")}
        {Lisp-Entry "parse-content" () 118 11 ("present-format" "format" "parse-error" "null?" "if" "parse-systype" "systype" "name" "let*" "else" "parse-decimal" "3" "parse-variable" "2" "car" "parse-fixed" "1" "0" "length" "case" "read-content" "content" "let" "string")}
        {Lisp-Entry "present-format" () 133 11 ("get-fixed?" "get-sizeable?" "format" "get-precisionable?" "cond" "allow-partial-datatype?" "if" "name" "systype")}
        {Lisp-Entry "parse-fixed" () 145 11 ("values" "present-format" "parse-error" "get-precisionable?" "get-sizeable?" "or" "allow-partial-datatype?" "not" "and" "if" "parse-systype" "systype" "let" "name")}
        {Lisp-Entry "parse-variable" () 153 11 ("present-format" "parse-error" "else" "allow-partial-datatype?" "get-precisionable?" "and" "parse-integer" "values" "get-sizeable?" "cond" "parse-systype" "systype" "let" "precision" "name" "bind" "list")}
        {Lisp-Entry "parse-decimal" () 165 11 ("present-format" "parse-error" "parse-integer" "values" "get-scalable?" "get-precisionable?" "and" "if" "parse-systype" "systype" "let" "scale" "precision" "name" "bind" "list")}
        {Lisp-Entry "parse-systype" () 173 11 ("format" "parse-error" "find-systype" "either" "datatype-class" "when" "name")}
        {Lisp-Entry "parse-error" () 179 11 ("format" "message:" "Parse-Error" "new" "signal" "message")}}
      {Lisp-Entry "Datatype-Row-Editor" () 188 7 ("Combo-Row-Editor")
        {Lisp-Entry "content-change" () 191 11 ("nextmethod" "popup" "eq?" "unless" "origin")}
        {Lisp-Entry "combo-choice" () 196 11 ()}
        {Lisp-Entry "get-entry" () 200 11 ("car" "when" "get-content" "read-content" "content" "let")}
        {Lisp-Entry "set-entry" () 206 11 ("cdr" "cons" "join" "set-content" "separator:" "parse-strings" "car" "get-content" "read-content" "actual" "let" "entry")}}}})
"Date"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "time" "Date.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.time.Date" () 37 9 ("jazz")
      {Lisp-Entry "parse-string" () 40 20 ("error" "when" "Date" "new" "=" "milliseconds" "memq?" "second" "minute" "hour" "8" "day" "7" "5" "month" "4" "0" "subseq" "parse-integer" "year" "length" "len" "let*" "valid-string?" "if" "true" "error?" "error?:" "str")}
      {Lisp-Entry "valid-string?" () 55 20 ("or" "8" "5" "0" "subseq" "numeric?" "=" "7" "4" "element" "member?" "memq?" "string?" "and" "length" "len" "let" "str")}
      {Lisp-Entry "parse-date" () 74 20 ("error" "when" "Date" "new" "8" "day" "7" "5" "month" "4" "0" "subseq" "parse-integer" "year" "let" "valid-date-string?" "if" "true" "error?" "error?:" "str")}
      {Lisp-Entry "valid-date-string?" () 84 20 ("8" "5" "0" "subseq" "numeric?" "7" "4" "element" "member?" "length" "=" "string?" "and" "str")}
      {Lisp-Entry "local-date" () 94 20 ("from-systemtime" "GetLocalTime" "SYSTEMTIME" "new" "st" "let" "local-date" "unimplemented")}
      {Lisp-Entry "universal-date" () 102 20 ("from-systemtime" "GetSystemTime" "SYSTEMTIME" "new" "st" "let" "universal-date" "unimplemented")}
      {Lisp-Entry "from-systemtime" () 110 20 ("wMilliseconds" "set-milliseconds" "wDayOfWeek" "set-day-of-week" "wSecond" "wMinute" "wHour" "wDay" "wMonth" "wYear" "get" "Date" "new" "time" "let" "from-systemtime" "unimplemented" "st")}
      {Lisp-Entry "from-vtdate" () 124 20 ("from-systemtime" "VariantTimeToSystemTime" "SYSTEMTIME" "new" "system" "with" "from-vtdate" "unimplemented" "vtdate")}
      {Lisp-Entry "Days-Of-Week" () 137 12 ("saturday" "6" "friday" "5" "thursday" "4" "wednesday" "3" "tuesday" "2" "monday" "1" "sunday" "0")}
      {Lisp-Entry "symbolic-days-of-week" () 147 20 ("Days-Of-Week" "second" "map")}
      {Lisp-Entry "symbolic-day-of-week" () 151 20 ("second" "find-day-of-week-info" "info" "let" "numeric")}
      {Lisp-Entry "numeric-day-of-week" () 156 20 ("first" "find-day-of-week-info" "info" "let" "symbolic")}
      {Lisp-Entry "present-day-of-week" () 161 20 ("third" "find-day-of-week-info" "info" "let" "key")}
      {Lisp-Entry "weekend-day?" () 166 20 ("saturday" "sunday" "second" "memq?" "find-day-of-week-info" "info" "let" "key")}
      {Lisp-Entry "find-day-of-week-info" () 171 13 ("second" "first" "integer?" "if" "key:" "Days-Of-Week" "find" "key")}
      {Lisp-Entry "Date" () 180 7 ("Object")}
      {Lisp-Entry "Date" () 186 7 ("Object")
        {Lisp-Entry "year" () 189 8 ()}
        {Lisp-Entry "month" () 190 8 ()}
        {Lisp-Entry "day-of-week" () 191 8 ()}
        {Lisp-Entry "day" () 192 8 ()}
        {Lisp-Entry "hour" () 193 8 ()}
        {Lisp-Entry "minute" () 194 8 ()}
        {Lisp-Entry "second" () 195 8 ()}
        {Lisp-Entry "milliseconds" () 196 8 ()}
        {Lisp-Entry "construct-literal" () 200 16 ("self" "new" "milliseconds" "second" "minute" "0" "hour" "day" "1" "month" "year" "context")}
        {Lisp-Entry "universal->local" () 209 18 ("get-time" "universal->local" "get-date")}
        {Lisp-Entry "local->universal" () 213 18 ("get-time" "local->universal" "get-date")}
        {Lisp-Entry "initialize" () 227 11 ("update" "milliseconds~self" "second~self" "minute~self" "hour~self" "day~self" "month~self" "year~self" "set!" "nextmethod" "milliseconds" "second" "minute" "0" "hour" "day" "1" "month" "year")}
        {Lisp-Entry "update" () 239 11 ("update-day-of-week")}
        {Lisp-Entry "copy-object" () 243 11 ("milliseconds" "second" "minute" "hour" "day" "month" "year" "Date" "new" "deep?")}
        {Lisp-Entry "compare-object" () 247 11 ("get-time" "compare" ":incompatible" "Date" "is-not?" "if" "target")}
        {Lisp-Entry "print" () 253 11 ("milliseconds" "second" "minute" "hour" "day" "month" "year" "self" "class-of" "type-name" "identifier-name" "day-date?" "present" "format" ":human" "=" "if" "readably" "printer")}
        {Lisp-Entry "get-time" () 278 18 ("from-filetime" "self" "error" "SystemTimeToFileTime" "unless" "FILETIME" "new" "filetime" "get-systemtime" "systemtime" "let")}
        {Lisp-Entry "get-systemtime" () 287 11 ("fill-systemtime" "SYSTEMTIME" "new" "st" "let")}
        {Lisp-Entry "fill-systemtime" () 293 11 ("milliseconds" "wMilliseconds" "second" "wSecond" "minute" "wMinute" "hour" "wHour" "day" "wDay" "month" "wMonth" "year" "wYear" "set" "st")}
        {Lisp-Entry "days/week" () 308 14 ("7")}
        {Lisp-Entry "add" () 312 18 ("add-field" "add-duration" "not" "if" "value" "field")}
        {Lisp-Entry "add-duration" () 321 11 ("self" "either" "second" "minute" "hour" "day" "week" "month" "year" "add-field" "set!" "when" "result" "let" "get-amounts" "seconds" "minutes" "hours" "days" "weeks" "months" "years" "receive" "duration")}
        {Lisp-Entry "add-field" () 334 11 ("get-date" "get-time" "time" "let" "else" "days/week" "*" "day" "add" "week" "add-month" "month" "add-year" "year" "case" "value" "field")}
        {Lisp-Entry "add-year" () 345 11 ("year" "+" "Date" "new" "value")}
        {Lisp-Entry "add-month" () 349 11 ("day~self" "Date" "new" ">" "increase!" "decrease!" "while" "0" "" "cond" "+" "month" "year~self" "year" "let" "value")}
        {Lisp-Entry "get-field" () 368 18 ("milliseconds" "second" "minute" "hour" "day" "month" "year" "case" "field")}
        {Lisp-Entry "get-year" () 384 18 ("year")}
        {Lisp-Entry "year-date" () 388 18 ("year" "Date" "new" "self" "year-date?" "if")}
        {Lisp-Entry "year-date?" () 394 18 ("milliseconds" "second" "minute" "0" "hour" "day" "1" "month" "=" "and")}
        {Lisp-Entry "same-year?" () 403 18 ("get-year" "year" "=" "date")}
        {Lisp-Entry "iterate-year" () 407 18 ("1" "month" "add" "set!" "same-year?" "while" "year-date" "date" "let" "proc")}
        {Lisp-Entry "get-month" () 419 18 ("month")}
        {Lisp-Entry "month-date" () 423 18 ("month" "year" "Date" "new" "self" "month-date?" "if")}
        {Lisp-Entry "month-date?" () 429 18 ("milliseconds" "second" "minute" "0" "hour" "1" "day" "=" "and")}
        {Lisp-Entry "same-month?" () 437 18 ("get-month" "month" "get-year" "year" "=" "and" "date")}
        {Lisp-Entry "iterate-month" () 442 18 ("1" "day" "add" "set!" "same-month?" "while" "month-date" "date" "let" "proc")}
        {Lisp-Entry "first-day-of-month" () 449 18 ("1" "set-day" "day-date" "copy" "day" "let")}
        {Lisp-Entry "last-day-of-month" () 455 18 ("day" "1" "month" "first-day-of-month" "add")}
        {Lisp-Entry "previous-month" () 459 18 ("month" "first-day-of-month" "add")}
        {Lisp-Entry "next-month" () 463 18 ("1" "month" "first-day-of-month" "add")}
        {Lisp-Entry "Month-Names" () 467 14 ("9" "8" "7" "6" "5" "4" "3" "2" "1")}
        {Lisp-Entry "Month-Abbrevs" () 482 14 ("9" "8" "7" "6" "5" "4" "3" "2" "1")}
        {Lisp-Entry "month-name" () 497 18 ("Month-Names" "month" "assq" "cdr")}
        {Lisp-Entry "month-abbrev" () 501 18 ("Month-Abbrevs" "month" "assq" "cdr")}
        {Lisp-Entry "get-week" () 505 18 ("increase!" "set!" "same-month?" "while" "0" "week" "last-day-of-week" "add" "date" "let")}
        {Lisp-Entry "get-day-of-week" () 514 18 ("day-of-week")}
        {Lisp-Entry "first-day-of-week" () 518 18 ("day-of-week" "-" "day" "day-date" "add")}
        {Lisp-Entry "last-day-of-week" () 522 18 ("day-of-week" "6" "-" "day" "day-date" "add")}
        {Lisp-Entry "day-abbrev" () 526 18 ("day-of-week" "find-day-of-week-info" "third")}
        {Lisp-Entry "System-Time" () 530 14 ("SYSTEMTIME" "new")}
        {Lisp-Entry "File-Time" () 533 14 ("FILETIME" "new")}
        {Lisp-Entry "update-day-of-week" () 537 24 ("wDayOfWeek" "get" "day-of-week" "set!" "FileTimeToSystemTime" "File-Time" "SystemTimeToFileTime" "System-Time" "fill-systemtime")}
        {Lisp-Entry "get-day" () 549 18 ("day")}
        {Lisp-Entry "set-day" () 553 18 ("update" "day" "set!" "value")}
        {Lisp-Entry "day-date" () 558 18 ("day" "month" "year" "Date" "new" "self" "day-date?" "if")}
        {Lisp-Entry "day-date?" () 564 18 ("milliseconds" "second" "minute" "0" "hour" "=" "and")}
        {Lisp-Entry "same-day?" () 571 18 ("get-day" "day" "get-month" "month" "get-year" "year" "=" "and" "date")}
        {Lisp-Entry "get-hour" () 582 18 ("hour")}
        {Lisp-Entry "set-hour" () 586 18 ("hour" "set!" "value")}
        {Lisp-Entry "get-minute" () 595 18 ("minute")}
        {Lisp-Entry "get-second" () 604 18 ("second")}
        {Lisp-Entry "get-milliseconds" () 613 18 ("milliseconds")}
        {Lisp-Entry "present" () 622 18 ("milliseconds" "milliseconds-separator" "second" "milliseconds?" "seconds?" "or" "if" "minute" "time-separator" "hour" "day" "month" "4" "0" "year" "->string" "subseq" "format" "date-separator" "date-separator:")}
        {Lisp-Entry "present-date" () 644 18 ("0" "present" "apply" "subseq" "rest")}
        {Lisp-Entry "present-date2" () 650 18 ("4" "0" "year" "->string" "subseq" "month" "day" "format" "date-separator" "let")}
        {Lisp-Entry "present-time" () 660 18 ("present" "apply" "subseq" "rest")}
        {Lisp-Entry "present-compact" () 664 18 ("minute" "hour" "day" "month" "2" "year" "->string" "subseq" "format" "time-separator" "time-separator:" "date-separator" "date-separator:")}
        {Lisp-Entry "present-duration" () 676 18 ("get-output" "second" "or" "minute" "hour" "day" "month" "year" "format-plural" "format" "false" "set!" "if" "0" "/=" "when" "get-field" "n" "let" "field" "dynamic" "function" "output" "empty?" "String-Printer" "new" "printer" "let*" "true" "seconds?" "seconds?:")}}}})
"Date-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Date-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Date-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Date-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "Date" "is-not?" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 62 11 ("present-date" "null?" "if" "value")}
        {Lisp-Entry "setup-entry" () 73 11 ("parent:" "Date-Entry" "new" "client" "view")}}}})
"Date-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "entry" "Date-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.entry.Date-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Date-Entry" () 49 7 ("on-choose-date" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "Bitmap-Resource" "image-name:" "Dimension" "size:" "action" "Default-GUI" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "border" "name:" "Property-Entry")
        {Lisp-Entry "get-value" () 66 11 ("Date" "parse-date" "=" "empty-string?" "or" "if" "text" "locate" "get-string-content" "string" "let")}
        {Lisp-Entry "set-value" () 73 11 ("present-date" "null?" "if" "text" "locate" "set-string-content" "value")}
        {Lisp-Entry "get-modified?" () 77 11 ("text" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" () 81 11 ("text" "locate" "set-modified?" "value")}
        {Lisp-Entry "layout" () 90 11 ("get-width" "Point" "new" "action" "set-position" "0" "Dimension" "-" "border" "locate" "set-size" "get-size" "size" "let")}
        {Lisp-Entry "on-choose-date" () 101 11 ("true" "set-modified?" "get-value" ":initial-date" "Calendar-Dialog" "get-modal" "set-value" "evt")}}}})
"Date-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Date-Request.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.dialog.Date-Request" () 37 9 ("jazz")
      {Lisp-Entry "Date-Request" () 46 7 ("title:" "prefix" "name:" "String-Request")
        {Lisp-Entry "form-model" () 54 11 ("nextmethod" "else" "Date-Text-View" "text" "get-name" "case" "form")}}}})
"Date-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Date-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Date-Row" () 37 9 ("jazz")
      {Lisp-Entry "Date-Row" () 46 7 ("Combo-Row")
        {Lisp-Entry "multiple-selection?" () 49 8 ()}
        {Lisp-Entry "initialize" () 57 11 ("choose" "set-kind" "set-multiple-selection?" "nextmethod" "apply" "others" "false" "multiple-selection?" "bind-keywords" "rest")}
        {Lisp-Entry "get-multiple-selection?" () 69 18 ("multiple-selection?")}
        {Lisp-Entry "set-multiple-selection?" () 73 18 ("multiple-selection?" "set!" "value")}
        {Lisp-Entry "combo-choose" () 82 11 ("true" "focus-editor" "enter-edited-value" "set-edited-value" "multiple-selection?" "multiple-selection?:" "get-edited-value" ":initial-date" "Calendar-Dialog" "get-modal" "date" "let")}
        {Lisp-Entry "present" () 95 11 ("present-date" "null?" "if" "date")}
        {Lisp-Entry "get-edited-value" () 106 11 ("Date" "parse-date" "=" "empty-string?" "or" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" () 113 11 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Date-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Date-Text-View.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Date-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Date-Text-View" () 45 7 ("Text-View")}}})
"Dead-Code-Analyser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "analysis" "Dead-Code-Analyser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.analysis.Dead-Code-Analyser" () 37 9 ("jazz")
      {Lisp-Entry "Dead-Code-Analyser" () 44 7 ("Analyser")
        {Lisp-Entry "references" () 47 8 ()}
        {Lisp-Entry "load-classes?" () 50 11 ("true")}
        {Lisp-Entry "setup" () 54 11 ("new-map" "references" "set!")}
        {Lisp-Entry "exception?" () 58 11 ("cdr" "field-name" "and" "Field-Exceptions" "assq" "info" "Class-Exceptions" "memq?" "or" "field-creator" "type-name" "class" "let" "field")}
        {Lisp-Entry "dead?" () 67 11 ("field-hierarchy" "exception?" "not" "field-references" "zero?" "m" "dynamic" "function" "every?" "null?" "and" "map-ref" "references" "field-name" "name" "let*" "field")}
        {Lisp-Entry "dead?" () 77 11 ("false" "field")}
        {Lisp-Entry "field-hierarchy" () 81 11 ("field-name" "category-field" "field-hierarchy" "essay" "cons" "field-creator" "type-ascendant" "ascendant" "let" "null?" "if" "field")}
        {Lisp-Entry "sorted-classes" () 88 11 ("" "sort" "cons" "set!" "properties" "source" "category-name" "dynamic" "function" "for-each-source" "categories" "let")}
        {Lisp-Entry "save-results" () 96 11 ("sorted-classes" "newline" "tail" "field" "bind" "pair" "for-each-pair" "format" "when" "field-name" "key:" "class-of" "category-fields" "dead?" "collect-if" "" "sort" "dead" "let" "symbol" "dynamic" "function" "for-each" "Home" "File" "file:" "File-Printer" "new" "output" "with-closed")}
        {Lisp-Entry "symbol-hook" () 112 11 ("1" "0" "map-ref" "either" "+" "references" "map-set!" "symbol" "param")}
        {Lisp-Entry "go" () 116 18 ("save-results" "process-all" "setup")}}}})
"Debug-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "preferences" "Debug-Preferences.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.preferences.Debug-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Debug-Preferences" () 47 7 ("title:" "Preferences")
        {Lisp-Entry "optimized?" () 50 12 ("generate" "accessors" "true")}
        {Lisp-Entry "debug-repository?" () 51 12 ("generate" "accessors" "false")}
        {Lisp-Entry "get-row-instance" () 63 11 ("nextmethod" "else" "Boolean-Row" "new" "debug-repository?" "optimized?" "field-name" "case" "property")}}}})
"Debuggee"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debuggee" "Debuggee.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.debuggee.Debuggee" () 37 9 ("jazz")
      {Lisp-Entry "Debuggee" () 46 7 ("Object")}
      {Lisp-Entry "Debuggee" () 52 7 ("Object")
        {Lisp-Entry "process" () 55 8 ()}
        {Lisp-Entry "initialize" () 58 11 ("process~self" "set!" "nextmethod" "process")}
        {Lisp-Entry "get-name" () 63 25 ("process" "process-name")}
        {Lisp-Entry "get-icon" () 67 25 ("process" "process-icon")}
        {Lisp-Entry "detach-from-controller" () 76 25 ("process" "detach-from-controller")}
        {Lisp-Entry "exit" () 81 25 ("process" "exit-process" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new")}
        {Lisp-Entry "get-process-server" () 95 25 ("process" "get-local-process-server")}
        {Lisp-Entry "get-toplevel-hwnd" () 99 25 ("get-toplevel" "get-handle")}
        {Lisp-Entry "get-process-threads" () 108 25 ("get-threads" "new-thread" "map")}
        {Lisp-Entry "get-main-thread" () 112 25 ("primary-thread" "new-thread")}
        {Lisp-Entry "new-thread" () 116 11 ("self" "Debuggee-Local-Proxy" "Debuggee-Thread" "Debuggee-Thread-Local-Proxy" "new" "thread")}
        {Lisp-Entry "execute" () 125 25 (":describe" "->string" "Development" "set-?" "not" "if" "execute-command" "result" "process" "either" "filter-packages" "packages" "read-string-element" "form" "let*" "frame" "variables" "package-names" "object" "command")}
        {Lisp-Entry "filter-packages" () 136 11 ("get-output" "autoload" "put" "in-manifest?" "when" "package-name" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let" "filter-packages" "unimplemented" "package-names")}
        {Lisp-Entry "execute-command" () 147 11 ("privileged-execute" "dynamic" "function" "execute-primary" "Application" "is?" "if" "frame" "variables" "packages" "process" "form")}
        {Lisp-Entry "inspect" () 158 25 ("Inspector" "inspect-value" "address-object" "object" "let" "kind" "address")}
        {Lisp-Entry "memory-statistics" () 168 25 ("statistics")}
        {Lisp-Entry "trigger-gc" () 172 25 ("gc")}}}})
"Debuggee-Thread"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debuggee" "Debuggee-Thread.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.debuggee.Debuggee-Thread" () 37 9 ("jazz")
      {Lisp-Entry "Debuggee-Thread" () 45 7 ("Object")
        {Lisp-Entry "debuggee" () 48 8 ()}
        {Lisp-Entry "thread" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("thread~self" "debuggee~self" "set!" "nextmethod" "thread" "debuggee")}
        {Lisp-Entry "get-debuggee" () 63 25 ("debuggee")}
        {Lisp-Entry "get-thread" () 67 18 ("thread")}
        {Lisp-Entry "present" () 76 25 ("thread" "present")}
        {Lisp-Entry "get-primary?" () 80 25 ("primary-thread" "thread" "eq?")}
        {Lisp-Entry "get-state" () 85 25 ("run" "break" "get-process" "get-loop" "get-type" "get-primary?" "if")}
        {Lisp-Entry "get-breaked-stack" () 94 25 ("new-frame" "map" "get-process" "get-loop" "get-stack" "stack" "let" "break" "get-state" "=" "when")}
        {Lisp-Entry "get-runtime-stack" () 101 25 ("new-frame" "map" "runtime-stack" "stack" "let")}
        {Lisp-Entry "get-frame-location" () 106 25 ("object-location" "closure-function" "toplevel-function" "toplevel" "frame-procedure" "closure" "binder-last-break" "binder-last-call" "either" "object" "let*" "frame")}
        {Lisp-Entry "toplevel-function" () 113 11 ("toplevel-function" "null?" "if" "function-container" "container" "let" "function")}
        {Lisp-Entry "inspect-frame" () 120 25 ("frame-variables" "variable-symbol" "package-unbound" "variable-value" "variable-bound?" "variable" "length" "0" "naturals" "rank" "value" "dynamic" "function" "map" "false" "neq?" "if" "frame-parameters" "parameters" "let" ":context" "frame-context" "self" "Inspector" "package-info" "cons" "frame")}
        {Lisp-Entry "break-next" () 141 25 ("break-next" "unimplemented")}
        {Lisp-Entry "stop" () 145 25 ("error" "get-application" "get-loop" "stop" "begin" "get-primary?" "if")}
        {Lisp-Entry "toplevel" () 153 25 ("toplevel" "unimplemented")}
        {Lisp-Entry "continue" () 157 25 ("continue" "unimplemented")}
        {Lisp-Entry "step-over" () 161 25 ("step-over" "unimplemented")}
        {Lisp-Entry "step-in" () 165 25 ("step-in" "unimplemented")}
        {Lisp-Entry "step-out" () 169 25 ("step-out" "unimplemented")}
        {Lisp-Entry "run-to" () 173 25 ("run-to" "unimplemented")}
        {Lisp-Entry "new-frame" () 182 25 ("new-unknown-frame" "unknown" "new-catch-frame" "catch" "new-compiled-procedure-frame" "compiled-procedure" "new-coclosure-frame" "coclosure" "new-proxy-frame" "proxy" "new-closure-frame" "closure" "new-lexical-frame" "lexical" "new-binding-frame" "binding" "new-data-frame" "data" "frame-type" "case" "frame")}
        {Lisp-Entry "new-data-frame" () 195 11 ("frame-name" "frame-thread" "Data-Frame" "new" "frame")}
        {Lisp-Entry "new-binding-frame" () 199 11 ("frame-name" "frame-thread" "Binding-Frame" "new" "frame")}
        {Lisp-Entry "new-lexical-frame" () 203 11 ("frame-name" "frame-thread" "Lexical-Frame" "new" "frame")}
        {Lisp-Entry "new-closure-frame" () 207 11 ("frame-name" "frame-thread" "Closure-Frame" "new" "frame")}
        {Lisp-Entry "new-proxy-frame" () 211 11 ("frame-name" "frame-thread" "Proxy-Frame" "new" "frame")}
        {Lisp-Entry "new-coclosure-frame" () 215 11 ("frame-name" "frame-thread" "CoClosure-Frame" "new" "frame")}
        {Lisp-Entry "new-compiled-procedure-frame" () 219 11 ("frame-name" "frame-thread" "Compiled-Procedure-Frame" "new" "frame")}
        {Lisp-Entry "new-catch-frame" () 223 11 ("frame-name" "frame-thread" "Catch-Frame" "new" "frame")}
        {Lisp-Entry "new-unknown-frame" () 227 11 ("frame-name" "frame-thread" "Unknown-Frame" "new" "frame")}
        {Lisp-Entry "frame-thread" () 236 11 ("self" "Debuggee-Thread-Local-Proxy" "new")}}}})
"Debugger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Debugger.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.debugger.Debugger" () 37 9 ("jazz")
      {Lisp-Entry "Debugger" () 47 7 ("Object")
        {Lisp-Entry "listeners" () 55 8 ()}
        {Lisp-Entry "register-listener" () 58 18 ("cons" "listeners" "set!" "listener")}
        {Lisp-Entry "unregister-listener" () 62 18 ("remove!" "listeners" "set!" "listener")}
        {Lisp-Entry "process-output" () 66 18 ("debug-output" "listener" "dynamic" "function" "for-each" "listeners" "when" "output")}
        {Lisp-Entry "get-process" () 78 26 ()}}}})
"Debugger-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Debugger-Actions.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Actions" () 47 7 ("Tab" "on-next-debuggee" "next-debuggee" "on-variables" "variables" "on-debuggers" "debuggers" "on-call-run-to" "call-run-to" "on-call-step-out" "call-step-out" "on-call-step-into" "call-step-into" "on-call-step-over" "call-step-over" "on-run-to-result" "run-to-result" "on-run-to-cursor" "run-to-cursor" "on-step-outside-function" "step-outside-function" "on-step-out" "step-out" ":control" "on-step-into-function" "step-into-function" "F11" "on-step-into" "step-into" "F10" "on-step-over" "step-over" "on-continue" "continue" ":alt" "on-toplevel" "toplevel" "enabled?:" "F5" ":shift" "Shortcut" "shortcut:" "on-stop" "stop" "on-break" ":debugger" "Event-Handler" "action-handler:" "break" "name:" "Actions")}}})
"Debugger-Console-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "console" "Debugger-Console-Manager.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.debugger.console.Debugger-Console-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Console-Manager" () 47 7 ("Console-Manager")
        {Lisp-Entry "external-name" () 51 16 ("debugger-console-manager" "rest")}
        {Lisp-Entry "form-model" () 55 11 ("nextmethod" "else" "Debugger-Console-Text-View" "text" "get-name" "case" "form")}
        {Lisp-Entry "palette-title" () 67 16 ()}}}})
"Debugger-Console-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "console" "Debugger-Console-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.console.Debugger-Console-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Console-Text-View" () 47 7 ("Debugger-Listener" "Console-Text-View")
        {Lisp-Entry "display-output" () 55 11 ("console-printer" "display" "output")}
        {Lisp-Entry "newline-output" () 59 11 ("console-printer" "newline")}
        {Lisp-Entry "debug-output" () 63 11 ("fresh-prompt" "console-printer" "format" "output")}
        {Lisp-Entry "find-debugger" () 73 11 ("start-debugger" "Gambit-Debugger" "find-debugger" "either")}
        {Lisp-Entry "start-debugger" () 78 11 ("start-gambit" "self" ":console-text" "Gambit-Debugger" "new" "debugger" "let")}
        {Lisp-Entry "stop-debugger" () 84 11 ("stop-gambit" "debugger")}
        {Lisp-Entry "display-banner" () 93 11 ("display-prompt" "Banner-Color" "colorize" "format" "insert-string" "get-start" "start" "let")}
        {Lisp-Entry "eval-command" () 106 11 ("gambit-command" "find-debugger" "debugger" "let" "console?" "command" "name" "range")}
        {Lisp-Entry "eval-commands" () 111 11 ("gambit-commands" "find-debugger" "debugger" "let" "console?" "commands" "names" "range")}}}})
"Debugger-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Debugger-Event.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Event" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Event" () 45 7 ("Object")}}})
"Debugger-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Debugger-Frame.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Frame" () 45 7 ("Object")
        {Lisp-Entry "present" () 53 26 ()}
        {Lisp-Entry "get-image" () 57 26 ()}}}})
"Debugger-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Debugger-Listener.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Listener" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Listener" () 45 11 ()
        {Lisp-Entry "display-output" () 48 35 ("string")}
        {Lisp-Entry "newline-output" () 49 35 ()}
        {Lisp-Entry "debug-output" () 50 35 ("output")}}}})
"Debugger-Process"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Debugger-Process.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Process" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Process" () 45 7 ("Object")
        {Lisp-Entry "present" () 53 26 ()}
        {Lisp-Entry "get-threads" () 62 26 ()}}}})
"Debugger-Server"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "server" "Debugger-Server.fusion"} {Time 128368654120000000L}
    {Lisp-Entry "jazz.debugger.server.Debugger-Server" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Server" () 47 7 ("Object")
        {Lisp-Entry "debuggees" () 50 8 ()}
        {Lisp-Entry "selected-debuggee" () 51 8 ()}
        {Lisp-Entry "get-debuggees" () 59 25 ("debuggees" "validate-debuggees" "when" "false" "validate?" "validate?:")}
        {Lisp-Entry "get-selected-debuggee" () 65 25 ("selected-debuggee")}
        {Lisp-Entry "set-selected-debuggee" () 69 25 ("selected-debuggee" "set!" "debuggee")}
        {Lisp-Entry "get-toplevel-hwnd" () 79 25 ("get-toplevel" "get-handle")}
        {Lisp-Entry "attach-debuggee" () 88 25 ("select-debuggee" "selected-debuggee" "null?" "when" "list" "append!" "set!" "debuggees" "member?" "unless" "debuggee")}
        {Lisp-Entry "detach-debuggee" () 96 25 ("car" "select-debuggee" "selected-debuggee" "=" "test:" "remove!" "set!" "debuggees" "member?" "when" "debuggee")}
        {Lisp-Entry "select-debuggee" () 109 25 ("null?" "if" "format" "user-message" "present-debuggee" "presented" "set-icon" "debugger" "locate-component" "item" "let" "function" "post-primary" "get-status-bar" "status" "get-icon" "essay" "icon" "get-application" "appl" "let*" "set!" "selected-debuggee" "/=" "when" "debuggee")}
        {Lisp-Entry "select-next" () 126 25 ("select-debuggee" "length" "1" "+" "modulo" "element" "debuggee" "position" "return:" "debuggees" "selected-debuggee" "find" "rank" "let*")}
        {Lisp-Entry "validate-debuggees" () 138 11 ("car" "select-debuggee" "selected-debuggee" "member?" "not" "when" "live?" "Local-Proxy" "is?" "or" "debuggee" "dynamic" "function" "collect-if" "debuggees" "set!")}
        {Lisp-Entry "detach-debuggees" () 152 25 ("debuggees" "detach-from-controller" "/=" "when" "debuggee" "dynamic" "function" "for-each" "get-local-debuggee" "jedi" "get-application" "appl" "let*" "validate-debuggees")}
        {Lisp-Entry "debug-message" () 168 25 ("debug" "message")}
        {Lisp-Entry "status-message" () 173 25 ("user-message" "message")}
        {Lisp-Entry "debug-exception" () 183 25 ("message-box" "yes" "present-exception" "=" "when" "stack" "message" "type")}
        {Lisp-Entry "present-exception" () 189 11 ("cancel:" "yes:" "error" "type:" "format" "message-box" "message" "type")}}}})
"Debugger-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Debugger-Tester.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.suite.Debugger-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-assert" "test-error?" "invoke")}
        {Lisp-Entry "test-error?" () 62 11 ()}
        {Lisp-Entry "test-assert" () 71 11 ()}}}})
"Debugger-Thread"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Debugger-Thread.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.debugger.Debugger-Thread" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Thread" () 45 7 ("Object")
        {Lisp-Entry "present" () 53 26 ()}
        {Lisp-Entry "get-state" () 62 26 ("run")}
        {Lisp-Entry "get-primary?" () 66 26 ("false")}
        {Lisp-Entry "get-frames" () 75 26 ()}}}})
"Debugger-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "workspace" "Debugger-Workspace.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.workspace.Debugger-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Debugger-Workspace" () 47 7 ("Jazz-Console-Manager" "Debugger-Console-Manager" "Properties-Manager" "Search-Results" "Output-Log" "Web-Servers-Manager" "Variables-View" "second" "Debuggers-View" "selection" "Workbench-Manager" "Repositories-Manager" "Favorites-Manager" "model-name:" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 76 11 ("debugger")}}}})
"Debuggers-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Debuggers-View.fusion"} {Time 128367198440000000L}
    {Lisp-Entry "jazz.debugger.debugger.Debuggers-View" () 37 9 ("jazz")
      {Lisp-Entry "Debuggers-View" () 50 7 ("on-context-menu" "context-menu-handler:" "on-select-stack" "Selection-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" "stack" "shown?:" "header" "fill" "content" "flat?:" "vscroll?:" "center" "scroller" "on-update" "update" "3" "on-toggle-c++-frames" "tail" "c++-frames" "on-continue" "continue" "on-toplevel" "terminate" "on-break" "break" "5" "on-open-snapshot" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "open" "north" "location:" "6" "0" "Rect" "layout-insets:" "flow" "Dimension" "size:" "tools" "name:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "advanced-view?" () 53 14 ("false")}
        {Lisp-Entry "frame-indicator" () 54 14 ()}
        {Lisp-Entry "snapshots" () 57 12 ("set-snapshots" "get-snapshots")}
        {Lisp-Entry "external-name" () 80 16 ("debuggers-view" "rest")}
        {Lisp-Entry "palette-class" () 90 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 95 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 100 16 ()}
        {Lisp-Entry "get-tools-view" () 109 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 113 11 ("acquire-focus" "stack" "locate" "tree" "let")}
        {Lisp-Entry "install" () 123 11 ("update" "get-application" "get-loop" "add-level-change-listener" "on-level-change" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "nextmethod" "rest")}
        {Lisp-Entry "destroy" () 130 11 ("nextmethod" "self" "get-application" "get-loop" "remove-level-change-listener")}
        {Lisp-Entry "get-snapshots" () 140 18 ("snapshots")}
        {Lisp-Entry "set-snapshots" () 144 18 ("snapshots" "set!" "value")}
        {Lisp-Entry "show-c++-frames?" () 148 11 ("c++-frames" "locate" "get-selected?")}
        {Lisp-Entry "resize" () 157 11 ("scroller" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-context-menu" () 162 11 ("track-popup-menu" "when" "selected-object" "new-context-menu" "menu" "let" "dynamic" "function" "with-context-click" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "Snapshot-Extensions" () 173 14 ()}
        {Lisp-Entry "on-open-snapshot" () 177 11 ("open-snapshot" "Snapshot-Extensions" "extensions:" "Base" "Directory" "directory:" "OpenFile-Dialog" "get-modal" "with-preserved-current-directory" "get-shift?" "if" "file" "let" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-select-stack" () 188 11 ("edit-frame" "frame-change" "evt")}
        {Lisp-Entry "on-break" () 193 11 ("on-break" "unimplemented" "evt")}
        {Lisp-Entry "on-continue" () 197 11 ("on-continue" "unimplemented" "evt")}
        {Lisp-Entry "on-toplevel" () 201 11 ("update" "sleep" "stop" "when" "selected-thread" "thread" "let" "evt")}
        {Lisp-Entry "on-update" () 209 11 ("update" "evt")}
        {Lisp-Entry "on-level-change" () 213 11 ("frame-change" "update" "uninstall-active-frame-indicator" "0" "get-level" "=" "when" "get-loop" "loop" "get-application" "appl" "let*" "evt")}
        {Lisp-Entry "on-toggle-c++-frames" () 222 11 ("equal?" "test:" "data" ":use" "update" "dynamic" "function" "with-preserved-selection" "stack" "locate" "tree" "let" "evt")}
        {Lisp-Entry "Frame-Indication-Color" () 236 14 ("Light-Green" "name:" "Color")}
        {Lisp-Entry "edit-frame" () 240 11 ("Frame-Snapshot" "error?:" "false" "activate-focus?:" "edit" "list" "1" "+" "0" "subseq" "string->symbol" "model" "when" "position" "return:" "find" "pos" "frame-name" "name" "Compiled-Procedure-Frame" "Jazz-Code-Location" "new" "install-frame-indicator" "bell" "get-thread" "get-frame-location" "location" "get-address" "address" "let*" "Closure-Frame" "typecase" "uninstall-active-frame-indicator" "null?" "if" "selected-frame" "frame" "let")}
        {Lisp-Entry "install-frame-indicator" () 265 11 ("frame-indicator" "set!" "true" "set-visible?" "bring-to-front" "reset-tooltip" "ensure-cell-displayed" "get-start" "Frame-Indication-Color" "fill" "find-location" "range" "text" "frame" "receive" "get-message" "message-box" "err" "Location-Error" "catch" "uninstall-active-frame-indicator" "code-location")}
        {Lisp-Entry "uninstall-frame-indicator" () 278 11 ("reset-tooltip" "get-start" "unfill" "find-location" "range" "text" "frame" "receive" "get-message" "message-box" "err" "Location-Error" "catch" "code-location")}
        {Lisp-Entry "uninstall-active-frame-indicator" () 286 21 ("set!" "uninstall-frame-indicator" "frame-indicator" "when")}
        {Lisp-Entry "update" () 293 18 ("snapshots" "stack" "locate" "update")}
        {Lisp-Entry "frame-change" () 297 11 ("process-frame-change" "Frame-Snapshot" "Execution-Frame" "is?" "null?" "or" "when" "selected-frame" "frame" "let")}
        {Lisp-Entry "collect-presented" () 306 11 ("Compiled-Procedure-Frame" "Proxy-Frame" "Closure-Frame" "is?" "or" "frame" "dynamic" "function" "collect-if" "stack")}
        {Lisp-Entry "select-first-frame" () 314 18 ("edit-frame" "frame-change" "set-single-selection" "Closure-Frame" "true" "set!" "get-address" "=" "Execution-Frame" "is?" "and" "when" "get-user-data" "frame" "rank" "row" "dynamic" "function" "for-each-visible-row" "return" "lambda" "call/ec" "false" "passed?" "stack" "locate" "tree" "let" "from")}
        {Lisp-Entry "selected-debuggee" () 337 18 ("else" "Frame-Snapshot" "get-thread" "Execution-Frame" "get-debuggee" "Debuggee-Thread-Remotable" "Debuggee-Remotable" "typecase" "selected-object" "object" "let")}
        {Lisp-Entry "selected-thread" () 348 18 ("else" "Frame-Snapshot" "get-thread" "Execution-Frame" "Debuggee-Thread-Remotable" "typecase" "selected-object" "object" "let")}
        {Lisp-Entry "selected-frame" () 358 18 ("Frame-Snapshot" "Execution-Frame" "is?" "or" "when" "selected-object" "object" "let")}
        {Lisp-Entry "selected-object" () 366 18 ("get-row" "get-user-data" "when" "get-single-selection" "n" "stack" "locate" "tree" "let*")}
        {Lisp-Entry "present-stack" () 378 11 ("get-address" "format" "list" "text" "image" "frame" "bind" "info" "dynamic" "function" "advanced-view?" "if" "present-frame" "map" "not-null?" "collect-if" "presented" "let" "stack")}
        {Lisp-Entry "present-frame" () 390 11 ("present" "get-image" "list" "frame")}
        {Lisp-Entry "extract-address" () 394 11 ("read-string-element" "empty-string?" "unless" "string")}
        {Lisp-Entry "standardize-sym" () 399 11 ("length" "subseq" "starts-with?" "if" "prefix" "let" "sym")}
        {Lisp-Entry "new-context-menu" () 411 11 ("else" "Snapshot-Menu" "Pair" "Frame-Snapshot" "Frame-Menu" "Execution-Frame" "Thread-Menu" "Debuggee-Thread-Remotable" "Debuggee-Menu" "new" "Debuggee-Remotable" "typecase" "object")}
        {Lisp-Entry "exit-selected-debuggee" () 424 11 ("update" "sleep" "exit" "selected-object" "object" "let")}
        {Lisp-Entry "close-selected-snapshot" () 431 11 ("update" "remove!" "snapshots" "set!" "selected-object" "object" "let")}
        {Lisp-Entry "select-debuggee-toplevel" () 437 11 ("select-foreground-hwnd" "get-toplevel-hwnd" "toplevel-hwnd" "selected-debuggee" "debuggee" "let*")}
        {Lisp-Entry "open-snapshot" () 444 18 ("add-snapshot" "error" "exists?" "not" "or" "unless" "get-process" "format" "get-directory" "new-file" "essay" "executable" "get-extension" "ci=" "crash-file?" "read" "snapshot" "let*" "File-Reader" "new" "reader" "with-closed" "rest" "file")}
        {Lisp-Entry "add-snapshot" () 454 18 ("update" "list" "cons" "snapshots" "set!" "executable" "file" "snapshot")}}
      {Lisp-Entry "Stack-View" () 464 7 ("toplevel-controls?:" "width:" "title:" ":icons" "portfolio:" "Tree-View")
        {Lisp-Entry "update" () 472 18 ("update-snapshots" "update-debuggers" "update-debuggees" "remove-every-row" "dynamic" "function" "with-update-locked" "snapshots")}
        {Lisp-Entry "update-debuggees" () 481 11 ("text" "frame" "bind" "info" "collect-presented" "present-stack" "presented" "get-breaked-stack" "stack" "when" "father:" "thread-row" "else" "error" "break" "case" "image" "get-primary?" "primary?" "get-state" "state" "present" "thread" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "add-row" "debuggee-row" "get-process-threads" "reverse!" "threads" "get-name" "title" "debuggee" "dynamic" "function" "for-each" "get-local-debugger-server" "get-debuggees" "debuggees" "get-application" "appl" "let*")}
        {Lisp-Entry "update-debuggers" () 507 11 ("get-image" "frame" "get-frames" "frames" "run" "neq?" "when" "father:" "thread-row" "else" "error" "break" "case" "image" "get-primary?" "primary?" "get-state" "state" "thread" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "add-row" "debugger-row" "get-threads" "threads" "present" "title" "get-process" "process" "let*" "debugger" "dynamic" "function" "for-each" "get-debuggers" "debuggers" "let")}
        {Lisp-Entry "update-snapshots" () 532 11 ("Coalesced-Frames-Snapshot" "Lisp-Frame-Snapshot" "is?" "or" "when" "get-image" "present" "let" "frame" "show-c++-frames?" "c++?" "get-frame-snapshot" "parameters" "address" "info" "map" "coalesce-frames" "frames" "get-call-stack" "call-stack" "father:" "thread-row" "0" ">" "if" "image" "get-state" "state" "get-label" "thread" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "list" "children:" "expanded" "state:" "add-row" "process-row" "get-threads" "threads" "get-base" "get-process" "format" "title" "let*" "Symbol-Handler" "new" "essay" "handler" "with" "executable" "file" "process" "bind" "snapshot" "dynamic" "function" "for-each" "snapshots")}
        {Lisp-Entry "get-frame-snapshot" () 561 11 ("start:" "1" "+" "method-name" "0" "subseq" "string->symbol" "model" "Lisp-Frame-Snapshot" "position" "return:" "find" "pos" "tokenise" "File" "file" "line" "filename" "receive" "Cpp-Frame-Snapshot" "new" "null?" "get-line-from-addr" "info" "let" "when" "standardize-sym" "title" "get-sym-from-addr" "sym" "extract-address" "addr" "case" "lisp" "c++" "starts-with?" "if" "kind" "->string" "let*" "parameters" "address" "handler" "thread")}
        {Lisp-Entry "coalesce-frames" () 587 11 ("get-output" "cddr" "Coalesced-Frames-Snapshot" "put" "memq?" "eq?" "t" "s" "f" "cadr" "third" "second" "let*" "when" "cdr" "set!" "car" "first" "not-null?" "while" "other" "else" "lisp" "Lisp-Frame-Snapshot" "c++" "eval" "starts-with?" "or" "get-title" "title" "Cpp-Frame-Snapshot" "is?" "and" "none" "null?" "cond" "frame" "dynamic" "function" "get-type" "List-Factory" "new" "fact" "let" "frames" "thread")}}
      {Lisp-Entry "Debuggee-Menu" () 629 7 ("on-exit" "exit" "on-select" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "select" "name:" "Context-Menu")
        {Lisp-Entry "on-select" () 639 11 ("select-debuggee-toplevel" "evt")}
        {Lisp-Entry "on-exit" () 644 11 ("exit-selected-debuggee" "evt")}}
      {Lisp-Entry "Snapshot-Menu" () 654 7 ("on-close" "form:" "Event-Handler" "action-handler:" "title:" "close" "name:" "Context-Menu")
        {Lisp-Entry "on-close" () 662 11 ("close-selected-snapshot" "evt")}}
      {Lisp-Entry "Thread-Menu" () 672 7 ("on-break" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "break" "name:" "Context-Menu")
        {Lisp-Entry "on-break" () 680 11 ("evt")}}
      {Lisp-Entry "Frame-Menu" () 689 7 ("on-edit" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "edit" "name:" "Context-Menu")
        {Lisp-Entry "on-edit" () 697 11 ("evt")}}}})
"Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Declaration" () 45 7 ("Lexical-Binding")
        {Lisp-Entry "access" () 48 8 ("generate")}
        {Lisp-Entry "compatibility" () 49 8 ("generate")}
        {Lisp-Entry "attributes" () 50 8 ("generate")}
        {Lisp-Entry "toplevel" () 51 8 ("generate")}
        {Lisp-Entry "parent" () 52 8 ("generate")}
        {Lisp-Entry "children" () 53 8 ("generate")}
        {Lisp-Entry "print" () 56 11 ("get-name" "format" "function" "print-unreadable" "detail" "output" "declaration")}}}})
"Declaration-Reference"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Declaration-Reference.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Declaration-Reference" () 37 9 ("jazz")
      {Lisp-Entry "Declaration-Reference" () 40 7 ("Object")
        {Lisp-Entry "name" () 43 8 ("generate")}
        {Lisp-Entry "declaration" () 44 8 ("generate")}
        {Lisp-Entry "print" () 47 11 ("Lexical-Binding.get-name" "if" "get-name" "format" "get-declaration" "declaration" "let" "function" "print-unreadable" "detail" "output" "reference")}}}})
"Definition-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Definition-Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.Definition-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Definition-Declaration" () 40 7 ("Declaration")
        {Lisp-Entry "signature" () 43 8 ()}}}})
"Definition-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Definition-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Definition-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Definition-Doc" () 45 7 ("Element-Doc")}}})
"Definition-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Definition-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Definition-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Definition-Entry" () 45 7 ("Java-Entry")
        {Lisp-Entry "type" () 48 8 ()}
        {Lisp-Entry "literal?" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("literal?~self" "type~self" "set!" "nextmethod" "references" "definitions" "column" "line" "literal?" "type" "name" "modifiers")}
        {Lisp-Entry "get-type" () 63 18 ("type")}
        {Lisp-Entry "set-type" () 67 18 ("type" "set!" "value")}
        {Lisp-Entry "get-literal?" () 71 18 ("literal?")}
        {Lisp-Entry "update-indexes" () 80 11 ("references" "key" "dynamic" "function" "for-each" "name" "update-index" "references-index" "definitions-index")}}}})
"Definitions-Search"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Definitions-Search.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.search.Definitions-Search" () 37 9 ("jazz")
      {Lisp-Entry "Definitions-Search" () 48 7 ("references" "selected?:" "Dimension" "size:" "Point" "position:" "definitions" "title:" "domain" "name:" "Search-View")
        {Lisp-Entry "get-search-domains" () 63 11 ("references" "definitions")}
        {Lisp-Entry "search-targets" () 73 11 ("bell" "targets")}
        {Lisp-Entry "search-definitions" () 82 21 ("select-results" "get-search-targets" "add-results" "->string" "list" "set-search-targets" "true" "locate" "set-selected?" "set-references-target" "set-mode" "get-results" "results" "let" "definitions" "name")}
        {Lisp-Entry "search-references" () 92 21 ("select-results" "get-search-targets" "add-results" "->string" "list" "set-search-targets" "true" "locate" "set-selected?" "set-references-target" "set-context" "set-mode" "get-results" "results" "let" "ctx" "references" "name")}}}})
"Definitions-Search-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Definitions-Search-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.search.Definitions-Search-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Definitions-Search-Preferences" () 46 7 ("title:" "Search-View-Preferences")}}})
"Descendants-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Descendants-Editor.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Descendants-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Descendants-Editor" () 50 7 ("width:" "descendant" "tree" "header" "content" "vscroll?:" "hscroll?:" "document" "style:" "scroller" "on-toggle-branches" "toggle-branches" "on-new-default" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "Dimension" "size:" "new-default" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "external-name" () 67 16 ("descendants-editor" "rest")}
        {Lisp-Entry "palette-class" () 77 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 82 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 87 16 ()}
        {Lisp-Entry "client-activate" () 91 11 ("get-designer" "set-designer" "get-client" "set-client" "set-editor" "View-Editor" "typed?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "client-deactivate" () 99 11 ("set-designer" "set-client" "set-editor")}
        {Lisp-Entry "focus-default" () 110 11 ("auto-select-first" "acquire-focus" "locate" "tree" "let")}
        {Lisp-Entry "get-tools-view" () 116 11 ("tools" "locate")}
        {Lisp-Entry "install-in-host" () 125 11 ("false" "header" "set-shown?" "true" "scroller" "locate" "set-flat?" "Host-Docked" "is?" "when" "2" "0" "Rect" "set-layout-insets" "fill" "get-root" "set-layout-type" "nextmethod" "host")}
        {Lisp-Entry "get-tree" () 139 18 ("tree" "locate")}
        {Lisp-Entry "on-new-default" () 148 11 ("new-default" "evt")}
        {Lisp-Entry "on-toggle-contents" () 152 11 ("get-show-contents?" "not" "set-show-contents?" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "on-toggle-branches" () 157 11 ("get-show-branches?" "not" "set-show-branches?" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "new-default" () 167 29 ("bell")}
        {Lisp-Entry "add-default" () 171 11 ("parent:" "add-component-class" "get-client" "parent" "get-tree" "tree" "let*" "class")}
        {Lisp-Entry "get-editor" () 182 18 ("get-tree" "get-editor")}
        {Lisp-Entry "set-editor" () 186 18 ("get-tree" "set-editor" "editor")}
        {Lisp-Entry "get-client" () 195 18 ("get-tree" "get-client")}
        {Lisp-Entry "set-client" () 199 18 ("get-tree" "set-client" "client")}
        {Lisp-Entry "get-designer" () 208 18 ("get-tree" "get-designer")}
        {Lisp-Entry "set-designer" () 212 18 ("get-tree" "set-designer" "designer")}}}})
"Descendants-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Descendants-Tree.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.editor.Descendants-Tree" () 37 9 ("Component-Column" "register-autoclass" "jazz")
      {Lisp-Entry "Descendants-Tree" () 49 7 ("width:" "title:" "descendant" "name:" "on-selection-change" "form:" "Event-Handler" "selection-handler:" "multiple-selection?:" ":icons" "portfolio:" "reorderable?:" "draggable?:" "Components-Tree")
        {Lisp-Entry "group?" () 52 12 ("set-group?" "get-group?" "false")}
        {Lisp-Entry "editable?" () 53 12 ("set-editable?" "get-editable?" "true")}
        {Lisp-Entry "highlight-edited?" () 54 12 ("set-highlight-edited?" "get-highlight-edited?" "true")}
        {Lisp-Entry "show-branches?" () 55 12 ("set-show-branches?" "get-show-branches?" "false")}
        {Lisp-Entry "get-group?" () 68 18 ("group?")}
        {Lisp-Entry "set-group?" () 72 18 ("group?" "set!" "value")}
        {Lisp-Entry "get-editable?" () 76 18 ("editable?")}
        {Lisp-Entry "set-editable?" () 80 18 ("editable?" "set!" "value")}
        {Lisp-Entry "get-highlight-edited?" () 84 18 ("highlight-edited?")}
        {Lisp-Entry "set-highlight-edited?" () 88 18 ("highlight-edited?" "set!" "flag")}
        {Lisp-Entry "get-show-branches?" () 92 18 ("show-branches?")}
        {Lisp-Entry "set-show-branches?" () 96 18 ("preserving-update" "show-branches?" "set!" "value")}
        {Lisp-Entry "mouse-down" () 106 11 ("editor" "edit-component" "bell" "not" "if" "selected-component" "component" "let" "editable?" "alt-down?" "and" "when" "nextmethod" "pos")}
        {Lisp-Entry "double-click" () 115 11 ("editor" "edit-component" "bell" "selected-component" "component" "let" "nextmethod" "editable?" "highlight-edited?" "not" "or" "if" "pos")}
        {Lisp-Entry "branch-changed" () 129 11 ("preserving-update")}
        {Lisp-Entry "selection-changed" () 133 11 ("false" "generate-event?:" "row-rank" "set-selection" "ensure-expanded" "for-each" "groupify-selection" "if" "component-row" "map" "remove-nils" "rows" "let" "Details-Tree" "is?" "self" "eq?" "not" "group?" "or" "unless" "focus?" "force-parent?" "origin" "old" "selection")}
        {Lisp-Entry "groupify-selection" () 140 11 ("find-ascendant" "Group" "is?" "if" "component" "dynamic" "function" "map" "selection")}
        {Lisp-Entry "update" () 153 11 ("update-selection" "get-rights" "insert-toplevel" "client" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "selected-components" "selected-components:" "get-expand-state" "expand-state" "expand-state:")}
        {Lisp-Entry "insert-toplevel" () 162 29 ("0" "true" "client" "insert-component" "rights")}
        {Lisp-Entry "insert-component?" () 166 29 ("true" "component")}
        {Lisp-Entry "insert-component" () 170 29 ("insert-components" "user-data:" "title:" "Component-Node" "new" "list" "children:" "father:" "Component-Row" "class:" "add-row" "subrow" "row-state" "collapsed" "null?" "if" "component-state" "component-image" "either" "component-presentation" "title" "get-components" "components" "let*" "insert-component?" "when" "state" "state:" "image" "image:" "level" "update?" "rights" "component" "row")}
        {Lisp-Entry "insert-components" () 181 29 ("get-components" "insert-component-list" "level" "update?" "rights" "component" "row")}
        {Lisp-Entry "insert-component-list" () 185 29 ("sort-components" "sort-components?" "if" "1" "+" "essay" "insert-component" "access-rights" "child-rights" "access-granted?" "receive" "child" "for-each" "Branch" "is-not?" "show-branches?" "not" "Group" "is?" "dynamic" "function" "collect-if" "set!" "group?" "when" "level" "update?" "rights" "components" "component" "row")}
        {Lisp-Entry "row-state" () 199 29 ("collapsed" "expanded" "if" "level" "update?" "component")}
        {Lisp-Entry "refresh" () 210 11 ("refresh-descendants" "descendants" "refresh-component" "case" "what" "component")}
        {Lisp-Entry "refresh-component" () 216 11 ("invalidate-cell" "get-cell-data" "set-title" "get-presentation" "title" "0" "Cell" "new" "cell" "let" "when" "row-rank" "rank" "component-row" "row" "let*" "component")}
        {Lisp-Entry "refresh-descendants" () 227 11 ("expand" "expanded" "=" "true" "insert-components" "remove-every-son" "1" "get-level" "+" "level" "get-state" "state" "dynamic" "function" "with-update-locked" "when" "component-row" "row" "let" "component")}
        {Lisp-Entry "get-rights" () 245 11 ("get-rights" "editor" "essay")}
        {Lisp-Entry "access-rights" () 251 11 ("can-access?" "false" "find-child-rights" "child-rights" "let" "true" "values" "null?" "if" "child" "rights")}
        {Lisp-Entry "highlight-component" () 265 18 ("true" "set-component-highlighted?" "component")}
        {Lisp-Entry "unhighlight-component" () 269 18 ("false" "set-component-highlighted?" "component")}
        {Lisp-Entry "highlight-edited" () 273 11 ("true" "set-component-highlighted?" "highlight-edited?" "when" "component")}
        {Lisp-Entry "unhighlight-edited" () 278 11 ("false" "set-component-highlighted?" "highlight-edited?" "when" "component")}
        {Lisp-Entry "set-component-highlighted?" () 283 11 ("invalidate-cell" "get-cell-data" "set-highlighted?" "0" "Cell" "new" "cell" "when" "component-visible-row" "rank" "let" "flag" "component")}
        {Lisp-Entry "get-draggable?" () 296 11 ("can-move-component?" "Component" "is?" "and" "selected-component" "component" "let")}
        {Lisp-Entry "on-designer" () 306 11 (":what" "refresh" ":refresh" "target:" "send-before-target" ":send-before" "child-remove" ":child-remove" "descendant?:" "parent:" "child:" "child-add" ":child-add" ":presentation" "component:" "get-property" "presentation-change" ":presentation-change" "get-kind" "case" "evt")}
        {Lisp-Entry "presentation-change" () 315 11 ("invalidate-cell" "0" "Cell" "new" "cell" "let" "set-title" "when" "first-child" "node" "row-rank" "rank" "find-row" "row" "let*" "Branch" "is?" "show-branches?" "not" "Group" "is-not?" "group?" "and" "or" "unless" "presentation" "component")}
        {Lisp-Entry "child-add" () 328 11 ("expand" "reorder-component" "when" "state:" "false" "insert-component" "dynamic" "function" "with-update-locked" "collapsed" "expanded" "state" "0" "get-level" "if" "level" "parent-relocation" "find-row" "row" "let*" "Branch" "is?" "show-branches?" "not" "Group" "is-not?" "group?" "and" "or" "unless" "descendant?" "parent" "child")}
        {Lisp-Entry "child-remove" () 342 11 ("remove-row" "dynamic" "function" "with-update-locked" "find-row" "row" "let" "Branch" "is?" "show-branches?" "not" "Group" "is-not?" "group?" "and" "or" "unless" "child")}
        {Lisp-Entry "send-before-target" () 351 11 ("find-component-insertion" "position:" "move-component-row" "dynamic" "function" "with-update-locked" "parent-relocation" "parent-row" "find-row" "child-row" "let" "target" "parent" "child")}}
      {Lisp-Entry "Component-Column" () 366 7 ("Tree-Node-Column")
        {Lisp-Entry "highlight-color" () 369 12 ("set-highlight-color" "Dark-Red" "name:" "Color")}
        {Lisp-Entry "get-highlight-color" () 372 18 ("highlight-color")}
        {Lisp-Entry "set-highlight-color" () 376 18 ("highlight-color" "set!" "value")}
        {Lisp-Entry "draw-cell" () 380 11 ("highlight-color" "false" "text-rect" "frame-rect" "get-highlighted?" "Component-Node" "is?" "and" "when" "nextmethod" "height" "width" "cell" "row" "context" "dc")}}
      {Lisp-Entry "Component-Row" () 394 7 ("Tree-Row")
        {Lisp-Entry "auto-collapse" () 397 11 ("get-editor" "close" "remove-row" "Editor-Row" "is?" "when" "nextmethod" "get-sons" "car" "row" "get-tree" "tree" "let")}}
      {Lisp-Entry "Component-Node" () 411 7 ("Tree-Node")
        {Lisp-Entry "highlighted?" () 414 18 ("generate" "false")}}}})
"Descriptors"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "descriptor" "Descriptors.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "Descriptors" () 37 9 ("jazz")}})
"Designer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "designer" "Designer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.designer.Designer" () 37 9 ("jazz")
      {Lisp-Entry "Designer" () 49 7 ("Object")
        {Lisp-Entry "form" () 52 8 ()}
        {Lisp-Entry "reference" () 53 8 ()}
        {Lisp-Entry "listeners" () 54 8 ()}
        {Lisp-Entry "modified?" () 55 8 ("false")}
        {Lisp-Entry "initialize" () 63 11 ("setup-form" "reference~self" "set!" "nextmethod" "reference" "reference:" "form" "form:")}
        {Lisp-Entry "setup-form" () 69 11 ("setup-class-form" "setup-file-form" "file?" "get-origin" "origin" "let" "install" "model-name:" "action:" "reference" "class-of" "origin:" "false" "textual?:" "Form" "new" "form" "set!" "not" "if" "frm")}
        {Lisp-Entry "setup-class-form" () 90 11 ("form" "set!" "frm")}
        {Lisp-Entry "setup-file-form" () 94 11 ("form" "set!" "frm")}
        {Lisp-Entry "get-form" () 103 18 ("form")}
        {Lisp-Entry "set-form" () 107 18 ("form" "set!" "value")}
        {Lisp-Entry "get-reference" () 111 18 ("reference")}
        {Lisp-Entry "get-modified?" () 115 18 ("modified?")}
        {Lisp-Entry "set-modified?" () 119 18 ("modified?" "set!" "state")}
        {Lisp-Entry "save" () 128 26 ("save-content" ":default-extension" "save-as" "not" "if" "form" "get-origin" "origin" "let" "dynamic" "function" ":wait" "with-cursor" "extensions" "extensions:" "default-extension" "default-extension:")}
        {Lisp-Entry "save-to" () 137 18 ("false" "set-modified?" "save-to-file" "form" "set-origin" "save-as" "not" "if" "file")}
        {Lisp-Entry "Default-Extension" () 145 14 ()}
        {Lisp-Entry "Default-Extensions" () 148 14 ()}
        {Lisp-Entry "save-as" () 152 11 ("save-content" "Default-Extensions" "Default-Extension" "either" ":default-extension" "SaveFile-Dialog" "get-modal" "form" "set-origin" "extensions" "extensions:" "default-extension" "default-extension:")}
        {Lisp-Entry "save-content" () 157 11 ("false" "set-modified?" "save-to-class" "save-to-file" "file?" "if" "form" "get-origin" "origin" "let")}
        {Lisp-Entry "save-to-class" () 165 11 ("acquire-focus" "bring-to-front" "set-visible?" "close" "save" "begin" "not" "format" "insert-string" "set-selection" "dynamic" "function" "with-update-locked" "find-location" "range" "text" "frame" "receive" "get-message" "error" "err" "Location-Error" "catch" "set-class-form" "Language" "Interpreter" "evaluate" "2" "true" "saved-form" "output" "find-document" "being-edited?" "find-source" "code-source" "Jazz-Code-Location" "new" "code-location" "list" "location" ":new-form" "form:" "get-self-form" "form" "eq?" "if" "where" "type-name" "class-name" "let*" "IDE" "typed?" "when" "get-application" "appl" "let" "class")}
        {Lisp-Entry "save-to-file" () 199 11 ("0" "false" "print-to" "form" "get-model-name" "output-header" "true" "set-printer-use-utf8?" "File-Printer" "new" "printer" "with-closed" "format" "message-box" "read-only?" "exists?" "and" "if" "file")}
        {Lisp-Entry "saved-form" () 209 18 ("get-output" "print-to" "String-Printer" "new" "printer" "let" "align-name?" "align-name?:" "true" "space-properties?" "space-properties?:" "level" "class-form?")}
        {Lisp-Entry "print-to" () 215 18 ("base:" "form?:" "pretty-print" "if" "base" "form" "form->node" "node" "let" "format" "when" "align-name?" "align-name?:" "true" "space-properties?" "space-properties?:" "printer" "level" "class-form?")}
        {Lisp-Entry "get-printer-class" () 226 29 ("Form-Printer")}
        {Lisp-Entry "set-name" () 235 26 ("set-modified?" "fire-property-change" "name-info" "property-field" "property" "fire-presentation-change" "presentation" "fire-name-change" "set-name" "install" "get-action" "neq?" "and" "owned-form" "component-form" "component-ancestry" "ancestry" "when" "get-client-form" "let" "dynamic" "function" "reference" "either" "for-each-branch" "get-presentation" "old-presentation" "get-name" "old-name" "find-form" "form" "target-branch" "let*" "undoable?" "undoable?:" "design-events?" "design-events?:" "true" "branch" "branch:" "name" "component")}
        {Lisp-Entry "set-tag-source" () 259 18 ("true" "set-modified?" "set-tag-source" "find-form" "form" "let" "tag-source" "component")}
        {Lisp-Entry "set-property" () 265 26 ("set-modified?" "get-property" "fire-property-change" "fire-presentation-change" "presentation" "write-property" "get-presentation" "old-presentation" "presentation-property?" "essay" "fire-presentation?" "has-property?" "read-property" "old-value" "find-next-branch" "next-restore" "next-form" ":restore?" "find-form" "restore" "receive" "error" "neq?" "get-creator-branch" "creator-branch" "when" "assert" "property-field" "reference" "follow-component" "component" "let*" "get-client-form" "follow-form" "form" "and" "Path" "is?" "path?" "not" "or" "installed?" ":undoable?" "set-property" "eq?" "if" "target-branch" "let" "false" "undoable?" "undoable?:" "design-events?" "design-events?:" "true" "branch" "branch:" "value" "property" "component/path")}
        {Lisp-Entry "remove-property" () 307 26 ("set-modified?" "remove-property" "set-property" "fire-property-change" "write-property" "begin" "get-property" "value" "let" "has-property?" "when" "find-next-branch" "next-restore" "next-form" ":restore?" "find-form" "restore" "form" "receive" "assert" "property-field" "reference" "follow-component" "if" "component" "Path" "is?" "path?" "not" "or" "installed?" "target-branch" "let*" "false" "undoable?" "undoable?:" "design-events?" "design-events?:" "true" "branch" "branch:" "default-value" "property" "component/path")}
        {Lisp-Entry "add-child" () 331 26 ("set-modified?" "fire-child-add" "set-property" "value" "property" "dynamic" "function" "for-each-property" "get-name" "add-to-index" "reference" "set-creator" "set-name" "self" "remember-creation" "when" "add-form" "set-form" "class-of" "type-name" "model-name:" "action:" "get-context" "context:" "textual?:" "Form" "new" "child-form" ":restore?" "find-form" "restore" "form" "receive" "set-parent" "target-branch" "let" "false" "descendant?" "descendant?:" "design-events?" "design-events?:" "properties" "properties:" "name" "name:" "true" "branch" "branch:" "parent" "child")}
        {Lisp-Entry "remove-child" () 357 26 ("set-modified?" "fire-child-remove" "close" "get-restore-form" "get-client-form" "for-each-branch" "remove-child" "find-child" "child-form" "owned-form" "component-ancestry" "parent-ancestry" "when" "dynamic" "function" "purge-references" "form" "find-form" "parent-form" "get-parent" "parent" "get-name" "name" "let*" "get-presentation" "neq?" "and" "find-owner" "owner" "either" "effective" "error" "reference" "eq?" "if" "target-branch" "let" "design-events?" "design-events?:" "true" "branch" "branch:" "child")}
        {Lisp-Entry "remove-children" () 390 18 ("get-children" "remove-child" "child" "dynamic" "function" "for-each" "design-events?" "design-events?:" "true" "branch" "branch:" "parent")}
        {Lisp-Entry "purge-branch" () 398 26 ("remove-child" "install-form" ":restore?" "restore-form" "form" "receive" "find-form" "parent-form" "get-parent" "parent" "target-branch" "let*" "design-events?" "design-events?:" "true" "branch" "branch:" "component")}
        {Lisp-Entry "move-components" () 407 26 ("set-modified?" "false" "descendant?:" "design-events?:" ":name-resolution" "instantiate-parcels" "prog1" "delete-components" "verify-name-conflicts" "name-resolution" "package-components" "parcels" "remove-redundant-descendants" "let*" "true" "branch" "branch:" "destination" "components")}
        {Lisp-Entry "send-before" () 416 26 ("set-modified?" "fire-send-before" "send-child-before" "send-before" "essay" "target-form" "child-form" "find-form" "parent-form" "get-parent" "parent" "target-branch" "let*" "true" "branch" "branch:" "target" "child")}
        {Lisp-Entry "send-to-back" () 428 18 ("get-parent" "first-child" "send-before" "true" "branch" "branch:" "child")}
        {Lisp-Entry "bring-to-front" () 432 18 ("send-before" "true" "branch" "branch:" "child")}
        {Lisp-Entry "cut-components" () 441 26 ("delete-components" "copy-components" "remove-redundant-descendants" "let" "components")}
        {Lisp-Entry "copy-components" () 447 26 (":jazz-parcels" "set-jazz-clipboard" "copy-components-text" "text" "remove-redundant-descendants" "let" "components")}
        {Lisp-Entry "copy-components-text" () 453 18 ("get-output" "get-content" "0" "print-form" "form" "get-object-id" "get-process-id" "class-of" "type-name" "parcel" "dynamic" "function" "for-each" "format" "package-components" "parcels" "String-Printer" "output" "get-printer-class" "new" "printer" "let" "branch" "branch:" "components")}
        {Lisp-Entry "paste-clipboard" () 473 26 ("paste-parcels" "get-jazz-parcels" "parcels" "let" "design-events?" "design-events?:" "true" "branch" "branch:" "parent")}
        {Lisp-Entry "paste-parcels" () 478 26 ("set-modified?" "false" "descendant?:" ":name-resolution" "instantiate-parcels" "prog1" "verify-name-conflicts" "name-resolution" "determine-paster" "let*" "reporter" "reporter:" "design-events?" "design-events?:" "true" "branch" "branch:" "parent" "parcels")}
        {Lisp-Entry "paste-properties" () 485 26 ("paste-parcel-properties" "get-jazz-parcels" "car" "parcel" "let" "design-events?" "design-events?:" "true" "branch" "branch:" "components")}
        {Lisp-Entry "paste-parcel-properties" () 490 18 ("set-modified?" "get-properties" "instantiate-properties" "form" "component" "dynamic" "function" "for-each" "get-content" "forms" "let" "design-events?" "design-events?:" "true" "branch" "branch:" "components" "parcel")}
        {Lisp-Entry "delete-components" () 500 26 ("delete-component" "component" "dynamic" "function" "for-each" "remove-redundant-descendants" "let" "design-events?" "design-events?:" "true" "branch" "branch:" "components")}
        {Lisp-Entry "delete-component" () 507 26 ("remove-child" "design-events?" "design-events?:" "true" "branch" "branch:" "component")}
        {Lisp-Entry "remove-redundant-descendants" () 513 11 ("has-parent?" "neq?" "and" "target" "some?" "not" "component" "dynamic" "function" "collect-if" "components")}
        {Lisp-Entry "package-components" () 530 11 ("package-component" "component" "dynamic" "function" "map" "branch" "branch:" "components")}
        {Lisp-Entry "package-component" () 536 11 ("error" "object-address" "GetCurrentProcessId" "Component-Parcel" "install" "new" "car" "get-action" "memq?" "and" "if" "cons" "set!" "when" "owned-form" "form" "owner" "dynamic" "function" "reference" "iterate-branch-spine" "forms" "component-ancestry" "ancestry" "let" "package-component" "unimplemented" "branch" "branch:" "component")}
        {Lisp-Entry "instantiate-parcels" () 557 26 ("step-it" ":name-resolution" "instantiate-parcel" "prog1" "get-master-name" "user-message" "when" "parcel" "dynamic" "function" "map" "reporter" "reporter:" "false" "descendant?" "descendant?:" "design-events?" "design-events?:" "name-resolution" "name-resolution:" "true" "branch" "branch:" "parent" "parcels")}
        {Lisp-Entry "instantiate-parcel" () 567 26 ("cdr" "instantiate-form" "component" "delete-components" "list" "name-conflicts" "conflicts" "let" "override" "set-name" "form" "dynamic" "function" "for-each" "unique-name" "set!" "rename" "case" "when" "test:" "member?" "and" "conflict?" "sort-predicate" "equal" "component-name" "map" "domain" "get-children" "brothers" "get-name" "name" "car" "master" "get-content" "forms" "let*" "false" "descendant?" "descendant?:" "design-events?" "design-events?:" "name-resolution" "name-resolution:" "true" "branch" "branch:" "parent" "parcel")}
        {Lisp-Entry "instantiate-form" () 590 26 ("get-children" "instantiate-children" "get-properties" "instantiate-properties" "when" "instantiate-component" "component" "let" "descendant?" "design-events?" "branch" "parent" "form" "name-resolution" "name")}
        {Lisp-Entry "instantiate-component" () 598 26 ("error" "else" "equal" "sort-predicate" "get-name" "find-to-modify" "locate" "modify" "instantiate-new-component" "new" "case" "get-action" "action" "let" "descendant?" "design-events?" "branch" "parent" "form" "name-resolution" "name")}
        {Lisp-Entry "instantiate-new-component" () 606 26 ("descendant?:" "design-events?:" "name:" "branch:" "add-child" "parent:" "instantiate-component" "component" "let" "descendant?" "design-events?" "branch" "parent" "form" "name")}
        {Lisp-Entry "instantiate-properties" () 612 26 ("false" ":undoable?" "design-events?:" "branch:" "set-property" "value" "property" "dynamic" "function" "for-each-property" "design-events?" "branch" "properties" "component")}
        {Lisp-Entry "instantiate-children" () 618 26 ("true" "get-name" "instantiate-form" "form" "dynamic" "function" "for-each" "design-events?" "branch" "children" "component")}
        {Lisp-Entry "unique-name" () 629 29 ("string->symbol" "symbol?" "if" "unique-separator" "separator:" "map" "->string" "unique-domain-name" "unique-name" "let" "domain" "name")}
        {Lisp-Entry "unique-separator" () 636 29 ()}
        {Lisp-Entry "verify-name-conflicts" () 645 18 ("confirm-name-resolution" "when" "name-conflicts" "conflicts" "get-children" "children" "get-master-name" "parcel" "dynamic" "function" "map" "names" "let*" "destination" "parcels")}
        {Lisp-Entry "name-conflicts" () 653 11 ("get-name" "name" "some?" "child" "dynamic" "function" "collect-if" "sort-predicate" "equal" "let" "children" "names")}
        {Lisp-Entry "confirm-name-resolution" () 662 29 ("throw-cancel" "no" "override" "yes" "case" "question" "type:" "message-box" "code" "present-conflicts" "text" "header" "let*" "rename" "get-name" "object-address" "child" "some?" "GetCurrentProcessId" "=" "and" "get-master-name" "name" "get-object-id" "component-id" "get-process-id" "process-id" "sort-predicate" "equal" "let" "parcel" "dynamic" "function" "every?" "if" "confirm-name-resolution" "unimplemented" "conflicts" "children" "parcels")}
        {Lisp-Entry "present-conflicts" () 685 11 ("get-output" "get-name" "->string" ":bulleted" "list" "conflict" "dynamic" "function" "for-each" "put" "List-Factory" "new" "fact" "let" "conflicts" "header")}
        {Lisp-Entry "add-view" () 701 26 ("set-modified?" "set-visible?" "get-height" "2" "get-width" "quotient" "-" "move-figure" "get-size" "size" "let" "set-property" "when" "add-child" "apply" "others" "true" "visible?" "visible?:" "false" "centered?" "centered?:" "position" "position:" "parent" "child")}
        {Lisp-Entry "find-form" () 718 11 ("values" "error" "not" "and" "restore" "embed-form" "get-restore-form" "essay" "restore-form" "form" "get-client-form" "if" "branch-form" "component-ancestry" "ancestry" "let*" "true" "error?" "error?:" "false" "restore?" "restore?:" "branch" "component")}
        {Lisp-Entry "embed-form" () 731 11 ("equal?" "test:" "form-name" "subform" "error" "get-name" "name" "get-component" "Restore-Form" "is?" "essay" "key:" "find" "restore-form" "set!" "memq?" "false" "embed-new-form" "not" "if" "get-form" "cpn-form" "get-children" "children" "let" "cpn" "dynamic" "function" "for-each" "ancestry" "form")}
        {Lisp-Entry "embed-new-form" () 753 11 ("add-child" "name:" "modify" "action:" "Form" "new" "subform" "let" "name" "form")}
        {Lisp-Entry "target-branch" () 759 11 ("else" "follow-component" "Path" "is?" "reference" "get-active-branch" "true" "eq?" "cond" "branch")}
        {Lisp-Entry "component-ancestry" () 765 11 ("error" "null?" "when" "get-parent-component" "cons" "set!" "reference" "neq?" "while" "scan" "ancestry" "let" "component")}
        {Lisp-Entry "find-owner" () 781 18 ("has-property?" "new" "get-action" "eq?" "not" "or" "and" "owned-form" "when" "form" "owner" "dynamic" "function" "reference" "iterate-branch-spine" "return" "lambda" "call/ec" "component-ancestry" "ancestry" "let" "property" "component")}
        {Lisp-Entry "find-next-branch" () 796 11 ("get-restore-form" "has-property?" "owned-form" "form" "when" "get-client-form" "client-form" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "component-ancestry" "ancestry" "reference" "either" "get-installed-branches" "lower" "let" "values" "installed?" "not" "and" "if" "property" "component" "branch")}
        {Lisp-Entry "owned-form" () 813 11 ("equal?" "test:" "form-name" "key:" "find" "subform" "get-name" "name" "set!" "memq?" "not" "if" "get-form" "cpn-form" "get-children" "children" "let" "cpn" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "ancestry" "form")}
        {Lisp-Entry "get-name" () 843 18 ("follow-form" "get-name" "get-client-form" "if" "form" "target-branch" "let*" "true" "branch" "branch:" "path")}
        {Lisp-Entry "get-property" () 849 18 ("follow-form" "get-property" "get-client-form" "if" "form" "target-branch" "let*" "true" "branch" "branch:" "property" "path")}
        {Lisp-Entry "edit-form" () 860 18 ("edit" "2" "list" "form-location" "append" "Jazz-Code-Location" "new" "location" "edit-document" "file?" "if" "form" "get-origin" "origin" "Jedi" "typed?" "when" "get-application" "appl" "let")}
        {Lisp-Entry "form-location" () 870 18 ("class-form" "list" "Jazz-Entry" "get-category-location" "append" "form-location" "unimplemented" "file?" "if" "form" "get-origin" "origin" "let" "Jedi" "get-application" "typed?" "when")}
        {Lisp-Entry "fire-name-change" () 884 11 ("get-designers" "process-name-change" "designer" "dynamic" "function" "for-each" "undoable?" "old-name" "name" "component")}
        {Lisp-Entry "fire-presentation-change" () 890 11 ("get-designers" "process-presentation-change" "designer" "dynamic" "function" "for-each" "undoable?" "old-presentation" "presentation" "component")}
        {Lisp-Entry "fire-property-change" () 896 11 ("get-designers" "process-property-change" "designer" "dynamic" "function" "for-each" "undoable?" "value" "property" "component" "branch")}
        {Lisp-Entry "fire-child-add" () 902 11 ("get-designers" "process-child-add" "designer" "dynamic" "function" "for-each" "descendant?" "parent" "child")}
        {Lisp-Entry "fire-child-remove" () 908 11 ("get-designers" "process-child-remove" "designer" "dynamic" "function" "for-each" "parent" "child")}
        {Lisp-Entry "fire-send-before" () 914 11 ("get-designers" "process-send-before" "designer" "dynamic" "function" "for-each" "target" "parent" "child")}
        {Lisp-Entry "add-designer-listener" () 925 18 ("add-listener" "listeners" "set!" "listener")}
        {Lisp-Entry "remove-designer-listener" () 929 18 ("remove-listener" "listeners" "set!" "listener")}
        {Lisp-Entry "process-name-change" () 933 11 ("invoke" "listener" "dynamic" "function" "for-each" ":undoable?" ":old-name" "name:" "component:" "self" ":name-change" "Designer-Event" "new" "evt" "let" "listeners" "when" "undoable?" "old-name" "name" "component")}
        {Lisp-Entry "process-presentation-change" () 941 11 ("invoke" "listener" "dynamic" "function" "for-each" ":undoable?" ":old-presentation" ":presentation" "component:" "self" ":presentation-change" "Designer-Event" "new" "evt" "let" "listeners" "when" "undoable?" "old-presentation" "presentation" "component")}
        {Lisp-Entry "process-property-change" () 949 11 ("invoke" "listener" "dynamic" "function" "for-each" ":undoable?" "value:" "property:" "component:" "branch:" "self" ":property-change" "Designer-Event" "new" "evt" "let" "listeners" "when" "undoable?" "value" "property" "component" "branch")}
        {Lisp-Entry "process-child-add" () 957 11 ("invoke" "listener" "dynamic" "function" "for-each" "descendant?:" "parent:" "child:" "self" ":child-add" "Designer-Event" "new" "evt" "let" "listeners" "when" "descendant?" "parent" "child")}
        {Lisp-Entry "process-child-remove" () 965 11 ("invoke" "listener" "dynamic" "function" "for-each" "parent:" "child:" "self" ":child-remove" "Designer-Event" "new" "evt" "let" "listeners" "when" "parent" "child")}
        {Lisp-Entry "process-send-before" () 973 11 ("invoke" "listener" "dynamic" "function" "for-each" "target:" "parent:" "child:" "self" ":send-before" "Designer-Event" "new" "evt" "let" "listeners" "when" "target" "parent" "child")}
        {Lisp-Entry "process-refresh" () 981 18 ("invoke" "listener" "dynamic" "function" "for-each" ":what" "component:" "self" ":refresh" "Designer-Event" "new" "evt" "let" "listeners" "when" "what" "component")}
        {Lisp-Entry "process-user-event" () 989 18 ("self" "invoke" "listener" "dynamic" "function" "for-each" "listeners" "when" "event")}}}})
"Designer-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "event" "Designer-Event.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.event.Designer-Event" () 37 9 ("jazz")
      {Lisp-Entry "Designer-Event" () 45 7 ("Event")}}})
"Designer-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "designer" "Designer-Manager.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.designer.Designer-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Designer-Manager" () 47 7 ("rect" "mode-rect" "edit" "mode-edit" "0" "2" "select" "mode:" "on-mode" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "selected?:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "Dimension" "size:" "mode-select" "name:" "View")
        {Lisp-Entry "client" () 50 12 ("set-client" "get-client")}
        {Lisp-Entry "flow-layout" () 53 8 ()}
        {Lisp-Entry "external-name" () 66 16 ("designer-manager" "rest")}
        {Lisp-Entry "palette-class" () 75 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 79 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 83 16 ()}
        {Lisp-Entry "client-activate" () 87 11 ("get-client" "set-client" "View-Editor" "is?" "when" "current-document" "guest" "let")}
        {Lisp-Entry "finish" () 98 11 ("layout-view" "0" "5" "4" "Rect" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "layout" () 104 11 ("get-height" "get-width" "children" "flow-layout" "layout")}
        {Lisp-Entry "on-editor" () 108 11 ("designer:" "get-property" "set-designer" ":designer-change" "get-kind" "case" "evt")}
        {Lisp-Entry "on-mode" () 118 11 ("set-mode" "current-document" "editor" "mode:" "get-property" "mode" "let" "evt")}
        {Lisp-Entry "get-client" () 129 18 ("client")}
        {Lisp-Entry "set-client" () 133 18 ("set!" "client" "/=" "when" "clt")}
        {Lisp-Entry "set-designer" () 143 11 ("class-of" "type-name" "format" "get-reference" "reference" "let" "set-title" "not" "if" "designer")}}}})
"Designer-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "preferences" "Designer-Preferences.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.preferences.Designer-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Designer-Preferences" () 47 7 ("Bitmap-Resource" "icon:" "title:" "Preferences")
        {Lisp-Entry "aligned-properties" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "can-rename-component?" () 62 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 66 11 ("false")}
        {Lisp-Entry "can-move-component?" () 70 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 74 11 ("false")}
        {Lisp-Entry "get-row-instance" () 78 11 ("nextmethod" "else" "List-Row" "new" "aligned-properties" "field-name" "case" "property")}
        {Lisp-Entry "get-addable-classes" () 84 11 ("Indented-Column-Preferences" "Aligned-Column-Preferences" "list")}}}})
"Designer-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Designer-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Designer-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Designer-Tester" () 46 7 ("title:" "Tester")}}})
"Designer-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "workspace" "Designer-Workspace.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.workspace.Designer-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Designer-Workspace" () 47 7 ("Jazz-Console-Manager" "Properties-Manager" "caption?:" "Text-Palette" "Containment-Editor" "Alignment-Editor" "Designer-Manager" "View-Descendants-Editor" "Branches-Editor" "second" "Toolbox-Manager" "model-name:" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 76 11 ("designer")}}}})
"Desktop"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Desktop.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.window.Desktop" () 37 9 ("jazz")
      {Lisp-Entry "Desktop" () 46 7 ("Window")
        {Lisp-Entry "window-parent" () 49 11 ("NULL")}
        {Lisp-Entry "default-parent" () 53 11 ()}
        {Lisp-Entry "create-hwnd" () 57 11 ("GetDesktopWindow" "rest")}}}})
"Details-Card"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "details" "Details-Card.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.details.Details-Card" () 37 9 ("jazz")
      {Lisp-Entry "Details-Card" () 47 7 ("toplevel-controls?:" "title:" "element" "details" "content" "name:" "vscroll?:" "hscroll?:" "document" "style:" "fill" "layout-type:" "Layout-View")}}})
"Details-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "choosers" "Details-Chooser.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.choosers.Details-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Details-Chooser" () 48 7 ("on-cancel" "cancel" "default?:" "on-ok" ":host" "ok" "6" "show-unfocused-selection?:" "focus-selects-all?:" "text" "scroller" "column-size" "on-width" "width" "on-filled" "filled" "8" "size-label" "on-hide" "hide" "on-show" "show" "on-move-down" "move-down" "on-move-up" "move-up" "width:" "display-images?:" "toplevel-controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-selection-change" "selection-handler:" "on-action" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "2" "top-padding:" "detail" "filled-column:" "details-tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "details-border" "Default-GUI" "name:" "Font" "font:" "9" "Point" "position:" "title:" "Dimension" "size:" "View")
        {Lisp-Entry "reference" () 51 12 ("set-reference" "get-reference")}
        {Lisp-Entry "details" () 52 12 ("set-details" "get-details")}
        {Lisp-Entry "defaults" () 54 12 ("set-defaults" "get-defaults")}
        {Lisp-Entry "finish" () 81 11 ("acquire-focus" "update-buttons" "setup-selection" "setup-details" "get-tree" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-reference" () 95 18 ("reference")}
        {Lisp-Entry "set-reference" () 99 18 ("reference" "set!" "value")}
        {Lisp-Entry "get-details" () 103 18 ("details")}
        {Lisp-Entry "set-details" () 107 18 ("details" "set!" "value")}
        {Lisp-Entry "get-defaults" () 112 18 ("defaults")}
        {Lisp-Entry "set-defaults" () 117 18 ("defaults" "set!" "value")}
        {Lisp-Entry "get-tree" () 121 11 ("details-tree" "locate")}
        {Lisp-Entry "get-text" () 125 11 ("text" "column-size" "locate")}
        {Lisp-Entry "dialog-class" () 135 16 ("Details-Chooser-Dialog")}
        {Lisp-Entry "Details-Chooser-Dialog" () 140 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "on-action" () 152 11 ("update-buttons" "toggle-displayed?" "Check-Box" "is?" "when" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-selection-change" () 159 11 ("update-details" "enter-width" "update-buttons" "first" "details" "element" "essay" "old-detail" "get-old" "old" "let*" "evt")}
        {Lisp-Entry "on-move-up" () 167 11 ("set-single-selection" "acquire-focus" "setup-details" "1" "-" "insert!" "remove!" "set!" "details" "element" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-move-down" () 178 11 ("set-single-selection" "acquire-focus" "setup-details" "1" "+" "insert!" "remove!" "set!" "details" "element" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-show" () 189 11 ("update-buttons" "toggle-displayed?" "true" "set-checked?" "acquire-focus" "get-row" "get-user-data" "checkbox" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-hide" () 199 11 ("update-buttons" "toggle-displayed?" "false" "set-checked?" "acquire-focus" "get-row" "get-user-data" "checkbox" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-filled" () 209 11 ("change-filled" "evt")}
        {Lisp-Entry "on-width" () 213 11 ("Ansi-Var" "name:" "Font" "set-detail-font" "false" "set-filled?" "enter-width" "details" "element" "essay" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-reset" () 223 11 ("on-reset" "unimplemented" "evt")}
        {Lisp-Entry "on-return-press" () 228 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 234 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "setup-details" () 244 11 ("details" "list" "children:" "add-row" "user-data:" "color:" "get-displayed?" "checked?:" ":enabled?" "title:" ":outline" "parent:" "font:" "Check-Box" "checkbox" "Ansi-Var" "Ansi-Bold" "Font" "get-filled?" "if" "font" "neq?" "enabled?" "Black" "name:" "Color" "color" "4" "Rect" ":layout-insets" "fill" ":layout-type" "Layout-View" "new" "layout" "0" "border" "let*" "reference" "get-name" "assoc" "mandatory" "width" "title" "name" "bind" "detail" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "tree")}
        {Lisp-Entry "setup-selection" () 261 11 ("0" "list" "set-selection" "details" "when" "tree")}
        {Lisp-Entry "update-buttons" () 271 11 ("defaults" "reset" "neq?" "and" "get-displayed?" "not" "1" "-" "" "0" ">" "reference" "get-name" "assoc" "mandatory" "width" "title" "name" "bind" "details" "element" "detail" "let" "hide" "show" "move-down" "false" "move-up" "locate" "set-enabled?" "begin" "null?" "if" "get-visible-count" "count" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "update-details" () 291 11 ("get-filled?" "set-selected?" "get-width" "->string" "true" "details" "element" "detail" "set-string-content" "false" "set-enabled?" "begin" "null?" "if" "get-text" "text" "width" "filled" "size-label" "locate" "label" "get-tree" "get-single-selection" "selection" "let")}
        {Lisp-Entry "toggle-displayed?" () 318 11 ("not" "set-displayed?" "get-displayed?" "visible?" "get-user-data" "detail" "let*" "checkbox")}
        {Lisp-Entry "enter-width" () 329 11 ("parse-integer" "set-width" "throw-cancel" "select-all" "acquire-focus" "get-message" "message-box" "err" "Parse-Error" "catch" "get-string-content" "content" "get-text" "text" "get-tree" "tree" "let*" "when" "edited-detail")}
        {Lisp-Entry "set-detail-font" () 342 11 ("set-font" "get-user-data" "checkbox" "position" "return:" "details" "find" "get-row" "row" "let*" "font" "detail" "tree")}
        {Lisp-Entry "find-filled" () 353 11 ("details" "get-filled?" "detail" "dynamic" "function" "find-if")}
        {Lisp-Entry "change-filled" () 359 11 ("Ansi-Bold" "true" "Ansi-Var" "name:" "Font" "set-detail-font" "false" "set-filled?" "neq?" "when" "find-filled" "filled" "details" "element" "essay" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "get-modal-result" () 378 11 ("get-output" "put" "Check-Box" "is?" "when" "get-user-data" "checkbox" "let" "rank" "row" "dynamic" "function" "for-each-row" "enter-width" "List-Factory" "new" "details" "element" "essay" "detail" "get-single-selection" "selection" "get-tree" "tree" "let*")}}}})
"Details-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Details-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Details-Row" () 37 9 ("jazz")
      {Lisp-Entry "Details-Row" () 46 7 ("Combo-Row")
        {Lisp-Entry "all" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "initialize" () 57 11 ("choose" "set-kind" "nextmethod" "apply" "rest")}
        {Lisp-Entry "present" () 67 11 ("format" "null?" "if" "value")}
        {Lisp-Entry "combo-choose" () 78 11 ("true" "focus-editor" "enter-edited-value" "set-edited-value" "get-edited-value" ":details" "all" ":all" "Details-Chooser" "get-modal" "details" "let")}
        {Lisp-Entry "get-edited-value" () 91 11 ("=" "empty-string?" "or" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" () 98 11 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Details-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Details-Tree.fusion"} {Time 128369339220000000L}
    {Lisp-Entry "jazz.designer.editor.Details-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Details-Tree" () 46 7 ("on-selection-change" ":self" "Event-Handler" "selection-handler:" "row" "selection-mode:" "multiple-selection?:" ":icons" "portfolio:" "reorderable?:" "draggable?:" "Components-Tree")
        {Lisp-Entry "base" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "details" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "branch-changed" () 62 11 ("update")}
        {Lisp-Entry "selection-changed" () 66 11 ("true" "generate-event?:" "row-rank" "list" "set-selection" "unspecified" "component-row" "row" "not" "if" "set-client" "determine-client" "parent?" "client" "receive" "when" "car" "component" "let" "self" "eq?" "null?" "or" "unless" "focus?" "force-parent?" "origin" "old" "selection")}
        {Lisp-Entry "selection-changed" () 82 11 ("set-client" "false" "generate-event?:" "set-selection" "Group" "is?" "null?" "or" "when" "car" "component" "let" "focus?" "force-parent?" "origin" "old" "selection")}
        {Lisp-Entry "determine-client" () 89 11 ("false" "true" "values" "null?" "or" "get-addable-classes" "and" "if" "get-parent" "parent" "let" "force-parent?" "component")}
        {Lisp-Entry "update" () 101 11 ("insert-rows" "setup-columns" "dynamic" "function" "with-update-locked" "selected-components" "selected-components:" "get-expand-state" "expand-state" "expand-state:")}
        {Lisp-Entry "setup-columns" () 108 11 ("width:" "title:" "name:" "Tree-Label-Column" "class:" "self" "context:" "add-column" "set-width" "set-title" "set-name" "get-node-column" "column" "false" "begin" "when" "detail-presentation" "either" "error" "category-field" "property" "split-detail-path" "title" "name" "ignore" "receive" "filled?" "width" "path" "bind" "detail" "dynamic" "function" "for-each" "first?" "node-column" "get-name" "null?" "or" "if" "true" "preserve-node-column?:" "remove-columns" "set-filled-column" "get-addable-details" "details" "get-addable-base" "client" "essay" "base" "set!" "get-header" "header" "let")}
        {Lisp-Entry "insert-rows" () 137 11 ("update-selection" "insert-components" "get-recursive-details?" "recursive?" "let" "client" "when" "remove-every-row" "selected-components" "expand-state")}
        {Lisp-Entry "insert-components" () 145 11 ("get-presentation" "key:" "" "sort" "sort-components?" "if" "insert-component" "Group" "is?" "unless" "child" "dynamic" "function" "for-each" "get-components" "components" "let" "recursive?" "father" "component")}
        {Lisp-Entry "insert-component" () 155 29 ("insert-components" "user-data:" "children:" "expanded" "state:" "father:" "add-row" "cons" "children" "title" "value" "property" "split-detail-path" "ignore" "name" "receive" "filled?" "width" "path" "Tree-Label" "if" "detail" "dynamic" "function" "map" "labels" "image:" "title:" "Tree-Node" "new" "node" "get-component-image" "ni" "present-property" "nt" "read-property" "nv" "category-field" "np" "car" "nn" "let*" "filled" "name-info" "set!" "not" "is?" "based?" "rest" "first" "bind" "details" "base" "and" "when" "row" "let" "recursive?" "father" "component")}
        {Lisp-Entry "split-detail-path" () 184 11 ("child" "essay" "follow-submodels" "reverse!" "cons" "car" "string?" "subpath" "name" "title" "bind" "reverse" "reversed" "let" "values" "symbol?" "if" "path" "component" "base")}
        {Lisp-Entry "follow-submodels" () 193 11 ("cdr" "car" "follow-submodels" "else" "get-class-form" "child" "get-model" "symbol?" "null?" "cond" "path" "model")}
        {Lisp-Entry "present-location" () 202 11 ("get-presentation" "localize" "ascendant" "dynamic" "function" "map" "join" "null?" "if" "collect-ascendants" "cdr" "ascendants" "let" "component")}
        {Lisp-Entry "on-designer" () 214 11 ("value:" "property:" "component:" "property-change" ":property-change" "child-remove" ":child-remove" "parent:" "child:" "get-property" "child-add" ":child-add" "get-kind" "case" "evt")}
        {Lisp-Entry "child-add" () 221 11 ("false" "insert-component" "dynamic" "function" "with-update-locked" "client" "neq?" "Group" "is?" "or" "unless" "parent" "child")}
        {Lisp-Entry "child-remove" () 228 11 ("remove-row" "dynamic" "function" "with-update-locked" "when" "component-row" "row" "let" "client" "get-parent" "neq?" "Group" "is?" "or" "unless" "child")}
        {Lisp-Entry "property-change" () 237 11 ("invalidate-cell" "set-title" "present-property" "title" "get-cell-data" "data" "Cell" "new" "cell" "let*" "get-user-data" "eq?" "rank" "row" "dynamic" "function" "for-each-visible-row" "when" "position" "return:" "car" "key:" "details" "field-name" "find" "col" "let" "client" "get-parent" "neq?" "Group" "is?" "or" "unless" "value" "property" "component")}}}})
"Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Dialog.fusion"} {Time 128360914900000000L}
    {Lisp-Entry "jazz.ui.dialog.Dialog" () 37 9 ("jazz")
      {Lisp-Entry "Dialog" () 50 7 ("Overlapped")
        {Lisp-Entry "get-modal" () 54 31 ("self" "new" "apply" "process-modal" "rest")}
        {Lisp-Entry "sizable?" () 58 12 ("set-sizable?" "get-sizable?" "false")}
        {Lisp-Entry "closable?" () 59 12 ("set-closable?" "get-closable?" "true")}
        {Lisp-Entry "modal-done?" () 62 8 ("false")}
        {Lisp-Entry "modal-closed?" () 63 8 ("false")}
        {Lisp-Entry "modal-result" () 64 8 ()}
        {Lisp-Entry "modal-signal" () 65 8 ()}
        {Lisp-Entry "modal-action" () 66 8 ()}
        {Lisp-Entry "initialize" () 70 16 ("destroy-mandatory" "register-class" "nextmethod")}
        {Lisp-Entry "window-class" () 77 16 ()}
        {Lisp-Entry "default-parent" () 81 11 ("get-application" "get-toplevel")}
        {Lisp-Entry "child-style?" () 85 11 ("false" "rest")}
        {Lisp-Entry "window-style" () 90 11 ("WS_SYSMENU" "closable?:" "0" "WS_THICKFRAME" "true" "not-found:" "sizable?:" "getf" "if" "WS_DLGFRAME" "WS_CAPTION" "WS_OVERLAPPED" "WS_BORDER" "WS_POPUP" "nextmethod" "bit-or" "rest")}
        {Lisp-Entry "window-ex-style" () 102 11 ("WS_EX_DLGMODALFRAME" "nextmethod" "bit-or" "rest")}
        {Lisp-Entry "get-sizable?" () 112 11 ("sizable?")}
        {Lisp-Entry "set-sizable?" () 116 11 ("sizable?" "set!" "value")}
        {Lisp-Entry "get-closable?" () 120 11 ("closable?")}
        {Lisp-Entry "set-closable?" () 124 11 ("closable?" "set!" "value")}
        {Lisp-Entry "processing-modal?" () 128 18 ("modal-done?" "not")}
        {Lisp-Entry "on-close" () 137 11 ("unprocessed" "enable-window" "when" "get-toplevel" "toplevel" "let" "processed" "closable?" "not" "if" "evt")}
        {Lisp-Entry "destroy" () 148 11 ("nextmethod" "modal-done?" "modal-result" "true" "modal-closed?" "set!")}
        {Lisp-Entry "class-actions" () 160 11 ("nextmethod" "dialog" "find-actions" "cons")}
        {Lisp-Entry "on-ok" () 170 18 ("get-modal-result" "end-modal" "validate-dialog" "evt")}
        {Lisp-Entry "on-cancel" () 175 18 ("cancel-modal" "evt")}
        {Lisp-Entry "validate-dialog" () 184 26 ()}
        {Lisp-Entry "get-modal-result" () 188 26 ()}
        {Lisp-Entry "process-modal" () 192 18 ("modal-action" "close" "true" "enable-window" "modal-result" "else" "signal" "modal-signal" "throw-cancel" "modal-closed?" "cond" "0" "sleep" "process-one-message" "Cancel-Signal" "catch" "not" "while" "show" "update-windowing-actions" "self" "false" "modal-done?" "set!" "begin" "unwind-protect" "disable-window" "when" "*current-modal*" "preserved" "current-modal-dialog" "either" "overlapped" "get-toplevel" "toplevel" "get-application" "application" "let*" "prog1" "release-captured-view" "close-popups")}
        {Lisp-Entry "wake-process-modal" () 227 11 ("dynamic" "function" "post-primary" "get-toplevel" "when")}
        {Lisp-Entry "end-modal" () 239 18 ("wake-process-modal" "true" "modal-done?" "modal-result" "false" "modal-closed?" "set!" "result")}
        {Lisp-Entry "signal-modal" () 246 18 ("wake-process-modal" "true" "modal-done?" "modal-signal" "set!" "signal")}
        {Lisp-Entry "cancel-modal" () 252 18 ("Cancel-Signal" "new" "signal-modal")}
        {Lisp-Entry "close-modal" () 256 18 ("wake-process-modal" "true" "modal-done?" "modal-action" "modal-result" "false" "modal-closed?" "set!" "action")}}}})
"Dialog-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Dialog-Actions.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.dialog.Dialog-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Dialog-Actions" () 45 7 ("Actions")}}})
"Dialog-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Dialog-Root.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Dialog-Root" () 37 9 ("jazz")
      {Lisp-Entry "Dialog-Root" () 45 7 ("Root-View")}}})
"Dimension-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Dimension-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Dimension-Row" () 37 9 ("jazz")
      {Lisp-Entry "Dimension-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 53 11 ("get-height" "get-width" "format" "size")}
        {Lisp-Entry "get-edited-value" () 64 11 ("Dimension" "new" "height" "width" "bind" "editor" "get-string-content" "read-delimited-string" "list" "let")}
        {Lisp-Entry "edit" () 71 11 ("get-tree" "expand/collapse" "get-height" "value" "get-width" "self" "add-row" "edit-in-cell")}
        {Lisp-Entry "close-editor" () 79 11 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" () 85 11 ("get-sons" "nextmethod" "or")}}}})
"Direct-Draw"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "directx" "Direct-Draw.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.directx.Direct-Draw" () 37 9 ("jazz")
      {Lisp-Entry "Direct-Draw" () 44 7 ("DxVBLib" "COM" "WinDef" "Utilities" "Object")}}})
"Direct-Draw-Surface"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "directx" "Direct-Draw-Surface.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.directx.Direct-Draw-Surface" () 37 9 ("jazz")
      {Lisp-Entry "Direct-Draw-Surface" () 44 7 ("DxVBLib" "COM" "Utilities" "Object")}}})
"DirectX"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "directx" "DirectX.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.directx.DirectX" () 37 9 ("jazz")
      {Lisp-Entry "DirectX" () 44 7 ("DxVBLib" "COM" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 15 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "DirectX7" "cocreate" "handle" "set!" "nextmethod")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "direct-draw-create" () 67 18 ("handle" "DirectDrawCreate" "Direct-Draw" "new")}
        {Lisp-Entry "directx" () 76 19 ()}
        {Lisp-Entry "get-directx" () 80 23 ("self" "new" "set!" "directx" "unless")}}}})
"Directories-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Directories-Chooser.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.dialog.Directories-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Directories-Chooser" () 48 7 ("on-cancel" "cancel" "default?:" "on-ok" ":host" "ok" "8" "6" "on-remove-directory" "remove-directory" "on-add-directory" "add-directory" "on-move-down" "move-down" "on-move-up" "move-up" "width:" "display-images?:" "toplevel-controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-selection-change" "selection-handler:" "on-action" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "2" "top-padding:" "directory" "filled-column:" "directories-tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "directories-border" "Default-GUI" "name:" "Font" "font:" "9" "Point" "position:" "title:" "Dimension" "size:" "View")
        {Lisp-Entry "directories" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "edited-directory" () 54 8 ()}
        {Lisp-Entry "finish" () 74 11 ("acquire-focus" "update-buttons" "setup-selection" "setup-directories" "get-tree" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-tree" () 88 11 ("directories-tree" "locate")}
        {Lisp-Entry "dialog-class" () 98 16 ("Directories-Chooser-Dialog")}
        {Lisp-Entry "Directories-Chooser-Dialog" () 103 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "on-action" () 115 11 ("update-buttons" "evt")}
        {Lisp-Entry "on-selection-change" () 119 11 ("update-buttons" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-add-directory" () 125 11 ("update" "list" "append" "directories" "set!" "BrowseFolder-Dialog" "get-modal" "directory" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "on-remove-directory" () 132 11 ("set-single-selection" "get-visible-count" "" "when" "update" "remove" "set!" "directories" "element" "directory" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-move-up" () 142 11 ("set-single-selection" "acquire-focus" "setup-directories" "1" "-" "insert!" "remove!" "set!" "directories" "element" "directory" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-move-down" () 153 11 ("set-single-selection" "acquire-focus" "setup-directories" "1" "+" "insert!" "remove!" "set!" "directories" "element" "directory" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-reset" () 165 11 ("on-reset" "unimplemented" "evt")}
        {Lisp-Entry "on-return-press" () 170 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 176 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update" () 186 11 ("get-tree" "setup-directories")}
        {Lisp-Entry "setup-directories" () 190 11 ("directories" "user-data:" "present" "title:" "Tree-Node" "new" "list" "children:" "add-row" "directory" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "tree")}
        {Lisp-Entry "setup-selection" () 199 11 ("0" "list" "set-selection" "directories" "when" "tree")}
        {Lisp-Entry "update-buttons" () 209 11 ("defaults" "reset" "1" "-" "" "0" ">" "directories" "element" "directory" "let" "remove-directory" "true" "add-directory" "move-down" "false" "move-up" "locate" "set-enabled?" "begin" "null?" "if" "get-visible-count" "count" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "edit-directory" () 233 11 ("enter-directory" "selection")}
        {Lisp-Entry "enter-directory" () 237 11 ()}
        {Lisp-Entry "get-modal-result" () 246 11 ("get-output" "put" "get-user-data" "directory" "rank" "row" "dynamic" "function" "for-each-visible-row" "List-Factory" "new" "directories" "get-tree" "tree" "let" "enter-directory")}}}})
"Directories-Search"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Directories-Search.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.search.Directories-Search" () 37 9 ("jazz")
      {Lisp-Entry "Directories-Search" () 48 7 ("extensions" "static-ext" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "show-unfocused-selection?:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "directories" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "Entry-Border" "Color" "border-color:" "solid" "border-type:" "Dimension" "size:" "Point" "position:" "static-dir" "title:" "domain" "name:" "Search-View")
        {Lisp-Entry "search-targets" () 71 11 ("search-threaded" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "targets")}
        {Lisp-Entry "search-threaded" () 79 24 ("close-manager" "unregister-activity" "get-activity-manager" "manager" "when" "select-results" "get-search-targets" "get-output" "add-results" "text" "set-mode" "get-results" "results" "let" "jazz-constituent?" "search-in-directory" "directory" "for-each" "List-Factory" "factory" "get-expression?" "expression?" "get-ignore-case?" "ignore-case?" "get-whole-words?" "whole-words?" "either" "append!" "apply" "->string" "extensions" "locate" "get-string-content" "read-delimited-string" "Directory" "new" "list" "dynamic" "function" "map" "directories" "get-search-reporter" "reporter" "get-application" "appl" "let*" "targets")}
        {Lisp-Entry "on-action" () 109 11 ("on-search" "evt")}
        {Lisp-Entry "get-tab-stops" () 113 11 ("targets" "extensions" "directories" "locate" "list")}
        {Lisp-Entry "setup-search-reporter" () 125 11 ("set-step" "1" "set-pos" "0" "Range" "set-range" "true" "set-infinite?" "count" "reporter")}}}})
"Directories-Search-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Directories-Search-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.search.Directories-Search-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Directories-Search-Preferences" () 46 7 ("title:" "Search-View-Preferences")}}})
"Directory-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "code" "Directory-Browser.fusion"} {Time 128360666660000000L}
    {Lisp-Entry "jazz.ui.code.Directory-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Directory-Browser" () 50 7 ("width:" "title:" "on-context-menu" "context-menu-handler:" "on-double-click" "double-click-handler:" "show-header?:" "tree" "shown?:" "content" "flat?:" "hscroll?:" "vscroll?:" "on-synchronize" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" ":icons" "portfolio:" "tooltip-text:" "tooltip?:" "Dimension" "size:" "synchronize" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "directory" () 53 12 ("set-directory" "get-directory")}
        {Lisp-Entry "external-name" () 69 16 ("directory-browser" "rest")}
        {Lisp-Entry "palette-class" () 79 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 84 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 89 16 ()}
        {Lisp-Entry "get-tools-view" () 98 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 102 11 ("acquire-focus" "locate" "tree" "let")}
        {Lisp-Entry "on-synchronize" () 112 11 ("ensure-displayed" "row-rank" "set-single-selection" "expand-spine" "row" "get-list" "->string" "map" "spine" "locate" "tree" "null?" "get-moniker" "moniker" "get-controller" "controller" "let*" "bell" "Document" "is-not?" "if" "current-document" "document" "let" "evt")}
        {Lisp-Entry "on-double-click" () 129 11 ("edit-selection" "self" "get-application" "set-selected" "evt")}
        {Lisp-Entry "on-context-menu" () 134 11 ("new" "track-popup-menu" "else" "Directory-Menu" "directory?" "file-menu-class" "file?" "cond" "class" "Moniker" "is?" "when" "selected-pathname" "object" "dynamic" "function" "with-context-click" "get-position" "pos" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "file-menu-class" () 146 29 ("File-Menu")}
        {Lisp-Entry "get-directory" () 155 18 ("directory")}
        {Lisp-Entry "set-directory" () 159 18 ("update-tree" "update-title" "set!" "directory" "/=" "when" "dir")}
        {Lisp-Entry "confirm-close" () 171 11 ("save-session" "rest")}
        {Lisp-Entry "save-session" () 175 11 ("Opened-Windows" "properties" "push-property" "get-directory" "directory:" "get-size" "size:" "get-position" "position:" "external-name" "list" "info" "let")}
        {Lisp-Entry "update-title" () 190 29 ("directory" "get-base" "format" "set-title")}
        {Lisp-Entry "selected-row" () 199 11 ("get-single-selection" "selection" "locate" "tree" "let*")}
        {Lisp-Entry "selected-pathname" () 205 11 ("get-row" "get-user-data" "when" "selected-row" "selection" "locate" "tree" "let")}
        {Lisp-Entry "selected-file" () 212 11 ("error" "file?" "if" "selected-pathname" "pathname" "let")}
        {Lisp-Entry "selected-directory" () 219 11 ("error" "directory?" "if" "selected-pathname" "pathname" "let")}
        {Lisp-Entry "edit-selection" () 231 11 ("edit" "false" "activate-focus?:" "get-application" "edit-document" "get-extension" "member?" "Directory" "or" "unless" "Moniker" "is?" "if" "get-row" "get-user-data" "object" "let" "when" "get-single-selection" "selection" "locate" "tree" "let*")}
        {Lisp-Entry "search-directory" () 248 11 ("select-search" "true" "set-visible?" "bring-to-front" "extensions" "get-list" "format" "set-string-content" "directories-search" "search" "let" "directories" "tab" "locate" "set-selection-name" "get-guest" "manager" "get-search-manager" "frame" "get-application" "appl" "selected-pathname" "dir" "let*")}
        {Lisp-Entry "get-repository" () 267 26 ("error")}
        {Lisp-Entry "get-latest" () 271 11 ("selected-pathname" "get-latest" "get-repository" "repository" "let")}
        {Lisp-Entry "checkout" () 276 11 ("update-status" "checkout" "get-item" "item" "with-closed" "selected-file" "file" "get-repository" "repository" "let")}
        {Lisp-Entry "update-status" () 284 11 ("invalidate-cell" "get-cell-data" "set-image" "get-moniker-image" "image" "0" "Cell" "new" "cell" "row-rank" "rank" "user-data-row" "row" "locate" "tree" "let*" "moniker")}
        {Lisp-Entry "checkin" () 294 11 ("update-status" "checkin" "get-item" "item" "with-closed" "selected-file" "file" "get-repository" "repository" "let")}
        {Lisp-Entry "checkpoint" () 302 11 ("update-status" "true" ":keep-checked-out?" "checkin" "get-item" "item" "with-closed" "selected-file" "file" "get-repository" "repository" "let")}
        {Lisp-Entry "undo-checkout" () 310 11 ("update-status" "undo-checkout" "get-item" "item" "with-closed" "selected-file" "file" "get-repository" "repository" "let")}
        {Lisp-Entry "show-history" () 318 11 ("show-history" "unimplemented")}
        {Lisp-Entry "show-changes" () 322 11 ("show-changes" "selected-file" "file" "get-repository" "repository" "let")}
        {Lisp-Entry "Ignored-Nodes" () 333 14 ()}
        {Lisp-Entry "Ignored-Leaves" () 336 14 ()}
        {Lisp-Entry "Ignored-Extensions" () 339 14 ()}
        {Lisp-Entry "synchronize-browser" () 343 11 ("true" "set-visible?" "bring-to-front" "message-box" "close" "begin" "get-guest" "compare-trees" "not" "if" "false" "host-visible?:" "Ignored-Extensions" "ignored-extensions:" "Ignored-Leaves" "ignored-leaves:" "Ignored-Nodes" "ignored-nodes:" "right-moniker:" "left-moniker:" "Synchronize-Repositories" "new-frame" "frame" "Repository-Moniker" "new" "item" "file-spec" "spec" "selected-directory" "dir" "get-repository" "repository" "let*")}
        {Lisp-Entry "Roaming-Repositories-Extensions" () 362 14 ()}
        {Lisp-Entry "detach-branch" () 366 11 ("thread" "execute:" "self" "context:" "name:" "Thread" "format" "message-box" "false" "error?:" "delete-file" "cancel-requested?" "if" "close-manager" "unregister-activity" "scan-latest" "get-name" "print-header" "File-Printer" "new" "printer" "with-closed" "set-step" "1" "set-pos" "0" "Range" "set-range" "true" "set-infinite?" "register-activity" "reporter" "get-activity-manager" "manager" "file-spec" "base" "selected-directory" "branch" "Roaming-Repositories-Extensions" "extensions:" ":default-extension" ":initial-filename" "directory:" "SaveFile-Dialog" "get-modal" "dynamic" "function" "with-preserved-current-directory" "output" "get-ini-file" "get-directory" "directory" "get-repository" "repository" "let*")}
        {Lisp-Entry "print-header" () 407 11 ("printer" "name")}
        {Lisp-Entry "scan-latest" () 412 11 ("0" "get-item" "with-closed" "recursive?:" "false" "include-self?:" "get-latest-info" "no" "date" "receive" "else" "1" "+" "cond" "step-it" "get-project?" "project?" "get-spec" "let" "iterate-item" "2" "*" "format" "subseq!" "user-message" "return" "cancel-requested?" "if" "level" "spec" "item" "dynamic" "function" "scan" "length" "root" "letrec" "reporter" "printer" "base" "repository")}
        {Lisp-Entry "reattach-branch" () 439 11 ("true" "set-visible?" "bring-to-front" "get-guest" "compare-trees" "false" "host-visible?:" "Ignored-Extensions" "ignored-extensions:" "Ignored-Leaves" "ignored-leaves:" "Ignored-Nodes" "ignored-nodes:" "right-moniker:" "left-moniker:" "Synchronize-Roaming-Repository" "new-frame" "frame" "Roaming-Repository" "new" "item" "selected-directory" "branch" "Roaming-Repositories-Extensions" "extensions:" ":initial-filename" "directory:" "OpenFile-Dialog" "get-modal" "dynamic" "function" "with-preserved-current-directory" "file" "get-ini-file" "get-directory" "directory" "get-repository" "repository" "let*")}
        {Lisp-Entry "refresh-directory" () 456 11 ("dynamic-expand" "expanded" "=" "when" "set-dynamic" "remove-every-son" "dynamic" "function" "with-update-locked" "get-state" "state" "get-row" "row" "selected-row" "rank" "locate" "tree" "let*")}
        {Lisp-Entry "display-properties" () 474 11 ("present" "format" "message-box" "get-latest-info" "no" "date" "receive" "get-item" "item" "with-closed" "selected-file" "file" "get-repository" "repository" "let")}
        {Lisp-Entry "update-tree" () 487 11 ("directory" "tree" "locate" "present-directory")}
        {Lisp-Entry "get-moniker-image" () 491 29 ("else" "Bitmap-Resource" "member?" "cond" "get-extension" "ext" "let" "moniker")}}
      {Lisp-Entry "Directory-Tree" () 505 7 ("Code-Tree")
        {Lisp-Entry "present-directory" () 508 18 ("set-selection" "0" "get-visible-count" ">" "when" "insert-files" "insert-directories" "user-data:" "Bitmap-Resource" "image:" "get-base" "->string" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "add-row" "root" "let" "remove-every-row" "dir")}
        {Lisp-Entry "insert-files" () 517 11 ("collect-files" "sort-files" "insert-moniker" "file" "dynamic" "function" "for-each" "dir" "node")}
        {Lisp-Entry "collect-files" () 523 11 ("recursive?:" "false" "directories?:" "true" "files?:" "cons" "set!" "file" "dynamic" "function" "iterate-directory" "list" "let" "dir")}
        {Lisp-Entry "sort-files" () 534 11 ("get-base" "=" "" "and" "or" "e2" "get-extension" "e1" "let" "f2" "f1" "dynamic" "function" "sort" "files")}
        {Lisp-Entry "insert-moniker" () 544 11 ("user-data:" "get-moniker-image" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "get-application" "known-extension-frame-class" "=" "or" "collapsed" "dynamic" "member?" "if" "state" "get-extension" "extension" "let*" "get-name" "/=" "when" "moniker" "node")}
        {Lisp-Entry "insert-java" () 552 11 ("false" "insert-definition" "car" "def" "let" "when" "cpp/java" "context:" "get-base" "get-category-definitions" "definitions" "get-cataloguer" "cataloguer" "get-application" "appl" "let*" "file" "node")}
        {Lisp-Entry "insert-zip" () 562 11 ("Zipped" "insert-moniker" "get-application" "known-extension-frame-class" "when" "extract-extension" "extension" "let" "size" "filename" "dynamic" "function" "iterate-files" "Unzip-File" "new" "unzip" "with-closed" "file" "node")}
        {Lisp-Entry "insert-directories" () 571 11 ("collect-directories" "sort-directories" "user-data:" "Bitmap-Resource" "image:" "get-base" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "subdir" "dynamic" "function" "for-each" "dir" "node")}
        {Lisp-Entry "collect-directories" () 577 11 ("recursive?:" "true" "directories?:" "false" "files?:" "cons" "set!" "dynamic" "function" "iterate-directory" "list" "let" "dir")}
        {Lisp-Entry "sort-directories" () 588 11 ("get-base" "->string" "dir" "dynamic" "function" "key:" "" "sort" "directories")}
        {Lisp-Entry "insert-directory-content" () 592 11 ("insert-directories" "insert-files" "dir" "row")}
        {Lisp-Entry "insert-moniker-content" () 597 11 ("insert-zip" "insert-java" "member?" "cond" "get-extension" "extension" "let" "moniker" "row")}
        {Lisp-Entry "update-row" () 603 11 ("insert-moniker-content" "insert-directory-content" "directory?" "if" "get-user-data" "data" "let" "row")}}
      {Lisp-Entry "Browser-Menu" () 615 7 ("Context-Menu")
        {Lisp-Entry "on-get-latest" () 618 11 ("get-latest" "evt")}
        {Lisp-Entry "on-checkout" () 622 11 ("checkout" "evt")}
        {Lisp-Entry "on-checkin" () 626 11 ("checkin" "evt")}
        {Lisp-Entry "on-checkpoint" () 630 11 ("checkpoint" "evt")}
        {Lisp-Entry "on-undo-checkout" () 634 11 ("undo-checkout" "evt")}
        {Lisp-Entry "on-show-history" () 638 11 ("show-history" "evt")}
        {Lisp-Entry "on-show-changes" () 642 11 ("show-changes" "evt")}
        {Lisp-Entry "on-synchronize" () 646 11 ("synchronize-browser" "evt")}
        {Lisp-Entry "on-detach-branch" () 650 11 ("detach-branch" "evt")}
        {Lisp-Entry "on-reattach-branch" () 654 11 ("reattach-branch" "evt")}
        {Lisp-Entry "on-properties" () 658 11 ("display-properties" "evt")}}
      {Lisp-Entry "File-Menu" () 667 7 ("on-properties" "properties" "on-show-changes" "show-changes" "on-show-history" "show-history" "on-undo-checkout" "undo-checkout" "on-checkpoint" "checkpoint" "on-checkin" "checkin" "on-checkout" "checkout" "on-get-latest" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "get-latest" "name:" "Browser-Menu")}
      {Lisp-Entry "Directory-Menu" () 690 7 ("on-refresh" "refresh" "on-reattach-branch" "reattach-branch" "on-detach-branch" "detach-branch" "on-synchronize" "synchronize" "on-get-latest" "get-latest" "on-search" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "search" "name:" "Browser-Menu")
        {Lisp-Entry "on-search" () 706 11 ("search-directory" "evt")}
        {Lisp-Entry "on-refresh" () 710 11 ("refresh-directory" "evt")}}}})
"Directory-Browser-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "code" "Directory-Browser-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.code.Directory-Browser-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Directory-Browser-Preferences" () 45 7 ("Docked-Preferences")
        {Lisp-Entry "directory" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "apply-preferences" () 56 11 ("true" "set-visible?" "client-activate" "directory" "get-guest" "set-directory" "location" "set-location" "set-title" "title" "when" "set-parent" "name" "singleton-docked" "host" "model-name" "autoload" "class" "let*" "assert" "parent")}
        {Lisp-Entry "get-class-image" () 75 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" () 79 11 ("directory" "model-name" "location")}}}})
"Directory-Comparer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Directory-Comparer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Directory-Comparer" () 38 9 ("jazz")
      {Lisp-Entry "Directory-Comparer" () 46 7 ("Tree-Comparer")
        {Lisp-Entry "scanned-date" () 49 8 ()}
        {Lisp-Entry "create-item" () 57 11 ("get-modification-time" "get-name" "make-item" "moniker")}
        {Lisp-Entry "get-item-type" () 61 11 ("leaf" "File" "node" "Directory" "get-moniker" "typecase" "item")}
        {Lisp-Entry "get-item-content" () 67 11 ("create-item" "length" "0" "naturals" "get-modification-time" "->string" "append" "make-item" "index" "moniker" "dynamic" "function" "map" "Directory-Group" "is?" "if" "leaves" "leaves?:" "nodes" "=" "nodes?:" "get-content" "content" "get-moniker" "parent" "let*" "kind" "item")}
        {Lisp-Entry "compare-leaf-values" () 78 11 ("else" "set!" "get-elapse" ">" "scanned-date" "null?" "or" "timestamp" "not" "leaf" "new-entry" "true" "set-car!" "different?" "cond" "and" "when" "value2" "get-value" "value1" "let" "leaf-feedback" "has-differences?" "feedback" "check-algorithm" "ignored-extensions" "ignored-leaves" "ignored-nodes" "content2" "leaf2" "content1" "leaf1" "parent")}
        {Lisp-Entry "different?" () 95 11 ("different-file-content-no-whitespace?" "whitespace" "get-moniker" "different-file-content?" "and" "content" "get-value" "different-times?" "timestamp" "either" "case" "check-algorithm" "leaf2" "leaf1")}
        {Lisp-Entry "scanned-values" () 108 11 ("scanned-date")}}}})
"Directory-Group"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "moniker" "Directory-Group.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.moniker.Directory-Group" () 38 9 ("jazz")
      {Lisp-Entry "Directory-Group" () 45 7 ("Directory")
        {Lisp-Entry "print" () 48 11 ("get-list" "format" "readably" "printer")}
        {Lisp-Entry "validate-component" () 55 16 ("error" "Directory" "is-not?" "when" "dir" "dynamic" "function" "for-each" "lst")}
        {Lisp-Entry "get-protocol" () 68 16 ("group")}
        {Lisp-Entry "get-modal" () 73 16 ("get-list" "essay" ":directories" "Directories-Chooser" "get-modal" "Directory-Group" "new" "others" "actual" "bind-keywords" "rest")}
        {Lisp-Entry "new-moniker" () 79 16 ("self" "new" "list")}
        {Lisp-Entry "present" () 83 11 ("get-list" "format")}
        {Lisp-Entry "get-name" () 92 11 ()}
        {Lisp-Entry "get-directory" () 96 11 ("self")}
        {Lisp-Entry "get-content" () 100 18 ("expand" "class-of" "new" "map" "and" "if" "string?" "some-string?" "key:" "symbol?" "some?" "some-symbol?" "get-name" "moniker" "dynamic" "function" "key" "nextmethod" "apply" "content" "let*" "rest")}
        {Lisp-Entry "get-modification-time" () 114 11 ()}
        {Lisp-Entry "create" () 118 18 ("break")}
        {Lisp-Entry "delete-directory" () 124 18 (":overwrite-read-only?" "empty-directory" "self" "when" "feedback" "feedback:" "false" "overwrite-read-only?" "overwrite-read-only?:")}
        {Lisp-Entry "iterate-directory" () 135 18 ("parse" "iterate-directory-content" "directory" "member?" "not" "and" "name" "Directory" "file" "get-name" "list" "if" "when" "File" "typecase" "element" "dynamic" "function" "for-each" "get-list" "items" "let" "ignored-directories" "ignored-directories:" "recursive?" "recursive?:" "false" "directories?" "directories?:" "files?" "files?:" "true" "full?" "full?:" "proc")}}}})
"Directory-Group-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Directory-Group-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Directory-Group-Row" () 37 9 ("jazz")
      {Lisp-Entry "Directory-Group-Row" () 46 7 ("Pathname-Row")
        {Lisp-Entry "initialize" () 54 11 ("group" "editor" "set-protocol" "nextmethod" "apply" "others" "parameters" "bind-keywords" "rest")}
        {Lisp-Entry "combo-choose" () 65 11 ("true" "focus-editor" "enter-edited-value" "Directory-Group" "new" "set-edited-value" "get-list" "essay" ":directories" "Directories-Chooser" "get-modal" "directories" "get-edited-value" "actual" "let*")}}}})
"Directory-Iterator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "moniker" "Directory-Iterator.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.moniker.Directory-Iterator" () 37 9 ("jazz")
      {Lisp-Entry "Directory-Iterator" () 52 7 ("Iterator")}}})
"Directory-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Directory-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Directory-Row" () 37 9 ("jazz")
      {Lisp-Entry "Directory-Row" () 46 7 ("Pathname-Row")
        {Lisp-Entry "initialize" () 54 11 ("dir" "editor" "set-protocol" "nextmethod" "apply" "others" "parameters" "bind-keywords" "rest")}
        {Lisp-Entry "combo-choose" () 65 11 ("true" "focus-editor" "enter-edited-value" "set-edited-value" "BrowseFolder-Dialog" "get-modal" "dir" "let")}}}})
"Directory-Server"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "directory" "Directory-Server.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.jrm.directory.Directory-Server" () 37 9 ("jazz")
      {Lisp-Entry "Directory-Server" () 45 7 ("Object")
        {Lisp-Entry "objects" () 48 8 ()}
        {Lisp-Entry "find-object" () 51 25 ("error" "when" "cdr" "if" "objects" "assq" "info" "let" "true" "error?" "error?:" "name")}
        {Lisp-Entry "registration-info" () 59 25 ("objects")}
        {Lisp-Entry "register-object" () 68 25 ("cons" "objects" "set!" "error" "when" "false" "find-object" "if" "true" "error?" "error?:" "object" "name")}
        {Lisp-Entry "unregister-object" () 76 25 ("remove!" "set!" "error" "when" "not" "if" "objects" "assq" "pair" "let" "true" "error?" "error?:" "name")}}}})
"Directory-Tree-Iterator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "moniker" "Directory-Tree-Iterator.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.moniker.Directory-Tree-Iterator" () 37 9 ("jazz")
      {Lisp-Entry "Directory-Tree-Iterator" () 44 7 ("Tree-Iterator")
        {Lisp-Entry "directory" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("directory" "set!" "nextmethod" "dir")}
        {Lisp-Entry "get-next!" () 55 11 ()}
        {Lisp-Entry "leaf?" () 59 11 ("file?" "node")}
        {Lisp-Entry "iterate" () 63 11 ("Directory-Iterator" "new" "directory")}}}})
"Dispatch-Designer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "designer" "Dispatch-Designer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.designer.Dispatch-Designer" () 37 9 ("jazz")
      {Lisp-Entry "Dispatch-Designer" () 45 7 ("Designer")
        {Lisp-Entry "designers" () 48 8 ()}
        {Lisp-Entry "initialize" () 56 11 ("install-designers" "nextmethod" "apply" "rest")}
        {Lisp-Entry "install-designers" () 66 11 ("install-designer" "install-designer?" "when" "level" "descendant" "dynamic" "function" "reference" "for-each-descendant")}
        {Lisp-Entry "install-designer?" () 73 26 ("false" "component")}
        {Lisp-Entry "get-designer-class" () 77 26 ("Designer")}
        {Lisp-Entry "install-designer" () 81 11 ("add-product-designer" "reference:" "form:" "get-designer-class" "new" "designer" "get-self-form" "form" "product" "class-of" "class" "let*" "component")}
        {Lisp-Entry "add-designer" () 88 11 ("cons" "designers" "set!" "designer" "component")}
        {Lisp-Entry "remove-designer" () 92 11 ("assq" "remove!" "designers" "set!" "component")}
        {Lisp-Entry "get-designer" () 96 21 ("designers" "assq" "cdr" "component")}
        {Lisp-Entry "for-each-designer" () 100 11 ("designers" "designer" "component" "bind" "pair" "dynamic" "function" "for-each" "proc")}
        {Lisp-Entry "product-add" () 107 21 ("add-designer" "Product" "is?" "when" "level" "descendant" "dynamic" "function" "for-each-descendant" "product")}
        {Lisp-Entry "product-remove" () 114 21 ("cleanup-product-designers" "product")}
        {Lisp-Entry "set-name" () 126 11 ("set-name" "" "apply" "find-modification-designer" "designer" "let" "others" "true" "use-owner?" "bind-keywords" "rest" "name" "component")}
        {Lisp-Entry "set-property" () 132 11 ("set-property" "" "get-product-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "true" "use-owner?" "bind-keywords" "rest" "value" "property" "component")}
        {Lisp-Entry "add-child" () 141 11 ("add-child" "" "get-product-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "true" "use-owner?" "bind-keywords" "rest" "parent" "child")}
        {Lisp-Entry "remove-child" () 150 11 ("remove-child" "" "get-product-designer" "designer" "let" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parent" "parent" "let*" "rest" "child")}
        {Lisp-Entry "instantiate-parcels" () 160 11 ("instantiate-parcels" "" "get-product-designer" "designer" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "let" "rest" "parent" "parcels")}
        {Lisp-Entry "move-components" () 169 11 ("move-components" "" "get-product-designer" "designer" "rest" "nextmethod" "apply" "reference" "eq?" "if" "verify-name-conflicts" "package-components" "let*" "set-modified?" "false" "descendant?:" "design-events?:" "name-resolution" ":name-resolution" "parcels" "instantiate-parcels" "prog1" "delete-components" "destination-owner" "get-parent" "find-modification-owner" "component" "dynamic" "function" "key:" "uniform" "owner" "let" "true" "branch" "branch:" "destination" "components")}
        {Lisp-Entry "move-components" () 185 11 ("set-modified?" "false" "descendant?:" "design-events?:" ":name-resolution" "instantiate-parcels" "prog1" "delete-components" "verify-name-conflicts" "name-resolution" "package-components" "parcels" "let*" "true" "branch" "branch:" "destination" "components")}
        {Lisp-Entry "cut-components" () 198 11 ("cut-components" "get-product-designer" "designer" "let" "nextmethod" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parents" "parents" "let*" "components")}
        {Lisp-Entry "copy-components" () 207 11 ("copy-components" "get-product-designer" "designer" "let" "nextmethod" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parents" "parents" "let*" "components")}
        {Lisp-Entry "paste-clipboard" () 216 11 ("paste-clipboard" "" "get-product-designer" "designer" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "let" "rest" "parent")}
        {Lisp-Entry "get-parents" () 224 11 ("get-parent" "component" "dynamic" "function" "map" "components")}
        {Lisp-Entry "find-modification-designer" () 235 11 ("get-designer" "my-designer??" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "use-owner?" "components")}
        {Lisp-Entry "find-modification-owner" () 242 11 ("car" "error" "1" "length" ">" "map" "remove-duplicates" "owners" "let" "pair?" "get-parent" "install-designer?" "reference" "eq?" "or" "if" "component" "dynamic" "function" "find-owner-product" "letrec" "components")}
        {Lisp-Entry "save-designer" () 261 21 ("designer" "product" "dynamic" "function" "for-each-designer" "save" "true" "set!" "get-modified?" "when" "false" "some-modified?" "let")}}}})
"Dispatch-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Dispatch-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.event.Dispatch-Event" () 37 9 ("jazz")
      {Lisp-Entry "Dispatch-Event" () 44 7 ("Event")
        {Lisp-Entry "parameters" () 47 8 ()}
        {Lisp-Entry "required" () 48 8 ()}
        {Lisp-Entry "required-last" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("setup-required-parameters" "parameters~self" "set!" "nextmethod" "parameters" "sender" "kind")}
        {Lisp-Entry "setup-required-parameters" () 58 18 ("1" "-" "required-last" "variant" "new-array-from-memory" "required" "set!" "rgvarg" "args" "cArgs" "parameters" "get" "count" "let")}
        {Lisp-Entry "get-required-parameter" () 70 18 ("required-parameter-address" "read-variant" "n")}
        {Lisp-Entry "set-required-parameter" () 74 18 ("required-parameter-address" "write-variant" "false" "by-reference?" "by-reference?:" "value" "n")}
        {Lisp-Entry "required-parameter-address" () 78 18 ("required-last" "-" "required" "array-element-address" "n")}}}})
"Dispatcher"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "runtime" "Dispatcher.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "Dispatcher" () 47 7 ("Object")
      {Lisp-Entry "dag-root" () 50 12 ("generate" "accessors")}
      {Lisp-Entry "Root-Signature" () 53 14 ("root-signature")}
      {Lisp-Entry "initialize" () 57 11 ("Root-Signature" "Dispatch-Node" "new" "dag-root" "set!" "nextmethod")}
      {Lisp-Entry "insert-signature" () 62 18 ("insert-node" "else" "proper-list?" "not" "type-name" "error" "locate-node" "cond" "standardize-signature" "let" "category" "signature" "procedure" "symbol")}
      {Lisp-Entry "standardize-signature" () 74 11 ("get-type" "essay" "get-typeref" "typeref" "let" "parameter" "dynamic" "function" "List" "map-to" "signature")}
      {Lisp-Entry "insert-node" () 82 18 ("get-specific-nodes" "add-specific-node" "remove-specific-node" "add-generic-node" "remove-generic-node" "get-signature" "can-call-with?" "neq?" "and" "when" "specific" "generic" "dynamic" "function" "for-each" "Dispatch-Node" "new" "node" "gather-generics" "generics" "let*" "signature" "procedure")}
      {Lisp-Entry "remove-node" () 99 18 ("remove-generic-node" "get-generic-nodes" "remove-specific-node" "get-specific-nodes" "add-generic-node" "add-specific-node" "specific" "generic" "dynamic" "function" "for-each" "node")}
      {Lisp-Entry "locate-node" () 114 18 ("first" "get-signature" "equal?" "length" "1" "=" "and" "if" "gather-generics" "matching" "let" "signature")}
      {Lisp-Entry "gather-generics" () 122 18 ("dag-root" "cons" "memq?" "not" "and" "get-specific-nodes" "false" "set!" "can-call-with?" "when" "child-node" "for-each" "true" "no-match?" "walk-node" "dynamic" "function" "iterate" "letrec" "generics" "let" "parameter-types")}
      {Lisp-Entry "find-generics" () 138 18 ("dag-root" "car" "eq?" "if" "gather-generics" "generics" "let" "parameter-types")}
      {Lisp-Entry "get-node-procedure" () 145 18 ("get-procedure" "node")}}
    {Lisp-Entry "Dispatch-Node" () 154 7 ("Object")
      {Lisp-Entry "procedure" () 157 12 ("generate" "accessors")}
      {Lisp-Entry "signature" () 158 12 ("generate" "accessors")}
      {Lisp-Entry "generic-nodes" () 159 12 ("generate" "accessors")}
      {Lisp-Entry "specific-nodes" () 160 12 ("generate" "accessors")}
      {Lisp-Entry "initialize" () 163 11 ("generic-nodes" "signature" "procedure" "set!" "nextmethod" "gen" "sig" "proc")}
      {Lisp-Entry "print" () 170 11 ("type-name" "map" "format" "Root-Signature" "signature" "eq?" "if" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
      {Lisp-Entry "can-call-with?" () 178 11 ("null?" "finally" "false" "return" "Java" "can-cast-into?" "not" "and" "when" "r2" "parameter-type" "r1" "remainder" "in" "data-type" "for" "loop" "true" "Root-Signature" "signature" "eq?" "if" "sig")}
      {Lisp-Entry "add-generic-node" () 189 11 ("cons" "set-generic-nodes" "generic-nodes" "equal?" "generic" "dynamic" "function" "find" "unless" "get-signature" "sig" "let" "node")}
      {Lisp-Entry "add-specific-node" () 197 11 ("cons" "set-specific-nodes" "specific-nodes" "equal?" "specific" "dynamic" "function" "find" "unless" "get-signature" "sig" "let" "node")}
      {Lisp-Entry "remove-generic-node" () 205 11 ("generic-nodes" "remove" "set-generic-nodes" "generic")}
      {Lisp-Entry "remove-specific-node" () 209 11 ("specific-nodes" "remove" "set-specific-nodes" "specific")}}})
"Display-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Display-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.display.Display-Column" () 37 9 ("jazz")
      {Lisp-Entry "Display-Column" () 44 7 ("Object")
        {Lisp-Entry "displayer" () 47 8 ()}
        {Lisp-Entry "factory" () 48 8 ()}
        {Lisp-Entry "content" () 49 8 ()}
        {Lisp-Entry "current" () 50 8 ()}
        {Lisp-Entry "border" () 51 8 ("0")}
        {Lisp-Entry "border-after" () 52 8 ("0")}
        {Lisp-Entry "minimum" () 53 8 ("0")}
        {Lisp-Entry "line" () 54 8 ("0")}
        {Lisp-Entry "empty?" () 55 8 ("true")}
        {Lisp-Entry "initialize" () 63 11 ("minimum~self" "border-after~self" "border~self" "List-Factory" "new" "factory~self" "displayer~self" "set!" "nextmethod" "minimum" "minimum:" "border-after" "border-after:" "0" "border" "border:" "displayer")}
        {Lisp-Entry "get-border" () 77 18 ("border")}
        {Lisp-Entry "set-border" () 81 18 ("border" "set!" "value")}
        {Lisp-Entry "get-border-after" () 85 18 ("border-after")}
        {Lisp-Entry "set-border-after" () 89 18 ("border-after" "set!" "value")}
        {Lisp-Entry "get-empty?" () 93 18 ("empty?")}
        {Lisp-Entry "output" () 102 18 ("increase-line" "false" "empty?" "set!" "when" "put-data" "fill-empty" "rest" "data")}
        {Lisp-Entry "put-data" () 110 26 ("factory" "put" "rest" "data")}
        {Lisp-Entry "increase-line" () 114 26 ("line" "increase!")}
        {Lisp-Entry "get-next" () 118 21 ("cdr" "set!" "car" "prog1" "current" "when")}
        {Lisp-Entry "rewind" () 124 18 ("current" "factory" "get-output" "content" "set!")}
        {Lisp-Entry "fill-empty" () 129 18 ("increase!" "factory" "put" "line" "" "while" "displayer" "get-line" "main" "let")}
        {Lisp-Entry "replace-empty" () 136 21 ("cdr" "set!" "set-car!" "empty-replacement" "replacement" "null?" "if" "current" "car" "data" "let" "previous-data" "previous-column")}
        {Lisp-Entry "empty-replacement" () 147 29 ("previous-data" "previous-column")}
        {Lisp-Entry "prepare-print" () 156 26 ("rewind")}
        {Lisp-Entry "print-to" () 160 26 ("border-after" "border" "format" "printer" "previous-data" "previous-column" "data")}}}})
"DnD"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dnd" "DnD.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.dnd.DnD" () 37 9 ("jazz")
      {Lisp-Entry "DnD" () 45 7 ("Object")
        {Lisp-Entry "source" () 48 15 ()}
        {Lisp-Entry "target" () 49 15 ()}
        {Lisp-Entry "view" () 50 15 ()}
        {Lisp-Entry "initialize" () 53 11 ("source~self" "set!" "nextmethod" "source" "source:")}
        {Lisp-Entry "print" () 58 11 ("view" "target" "source" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-source" () 69 18 ("source")}
        {Lisp-Entry "get-target" () 73 18 ("target")}
        {Lisp-Entry "get-view" () 77 18 ("view")}}}})
"Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Doc.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.doc.doc.Doc" () 11 9 ("jazz")
      {Lisp-Entry "Doc" () 19 7 ("Component")
        {Lisp-Entry "title" () 22 12 ("generate" "accessors")}
        {Lisp-Entry "description" () 23 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 26 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "install-child" () 30 11 ("nextmethod" "else" "set-description" "description" "get-model-name" "case" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "get-catalog" () 41 26 ("parent" "get-catalog")}
        {Lisp-Entry "set-catalog" () 45 26 ("cat")}
        {Lisp-Entry "get-effective-title" () 54 18 ("name" "->string" "title" "either")}
        {Lisp-Entry "update-indexes" () 63 26 ("self" "hash-add" "name" "not-null?" "when" "references-index" "definitions-index")}
        {Lisp-Entry "print-catalog" () 68 26 ("description" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-documentation" () 80 18 ("get-definitions" "self" "get-parent" "eq?" "doc" "dynamic" "function" "find-if" "get-catalog" "catalog" "let" "symbol")}
        {Lisp-Entry "present" () 92 26 ("description")}
        {Lisp-Entry "present-text" () 96 26 ("form->node" "->jml" "paragraphs" "tag" "bind" "description" "when")}
        {Lisp-Entry "Red-Ball" () 108 12 ()}
        {Lisp-Entry "property-presentation" () 118 16 ("nextmethod" "else" "description" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 124 11 ("nextmethod" "else" "Doc-Text-Row" "description" "String-Row" "new" "title" "field-name" "case" "property")}
        {Lisp-Entry "display-property?" () 131 11 ("visible?" "children" "before" "name-info" "field-name" "memq?" "not" "property")}
        {Lisp-Entry "get-categorized-properties" () 135 11 ("description" "title")}
        {Lisp-Entry "get-addable-classes" () 139 11 ("Method-Doc" "Syntax-Doc" "Constant-Doc" "Interface-Doc" "Class-Doc" "Package-Doc" "Concept-Doc" "Section-Doc" "list")}}}})
"Doc-Catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "catalog" "Doc-Catalog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.doc.catalog.Doc-Catalog" () 37 9 ("jazz")
      {Lisp-Entry "Doc-Catalog" () 45 7 ("Component-Catalog")
        {Lisp-Entry "product" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("product~self" "set!" "nextmethod" "product" "client" "name")}
        {Lisp-Entry "get-product" () 61 18 ("product")}}}})
"Doc-Design-Extractor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "extract" "Doc-Design-Extractor.fusion"} {Time 128360666660000000L}
    {Lisp-Entry "jazz.doc.extract" () 37 9 ("jazz")
      {Lisp-Entry "Doc-Design-Extractor" () 45 7 ("Object")}}})
"Doc-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "tools" "Doc-Editor.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.tools.Doc-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Doc-Editor" () 50 7 ("card" "card-border" "second" "card-contour" "width:" "descendant" "descendants" "header" "fill" "content" "vscroll?:" "hscroll?:" "document" "scroller" "entry" "style:" "edge" "border-type:" "first" "descendants-border" "division:" "horz" "orientation:" "split" "state:" "center" "splitter" "on-edit" "tail" "edit" "on-build" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "build" "6" "flow" "north" "location:" "toolbar" "name:" "0" "2" "Rect" "layout-insets:" "border" "layout-type:" "Dimension" "size:" "title:" "WinUser" "Development" "Utilities" "Editor-View")
        {Lisp-Entry "entry" () 53 12 ("set-entry" "get-entry")}
        {Lisp-Entry "type" () 56 8 ()}
        {Lisp-Entry "location" () 57 8 ()}
        {Lisp-Entry "expression" () 58 8 ()}
        {Lisp-Entry "text-object" () 59 8 ()}
        {Lisp-Entry "text-location" () 60 8 ()}
        {Lisp-Entry "form-model" () 81 11 ("nextmethod" "else" "Docs-Tree" "descendants" "get-name" "case" "form")}
        {Lisp-Entry "install" () 87 11 ("self" "set-editor" "categorized" "card" "get-tree" "set-filter" "descendant" "descendants" "locate" "child" "set-title" "nextmethod" "rest")}
        {Lisp-Entry "focus-document" () 95 11 ("descendant" "descendants" "locate" "child" "acquire-focus")}
        {Lisp-Entry "get-tree" () 104 18 ("tree" "descendants" "locate")}
        {Lisp-Entry "frame-icon" () 114 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 119 16 ()}
        {Lisp-Entry "frame-position" () 124 16 ("Point")}
        {Lisp-Entry "frame-size" () 129 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 133 11 ("home")}
        {Lisp-Entry "new-controller" () 143 11 ("self" "Doc-Editor-Controller" "new")}
        {Lisp-Entry "Doc-Editor-Controller" () 148 9 ("Editor-View-Controller")
          {Lisp-Entry "name-status" () 151 13 ("document" "editor-title")}}
        {Lisp-Entry "resize-center" () 160 11 ("card-contour" "0" "descendants-border" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-build" () 165 11 ("on-build" "unimplemented" "bell" "client" "null?" "if" "evt")}
        {Lisp-Entry "on-edit" () 171 11 ("edit-form" "evt")}
        {Lisp-Entry "get-entry" () 180 18 ("entry")}
        {Lisp-Entry "set-entry" () 184 18 ("setup" "text-location" "text" "object" "location" "bind" "entry" "set!" "info")}
        {Lisp-Entry "setup" () 190 11 ("text-location" "text-object" "expression" "location" "set!" "text-loc" "text" "object" "loc")}
        {Lisp-Entry "editor-title" () 202 11 ("get-form" "get-origin" "get-base" "format" "null?" "if" "get-reference" "reference" "let")}}}})
"Doc-Extractor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "extract" "Doc-Extractor.fusion"} {Time 128360666660000000L}
    {Lisp-Entry "Doc-Extractor" () 42 7 ("Object")
      {Lisp-Entry "extract-doc" () 45 18 ("length" "user-message" "extract-category" "get-category" "category" "category-name" "dynamic" "function" "for-each" "File-Printer" "new" "printer" "with-closed" "new-map" "new-environment" "environment" "documented-categories" "categories" "let" "file")}
      {Lisp-Entry "extract-category" () 61 11 ("extract-fields" "Type" "Category" "memq?" "unless" "extract-category-signature" "format" "user-message" "class-of" "meta" "type-name" "name" "let" "printer" "category")}
      {Lisp-Entry "extract-category-signature" () 73 11 ("name" "interface" "dynamic" "function" "else" "map" "1" "0" "length" "class-interfaces" "interfaces" "class" "case" "when" "type-name" "format" "type-ascendant" "ascendant" "category-kind" "kind" "let" "printer" "category")}
      {Lisp-Entry "extract-fields" () 93 11 ("extract-methods" "extract-properties" "collect-forms" "forms" "let" "printer" "prefix" "category")}
      {Lisp-Entry "collect-forms" () 99 11 ("category-forms" "gather" "list" "category-field" "field" "let" "value" "name" "bind" "info" "dynamic" "function" "map" "category")}
      {Lisp-Entry "extract-properties" () 112 11 ("if" "-" "property-setter" "setter" "property-getter" "getter" "value" "name" "field" "bind" "form" "dynamic" "function" "for-each" "second" "length" "map" "generic-max" "apply" "max" "format" "when" "car" "key:" "Property" "collect-type" "properties" "let" "printer" "prefix" "forms" "category")}
      {Lisp-Entry "extract-methods" () 134 11 ("extract-method" "for-each" "format" "length" "map" "generic-max" "apply" "max" "remove!" "cons" "set!" "find" "pair" "when" "second" "key:" "definition-origin" "field-creator" "eq?" "function?" "definition-virtual?" "field-public?" "definition?" "and" "initialize" "construct-literal" "memq?" "or" "value" "name" "field" "bind" "form" "dynamic" "function" "collect-if" "" "sort" "methods" "let" "printer" "prefix" "forms" "category")}
      {Lisp-Entry "extract-method" () 160 11 ("present-parameters" "7" "length" "9" "-" "format" "definition-virtual?" "if" "virtual" "present-access" "access" "function-body" "body" "function-parameters" "parameters" "let" "printer" "prefix" "max" "func" "name" "field")}
      {Lisp-Entry "present-access" () 176 11 ("protected" "field-protected?" "public" "field-public?" "cond" "field")}
      {Lisp-Entry "present-parameters" () 183 11 ("last-cdr" "rest" "but-last-cdr" "proper" "let" "format" "proper-list?" "if" "body" "parameters")}
      {Lisp-Entry "documented-categories" () 199 11 ("" "sort" "cons" "set!" "Language" "neq?" "when" "properties" "source" "category-name" "dynamic" "function" "for-each-source" "categories" "let")}
      {Lisp-Entry "category-kind" () 208 11 ("error" "else" "package" "package?" "interface" "interface?" "class" "class?" "cond" "category")}}})
"Doc-Insert"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Doc-Insert.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Doc-Insert" () 11 9 ("jazz")
      {Lisp-Entry "Doc-Insert" () 19 7 ("Doc")
        {Lisp-Entry "path" () 22 12 ("generate" "accessors")}}}})
"Doc-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "designer" "Doc-Text-Actions.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.designer.Doc-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Doc-Text-Actions" () 47 7 (":control" "Shortcut" "shortcut:" "on-parameter" ":focus" "Event-Handler" "action-handler:" "parameter" "name:" "Actions")}}})
"Doc-Text-List-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "designer" "Doc-Text-List-Row.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.designer.Doc-Text-List-Row" () 37 9 ("jazz")
      {Lisp-Entry "Doc-Text-List-Row" () 45 7 ("List-Row")
        {Lisp-Entry "get-subrow-class" () 48 11 ("Doc-Text-Row")}}}})
"Doc-Text-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "designer" "Doc-Text-Row.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.designer.Doc-Text-Row" () 37 9 ("jazz")
      {Lisp-Entry "Doc-Text-Row" () 46 7 ("Formatted-Text-Row")
        {Lisp-Entry "new-editor" () 54 11 ("editor-class" "new")}
        {Lisp-Entry "editor-class" () 58 11 ("Doc-Text-View")}
        {Lisp-Entry "editor-height" () 62 11 ()}}}})
"Doc-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "designer" "Doc-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.doc.designer.Doc-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Doc-Text-View" () 48 7 ("Plain" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "4" "left-padding:" "Row-Formatted-Text-View")
        {Lisp-Entry "install" () 55 11 ("Variable" "monospace?:" "Code" "Dark-Blue" "Hyperlink" "Reference" "Purple" "Comment" "Dark-Red" "Color" "color:" "Title" "italic?:" "point-size:" "font-name:" "Font" "font:" "Text-Style" "add-style" "Heading3" "Heading2" "Heading1" "Default" "base:" "Heading0" "name:" "Format" "add-format" "nextmethod" "rest")}
        {Lisp-Entry "focus-actions" () 80 11 ("nextmethod" "doc-text" "find-actions" "cons")}
        {Lisp-Entry "get-context-menu" () 90 11 ()}
        {Lisp-Entry "on-parameter" () 94 11 ("+" "get-end" "end" "copy" "start" "let" "1" "get-start" "-" "set-caret" "insert-string" "begin" "empty-selection?" "if" "evt")}}}})
"Doc-Word-Extractor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "extract" "Doc-Word-Extractor.fusion"} {Time 128360666660000000L}
    {Lisp-Entry "Doc-Word-Extractor" () 40 7 ("Object")
      {Lisp-Entry "extract-doc" () 43 18 ("length" "user-message" "extract-category" "get-category" "category" "category-name" "dynamic" "function" "for-each" "File-Printer" "new" "printer" "with-closed" "new-map" "new-environment" "environment" "documented-categories" "categories" "let" "file")}
      {Lisp-Entry "extract-category" () 59 11 ("extract-fields" "Type" "Category" "memq?" "unless" "extract-category-signature" "format" "user-message" "class-of" "meta" "type-name" "name" "let" "printer" "category")}
      {Lisp-Entry "extract-category-signature" () 71 11 ("name" "interface" "dynamic" "function" "else" "map" "1" "0" "length" "class-interfaces" "interfaces" "class" "case" "when" "type-name" "format" "type-ascendant" "ascendant" "category-kind" "kind" "let" "printer" "category")}
      {Lisp-Entry "extract-fields" () 91 11 ("extract-methods" "extract-properties" "collect-forms" "forms" "let" "printer" "prefix" "category")}
      {Lisp-Entry "collect-forms" () 97 11 ("category-forms" "gather" "list" "category-field" "field" "let" "value" "name" "bind" "info" "dynamic" "function" "map" "category")}
      {Lisp-Entry "extract-properties" () 110 11 ("if" "-" "property-setter" "setter" "property-getter" "getter" "value" "name" "field" "bind" "form" "dynamic" "function" "for-each" "second" "length" "map" "generic-max" "apply" "max" "format" "when" "car" "key:" "Property" "collect-type" "properties" "let" "printer" "prefix" "forms" "category")}
      {Lisp-Entry "extract-methods" () 132 11 ("extract-method" "for-each" "format" "length" "map" "generic-max" "apply" "max" "remove!" "cons" "set!" "find" "pair" "when" "second" "key:" "definition-origin" "field-creator" "eq?" "function?" "definition-virtual?" "field-public?" "definition?" "and" "initialize" "construct-literal" "memq?" "or" "value" "name" "field" "bind" "form" "dynamic" "function" "collect-if" "" "sort" "methods" "let" "printer" "prefix" "forms" "category")}
      {Lisp-Entry "extract-method" () 158 11 ("present-parameters" "7" "length" "9" "-" "format" "definition-virtual?" "if" "virtual" "present-access" "access" "function-body" "body" "function-parameters" "parameters" "let" "printer" "prefix" "max" "func" "name" "field")}
      {Lisp-Entry "present-access" () 174 11 ("protected" "field-protected?" "public" "field-public?" "cond" "field")}
      {Lisp-Entry "present-parameters" () 181 11 ("present-rest" "last-cdr" "rest" "but-last-cdr" "proper" "let" "format" "proper-list?" "if" "body" "parameters")}
      {Lisp-Entry "documented-categories" () 197 11 ("" "sort" "cons" "set!" "Language" "neq?" "when" "properties" "source" "category-name" "dynamic" "function" "for-each-source" "categories" "let")}
      {Lisp-Entry "category-kind" () 206 11 ("package" "package?" "interface" "interface?" "class" "class?" "cond" "category")}}})
"DocToHTML-Transformation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "transformation" "DocToHTML-Transformation.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "DocToHTML-Transformation" () 37 16 ("JML-Transformation")
      {Lisp-Entry "parameter" () 40 12 ("get-child-text" "text" "let" "node")}
      {Lisp-Entry "code" () 45 12 ("get-child-text" "text" "let" "node")}
      {Lisp-Entry "reference" () 50 12 ("href:" "->string" "get-text" "if" "text" "first-child" "child" "format" "name" "get-property" "href" "let*" "node")}
      {Lisp-Entry "header" () 58 12 ("get-child-text" "text" "let" "node")}
      {Lisp-Entry "node" () 63 12 ("expand-node" "node")}
      {Lisp-Entry "expand-node" () 67 11 ("->jml" "get-children" "expand-node" "map" "get-tag" "eq?" "JML-Element" "is?" "and" "if" "node")}
      {Lisp-Entry "definition" () 74 12 ("children->jml" "class:" "name" "->string" "get-property" "either" "title" "let" "node")}
      {Lisp-Entry "properties" () 81 12 ("get-text" "get-children" "value" "property" "bind" "prop" "dynamic" "function" "map" "class:" "node")}
      {Lisp-Entry "terminology" () 91 12 ("get-text" "get-children" "text" "term" "bind" "definition" "dynamic" "function" "map" "class:" "node")}
      {Lisp-Entry "format-directives" () 102 12 ("get-text" "get-children" "text" "char" "name" "bind" "directive" "dynamic" "function" "map" "class:" "node")}
      {Lisp-Entry "styled-table" () 113 12 ("children->jml" "properties->jml" "style:" "red" "1" "solid" "format" "style" "let" "node")}}})
"DocToText-Transformation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "transformation" "DocToText-Transformation.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "DocToText-Transformation" () 37 16 ("JML-Transformation")
      {Lisp-Entry "parameter" () 40 12 ("Dark-Red" "color:" "get-child-text" "text" "let" "node")}
      {Lisp-Entry "code" () 45 12 ("Dark-Red" "color:" "get-child-text" "text" "let" "node")}
      {Lisp-Entry "hyperlink" () 50 12 ("Dark-Blue" "color:" "get-child-text" "text" "let" "node")}
      {Lisp-Entry "node" () 55 12 ("children->jml" "bulleted?:" "node")}
      {Lisp-Entry "properties" () 59 12 ("get-text" "get-children" "value" "property" "bind" "prop" "dynamic" "function" "map" "node")}
      {Lisp-Entry "styled-table" () 69 12 ("children->jml" "properties->jml" "style:" "red" "1" "solid" "format" "style" "let" "node")}}})
"Docked"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Docked.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.window.Docked" () 37 9 ("jazz")
      {Lisp-Entry "Docked" () 45 7 ("View-Player")}}})
"Docked-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Docked-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Docked-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Docked-Preferences" () 47 7 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "model-name" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "caption?" () 51 12 ("generate" "accessors" "true")}
        {Lisp-Entry "zoomable?" () 52 12 ("generate" "accessors" "true")}
        {Lisp-Entry "walk-form" () 65 16 ("push-reference" "in-manifest?" "and" "when" "get-property" "model-name" "let" "form" "analyser")}
        {Lisp-Entry "presentation-property?" () 76 11 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 80 11 ("name" "format" "title" "either")}
        {Lisp-Entry "set-presentation" () 84 11 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "apply-preferences" () 93 11 ("true" "set-visible?" "get-guest" "client-activate" "location" "set-location" "zoomable?" "set-zoomable?" "caption?" "get-root" "set-caption?" "set-title" "title" "when" "set-parent" "name" "singleton-docked" "host" "model-name" "autoload" "class" "let*" "assert" "parent")}
        {Lisp-Entry "get-class-image" () 113 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" () 117 11 ("zoomable" "caption?" "model-name" "location")}}}})
"Docked-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Docked-Root.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Docked-Root" () 37 9 ("jazz")
      {Lisp-Entry "Docked-Root" () 51 7 ("on-close" ":root" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "close" "on-mouse-down" ":form" "Event-Handler" "mouse-down-handler:" "flow" "layout-type:" "0" "Dimension" "size:" "tools" "name:" "Root-View")
        {Lisp-Entry "fullscreen?" () 54 12 ("generate" "accessors" "false")}
        {Lisp-Entry "caption?" () 55 12 ("generate" "accessors" "true")}
        {Lisp-Entry "zoomable?" () 56 12 ("generate" "accessors" "true")}
        {Lisp-Entry "super-patch-application?" () 66 11 ("true")}
        {Lisp-Entry "finish" () 70 11 ("child" "close" "super-patch-application?" "when" "nextmethod" "rest")}
        {Lisp-Entry "size-change" () 81 11 ("2" "Rect" "insets:" "invalidate-border" "invalidate-top" "nextmethod" "size")}
        {Lisp-Entry "on-close" () 91 11 ("selection" "first-child" "Pad-Window" "close" "get-location" "set-location" "layout-window" "zoom" "set-mode" "begin" "Workspace-Splitter" "if" "when" "first-window" "other" "let" "Splitter-Window" "is?" "cond" "get-toplevel" "set-parent" "false" "set-visible?" "dynamic" "function" "with-locked-update" "grand" "get-parent" "parent" "player" "host" "let*" "evt")}
        {Lisp-Entry "on-close" () 117 11 ("hide-splitted" "evt")}
        {Lisp-Entry "hide-splitted" () 121 18 ("selection" "first-child" "Pad-Window" "close" "get-location" "set-location" "layout-window" "zoom" "set-mode" "begin" "Workspace-Splitter" "if" "when" "first-window" "other" "let" "Splitter-Window" "is?" "cond" "get-toplevel" "set-parent" "false" "set-visible?" "dynamic" "function" "with-locked-update" "grand" "get-parent" "parent" "player" "host" "let*")}
        {Lisp-Entry "mouse-activate" () 152 11 ("get-player" "acquire-focus")}
        {Lisp-Entry "root-activate" () 156 11 ("invalidate-caption")}
        {Lisp-Entry "root-deactivate" () 160 11 ("invalidate-caption")}
        {Lisp-Entry "install-tools" () 169 18 ("tools-width" "Dimension" "new" "set-size" "false" "set-visible?" "layout-view" "set-parent" "tail" "set-location" "tool" "dynamic" "function" "for-each" "locate" "dest" "get-children" "tools" "let" "when" "get-tools-view" "view" "get-guest" "guest" "player" "host" "let*")}
        {Lisp-Entry "tools-width" () 187 11 ("get-size" "get-width" "increase!" "get-visible?" "when" "tool" "dynamic" "function" "for-each" "0" "total" "let" "tools")}
        {Lisp-Entry "redirect-handler" () 199 11 ("get-guest" "guest" "player" "host" "let*" ":form" "/=" "get-target-name" "name" "let" "nextmethod" "Item" "is?" "close" "locate-component" "eq?" "super-patch-application?" "and" "or" "if" "sender" "handler")}
        {Lisp-Entry "layout" () 215 11 ("else" "4" "1" "true" "2" "-" "layout-tools" "caption?" "Dimension" "new" "set-size" "0" "Point" "set-position" "when" "false" "set-visible?" "fullscreen?" "cond" "get-content" "content" "locate-component" "close" "locate" "tools" "get-height" "height" "get-width" "width" "let")}
        {Lisp-Entry "layout-tools" () 245 11 ("2" "get-width" "3" "-" "Point" "new" "set-position" "0" "super-patch-application?" "if" "close-width" "get-size" "size" "locate" "tools" "let*" "width")}
        {Lisp-Entry "menu-rect" () 257 11 ("1" "Rect" "new" "player" "collect-others" "if")}
        {Lisp-Entry "caption-rect" () 263 11 ("2" "get-width" "-" "1" "Rect" "new")}
        {Lisp-Entry "top-rect" () 267 11 ("2" "get-width" "-" "1" "Rect" "new")}
        {Lisp-Entry "invalidate-top" () 276 11 ("top-rect" "invalidate-rect")}
        {Lisp-Entry "invalidate-caption" () 280 11 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "Active-Colors" () 289 14 ("blue:" "green:" "red:" "Dark-Red" "name:" "Color" "list")}
        {Lisp-Entry "Active-Colors" () 293 14 ("blue:" "green:" "0" "red:" "Color" "list")}
        {Lisp-Entry "Frame-Dark-Brush" () 297 14 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "Frame-Medium-Pen" () 300 14 ("blue:" "green:" "red:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "Frame-Light-Pen" () 303 14 ("blue:" "green:" "red:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "draw" () 307 11 ("Frame-Light-Pen" "Frame-Medium-Pen" "Dark" "7" "draw-text" "set-text-color" "Default-GUI" "Font" "set-font" "down" "draw-arrow-tip" "Black" "White" "collect-others" "o" "let" "5" "4" "get-application" "get-icons-cache" "draw-image" "Medium" "Color" "fill-rect" "second" "Active-Colors" "first" "gradient-fill" "if" "caption?" "when" "3" "1" "line" "Light" "name:" "Pen" "set-pen" "Frame-Dark-Brush" "get-bottom" "get-right" "-" "get-top" "get-left" "frame-rect" "get-focused-root" "self" "eq?" "focused?" "get-height" "height" "get-width" "width" "get-title" "localize" "title" "palette-icon" "icon" "get-guest" "guest" "player" "host" "let*" "tools" "locate" "get-position" "get-h" "2" "Rect" "new" "caption" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "mouse-down" () 348 11 ("toggle-docked" "caption-rect" "select-menu" "menu-rect" "in-rect?" "cond" "pos")}
        {Lisp-Entry "toggle-docked" () 355 11 ("select-next" "dynamic" "function" "with-locked-update" "get-h" "" "text-width" "+" "h" "Default-GUI" "name:" "Font" "font" "get-title" "localize" "title" "Pad-Window" "is?" "when" "get-parent" "parent" "player" "host" "let*" "pos")}
        {Lisp-Entry "double-click" () 369 11 ("unzoom" "zoom" "split" "get-state" "=" "dynamic" "function" "with-locked-update" "Splitter-Window" "splitter" "let" "get-application" "toggle-full-screen" "shift-down?" "Pad-Window" "is?" "if" "target" "get-parent" "parent" "get-host" "host" "let*" "zoomable?" "when" "pos")}
        {Lisp-Entry "select-menu" () 390 11 ("2" "Point" "track-popup-menu" "layout-menu" ":host" "list" "properties:" "on-select" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "icon:" "title:" ":parent" "Label-Item" "class-of" "palette-icon" "icon" "get-title" "title" "get-guest" "guest" "docked" "dynamic" "function" "for-each" "Context-Menu" "new" "menu" "let" "when" "collect-others" "others" "player" "host" "let*")}
        {Lisp-Entry "collect-others" () 405 11 ("get-children" "/=" "hst" "dynamic" "function" "collect-if" "Pad-Window" "is?" "when" "player" "get-parent" "pad" "let" "host")}
        {Lisp-Entry "on-select" () 413 11 ("acquire-focus" "set-selection" "dynamic" "function" "with-locked-update" ":host" "get-property" "host" "player" "get-parent" "parent" "let" "evt")}}}})
"Docs-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "tools" "Docs-Tree.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.tools.Docs-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Docs-Tree" () 46 7 ("Descendants-Tree")
        {Lisp-Entry "row-state" () 49 11 ("collapsed" "expanded" "1" "" "if" "level" "update?" "component")}}}})
"Document"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "document" "Document.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.document.Document" () 37 9 ("jazz")
      {Lisp-Entry "Document" () 45 11 ()
        {Lisp-Entry "get-controller" () 48 35 ()}
        {Lisp-Entry "new-controller" () 49 35 ()}
        {Lisp-Entry "load-content" () 50 35 ("moniker")}
        {Lisp-Entry "save-content" () 51 35 ("moniker")}
        {Lisp-Entry "verify-reload" () 52 35 ()}
        {Lisp-Entry "reload-moniker" () 53 35 ("moniker")}
        {Lisp-Entry "default-extension" () 54 35 ()}
        {Lisp-Entry "extensions" () 55 35 ()}
        {Lisp-Entry "focus-document" () 56 35 ()}
        {Lisp-Entry "install-scroller?" () 57 35 ()}
        {Lisp-Entry "tool-update" () 58 35 ("tool?")}
        {Lisp-Entry "console-update" () 59 35 ("console?")}
        {Lisp-Entry "current-history-item" () 60 35 ()}
        {Lisp-Entry "compare-moniker" () 61 35 ("moniker")}
        {Lisp-Entry "frame-guest?" () 62 35 ()}}}})
"Document-Controller"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "document" "Document-Controller.fusion"} {Time 128368662940000000L}
    {Lisp-Entry "jazz.ui.document.Document-Controller" () 37 9 ("jazz")
      {Lisp-Entry "Document-Controller" () 49 7 ("Object")
        {Lisp-Entry "document" () 52 8 ()}
        {Lisp-Entry "newname" () 53 8 ()}
        {Lisp-Entry "moniker" () 54 8 ()}
        {Lisp-Entry "tool?" () 55 8 ("false")}
        {Lisp-Entry "console?" () 56 8 ("false")}
        {Lisp-Entry "modified?" () 57 8 ("false")}
        {Lisp-Entry "read-only?" () 58 8 ("false")}
        {Lisp-Entry "moniker-time" () 59 8 ()}
        {Lisp-Entry "last-repository-status" () 60 8 ()}
        {Lisp-Entry "initialize" () 63 11 ("destroy-mandatory" "self" "add-repository-listener" "repository-register?" "when" "console?~self" "tool?~self" "document~self" "set!" "nextmethod" "console?" "console?:" "false" "tool?" "tool?:" "document")}
        {Lisp-Entry "destroy" () 74 11 ("nextmethod" "self" "remove-repository-listener")}
        {Lisp-Entry "install-in-host" () 85 18 ("document" "focus-document" "get-visible?" "when" "update-status" "position-host" "install-container" "host")}
        {Lisp-Entry "install-container" () 93 29 ("install-scroller" "document" "install-scroller?" "when")}
        {Lisp-Entry "install-scroller" () 98 21 ("set-client" "set-parent" "hscroll?:" "true" "vscroll?:" "get-content" "parent:" "Scroller-View" "new" "scroller" "document" "get-root" "root" "let*")}
        {Lisp-Entry "position-host" () 105 11 ("set-size" "set-position" "get-height" "Dimension" "size" "5" "get-width" "-" "Point" "new" "position" "documents" "get-preferences" "get-default-width" "width" "get-parent" "get-size" "parent-size" "let*" "host")}
        {Lisp-Entry "confirm-close" () 119 26 ("throw-cancel" "cancel" "no" "save-all" "yes" "case" "confirmation" "type:" "name-status" "format" "message-box" "code" "let" "get-modified?" "when")}
        {Lisp-Entry "close-on-close-all?" () 129 18 ("get-tool?" "not")}
        {Lisp-Entry "get-newname" () 138 18 ("newname")}
        {Lisp-Entry "set-newname" () 142 18 ("newname" "set!" "value")}
        {Lisp-Entry "effective-newname" () 146 11 ("localize" "newname" "either")}
        {Lisp-Entry "get-moniker" () 150 18 ("moniker")}
        {Lisp-Entry "set-moniker" () 154 18 ("document" "load-content" "set!" "1" "car" "Moniker" "is-not?" "moniker" "/=" "when" "mnk")}
        {Lisp-Entry "change-moniker" () 162 18 ("moniker" "set!" "1" "car" "Moniker" "is-not?" "when" "mnk")}
        {Lisp-Entry "save" () 168 26 ("save-content" "safe-zipped?" "write-allowed?" "and" "when" "save-as" "moniker" "not" "if")}
        {Lisp-Entry "save-as" () 175 26 ("save-to" "set-read/write" "read-only?" "exists?" "and" "when" "extensions:" ":default-extension" "get-name" "effective-newname" "not" "if" ":initial-filename" "SaveFile-Dialog" "get-modal" "moniker" "extensions" "document" "default-extension" "extension" "let*")}
        {Lisp-Entry "save-to" () 184 18 ("update-status" "moniker" "set!" "save-content" "1" "car" "Moniker" "is-not?" "when" "mnk")}
        {Lisp-Entry "save-all" () 192 18 ("save")}
        {Lisp-Entry "save-content" () 196 11 ("document" "save-content" "moniker")}
        {Lisp-Entry "revert-saved" () 200 18 ("throw-cancel" "cancel" "no" "document" "reload-moniker" "yes" "case" "confirmation" "type:" "message-box" "code" "let" "bell" "moniker" "not" "if")}
        {Lisp-Entry "compare-saved" () 211 18 ("document" "compare-moniker" "bell" "moniker" "not" "if")}
        {Lisp-Entry "get-modified?" () 222 26 ("modified?" "false" "console?" "if")}
        {Lisp-Entry "set-modified?" () 228 26 ("update-status" "set!" "modified?" "/=" "when" "state")}
        {Lisp-Entry "dependent-document?" () 239 26 ("false")}
        {Lisp-Entry "set-caption" () 248 18 ("invalidate-caption" "get-toplevel" "set-caption" "front-window?" "get-maximized?" "Frame-Root" "is?" "and" "if" "get-visible?" "when" "set-title" "get-host" "host" "document" "get-root" "root" "let" "title")}
        {Lisp-Entry "update-status" () 264 26 ("document-status" "set-caption" "get-guest" "eq?" "View-Host" "is?" "and" "document" "get-host" "host" "let" "update-state" "last-repository-status" "set!" "when" "true" "refresh-repository-status?" "refresh-repository-status?:")}
        {Lisp-Entry "document-status" () 273 26 ("read/write-status" "repository-status" "set!" "begin" "last-repository-status" "either" "directory-status" "modified-status" "name-status" "format")}
        {Lisp-Entry "name-status" () 285 26 ("get-name" "get-base" "tool?" "effective-newname" "moniker" "not" "if")}
        {Lisp-Entry "modified-status" () 293 11 ("get-modified?" "if")}
        {Lisp-Entry "directory-status" () 299 11 ("present-location" "format" "tool?" "moniker" "not" "or" "if")}
        {Lisp-Entry "repository-status" () 305 29 ("get-status" "status" "with-closed" "repository-status-aux" "null?" "repository-detached-status" "moniker" "supports-detaching?" "item" "repository" "receive" "not" "if" "repository-info" "info" "let")}
        {Lisp-Entry "repository-status-aux" () 319 11 ("get-checkouts-usernames" "present-usernames" "else" "format" "checked-in" "=" "null?" "cond" "status" "item" "repository")}
        {Lisp-Entry "repository-info" () 328 11 ("false" "error?:" "get-repository-item" "get-repository" "values" "find-moniker" "let" "tool?" "not" "moniker" "Repository" "in-manifest?" "and" "when")}
        {Lisp-Entry "repository-detached-status" () 339 11 ("checked-out" "detached" "not-edited" "moniker" "get-detached-status" "case" "repository")}
        {Lisp-Entry "read/write-status" () 346 11 ("read-only?" "tool?" "moniker" "not" "or" "if")}
        {Lisp-Entry "get-read-only?" () 359 18 ("read-only?")}
        {Lisp-Entry "get-moniker-time" () 363 18 ("moniker-time")}
        {Lisp-Entry "update-state" () 367 18 ("Zipped" "is?" "false" "read-only?" "set!" "exists?" "moniker" "not" "or" "if")}
        {Lisp-Entry "update-moniker-time" () 376 26 ("get-modification-time" "moniker-time" "set!" "moniker")}
        {Lisp-Entry "verify-reload" () 380 18 (":cancel-edition?" ":propose-reload?" "propose-reload" "needs-reload?" "when" "false" "cancel-edition?" "cancel-edition?:" "true" "propose-reload?" "propose-reload?:")}
        {Lisp-Entry "needs-reload?" () 385 18 ("Zipped" "is-not?" "get-modification-time" "/=" "exists?" "moniker-time" "moniker" "and")}
        {Lisp-Entry "propose-reload" () 397 18 ("cancel" "update-status" "update-moniker-time" "no" "throw-cancel" "when" "moniker" "document" "reload-moniker" "case" "confirmation" "type:" "title:" "get-moniker" "format" "message-box" "yes" "not" "if" "code" "let" "false" "cancel-edition?" "cancel-edition?:" "true" "propose-reload?" "propose-reload?:")}
        {Lisp-Entry "write-allowed?" () 420 18 ("out-write-allowed?" "in-write-allowed?" "if" "get-file" "in-repository?" "and" "in?" "moniker" "find-repository" "Repository" "in-manifest?" "essay" "repository" "let*" "get-read-only?" "not" "or")}
        {Lisp-Entry "in-write-allowed?" () 430 11 ("no-action" "false" "read-only" "update-status" "read/write" "true" "checkout" "case" "ensure-read/write" "code" "let" "moniker")}
        {Lisp-Entry "out-write-allowed?" () 439 11 ("throw-cancel" "cancel" "no" "true" "update-status" "set-read/write" "yes" "case" "confirmation" "type:" "title:" "get-name" "format" "message-box" "code" "let" "moniker")}
        {Lisp-Entry "Safe-Zipped" () 459 14 ()}
        {Lisp-Entry "safe-zipped?" () 463 18 ("safe-zipped-confirmed?" "Safe-Zipped" "" "get-size" "quotient" "size" "get-file" "file" "let*" "Zipped" "moniker" "is-not?" "or")}
        {Lisp-Entry "safe-zipped-confirmed?" () 471 11 ("throw-cancel" "cancel" "false" "no" "true" "yes" "case" "confirmation" "type:" "title:" "get-name" "format" "message-box" "code" "let" "size" "file")}
        {Lisp-Entry "get-tool?" () 490 18 ("tool?")}
        {Lisp-Entry "set-tool?" () 494 18 ("document" "tool-update" "set!" "tool?" "/=" "when" "flag")}
        {Lisp-Entry "get-console?" () 500 18 ("console?")}
        {Lisp-Entry "set-console?" () 504 18 ("document" "console-update" "set!" "console?" "/=" "when" "flag")}
        {Lisp-Entry "select-next" () 515 26 ("rest" "strings")}
        {Lisp-Entry "select-previous" () 519 26 ("rest" "strings")}
        {Lisp-Entry "select-expr" () 523 26 ("targets")}
        {Lisp-Entry "select-expr-backward" () 527 26 ("targets")}
        {Lisp-Entry "add-to-repository" () 536 18 ("moniker" "Repository" "find-repository" "add-file-to-repository" "add-to-repository" "unimplemented")}
        {Lisp-Entry "get-latest" () 542 18 ("moniker" "Repository" "find-repository" "get-latest" "unimplemented")}
        {Lisp-Entry "detach" () 548 18 ("moniker" "Repository" "find-repository" "detach-file" "detach" "unimplemented")}
        {Lisp-Entry "checkout" () 554 18 ("moniker" "Repository" "find-repository" "checkout-file" "checkout" "unimplemented")}
        {Lisp-Entry "checkin" () 560 18 ("moniker" "Repository" "find-repository" "checkin-file" "save" "checkin" "unimplemented")}
        {Lisp-Entry "reintegrate" () 567 18 ("moniker" "Repository" "find-repository" "reintegrate-file" "save" "reintegrate" "unimplemented")}
        {Lisp-Entry "undo-checkout" () 574 18 ("moniker" "Repository" "find-repository" "undo-checkout-file" "undo-checkout" "unimplemented")}
        {Lisp-Entry "show-history" () 580 18 ("moniker" "Repository" "find-repository" "show-history" "unimplemented")}
        {Lisp-Entry "show-changes" () 586 18 ("moniker" "Repository" "find-repository" "show-changes" "unimplemented")}
        {Lisp-Entry "repository-register?" () 597 11 ("document" "frame-guest?")}
        {Lisp-Entry "repository-event" () 603 11 (":cancel-edition?" "verify-reload" "true" ":refresh-repository-status?" "update-status" "moniker" "pathname=" "when" ":item-status" "checkin-save" ":checkin" "case" "mnk" "repository" "what")}
        {Lisp-Entry "checkin-save" () 613 11 ("save" "get-modified?" "when")}}}})
"Document-Moniker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "document" "Document-Moniker.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.document.Document-Moniker" () 37 9 ("jazz")
      {Lisp-Entry "Document-Moniker" () 46 7 ("Moniker")
        {Lisp-Entry "pathname" () 49 8 ()}
        {Lisp-Entry "construct-literal" () 53 16 ("self" "new" "pathname" "context")}
        {Lisp-Entry "print" () 57 11 ("pathname" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-protocol" () 69 16 ("doc")}
        {Lisp-Entry "new-moniker" () 74 16 ("File" "self" "new" "list")}
        {Lisp-Entry "present" () 78 11 ("pathname" "get-list" "format")}
        {Lisp-Entry "initialize" () 87 11 ("pathname" "set!" "nextmethod" "path")}
        {Lisp-Entry "get-name" () 97 18 ("pathname" "get-name")}
        {Lisp-Entry "get-document" () 101 18 ("get-guest" "error" "null?" "if" "pathname" "find-document" "frame" "get-application" "appl" "let*")}
        {Lisp-Entry "load-lines" () 109 11 ("get-document" "get-content")}
        {Lisp-Entry "load-form" () 113 11 ("get-document" "get-designer" "get-form")}}}})
"Document-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "document" "Document-Preferences.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.document.Document-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Document-Preferences" () 47 7 ("Bitmap-Resource" "icon:" "title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 59 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 63 11 ("false")}
        {Lisp-Entry "can-move-component?" () 67 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 71 11 ("false")}}}})
"Documentation-Slide"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "documentation" "Documentation-Slide.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.documentation.Documentation-Slide" () 37 9 ("jazz")
      {Lisp-Entry "Documentation-Slide" () 45 7 ("Slide")}}})
"Documentation-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "documentation" "Documentation-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.documentation.Documentation-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Documentation-Text-View" () 48 7 ("Plain" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "4" "left-padding:" "Formatted-Text-View")
        {Lisp-Entry "install" () 55 11 ("Variable" "monospace?:" "Code" "Dark-Blue" "Hyperlink" "Reference" "Purple" "Comment" "Dark-Red" "Color" "color:" "Title" "italic?:" "point-size:" "font-name:" "Font" "font:" "Text-Style" "add-style" "Heading3" "Heading2" "Heading1" "Default" "base:" "Heading0" "name:" "Format" "add-format" "nextmethod" "rest")}
        {Lisp-Entry "get-context-menu" () 75 11 ("new-text-context-menu")}}}})
"Documentation-Title"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "documentation" "Documentation-Title.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.documentation.Documentation-Title" () 37 9 ("jazz")
      {Lisp-Entry "Documentation-Title" () 46 7 ("Label-View")}}})
"Documents-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "document" "Documents-Preferences.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.document.Documents-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Documents-Preferences" () 49 7 ("title:" "Preferences")
        {Lisp-Entry "default-width" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "default-background" () 53 12 ("generate" "accessors" "White" "name:" "Color")}
        {Lisp-Entry "can-rename-component?" () 65 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 69 11 ("false")}
        {Lisp-Entry "can-move-component?" () 73 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 77 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 81 11 ("default-background" "default-width")}
        {Lisp-Entry "get-row-instance" () 85 11 ("nextmethod" "else" "Color-Row" "new" "default-background" "field-name" "case" "property")}}}})
"Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Domain" () 37 9 ("jazz")
      {Lisp-Entry "Domain" () 44 7 ("Node")}
      {Lisp-Entry "Domain" () 50 7 ("false" "initialize" "nullable?" "Node")
        {Lisp-Entry "validate" () 62 26 ("validate-value" "field-name" "property:" "class-of" "property-presentation" "localize" "format" "message:" "Integrity-Violation" "new" "add-violation" "nullable?" "not" "when" "null?" "if" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "validate-value" () 69 26 ("manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 78 26 ("present" "unimplemented" "value")}
        {Lisp-Entry "setup-entry" () 87 26 ("client" "view")}
        {Lisp-Entry "setup-list-entry" () 91 26 ("client" "view")}
        {Lisp-Entry "get-property-value" () 100 26 ("get-entry" "get-value" "view")}
        {Lisp-Entry "set-property-value" () 104 26 ("get-entry" "set-value" "value" "view")}
        {Lisp-Entry "get-property-modified?" () 108 26 ("get-modified?" "and" "get-entry" "entry" "let" "view")}
        {Lisp-Entry "set-property-modified?" () 114 26 ("get-entry" "set-modified?" "value" "view")}}}})
"Domain-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "choosers" "Domain-Chooser.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.choosers.Domain-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Domain-Chooser" () 48 7 ("on-cancel" "cancel" "default?:" "on-ok" ":host" "action-handler:" "ok" "width:" "display-images?:" "toplevel-controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" "form:" "Event-Handler" "return-press-handler:" ":icons" "portfolio:" "2" "top-padding:" "detail" "filled-column:" "names-tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "names-border" "Default-GUI" "name:" "Font" "font:" "9" "Point" "position:" "title:" "Dimension" "size:" "View")
        {Lisp-Entry "names" () 51 12 ("set-names" "get-names")}
        {Lisp-Entry "selected" () 52 12 ("set-selected" "get-selected")}
        {Lisp-Entry "finish" () 67 11 ("acquire-focus" "setup-names" "get-tree" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-names" () 79 18 ("names")}
        {Lisp-Entry "set-names" () 83 18 ("names" "set!" "value")}
        {Lisp-Entry "get-selected" () 87 18 ("selected")}
        {Lisp-Entry "set-selected" () 91 18 ("selected" "set!" "value")}
        {Lisp-Entry "get-tree" () 95 11 ("names-tree" "locate")}
        {Lisp-Entry "get-text" () 99 11 ("text" "column-size" "locate")}
        {Lisp-Entry "dialog-class" () 109 16 ("Domain-Chooser-Dialog")}
        {Lisp-Entry "Domain-Chooser-Dialog" () 114 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "on-return-press" () 127 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 133 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "setup-names" () 143 11 ("names" "list" "children:" "add-row" "user-data:" "color:" "checked?:" "title:" "parent:" "font:" "Check-Box" "checkbox" "selected" "member?" "checked?" "cadr" "localize" "title" "car" "string?" "name" "Ansi-Var" "Ansi-Bold" "Font" "filled" "size" "eq?" "if" "font" "Black" "name:" "Color" "color" "4" "Rect" ":layout-insets" "fill" ":layout-type" "Layout-View" "new" "layout" "0" "border" "let*" "info" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "tree")}
        {Lisp-Entry "get-modal-result" () 165 11 ("get-output" "put" "name" "get-checked?" "Check-Box" "is?" "and" "when" "get-user-data" "checkbox" "rank" "row" "dynamic" "function" "for-each-row" "List-Factory" "new" "fact" "get-tree" "tree" "let")}}}})
"Domain-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Domain-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Domain-Row" () 37 9 ("jazz")
      {Lisp-Entry "Domain-Row" () 46 7 ("Value-Row")
        {Lisp-Entry "domain" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "present" () 57 11 ("value")}
        {Lisp-Entry "new-editor" () 66 11 ("self" "value-row:" "Domain-Editor" "new" "editor" "let")}
        {Lisp-Entry "editor-class" () 71 11 ("Color-Row-Editor")}
        {Lisp-Entry "get-edited-value" () 75 11 ("Color" "parse-string" "body" "editor" "locate" "get-string-content" "content" "let")}
        {Lisp-Entry "set-edited-value" () 80 11 ("color" "set-background" "present" "body" "editor" "locate" "set-string-content" "value")}
        {Lisp-Entry "get-edited-modified?" () 85 11 ("body" "editor" "locate" "get-controller" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" () 89 11 ("body" "editor" "locate" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" () 93 11 ("body" "editor" "locate" "show-text-cursor")}
        {Lisp-Entry "focused-editor" () 97 11 ("body" "editor" "locate")}}
      {Lisp-Entry "Domain-Editor" () 106 7 ("Layout-View")
        {Lisp-Entry "value-row" () 109 12 ("set-value-row" "get-value-row")}
        {Lisp-Entry "get-value-row" () 112 18 ("value-row")}
        {Lisp-Entry "set-value-row" () 116 18 ("body" "locate" "set-value-row" "value-row" "set!" "value")}}}})
"Drag-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dnd" "Drag-Source.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.dnd.Drag-Source" () 37 9 ("jazz")
      {Lisp-Entry "Drag-Source" () 45 7 ("Object")
        {Lisp-Entry "view" () 48 15 ()}
        {Lisp-Entry "position" () 49 15 ()}
        {Lisp-Entry "image" () 50 15 ()}
        {Lisp-Entry "initialize" () 53 11 ("image~self" "position~self" "view~self" "set!" "nextmethod" "image" "image:" "position" "position:" "view" "view:")}
        {Lisp-Entry "print" () 60 11 ("image" "position" "view" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-view" () 71 18 ("view")}
        {Lisp-Entry "get-position" () 75 18 ("position")}
        {Lisp-Entry "get-image" () 79 18 ("image")}}}})
"Draw-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Draw-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.event.Draw-Event" () 37 9 ("jazz")
      {Lisp-Entry "Draw-Event" () 44 7 ("Event")
        {Lisp-Entry "dc" () 47 15 ()}
        {Lisp-Entry "update" () 48 15 ()}
        {Lisp-Entry "lh" () 49 15 ()}
        {Lisp-Entry "lv" () 50 15 ()}
        {Lisp-Entry "info" () 51 15 ()}
        {Lisp-Entry "initialize" () 54 11 ("info~self" "lv~self" "lh~self" "update~self" "dc~self" "set!" "nextmethod" "info" "lv" "lh" "update" "dc" "sender" "kind")}
        {Lisp-Entry "get-dc" () 63 18 ("dc")}}}})
"Drawing"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Drawing.fusion"} {Time 128369459980000000L}
    {Lisp-Entry "jazz.ui.view.Drawing" () 38 9 ("jazz")
      {Lisp-Entry "offscreen" () 52 12 ()}
      {Lisp-Entry "get-offscreen" () 56 13 ("new-offscreen" "set!" "close" "when" "new-context" "begin" "get-height" "get-width" "" "get-size" "size" "let" "offscreen" "and" "if" "height" "width" "dc")}
      {Lisp-Entry "new-offscreen" () 70 13 ("Dimension" "size:" "Cairo-Memory-Surface" "new" "height" "width" "dc")}
      {Lisp-Entry "Drawing-Class" () 74 7 ("Figure-Class")
        {Lisp-Entry "effect-offscreen" () 82 14 ()}
        {Lisp-Entry "get-effect-offscreen" () 86 18 ("new-offscreen" "set!" "close" "when" "get-height" "get-width" "" "get-size" "size" "let" "effect-offscreen" "and" "if" "height" "width" "dc")}
        {Lisp-Entry "property-presentation" () 102 11 ("nextmethod" "else" "effect" "offscreen?" "field-name" "case" "property")}}
      {Lisp-Entry "Drawing" () 109 7 ("Figure" "Drawing-Class")
        {Lisp-Entry "get-player" () 117 26 ("get-player" "parent" "essay")}
        {Lisp-Entry "get-lie" () 126 18 ("round" "Point" "new" "get-lie-parent" "sc" "v" "h" "receive")}
        {Lisp-Entry "get-lie-parent" () 131 29 ("get-v" "position" "get-h" "+" "get-lie-parent" "values" "parent" "not" "if" "sc" "v" "h")}
        {Lisp-Entry "set-lie" () 137 18 ("set-position" "position" "+" "pos" "-" "delta" "get-lie" "actual" "with" "lie")}
        {Lisp-Entry "get-root" () 149 18 ("parent" "essay" "Root-View" "self" "is?" "get-root" "if" "get-player" "player" "let")}
        {Lisp-Entry "acquire" () 163 18 ("acquire-delta" "get-delta" "sc" "dv" "dh" "receive" "shape" "origin")}
        {Lisp-Entry "acquire-delta" () 168 18 ("error" "else" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "left" "Rect" "*" "+" "round" "new" "get-v" "v" "get-h" "h" "let" "Point" "typecase" "shape" "sc" "dv" "dh")}
        {Lisp-Entry "get-delta" () 188 29 ("-" "/" "values" "sc" "dv" "dh" "get-lie-parent" "origin-sc" "origin-v" "origin-h" "receive" "origin")}
        {Lisp-Entry "get-size" () 199 11 ("size")}
        {Lisp-Entry "set-size" () 203 11 ("call-layout" "get-finished?" "invalidate-layout" "set!" "size" "/=" "when" "sz")}
        {Lisp-Entry "get-width" () 211 18 ("size" "get-width")}
        {Lisp-Entry "set-width" () 215 18 ("get-height" "Dimension" "new" "set-size" "width")}
        {Lisp-Entry "get-height" () 219 18 ("size" "get-height")}
        {Lisp-Entry "set-height" () 223 18 ("get-width" "Dimension" "new" "set-size" "height")}
        {Lisp-Entry "get-left" () 227 18 ("position" "get-h")}
        {Lisp-Entry "get-top" () 231 18 ("position" "get-v")}
        {Lisp-Entry "get-right" () 235 18 ("size" "get-width" "position" "get-h" "+")}
        {Lisp-Entry "get-bottom" () 239 18 ("size" "get-height" "position" "get-v" "+")}
        {Lisp-Entry "get-bounds" () 243 18 ("get-size" "size-rect")}
        {Lisp-Entry "set-bounds" () 247 18 ("rect-size" "set-size" "rect-position" "set-position" "bounds")}
        {Lisp-Entry "get-rect" () 252 18 ("get-size" "get-position" "position/size->rect")}
        {Lisp-Entry "set-rect" () 256 18 ("rect-size" "set-size" "rect-position" "set-position" "rect")}
        {Lisp-Entry "get-layout-valid?" () 266 11 ("Layout-Valid-Flag" "flags" "mask-bit-set?")}
        {Lisp-Entry "set-layout-valid?" () 270 11 ("Layout-Valid-Flag" "mask-bit-set" "flags" "set!" "flag")}
        {Lisp-Entry "get-scaled?" () 279 26 ("false")}
        {Lisp-Entry "set-scaled?" () 283 26 ("value")}
        {Lisp-Entry "get-scaling" () 287 26 ()}
        {Lisp-Entry "set-scaling" () 291 26 ("value")}
        {Lisp-Entry "logical->device" () 295 18 ("error" "else" "case" "Number" "get-bottom" "get-right" "get-top" "get-left" "Rect" "get-height" "get-width" "Dimension" "get-v" "get-h" "new" "Point" "typecase" "lv" "vert" "-" "*" "+" "round" "lh" "dynamic" "function" "horz" "sc" "sv" "sh" "receive" "not" "if" "scaling-info" "either" "let" "info" "info:" "orientation" "orientation:" "shape")}
        {Lisp-Entry "device->logical" () 313 18 ("error" "else" "case" "Number" "get-bottom" "get-right" "get-top" "get-left" "Rect" "get-height" "get-width" "Dimension" "get-v" "get-h" "new" "Point" "typecase" "dv" "vert" "-" "quotient" "+" "dh" "dynamic" "function" "horz" "sc" "sv" "sh" "receive" "not" "if" "scaling-info" "either" "let" "info" "info:" "orientation" "orientation:" "shape")}
        {Lisp-Entry "scaling-info" () 333 11 ("get-parent" "set!" "get-v" "get-h" "decrease!" "get-position" "pos" "values" "if" "get-scaling" "sc" "get-scaled?" "sc?" "while" "return" "lambda" "call/ec" "sv" "0" "sh" "self" "drawing" "let")}
        {Lisp-Entry "fully-visible?" () 356 18 ("fully-visible?" "parent" "not" "or" "get-visible?" "and")}
        {Lisp-Entry "get-transparent?" () 365 26 ("false")}
        {Lisp-Entry "invalidate-layout" () 374 21 ("false" "set-layout-valid?")}
        {Lisp-Entry "call-layout" () 378 21 ("true" "set-layout-valid?" "layout" "get-layout-valid?" "unless")}
        {Lisp-Entry "layout-drawing" () 384 18 ("call-layout" "invalidate-layout" "get-finished?" "when")}
        {Lisp-Entry "layout" () 392 26 ()}
        {Lisp-Entry "for-each-drawing" () 401 18 ("get-visible?" "or" "View" "is?" "and" "when" "children" "in" "child" "for" "loop" "false" "include-invisibles?" "include-invisibles?:" "proc")}
        {Lisp-Entry "for-each-drawing-reversed" () 408 18 ("children" "for-each-reversed" "get-visible?" "or" "View" "is?" "and" "when" "child" "dynamic" "function" "with" "false" "include-invisibles?" "include-invisibles?:" "proc")}
        {Lisp-Entry "find-drawing" () 422 18 ("self" "get-transparent?" "unless" "find-subdrawing" "either" "size" "in-drawing?" "when" "pos")}
        {Lisp-Entry "in-drawing?" () 429 29 ("in-size?" "size" "pos")}
        {Lisp-Entry "find-subdrawing" () 433 29 ("for-each-drawing-reversed" "when" "get-v" "get-h" "/" "round" "Point" "new" "scaled" "get-scaling" "scaling" "let" "find-drawing" "not" "if" "found" "get-scaled?" "scaled?" "let*" "get-position" "-" "delta" "view" "dynamic" "function" "proc" "with" "return" "lambda" "call/ec" "pos")}
        {Lisp-Entry "invalidate-drawing" () 458 18 ("parent" "invalidate-rect" "get-rect" "rect" "with")}
        {Lisp-Entry "paint" () 473 18 ("else" "rects-intersect?" "Point" "new" "lie" "Rect" "is?" "not" "cond" "paint-displayed" "rect-size" "get-top" "scaled" "get-left" "rect-intersects-region?" "true" "size" "h/v/size->rect" "rect" "with" "get-scaled?" "or" "if" "get-visible?" "when" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "paint-displayed" () 487 18 ("set-effect" "animate" "lie" "size:" "bit-blit" "get-effect" "effect" "self" "draw-overlay" "when" "get-overlay" "overlay" "MM_TEXT" "SetMapMode" "SetViewportOrgEx" "NULL" "offhdc" "SetWindowOrgEx" "begin" "Cairo?" "setup-clipper" "get-bounds" "clipper" "0" "Point" "new" "origin" "with" "get-height" "size" "get-width" "get-offscreen" "offscreen" "let" "paint-drawing" "get-offscreen?" "not" "if" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "paint-drawing" () 515 18 ("render" "dynamic" "function" "get-height" "size" "get-width" "self" "with-transform" "true" "new-sc?" "new-sc" "new-sv" "not" "if" "new-sh" "get-scaling" "scaling" "get-scaled?" "scaled?" "let*" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "render" () 527 26 ("draw-children" "draw-content" "draw-background" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-background" () 534 26 ("context" "dc")}
        {Lisp-Entry "draw-content" () 538 26 ("draw" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw" () 542 26 ("lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "*colors*" () 546 14 ("Dark-Purple" "Dark-Blue" "Dark-Green" "Dark-Yellow" "Dark-Orange" "Dark-Red" "name:" "Color")}
        {Lisp-Entry "*nb-colors*" () 554 14 ("*colors*" "length")}
        {Lisp-Entry "*current-color*" () 557 14 ("0")}
        {Lisp-Entry "draw-placeholder" () 561 11 ("*nb-colors*" "1" "+" "modulo" "set!" "*current-color*" "*colors*" "element" "get-bounds" "fill-rect" "paint" "White" "name:" "Color" "set-color" "dc")}
        {Lisp-Entry "draw-children" () 568 26 ("for-each-drawing" "get-v" "get-h" "+" "paint" "get-position" "pos" "let" "drawing" "dynamic" "function" "proc" "with" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "get-update-rect" () 576 21 ("rect-intersection" "bounds" "logical" "get-box" "box" "with" "else" "device->logical" "Rect" "is?" "get-bounds" "not" "cond" "lv" "lh" "update" "dc")}
        {Lisp-Entry "get-view-clipper" () 591 18 ("0" "get-translated-clipper")}
        {Lisp-Entry "get-translated-clipper" () 595 29 ("rect-intersection" "get-v" "position" "get-h" "-" "get-translated-clipper" "p" "copy" "parent" "not" "if" "round" "offset-rect" "r" "get-bounds" "b" "with" "v" "h")}
        {Lisp-Entry "get-offscreen?" () 604 26 ("false")}
        {Lisp-Entry "set-offscreen?" () 608 26 ("flag")}
        {Lisp-Entry "get-overlay" () 617 26 ()}
        {Lisp-Entry "set-overlay" () 621 26 ("value")}
        {Lisp-Entry "get-effect" () 625 26 ()}
        {Lisp-Entry "set-effect" () 629 26 ("value")}}}})
"Drop-Criteria"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dnd" "Drop-Criteria.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.dnd.Drop-Criteria" () 37 9 ("jazz")
      {Lisp-Entry "Drop-Criteria" () 45 7 ("Criteria")
        {Lisp-Entry "source" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "target" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "properties" () 52 14 ("target:" ":source" "name:")}
        {Lisp-Entry "accepts?" () 61 11 ("target" "accepts?" "source" "null?" "or" "and" "trg" "src" "bind" "source/target")}}}})
"Drop-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dnd" "Drop-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.dnd.Drop-Event" () 37 9 ("jazz")
      {Lisp-Entry "Drop-Event" () 45 7 ("Mouse-Event")
        {Lisp-Entry "drag-drop" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("drag-drop~self" "set!" "nextmethod" "drag-drop" "pos" "sender" "kind")}
        {Lisp-Entry "print" () 56 11 ("dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-drag-drop" () 67 18 ("drag-drop")}}}})
"Drop-Target"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dnd" "Drop-Target.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.dnd.Drop-Target" () 37 9 ("jazz")
      {Lisp-Entry "Drop-Target" () 45 7 ("Object")
        {Lisp-Entry "view" () 48 15 ()}
        {Lisp-Entry "position" () 49 15 ()}
        {Lisp-Entry "criteria" () 50 15 ()}
        {Lisp-Entry "handler" () 51 15 ()}
        {Lisp-Entry "initialize" () 54 11 ("handler~self" "criteria~self" "position~self" "view~self" "set!" "nextmethod" "handler" "handler:" "criteria" "criteria:" "position" "position:" "view" "view:")}
        {Lisp-Entry "print" () 62 11 ("view" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-view" () 73 18 ("view")}
        {Lisp-Entry "get-position" () 77 18 ("position")}
        {Lisp-Entry "get-criteria" () 81 18 ("criteria")}
        {Lisp-Entry "get-handler" () 85 18 ("handler")}}}})
"Duration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "time" "Duration.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.time.Duration" () 37 9 ("jazz")
      {Lisp-Entry "Duration" () 44 7 ("Object")
        {Lisp-Entry "years" () 47 8 ()}
        {Lisp-Entry "months" () 48 8 ()}
        {Lisp-Entry "weeks" () 49 8 ()}
        {Lisp-Entry "days" () 50 8 ()}
        {Lisp-Entry "hours" () 51 8 ()}
        {Lisp-Entry "minutes" () 52 8 ()}
        {Lisp-Entry "seconds" () 53 8 ()}
        {Lisp-Entry "Accepted-Units" () 61 19 ("seconds" "second" "minutes" "minute" "hours" "hour" "days" "day" "weeks" "week" "months" "month" "years" "year")}
        {Lisp-Entry "parse-string" () 78 23 (":seconds" ":minutes" ":hours" ":days" ":weeks" ":months" ":years" "self" "new" "set!" "case" "positive?" "number?" "Accepted-Units" "second" "assq" "cdr" "units" "first" "amount" "2" "length" "=" "pair?" "and" "if" "part" "for-each" "dynamic" "function" "error" "read-delimited-string" "parts" "seconds" "minutes" "hours" "days" "weeks" "months" "years" "let" "string")}
        {Lisp-Entry "construct-literal" () 119 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" () 123 11 ("seconds~self" "minutes~self" "hours~self" "days~self" "weeks~self" "months~self" "years~self" "set!" "nextmethod" "seconds" "seconds:" "minutes" "minutes:" "hours" "hours:" "days" "days:" "weeks" "weeks:" "months" "months:" "years" "years:")}
        {Lisp-Entry "compare-object" () 134 11 (":not-equal" "else" ":equal" "get-seconds" "seconds" "get-minutes" "minutes" "get-hours" "hours" "get-days" "days" "get-weeks" "weeks" "get-months" "months" "get-years" "years" "=" "and" ":incompatible" "Duration" "is-not?" "cond" "target")}
        {Lisp-Entry "foldable?" () 149 11 ("true")}
        {Lisp-Entry "fold-object" () 153 11 ("seconds" ":seconds" "minutes" ":minutes" "hours" ":hours" "days" ":days" "weeks" ":weeks" "months" ":months" "years" ":years" "fold-key-pair" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 166 11 ("seconds" ":seconds" "minutes" ":minutes" "hours" ":hours" "days" ":days" "weeks" ":weeks" "months" ":months" "years" ":years" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-amount" () 184 18 ("seconds" "minutes" "hours" "days" "weeks" "months" "years" "case" "units")}
        {Lisp-Entry "get-amounts" () 195 18 ("seconds" "minutes" "hours" "days" "weeks" "months" "years" "values")}
        {Lisp-Entry "get-units" () 199 18 ("seconds" "minutes" "hours" "days" "weeks" "months" "years")}
        {Lisp-Entry "get-sign" () 214 18 ("get-units" "sign" "0" "/=" "and" "when" "get-amount" "amount" "let" "units" "dynamic" "function" "for-each" "return" "lambda" "call/ec")}
        {Lisp-Entry "Units" () 230 14 ("second" "seconds" "minute" "minutes" "hour" "hours" "day" "days" "week" "weeks" "month" "months" "year" "years")}
        {Lisp-Entry "present" () 240 18 ("seconds" "minutes" "hours" "days" "weeks" "months" "years" "present-amount" "list" "remove-nils" "join")}
        {Lisp-Entry "present-amount" () 253 11 ("format-plural" "Units" "assq" "cdr" "format" "0" "/=" "and" "when" "get-amount" "amount" "let" "units")}}}})
"DxVBLib"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "directx" "DxVBLib.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "DxVBLib" () 37 9 ("jazz")}})
"Edit-Base-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Edit-Base-Menu.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.Edit-Base-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Edit-Base-Menu" () 46 7 ("select-all" "delete" "end-paste" "paste" "copy" "cut" "redo" "view" "Action" "action:" "disabled-icon:" "Bitmap-Resource" "icon:" "undo" "name:" "title:" "Menu")}}})
"Edit-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Edit-Menu.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.Edit-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Edit-Menu" () 46 7 ("forward-history" "disabled-icon:" "backward-history" "Bitmap-Resource" "icon:" "add-history" "view" "paste-properties" "paste-from-stack" "application" "Action" "action:" "end-paste" "before:" "title:" "pop-clipboard-stack" "name:" "Edit-Base-Menu")}}})
"Edition-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Edition-Event.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.event.Edition-Event" () 37 9 ("jazz")
      {Lisp-Entry "Edition-Event" () 44 7 ("Event")}}})
"Editor-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "event" "Editor-Event.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.event.Editor-Event" () 37 9 ("jazz")
      {Lisp-Entry "Editor-Event" () 45 7 ("Event")}}})
"Editor-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Editor-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Editor-Row" () 37 9 ("jazz")
      {Lisp-Entry "Editor-Row" () 46 7 ("Tree-Row")
        {Lisp-Entry "editor" () 49 8 ()}
        {Lisp-Entry "get-editor" () 57 18 ("editor")}
        {Lisp-Entry "set-editor" () 61 18 ("editor" "set!" "edt")}
        {Lisp-Entry "auto-inplace?" () 70 11 ("true")}
        {Lisp-Entry "layout" () 79 11 ("get-height" "get-width" "-" "Dimension" "set-size" "0" "Point" "new" "set-position" "1" "get-indentation" "level" "*" "+" "width" "get-size" "size" "get-tree" "tree" "let*" "editor" "when")}
        {Lisp-Entry "draw" () 93 11 ("get-height" "get-width" "self" "draw-level" "get-node-column" "column" "get-tree" "tree" "let*" "lv" "lh" "update" "context" "dc")}}}})
"Editor-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Editor-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Editor-View" () 37 9 ("jazz")
      {Lisp-Entry "Editor-View" () 49 7 ("Document" "Layout-View")
        {Lisp-Entry "client" () 52 12 ("set-client" "get-client")}
        {Lisp-Entry "designer" () 55 8 ()}
        {Lisp-Entry "listeners" () 56 8 ()}
        {Lisp-Entry "undoer" () 57 8 ()}
        {Lisp-Entry "selection" () 58 8 ()}
        {Lisp-Entry "controller" () 59 8 ()}
        {Lisp-Entry "rights" () 60 8 ()}
        {Lisp-Entry "default-extension" () 63 11 ()}
        {Lisp-Entry "extensions" () 64 11 ()}
        {Lisp-Entry "focus-document" () 65 11 ()}
        {Lisp-Entry "current-history-item" () 66 11 ()}
        {Lisp-Entry "get-editor-view" () 69 11 ("self")}
        {Lisp-Entry "frame-icon" () 79 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 84 16 ()}
        {Lisp-Entry "install-in-host" () 93 11 ("get-controller" "update-status" "nextmethod" "host")}
        {Lisp-Entry "install-scroller" () 98 11 ()}
        {Lisp-Entry "position-host" () 102 11 ("host")}
        {Lisp-Entry "get-controller" () 111 11 ("new-controller" "set!" "controller" "unless")}
        {Lisp-Entry "new-controller" () 117 11 ("self" "Editor-View-Controller" "new")}
        {Lisp-Entry "save" () 121 11 ("get-controller" "save")}
        {Lisp-Entry "save-as" () 125 11 ("get-controller" "save-as")}
        {Lisp-Entry "save-all" () 129 26 ("get-controller" "save-all")}
        {Lisp-Entry "install-scroller?" () 133 11 ("false")}
        {Lisp-Entry "get-moniker" () 137 11 ("get-controller" "get-moniker")}
        {Lisp-Entry "set-moniker" () 141 11 ("get-controller" "set-moniker" "moniker")}
        {Lisp-Entry "load-content" () 145 11 ("set-client" "instantiate" "cpnt" "read-from-file" "form" "let*" "moniker")}
        {Lisp-Entry "verify-reload" () 151 11 ()}
        {Lisp-Entry "reload-moniker" () 155 11 ("moniker")}
        {Lisp-Entry "get-modified?" () 159 11 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" () 163 11 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "set-controller-modified?" () 167 29 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "update-status" () 171 11 ("get-controller" "update-status")}
        {Lisp-Entry "update-moniker-time" () 175 11 ("get-controller" "update-moniker-time" "moniker")}
        {Lisp-Entry "confirm-close" () 179 11 ("get-controller" "confirm-close" "rest")}
        {Lisp-Entry "compare-moniker" () 183 11 ("bring-to-front" "true" "set-visible?" "get-guest" "compare-trees" "dynamic" "function" ":wait" "with-cursor" "right-moniker:" "left-moniker:" "false" "host-visible?:" "Compare-Databases" "new-frame" "frame" "right" "Document-Moniker" "new" "left" "let*" "moniker")}
        {Lisp-Entry "tool-update" () 194 11 ("tool?")}
        {Lisp-Entry "console-update" () 198 11 ("console?")}
        {Lisp-Entry "install" () 207 11 ("on-editor" "method-name:" "self" "target:" "Event-Handler" "new" "add-editor-listener" "nextmethod" "rest")}
        {Lisp-Entry "destroy" () 217 11 ("nextmethod" "close-application-selected" "self" "remove-editor-listener" "controller" "close")}
        {Lisp-Entry "new-form" () 229 11 ()}
        {Lisp-Entry "open-form" () 233 11 ("open-form" "instantiate" "set-client")}
        {Lisp-Entry "save-form" () 238 11 ("edit-document" "file?" "get-origin" "origin" "designer" "get-form" "form" "let*" "Jedi" "typed?" "when" "get-application" "appl" "let" "save" "dynamic" "function" ":wait" "with-cursor")}
        {Lisp-Entry "edit-form" () 250 11 ("view-component")}
        {Lisp-Entry "select-branch" () 259 18 ("process-branch-changing" "dynamic" "function" ":wait" "with-cursor" "client" "get-active-branch" "either" "neq?" "when" "branch")}
        {Lisp-Entry "change-branch" () 266 11 ("process-branch-changed" "get-client" "set-active-branch" "branch")}
        {Lisp-Entry "select-component" () 276 11 ("edit-component" "bell" "null?" "if" "selected-component" "component" "let" "descendants" "locate" "get-highlight-edited?" "and" "when" "control?" "tree")}
        {Lisp-Entry "property-change" () 289 21 ("list" "undoer" "register-undo" "find-changed-property" "Info-Row" "subtype?" "or" "unless" "symbolize-property" "get-row-class" "row-class" "let" "when" "undoable?" "value" "property" "component" "branch")}
        {Lisp-Entry "find-changed-property" () 297 21 ("eq?" "and" "prop" "cpn" "br" "bind" "action" "dynamic" "function" "find-if" "undoer" "get-undo-list" "undo-list" "symbolize-property" "let" "property" "component" "branch")}
        {Lisp-Entry "select-property" () 308 18 ("process-property-selected" "property")}
        {Lisp-Entry "show-properties" () 312 26 ("true" "focus?:" "workspace:" "Properties-Manager" "select-palette")}
        {Lisp-Entry "get-selection" () 321 18 ("selection")}
        {Lisp-Entry "set-selection" () 325 18 ("update-focus-actions" "set-application-selected" "process-selection-changed" "process-selection-changing" "selection" "old" "get-application" "appl" "let" "true" "focus?" "focus?:" "force?" "force?:" "false" "force-parent?" "force-parent?:" "origin" "origin:" "new")}
        {Lisp-Entry "set-application-selected" () 334 11 ("force?:" "self" "set-selected" "get-application" "appl" "let" "force?" "selected")}
        {Lisp-Entry "close-application-selected" () 339 11 ("self" "close-selected" "get-application" "appl" "let")}
        {Lisp-Entry "select-all" () 344 18 ("rest")}
        {Lisp-Entry "unselect-all" () 348 18 ("set-selection")}
        {Lisp-Entry "select" () 352 18 ("cons" "list" "append" "remove" "set-selection" "selection" "memq?" "shift-down?" "if" "true" "focus?" "focus?:" "component")}
        {Lisp-Entry "selection-changed" () 362 29 ("length" "0" "naturals" "select" "rank" "unselect" "get-surrogate" "surrogate" "let" "Component" "is?" "when" "component" "dynamic" "function" "for-each" "selection" "set!" "focus?" "force-parent?" "origin" "new" "old")}
        {Lisp-Entry "cleanup-selection" () 380 11 ("not" "component" "dynamic" "function" "collect-if" "set-selection" "selection" "object-destroyed?" "some?" "when")}
        {Lisp-Entry "save-content" () 392 11 ("process-saved" "false" "set-modified?" "update-status" "get-modified?" "not" "if" "update-moniker-time" "branch:" "get-base" "get-client" "set-name" "designer" "save-to" "process-saving" "moniker")}
        {Lisp-Entry "save-content-patch" () 404 18 ("false" "set-modified?" "update-status" "get-modified?" "not" "if" "update-moniker-time" "designer-save" "process-saving" "moniker")}
        {Lisp-Entry "designer-save" () 413 29 ("designer" "save")}
        {Lisp-Entry "view-component" () 422 11 ("edit-form" "bell" "designer" "null?" "if")}
        {Lisp-Entry "on-editor" () 433 29 ("selection-changed" "get-user-origin?" "focus?" "get-force-parent?" "force-parent?" "get-origin" "origin" "get-selection" "get-old" "old" ":selection-changed" "designer" "save-component-properties" "Component" "is?" "car" "cpn" "let" "selection" "not-null?" "when" ":saving" ":selection-changing" "cleanup-selection" ":branch-changed" "branch:" "get-property" "change-branch" ":branch-changing" "get-kind" "case" "evt")}
        {Lisp-Entry "get-client" () 458 18 ("client")}
        {Lisp-Entry "set-client" () 462 18 ("client-updated" "edit-component" "process-client-change" "client-update" "self" "Editor-Undoer" "new" "essay" "undoer" "set!" "remove-surrogate" "old" "let" "client" "/=" "when" "clt")}
        {Lisp-Entry "client-update" () 475 29 ("install-client-surrogate")}
        {Lisp-Entry "client-updated" () 479 29 ()}
        {Lisp-Entry "install-client-surrogate" () 483 29 ()}
        {Lisp-Entry "get-designer-class" () 492 29 ("Designer")}
        {Lisp-Entry "get-designer" () 496 18 ("designer")}
        {Lisp-Entry "get-reference" () 500 18 ("get-reference" "designer" "essay")}
        {Lisp-Entry "edit-component" () 504 18 ("update-status" "process-designer-change" "install-current-designer" "uninstall-current-designer" "designer" "old" "let" "get-reference" "/=" "when" "get-edited-form" "form" "form:" "component")}
        {Lisp-Entry "get-edited-form" () 514 11 ("class-of" "get-self-form" "get-form" "either" "when" "component")}
        {Lisp-Entry "install-current-designer" () 520 29 ("client" "install-designer" "on-designer" "method-name:" "self" "target:" "Event-Handler" "add-designer-listener" "reference:" "form:" "get-designer-class" "new" "designer" "set!" "form" "component")}
        {Lisp-Entry "uninstall-current-designer" () 526 29 ("set!" "uninstall-designer" "client" "self" "remove-designer-listener" "designer" "when")}
        {Lisp-Entry "on-designer" () 534 29 (":send-before" ":child-remove" ":child-add" "true" "set-controller-modified?" ":undoable?" "value:" "property:" "component:" "branch:" "get-property" "property-change" ":property-change" "case" "get-kind" "kind" "let" "evt")}
        {Lisp-Entry "add-editor-listener" () 549 18 ("add-listener" "listeners" "set!" "listener")}
        {Lisp-Entry "remove-editor-listener" () 553 18 ("remove-listener" "listeners" "set!" "listener")}
        {Lisp-Entry "process-client-change" () 557 11 ("invoke" "listener" "dynamic" "function" "for-each" "client:" ":old" "self" ":client-change" "Editor-Event" "new" "evt" "let" "listeners" "when" "client" "old")}
        {Lisp-Entry "process-designer-change" () 565 11 ("invoke" "listener" "dynamic" "function" "for-each" "designer:" ":old" "self" ":designer-change" "Editor-Event" "new" "evt" "let" "listeners" "when" "designer" "old")}
        {Lisp-Entry "process-branch-changing" () 573 18 ("invoke" "listener" "dynamic" "function" "for-each" "branch:" "self" ":branch-changing" "Editor-Event" "new" "evt" "let" "listeners" "when" "branch")}
        {Lisp-Entry "process-branch-changed" () 581 18 ("invoke" "listener" "dynamic" "function" "for-each" "branch:" "self" ":branch-changed" "Editor-Event" "new" "evt" "let" "listeners" "when" "branch")}
        {Lisp-Entry "process-selection-changing" () 589 18 ("invoke" "listener" "dynamic" "function" "for-each" "user-origin?:" "force?:" "force-parent?:" "origin:" "self" ":selection-changing" "Selection-Event" "new" "evt" "let" "listeners" "when" "user-origin?" "force?" "force-parent?" "origin" "selection" "old")}
        {Lisp-Entry "process-selection-changed" () 597 18 ("invoke" "listener" "dynamic" "function" "for-each" "user-origin?:" "force?:" "force-parent?:" "origin:" "self" ":selection-changed" "Selection-Event" "new" "evt" "let" "listeners" "when" "user-origin?" "force?" "force-parent?" "origin" "selection" "old")}
        {Lisp-Entry "process-property-selected" () 605 18 ("invoke" "listener" "dynamic" "function" "for-each" "property:" "self" ":property-selected" "Editor-Event" "new" "evt" "let" "listeners" "when" "property")}
        {Lisp-Entry "process-saving" () 613 18 ("invoke" "listener" "dynamic" "function" "for-each" "self" ":saving" "Editor-Event" "new" "evt" "let" "listeners" "when")}
        {Lisp-Entry "process-saved" () 621 18 ("invoke" "listener" "dynamic" "function" "for-each" "self" ":saved" "Editor-Event" "new" "evt" "let" "listeners" "when")}
        {Lisp-Entry "get-rights" () 634 18 ("rights")}
        {Lisp-Entry "set-rights" () 638 18 ("rights" "set!" "value")}
        {Lisp-Entry "editor-title" () 647 26 ("class-of" "type-name" "format" "null?" "if" "get-reference" "reference" "let")}}
      {Lisp-Entry "Editor-Undoer" () 659 7 ("Undoer")
        {Lisp-Entry "play-action" () 662 11 ("play-action" "unimplemented" "action")}}}})
"Editor-View-Controller"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Editor-View-Controller.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Editor-View-Controller" () 37 9 ("jazz")
      {Lisp-Entry "Editor-View-Controller" () 47 7 ("Document-Controller")
        {Lisp-Entry "save" () 51 11 ("document" "save-content-patch")}
        {Lisp-Entry "name-status" () 55 11 ("type-name" "get-name" "file?" "get-origin" "origin" "get-form" "form" "newname" "null?" "if" "document" "get-designer" "designer" "let")}
        {Lisp-Entry "update-moniker-time" () 70 11 ("moniker")}}}})
"Effect"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "effect" "Effect.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.effect.Effect" () 37 9 ("jazz")
      {Lisp-Entry "Effect" () 45 7 ("Object")
        {Lisp-Entry "animate" () 48 26 ("size" "pos" "dst" "src")}}}})
"Element"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "element" "Element.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.element.Element" () 37 9 ("jazz")
      {Lisp-Entry "Element" () 44 7 ("Node")
        {Lisp-Entry "parent" () 47 18 ()}
        {Lisp-Entry "children" () 48 18 ()}
        {Lisp-Entry "initialize" () 51 11 ("parent~self" "set!" "nextmethod" "apply" "others" "parent" "bind-keywords" "rest")}}}})
"Element-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Element-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Element-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Element-Doc" () 45 7 ("Doc")
        {Lisp-Entry "examples" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "package-name" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "install-child" () 52 11 ("nextmethod" "else" "set-examples" "examples" "get-model-name" "case" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "property-presentation" () 64 16 ("nextmethod" "else" "package-name" "examples" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 71 11 ("nextmethod" "else" "Doc-Text-List-Row" "new" "examples" "field-name" "case" "property")}}}})
"Entities-Controller"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "entity" "Entities-Controller.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.entity.Entities-Controller" () 37 9 ("jazz")
      {Lisp-Entry "Entities-Controller" () 57 7 ("Object")
        {Lisp-Entry "add-child" () 65 35 ("parent" "child")}
        {Lisp-Entry "remove-child" () 66 35 ("child")}
        {Lisp-Entry "set-name" () 67 35 ("name" "entity")}
        {Lisp-Entry "set-property" () 68 35 ("value" "property" "entity")}
        {Lisp-Entry "cut-entities" () 69 35 ("entities")}
        {Lisp-Entry "copy-entities" () 70 35 ("entities")}
        {Lisp-Entry "paste-parcels" () 71 35 ("parent" "parcels")}
        {Lisp-Entry "delete-entities" () 79 26 ("delete-entity" "entity" "dynamic" "function" "for-each" "entities")}
        {Lisp-Entry "delete-entity" () 85 26 ("remove-child" "entity")}}}})
"Entities-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "entity" "Entities-Tree.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.entity.Entities-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Entities-Tree" () 60 7 ("Tree-View")
        {Lisp-Entry "client" () 63 8 ()}
        {Lisp-Entry "controller" () 64 8 ()}
        {Lisp-Entry "focus-actions" () 72 11 ("nextmethod" "entities-tree" "find-actions" "cons")}
        {Lisp-Entry "on-delete-selection" () 82 11 ("delete-selection" "evt")}
        {Lisp-Entry "on-rename-selection" () 86 11 ("rename-selection" "evt")}
        {Lisp-Entry "context-menu" () 90 11 ("track-popup-menu" "when" "get-context-menu" "menu" "let" "dynamic" "function" "with-context-click" "pos")}
        {Lisp-Entry "get-context-menu" () 98 11 ("self" "client:" "Entity-Menu" "new")}
        {Lisp-Entry "on-properties" () 102 11 ("show-properties" "evt")}
        {Lisp-Entry "get-client" () 111 18 ("client")}
        {Lisp-Entry "set-client" () 115 18 ("client" "set!" "value")}
        {Lisp-Entry "get-controller" () 124 18 ("controller")}
        {Lisp-Entry "set-controller" () 128 18 ("controller" "set!" "value")}
        {Lisp-Entry "focus-update-actions" () 137 11 ("can-rename?" "rename" "entities-tree" "Action" "set-action-enabled?")}
        {Lisp-Entry "get-factories" () 146 26 ("get-factories" "root-factories" "null?" "if" "selected-entity" "entity" "let")}
        {Lisp-Entry "root-factories" () 153 26 ()}
        {Lisp-Entry "add-entity" () 157 26 ("select-entity" "append" "install-new-entity" "dynamic" "function" "with-update-locked" "set-name" "when" "get-controller" "controller" "presentation->name" "name" "new" "child" "let" "add-entity-request" "values" "if" "added-properties" "receive" "extra-properties" "client" "relocation-parent" "either" "selected-entity" "selected" "get-class" "class" "let*" "true" "select?" "select?:" "properties" "properties:" "presentation" "presentation:" "parent" "parent:" "factory")}
        {Lisp-Entry "add-entity-request" () 176 29 ("entity-properties-request" "entity-children" "entity-presentation-request" "values" "parent" "factory")}
        {Lisp-Entry "entity-presentation-request" () 181 29 (":validator" ":unicity-domain" "not" ":accepts-empty?" "french:" "format" "english:" "Locales" "new" "title:" "request-string" "presentation" "get-factory-presentation" "localize" "pres" "entity-name-validator" "name-validator" "get-presentation" "entity" "dynamic" "function" "map" "essay" "unicity-domain" "get-name-unicity?" "name-unicity?" "get-name-mandatory?" "name-mandatory?" "let*" "get-name-prohibited?" "if" "initial-value" "initial-value:" "brothers" "factory")}
        {Lisp-Entry "entity-properties-request" () 193 29 ("factory")}
        {Lisp-Entry "entity-name-validator" () 197 29 ()}
        {Lisp-Entry "install-new-entity" () 201 29 ("add-properties" "set-presentation" "add-child" "properties" "presentation" "parent" "child" "controller")}
        {Lisp-Entry "add-properties" () 207 29 ("controller" "set-property" "value" "property" "dynamic" "function" "for-each-property" "properties" "entity")}
        {Lisp-Entry "rename-selection" () 218 11 ("rename-entity" "when" "selected-entity" "entity" "let")}
        {Lisp-Entry "rename-entity" () 224 18 ("end-rename" "0" "Cell" "new" "cell" "row-rank" "rank" "get-presentation" "initial-value:" "entity-brothers" "get-factory" "entity-presentation-request" "presentation" "let*" "ensure-expanded" "when" "entity-row" "row" "let" "entity")}
        {Lisp-Entry "end-rename" () 234 11 ("select-entity" "acquire-focus" "reorder-entity" "sort-entitys?" "and" "when" "get-parent" "parent" "let" "controller" "set-name" "get-cell-data" "set-title" "dynamic" "function" "with-update-locked" "presentation" "cell" "entity")}
        {Lisp-Entry "move-entities" () 251 11 ("select-entities" "send-entity-before" "send-before" "for-each" "essay" "target-data" "element" "length" "" "1" "+" "after" "before" "case" "position" "son-rank" "rank" "get-sons" "sons" "get-father" "father" "move-entities" "bell" "not" "class-of" "relocation-parent" "entity" "key:" "uniform" "parent" "let" "row" "eq?" "if" "dynamic" "function" "with-update-locked" "get-user-data" "destination" "get-part" "part" "get-row" "dst" "get-view" "get-selected-data" "entities" "get-controller" "controller" "let*" "target" "source")}
        {Lisp-Entry "move-entity-row" () 276 11 ("find-entity-position" "not" "if" "dynamic" "function" "move-row" "sort-entities?" "sort?" "client" "either" "destination" "get-user-data" "source" "let*" "get-sons" "length" "1" "=" "get-father" "eq?" "and" "unless" "position" "position:" "father" "row")}
        {Lisp-Entry "reorder-entity" () 288 11 ("get-father" "move-entity-row" "find-row" "row" "let" "entity")}
        {Lisp-Entry "find-entity-position" () 293 29 ("get-presentation" "find-ordered-position" "father" "row" "entity")}
        {Lisp-Entry "find-entity-insertion" () 297 29 ("find-row" "son-rank" "when" "target" "entity" "parent-row")}
        {Lisp-Entry "send-entity-before" () 302 29 ("before" "entity")}
        {Lisp-Entry "get-draggable?" () 311 11 ("can-move-entity?" "and" "selected-entity" "entity" "let" "false")}
        {Lisp-Entry "get-row-reorder-target" () 324 11 (":part" ":row" "self" "view:" "Tree-Drop-Target" "new" "when" "else" "after" "=" "4" "3" "cond" "part" "can-send-before?" "cdr" "either" "/=" "addable-class?" "has-parent?" "every?" "neq?" "null?" "or" "not" "and" "move?" "visible-count" "" "before" "+" "2" "1" "memq?" "if" "essay" "before-rank" "get-sons" "last" "before-last" "eq?" "before?" "dst-parent" "row-rank" "dst-rank" "get-father" "dst-father" "dst" "get-parent" "parent-relocation" "entity" "key:" "uniform" "src-parent" "class-of" "remove-duplicates" "src-types" "get-row" "get-user-data" "n" "dynamic" "function" "map" "src" "contiguous-range" "src-range" "get-source" "get-view" "get-selection" "src-selection" "let*" "quarter" "row" "drag-drop")}
        {Lisp-Entry "get-row-target" () 349 11 ("get-view" "view" "get-source" "source" "let*" "row" "drag-drop")}
        {Lisp-Entry "receive-drop" () 356 11 ("move-entities" "self" "eq?" "when" "get-target" "target" "get-view" "view" "get-source" "source" "let*" "drag-drop" "pos" "sender")}
        {Lisp-Entry "receive-model" () 365 11 ("rename-entity" ":centered?" "0" "Point" "position:" "get-controller" "add-view" "dynamic" "function" "with-update-locked" "false" "visible?:" "new" "child" "get-row" "get-user-data" "parent" "self" "get-model" "eval-symbol" "model" "let*" "target" "window")}
        {Lisp-Entry "parent-relocation" () 380 29 ("parent")}
        {Lisp-Entry "relocation-parent" () 384 29 ("class" "destination")}
        {Lisp-Entry "can-undo?" () 393 11 ("false")}
        {Lisp-Entry "can-redo?" () 397 11 ("false")}
        {Lisp-Entry "can-cut?" () 401 11 ("can-cut-entity?" "entity" "dynamic" "function" "every?" "and" "selected-entities" "entities" "let")}
        {Lisp-Entry "can-copy?" () 409 11 ("can-copy-entity?" "entity" "dynamic" "function" "every?" "and" "selected-entities" "entities" "let")}
        {Lisp-Entry "can-paste?" () 417 11 ("remove-duplicates" "length" "1" "=" "memq?" "not" "and" "determine-paster" "entity" "dynamic" "function" "map" "parents" "selected-entities" "entities" "let*")}
        {Lisp-Entry "can-delete?" () 426 11 ("can-delete-entity?" "entity" "dynamic" "function" "every?" "and" "selected-entities" "entities" "let")}
        {Lisp-Entry "can-rename?" () 434 11 ("can-rename-entity?" "car" "entity" "1" "length" "=" "and" "selected-entities" "entities" "let")}
        {Lisp-Entry "can-select-all?" () 441 11 ("true")}
        {Lisp-Entry "cut-selection" () 445 11 ("controller" "cut-entities" "get-selection" "with-deleted-selection" "dynamic" "function" "with-update-locked" "bell" "null?" "if" "selected-entities" "entities" "let")}
        {Lisp-Entry "copy-selection" () 456 11 (":duration" "get-application" "update-focus-actions" "controller" "copy-entities" "dynamic" "function" ":wait" "with-cursor" "bell" "null?" "if" "selected-entities" "entities" "let")}
        {Lisp-Entry "paste-clipboard" () 467 11 ("get-model" "get-content" "car" "master" "parcel" "key:" "partition" "relocation-parent" "controller" "paste-parcels" "model" "bind" "info" "for-each" ":wait" "with-cursor" "dynamic" "function" "with-update-locked" "get-jazz-parcels" "parcels" "client" "selected-entity" "either" "parent" "let")}
        {Lisp-Entry "delete-selection" () 480 11 ("controller" "delete-entities" "dynamic" "function" "with-deleted-selection" "confirm-close" "get-selected-data" "entities" "not-null?" "when" "get-selection" "selection" "let")}
        {Lisp-Entry "confirm-close" () 490 11 ("confirm-action" "entities")}
        {Lisp-Entry "confirm-action" () 494 11 ("throw-cancel" "cancel" "false" "no" "true" "yes" "case" "confirmation" "type:" "localize" "message-box" "code" "let" "text")}
        {Lisp-Entry "selection-change" () 507 11 ("update-focus-actions" "get-application" "appl" "let" "user-origin?" "force?" "old-selection")}
        {Lisp-Entry "selected-entity" () 512 18 ("get-row" "get-user-data" "client" "null?" "if" "get-single-selection" "selection" "let")}
        {Lisp-Entry "selected-entities" () 519 18 ("get-row" "get-user-data" "row" "dynamic" "function" "map" "client" "list" "null?" "if" "get-ordered-selection" "selection" "let")}
        {Lisp-Entry "entity-row" () 528 18 ("get-user-data" "eq?" "when" "rank" "row" "dynamic" "function" "for-each-row" "return" "lambda" "call/ec" "entity")}
        {Lisp-Entry "entity-visible-row" () 538 11 ("user-data-index" "entity")}
        {Lisp-Entry "select-entity" () 542 18 ("set-single-selection" "when" "entity-visible-row" "row" "let" "entity")}
        {Lisp-Entry "select-entities" () 549 18 ("set-selection" "entity-visible-row" "map" "remove-nils" "rows" "let" "entities")}
        {Lisp-Entry "find-row" () 555 29 ("entity-row" "entity")}
        {Lisp-Entry "preserving-update" () 564 18 ("selected-entities" ":selected-entities" "get-expand-state" "expand-state:" "update")}
        {Lisp-Entry "update" () 568 26 ("rest")}
        {Lisp-Entry "entity-parent" () 577 38 ("entity")}
        {Lisp-Entry "entity-children" () 581 38 ("entity")}
        {Lisp-Entry "entity-brothers" () 585 11 ("entity-children" "remove" "when" "entity-parent" "parent" "let" "entity")}
        {Lisp-Entry "update-menu" () 596 18 ("before-properties" "end-edit-group" "or" "empty-properties?" "get-visible?" "empty-entity?" "empty-edit?" "properties" "rename-selection" "delete-selection" "not" "true" "set!" "end-add-group" "set-before" "set-parent" "get-title" "localize" "format" "set-title" "get-icon" "set-icon" "unique" "set-visible?" "when" "get-children" "children" "self" "add-entities" "1" "=" "if" "add-item" "locate" "add-menu" "let" "false" "empty-add?" "get-categorized-properties" "can-view-properties?" "and" "can-properties?" "rename" "entities-tree" "can-rename?" "delete" "can-delete?" "paste" "can-paste?" "copy" "can-copy?" "cut" "view" "Action" "get-action-enabled?" "can-cut?" "length" "count" "car" "entity" "selected-entities" "entities" "get-application" "appl" "let*" "menu")}
        {Lisp-Entry "show-properties" () 649 18 ("true" "focus?:" "workspace:" "Properties-Manager" "select-palette")}}}})
"Entities-Tree-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "entity" "Entities-Tree-Actions.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.entity.Entities-Tree-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Entities-Tree-Actions" () 46 7 ("F2" "Shortcut" "shortcut:" "on-rename" ":focus" "Event-Handler" "action-handler:" "rename" "name:" "Actions")}}})
"Entity"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "entity" "Entity.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.entity.Entity" () 37 9 ("jazz")
      {Lisp-Entry "Entity" () 75 11 ()
        {Lisp-Entry "get-factory" () 78 35 ()}
        {Lisp-Entry "get-factories" () 79 35 ()}
        {Lisp-Entry "get-presentation" () 80 35 ()}
        {Lisp-Entry "set-presentation" () 81 35 ("presentation" "controller")}
        {Lisp-Entry "can-cut-entity?" () 82 35 ()}
        {Lisp-Entry "can-copy-entity?" () 83 35 ()}
        {Lisp-Entry "can-paste-entity?" () 84 35 ()}
        {Lisp-Entry "determine-paster" () 85 35 ("rest")}
        {Lisp-Entry "can-rename-entity?" () 86 35 ()}
        {Lisp-Entry "can-delete-entity?" () 87 35 ()}
        {Lisp-Entry "can-move-entity?" () 88 35 ()}
        {Lisp-Entry "can-view-properties?" () 89 35 ()}
        {Lisp-Entry "get-categorized-properties" () 90 35 ()}}}})
"Entity-Factory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "entity" "Entity-Factory.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.entity.Entity-Factory" () 37 9 ("jazz")
      {Lisp-Entry "Entity-Factory" () 56 7 ("Object")
        {Lisp-Entry "get-class" () 59 35 ()}
        {Lisp-Entry "get-name-prohibited?" () 60 35 ()}
        {Lisp-Entry "get-name-mandatory?" () 61 35 ()}
        {Lisp-Entry "get-name-unicity?" () 62 35 ()}
        {Lisp-Entry "presentation->name" () 63 35 ("presentation")}
        {Lisp-Entry "get-factory-presentation" () 64 35 ()}
        {Lisp-Entry "get-factory-image" () 65 35 ()}}}})
"Entity-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "entity" "Entity-Menu.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.entity.Entity-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Entity-Menu" () 58 7 ("properties" "before-properties" "rename" "rename-selection" "delete" "components-tree" "delete-selection" "end-edit-group" "paste" "copy" "view" "Action" "action:" "cut" "end-add-group" "add-menu" "Bitmap-Resource" "icon:" "title:" "add-item" "name:" "Context-Menu")
        {Lisp-Entry "client" () 61 12 ("set-client" "get-client")}
        {Lisp-Entry "finish" () 79 11 ("self" "client" "update-menu" "nextmethod" "rest")}
        {Lisp-Entry "component-alias" () 84 11 ("nextmethod" "else" "client" ":client" "case" "name")}
        {Lisp-Entry "get-client" () 95 18 ("client")}
        {Lisp-Entry "set-client" () 99 18 ("client" "set!" "clt")}}
      {Lisp-Entry "Add-Menu" () 108 7 ("Context-Menu")
        {Lisp-Entry "add-entities" () 111 21 (":factory" "client:" "list" "properties:" "on-add" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "icon:" "Label-Item" "get-factory-presentation" "localize" "format" "title" "get-factory-image" "icon" "self" "parent:" "Separator-Item" "new" "null?" "if" "factory" "for-each" "get-factories" "factories" "let" "dynamic" "function" "with-update-locked" "client")}
        {Lisp-Entry "on-add" () 125 11 ("add-entity" ":factory" "factory" "client:" "get-property" "client" "let" "evt")}}}})
"Entity-Parcel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "entity" "Entity-Parcel.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.entity.Entity-Parcel" () 37 9 ("jazz")
      {Lisp-Entry "Entity-Parcel" () 46 7 ("Clipboard-Parcel")}}})
"Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Entry" () 37 9 ("jazz")
      {Lisp-Entry "Entry" () 45 7 ("Object")}}})
"Entry-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Entry-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Entry-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Entry-Text-View" () 46 7 ("show-unfocused-selection?:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Plain-Text-View")
        {Lisp-Entry "get-context-menu" () 53 11 ("new-text-context-menu")}}}})
"Entry-Widget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "widget" "Entry-Widget.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.widget.Entry-Widget" () 37 9 ("jazz")
      {Lisp-Entry "Entry-Widget" () 47 7 ("text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "scroller" "name:" "edge" "border-type:" "Border-View")
        {Lisp-Entry "default-size" () 57 11 ("Dimension")}}}})
"Enumeration-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Enumeration-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Enumeration-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Enumeration-Domain" () 44 7 ("Domain")}
      {Lisp-Entry "Enumeration-Domain" () 50 7 ("initialize" "choices" "nullable?" "Domain")
        {Lisp-Entry "validate-value" () 62 11 ("property:" "present-choice" "map" "join" "format" "message:" "Integrity-Violation" "new" "add-violation" "car" "key:" "choices" "member?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present-choice" () 67 11 ("cadr" "localize" "car" "cdr" "null?" "if" "choice")}
        {Lisp-Entry "present" () 78 11 ("car" "localize" "not" "choices" "assq" "cdr" "pair" "let" "null?" "if" "value")}
        {Lisp-Entry "setup-entry" () 92 11 ("choices" "combo" "locate" "set-choices" "parent:" "Enumeration-Entry" "new" "entry" "let" "client" "view")}
        {Lisp-Entry "setup-list-entry" () 97 11 ("choices" "setup" "parent:" "Enumeration-List-Entry" "new" "entry" "let" "client" "view")}}}})
"Enumeration-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "entry" "Enumeration-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.entry.Enumeration-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Enumeration-Entry" () 47 7 ("Ansi-Var" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "body" "combo" "edge" "border-type:" "border" "name:" "Property-Entry")
        {Lisp-Entry "get-value" () 62 11 ("combo" "locate" "get-value")}
        {Lisp-Entry "set-value" () 66 11 ("combo" "locate" "set-value" "value")}
        {Lisp-Entry "get-modified?" () 70 11 ("combo" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" () 74 11 ("combo" "locate" "set-modified?" "value")}}}})
"Enumeration-List-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "entry" "Enumeration-List-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.entry.Enumeration-List-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Enumeration-List-Entry" () 44 7 ("width:" "toplevel-controls?:" "controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" ":form" "Event-Handler" "return-press-handler:" ":icons" "portfolio:" "entry" "filled-column:" "show-header?:" "tree" "document" "style:" "shown?:" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "border" "name:" "Property-Entry")
        {Lisp-Entry "setup" () 63 21 ("patch-tree" "list" "children:" "add-row" "user-data:" "color:" "title:" ":parent" "font:" "Check-Box" "checkbox" "Ansi-Var" "Ansi-Bold" "Font" "filled" "size" "eq?" "if" "font" "Black" "name:" "Color" "color" "4" "Rect" ":layout-insets" "fill" ":layout-type" "Layout-View" "new" "layout" "0" "border" "title" "get-name" "name" "let*" "component" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "locate" "tree" "get-creator" "child" "get-children" "components" "let" "key" "client")}
        {Lisp-Entry "patch-tree" () 83 18 ("layout-drawing" "rank" "row" "dynamic" "function" "for-each-visible-row" "locate" "tree" "let")}
        {Lisp-Entry "get-value" () 95 11 ("get-output" "put" "get-checked?" "when" "name" "checkbox" "row" "dynamic" "function" "for-each-checkbox" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "set-value" () 104 11 ("set-checked?" "member?" "checked?" "let" "name" "checkbox" "row" "dynamic" "function" "for-each-checkbox" "value")}
        {Lisp-Entry "get-modified?" () 111 11 ("false" "true" "return" "get-modified?" "when" "name" "checkbox" "row" "dynamic" "function" "for-each-checkbox")}
        {Lisp-Entry "set-modified?" () 119 11 ("set-modified?" "name" "checkbox" "row" "dynamic" "function" "for-each-checkbox" "value")}
        {Lisp-Entry "for-each-checkbox" () 130 11 ("name" "Check-Box" "is?" "when" "get-user-data" "checkbox" "rank" "row" "dynamic" "function" "for-each-row" "locate" "tree" "let" "proc")}}}})
"Enumeration-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Enumeration-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Enumeration-Row" () 37 9 ("jazz")
      {Lisp-Entry "Enumeration-Row" () 46 7 ("Combo-Row")
        {Lisp-Entry "list?" () 50 12 ("set-list?" "get-list?" "false")}
        {Lisp-Entry "initialize" () 58 11 ("choose" "set-kind" "list?~self" "choices~self" "set!" "nextmethod" "apply" "others" "false" "list?" "choices" "bind-keywords" "rest")}
        {Lisp-Entry "get-list?" () 71 18 ("list?")}
        {Lisp-Entry "set-list?" () 75 18 ("list?" "set!" "value")}
        {Lisp-Entry "combo-choose" () 84 11 ("true" "focus-editor" "enter-edited-value" "set-edited-value" ":selected" "choices" ":names" "Domain-Chooser" "get-modal" "value" "let")}
        {Lisp-Entry "present" () 97 11 ("choices" "assq" "cadr" "localize" "name" "dynamic" "function" "map" "join" "null?" "if" "names")}
        {Lisp-Entry "get-edited-value" () 111 11 ("equal?" "test:" "cadr" "localize" "info" "key:" "choices" "find" "car" "title" "dynamic" "function" "map" "parse-strings" "strings" "=" "empty-string?" "or" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" () 121 11 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Enumeration-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Enumeration-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Enumeration-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Enumeration-Tester" () 44 7 ("title:" "Tester")}}})
"Error-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Error-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Error-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Error-Tester" () 45 7 ("title:" "Tester")}}})
"Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "event" "Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.event.Event" () 37 9 ("jazz")
      {Lisp-Entry "Event" () 45 7 ("Object")
        {Lisp-Entry "kind" () 48 8 ()}
        {Lisp-Entry "sender" () 49 8 ()}
        {Lisp-Entry "properties" () 50 8 ()}
        {Lisp-Entry "modifiers" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("modifiers-keys" "modifiers~self" "properties~self" "sender~self" "kind~self" "set!" "nextmethod" "properties" "sender" "kind")}
        {Lisp-Entry "print" () 62 11 ("properties" "kind" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-kind" () 74 18 ("kind")}
        {Lisp-Entry "get-sender" () 78 18 ("sender")}
        {Lisp-Entry "get-properties" () 82 18 ("properties")}
        {Lisp-Entry "get-property" () 86 18 ("properties" "getf" "keyword")}
        {Lisp-Entry "get-modifiers" () 90 18 ("modifiers")}
        {Lisp-Entry "get-shift?" () 94 18 ("modifiers" "shift-key?")}
        {Lisp-Entry "get-control?" () 98 18 ("modifiers" "control-key?")}
        {Lisp-Entry "get-alt?" () 102 18 ("modifiers" "alt-key?")}}}})
"Event-Consumer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "consumer" "Event-Consumer.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.consumer.Event-Consumer" () 37 9 ("jazz")
      {Lisp-Entry "Event-Consumer" () 45 11 ("Consumer")
        {Lisp-Entry "get-event-consumer" () 48 35 ()}
        {Lisp-Entry "set-event-consumer" () 49 35 ("consumer")}
        {Lisp-Entry "deliver-event" () 50 35 ("evt" "proc" "target" "handler")}}}})
"Event-Handler"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "handler" "Event-Handler.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.handler.Event-Handler" () 37 9 ("jazz")
      {Lisp-Entry "Event-Handler" () 43 7 ("Handler")
        {Lisp-Entry "properties" () 46 8 ()}
        {Lisp-Entry "initialize" () 49 11 ("properties~self" "set!" "nextmethod" "apply" "others" "properties" "bind-keywords" "rest")}
        {Lisp-Entry "print" () 55 11 ("properties" "null?" "if" "method-name" "target-name" "target" "either" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-properties" () 70 18 ("properties")}
        {Lisp-Entry "get-property" () 74 18 ("properties" "getf" "keyword")}
        {Lisp-Entry "invoke" () 87 11 ("self" "redirect-handler" "invoke-target" "target-name" "error" "not" "find-target" "either" "target" "let" "execute" "if" "action" "action:" "event" "sender")}
        {Lisp-Entry "invoke-target" () 96 18 ("else" "record" "get-recorder" "recorder" "either" "action/handler" "record-event?" "macro-recording?" "and" "when" "get-application" "appl" "self" "deliver-event" "prog1" "get-event-consumer" "consumer" "Event-Consumer" "is?" "error" "not" "cond" "method-name" "eval-symbol" "proc" "let" "action" "action:" "event" "target")}}}})
"Event-Spy"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "spy" "Event-Spy.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.spy.Event-Spy" () 37 9 ("jazz")
      {Lisp-Entry "Event-Categories" () 53 10 ("unknown" "menu" "focus" "clipboard" "keyboard" "mouse" "action" "paint" "window" "component" "Bitmap-Resource" "general")}
      {Lisp-Entry "Event-Classes" () 67 10 ("Selection-Event" "Print-Event" "Paint-Event" "mouse" "Mouse-Event" "Keyboard-Event" "Focus-Event" "focus" "Edition-Event" "paint" "Draw-Event" "window" "Cursor-Event" "Component-Event" "general" "Break-Event" "component" "Action-Event")}
      {Lisp-Entry "Event-Spy" () 87 7 ("toplevel-controls?:" "width:" "title:" "tree" "tree-header" "content" "tree-scroller" "tree-border" "name:" "Spy-View")
        {Lisp-Entry "palette-title" () 110 16 ()}
        {Lisp-Entry "palette-position" () 115 16 ("Point")}
        {Lisp-Entry "palette-size" () 120 16 ("Dimension")}
        {Lisp-Entry "spy-domain" () 129 11 ("views")}
        {Lisp-Entry "spy" () 133 11 ("self" "Spyer" "new" "set-event-consumer" "get-event-consumer" "old-consumer" "set!" "Event-Consumer" "is?" "when" "client")}
        {Lisp-Entry "unspy" () 139 11 ("old-consumer" "set-event-consumer" "Event-Consumer" "is?" "when" "client")}
        {Lisp-Entry "incoming-event" () 144 11 ("slowdown-quantum" "sleep" "slowdown?" "update-view" "ensure-at-end" "list" "children:" "add-row" "get-visible-count" "item" "5" "*" "make-string" "format" "c3" "c2" "get-kind" "Tree-Label" "c1" "image:" "title:" "Tree-Node" "new" "c0" "parameters" "Event-Categories" "assq" "cdr" "image" "get-tree" "tree" "all" "category" "eq?" "or" "when" "unknown" "second" "if" "cat" "car" "key:" "Event-Classes" "find" "info" "class-of" "type-name" "type" "let*" "evt" "client" "window" "level")}
        {Lisp-Entry "incoming-result" () 165 11 ("result" "item" "level")}}
      {Lisp-Entry "Spyer" () 174 7 ("Event-Consumer" "Object")
        {Lisp-Entry "level" () 177 8 ("0")}
        {Lisp-Entry "spy-window" () 178 8 ()}
        {Lisp-Entry "client" () 179 8 ()}
        {Lisp-Entry "get-event-consumer" () 182 11 ()}
        {Lisp-Entry "set-event-consumer" () 183 11 ("consumer")}
        {Lisp-Entry "initialize" () 186 11 ("client" "spy-window" "set!" "nextmethod" "clt" "wnd")}
        {Lisp-Entry "deliver-event" () 192 11 ("decrease!" "increase!" "client" "level" "spy-window" "incoming-event" "evt" "proc" "target" "handler")}}}})
"Exception-Presenter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "application" "Exception-Presenter.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.application.Exception-Presenter" () 37 9 ("jazz")
      {Lisp-Entry "Exception-Presenter" () 48 7 ("Object")
        {Lisp-Entry "present" () 51 18 ("set-auto-continue?" "remove-nils" "actions:" "present-execution-stack" "content:" "message-box" "code" "let" "get-continuable?" "get-auto-continue?" "and" "restore-messaging" "restore-debugger" "dynamic" "function" "continue-exception" "get-execution-stack" "execution-stack" "get-execution-context" "execution-context" "cancel" "cancel-action" "continue-all" "continue-all-action" "continue" "continue-action" "restart" "restart-action" "yes" "else" "if" "case" "list" "yes-action" "continuable?" "restartable?" "present-message" "message" "let*" "true" "prefix?" "prefix?:" "error" "type" "type:" "exception")}
        {Lisp-Entry "present-execution-stack" () 88 11 ("father:" "detail" "Bitmap-Resource" "image:" "either" "title:" "Tree-Node" "list" "children:" "collapsed" "state:" "add-row" "row" "get-details" "details" "get-title" "title" "node" "dynamic" "function" "for-each" "locate" "tree" "Dimension" "size:" "Context-Border" "new" "border" "let*" "when" "execution-stack")}}
      {Lisp-Entry "Context-Border" () 108 7 ("width:" "title:" "node" "selection-mode:" ":icons" "portfolio:" "tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "flat?:" "Outline-Border" "name:" "Color" "border-color:" "solid" "border-type:" "Border-View")}
      {Lisp-Entry "Context-Tree" () 126 7 ("Tree-View")}}})
"Exception-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Exception-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Exception-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Exception-Snapshot" () 45 7 ("Component")
        {Lisp-Entry "address" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "code" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "description" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 54 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" () 58 11 ("description" ":description" "code" ":code" "address" ":address" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Execution-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Execution-Frame.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.frame.Execution-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Execution-Frame" () 45 7 ("Object")
        {Lisp-Entry "thread" () 48 8 ()}
        {Lisp-Entry "address" () 49 8 ()}
        {Lisp-Entry "name" () 50 8 ()}
        {Lisp-Entry "construct-literal" () 54 16 ("unmarshal" "self" "new" "name" "address" "ior" "context")}
        {Lisp-Entry "initialize" () 58 11 ("name~self" "address~self" "thread~self" "set!" "nextmethod" "name" "address" "thread")}
        {Lisp-Entry "print" () 65 11 ("name" "address" "thread" "marshal" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-thread" () 78 18 ("thread")}
        {Lisp-Entry "get-address" () 82 18 ("address")}
        {Lisp-Entry "get-name" () 86 18 ("name")}
        {Lisp-Entry "present" () 95 26 ()}
        {Lisp-Entry "get-image" () 99 26 ()}}}})
"Exemplar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exemplar" "Exemplar.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.exemplar.Exemplar" () 37 9 ("jazz")
      {Lisp-Entry "Exemplar" () 43 7 ("Node")
        {Lisp-Entry "domain" () 46 18 ()}
        {Lisp-Entry "base" () 47 18 ()}
        {Lisp-Entry "ascendant" () 48 18 ()}
        {Lisp-Entry "inited?" () 49 18 ()}
        {Lisp-Entry "persistent?" () 50 18 ()}
        {Lisp-Entry "initialize" () 53 11 ("install" "when" "true" "persistent?~self" "false" "inited?~self" "ascendant~self" "base~self" "domain~self" "set!" "nextmethod" "apply" "others" "base" "domain" "bind-keywords" "rest")}
        {Lisp-Entry "copy-object" () 65 11 ("base" "set-base-value" "domain" "set-domain-value" "nextmethod" "exemplar" "let" "deep?")}
        {Lisp-Entry "compare-object" () 72 11 (":not-equal" "else" "get-base" "base" ":equal" "nextmethod" "=" "and" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 82 11 ("owned-properties" "base" "base:" "name" "name:" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "install" () 96 11 ("init")}
        {Lisp-Entry "init" () 100 11 ("true" "setup-inherited" "domain" "locate" "ascendant" "set!" "base" "not" "if" "inited?" "unless")}
        {Lisp-Entry "setup-inherited" () 109 11 ("node-properties" "ascendant" "get-value" "set-value" "owned" "memq?" "unless" "property" "dynamic" "function" "for-each")}
        {Lisp-Entry "inherits?" () 116 18 ("false" "get-name" "when" "ascendant" "dynamic" "function" "for-each-ascendant" "return" "lambda" "call/ec" "true" "name" "eq?" "if" "target")}
        {Lisp-Entry "has-ascendant?" () 128 18 ("self" "domain" "has-ascendant?" "base")}
        {Lisp-Entry "for-each-ascendant" () 132 18 ("for-each-ascendant" "ascendant" "when" "proc")}
        {Lisp-Entry "extend" () 138 18 ("install" "else" "true" "set-inited?" "owned" "copy" "set-owned" "copy-properties" "base" "set-base-value" "name" "not" "cond" "set-domain-value" "self" "class-of" "new" "exemplar" "let" "domain" "domain:")}
        {Lisp-Entry "copy-properties" () 152 11 ("node-properties" "get-value" "set-value" "property" "dynamic" "function" "for-each" "exemplar")}
        {Lisp-Entry "update" () 163 21 ("update-descendants" "named?" "when" "init" "reset")}
        {Lisp-Entry "update-descendants" () 170 11 ("self" "update-descendants" "domain" "when")}
        {Lisp-Entry "modify-from" () 180 18 ("update" "get-persistent?" "persistent?" "get-owned" "copy" "owned" "node-properties" "get-value" "set-value" "property" "dynamic" "function" "for-each" "get-base" "base" "get-name" "name" "set!" "self" "eq?" "unless" "from")}
        {Lisp-Entry "reset" () 197 11 ("false" "set!" "node-properties" "reset-property" "for-each" "inited?" "when")}
        {Lisp-Entry "reset-property" () 204 11 ("set-value" "owned" "memq?" "unless" "property")}
        {Lisp-Entry "set-domain-value" () 214 25 ("domain" "set!" "d")}
        {Lisp-Entry "get-domain" () 218 18 ("domain")}
        {Lisp-Entry "set-domain" () 222 18 ("install" "domain" "set!" "d")}
        {Lisp-Entry "register" () 227 18 ("self" "domain" "add")}
        {Lisp-Entry "set-base-value" () 236 25 ("base" "set!" "b")}
        {Lisp-Entry "get-base" () 240 18 ("base")}
        {Lisp-Entry "set-base" () 244 18 ("update" "base" "set!" "b")}
        {Lisp-Entry "get-persistent?" () 254 18 ("persistent?")}
        {Lisp-Entry "set-persistent?" () 258 18 ("persistent?" "set!" "value")}}}})
"Exemplar-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exemplar" "Exemplar-Domain.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.exemplar.Exemplar-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Exemplar-Domain" () 44 7 ("Object")
        {Lisp-Entry "content" () 47 18 ("Axis" "new")}
        {Lisp-Entry "get-content" () 55 18 ("content")}
        {Lisp-Entry "set-content" () 59 18 ("Axis" "coerce" "content" "set!" "value")}
        {Lisp-Entry "empty-content" () 63 18 ("named?" "not" "and" "exemplar" "dynamic" "function" "collect-if" "content" "set!" "false" "remove-named?" "remove-named?:")}
        {Lisp-Entry "add" () 74 18 ("content" "axis-add" "exemplar")}
        {Lisp-Entry "reference" () 78 18 ("locate" "content" "element" "integer?" "if" "rank/name")}
        {Lisp-Entry "locate" () 84 18 ("error" "when" "get-name" "exemplar" "dynamic" "function" "key:" "content" "find" "either" "true" "error?" "error?:" "name")}
        {Lisp-Entry "similar" () 91 18 ("=" "test:" "content" "find" "self" "set-domain" "get-domain" "not" "when" "exemplar")}
        {Lisp-Entry "get-rank" () 98 18 ("position" "return:" "content" "find" "exemplar")}
        {Lisp-Entry "has-ascendant?" () 107 18 ("false" "true" "eq?" "when" "ascendant" "dynamic" "function" "for-each-ascendant" "return" "lambda" "call/ec" "base" "exemplar")}
        {Lisp-Entry "update-descendants" () 122 21 ("content" "update" "has-ascendant?" "when" "exemplar" "dynamic" "function" "for-each" "base")}
        {Lisp-Entry "collect-persistent" () 134 18 ("content" "get-persistent?" "exemplar" "dynamic" "function" "collect-if")}}}})
"Exit-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "process" "Exit-Listener.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.process.Exit-Listener" () 37 9 ("jazz")
      {Lisp-Entry "Exit-Listener" () 46 11 ("Listener")
        {Lisp-Entry "prepare-exit" () 49 35 ()}}}})
"Exit-Signal"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "signal" "Exit-Signal.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.signal.Exit-Signal" () 37 9 ("jazz")
      {Lisp-Entry "Exit-Signal" () 44 7 ("Signal")
        {Lisp-Entry "status" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("status~self" "set!" "nextmethod" "0" "status" "status:")}
        {Lisp-Entry "get-status" () 60 18 ("status")}}}})
"Experiments"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "doc" "development" "Experiments" "Experiments.fusion"} {Time 128366795660000000L}})
"Explorable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Explorable.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.iterator.Explorable" () 37 9 ("jazz")
      {Lisp-Entry "Explorable" () 44 11 ()
        {Lisp-Entry "new-explorer" () 47 35 ("rest" "object")}}}})
"Explore-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exception" "Explore-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.exception.Explore-Error" () 37 9 ("jazz")
      {Lisp-Entry "Explore-Error" () 44 7 ("Error")
        {Lisp-Entry "start" () 47 8 ()}
        {Lisp-Entry "end" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("end~self" "start~self" "set!" "nextmethod" "apply" "others" "end" "start" "bind-keywords" "rest")}
        {Lisp-Entry "get-start" () 63 18 ("start")}
        {Lisp-Entry "get-end" () 67 18 ("end")}
        {Lisp-Entry "get-range" () 71 18 ("end" "start" "Range" "new")}}}})
"Explorer-Mark"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Explorer-Mark.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Explorer-Mark" () 37 9 ("jazz")
      {Lisp-Entry "Explorer-Mark" () 45 7 ("Object")
        {Lisp-Entry "kind" () 48 15 ()}
        {Lisp-Entry "range" () 49 15 ()}
        {Lisp-Entry "initialize" () 52 11 ("range~self" "kind~self" "set!" "nextmethod" "range" "kind")}
        {Lisp-Entry "print" () 58 11 ("range" "kind" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Explorer-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Explorer-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Explorer-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Explorer-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-sequence-explorer" "invoke")}
        {Lisp-Entry "test-sequence-explorer" () 61 11 ("backward" "direction:" "String" "type:" "2" "start:" "c" "b" "a" "Sequence-Explorer" "new" "gather" "=" "rpt" "validate")}}}})
"Export-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Export-Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.Export-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Export-Declaration" () 40 7 ("Declaration")
        {Lisp-Entry "symbol" () 43 8 ("generate")}}}})
"External-Browse-Configuration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "External-Browse-Configuration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.External-Browse-Configuration" () 37 9 ("jazz")
      {Lisp-Entry "External-Browse-Configuration" () 46 7 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "directory" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-presentation" () 62 16 ()}
        {Lisp-Entry "get-row-instance" () 66 11 ("nextmethod" "else" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 72 11 ("directory")}}}})
"External-Browse-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "External-Browse-Preferences.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.External-Browse-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "External-Browse-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 58 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 62 11 ("false")}
        {Lisp-Entry "can-move-component?" () 66 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 70 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 74 11 ("External-Browse-Configuration" "list")}}}})
"External-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "External-Menu.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.menu.External-Menu" () 37 9 ("jazz")
      {Lisp-Entry "External-Menu" () 46 7 ("update-catalog" "catalogs-manager" "jedi" "Action" "action:" "on-repository-manager" ":application" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "Menu")}
      {Lisp-Entry "Browse-Menu" () 62 7 ("Menu")
        {Lisp-Entry "install" () 65 11 ("browse" "external" "get-preferences" "get-children" "directory:" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "get-base" "->string" "title:" "self" "parent:" "Label-Item" "new" "get-directory" "dir" "let" "config" "dynamic" "function" "for-each" "nextmethod" "rest")}
        {Lisp-Entry "on-action" () 73 11 ("new-palette" "bring-to-front" "if" "get-application" "get-toplevel" "get-windows" "get-directory" "=" "Directory-Browser" "is?" "and" "window" "dynamic" "function" "find-if" "browser" "directory:" "get-property" "dir" "let*" "evt")}}
      {Lisp-Entry "Select-Menu" () 89 7 ("Menu")
        {Lisp-Entry "install" () 92 11 ("select" "external" "get-preferences" "get-children" ":toplevel-class" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" ":accelerator" "title:" "self" "parent:" "Label-Item" "new" "get-accelerator" "accelerator" "get-toplevel-class" "toplevel-class" "get-title" "title" "let" "config" "dynamic" "function" "for-each" "nextmethod" "rest")}
        {Lisp-Entry "on-action" () 102 11 ("External-Tool" "bring-to-front" ":toplevel-class" "get-property" "toplevel-class" "let" "evt")}}}})
"External-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "External-Preferences.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.External-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "External-Preferences" () 46 7 ("title:" "Preferences")}}})
"External-Select-Configuration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "External-Select-Configuration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.External-Select-Configuration" () 37 9 ("jazz")
      {Lisp-Entry "External-Select-Configuration" () 46 7 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "toplevel-class" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "accelerator" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-presentation" () 63 16 ()}
        {Lisp-Entry "get-row-instance" () 67 11 ("nextmethod" "else" "String-Row" "new" "toplevel-class" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 73 11 ("accelerator" "toplevel-class")}}}})
"External-Select-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "External-Select-Preferences.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.External-Select-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "External-Select-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 58 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 62 11 ("false")}
        {Lisp-Entry "can-move-component?" () 66 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 70 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 74 11 ("External-Select-Configuration" "list")}}}})
"External-Tool"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "External-Tool.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.external.External-Tool" () 37 9 ("jazz")
      {Lisp-Entry "External-Tool" () 44 7 ("Object")
        {Lisp-Entry "bring-to-front" () 48 23 ("find-toplevel" "BringWindowToTop" "class")}
        {Lisp-Entry "find-toplevel" () 53 23 ("error" "not" "if" "NULL" "FindWindow" "hwnd" "let" "class")}
        {Lisp-Entry "toplevel-class" () 61 34 ()}}}})
"External-Tools-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "External-Tools-Preferences.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.External-Tools-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "External-Tools-Preferences" () 46 7 ("title:" "Preferences")}}})
"FTP-Connection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "FTP-Connection.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.internet.FTP-Connection" () 37 9 ("jazz")
      {Lisp-Entry "FTP-Connection" () 44 7 ("WinInet" "WinBase" "WinDef" "Utilities" "Internet-Connection")
        {Lisp-Entry "default-port" () 47 11 ("INTERNET_DEFAULT_FTP_PORT")}
        {Lisp-Entry "open-connection" () 51 11 ("0" "INTERNET_SERVICE_FTP" "NULL" "either" "get-handle" "InternetConnect" "validate-server" "password" "username" "port" "server" "session")}
        {Lisp-Entry "validate-server" () 56 11 ("error" "0" "subseq" "=" "3" "length" ">=" "and" "when" "server")}
        {Lisp-Entry "get-current-directory" () 62 18 ("adjust-string" "error" "handle" "FtpGetCurrentDirectory" "not" "if" "MAX_PATH" "make-string" "dirname" "let")}
        {Lisp-Entry "get-file" () 70 18 ("error" "encore-transfer-type" "0" "false" "parse" "handle" "FtpGetFile" "not" "when" "ascii" "transfer-type" "transfer-type:" "local" "remote")}
        {Lisp-Entry "put-file" () 75 18 ("error" "0" "encore-transfer-type" "parse" "handle" "FtpPutFile" "not" "when" "ascii" "transfer-type" "transfer-type:" "remote" "local")}
        {Lisp-Entry "delete-file" () 80 18 ("error" "handle" "FtpDeleteFile" "not" "when" "remote")}
        {Lisp-Entry "encore-transfer-type" () 90 11 ("error" "else" "FTP_TRANSFER_TYPE_BINARY" "binary" "FTP_TRANSFER_TYPE_ASCII" "ascii" "case" "transfer-type")}}}})
"Factory-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Factory-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Factory-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Factory-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-list-factory" "test-sequence-factory" "invoke")}
        {Lisp-Entry "test-sequence-factory" () 62 11 ("get-output" "=" "rpt" "validate" "put-sequence" "put" "5" "make-string" "Sequence-Factory" "new" "factory" "let")}
        {Lisp-Entry "test-list-factory" () 75 11 ("get-output" "=" "rpt" "validate" "e" "d" "c" "put-sequence" "b" "a" "put" "List-Factory" "new" "factory" "let")}}}})
"Favorite"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite" () 37 9 ("jazz")
      {Lisp-Entry "Favorite" () 45 7 ("Component")
        {Lisp-Entry "title" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-image" () 57 16 ("Bitmap-Resource")}
        {Lisp-Entry "display-property?" () 61 11 ("visible?" "children" "before" "name-info" "field-name" "memq?" "not" "property")}
        {Lisp-Entry "get-row-instance" () 65 11 ("nextmethod" "else" "String-Row" "new" "title" "field-name" "case" "property")}}}})
"Favorite-Clipboard"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-Clipboard.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-Clipboard" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Clipboard" () 46 7 ("Favorite")
        {Lisp-Entry "string" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 57 11 ("user-message" "set-clipboard" "string" "when")}
        {Lisp-Entry "get-class-image" () 69 16 ("Bitmap-Resource")}}}})
"Favorite-Compare-Directories"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "favorites" "Favorite-Compare-Directories.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.groupware.favorites.Favorite-Compare-Directories" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Compare-Directories" () 46 7 ("Favorite")
        {Lisp-Entry "mode" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "left" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "right" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "ignored-nodes" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "ignored-leaves" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "ignored-extensions" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "check-algorithm" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 63 11 ("self" "install-configuration" "get-guest" "guest" "Compare-Directories" "new-frame" "frame" "let*")}
        {Lisp-Entry "Mode-Values" () 75 19 ("merge" "backup")}
        {Lisp-Entry "Check-Algorithm-Values" () 80 19 ("content" "timestamp")}
        {Lisp-Entry "get-domain" () 86 16 ("nextmethod" "else" "Check-Algorithm-Values" "check-algorithm" "Mode-Values" "choices:" "Enumeration-Domain" "new" "mode" "field-name" "case" "property")}
        {Lisp-Entry "property-presentation" () 99 16 ("nextmethod" "else" "check-algorithm" "ignored-extensions" "ignored-leaves" "ignored-nodes" "right" "left" "mode" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 112 11 ("check-algorithm" "ignored-extensions" "ignored-leaves" "ignored-nodes" "right" "left" "mode")}
        {Lisp-Entry "get-row-instance" () 117 11 ("nextmethod" "else" "Directory-Row" "right" "left" "Check-Algorithm-Values" "check-algorithm" "Mode-Values" "choices:" "Combo-Row" "new" "mode" "field-name" "case" "property")}}}})
"Favorite-Compare-Files"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "favorites" "Favorite-Compare-Files.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.favorites.Favorite-Compare-Files" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Compare-Files" () 46 7 ("Favorite")
        {Lisp-Entry "green" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "blue" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 58 11 ("self" "install-configuration" "get-guest" "guest" "Compare-Files" "new-frame" "frame" "let*")}
        {Lisp-Entry "get-categorized-properties" () 69 11 ("blue" "green")}
        {Lisp-Entry "get-row-instance" () 73 11 ("nextmethod" "else" "File-Row" "new" "blue" "green" "field-name" "case" "property")}}}})
"Favorite-Configuration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Favorite-Configuration.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Favorite-Configuration" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Configuration" () 47 7 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "shortcut" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "file" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "get-domain" () 64 16 ("nextmethod" "else" "String-Domain" "new" "shortcut" "field-name" "case" "property")}
        {Lisp-Entry "get-class-presentation" () 76 16 ()}
        {Lisp-Entry "property-presentation" () 81 16 ("nextmethod" "else" "file" "shortcut" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" () 88 11 ("shortcut" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 92 11 ("shortcut")}
        {Lisp-Entry "set-presentation" () 96 11 (":shortcut" "self" "set-property" "shortcut" "designer")}
        {Lisp-Entry "get-row-instance" () 100 11 ("nextmethod" "else" "File-Row" "file" "String-Row" "new" "shortcut" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 107 11 ("file" "shortcut")}}}})
"Favorite-Definition"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-Definition.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-Definition" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Definition" () 45 7 ("Favorite")
        {Lisp-Entry "definition" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 56 11 ("get-application" "edit-definition" "definition" "when")}
        {Lisp-Entry "get-class-image" () 67 16 ("Bitmap-Resource")}
        {Lisp-Entry "presentation-property?" () 71 11 ("definition" "title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 75 11 ("definition" "title" "either")}
        {Lisp-Entry "set-presentation" () 79 11 ("title:" "self" "set-property" "title" "designer")}}}})
"Favorite-Directory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-Directory.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-Directory" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Directory" () 45 7 ("Favorite")
        {Lisp-Entry "directory" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 56 11 ("user-message" "set-current-directory" "parse" "format" "dir" "let" "directory" "when")}
        {Lisp-Entry "get-class-image" () 69 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-row-instance" () 73 11 ("nextmethod" "else" "Directory-Row" "new" "directory" "field-name" "case" "property")}}}})
"Favorite-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-Event.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-Event" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Event" () 45 7 ("Favorite")
        {Lisp-Entry "handler" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 56 11 ("get-properties" ":launch" "Event" "new" "apply" "self" "invoke" "handler" "when")}
        {Lisp-Entry "get-class-image" () 67 16 ("Bitmap-Resource")}}}})
"Favorite-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-File.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-File" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-File" () 46 7 ("Favorite")
        {Lisp-Entry "file" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 57 11 ("get-application" "edit-document" "file" "when")}
        {Lisp-Entry "get-class-image" () 68 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" () 73 16 ()}
        {Lisp-Entry "get-row-instance" () 77 11 ("nextmethod" "else" "File-Row" "new" "file" "field-name" "case" "property")}}}})
"Favorite-Integrate-ClearCase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "favorites" "Favorite-Integrate-ClearCase.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.groupware.favorites.Favorite-Integrate-ClearCase" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Integrate-ClearCase" () 45 7 ("Favorite-Compare-Directories")
        {Lisp-Entry "view-name" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "view-directory" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "activity" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 58 11 ("activity" "view-directory" "view-name" "check-algorithm" "ignored-extensions" "ignored-leaves" "ignored-nodes" "right" "left" "mode")}
        {Lisp-Entry "get-row-instance" () 62 11 ("nextmethod" "else" "true" "nullable?:" "Directory-Row" "view-directory" "String-Row" "activity" "view-name" "Directory-Group-Row" "new" "right" "left" "field-name" "case" "property")}}}})
"Favorite-Launch"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-Launch.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-Launch" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Launch" () 47 7 ("Favorite")
        {Lisp-Entry "file" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 58 11 ("shell-execute" "file" "when")}
        {Lisp-Entry "get-class-image" () 69 16 ("Bitmap-Resource")}
        {Lisp-Entry "presentation-property?" () 73 11 ("file" "title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 77 11 ("file" "title" "either")}
        {Lisp-Entry "set-presentation" () 81 11 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "get-row-instance" () 85 11 ("nextmethod" "else" "File-Row" "new" "file" "field-name" "case" "property")}}}})
"Favorite-Search"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-Search.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-Search" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Search" () 45 7 ("Favorite")
        {Lisp-Entry "directories" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "extensions" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 57 11 ("select-search" "true" "set-visible?" "bring-to-front" "extensions" "get-list" "dir" "dynamic" "function" "map" "format" "set-string-content" "directories-search" "search" "let" "directories" "tab" "locate" "set-selection-name" "get-guest" "manager" "get-search-manager" "frame" "get-application" "appl" "let*")}
        {Lisp-Entry "get-class-image" () 76 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-row-instance" () 80 11 ("nextmethod" "else" "List-Row" "new" "extensions" "directories" "field-name" "case" "property")}}}})
"Favorite-Symbol"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-Symbol.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-Symbol" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-Symbol" () 45 7 ("Favorite")
        {Lisp-Entry "symbol" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 56 11 ("get-application" "edit-definition" "symbol" "when")}
        {Lisp-Entry "get-class-image" () 67 16 ("Bitmap-Resource")}
        {Lisp-Entry "presentation-property?" () 71 11 ("symbol" "title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 75 11 ("symbol" "title" "either")}
        {Lisp-Entry "set-presentation" () 79 11 ("title:" "self" "set-property" "title" "designer")}}}})
"Favorite-URL"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorite-URL.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorite-URL" () 37 9 ("jazz")
      {Lisp-Entry "Favorite-URL" () 45 7 ("Favorite")
        {Lisp-Entry "url" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "launch" () 56 11 ("get-application" "browse-url" "url" "when")}
        {Lisp-Entry "get-class-image" () 67 16 ("Bitmap-Resource")}}}})
"Favorites"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorites.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorites" () 37 9 ("jazz")
      {Lisp-Entry "Favorites" () 45 7 ("Group")
        {Lisp-Entry "get-class-presentation" () 54 16 ()}
        {Lisp-Entry "get-class-image" () 59 16 ("Bitmap-Resource")}
        {Lisp-Entry "can-rename-component?" () 63 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 67 11 ("false")}
        {Lisp-Entry "can-move-component?" () 71 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 75 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 79 11 ()}}}})
"Favorites-Adder"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorites-Adder.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorites-Adder" () 37 9 ("jazz")
      {Lisp-Entry "Favorites-Adder" () 47 7 ("cancel" "default?:" "action-handler:" "9" "ok" "tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "on-cancel" "escape-press-handler:" "on-ok" ":host" "Event-Handler" "return-press-handler:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "title" "edge" "border-type:" "Default-GUI" "name:" "Font" "font:" "Point" "position:" "title:" "Dimension" "size:" "View")
        {Lisp-Entry "default-title" () 50 12 ("set-default-title" "get-default-title")}
        {Lisp-Entry "default-root" () 51 12 ("set-default-root" "get-default-root")}
        {Lisp-Entry "finish" () 68 11 ("auto-select-first" "locate" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "dialog-class" () 80 16 ("Favorites-Adder-Dialog")}
        {Lisp-Entry "Favorites-Adder-Dialog" () 85 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")
          {Lisp-Entry "focus-gain" () 92 13 ("title" "guest" "locate" "acquire-focus" "nextmethod")}
          {Lisp-Entry "get-modal-result" () 97 13 ("/=" "essay" "values" "tree" "selected-component" "favorite" "guest" "locate" "get-string-content" "title" "let")}}
        {Lisp-Entry "get-default-title" () 109 18 ("default-title")}
        {Lisp-Entry "set-default-title" () 113 18 ("locate" "set-string-content" "set!" "default-title" "/=" "when" "title")}
        {Lisp-Entry "get-default-root" () 119 18 ("default-root")}
        {Lisp-Entry "set-default-root" () 123 18 ("set-client" "locate" "tree" "let" "set!" "default-root" "/=" "when" "root")}}
      {Lisp-Entry "Request-Tree" () 135 7 ("on-double-click" "form:" "Event-Handler" "double-click-handler:" "reorderable?:" "draggable?:" "Favorites-Tree")
        {Lisp-Entry "on-double-click" () 142 11 ("get-host" "on-ok" "evt")}}}})
"Favorites-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorites-Editor.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorites-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Favorites-Editor" () 45 7 ("Descendants-Editor")
        {Lisp-Entry "form-model" () 48 11 ("nextmethod" "else" "Favorites-Tree" "tree" "get-name" "case" "form")}}}})
"Favorites-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorites-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorites-Manager" () 37 9 ("jazz")
      {Lisp-Entry "read-favorites" () 57 13 ("err" "continue-handler:" "install-context" "read-from-file" "instantiate" "favorites" "get-process" "process" "exists?" "when" "User" "File" "file" "let" "dynamic" "function" "with-safe-execution")}
      {Lisp-Entry "Favorites-Manager" () 71 7 ("width:" "title:" "descendant" "highlight-edited?:" "show-header?:" "tree" "flat?:" "scroller" "center" "location:" "descendants" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Exit-Listener" "Editor-View")
        {Lisp-Entry "external-name" () 84 16 ("favorites-manager" "rest")}
        {Lisp-Entry "palette-class" () 94 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 99 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 104 16 ()}
        {Lisp-Entry "get-tools-view" () 113 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 117 11 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" () 127 11 ("tree" "descendants" "locate")}
        {Lisp-Entry "Favorites-Manager-Controller" () 137 9 ("Editor-View-Controller")
          {Lisp-Entry "document-status" () 140 13 ()}}
        {Lisp-Entry "new-controller" () 145 11 ("self" "Favorites-Manager-Controller" "new")}
        {Lisp-Entry "install" () 154 11 ("read-favorites" "set-client" "get-application" "add-exit-listener" "self" "locate" "set-editor" "false" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "resize-center" () 167 11 ("descendants" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-launch" () 171 18 ("launch-selection" "evt")}
        {Lisp-Entry "prepare-exit" () 175 11 ("save" "get-modified?" "when")}
        {Lisp-Entry "launch-selection" () 185 18 ("launch" "bell" "null?" "if" "selected-component" "favorite" "get-tree" "tree" "let*")}
        {Lisp-Entry "add-to-favorites" () 198 18 ("value" "property" "dynamic" "function" "for-each-property" "set-property" "designer" "add-child" "title:" "new" "apply" "favorite" "let" "when" "client" ":default-root" ":default-title" "Favorites-Adder" "get-modal" "parent" "receive" "initargs" "title" "class")}
        {Lisp-Entry "import-favorites" () 214 11 ("with-update-locked" "recursive?:" "true" "directories?:" "list" "URL" ":url" "Favorite-URL" "favorite" "cons" "set!" "null?" "extract-url" "url" "get-extension" "=" "file?" "and" "when" "set-property" "designer" "add-child" "false" "visible?:" "Group" "new" "set" "directory?" "if" "title" "let" "get-base" "user-message" "pathname" "iterate-directory" "dynamic" "function" "proc" "bad" "title:" "BrowseFolder-Dialog" "get-modal" "directory" "selected-component" "component" "get-tree" "tree" "letrec")}
        {Lisp-Entry "extract-url" () 246 11 ("cdr" "set!" "0" "subseq" "=" "4" "length" ">=" "when" "car" "line" "not" "not-null?" "and" "while" "found" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "new-favorites-menu" () 262 18 ("layout-menu" "import-favorites" "import-separator" "Browser-View" "in-manifest?" "not" "end-open-group" "false" "open" "set-visible?" "Favorite" "car" "is-not?" "1" "length" "/=" "or" "when" "selected-components" "components" "descendants" "locate" "tree" "get-tree" "client:" "Favorites-Menu" "new" "menu" "let*" "new-favorites-menu" "unimplemented")}}
      {Lisp-Entry "Favorites-Menu" () 283 7 ("end-open-group" "on-launch" "form:" "Event-Handler" "action-handler:" "default?:" "add-item" "before:" "title:" "open" "name:" "Component-Menu")
        {Lisp-Entry "on-launch" () 292 11 ("launch-selection" "evt")}
        {Lisp-Entry "on-import-favorites" () 297 11 ("import-favorites" "evt")}
        {Lisp-Entry "on-properties" () 302 11 ("show-properties" "evt")}}}})
"Favorites-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Favorites-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Favorites-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Favorites-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 58 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 62 11 ("false")}
        {Lisp-Entry "can-move-component?" () 66 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 70 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 74 11 ("Favorite-Configuration" "list")}
        {Lisp-Entry "get-addable-details" () 79 11 ("file" "shortcut")}}}})
"Favorites-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "favorite" "Favorites-Tree.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.favorite.Favorites-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Favorites-Tree" () 47 7 ("show-branches?:" "multiple-selection?:" "auto-expand/collapse?:" "reorderable?:" "draggable?:" ":icons" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "context-menu" () 54 11 ("new-favorites-menu" "track-popup-menu" "dynamic" "function" "with-context-click" "Favorites-Manager" "is?" "when" "get-guest" "guest" "get-host" "host" "let*" "pos")}
        {Lisp-Entry "update-selection" () 63 11 ("selected-components" "expand-state")}
        {Lisp-Entry "row-state" () 67 11 ("collapsed" "expanded" "1" "" "if" "level" "update?" "component")}
        {Lisp-Entry "double-click" () 73 11 ("player" "get-guest" "launch-selection" "nextmethod" "pos")}
        {Lisp-Entry "key-press" () 78 11 ("nextmethod" "else" "player" "get-guest" "launch-selection" "case" "key")}
        {Lisp-Entry "addable-root-classes" () 84 11 ("Favorite-URL" "Favorite-Symbol" "Favorite-Search" "Favorite-Launch" "Favorite-File" "Favorite-Event" "Favorite-Directory" "Favorite-Clipboard" "Group" "list")}}}})
"Field-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Field-Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.Field-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Field-Declaration" () 40 7 ("Declaration")}}})
"Field-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Field-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Field-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Field-Doc" () 45 7 ("Definition-Doc")
        {Lisp-Entry "construct-literal" () 48 16 (":doc" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-image" () 58 16 ("Bitmap-Resource")}}}})
"Figure"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "layout" "Figure.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.layout.Figure" () 37 9 ("jazz")
      {Lisp-Entry "Figure-Class" () 48 7 ("Component-Class")
        {Lisp-Entry "property-presentation" () 56 11 ("nextmethod" "else" "size" "position" "location" "field-name" "case" "property")}}
      {Lisp-Entry "Figure" () 64 7 ("Component" "Figure-Class")
        {Lisp-Entry "location" () 67 12 ("set-location" "get-location")}
        {Lisp-Entry "position" () 68 12 ("set-position" "get-position" "default-position")}
        {Lisp-Entry "size" () 69 12 ("set-size" "get-size" "default-size")}
        {Lisp-Entry "get-location" () 76 26 ("location")}
        {Lisp-Entry "set-location" () 80 26 ("location" "set!" "loc")}
        {Lisp-Entry "find-child-located" () 84 18 ("children" "get-location" "eq?" "child" "dynamic" "function" "find-if" "location")}
        {Lisp-Entry "default-position" () 95 29 ("0" "Point")}
        {Lisp-Entry "get-position" () 99 26 ("position")}
        {Lisp-Entry "get-effective-position" () 103 26 ("get-position")}
        {Lisp-Entry "set-position" () 107 26 ("position" "set!" "pos")}
        {Lisp-Entry "move-figure" () 111 18 ("get-v" "get-h" "+" "Point" "new" "set-position" "get-position" "pos" "let" "dv" "dh")}
        {Lisp-Entry "get-center" () 116 18 ("get-height" "get-v" "2" "size" "get-width" "quotient" "position" "get-h" "+" "Point" "new")}
        {Lisp-Entry "get-bottom-right" () 122 18 ("get-height" "get-v" "size" "get-width" "position" "get-h" "+" "Point" "new")}
        {Lisp-Entry "default-size" () 133 29 ("Dimension")}
        {Lisp-Entry "get-size" () 137 26 ("size")}
        {Lisp-Entry "get-effective-size" () 141 26 ("get-size")}
        {Lisp-Entry "set-size" () 145 26 ("size" "set!" "sz")}
        {Lisp-Entry "size-figure" () 149 18 ("get-height" "get-width" "+" "Dimension" "new" "set-size" "get-size" "size" "let" "dh" "dw")}}}})
"Figure-Mover"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "action" "Figure-Mover.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.action.Figure-Mover" () 37 9 ("jazz")
      {Lisp-Entry "Figure-Mover" () 45 7 ("Component")
        {Lisp-Entry "client" () 48 12 ("set-client" "get-client")}
        {Lisp-Entry "dragging?" () 51 8 ("false")}
        {Lisp-Entry "base-position" () 52 8 ()}
        {Lisp-Entry "get-client" () 60 18 ("client")}
        {Lisp-Entry "set-client" () 64 18 ("child" "client" "set!" "clt")}
        {Lisp-Entry "on-mouse-down" () 73 11 ("get-sender" "acquire-capture" "get-position" "base-position" "true" "dragging?" "set!" "evt")}
        {Lisp-Entry "on-drag-move" () 79 11 ("get-v" "get-h" "client" "move-figure" "base-position" "get-position" "-" "delta" "let" "dragging?" "when" "evt")}
        {Lisp-Entry "on-drag-up" () 85 11 ("false" "set!" "get-sender" "release-capture" "dragging?" "when" "evt")}}}})
"Figure-Picker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "debuggee" "Figure-Picker.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.debuggee.Figure-Picker" () 37 9 ("jazz")
      {Lisp-Entry "Feedback-Player" () 55 12 ()}
      {Lisp-Entry "Feedback-View" () 58 12 ()}
      {Lisp-Entry "Feedback-Root-Rect" () 61 12 ()}
      {Lisp-Entry "Feedback-View-Rect" () 64 12 ()}
      {Lisp-Entry "Feedback-Row-Rect" () 67 12 ()}
      {Lisp-Entry "setup-feedback" () 71 13 ("redraw-window" "eq?" "and" "if" "Feedback-Root-Rect" "set!" "old-player" "let" "Feedback-Row-Rect" "Feedback-View-Rect" "/=" "Feedback-View" "Feedback-Player" "neq?" "or" "when" "feedback-info" "row-rect" "view-rect" "root-rect" "player" "receive" "pos" "view" "position" "window" "picker")}
      {Lisp-Entry "feedback-info" () 91 13 ("determine-row-rect" "row-rect" "acquire" "view-rect" "get-bounds" "root-rect" "get-root" "root" "get-display" "display" "get-player" "player" "let*" "values" "null?" "if" "pos" "view" "position" "window" "picker")}
      {Lisp-Entry "determine-row-rect" () 103 13 ("cell-rect" "acquire" "view->tree" "cell" "let" "Tree-View" "is?" "when" "pos" "view" "root")}
      {Lisp-Entry "Overlay-Color" () 115 12 ("Black" "name:" "Color")}
      {Lisp-Entry "Overlay-Transparency" () 118 12 ()}
      {Lisp-Entry "Highlight-Color" () 122 12 ("blue:" "green:" "red:" "Color")}
      {Lisp-Entry "Highlight-Pen" () 125 12 ("Highlight-Color" "color:" "2" "width:" "solid" "style:" "Pen" "new")}
      {Lisp-Entry "Picker-Overlay" () 129 7 ("Overlay")
        {Lisp-Entry "draw-overlay" () 132 11 ("/=" "Feedback-View-Rect" "and" "Feedback-Row-Rect" "Highlight-Pen" "Feedback-Root-Rect" "rectangle" "Feedback-Figure?" "not" "Overlay-Transparency" "Overlay-Color" "draw-colored-overlay" "Draw-Overlays?" "when" "get-root" "neq?" "Feedback-Player" "null?" "or" "if" "height" "width" "dc" "view")}}
      {Lisp-Entry "Figure-Picker" () 149 7 ("Picker")
        {Lisp-Entry "action" () 152 12 ("generate" "accessors")}
        {Lisp-Entry "window" () 153 12 ("generate" "accessors")}
        {Lisp-Entry "menu" () 154 12 ("generate" "accessors")}
        {Lisp-Entry "excluded?" () 155 12 ("generate" "accessors")}
        {Lisp-Entry "feedback" () 156 12 ("generate" "accessors")}
        {Lisp-Entry "tooltips?" () 157 12 ("generate" "accessors")}
        {Lisp-Entry "erase-background" () 165 11 ("hdc")}
        {Lisp-Entry "determine-row-rect-aux" () 174 11 ("cell-rect" "view->tree" "cell" "let" "Tree-View" "is?" "when" "pos" "view" "root")}
        {Lisp-Entry "new-root" () 187 11 ("Figure-Picker-Root" "new")}
        {Lisp-Entry "Figure-Picker-Root" () 192 9 ("view" "fill" "layout-type:" "content" "name:" "Root-View")
          {Lisp-Entry "Figure-Picker-View" () 201 11 ("View")
            {Lisp-Entry "cursor-update" () 204 15 (":spy" ":no" "excluded?" "if" "set-cursor" "pos")}
            {Lisp-Entry "get-tooltip?" () 213 15 ("tooltips?")}
            {Lisp-Entry "get-formatted-tooltip?" () 217 15 ("true")}
            {Lisp-Entry "get-tooltip-context" () 221 15 ("Ansi-Var" "name:" "Font" "font:" "bounds:" "describe-view" "display-description" "text:" "self" "view:" "Tooltip-Context" "new" "player" "bounds" "either" "acquire" "rect" "determine-row-rect-aux" "row-rect" "root" "get-bounds" "view-bounds" "get-root" "view-root" "get-player" "view-player" "let*" "when" "get-v" "get-h" "mouse-figure" "view" "position" "window" "receive" "pos")}
            {Lisp-Entry "display-description" () 238 15 ("format" ":bulleted" "list" "value" "name" "bind" "info" "dynamic" "function" "map" "cons" "description")}}}
        {Lisp-Entry "mouse-move" () 251 11 ("user-message" "null?" "self" "setup-feedback" "true" "eq?" "proc" "let" "feedback" "mouse-figure" "pos" "view" "position" "window" "receive" "clear-user-message" "Report-Figure?" "when" "excluded?" "if" "nextmethod" "v" "h")}
        {Lisp-Entry "mouse-up" () 268 11 ("action" "end-pick" "dynamic" "function" "with-locked-update" "mouse-figure" "pos" "view" "position" "window" "receive" "excluded?" "unless" "nextmethod" "v" "h")}
        {Lisp-Entry "mouse-figure" () 278 11 ("find-drawing" "view" "get-root" "root" "values" "View-Player" "is-not?" "if" "position" "find-child-window" "window" "Point" "new" "self" "parent" "acquire" "pos" "let*" "v" "h")}
        {Lisp-Entry "context-menu" () 295 11 ("processed" "Point" "new" "get-root" "track-popup-menu" "setup-actions" "let" "mouse-figure" "pos" "view" "position" "window" "receive" "close-popups" "bell" "View-Player" "parent" "is-not?" "nextmethod" "menu" "null?" "excluded?" "or" "if" "v" "h")}
        {Lisp-Entry "setup-actions" () 308 11 ("get-children" "execute:" "Event-Handler" "set-action-handler" "invoke" "self" ":action" "Action-Event" "new" "apply" "get-properties" ":pos" "view:" "position:" ":window" "augment" "properties" "when" "end-pick" "event" "execute" "get-action-handler" "action-handler" "let*" "item" "dynamic" "function" "for-each" "pos" "view" "position" "window" "menu")}}}})
"Figure-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Figure-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Figure-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Figure-Preferences" () 45 7 ("Preferences")
        {Lisp-Entry "location" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "position" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "size" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "presentation-property?" () 58 11 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 62 11 ("name" "->string" "title" "either")}
        {Lisp-Entry "set-presentation" () 66 11 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "apply-preferences" () 75 11 ("set-size" "size" "set-position" "position" "when" "find-client" "either" "let" "client")}
        {Lisp-Entry "save-preferences" () 89 11 ("get-effective-size" "size" "get-effective-position" "position" "set-property" "when" "find-client" "either" "let" "client" "designer")}
        {Lisp-Entry "find-client" () 101 29 ()}}}})
"File-Base-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "File-Base-Menu.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.File-Base-Menu" () 37 9 ("jazz")
      {Lisp-Entry "File-Base-Menu" () 46 7 ("exit" "on-exit-application" "end-print-group" "print-preview" "on-print-preview" "print-layout" "on-print-layout" "print" "on-print" "end-revert-group" "revert-saved" "on-revert-saved" "end-save-group" "save-all" "on-save-all" "save-as" "on-save-as" "save" "guest" "disabled-icon:" "on-save" "end-open-group" "close-all" "on-close-all" "close" "on-close" "open" "on-open" "new" "application" "Action" "action:" "Bitmap-Resource" "icon:" "on-new" "name:" "title:" "Menu")}}})
"File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "File-Entry.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.catalog.entry.File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "File-Entry" () 45 7 ("Catalog-Entry")
        {Lisp-Entry "catalog" () 48 8 ()}
        {Lisp-Entry "marked?" () 49 8 ()}
        {Lisp-Entry "file" () 50 8 ()}
        {Lisp-Entry "time" () 51 8 ()}
        {Lisp-Entry "definitions" () 52 8 ()}
        {Lisp-Entry "category-name" () 53 8 ()}
        {Lisp-Entry "construct-literal" () 57 16 ("self" "new" "definitions" "time" "file" "context")}
        {Lisp-Entry "initialize" () 61 11 ("set-file-definition" "self" "set-parent" "definition" "dynamic" "function" "for-each" "true" "marked?" "get-base" "category-name" "definitions" "time" "file" "catalog" "set!" "nextmethod" "d" "t" "f" "c")}
        {Lisp-Entry "print" () 75 11 ("file" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" () 81 26 ("definitions" "print-catalog" "definition" "dynamic" "function" "for-each" "time" "file" "self" "class-of" "type-name" "identifier-name" "2" "format" "not" "when" "printer" "first?")}
        {Lisp-Entry "get-catalog" () 99 18 ("catalog")}
        {Lisp-Entry "set-catalog" () 103 18 ("catalog" "set!" "cat")}
        {Lisp-Entry "get-marked?" () 107 18 ("marked?")}
        {Lisp-Entry "set-marked?" () 111 18 ("marked?" "set!" "flag")}
        {Lisp-Entry "get-file" () 115 11 ("file")}
        {Lisp-Entry "get-moniker" () 119 11 ("file")}
        {Lisp-Entry "get-time" () 123 18 ("time")}
        {Lisp-Entry "get-definitions" () 127 11 ("definitions")}
        {Lisp-Entry "get-category-name" () 131 18 ("category-name")}
        {Lisp-Entry "get-file-definition" () 135 11 ("self")}
        {Lisp-Entry "get-definition" () 139 18 ("definitions" "get-name" "=" "definition" "dynamic" "function" "find-if" "name")}
        {Lisp-Entry "get-image" () 150 11 ("Bitmap-Resource")}
        {Lisp-Entry "present-detailed" () 154 11 ("file" "get-name")}
        {Lisp-Entry "update-indexes" () 163 11 ("definitions" "update-indexes" "definition" "dynamic" "function" "for-each" "references-index" "definitions-index")}
        {Lisp-Entry "insert-definition" () 174 11 ("get-definitions" "insert-definitions" "sort?" "father" "tree")}}}})
"File-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "File-Menu.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.File-Menu" () 37 9 ("jazz")
      {Lisp-Entry "File-Menu" () 46 7 ("guest" "Action" "action:" "end-revert-group" "before:" "title:" "compare-saved" "name:" "File-Base-Menu")}}})
"File-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "parser" "File-Parser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.parser.File-Parser" () 37 9 ("jazz")
      {Lisp-Entry "File-Parser" () 45 7 ("Object")
        {Lisp-Entry "catalog" () 48 8 ()}
        {Lisp-Entry "references?" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("references?~self" "catalog~self" "set!" "nextmethod" "false" "references?" "references?:" "catalog")}
        {Lisp-Entry "parse" () 58 35 ("time" "file")}
        {Lisp-Entry "parse-zipped" () 62 26 ("error" "zipped")}}}})
"File-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "File-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.File-Row" () 37 9 ("jazz")
      {Lisp-Entry "File-Row" () 46 7 ("Pathname-Row")
        {Lisp-Entry "mode" () 49 12 ("set-mode" "get-mode")}
        {Lisp-Entry "parameters" () 50 12 ("set-parameters" "get-parameters")}
        {Lisp-Entry "initialize" () 58 11 ("set-parameters" "set-mode" "file" "editor" "set-protocol" "nextmethod" "apply" "others" "parameters" "open" "mode" "bind-keywords" "rest")}
        {Lisp-Entry "get-mode" () 71 18 ("editor" "get-mode")}
        {Lisp-Entry "set-mode" () 75 18 ("editor" "set-mode" "value")}
        {Lisp-Entry "get-parameters" () 79 18 ("editor" "get-parameters")}
        {Lisp-Entry "set-parameters" () 83 18 ("editor" "set-parameters" "value")}
        {Lisp-Entry "combo-choose" () 92 11 ("true" "focus-editor" "enter-edited-value" "set-edited-value" "parameters" "OpenFile-Dialog" "get-modal" "" "apply" "file" "let")}}}})
"Filing-Catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "catalog" "Filing-Catalog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.catalog.Filing-Catalog" () 37 9 ("jazz")
      {Lisp-Entry "Filing-Catalog" () 45 7 ("Catalog")
        {Lisp-Entry "file" () 48 8 ()}
        {Lisp-Entry "active?" () 49 8 ("false")}
        {Lisp-Entry "loaded?" () 50 8 ("false")}
        {Lisp-Entry "modified?" () 51 8 ("false")}
        {Lisp-Entry "initialize" () 54 11 ("active?~self" "file~self" "set!" "nextmethod" "active?" "file" "name")}
        {Lisp-Entry "get-file" () 65 18 ("file")}
        {Lisp-Entry "get-active?" () 69 11 ("active?")}
        {Lisp-Entry "set-active?" () 73 11 ("deactivate" "activate" "if" "set!" "active?" "/=" "when" "flag")}
        {Lisp-Entry "get-modified?" () 81 18 ("modified?")}
        {Lisp-Entry "set-modified?" () 85 18 ("set!" "modified?" "/=" "when" "state")}
        {Lisp-Entry "get-category-definitions" () 95 11 ("get-definitions" "Category-Entry" "collect-type" "name")}
        {Lisp-Entry "iterate-content" () 104 26 ("proc")}
        {Lisp-Entry "update" () 113 26 ("name" "reset-marks" "sweep" "scan" "present" "user-message" "when" "set-active?" "true" "report?" "report?:")}
        {Lisp-Entry "reset-marks" () 124 29 ()}
        {Lisp-Entry "scan" () 133 21 ("scan-directories" "throw-cancel" "Range" "new" "selection:" "get-source" "edit-document" "get-end" "end" "get-start" "start" "get-application" "appl" "let" "get-message" "message-box" "err" "Parse-Error" "catch" "reset-marks")}
        {Lisp-Entry "scan-directories" () 145 29 ()}
        {Lisp-Entry "scan-directory" () 149 21 ("false" "directories?:" "files?:" "increase!" "process-file" "when" "file" "dynamic" "function" "iterate-directory" "0" "processed" "let" "true" "recursive?" "recursive?:" "directory")}
        {Lisp-Entry "process-file" () 161 21 ("add-entry" "update-entry" "scan-file" "entry" "let" "set-modified?" "false" "true" "set-marked?" "begin" "if" "get-unmodified-file-entry" "definition" "get-modification-time" "time" "get-base" "name" "let*" "scan-file?" "when" "get-message" "debug" "err" "Parse-Error" "catch" "file")}
        {Lisp-Entry "get-unmodified-file-entry" () 181 11 ("get-time" "=" "and" "when" "get-file-entry" "old" "let" "time" "file" "name")}
        {Lisp-Entry "scan-file?" () 187 29 ("false" "file")}
        {Lisp-Entry "scan-file" () 191 29 ("time" "file")}
        {Lisp-Entry "update-entry" () 195 29 ("entry")}
        {Lisp-Entry "add-entry" () 199 29 ("entry" "name")}
        {Lisp-Entry "sweep" () 209 29 ()}
        {Lisp-Entry "marked?" () 214 29 ("get-file-entry" "get-marked?" "definition")}
        {Lisp-Entry "sweep-hashtable" () 219 29 ("hash-set!" "not" "cddr" "set-cdr!" "false" "set-marked?" "set!" "begin" "if" "car" "definition" "not-null?" "while" "cdr" "list" "previous" "let" "when" "definitions" "class-name" "dynamic" "function" "for-each-hash" "reset?" "marked?" "hashtable")}
        {Lisp-Entry "save" () 244 26 ("false" "set-modified?" "save-content" "present" "name" "user-message" "modified?" "when")}
        {Lisp-Entry "save-content" () 253 29 ("print-catalog" "definition" "let" "definitions" "name" "bind" "false" "set!" "format" "not" "if" "info" "dynamic" "function" "for-each" "file" "File-Printer" "new" "printer" "with-closed" "true" "first?" "car" "key:" "" "sort" "sorted" "gather-definitions" "all" "let*")}
        {Lisp-Entry "gather-definitions" () 274 11 ("cons" "set!" "value" "property" "dynamic" "function" "iterate-content" "list" "let")}}}})
"Flat-Look"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "look" "Flat-Look.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.look.Flat-Look" () 37 9 ("jazz")
      {Lisp-Entry "Flat-Look" () 45 7 ("Look")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-element" () 62 11 ("document/scrollbar/flat?" "document/header/flat?" "tool/scrollbar/flat?" "tool/header/flat?" "group/border/flat?" "outline/edge/flat?" "true" "entry/edge/flat?" "case" "name")}}}})
"Flow-Layout"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "layout" "Flow-Layout.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.layout.Flow-Layout" () 37 9 ("jazz")
      {Lisp-Entry "Flow-Layout" () 45 7 ("Layout")
        {Lisp-Entry "insets" () 48 12 ("generate" "accessors" "0" "Rect")}
        {Lisp-Entry "padding" () 49 12 ("generate" "accessors" "0")}
        {Lisp-Entry "layout" () 57 11 ("get-height" "get-h" "Dimension" "set-size" "center" "decrease!" "let*" "for-each-reversed" "padding" "get-width" "increase!" "0" "+" "set-position" "get-size" "size" "=" "get-visible?" "and" "when" "get-location" "standardize-location" "offset" "where" "receive" "figure" "dynamic" "function" "for-each" "get-top" "get-right" "-" "Point" "new" "tail" "insets" "rect-position" "head" "let" "rest" "height" "width" "figures")}
        {Lisp-Entry "standardize-location" () 85 11 ("values" "0" "second" "pair?" "offset" "first" "else" "symbol?" "head" "integer?" "not" "or" "cond" "where" "let" "location")}}}})
"Focus-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Focus-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.event.Focus-Event" () 37 9 ("jazz")
      {Lisp-Entry "Focus-Event" () 44 7 ("Event")
        {Lisp-Entry "old" () 47 8 ()}
        {Lisp-Entry "new" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("new~self" "old~self" "set!" "nextmethod" "new" "old" "sender" "kind")}
        {Lisp-Entry "print" () 57 11 ("dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-old" () 68 18 ("old")}
        {Lisp-Entry "get-new" () 72 18 ("new")}}}})
"Font"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Font.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Font" () 37 9 ("jazz")
      {Lisp-Entry "Font" () 46 7 ("Object")
        {Lisp-Entry "name" () 49 8 ()}
        {Lisp-Entry "font-name" () 50 8 ()}
        {Lisp-Entry "point-size" () 51 8 ()}
        {Lisp-Entry "color" () 52 8 ()}
        {Lisp-Entry "bold?" () 53 8 ("false")}
        {Lisp-Entry "italic?" () 54 8 ("false")}
        {Lisp-Entry "underline?" () 55 8 ("false")}
        {Lisp-Entry "monospace?" () 56 8 ("false")}
        {Lisp-Entry "handle" () 57 8 ()}
        {Lisp-Entry "source" () 58 8 ()}
        {Lisp-Entry "metrics" () 59 8 ()}
        {Lisp-Entry "all-widths" () 60 8 ()}
        {Lisp-Entry "cairo-font" () 61 8 ()}
        {Lisp-Entry "initialize" () 64 11 ("cairo_win32_font_face_create_for_logfontw" "cairo-font~self" "direct" "DEFAULT_PITCH" "DEFAULT_QUALITY" "CLIP_DEFAULT_PRECIS" "OUT_DEFAULT_PRECIS" "ANSI_CHARSET" "1" "FW_NORMAL" "FW_BOLD" "if" "0" "calculate-height" "CreateFont" "monospace?" "monospace?~self" "underline?" "underline?~self" "italic?" "italic?~self" "bold?" "bold?~self" "color" "color~self" "point-size" "point-size~self" "font-name" "font-name~self" "else" "destroy-mandatory" "indirect" "CreateFontIndirect" "logfont" "get-logfont" "fill-info" "source" "GetStockObject" "handle" "stock" "cond" "name~self" "set!" "nextmethod" "name" "name:")}
        {Lisp-Entry "calculate-height" () 99 11 ("*" "/" "round" "point-size")}
        {Lisp-Entry "calculate-point-size" () 103 11 ("*" "/" "round" "height")}
        {Lisp-Entry "fill-info" () 107 11 ("false" "monospace?" "LOGFONTW-lfUnderline-ref" "underline?" "0" "LOGFONTW-lfItalic-ref" "/=" "italic?" "FW_BOLD" "LOGFONTW-lfWeight-ref" ">=" "bold?" "LOGFONTW-lfHeight-ref" "calculate-point-size" "point-size" "LOGFONTW-lfFaceName-ref" "font-name" "set!" "logfont")}
        {Lisp-Entry "destroy" () 116 11 ("nextmethod" "cairo-font" "cairo_font_face_destroy" "handle" "DeleteObject" "stock" "source" "neq?" "when")}
        {Lisp-Entry "compare-object" () 123 11 (":not-equal" "else" "get-handle" "handle" "get-underline?" "underline?" "get-italic?" "italic?" "get-bold?" "bold?" "get-color" "color" "get-point-size" "point-size" "get-font-name" "font-name" "direct" "source" ":equal" "get-name" "=" "name" "and" ":incompatible" "Font" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 142 11 ("dynamic" "function" "print-unreadable" "else" "monospace?" "underline?" "italic?" "bold?" "color" "point-size" "font-name" "self" "class-of" "type-name" "identifier-name" "format" "name" "cond" "readably" "printer")}
        {Lisp-Entry "get-name" () 168 18 ("name")}
        {Lisp-Entry "get-font-name" () 172 18 ("font-name")}
        {Lisp-Entry "get-point-size" () 176 18 ("point-size")}
        {Lisp-Entry "get-color" () 180 18 ("color")}
        {Lisp-Entry "get-bold?" () 184 18 ("bold?")}
        {Lisp-Entry "get-italic?" () 188 18 ("italic?")}
        {Lisp-Entry "get-underline?" () 192 18 ("underline?")}
        {Lisp-Entry "get-monospace?" () 196 18 ("monospace?")}
        {Lisp-Entry "get-cairo-font" () 200 18 ("cairo-font")}
        {Lisp-Entry "get-handle" () 204 11 ("handle")}
        {Lisp-Entry "get-logfont" () 208 18 ("LOGFONTW*->PVOID" "size-of-LOGFONTW" "handle" "GetObject" "LOGFONTW-make" "info" "let")}
        {Lisp-Entry "Work-DC" () 219 14 ()}
        {Lisp-Entry "work-dc" () 223 15 ("Cairo-Memory-Surface" "new" "set!" "Work-DC" "unless")}
        {Lisp-Entry "text-extent" () 229 18 ("get-text-extent" "self" "work-dc" "set-font" "text")}
        {Lisp-Entry "text-width" () 234 18 ("get-text-width" "self" "work-dc" "set-font" "text")}
        {Lisp-Entry "font-height" () 239 18 ("get-font-height" "self" "work-dc" "set-font")}
        {Lisp-Entry "get-metrics" () 249 18 ("get-text-metrics" "Font-Metrics" "new" "self" "work-dc" "set-font" "begin" "set!" "metrics" "unless")}
        {Lisp-Entry "get-all-widths" () 258 18 ("get-char-widths" "self" "work-dc" "set-font" "begin" "set!" "all-widths" "unless")}
        {Lisp-Entry "get-widths" () 267 18 ("get-char-widths" "self" "work-dc" "set-font" "rest")}
        {Lisp-Entry "get-char-width" () 272 18 ("0" ":last" ":first" "get-char-widths" "self" "work-dc" "set-font" "get-all-widths" "int-array-ref" "" "if" "char->integer" "n" "let" "c")}
        {Lisp-Entry "extend-font-name" () 285 18 ("monospace?" "monospace?:" "underline?" "underline?:" "italic?" "italic?:" "bold?" "bold?:" "point-size" "point-size:" "font-name:" "Font" "new" "name")}
        {Lisp-Entry "extend-point-size" () 295 18 ("monospace?" "monospace?:" "underline?" "underline?:" "italic?" "italic?:" "bold?" "bold?:" "point-size:" "font-name" "font-name:" "Font" "new" "point-size")}
        {Lisp-Entry "toggle-bold" () 305 18 ("monospace?" "monospace?:" "underline?" "underline?:" "italic?" "italic?:" "bold?" "not" "bold?:" "point-size" "point-size:" "font-name" "font-name:" "Font" "new")}
        {Lisp-Entry "toggle-italic" () 315 18 ("monospace?" "monospace?:" "underline?" "underline?:" "italic?" "not" "italic?:" "bold?" "bold?:" "point-size" "point-size:" "font-name" "font-name:" "Font" "new")}
        {Lisp-Entry "toggle-underline" () 325 18 ("monospace?" "monospace?:" "underline?" "not" "underline?:" "italic?" "italic?:" "bold?" "bold?:" "point-size" "point-size:" "font-name" "font-name:" "Font" "new")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "freetype" "Font.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.freetype.Font" () 0 9 ("jazz")
      {Lisp-Entry "Font" () 8 7 ("Object")
        {Lisp-Entry "name" () 10 8 ("generate")}
        {Lisp-Entry "path" () 11 8 ("generate")}
        {Lisp-Entry "point-size" () 12 8 ("generate")}
        {Lisp-Entry "color" () 13 8 ("generate")}
        {Lisp-Entry "bold?" () 14 8 ("generate")}
        {Lisp-Entry "italic?" () 15 8 ("generate")}
        {Lisp-Entry "underline?" () 16 8 ("generate")}
        {Lisp-Entry "monospace?" () 17 8 ("generate")}
        {Lisp-Entry "ft-handle" () 18 8 ("generate")}
        {Lisp-Entry "cairo-handle" () 19 8 ("generate")}
        {Lisp-Entry "initialize" () 21 11 ("make-cairo-handle" "set-cairo-handle" "make-ft-handle" "set-ft-handle" "monospace?" "set-monospace?" "underline?" "set-underline?" "italic?" "set-italic?" "bold?" "set-bold?" "color" "set-color" "point-size" "set-point-size" "name" "set-name" "error" "set-path" "path" "if" "self")}
        {Lisp-Entry "destroy" () 47 9 ("get-ft-handle" "FT_Done_Face" "get-cairo-handle" "cairo_font_face_destroy" "self")}
        {Lisp-Entry "make-ft-handle" () 52 9 ("0" "get-path" "ft-library" "FT_New_Face" "make-FT_Face" "face" "let" "self")}
        {Lisp-Entry "make-cairo-handle" () 57 9 ("0" "get-ft-handle" "cairo_ft_font_face_create_for_ft_face" "self")}
        {Lisp-Entry "get-size" () 60 16 ("get-point-size" "calculate-size" "self")}
        {Lisp-Entry "calculate-size" () 63 9 ("*" "/" "point-size" "self")}}}})
"Font-Metrics"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Font-Metrics.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Font-Metrics" () 37 9 ("jazz")
      {Lisp-Entry "Font-Metrics" () 46 7 ("Object")
        {Lisp-Entry "metrics" () 49 15 ()}
        {Lisp-Entry "initialize" () 52 11 ("metrics~self" "set!" "nextmethod" "metrics")}
        {Lisp-Entry "print" () 57 11 ("dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-height" () 68 18 ("metrics" "cairo_font_extents_t-height-ref" "round")}
        {Lisp-Entry "get-ascent" () 72 18 ("metrics" "cairo_font_extents_t-ascent-ref" "round")}
        {Lisp-Entry "get-max-char-width" () 76 18 ("metrics" "cairo_font_extents_t-max_x_advance-ref" "round")}}}})
"Font-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Font-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Font-Row" () 37 9 ("jazz")
      {Lisp-Entry "Font-Row" () 45 7 ("Combo-Row")}
      {Lisp-Entry "Font-Row" () 51 7 ("Combo-Row")
        {Lisp-Entry "initialize" () 54 11 ("Fonts" "list" "->string" "title" "Font" "eval-symbol" "font" "let" "name" "dynamic" "function" "map" "set-choices" "nextmethod" "apply" "rest")}}}})
"Foreign-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Foreign-Domain.fusion"} {Time 128363203480000000L}
    {Lisp-Entry "jazz.library.domain.Foreign-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Foreign-Domain" () 44 7 ("Domain")}
      {Lisp-Entry "Foreign-Domain" () 50 7 ("criteria" "objects" "initialize" "key" "nullable?" "Domain")
        {Lisp-Entry "validate-value" () 64 11 ("property:" "violation-message" "message:" "Integrity-Violation" "new" "add-violation" "member?" "not" "when" "key" "foreign-values" "values" "let" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "foreign-values" () 70 11 ("criteria" "search-descendants" "component-name" "map" "child" "foreign" "let" "key" "client")}
        {Lisp-Entry "violation-message" () 75 29 ("else" "join" "pair?" "key" "null?" "cond" "format" "value")}
        {Lisp-Entry "present" () 88 11 ("join" "pair?" "null?" "if" "value")}
        {Lisp-Entry "setup-entry" () 101 11 ("key" "foreign-choices" "combo" "locate" "set-choices" "parent:" "Foreign-Entry" "new" "entry" "let" "client" "view")}
        {Lisp-Entry "foreign-choices" () 106 11 ("list" "get-name" "name" "component" "dynamic" "function" "map" "child" "get-children" "either" "objects" "let" "key" "client")}
        {Lisp-Entry "setup-list-entry" () 114 11 ("key" "setup" "parent:" "Foreign-List-Entry" "new" "entry" "let" "client" "view")}}}})
"Foreign-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "entry" "Foreign-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.entry.Foreign-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Foreign-Entry" () 47 7 ("Ansi-Var" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "body" "combo" "edge" "border-type:" "border" "name:" "Property-Entry")
        {Lisp-Entry "get-value" () 62 11 ("combo" "locate" "get-value")}
        {Lisp-Entry "set-value" () 66 11 ("combo" "locate" "set-value" "value")}
        {Lisp-Entry "get-modified?" () 70 11 ("combo" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" () 74 11 ("combo" "locate" "set-modified?" "value")}}}})
"Foreign-List-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "choosers" "Foreign-List-Chooser.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.choosers.Foreign-List-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Foreign-List-Chooser" () 48 7 ("on-cancel" "cancel" "default?:" "on-ok" ":host" "Event-Handler" "action-handler:" "title:" "ok" "8" "Point" "position:" "entry" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "foreign" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "foreign-objects" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "key" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "list?" () 54 12 ("generate" "accessors" "true")}
        {Lisp-Entry "allow-duplicates?" () 55 12 ("generate" "accessors" "false")}
        {Lisp-Entry "all" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "value" () 57 12 ("generate" "accessors")}
        {Lisp-Entry "finish" () 68 11 ("value" "set-value" "allow-duplicates?" "set-allow-duplicates?" "list?" "set-list?" "all" "get-children" "foreign-objects" "null?" "key" "map" "foreign" "if" "set-all" "present" "entry" "locate" "set-presenter" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" () 77 11 ("list?" "if" "get-host" "set-title" "entry" "locate" "host-install" "nextmethod" "host")}
        {Lisp-Entry "present" () 90 11 ("join" "atom?" "if" "object")}
        {Lisp-Entry "get-modal-result" () 101 11 ("entry" "locate" "get-result")}}}})
"Foreign-List-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "entry" "Foreign-List-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.entry.Foreign-List-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Foreign-List-Entry" () 48 7 ("to-entry" "to-tree" "to-border" "on-remove" "remove" "on-add" "action-handler:" "title:" "add" "width:" "display-images?:" "toplevel-controls?:" "controls?:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-tab-press" "tab-press-handler:" "on-double-click" "double-click-handler:" "on-selection-change" "form:" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "show-unfocused-selection?:" "multiple-selection?:" "row" "selection-mode:" "from-entry" "filled-column:" "show-header?:" "from-tree" "document" "style:" "shown?:" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "from-border" "name:" "Dimension" "size:" "Property-Entry")
        {Lisp-Entry "list?" () 51 12 ("set-list?" "get-list?" "true")}
        {Lisp-Entry "allow-duplicates?" () 52 12 ("set-allow-duplicates?" "get-allow-duplicates?" "false")}
        {Lisp-Entry "presenter" () 53 12 ("set-presenter" "get-presenter")}
        {Lisp-Entry "all" () 54 12 ("set-all" "get-all")}
        {Lisp-Entry "value" () 55 12 ("set-value" "get-value")}
        {Lisp-Entry "to" () 58 8 ()}
        {Lisp-Entry "host-install" () 81 21 ("focus-and-select" "from-tree" "locate" "tree" "let")}
        {Lisp-Entry "dialog-class" () 92 16 ("Foreign-List-Entry-Dialog")}
        {Lisp-Entry "Foreign-List-Entry-Dialog" () 97 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "get-result" () 104 18 ("" "sort" "list?" "if" "to->value" "value" "let")}
        {Lisp-Entry "get-presenter" () 116 18 ("presenter")}
        {Lisp-Entry "set-presenter" () 120 18 ("update" "presenter" "set!" "value")}
        {Lisp-Entry "get-all" () 125 18 ("all")}
        {Lisp-Entry "set-all" () 129 18 ("update" "all" "set!" "value")}
        {Lisp-Entry "get-value" () 134 11 ("value")}
        {Lisp-Entry "set-value" () 138 11 ("update" "value->to" "to" "value" "set!" "v")}
        {Lisp-Entry "get-list?" () 144 18 ("list?")}
        {Lisp-Entry "set-list?" () 148 18 ("from-tree" "set-multiple-selection?" "if" "add" "locate" "set-title" "value->to" "to" "list?" "set!" "value")}
        {Lisp-Entry "get-allow-duplicates?" () 155 18 ("allow-duplicates?")}
        {Lisp-Entry "set-allow-duplicates?" () 159 18 ("allow-duplicates?" "set!" "value")}
        {Lisp-Entry "value->to" () 164 11 ("list" "null?" "value" "list?" "if")}
        {Lisp-Entry "to->value" () 173 11 ("car" "null?" "to" "list?" "if")}
        {Lisp-Entry "setup" () 186 21 ("get-children" "get-name" "component" "dynamic" "function" "map" "set-all" "get-creator" "child" "foreign" "let" "key" "client")}
        {Lisp-Entry "layout" () 198 11 ("remove" "+" "add" "Dimension" "set-size" "0" "Point" "new" "set-position" "buttons-pos" "2" "-" "quotient" "tree-width" "to-border" "to" "from-border" "locate" "from" "get-height" "height" "get-width" "width" "get-size" "size" "let*")}
        {Lisp-Entry "on-selection-change" () 219 11 ("update-buttons" "evt")}
        {Lisp-Entry "on-double-click" () 223 11 ("on-remove" "remove" "to-tree" "on-add" "add" "locate" "get-enabled?" "when" "from-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-add" () 230 11 ("true" "set-modified?" "acquire-focus" "user-data-indexes" "set-selection" "allow-duplicates?" "update" "append" "list?" "if" "to" "set!" "get-selected-data" "values" "to-tree" "locate" "from-tree" "let*" "evt")}
        {Lisp-Entry "on-remove" () 243 11 ("true" "set-modified?" "user-data-indexes" "set-selection" "acquire-focus" "allow-duplicates?" "unless" "update" "difference" "to" "set!" "get-selected-data" "values" "to-tree" "locate" "from-tree" "let*" "evt")}
        {Lisp-Entry "update-buttons" () 255 11 ("remove" "add" "set-enabled?" "to?" "to-tree" "get-selection" "from?" "locate" "from-tree" "let*")}
        {Lisp-Entry "on-tab-press" () 264 11 ("to-tree" "locate" "focus-and-select" "from-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-return-press" () 274 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 280 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update" () 290 11 ("update-buttons" "update-to" "update-from")}
        {Lisp-Entry "update-from" () 296 11 ("equal?" "test:" "to" "difference" "all" "allow-duplicates?" "if" "" "sort" "user-data:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "present" "title" "object" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "locate" "from-tree" "let")}
        {Lisp-Entry "update-to" () 307 11 ("to" "" "sort" "user-data:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "present" "title" "object" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "locate" "to-tree" "let")}
        {Lisp-Entry "present" () 318 11 ("presenter" "null?" "if" "object")}}}})
"Foreign-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Foreign-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Foreign-Row" () 37 9 ("jazz")
      {Lisp-Entry "Foreign-Row" () 46 7 ("Combo-Row")
        {Lisp-Entry "foreign" () 49 12 ("set-foreign" "get-foreign")}
        {Lisp-Entry "foreign-objects" () 50 12 ("set-foreign-objects" "get-foreign-objects")}
        {Lisp-Entry "key" () 51 12 ("set-key" "get-key")}
        {Lisp-Entry "list?" () 52 12 ("set-list?" "get-list?")}
        {Lisp-Entry "allow-duplicates?" () 53 12 ("set-allow-duplicates?" "get-allow-duplicates?")}
        {Lisp-Entry "initialize" () 61 11 ("choose" "set-kind" "allow-duplicates?~self" "list?~self" "component-name" "either" "key~self" "foreign-objects~self" "foreign~self" "set!" "nextmethod" "apply" "others" "allow-duplicates?" "false" "list?" "key" "foreign-objects" "foreign" "bind-keywords" "rest")}
        {Lisp-Entry "get-foreign" () 77 18 ("foreign")}
        {Lisp-Entry "set-foreign" () 81 18 ("foreign-objects" "foreign-choices" "set-choices" "foreign" "set!" "value")}
        {Lisp-Entry "get-foreign-objects" () 86 18 ("foreign-objects")}
        {Lisp-Entry "set-foreign-objects" () 90 18 ("foreign" "foreign-choices" "set-choices" "foreign-objects" "set!" "value")}
        {Lisp-Entry "get-key" () 95 18 ("key")}
        {Lisp-Entry "set-key" () 99 18 ("key" "set!" "value")}
        {Lisp-Entry "get-list?" () 103 18 ("list?")}
        {Lisp-Entry "set-list?" () 107 18 ("list?" "set!" "value")}
        {Lisp-Entry "get-allow-duplicates?" () 111 18 ("allow-duplicates?")}
        {Lisp-Entry "set-allow-duplicates?" () 115 18 ("allow-duplicates?" "set!" "value")}
        {Lisp-Entry "foreign-choices" () 119 11 ("get-children" "null?" "if" "list" "key" "name" "let" "component" "dynamic" "function" "map" "when" "foreign-objects" "foreign")}
        {Lisp-Entry "combo-choose" () 134 11 ("true" "focus-editor" "enter-edited-value" "set-edited-value" "value:" "allow-duplicates?" ":allow-duplicates?" "list?" "list?:" "key" "key:" "foreign-objects" ":foreign-objects" "foreign" ":foreign" "Foreign-List-Chooser" "get-modal" "value" "let")}
        {Lisp-Entry "present" () 147 11 ("atom?" "key" "dynamic" "function" "map" "else" "join" "pair?" "if" "list?" "not" "null?" "cond" "value")}
        {Lisp-Entry "parse-string" () 163 11 ("split" "find" "if" "string")}
        {Lisp-Entry "get-edited-value" () 174 11 ("parse-strings" "map" "parse-string" "list?" "not" "=" "empty-string?" "or" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" () 183 11 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Form"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "component" "Form.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.component.Form" () 37 9 ("jazz")
      {Lisp-Entry "Form" () 63 7 ("JML-Element")
        {Lisp-Entry "origin" () 66 8 ()}
        {Lisp-Entry "context" () 67 8 ()}
        {Lisp-Entry "action" () 68 8 ()}
        {Lisp-Entry "model-name" () 69 8 ()}
        {Lisp-Entry "name" () 70 8 ()}
        {Lisp-Entry "tag-symbolic?" () 71 8 ()}
        {Lisp-Entry "tag-source" () 72 8 ()}
        {Lisp-Entry "initialize" () 80 11 ("canonicalize-properties" "when" "children" "children~self" "properties" "properties~self" "tag-source" "tag-source~self" "tag-symbolic?" "tag-symbolic?~self" "name" "name~self" "model-name" "model-name~self" "action" "action~self" "context" "context~self" "origin" "origin~self" "set!" "nextmethod" "true" "textual?" "textual?:")}
        {Lisp-Entry "copy-object" () 104 11 ("children" "children:" "properties" "copy" "properties:" "tag-source" "tag-source:" "tag-symbolic?" "tag-symbolic?:" "name" "name:" "model-name" "model-name:" "action" "action:" "context" "context:" "origin" "origin:" "false" "textual?:" "Form" "new" "deep?")}
        {Lisp-Entry "print" () 110 11 ("length" "children" "name" "model-name" "if" "action" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "print" () 120 11 ("children" "keywordize-properties" "properties" "name" "model-name" "if" "action" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "setup-toplevel-context" () 138 18 ("0" "setup-context" "origin" "set!" "ctx")}
        {Lisp-Entry "setup-context" () 143 11 ("children" "for-each" "1" "+" "setup-context" "when" "child" "properties" "for-each-property" "setup-toplevel-context" "Form" "set-form-level" "Handler" "is?" "cond" "value" "name" "dynamic" "function" "proc" "with" "level" "ctx")}
        {Lisp-Entry "canonicalize-properties" () 159 11 ("cddr" "set!" "car" "keyword->symbol" "set-car!" "not-null?" "while" "lst")}
        {Lisp-Entry "get-origin" () 170 18 ("origin")}
        {Lisp-Entry "set-origin" () 174 18 ("origin" "set!" "o")}
        {Lisp-Entry "get-context" () 178 18 ("context")}
        {Lisp-Entry "set-context" () 182 18 ("context" "set!" "ctx")}
        {Lisp-Entry "get-action" () 186 18 ("action")}
        {Lisp-Entry "get-model-name" () 190 18 ("model-name")}
        {Lisp-Entry "set-model-name" () 194 18 ("model-name" "set!" "value")}
        {Lisp-Entry "get-name" () 198 18 ("name")}
        {Lisp-Entry "set-name" () 202 18 ("name" "set!" "value")}
        {Lisp-Entry "get-tag-symbolic?" () 206 18 ("tag-symbolic?")}
        {Lisp-Entry "set-tag-symbolic?" () 210 18 ("tag-symbolic?" "set!" "value")}
        {Lisp-Entry "get-tag-source" () 214 18 ("tag-source")}
        {Lisp-Entry "set-tag-source" () 218 18 ("tag-source" "set!" "value")}
        {Lisp-Entry "get-model" () 222 18 ("slot-value" "autoload" "model-name" "get-autoclass" "either" "context" "not" "if")}
        {Lisp-Entry "child" () 234 18 ("error" "find-child" "either" "name")}
        {Lisp-Entry "find-child" () 239 18 ("find-by" "get-name" "=" "child" "dynamic" "function" "proc" "with" "name")}
        {Lisp-Entry "find-name" () 246 11 ("find-child" "name")}
        {Lisp-Entry "find-type" () 250 18 ("get-model-name" "=" "child" "dynamic" "function" "find-by" "type")}
        {Lisp-Entry "add-child" () 256 18 ("cons" "children" "set!" "child")}
        {Lisp-Entry "add-child-at" () 260 18 ("insert!" "children" "set!" "rank" "child")}
        {Lisp-Entry "append-child" () 264 18 ("list" "append!" "children" "set!" "child")}
        {Lisp-Entry "remove-child" () 268 18 ("remove!" "children" "set!" "child")}
        {Lisp-Entry "send-child-before" () 272 18 ("insert!" "set!" "error" "position" "return:" "find" "either" "essay" "rank" "children" "remove!" "removed" "let*" "target" "child")}
        {Lisp-Entry "sort-children" () 278 18 ("sort" "children" "set!" "get-name" "child" "dynamic" "function" "key" "key:" "test")}
        {Lisp-Entry "get-presentation" () 288 18 ("get-model" "get-class-presentation" "title" "get-property" "either")}
        {Lisp-Entry "remember-creation" () 298 18 ("children:" "properties:" "component:" "remove" "action:" "self" "context:" "Restore-Form" "new" "cons" "children" "set!" "component" "unused")}
        {Lisp-Entry "remember-reference" () 302 18 ("cons" "children" "set!" "children:" "properties:" "name:" "model-name:" "modify" "action:" "self" "context:" "Restore-Form" "new" "form" "let" "name" "unused")}
        {Lisp-Entry "remember-property" () 308 18 ("set-property" "read-property" "actual-value" "let" "property" "component")}
        {Lisp-Entry "instantiate" () 318 18 ("name" "name:" "true" "creator:" "self" "form:" "new-in" "apply" "autoload" "model-name" "eval-symbol" "context" "if" "model" "let" "rest")}
        {Lisp-Entry "instantiate-component" () 323 18 ("name" "name:" "true" "creator:" "new-in" "apply" "autoload" "model-name" "eval-symbol" "context" "if" "model" "let" "rest")}
        {Lisp-Entry "get-parts" () 333 18 ("get-children" "get-properties" "keywordize-properties" "get-name" "get-model-name" "get-action" "values")}
        {Lisp-Entry "get-child-location" () 347 11 ("children" "get-rank" "properties" "length" "tag-source" "tag-symbolic?" "0" "2" "name" "if" "1" "+" "list" "child")}
        {Lisp-Entry "foldable?" () 361 11 ("true")}
        {Lisp-Entry "fold-object" () 365 11 ("children" "properties" "symbolize-properties" "tag-source" "tag-symbolic?" "name" "model-name" "action" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}}}})
"Form-Binding"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Form-Binding.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Form-Binding" () 37 9 ("jazz")
      {Lisp-Entry "Form-Binding" () 40 7 ("Lexical-Binding")}}})
"Form-Comparer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Form-Comparer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Form-Comparer" () 37 9 ("jazz")
      {Lisp-Entry "Form-Comparer" () 45 7 ("Tree-Comparer")
        {Lisp-Entry "compare-nodes/leaves" () 48 11 ("leaves" "nodes")}
        {Lisp-Entry "form-present" () 58 11 ("get-presentation" "get-name" "form")}
        {Lisp-Entry "create-item" () 69 11 ("cdr" "car" "make-item" "error" "null?" "form-present" "title" "let" "Form" "is?" "if" "item")}
        {Lisp-Entry "get-item-content" () 78 11 ("create-item" "map" "get-leaves" "leaves" "get-nodes" "nodes" "case" "content" "get-moniker" "form" "let*" "kind" "item")}
        {Lisp-Entry "get-nodes" () 84 11 ("get-children" "form")}
        {Lisp-Entry "get-leaves" () 88 11 ("get-properties" "cons" "set!" "field-name" "field?" "if" "symbol" "value" "property" "dynamic" "function" "for-each-property" "leaves" "let" "form")}
        {Lisp-Entry "get-item-type" () 97 11 ("leaf" "node" "Form" "is?" "if" "item")}
        {Lisp-Entry "different?" () 103 11 ("/=" "value2" "get-value" "value1" "let" "check-algorithm" "leaf2" "leaf1")}}}})
"Form-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Form-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Form-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Form-Doc" () 45 7 ("Element-Doc")
        {Lisp-Entry "parameters" () 48 12 ("generate" "accessors")}}}})
"Form-Human-Readable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "form" "Form-Human-Readable.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.form.Form-Human-Readable" () 37 9 ("jazz")
      {Lisp-Entry "Form-Human-Readable" () 46 7 ("Object")
        {Lisp-Entry "class-form?" () 49 8 ()}
        {Lisp-Entry "max-order" () 50 8 ()}
        {Lisp-Entry "initialize" () 58 11 ("class-form?~self" "set!" "nextmethod" "true" "class-form?" "class-form?:")}
        {Lisp-Entry "Default-Preferences" () 68 14 ("name" "model" "3" "6" "minimum:" "action" "0" "border:" "use-contouring?:" "2" "indentation:" "form" "size:" "position:" "title:" "aligned-properties:" "designer" "name:" "form>>")}
        {Lisp-Entry "preferences" () 77 11 ("Default-Preferences" "instantiate" "false" "error?:" "designer" "tools" "get-preferences" "either")}
        {Lisp-Entry "get-aligned-properties" () 82 11 ("preferences" "get-aligned-properties")}
        {Lisp-Entry "print-form" () 91 18 ("format" "true" "0" "1" "+" "print-form-at" "printer" "base" "form")}
        {Lisp-Entry "print-form-at" () 96 11 ("print-to" "newline" "3" "if" "=" "set-use-contouring?" "get-columns" "second" "action-column" "let" "display-form" "0" "max-order" "set!" "set-border" "add-column" "cdr" "map" "list" "add-columns" "Sequenced-Column" "properties-column" "get-aligned-properties" "make-aligned-columns" "aligned-columns" "Display-Column" "separator-column" "child" "new-column" "form-column" "Columns-Display" "new" "display" "preferences" "pref" "let*" "toplevel?" "printer" "branched-level" "level" "form-level" "order" "base" "form")}
        {Lisp-Entry "make-aligned-columns" () 116 11 ("left" "alignment:" "1" "border-after:" "Aligned-Column" "new" "cons" "property" "dynamic" "function" "map" "display" "properties")}
        {Lisp-Entry "get-header-columns" () 122 11 ("name" "model" "before:" "action" "child" "new-column" "add-column" "preferences" "pref" "let" "car" "neq?" "if" "get-columns" "tail" "columns" "3" "*" "1" "+" "rank" "let*" "separator-column" "display" "order")}
        {Lisp-Entry "display-form" () 134 11 ("display-children" "when" "display-properties" "display-header" "format" "output" "class-of" "type-name" "form-name" "let" "get-parts" "children" "properties" "name" "model" "action" "receive" "max" "max-order" "set!" "get-header-columns" "name-column" "model-column" "action-column" "bind" "properties-column" "aligned-columns" "separator-column" "form-column" "display" "branched-level" "level" "form-level" "order" "form")}
        {Lisp-Entry "display-header" () 147 11 ("essay" "format" "output" "name-column" "model-column" "action-column" "display" "level" "name" "model" "action")}
        {Lisp-Entry "display-properties" () 153 11 ("0" "2" "1" "+" "display-form" "newline" "not" "sort-property-list" "format" "outputed" "present-property" "presented" "with" "false" "null?" "when" "cdr" "column" "assq" "pair" "let*" "set!" "client-form:" "eq?" "if" "value" "property" "dynamic" "function" "for-each-property" "true" "first?" "client-form" "let" "output" "properties-column" "aligned-columns" "separator-column" "form-column" "display" "branched-level" "level" "form-level" "order" "properties")}
        {Lisp-Entry "display-children" () 179 11 ("if" "1" "+" "display-form" "Branch" "get-model-name" "=" "branch?" "let" "newline" "child" "dynamic" "function" "for-each" "properties-column" "aligned-columns" "separator-column" "form-column" "display" "branched-level" "level" "form-level" "order" "children")}
        {Lisp-Entry "present-property" () 187 11 (":reader" "->string" "else" "present-dimension" "Dimension" "size:" "present-point" "Point" "is?" "position:" "eq?" "and" "cond" "value" "property")}
        {Lisp-Entry "present-point" () 193 11 ("get-v" "get-h" "format" "point")}
        {Lisp-Entry "present-dimension" () 197 11 ("get-height" "get-width" "format" "dimension")}}}})
"Form-Printer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "form" "Form-Printer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.form.Form-Printer" () 37 9 ("jazz")
      {Lisp-Entry "Form-Printer" () 47 7 ("Object")
        {Lisp-Entry "max-order" () 50 8 ()}
        {Lisp-Entry "Default-Preferences" () 58 14 ("name" "model" "3" "6" "minimum:" "action" "0" "border:" "use-contouring?:" "2" "indentation:" "form" "size:" "position:" "title:" "aligned-properties:" "designer" "name:" "form>>")}
        {Lisp-Entry "preferences" () 67 11 ("Default-Preferences" "instantiate" "false" "error?:" "designer" "tools" "get-preferences" "either")}
        {Lisp-Entry "get-aligned-properties" () 72 11 ("preferences" "get-aligned-properties")}
        {Lisp-Entry "print-form" () 81 18 ("true" "0" "print-form-at" "printer" "base" "form")}
        {Lisp-Entry "print-form-at" () 85 11 ("print-to" "newline" "3" "if" "=" "set-use-contouring?" "get-columns" "second" "action-column" "let" "display-form" "0" "max-order" "set!" "set-border" "add-column" "cdr" "map" "list" "add-columns" "Sequenced-Column" "properties-column" "get-aligned-properties" "make-aligned-columns" "aligned-columns" "Display-Column" "separator-column" "child" "new-column" "form-column" "Columns-Display" "new" "display" "preferences" "pref" "let*" "toplevel?" "printer" "branched-level" "level" "form-level" "order" "base" "form")}
        {Lisp-Entry "make-aligned-columns" () 105 11 ("left" "alignment:" "1" "border-after:" "Aligned-Column" "new" "cons" "property" "dynamic" "function" "map" "display" "properties")}
        {Lisp-Entry "get-header-columns" () 111 11 ("name" "model" "before:" "action" "child" "new-column" "add-column" "preferences" "pref" "let" "car" "neq?" "if" "get-columns" "tail" "columns" "3" "*" "1" "+" "rank" "let*" "separator-column" "display" "order")}
        {Lisp-Entry "display-form" () 123 11 ("display-children" "when" "display-properties" "display-header" "format" "output" "class-of" "type-name" "form-name" "autoload" "in-manifest?" "essay" "model" "let" "get-parts" "children" "properties" "name" "model-name" "action" "receive" "max" "max-order" "set!" "get-header-columns" "name-column" "model-column" "action-column" "bind" "display-form" "unimplemented" "properties-column" "aligned-columns" "separator-column" "form-column" "display" "branched-level" "level" "form-level" "order" "form")}
        {Lisp-Entry "display-header" () 139 11 ("essay" "->string" "format" "output" "name-column" "model-column" "action-column" "display" "level" "name" "model-name" "action")}
        {Lisp-Entry "display-properties" () 145 11 ("0" "2" "1" "+" "display-form" "newline" "not" "format" "outputed" "present-property" "presented" "with" "false" "cdr" "column" "assq" "pair" "let*" "set!" "client-form:" "eq?" "if" "persist-property?" "null?" "or" "when" "value" "property" "dynamic" "function" "for-each-property" "true" "first?" "client-form" "let" "output" "properties-column" "aligned-columns" "separator-column" "form-column" "display" "branched-level" "level" "form-level" "order" "properties" "model")}
        {Lisp-Entry "display-children" () 172 11 ("if" "1" "+" "display-form" "Branch" "get-model-name" "=" "branch?" "let" "newline" "child" "dynamic" "function" "for-each" "properties-column" "aligned-columns" "separator-column" "form-column" "display" "branched-level" "level" "form-level" "order" "children")}
        {Lisp-Entry "present-property" () 180 11 (":reader" "->string" "else" "present-dimension" "Dimension" "size:" "present-point" "Point" "is?" "position:" "eq?" "and" "cond" "value" "property")}
        {Lisp-Entry "present-point" () 186 11 ("get-v" "get-h" "format" "point")}
        {Lisp-Entry "present-dimension" () 190 11 ("get-height" "get-width" "format" "dimension")}}}})
"Form-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Form-Tester.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.validate.suite.Form-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Form-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test-form" () 52 11 ("test-fields" "invoke")}
        {Lisp-Entry "test-fields" () 61 11 ("1" "get-children" "length" "2" "a" "category-field" "list" "get-properties" "get-name" "get-model-name" "=" "rpt" "validate" "get-class-form" "form" "let" "X" "new")}}
      {Lisp-Entry "F" () 76 7 ("2" "f1:" "Component")
        {Lisp-Entry "f1" () 79 12 ("set-f1" "get-f1")}
        {Lisp-Entry "get-f1" () 86 11 ("f1")}
        {Lisp-Entry "set-f1" () 87 11 ("f1" "set!" "value")}}
      {Lisp-Entry "X" () 90 7 ("5" "fc" "4" "fb" "f1:" "fa" "name:" "3" "x2:" "2" "x1:" "Component")
        {Lisp-Entry "x1" () 93 12 ("set-x1" "get-x1")}
        {Lisp-Entry "x2" () 94 12 ("set-x2" "get-x2")}
        {Lisp-Entry "get-x1" () 104 11 ("x1")}
        {Lisp-Entry "set-x1" () 105 11 ("x1" "set!" "value")}
        {Lisp-Entry "get-x2" () 108 11 ("x2")}
        {Lisp-Entry "set-x2" () 109 11 ("x2" "set!" "value")}}
      {Lisp-Entry "Y" () 112 7 ("5" "x2:" "X")}}})
"Format"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Format.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Format" () 37 9 ("jazz")
      {Lisp-Entry "Format" () 44 7 ("keep-with-next?" "bullet-inside" "bullet-outside" "false" "bulleted?" "left" "justification" "right-margin" "initialize" "left-margin" "Exemplar")}}})
"Format-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Format-Menu.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Format-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Format-Menu" () 46 7 ("on-capitalize-selection" "capitalize-selection" "on-downcase-selection" "downcase-selection" "on-upcase-selection" "upcase-selection" "on-tabify" ":focus" "Event-Handler" "action-handler:" "title:" "tabify-selection" "name:" "Context-Menu")}}})
"Format-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Format-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Format-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Format-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-format" "invoke")}
        {Lisp-Entry "test-format" () 61 11 ("error?" ":right" "5" "hello" "yyy" "list" "String" "coerce" "3" ":b" ":a" ":reader" ":human" "2" "format" "=" "rpt" "validate")}}}})
"Formatted-Presentation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Formatted-Presentation.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.presentation.Formatted-Presentation" () 37 9 ("jazz")
      {Lisp-Entry "Formatted-Presentation" () 46 7 ("Presentation")
        {Lisp-Entry "moniker" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "guest-actions" () 57 11 ("nextmethod" "formatted-presentation" "find-actions" "cons")}
        {Lisp-Entry "on-edit-slide" () 67 11 ("selection:" "moniker" "edit-document" "get-heading-range" "range" "get-application" "appl" "bell" "Heading-Slide" "is-not?" "if" "get-active-branch" "branch" "let" "evt")}}}})
"Formatted-Presentation-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Formatted-Presentation-Actions.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.presentation.Formatted-Presentation-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Formatted-Presentation-Actions" () 46 7 ("F12" "Shortcut" "shortcut:" "on-edit-slide" ":document" "Event-Handler" "action-handler:" "edit-slide" "name:" "Actions")}}})
"Formatted-Text"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Formatted-Text.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Formatted-Text" () 37 9 ("jazz")
      {Lisp-Entry "Formatted-Text" () 45 7 ("Text")
        {Lisp-Entry "formats" () 48 18 ()}
        {Lisp-Entry "styles" () 49 18 ()}
        {Lisp-Entry "construct-literal" () 53 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" () 57 11 ("styles~self" "formats~self" "set!" "nextmethod" "apply" "others" "styles" "formats" "bind-keywords" "rest")}
        {Lisp-Entry "foldable?" () 64 11 ("true")}
        {Lisp-Entry "fold-object" () 68 11 ("paragraphs" ":paragraphs" "styles" ":styles" "formats" ":formats" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 80 11 ("paragraphs" "styles" "formats" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-formats" () 93 18 ("formats")}
        {Lisp-Entry "set-formats" () 97 18 ("formats" "set!" "value")}
        {Lisp-Entry "get-styles" () 101 18 ("styles")}
        {Lisp-Entry "set-styles" () 105 18 ("styles" "set!" "value")}}}})
"Formatted-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Formatted-Text-Actions.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Formatted-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Formatted-Text-Actions" () 46 7 ("on-bulleted" "bulleted" "Heading5" "heading5-style" "Heading4" "heading4-style" "Heading3" "heading3-style" "Heading2" "heading2-style" "Heading1" "heading1-style" "Heading0" "heading0-style" ":alt" "Shortcut" "shortcut:" "Default" "style:" "on-paragraph-style" ":focus" "Event-Handler" "action-handler:" "default-style" "name:" "Actions")}}})
"Formatted-Text-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Formatted-Text-Row.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.row.Formatted-Text-Row" () 37 9 ("jazz")
      {Lisp-Entry "Formatted-Text-Row" () 46 7 ("Text-Row")
        {Lisp-Entry "new-editor" () 54 11 ("editor-class" "new")}
        {Lisp-Entry "editor-class" () 58 11 ("Row-Formatted-Text-View")}
        {Lisp-Entry "editor-height" () 62 11 ()}}}})
"Formatted-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Formatted-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Formatted-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Formatted-Text-View" () 47 7 ("wrap?:" "Text-View")
        {Lisp-Entry "ruler" () 50 8 ()}
        {Lisp-Entry "external-name" () 63 16 ("formatted-text" "rest")}
        {Lisp-Entry "default-extension" () 67 11 ()}
        {Lisp-Entry "extensions" () 71 11 ()}
        {Lisp-Entry "focus-actions" () 80 11 ("nextmethod" "formatted-text" "find-actions" "cons")}
        {Lisp-Entry "frame-workspaces" () 90 11 ("formatted")}
        {Lisp-Entry "Formatted-Text-Controller" () 100 9 ("Document-Controller")
          {Lisp-Entry "install-container" () 103 13 ("install-ruler" "install-scroller")}
          {Lisp-Entry "install-ruler" () 108 13 ("set-client" "set-parent" "set-ruler" "get-content" "parent:" "Ruler" "new" "ruler" "get-scroller" "scroller" "document" "get-root" "root" "let*")}}
        {Lisp-Entry "new-controller" () 118 11 ("self" "Formatted-Text-Controller" "new")}
        {Lisp-Entry "get-ruler" () 127 18 ("ruler")}
        {Lisp-Entry "set-ruler" () 131 18 ("ruler" "set!" "r")}
        {Lisp-Entry "empty-content" () 140 11 ("list" "paragraphs:" "styles:" "formats:" "Formatted-Text" "new")}
        {Lisp-Entry "get-content" () 147 11 ("get-formatted-content")}
        {Lisp-Entry "set-content" () 151 11 ("empty-content" "either" "set-formatted-content" "text")}
        {Lisp-Entry "cursor-update" () 160 11 (":ibeam" ":finger" "Hyperlink-Style" "is?" "get-style-at" "style" "let" ":left-arrow" "set-cursor" "paragraph-left" "get-h" "" "if" "get-row" "get-paragraph" "par" "view->text" "pos" "let*" "selectable?" "enabled?" "and" "when" "show-text-cursor" "view")}
        {Lisp-Entry "mouse-down" () 178 11 ("nextmethod" "Hyperlink-Style" "is?" "unless" "get-style-at" "style" "view->text" "pos" "let*" "enabled?" "when" "view")}
        {Lisp-Entry "drag-up" () 186 11 ("bell" "else" "goto-anchor" "invoke-action" "cond" "get-action" "action" "get-anchor" "anchor" "Hyperlink-Style" "is?" "get-style-at" "style" "view->text" "pos" "let*" "not" "enabled?" "and" "when" "nextmethod" "selecting?" "let" "rest" "view")}
        {Lisp-Entry "invoke-action" () 203 11 ("else" "get-properties" ":hyperlink" "Event" "new" "apply" "self" "invoke" "Event-Handler" "is?" "cond" "action")}
        {Lisp-Entry "goto-anchor" () 210 11 ("length" "0" "Cell" "Range" "new" "set-selection" "=" "when" "string" "row" "heading" "dynamic" "function" "for-each-heading" "anchor")}
        {Lisp-Entry "copy-selection" () 224 11 ("false" "copy-formatted-selection" "nextmethod")}
        {Lisp-Entry "paste-clipboard" () 229 11 ("paste-formatted-clipboard")}
        {Lisp-Entry "read-moniker" () 238 11 ("read-formatted" "moniker")}
        {Lisp-Entry "save-to" () 242 11 ("save-formatted" "moniker")}
        {Lisp-Entry "for-each-heading" () 251 18 ("get-string" "get-name" "memq?" "essay" "style" "first-run" "run" "let*" "paragraph" "row" "dynamic" "function" "for-each-paragraph" "list" "all" "and" "when" "Heading3" "heading3" "Heading2" "heading2" "Heading1" "heading1" "false" "error?:" "Heading0" "get-style" "heading0" "let" "proc")}
        {Lisp-Entry "collect-headings" () 266 18 ("get-output" "list" "put" "string" "row" "heading" "dynamic" "function" "for-each-heading" "List-Factory" "new" "headings" "let")}
        {Lisp-Entry "insert-table-of-content" () 279 11 ("toggle-bulleted" "unless" ":anchor" "insert-hyperlink" "get-row" "get-start" "start" "let*" "eq?" "when" "string" "row" "bind" "heading" "dynamic" "function" "for-each" "insert-newline" "Heading0" "insert-styled" "collect-headings" "headings" "let")}
        {Lisp-Entry "Heading-Levels" () 303 14 ("5" "Heading5" "4" "Heading4" "3" "Heading3" "2" "Heading2" "1" "Heading1" "0" "Heading0")}
        {Lisp-Entry "heading-level" () 312 18 ("error" "cdr" "if" "Heading-Levels" "assq" "info" "let" "heading")}
        {Lisp-Entry "get-chapters" () 324 11 ("collect-headings" "0" "Cell" "new" "heading-level" "list" "string" "row" "bind" "heading" "dynamic" "function" "map")}
        {Lisp-Entry "get-first-chapter" () 331 11 ("lst")}
        {Lisp-Entry "get-remaining-chapters" () 335 11 ("lst")}}}})
"Formatted-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Formatted-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Formatted-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Formatted-Workspace" () 46 7 ("Text-Palette" "Favorites-Manager" "Workbench-Manager" "Hierarchy-Browser" "Chapters-Browser" "Jazz-Console-Manager" "selection" "Properties-Manager" "Search-Results" "Output-Log" "model-name:" "second" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Plain-Formatted-Text-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 74 11 ("formatted")}}}})
"Formatter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "factory" "Formatter.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.factory.Formatter" () 37 9 ("jazz")
      {Lisp-Entry "Formatter" () 44 7 ("Object")
        {Lisp-Entry "format-directive" () 47 26 ("directive" "output" "formatting")}}}})
"Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Frame.fusion"} {Time 128360916760000000L}
    {Lisp-Entry "jazz.ui.window.Frame" () 37 9 ("jazz")
      {Lisp-Entry "Frame" () 50 7 ("View-Player")
        {Lisp-Entry "site" () 53 8 ()}
        {Lisp-Entry "window-style" () 62 11 ("WS_CLIPSIBLINGS" "WS_CLIPCHILDREN" "WS_SYSMENU" "WS_CHILD" "bit-or" "rest")}
        {Lisp-Entry "default-parent" () 66 11 ("get-stage")}
        {Lisp-Entry "conclude" () 70 11 ("destroy-mandatory" "bring-to-front" "nextmethod" "rest")}
        {Lisp-Entry "on-close" () 81 11 ("unprocessed" "confirm-close" "close-popups" "evt")}
        {Lisp-Entry "on-mouse-activate" () 87 11 ("nextmethod" "bring-to-front")}
        {Lisp-Entry "mouse-down" () 92 11 ("nextmethod" "bring-to-front" "v" "h")}
        {Lisp-Entry "activate-frame" () 102 11 ("get-application" "update-windowing-actions" "process-activation" "set!" "handle" "bring-window-to-top" "Active-Frame" "self" "neq?" "or" "when" "false" "force?" "force?:")}
        {Lisp-Entry "deactivate-frame" () 110 11 ("process-deactivation" "set!" "Active-Frame" "self" "eq?" "when")}
        {Lisp-Entry "destroy" () 121 11 ("get-application" "update-windowing-actions" "acquire-focus" "activate-frame" "deactivate-frame" "nextmethod" "parent" "second-window" "essay" "new-active" "Active-Frame" "self" "eq?" "was-active?" "let*" "remove-surrogate" "get-surrogate" "when")}
        {Lisp-Entry "show" () 135 11 ("true" "force?:" "activate-front" "nextmethod")}
        {Lisp-Entry "bring-to-front" () 140 11 ("activate-front" "get-visible?" "when" "nextmethod")}
        {Lisp-Entry "send-to-back" () 146 11 ("activate-front" "nextmethod")}
        {Lisp-Entry "process-activation" () 156 11 ("frame-activate" "post-primary" "thread" "execute:" "context:" "Thread" "new" "client-activate" "view" "dynamic" "function" "for-each-docked" "get-locked-activations?" "unless" "get-window-title" "get-toplevel" "set-caption" "get-maximized?" "when" "get-stage" "stage" "let" "self" "parent" "send-child-to-front" "close-popups")}
        {Lisp-Entry "process-deactivation" () 178 11 ("stage-activate" "get-windows" "null?" "when" "get-stage" "stage" "let" "frame-deactivate")}
        {Lisp-Entry "frame-activate" () 185 26 ()}
        {Lisp-Entry "frame-deactivate" () 189 26 ()}}}})
"Frame-Button"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Frame-Button.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Frame-Button" () 37 9 ("jazz")
      {Lisp-Entry "Frame-Button" () 46 7 ("View")
        {Lisp-Entry "type" () 49 12 ("set-type" "get-type")}
        {Lisp-Entry "state" () 52 8 ("inactive")}
        {Lisp-Entry "get-type" () 60 18 ("type")}
        {Lisp-Entry "set-type" () 64 18 ("invalidate-view" "type" "set!" "value")}
        {Lisp-Entry "get-state" () 74 18 ("state")}
        {Lisp-Entry "set-state" () 78 18 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "mouse-activate?" () 88 11 ("false")}
        {Lisp-Entry "mouse-enter" () 92 11 ("pushed" "out-pushed" "highlighted" "set-state" "inactive" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-leave" () 99 11 ("out-pushed" "pushed" "inactive" "set-state" "highlighted" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-down" () 106 11 ("pushed" "set-state" "enabled?" "when" "pos")}
        {Lisp-Entry "drag-up" () 111 11 ("inactive" "out-pushed" "highlighted" "set-state" "pushed" "get-state" "case" "up" "unwind-protect" "get-enabled?" "when" "rest" "pos")}
        {Lisp-Entry "up" () 120 11 ("self" "process-action" "pushed" "get-state" "=" "when")}
        {Lisp-Entry "type-icon" () 130 11 ("close" "restore" "maximize" "Bitmap-Resource" "minimize" "case" "type")}
        {Lisp-Entry "draw" () 138 11 ("false" "true" "pushed" "state" "eq?" "if" "draw-caption" "+" "Rect" "new" "rect" "with" "0" "type" "type-icon" "get-application" "get-small-icons-cache" "draw-image" "get-height" "center" "top" "let" "lv" "lh" "update" "context" "dc")}}}})
"Frame-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Frame-Preferences.fusion"} {Time 128368663260000000L}
    {Lisp-Entry "jazz.ui.preferences.Frame-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Frame-Preferences" () 48 7 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "find-client" () 60 11 ("get-name" "autoload" "get-stage" "find-host")}}}})
"Frame-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Frame-Root.fusion"} {Time 128368663900000000L}
    {Lisp-Entry "jazz.ui.view.Frame-Root" () 37 9 ("jazz")
      {Lisp-Entry "Frame-Root" () 51 7 ("on-close" "close" "on-maximize" "maximize" "on-minimize" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "type:" "minimize" "name:" "Caption-Root")
        {Lisp-Entry "dragging?" () 54 8 ("false")}
        {Lisp-Entry "current-part" () 55 8 ()}
        {Lisp-Entry "old-position" () 56 8 ()}
        {Lisp-Entry "preserved-position" () 57 8 ()}
        {Lisp-Entry "preserved-size" () 58 8 ()}
        {Lisp-Entry "get-preserved-position" () 73 18 ("preserved-position")}
        {Lisp-Entry "get-preserved-size" () 77 18 ("preserved-size")}
        {Lisp-Entry "size-change" () 86 11 ("4" "Rect" "insets:" "invalidate-border" "invalidate-caption" "nextmethod" "size")}
        {Lisp-Entry "on-minimize" () 92 29 ("player" "minimize" "evt")}
        {Lisp-Entry "on-maximize" () 96 29 ("get-stage" "maximize" "evt")}
        {Lisp-Entry "on-close" () 100 29 ("close-player" "evt")}
        {Lisp-Entry "close-player" () 104 11 ("0" "WM_CLOSE" "player" "send-message" "validate-focus")}
        {Lisp-Entry "caption-rect" () 114 11 ("+" "get-width" "-" "Rect" "new" "4" "0" "maximized?" "if" "border" "let")}
        {Lisp-Entry "minimize-rect" () 119 29 ("3" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "maximize-rect" () 123 29 ("3" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "close-rect" () 127 29 ("3" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "mouse-activate" () 136 11 ("get-player" "acquire-focus")}
        {Lisp-Entry "root-activate" () 140 11 ("invalidate-caption")}
        {Lisp-Entry "root-deactivate" () 144 11 ("invalidate-caption")}
        {Lisp-Entry "maximize" () 153 11 ("update-buttons" "true" "get-size" "preserved-size" "get-position" "preserved-position" "set!" "get-host" "host" "let" "maximized?" "false" "unless")}
        {Lisp-Entry "maximize-bounds" () 163 18 ("invalidate-view" "layout-view" "set-size" "0" "Point" "set-position" "get-host" "host" "let" "size")}
        {Lisp-Entry "restore" () 171 11 ("invalidate-view" "layout-view" "update-buttons" "false" "set!" "set-size" "preserved-size" "set-position" "preserved-position" "get-host" "host" "let" "maximized?" "true" "when")}
        {Lisp-Entry "layout" () 191 11 ("get-height" "get-width" "-" "Dimension" "set-size" "+" "Point" "new" "set-position" "get-content" "content" "let" "layout-buttons" "rect-height" "caption-height" "caption-rect" "0" "4" "if" "border" "caption-visible?" "caption?" "let*")}
        {Lisp-Entry "layout-buttons" () 202 29 ("close-rect" "close" "maximize-rect" "maximize" "minimize-rect" "minimize" "locate" "set-rect" "get-right" "-" "right" "get-bounds" "bounds" "top" "buttons-border" "border" "let*")}
        {Lisp-Entry "buttons-border" () 212 29 ("0" "4" "caption-visible?" "if")}
        {Lisp-Entry "invalidate-caption" () 221 11 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "update-buttons" () 225 29 ("close" "maximize" "minimize" "locate" "set-visible?" "caption-visible?" "visible?" "let")}
        {Lisp-Entry "caption-icon" () 237 11 ("guest-icon" "get-guest" "guest" "player" "host" "let*")}
        {Lisp-Entry "caption-title" () 243 11 ("get-window-title" "player" "host" "let")}
        {Lisp-Entry "caption-focused?" () 248 11 ("get-focused-root" "self" "eq?")}
        {Lisp-Entry "caption-visible?" () 252 11 ("maximized?" "not")}
        {Lisp-Entry "cursor-update" () 261 11 ("get-resize-cursor" "get-size" "find-resize-part" "maximized?" "essay" "part" "let" ":arrow" "set-cursor" "resizeable?" "not" "if" "pos")}
        {Lisp-Entry "moveable?" () 275 29 ("true")}
        {Lisp-Entry "resizeable?" () 279 29 ("true")}
        {Lisp-Entry "mouse-down" () 283 11 ("acquire-capture" "to-desktop" "old-position" "resizeable?" "essay" "current-part" "true" "dragging?" "set!" "or" "get-size" "find-resize-part" "part" "moveable?" "when" "send-host-to-back" "control-down?" "and" "if" "caption-rect" "in-rect?" "in-caption?" "let" "pos")}
        {Lisp-Entry "drag-move" () 296 11 ("set!" "get-toplevel" "update-window" "resize-host" "dheight" "dwidth" "dynamic" "function" "size-client" "player" "move-window" "current-part" "not" "if" "get-v" "dv" "get-h" "dh" "old-position" "-" "delta" "to-desktop" "let*" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" () 311 11 ("false" "set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "double-click" () 317 11 ("toggle-maximized" "caption-rect" "close-player" "6" "Rect" "in-rect?" "cond" "pos")}
        {Lisp-Entry "resize-host" () 324 29 ("player" "grow-bounds" "dheight" "dwidth" "dv" "dh")}
        {Lisp-Entry "toggle-maximized" () 328 29 ("get-stage" "toggle-maximized")}
        {Lisp-Entry "send-host-to-back" () 332 29 ("current-frame" "acquire-focus" "player" "send-to-back")}}}})
"Frame-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Frame-Snapshot.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Frame-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Frame-Snapshot" () 45 7 ("Object")
        {Lisp-Entry "thread" () 48 8 ()}
        {Lisp-Entry "parameters" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("parameters~self" "thread~self" "set!" "nextmethod" "parameters" "thread")}
        {Lisp-Entry "compare-object" () 58 11 (":not-equal" "else" ":equal" "present" "=" ":incompatible" "Frame-Snapshot" "is-not?" "cond" "target")}
        {Lisp-Entry "get-thread" () 72 18 ("thread")}
        {Lisp-Entry "get-parameters" () 76 26 ("parameters")}
        {Lisp-Entry "present" () 85 26 ()}
        {Lisp-Entry "get-image" () 89 26 ()}
        {Lisp-Entry "edit" () 98 26 ()}}}})
"Function-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Function-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Function-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Function-Tester" () 45 7 ("title:" "Tester")}}})
"GDB-Debugger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "gdb" "GDB-Debugger.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.gdb.GDB-Debugger" () 37 9 ("jazz")
      {Lisp-Entry "GDB-Debugger" () 47 7 ("Exit-Listener" "Debugger")
        {Lisp-Entry "process" () 50 8 ()}
        {Lisp-Entry "attached-process" () 51 8 ()}
        {Lisp-Entry "standard-input" () 52 8 ()}
        {Lisp-Entry "standard-output" () 53 8 ()}
        {Lisp-Entry "standard-error" () 54 8 ()}
        {Lisp-Entry "banner" () 55 8 ()}
        {Lisp-Entry "listener-thread" () 56 8 ()}
        {Lisp-Entry "listener-done?" () 57 8 ()}
        {Lisp-Entry "start-gdb" () 65 18 ("register-debugger" "start-listener" "setup-banner" "process-wait" "get-standard-error" "standard-error~self" "get-standard-output" "standard-output~self" "get-standard-input" "standard-input~self" "process~self" "set!" "visible?:" "false" ":wait?" ":capture-error?" ":capture-output?" "true" ":capture-input?" "directory:" "create-process" "process" "Base" "Directory" "directory" "command" "let*" "self" "get-application" "add-exit-listener")}
        {Lisp-Entry "process-wait" () 80 11 ("output-available?" "not" "while" "sleep")}
        {Lisp-Entry "output-available?" () 86 11 ("standard-output" "bytes-available?")}
        {Lisp-Entry "GDB-Invite" () 90 14 ()}
        {Lisp-Entry "read-output" () 94 11 ("length" "-" "0" "subseq" "GDB-Invite" "ends-with?" "if" "standard-output" "read-content" "content" "let")}
        {Lisp-Entry "setup-banner" () 101 11 ("read-output" "banner" "set!")}
        {Lisp-Entry "register-debugger" () 105 11 ("self" "register-debugger")}
        {Lisp-Entry "stop-gdb" () 114 18 ("self" "get-application" "remove-exit-listener" "process-stop" "stop-listener" "unregister-debugger")}
        {Lisp-Entry "unregister-debugger" () 121 11 ("self" "unregister-debugger")}
        {Lisp-Entry "process-stop" () 125 11 ("process" "close" "gdb-command")}
        {Lisp-Entry "prepare-exit" () 137 11 ("stop-gdb" "process" "when")}
        {Lisp-Entry "get-process" () 147 11 ("attached-process")}
        {Lisp-Entry "attach-to" () 156 18 ("GDB-Debugger-Process" "new" "attached-process" "set!" "gdb-command" "format" "command" "get-process-id" "id" "let*" "process")}
        {Lisp-Entry "gdb-command" () 168 18 ("format" "standard-input" "write-string" "command")}
        {Lisp-Entry "start-listener" () 177 11 ("new-listener-thread" "listener-thread" "false" "listener-done?" "set!")}
        {Lisp-Entry "stop-listener" () 182 11 ("listener-thread" "wait-for" "true" "listener-done?" "set!")}
        {Lisp-Entry "new-listener-thread" () 187 11 ("parse-gdb" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new")}
        {Lisp-Entry "parse-gdb" () 195 11 ("sleep" "parse-gdb-output" "process-output" "output-available?" "if" "listener-done?" "not" "while")}
        {Lisp-Entry "parse-gdb-output" () 202 11 ("standard-output" "read-content")}}}})
"GDB-Debugger-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "gdb" "GDB-Debugger-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.gdb.GDB-Debugger-Frame" () 37 9 ("jazz")
      {Lisp-Entry "GDB-Debugger-Frame" () 45 7 ("Debugger-Frame")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-image" () 57 11 ()}}}})
"GDB-Debugger-Process"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "gdb" "GDB-Debugger-Process.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.gdb.GDB-Debugger-Process" () 37 9 ("jazz")
      {Lisp-Entry "GDB-Debugger-Process" () 45 7 ("Debugger-Process")
        {Lisp-Entry "file/id" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("file/id~self" "set!" "nextmethod" "file/id")}
        {Lisp-Entry "get-file/id" () 61 18 ("file/id")}
        {Lisp-Entry "present" () 70 11 ("get-name" "->string" "file/id" "integer?" "if")}
        {Lisp-Entry "get-threads" () 81 11 ()}}}})
"GDB-Debugger-Thread"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "gdb" "GDB-Debugger-Thread.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.gdb.GDB-Debugger-Thread" () 37 9 ("jazz")
      {Lisp-Entry "GDB-Debugger-Thread" () 45 7 ("Debugger-Thread")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-state" () 62 11 ()}
        {Lisp-Entry "get-primary?" () 66 11 ()}
        {Lisp-Entry "get-frames" () 75 11 ()}}}})
"GDB-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "gdb" "GDB-Parser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.gdb.GDB-Parser" () 37 9 ("jazz")
      {Lisp-Entry "GDB-Parser" () 60 7 ("Object")
        {Lisp-Entry "reader" () 63 8 ()}
        {Lisp-Entry "initialize" () 66 11 ("gdb-reader" "reader" "set!" "nextmethod" "str")}
        {Lisp-Entry "parse" () 76 18 ("read-content")}
        {Lisp-Entry "read-content" () 80 11 ("get-output" "read-char" "=" "when" "put" "read-element" "element" "peek-char" "memv?" "not" "while" "reader" "skip-whites" "List-Factory" "new" "elements" "let")}
        {Lisp-Entry "read-element" () 93 11 ("read-atom" "else" "read-list" "peek-char" "case" "reader" "skip-whites")}
        {Lisp-Entry "read-list" () 102 11 ("read-content" "prog1" "reader" "read-char")}
        {Lisp-Entry "read-atom" () 108 11 ("GDB-Property" "new" "read-element" "value" "read-char" "begin" "peek-char" "eqv?" "if" "skip-whites" "reader" "read" "expr" "let")}
        {Lisp-Entry "validate-char" () 119 11 ("String" "coerce" "error" "eqv?" "if" "reader" "read-char" "char" "let" "c")}
        {Lisp-Entry "gdb-reader" () 131 11 ("set-readtable" "TTerminator" "set-syntax" "Readtable" "readtable" "String-Reader" "new" "reader" "let" "str")}}}})
"GDB-Property"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "gdb" "GDB-Property.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.gdb.GDB-Property" () 37 9 ("jazz")
      {Lisp-Entry "GDB-Property" () 45 7 ("Object")
        {Lisp-Entry "name" () 48 8 ()}
        {Lisp-Entry "value" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("value~self" "name~self" "set!" "nextmethod" "value" "name")}
        {Lisp-Entry "print" () 58 11 ("value" "name" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-name" () 69 18 ("name")}
        {Lisp-Entry "get-value" () 73 18 ("value")}}}})
"GUID"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "GUID.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.GUID" () 37 9 ("jazz")
      {Lisp-Entry "GUID" () 43 7 ("Object")
        {Lisp-Entry "print" () 46 11 ("->string" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "c-string-constant" () 52 18 ("9" "8" "0" "subseq" "format" "self" "->string" "str" "let")}
        {Lisp-Entry "foldable?" () 68 11 ("true")}
        {Lisp-Entry "fold-object" () 72 11 ("->string" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "bitmap-guid" () 89 23 ("GUID" "new")}
        {Lisp-Entry "word-guid" () 94 23 ("GUID" "new")}
        {Lisp-Entry "polyline-guid" () 99 23 ("GUID" "new")}
        {Lisp-Entry "media-guid" () 104 23 ("GUID" "new")}
        {Lisp-Entry "wordpad-guid" () 109 23 ("GUID" "new")}}}})
"Gambit-Debugger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "gambit" "Gambit-Debugger.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.gambit.Gambit-Debugger" () 37 9 ("jazz")
      {Lisp-Entry "Gambit-Debugger" () 48 7 ("Exit-Listener" "Debugger")
        {Lisp-Entry "process" () 51 8 ()}
        {Lisp-Entry "attached-process" () 52 8 ()}
        {Lisp-Entry "standard-input" () 53 8 ()}
        {Lisp-Entry "standard-output" () 54 8 ()}
        {Lisp-Entry "standard-error" () 55 8 ()}
        {Lisp-Entry "banner" () 56 8 ()}
        {Lisp-Entry "console-text" () 57 8 ()}
        {Lisp-Entry "listener-thread" () 58 8 ()}
        {Lisp-Entry "listener-done?" () 59 8 ()}
        {Lisp-Entry "mode" () 60 8 ()}
        {Lisp-Entry "initialize" () 63 11 ("gambit" "mode~self" "console-text~self" "set!" "nextmethod" "console-text" "console-text:")}
        {Lisp-Entry "start-gambit" () 74 18 ("register-debugger" "start-listener" "process-wait" "get-standard-error" "standard-error~self" "get-standard-output" "standard-output~self" "get-standard-input" "standard-input~self" "Gambit-Debugger-Process" "new" "process~self" "set!" "visible?:" ":wait?" ":debug-console?" "false" "console?:" ":capture-error?" ":capture-output?" "true" ":capture-input?" "directory:" "create-process" "process" "jazz" "Directory" "directory" "command" "let*" "self" "get-application" "add-exit-listener")}
        {Lisp-Entry "process-wait" () 88 11 (">=" "when" "increase!" "true" "set!" "standard-output" "read-content" "begin" "output-available?" "if" "not" "while" "0" "count" "false" "done?" "let" "sleep")}
        {Lisp-Entry "output-available?" () 104 11 ("standard-output" "bytes-available?")}
        {Lisp-Entry "register-debugger" () 108 11 ("self" "register-debugger")}
        {Lisp-Entry "stop-gambit" () 117 18 ("self" "get-application" "remove-exit-listener" "process" "close" "console-text" "set-prompt" "false" ":output?" "process-command" "stop-listener" "unregister-debugger")}
        {Lisp-Entry "unregister-debugger" () 126 11 ("self" "unregister-debugger")}
        {Lisp-Entry "prepare-exit" () 135 11 ("sleep" "stop-gambit" "process" "when")}
        {Lisp-Entry "get-process" () 147 11 ("process")}
        {Lisp-Entry "gambit-command" () 156 18 ("console-text" "fresh-prompt" "console?:" "eq?" "and" "if" "format" "numeric?" "member?" "or" "process-command" "else" "stop-gambit" "refresh-gambit" "->string" "gambit" "list" "jazz" "mode" "set!" "=" "cond" "console?" "command" "name")}
        {Lisp-Entry "gambit-commands" () 193 18 ("console-text" "fresh-prompt" "console?:" "process-command" "command" "name" "dynamic" "function" "for-each" "console?" "commands" "names")}
        {Lisp-Entry "process-command" () 201 11 ("name:" "gambit-output" "flush-output" "when" "format" "if" "standard-input" "write-line" "true" "output?" "output?:" "false" "console?" "console?:" "command" "name")}
        {Lisp-Entry "refresh-gambit" () 210 11 ("fresh-prompt" "standard-output" "read-content" "console-text" "display-output" "output-available?" "when")}
        {Lisp-Entry "gambit-output" () 216 11 ("set-prompt" "update-view" "for-each" "pair?" "newline-output" "->string" "proc" "display-output" "parse-gambit-output" "prompt" "output" "receive" "true" "set!" ">" "when" "increase!" "begin" "output-available?" "if" "not" "while" "dynamic" "function" "eval-color" "console-text" "with-colored-output" "sleep" "prmpt" "0" "count" "some-output?" "false" "done?" "let" "name" "name:")}
        {Lisp-Entry "start-listener" () 259 11 ("new-listener-thread" "listener-thread" "false" "listener-done?" "set!")}
        {Lisp-Entry "stop-listener" () 265 11 ("listener-thread" "wait-for" "true" "listener-done?" "set!")}
        {Lisp-Entry "new-listener-thread" () 271 11 ("listen-gambit" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new")}
        {Lisp-Entry "listen-gambit" () 279 11 ("sleep" "console-text" "debug-output" "parse-gambit-output" "prompt" "output" "receive" "output-available?" "if" "listener-done?" "not" "while")}
        {Lisp-Entry "Prompt" () 287 14 ("String" "list" "coerce")}
        {Lisp-Entry "find-prompt" () 291 11 ("eqv?" "when" "decrease!" "1" "element" "numeric?" "0" ">" "and" "while" "dynamic" "function" "skip-numeric" "2" "length" "-" "n" "let" "str")}
        {Lisp-Entry "parse-gambit-output" () 304 11 ("0" "subseq" "values" "find-prompt" "n" "Prompt" "ends-with?" "if" "standard-output" "read-content" "output" "let")}}}})
"Gambit-Debugger-Process"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "gambit" "Gambit-Debugger-Process.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.gambit.Gambit-Debugger-Process" () 37 9 ("jazz")
      {Lisp-Entry "Gambit-Debugger-Process" () 45 7 ("Debugger-Process")
        {Lisp-Entry "child-process" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("child-process~self" "set!" "nextmethod" "child-process")}
        {Lisp-Entry "get-child-process" () 61 18 ("child-process")}
        {Lisp-Entry "present" () 70 11 ()}}}})
"Generic-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Generic-Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.Generic-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Generic-Declaration" () 40 7 ("Declaration")
        {Lisp-Entry "signature" () 43 8 ("generate")}}}})
"Grammar_old_jazz"
 ({Lisp-File-Entry {File dev "jazz" "doc" "grammar" "Grammar_old_jazz.fusion"} {Time 128366319460000000L}})
"Group"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "database" "Group.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.database.Group" () 37 9 ("jazz")
      {Lisp-Entry "Group" () 47 7 ("title:" "Component")
        {Lisp-Entry "title" () 50 12 ("set-title" "get-title")}
        {Lisp-Entry "classes" () 51 12 ("set-classes" "get-classes")}
        {Lisp-Entry "sort?" () 52 12 ("set-sort?" "get-sort?" "true")}
        {Lisp-Entry "print" () 59 11 ("title" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-title" () 71 18 ("title")}
        {Lisp-Entry "set-title" () 75 18 ("title" "set!" "t")}
        {Lisp-Entry "get-classes" () 79 18 ("classes")}
        {Lisp-Entry "set-classes" () 83 18 ("classes" "set!" "value")}
        {Lisp-Entry "get-sort?" () 87 18 ("sort?")}
        {Lisp-Entry "set-sort?" () 91 18 ("designers" "descendants" "self" "process-refresh" "designer" "dynamic" "function" "for-each" "set!" "sort?" "/=" "when" "value")}
        {Lisp-Entry "get-addable-classes" () 104 11 ("get-component-classes" "autoload" "when" "model" "dynamic" "function" "map")}
        {Lisp-Entry "get-component-classes" () 111 11 ("get-component-classes" "parent" "when" "classes" "either")}
        {Lisp-Entry "get-class-presentation" () 123 16 ()}
        {Lisp-Entry "get-class-image" () 128 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 133 16 ("nextmethod" "else" "sort?" "classes" "title" "field-name" "case" "property")}
        {Lisp-Entry "get-custom-card" () 141 11 ("Group-Card")}
        {Lisp-Entry "sort-components?" () 145 11 ("sort?")}
        {Lisp-Entry "display-property?" () 149 11 ("title" "visible?" "children" "before" "name-info" "class-info" "field-name" "memq?" "not" "property")}
        {Lisp-Entry "indexable?" () 153 11 ("false")}
        {Lisp-Entry "get-row-instance" () 157 11 ("nextmethod" "else" "Boolean-Row" "sort?" "Class-List-Row" "new" "classes" "field-name" "case" "property")}}
      {Lisp-Entry "Class-List-Row" () 169 7 ("List-Row")
        {Lisp-Entry "get-subrow-class" () 172 11 ("Class-Combo-Row")}}
      {Lisp-Entry "Class-Combo-Row" () 181 7 ("Combo-Row")
        {Lisp-Entry "initialize" () 184 11 ("Recipe" "Apartment" "Password" "Person" "Organism" "Company" "Anniversary" "Calendar-Event" "Task" "Note" "Group" "set-choices" "nextmethod" "apply" "rest")}}}})
"Group-Box"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Group-Box.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Group-Box" () 37 9 ("jazz")
      {Lisp-Entry "Group-Box" () 47 7 ("Layout-View")
        {Lisp-Entry "flat?" () 50 12 ("set-flat?" "get-flat?" "false")}
        {Lisp-Entry "style" () 51 12 ("set-style" "get-style")}
        {Lisp-Entry "get-flat?" () 59 18 ("flat?")}
        {Lisp-Entry "set-flat?" () 63 18 ("invalidate-view" "flat?" "set!" "value")}
        {Lisp-Entry "get-style" () 68 18 ("style")}
        {Lisp-Entry "set-style" () 72 18 ("invalidate-view" "style" "set!" "value")}
        {Lisp-Entry "flat-look?" () 82 11 ("flat?" "else" "group/border/flat?" "get-look" "get-element" "styled" "style" "case")}
        {Lisp-Entry "draw" () 93 11 ("draw-text" "Black" "set-text-color" "+" "-" "fill-rect" "rectangle" "edges:" "sunken" "outer:" "raised" "inner:" "draw-edge" "0" "Rect" "new" "frame-rect" "if" "2" "ascent" "get" "/" "ceil" "top" "get-text-extent" "extent" "get-text-metrics" "metrics" "get-bounds" "rect" "Group-Border" "else" "Entry-Border" "entry" "style" "case" "frame-color" "flat-look?" "flat?" "Medium" "name:" "Color" "color" "9" "offset" "get-height" "height" "get-width" "width" "get-size" "size" "get-title" "either" "localize" "title" "let*" "lv" "lh" "update" "context" "dc")}}}})
"Group-Card"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "card" "Group-Card.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.card.Group-Card" () 37 9 ("jazz")
      {Lisp-Entry "Group-Card" () 48 7 ("classes-invite" "classes-image" "classes-group" "sort?" "Default-GUI" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "title" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "title-border" "general-invite" "visible?:" "Bitmap-Resource" "image-name:" ":large-icons" "portfolio:" "general-image" "0" "7" "title:" "general-group" "name:" "Dimension" "size:" "Point" "position:" "Custom-Card")
        {Lisp-Entry "Properties-Mapping" () 71 14 ("boolean" "sort?" "string" "title")}
        {Lisp-Entry "get-properties-mapping" () 76 11 ("Properties-Mapping")}
        {Lisp-Entry "resize" () 85 11 ("classes-group" "0" "general-group" "locate" "size-figure" "dv" "dh")}}}})
"Groupable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Groupable.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Groupable" () 37 9 ("jazz")
      {Lisp-Entry "Groupable" () 45 11 ()
        {Lisp-Entry "get-group" () 48 35 ()}
        {Lisp-Entry "set-group" () 49 35 ("value")}}}})
"Groupware-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "workspace" "Groupware-Workspace.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.workspace.Groupware-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Groupware-Workspace" () 46 7 ("Jazz-Console-Manager" "Debugger-Console-Manager" "Properties-Manager" "Search-Results" "Output-Log" "Web-Servers-Manager" "second" "Favorites-Manager" "Workbench-Manager" "selection" "Repository-Browser" "model-name:" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 72 11 ("groupware")}}}})
"Guest-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Guest-Actions.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.hosting.Guest-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Guest-Actions" () 46 7 ("on-compare-saved" "compare-saved" "on-revert-saved" "revert-saved" "on-save-as" "save-as" ":control" "Shortcut" "shortcut:" "on-save" ":guest" "Event-Handler" "action-handler:" "save" "name:" "Actions")}}})
"Guest-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Guest-Preferences.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.hosting.Guest-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Guest-Preferences" () 45 7 ("Frame-Preferences")
        {Lisp-Entry "initargs" () 48 12 ("generate" "accessors")}}}})
"Guillaume"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "user" "Guillaume.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "user.Guillaume" () 37 9 ("jazz")
      {Lisp-Entry "Guillaume" () 50 7 ("User")
        {Lisp-Entry "test" () 53 11 ("get-selection" "debug" "catalogs" "locate" "tree" "Catalogs-Manager" "find-guest" "manager" "get-stage" "stage" "let")}
        {Lisp-Entry "test-shift" () 60 11 ()}
        {Lisp-Entry "test1" () 64 11 ()}
        {Lisp-Entry "test2" () 68 11 ()}
        {Lisp-Entry "test6" () 72 11 ("user-message" "jazz.start-statprof")}
        {Lisp-Entry "test7" () 77 11 ("user-message" "jazz.stop-statprof")}
        {Lisp-Entry "test8" () 82 11 ("user-message" "jazz.report-statprof" "name" "let")}
        {Lisp-Entry "test9" () 87 11 ("Root" "File" "edit-module" "time")}
        {Lisp-Entry "edit-module" () 91 11 ("get-guest" "%" "get-application" "edit-document" "%h" "set!" "module-file")}}}})
"HTML-Document"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "html" "HTML-Document.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.html.HTML-Document" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Document" () 45 7 ("SHDocVw" "MSHTML" "COM" "Utilities" "Object")
        {Lisp-Entry "handle" () 48 15 ()}
        {Lisp-Entry "document" () 49 15 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "IHTMLDocument2" "coquery" "document" "handle" "set!" "nextmethod" "hnd")}
        {Lisp-Entry "destroy" () 59 11 ("nextmethod" "handle" "document" "corelease")}
        {Lisp-Entry "set-design-mode?" () 70 18 ("if" "document" "put-designMode" "flag")}
        {Lisp-Entry "get-anchors" () 79 18 ("get-output" "get-length" "naturals" "put" "title:" "get-href" "list" "URL" "url" "get-innerText" "text" "IHTMLAnchorElement" "anchor" "let*" "get-tagName" "=" "when" "IHTMLElement" "0" "item" "coquery" "element" "n" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "document" "get-links" "links" "let")}}}})
"HTML-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "html" "HTML-Editor.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.html.html.HTML-Editor" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Editor" () 48 7 ("6" "5" "text" "content" "title:" "text-sheet" "Default-GUI" "Font" "font:" "on-selection-change" "form:" "Event-Handler" "selection-handler:" "Dimension" "size:" "0" "Point" "position:" "tab" "name:" "Document" "Layout-View")
        {Lisp-Entry "get-controller" () 52 11 ()}
        {Lisp-Entry "new-controller" () 53 11 ()}
        {Lisp-Entry "load-content" () 54 11 ("moniker")}
        {Lisp-Entry "save-content" () 55 11 ("moniker")}
        {Lisp-Entry "verify-reload" () 56 11 ()}
        {Lisp-Entry "reload-moniker" () 57 11 ("moniker")}
        {Lisp-Entry "default-extension" () 58 11 ()}
        {Lisp-Entry "extensions" () 59 11 ()}
        {Lisp-Entry "focus-document" () 60 11 ()}
        {Lisp-Entry "install-scroller?" () 61 11 ()}
        {Lisp-Entry "tool-update" () 62 11 ("tool?")}
        {Lisp-Entry "console-update" () 63 11 ("console?")}
        {Lisp-Entry "current-history-item" () 64 11 ()}
        {Lisp-Entry "compare-moniker" () 65 11 ("moniker")}
        {Lisp-Entry "destroy" () 78 11 ("nextmethod" "controller" "close")}
        {Lisp-Entry "get-document-view" () 88 11 ("text" "find-component")}
        {Lisp-Entry "get-text-view" () 92 11 ("get-document-view" "current-text")}
        {Lisp-Entry "size-change" () 101 11 ("get-height" "get-width" "-" "Dimension" "new" "set-window-size" "when" "text" "locate" "tab" "let" "nextmethod" "size")}
        {Lisp-Entry "on-selection-change" () 110 11 ("false" "acquire-focus" "true" "set-visible?" "new-text" "tab-text" "old-text" "get-old" "rank->name" "old" "let*" "when" "get-selection-name" "new" "tab" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "focus-document" () 129 11 ("acquire-focus" "when" "get-text" "text" "let")}
        {Lisp-Entry "get-modified?" () 135 11 ("get-modified?" "when" "get-text" "text" "let")}
        {Lisp-Entry "select-next" () 141 11 ("select-next" "" "apply" "when" "get-text" "text" "let" "rest" "strings")}
        {Lisp-Entry "select-previous" () 147 11 ("select-previous" "" "apply" "when" "get-text" "text" "let" "rest" "strings")}
        {Lisp-Entry "select-expr" () 153 11 ("select-expr" "when" "get-text" "text" "let" "targets")}
        {Lisp-Entry "select-expr-backward" () 159 11 ("select-expr-backward" "when" "get-text" "text" "let" "targets")}
        {Lisp-Entry "current-history-item" () 170 11 ("current-history-item" "when" "current-text" "text" "let")}
        {Lisp-Entry "get-moniker" () 181 11 ("moniker")}
        {Lisp-Entry "set-moniker" () 185 11 ("update-tabs" "load-texts" "when" "moniker" "set!" "mnk")}
        {Lisp-Entry "save" () 192 11 ("current-text" "save")}}}})
"HTML-Generator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTML-Generator.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.http.HTML-Generator" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Generator" () 44 7 ("Object")
        {Lisp-Entry "directory" () 47 8 ()}
        {Lisp-Entry "get-directory" () 55 18 ("directory")}
        {Lisp-Entry "generate-page?" () 64 26 ("servlet" "resource")}
        {Lisp-Entry "setup-directory" () 68 26 ("generated-directory" "directory" "set!" "servlet" "resource" "request")}
        {Lisp-Entry "generated-directory" () 72 26 ("servlet" "resource" "request")}
        {Lisp-Entry "generated-page" () 76 26 ("directory" "new-directory" "new-file" "file" "generated-pagename" "name" "let*" "servlet" "resource" "root-directory" "request")}
        {Lisp-Entry "generated-pagename" () 82 26 ("either" "format" "name" "substitute" "base" "false" "error?:" "get-parameter" "essay" "action" "let*" "true" "include-action?" "include-action?:" "servlet" "resource" "request")}
        {Lisp-Entry "get-alias" () 94 26 ("error" "name")}}}})
"HTML-Page"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTML-Page.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.HTML-Page" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Page" () 44 7 ("Object")
        {Lisp-Entry "name" () 47 8 ()}
        {Lisp-Entry "html" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("name~self" "set!" "nextmethod" "name" "name:")}
        {Lisp-Entry "print" () 56 11 ("html" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-name" () 67 18 ("name")}
        {Lisp-Entry "get-html" () 71 18 ("html")}
        {Lisp-Entry "get-children" () 80 11 ("html" "list")}
        {Lisp-Entry "set-children" () 84 11 ("car" "html" "set!" "children")}
        {Lisp-Entry "add-child" () 88 11 ("html" "set!" "child")}
        {Lisp-Entry "render" () 97 11 ("html" "render-node" "printer" "level" "simple?" "context" "renderer")}}}})
"HTML-Previewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "html" "HTML-Previewer.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.html.HTML-Previewer" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Previewer" () 50 7 ("on-navigate-complete" "navigate-complete-handler:" "center" "browser" "on-refresh" "refresh" "4" "on-edit" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "edit" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "Dimension" "size:" "tools" "name:" "border" "layout-type:" "title:" "SHDocVw" "WinOLE" "WinUser" "WinDef" "COM" "System" "Utilities" "Layout-View")
        {Lisp-Entry "client" () 53 12 ("set-client" "get-client")}
        {Lisp-Entry "current-url" () 56 8 ()}
        {Lisp-Entry "rendering-file" () 57 8 ()}
        {Lisp-Entry "rendering-thread" () 58 8 ()}
        {Lisp-Entry "rendering-done?" () 59 8 ("false")}
        {Lisp-Entry "next-rendering" () 60 8 ()}
        {Lisp-Entry "about-blank" () 72 14 ()}
        {Lisp-Entry "rendering-quantum" () 76 14 ()}
        {Lisp-Entry "rendering-delay" () 79 14 ()}
        {Lisp-Entry "external-name" () 84 16 ("html-previewer" "rest")}
        {Lisp-Entry "palette-class" () 94 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 99 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 104 16 ()}
        {Lisp-Entry "client-activate" () 108 11 ("set-client" "HTML-Text-View" "is?" "if" "current-document" "view" "let")}
        {Lisp-Entry "client-deactivate" () 115 11 ("set-client")}
        {Lisp-Entry "get-tools-view" () 124 11 ("tools" "locate")}
        {Lisp-Entry "install-in-host" () 133 11 ("destroy-mandatory" "start-rendering-thread" "true" "get-window" "set-visible?" "get-browser" "setup" "nextmethod" "host")}
        {Lisp-Entry "destroy" () 141 11 ("nextmethod" "true" "rendering-done?" "set!" "delete-rendering-file" "stop-rendering-thread")}
        {Lisp-Entry "get-client" () 153 18 ("client")}
        {Lisp-Entry "set-client" () 157 18 ("setup-main-renderer" "get-site" "navigate" "null?" "if" "set!" "delete-rendering-file" "client" "/=" "when" "value")}
        {Lisp-Entry "get-browser" () 166 11 ("browser" "locate")}
        {Lisp-Entry "get-site" () 170 11 ("get-browser" "get-site")}
        {Lisp-Entry "on-navigate-complete" () 179 11 (":url" "get-property" "current-url" "set!" "evt")}
        {Lisp-Entry "on-edit" () 183 11 ("get-application" "edit-document" "bell" "=" "if" "get-extension" "ext" "tokenise" "File" "new" "file" "let*" "about-blank" "/=" "current-url" "and" "when" "evt")}
        {Lisp-Entry "on-refresh" () 192 11 ("render-html" "bell" "client" "null?" "if" "evt")}
        {Lisp-Entry "start-rendering-thread" () 203 11 ("new-rendering-thread" "rendering-thread" "set!")}
        {Lisp-Entry "new-rendering-thread" () 208 11 ("rendering-thread" "set!" "rendering-quantum" "sleep" "maybe-render" "client" "when" "rendering-done?" "not" "while" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new")}
        {Lisp-Entry "stop-rendering-thread" () 220 11 ("rendering-thread" "null?" "dynamic" "function" "wait-until" "true" "rendering-done?" "set!")}
        {Lisp-Entry "setup-main-renderer" () 225 18 ("rendering-delay" "clock" "+" "next-rendering" "set!" "get-site" "navigate" "rendering-file" "client" "save-to" "setup-rendering-file")}
        {Lisp-Entry "maybe-render" () 232 11 ("rendering-delay" "+" "render-html" "set!" "rendering-file" "clock" ">" "next-rendering" "and" "when")}
        {Lisp-Entry "render-html" () 239 11 ("get-site" "refresh" "rendering-file" "client" "save-to")}
        {Lisp-Entry "Scratch-Files" () 249 19 ()}
        {Lisp-Entry "get-scratch-info" () 253 16 ("Scratch-Files" "assoc" "file")}
        {Lisp-Entry "get-scratch-client" () 257 16 ("get-scratch-info" "cdr" "file")}
        {Lisp-Entry "setup-rendering-file" () 261 11 ("cons" "Scratch-Files" "set!" "directory:" "create-temporary-file" "file" "get-directory" "essay" "directory" "client" "get-controller" "get-moniker" "moniker" "let*" "rendering-file" "null?" "when")}
        {Lisp-Entry "delete-rendering-file" () 270 11 ("delete-file" "remove!" "Scratch-Files" "set!" "get-scratch-info" "info" "let" "rendering-file" "when")}}}})
"HTML-Printer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "html" "HTML-Printer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.html.html.HTML-Printer" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Printer" () 45 7 ("Object")
        {Lisp-Entry "client" () 48 8 ()}
        {Lisp-Entry "formatter" () 49 8 ()}
        {Lisp-Entry "printer" () 50 8 ()}
        {Lisp-Entry "action-no" () 51 8 ("0")}
        {Lisp-Entry "action-list" () 52 8 ()}
        {Lisp-Entry "initialize" () 55 11 ("printer~self" "formatter~self" "client~self" "set!" "nextmethod" "printer" "formatter" "client")}
        {Lisp-Entry "get-client" () 67 18 ("client")}
        {Lisp-Entry "get-formatter" () 71 18 ("formatter")}
        {Lisp-Entry "get-printer" () 75 18 ("printer")}
        {Lisp-Entry "get-action-list" () 79 18 ("action-list")}
        {Lisp-Entry "print-html" () 88 26 ()}
        {Lisp-Entry "with-document" () 92 18 ("print-footer" "print-header" "apply" "rest" "proc" "name")}
        {Lisp-Entry "print-header" () 98 18 (":centered?" "print-title" "when" "printer" "format" "localize" "let" "style-sheet" "style-sheet:" "2" "header-level" "header-level:" "true" "header?" "header?:" "name")}
        {Lisp-Entry "print-footer" () 112 18 ("printer" "format")}
        {Lisp-Entry "print-title" () 117 18 ("printer" "format" "when" "false" "centered?" "centered?:" "level" "title")}
        {Lisp-Entry "print-list" () 126 18 ("printer" "format" "list-tag" "tag" "let" "proc" "type")}
        {Lisp-Entry "list-tag" () 133 11 ("error" "else" ":unordered" ":ordered" "case" "type")}
        {Lisp-Entry "print-text" () 140 18 ("printer" "format" "line" "dynamic" "function" "for-each" "text")}
        {Lisp-Entry "print-action" () 146 18 ("increase!" "cons" "action-list" "set!" "printer" "format" "action-no" "no" "let" "action" "title")}}}})
"HTML-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "html" "HTML-Text-Actions.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.html.HTML-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Text-Actions" () 47 7 ("on-preformatted" "preformatted" "on-code" "code" "on-variable" "variable" "on-definition-data" "definition-data" "on-definition-term" "definition-term" "on-definition-list" "definition-list" "on-list-item" "list-item" "on-unordered-list" "unordered-list" "on-ordered-list" "ordered-list" "on-table-data" "table-data" "on-table-row" "table-row" "on-table-header" "table-header" "on-table" "table" "on-image" "image" "on-anchor" "anchor" "on-center" "center" "on-font" "font" "on-italic" "italic" "on-bold" "bold" "on-line-break" "line-break" "on-paragraph" "paragraph" "on-division" "division" "on-comment" "comment" "header3" "header2" ":control" "Shortcut" "shortcut:" "on-header" "header1" "on-base-template" ":focus" "Event-Handler" "action-handler:" "base-template" "name:" "Actions")}}})
"HTML-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "html" "HTML-Text-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.html.HTML-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Text-Preferences" () 48 7 ("Dark-Purple" "specifier-color:" "option-color:" "Purple" "attribute-color:" "Dark-Blue" "name:" "Color" "tag-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "tag-color" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "attribute-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "option-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "specifier-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 71 11 ("specifier-color" "option-color" "attribute-color" "tag-color")}
        {Lisp-Entry "get-row-instance" () 75 11 ("nextmethod" "else" "Color-Row" "new" "specifier-color" "option-color" "attribute-color" "tag-color" "field-name" "case" "property")}}}})
"HTML-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "html" "HTML-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.html.html.HTML-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Text-View" () 46 7 ("Code-Text-View")
        {Lisp-Entry "previewer" () 49 8 ()}
        {Lisp-Entry "install" () 52 11 ("get-specifier-color" "Specifier" "get-option-color" "Option" "get-attribute-color" "Attribute" "get-tag-color" "color:" "Default" "base:" "Tag" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 62 16 ("html-text" "rest")}
        {Lisp-Entry "frame-icon" () 71 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-workspaces" () 75 11 ("html")}
        {Lisp-Entry "on-render" () 84 11 ("setup-main-renderer" "HTML-Previewer" "find-palette" "previewer" "let" "evt")}
        {Lisp-Entry "context-menu" () 94 11 ("HTML-Text-Menu" "else" "Action-Menu" "new" "track-popup-menu" "cond" "always" "never" "if" ":move-caret" "context-menu-click" "not" "and" "action?" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "focus-actions" () 107 11 ("nextmethod" "html-text" "find-actions" "cons")}
        {Lisp-Entry "auto-complete" () 117 11 ("insert-char/backspace" "key")}
        {Lisp-Entry "on-base-template" () 126 11 ("get-output" "insert-string" "format" "String-Printer" "new" "printer" "with-closed" "evt")}
        {Lisp-Entry "on-header" () 147 11 ("format" "insert-tag" "level:" "get-property" "level" "let" "evt")}
        {Lisp-Entry "on-comment" () 152 11 ("insert-pair" "evt")}
        {Lisp-Entry "on-division" () 156 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-paragraph" () 160 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-line-break" () 164 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-insert-bold" () 168 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-insert-italic" () 172 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-font" () 176 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-center" () 180 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-anchor" () 184 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-image" () 188 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-table" () 192 11 ("true" ":vertical?" "insert-tag" "evt")}
        {Lisp-Entry "on-table-header" () 196 11 ("true" ":vertical?" "insert-tag" "evt")}
        {Lisp-Entry "on-table-row" () 200 11 ("true" ":vertical?" "insert-tag" "evt")}
        {Lisp-Entry "on-table-data" () 204 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-ordered-list" () 208 11 ("true" ":vertical?" "insert-tag" "evt")}
        {Lisp-Entry "on-unordered-list" () 212 11 ("true" ":vertical?" "insert-tag" "evt")}
        {Lisp-Entry "on-list-item" () 216 11 ("insert-string" "evt")}
        {Lisp-Entry "on-definition-list" () 220 11 ("insert-string" "evt")}
        {Lisp-Entry "on-definition-term" () 224 11 ("insert-string" "evt")}
        {Lisp-Entry "on-definition-data" () 228 11 ("insert-string" "evt")}
        {Lisp-Entry "on-variable" () 232 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-code" () 236 11 ("insert-tag" "evt")}
        {Lisp-Entry "on-preformatted" () 240 11 ("insert-tag" "evt")}
        {Lisp-Entry "insert-tag" () 249 11 ("end-tag" "start-tag" "insert-pair" "apply" "rest" "tag")}
        {Lisp-Entry "insert-pair" () 253 11 ("Range" "set-selection" "get-end" "e" "get-start" "s" "0" "1" "get-row" "Cell" "new" "length" "+" "set-caret" "insert-string" "format" "not" "str" "get-caret" "pos" "let" "empty-selection?" "if" "false" "vertical?" "vertical?:" "end" "start")}
        {Lisp-Entry "start-tag" () 272 11 ("format" "tag")}
        {Lisp-Entry "end-tag" () 276 11 ("format" "tag")}
        {Lisp-Entry "Tags" () 285 12 ()}
        {Lisp-Entry "get-tags" () 333 29 ("Tags")}
        {Lisp-Entry "Attributes" () 342 12 ()}
        {Lisp-Entry "get-attributes" () 360 29 ("Attributes")}
        {Lisp-Entry "Options" () 369 12 ()}
        {Lisp-Entry "get-options" () 377 29 ("Options")}
        {Lisp-Entry "Syntax-Targets" () 386 14 ()}
        {Lisp-Entry "Syntax-Automata" () 389 14 ()}
        {Lisp-Entry "syntax-targets" () 393 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 399 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 405 11 ("get-options" "false" "option" "get-attributes" "attribute" "get-tags" "tag" "list" "str" "dynamic" "function" "map" "append")}
        {Lisp-Entry "compute-syntax-automata" () 411 11 ("cpp/java-constituent?" "self" "false" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "preferences" () 420 11 ("html-text" "documents" "get-preferences")}
        {Lisp-Entry "colorize-type" () 424 11 ("Option" "option" "Attribute" "attribute" "Tag" "colorize-keyword" "tag" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}
      {Lisp-Entry "HTML-Text-Menu" () 436 7 ("recolorize-syntax" "code-text" "update-catalog" "text" "goto-line" "undo-checkout" "checkin" "view" "Bitmap-Resource" "icon:" "checkout" "html-text" "Action" "action:" "title:" "render" "name:" "Context-Menu")}
      {Lisp-Entry "Action-Menu" () 461 7 ("preformatted" "code" "variable" "definition-data" "definition-term" "definition-list" "list-item" "unordered-list" "ordered-list" "table-data" "table-row" "table-header" "table" "image" "anchor" "center" "font" "italic" "bold" "line-break" "paragraph" "division" "comment" "header-3" "header3" "header-2" "header2" "header-1" "header1" "html-text" "Action" "action:" "title:" "base-template" "name:" "Context-Menu")}}})
"HTML-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "html" "HTML-Viewer.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.html.HTML-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Viewer" () 47 7 ("browser" "name:" "fill" "layout-type:" "title:" "SHDocVw" "WinOLE" "WinUser" "WinDef" "COM" "System" "Utilities" "Layout-View")
        {Lisp-Entry "directory" () 50 12 ("set-directory" "get-directory")}
        {Lisp-Entry "text" () 51 12 ("set-text" "get-text")}
        {Lisp-Entry "rendering-file" () 54 8 ()}
        {Lisp-Entry "finish" () 67 11 ("destroy-mandatory" "setup-rendering" "nextmethod" "rest")}
        {Lisp-Entry "install-in-host" () 73 11 ("setup" "nextmethod" "host")}
        {Lisp-Entry "setup" () 78 18 ("render-text" "text" "when" "get-browser" "setup")}
        {Lisp-Entry "show-browser" () 84 18 ("true" "get-browser" "get-window" "set-visible?")}
        {Lisp-Entry "destroy" () 88 11 ("nextmethod" "set!" "delete-file" "rendering-file" "when")}
        {Lisp-Entry "get-directory" () 100 18 ("directory")}
        {Lisp-Entry "set-directory" () 104 18 ("directory" "set!" "value")}
        {Lisp-Entry "get-text" () 108 18 ("text")}
        {Lisp-Entry "set-text" () 112 18 ("render-text" "get-site" "when" "text" "set!" "value")}
        {Lisp-Entry "get-browser" () 118 18 ("browser" "locate")}
        {Lisp-Entry "get-site" () 122 11 ("get-browser" "get-site")}
        {Lisp-Entry "show" () 131 11 ("true" "get-browser" "set-visible?" "nextmethod")}
        {Lisp-Entry "hide" () 136 11 ("false" "get-browser" "set-visible?" "nextmethod")}
        {Lisp-Entry "setup-rendering" () 146 11 ("directory" "directory:" "create-temporary-file" "rendering-file" "set!")}
        {Lisp-Entry "render-text" () 150 11 ("render-html" "text" "format" "rendering-file" "File-Printer" "new" "printer" "with-closed")}
        {Lisp-Entry "render-html" () 156 11 ("rendering-file" "navigate" "get-site" "site" "let")}}}})
"HTML-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "workspace" "HTML-Workspace.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.workspace.HTML-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "HTML-Workspace" () 47 7 ("Jazz-Console-Manager" "vert" "second" "HTML-Previewer" "model-name:" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "HTML-Text-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 62 11 ("html")}}}})
"HTTP"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "HTTP" () 37 9 ("jazz")}})
"HTTP-Client"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Client.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Client" () 44 9 ("jazz")
      {Lisp-Entry "HTTP-Client" () 51 7 ("HTTP" "System" "Utilities" "Object")
        {Lisp-Entry "cookies" () 54 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "navigate" () 62 18 ("else" "name:" "Host" "navigate-safely" "append" "let" "split" "hostname" "receive" "list" "URL" "new" "url" "get-header" "location" "see-other" "case" "store-cookies" "get-code" "code" "send-request" "response" "build-request" "request" "let*" "parameters" "parameters:" "http" "port" "port:" "resource" "operation" "host")}
        {Lisp-Entry "navigate-safely" () 81 11 ("navigate" "resource" "operation" "host")}
        {Lisp-Entry "store-cookies" () 90 11 ("add-cookie" "cookie" "name" "dynamic" "function" "for-each-cookie" "response")}
        {Lisp-Entry "add-cookie" () 96 11 ("cookies" "hash-set!" "get-name" "name" "let" "cookie")}
        {Lisp-Entry "for-each-cookie" () 101 11 ("cookies" "for-each-hash" "proc")}
        {Lisp-Entry "send-request" () 110 11 (":socket" "HTTP-Response" "send-raw" "connect" "Heap-Block" "coerce" "block" "message-string" "string" "let*" "Socket" "new" "socket" "with-closed" "send-request" "unimplemented" "port" "host" "request")}
        {Lisp-Entry "build-request" () 121 11 ("add-cookies" "add-headers" "parameters:" ":resource" ":operation" "HTTP-Request" "new" "request" "let" "parameters" "resource" "operation" "port" "host")}
        {Lisp-Entry "add-headers" () 128 11 ("get-name" "add-header" "host" "request")}
        {Lisp-Entry "add-cookies" () 134 11 ("add-cookie" "cookie" "name" "dynamic" "function" "for-each-cookie" "request")}}}})
"HTTP-Connection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "HTTP-Connection.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.internet.HTTP-Connection" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Connection" () 44 7 ("WinInet" "WinBase" "WinDef" "Utilities" "Internet-Connection")
        {Lisp-Entry "default-port" () 47 11 ("INTERNET_DEFAULT_HTTP_PORT")}
        {Lisp-Entry "open-connection" () 51 11 ("0" "INTERNET_SERVICE_HTTP" "NULL" "either" "get-handle" "InternetConnect" "validate-server" "password" "username" "port" "server" "session")}
        {Lisp-Entry "validate-server" () 56 11 ("error" "0" "subseq" "=" "4" "length" ">=" "and" "when" "server")}}}})
"HTTP-Cookie"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Cookie.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Cookie" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Cookie" () 44 7 ("Object")
        {Lisp-Entry "name" () 47 8 ()}
        {Lisp-Entry "value" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("value~self" "name~self" "set!" "nextmethod" "value" "name")}
        {Lisp-Entry "print" () 57 11 ("value" "name" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-name" () 68 18 ("name")}
        {Lisp-Entry "get-value" () 72 18 ("value")}}}})
"HTTP-File-Response"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-File-Response.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.http.HTTP-File-Response" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-File-Response" () 44 7 ("HTTP-Response")
        {Lisp-Entry "content" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("read-content" "content" "set!" "nextmethod" "apply" "others" "file" "bind-keywords" "rest")}
        {Lisp-Entry "read-content" () 56 11 ("read-content" "File-Reader" "new" "reader" "with-closed" "file")}
        {Lisp-Entry "get-content" () 66 18 ("content")}
        {Lisp-Entry "send-message" () 75 11 ("content" "send-raw" "nextmethod" "socket")}}}})
"HTTP-Get-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "HTTP-Get-Request.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.internet.HTTP-Get-Request" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Get-Request" () 44 7 ("WinInet" "WinKernel" "WinBase" "WinDef" "System" "Utilities" "HTTP-InetRequest")
        {Lisp-Entry "open-request" () 47 11 ("INTERNET_OPTION_PASSWORD" "length" "INTERNET_OPTION_USERNAME" "InternetSetOption" "when" "winerror" "error" "not" "if" "INTERNET_FLAG_RELOAD" "0" "NULL" "get-handle" "HttpOpenRequest" "handle" "let" "password" "username" "parameter" "connection")}
        {Lisp-Entry "get-html" () 61 18 ("get-output" "multi-byte->string" "display" "set-element!" "true" "set!" "0" "=" "handle" "InternetReadFile" "bytes-read" "ok?" "receive" "not" "while" "false" "done?" "1" "+" "size:" "Heap-Block" "buffer" "size" "String-Printer" "new" "printer" "let*" "error" "HTTP_STATUS_OK" "/=" "if" "query-status-code" "status" "let" "get-html" "unimplemented" "send")}
        {Lisp-Entry "get-image" () 81 18 ("handle" "InternetReadFile" "bytes-read" "ok?" "receive" "size:" "Heap-Block" "new" "buffer" "query-content-length" "size" "let*" "error" "when" "HTTP_STATUS_OK" "/=" "if" "query-status-code" "status" "let" "send" "get-image" "unimplemented" "true" "error?" "error?:")}}}})
"HTTP-InetRequest"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "HTTP-InetRequest.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.internet.HTTP-InetRequest" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-InetRequest" () 44 7 ("WinInet" "WinKernel" "WinBase" "WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "open-request" "handle" "set!" "nextmethod" "password" "password:" "username" "username:" "parameter" "connection")}
        {Lisp-Entry "open-request" () 56 29 ("password" "username" "parameter" "connection")}
        {Lisp-Entry "destroy" () 60 11 ("nextmethod" "handle" "InternetCloseHandle")}
        {Lisp-Entry "get-handle" () 65 18 ("handle")}
        {Lisp-Entry "send" () 74 18 ("winerror" "error" "0" "NULL" "handle" "HttpSendRequest" "unless")}
        {Lisp-Entry "query-status-code" () 84 18 ("HTTP_QUERY_STATUS_CODE" "query-numerical-value")}
        {Lisp-Entry "query-content-length" () 88 18 ("HTTP_QUERY_CONTENT_LENGTH" "query-numerical-value2")}
        {Lisp-Entry "query-numerical-value" () 92 11 ("parse-integer" "0" "handle" "HttpQueryInfo" "make-string" "string" "let" "flag")}
        {Lisp-Entry "query-numerical-value2" () 99 11 ("parse-integer" "0" "handle" "HttpQueryInfo" "make-string" "string" "let" "flag")}
        {Lisp-Entry "get-extension" () 110 11 ("1" "+" "subseq" "when" "position" "return:" "find" "pos" "let" "page")}}}})
"HTTP-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Listener.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Listener" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Listener" () 44 11 ()
        {Lisp-Entry "hit" () 47 35 ("server")}
        {Lisp-Entry "receive-request" () 48 35 ("request" "server")}
        {Lisp-Entry "receive-servlet-request" () 49 35 ("servlet-class" "resource" "request" "server")}
        {Lisp-Entry "process-request" () 50 35 ("response" "request" "server")}}}})
"HTTP-Message"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Message.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Message" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Message" () 44 7 ("Object")}
      {Lisp-Entry "HTTP-Message" () 50 7 ("Object")
        {Lisp-Entry "headers" () 53 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "cookies" () 54 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "Header-End" () 62 14 ("Ansi-String" "list" "coerce")}
        {Lisp-Entry "Line-Separator" () 66 14 ("Ansi-String" "list" "coerce")}
        {Lisp-Entry "split-message" () 70 11 ("length" "+" "0" "subseq" "values" "null?" "if" "Header-End" "search" "end" "let" "message")}
        {Lisp-Entry "split-head" () 80 11 ("Line-Separator" "split" "head")}
        {Lisp-Entry "parse-headers" () 84 11 ("add-header" "2" "+" "value" "0" "subseq" "name" "position" "return:" "find" "pos" "let*" "empty-string?" "unless" "header" "dynamic" "function" "for-each" "headers")}
        {Lisp-Entry "parse-cookies" () 94 11 ("false" "error?:" "get-list-header" "parse-cookie" "for-each" "header")}
        {Lisp-Entry "parse-cookie" () 98 11 ("HTTP-Cookie" "new" "add-cookie" "1" "+" "value" "0" "subseq" "name" "semi" "position" "return:" "find" "pos" "let*" "cookie-value")}
        {Lisp-Entry "receive-body" () 107 11 ("get-output" "increase!" "String" "coerce" "string" "receive-raw" "block" "let*" "" "while" "format" "total" "String-Printer" "new" "printer" "=" "length" "body-length" "parse-integer" "null?" "if" "false" "error?:" "get-header" "content-length" "let" "body" "socket")}
        {Lisp-Entry "get-headers" () 131 18 ("headers")}
        {Lisp-Entry "get-header" () 135 18 ("error" "when" "headers" "hash-ref" "either" "true" "error?" "error?:" "name")}
        {Lisp-Entry "get-list-header" () 141 18 ("list" "string?" "if" "get-header" "apply" "value" "let" "rest" "name")}
        {Lisp-Entry "add-header" () 148 18 ("hash-set!" "else" "list" "append" "pair?" "null?" "cond" "new-value" "headers" "hash-ref" "actual" "let*" "value" "name")}
        {Lisp-Entry "get-cookies" () 162 18 ("cookies")}
        {Lisp-Entry "get-cookie" () 166 18 ("cookies" "hash-ref" "name")}
        {Lisp-Entry "get-cookie-value" () 170 18 ("get-value" "when" "get-cookie" "cookie" "let" "name")}
        {Lisp-Entry "add-cookie" () 176 18 ("cookies" "hash-set!" "get-name" "name" "let" "cookie")}
        {Lisp-Entry "for-each-cookie" () 181 18 ("cookies" "for-each-hash" "proc")}
        {Lisp-Entry "send-message" () 190 26 ("send-raw" "Heap-Block" "coerce" "block" "message-string" "string" "let*" "send-message" "unimplemented" "socket")}
        {Lisp-Entry "message-string" () 198 29 ()}
        {Lisp-Entry "output-headers" () 207 11 ("headers" "output-header" "value" "name" "dynamic" "function" "for-each-hash" "printer")}
        {Lisp-Entry "output-header" () 213 11 ("format" "printer" "value" "name")}
        {Lisp-Entry "output-cookies" () 217 11 ("format" "output-header" "get-value" "value" "let" "cookie" "name" "dynamic" "function" "for-each-cookie" "printer" "header")}}}})
"HTTP-Put-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "HTTP-Put-Request.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.internet.HTTP-Put-Request" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Put-Request" () 44 7 ("WinInet" "WinBase" "WinDef" "Utilities" "HTTP-InetRequest")}}})
"HTTP-Recorder"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Recorder.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Recorder" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Recorder" () 44 7 ("HTTP-Listener" "Object")
        {Lisp-Entry "server" () 47 8 ()}
        {Lisp-Entry "requests" () 48 8 ()}
        {Lisp-Entry "get-requests" () 56 18 ("requests" "get-output")}
        {Lisp-Entry "recording?" () 65 18 ("server" "not-null?")}
        {Lisp-Entry "start-recording" () 69 18 ("self" "add-listener" "List-Factory" "new" "requests~self" "server~self" "set!" "server")}
        {Lisp-Entry "stop-recording" () 75 18 ("server~self" "set!" "self" "server" "remove-listener")}
        {Lisp-Entry "record-servlet?" () 80 29 ("true" "servlet-class" "resource")}
        {Lisp-Entry "hit" () 89 11 ("server")}
        {Lisp-Entry "receive-request" () 93 11 ("request" "server")}
        {Lisp-Entry "receive-servlet-request" () 97 11 ("requests" "put" "record-servlet?" "when" "servlet-class" "resource" "request" "server")}
        {Lisp-Entry "process-request" () 102 11 ("response" "request" "server")}}}})
"HTTP-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Request.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Request" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Request" () 44 7 ("HTTP" "System" "Utilities" "HTTP-Message")
        {Lisp-Entry "Cookie-Header" () 47 14 ()}
        {Lisp-Entry "host" () 51 8 ()}
        {Lisp-Entry "port" () 52 8 ()}
        {Lisp-Entry "operation" () 53 8 ()}
        {Lisp-Entry "resource" () 54 8 ()}
        {Lisp-Entry "version" () 55 8 ()}
        {Lisp-Entry "parameters" () 56 8 ()}
        {Lisp-Entry "server" () 57 8 ()}
        {Lisp-Entry "session" () 58 8 ()}
        {Lisp-Entry "initialize" () 61 11 ("parse-request" "get-port" "port" "get-host" "host" "when" "parameters~self" "resource~self" "operation~self" "set!" "nextmethod" "socket" "socket:" "parameters" "parameters:" "resource" "resource:" "operation" "operation:")}
        {Lisp-Entry "parse-request" () 111 11 ("either" "parse-parameters" "parameters~self" "receive-body" "let" "Cookie-Header" "parse-cookies" "parse-headers" "version~self" "resource~self" "operation~self" "set!" "parse-resource" "fragment" "split" "version" "resource" "operation" "split-head" "headers" "line" "bind" "split-message" "body" "head" "receive" "String" "coerce" "message" "receive-raw" "block" "let*" "socket")}
        {Lisp-Entry "parse-resource" () 127 11 ("+" "1" "subseq" "url-decode" "values" "null?" "if" "position" "return:" "find" "pos" "let" "resource")}
        {Lisp-Entry "parse-parameters" () 136 11 ("url-decode" "cons" "1" "+" "parse-value" "value" "0" "subseq" "name" "position" "return:" "find" "pos" "let*" "parameter" "dynamic" "function" "map" "split" "let" "whitespace?" "unless" "parameters")}
        {Lisp-Entry "parse-value" () 147 11 ("substitute" "value")}
        {Lisp-Entry "get-host" () 156 18 ("host")}
        {Lisp-Entry "get-port" () 160 18 ("port")}
        {Lisp-Entry "get-operation" () 164 18 ("operation")}
        {Lisp-Entry "get-resource" () 168 18 ("resource")}
        {Lisp-Entry "get-version" () 172 18 ("version")}
        {Lisp-Entry "get-parameters" () 176 18 ("parameters")}
        {Lisp-Entry "get-parameter" () 180 18 ("error" "when" "cdr" "if" "parameters" "assoc" "info" "let" "true" "error?" "error?:" "name")}
        {Lisp-Entry "get-server" () 188 18 ("server")}
        {Lisp-Entry "set-server" () 192 18 ("server" "set!" "value")}
        {Lisp-Entry "get-session" () 196 18 ("session")}
        {Lisp-Entry "set-session" () 200 18 ("session" "set!" "value")}
        {Lisp-Entry "close-session" () 204 18 ("set!" "session" "HTTP-Session" "close-session")}
        {Lisp-Entry "message-string" () 214 11 ("get-output" "output-parameters" "format" "operation" "=" "when" "Cookie-Header" "output-cookies" "output-headers" "output-control" "String-Printer" "new" "printer" "let")}
        {Lisp-Entry "output-control" () 225 11 ("output-parameters" "=" "when" "resource" "operation" "format" "printer")}
        {Lisp-Entry "output-parameters" () 233 11 ("url-encode" "format" "unless" "value" "name" "bind" "do" "false" "then" "true" "first" "first?" "parameters" "in" "parameter" "for" "loop" "printer")}}}})
"HTTP-Response"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Response.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Response" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Response" () 44 7 ("HTTP-Message")
        {Lisp-Entry "Cookie-Header" () 47 14 ()}
        {Lisp-Entry "version" () 51 8 ()}
        {Lisp-Entry "code" () 52 8 ()}
        {Lisp-Entry "body" () 53 8 ()}
        {Lisp-Entry "initialize" () 56 11 ("parse-response" "when" "body~self" "ok" "either" "code~self" "set!" "nextmethod" "socket" "socket:" "body" "body:" "code" "code:")}
        {Lisp-Entry "parse-response" () 93 11 ("receive-body" "body~self" "Cookie-Header" "parse-cookies" "parse-headers" "parse-code" "code~self" "version~self" "set!" "split" "code-text" "code" "version" "split-head" "headers" "line" "bind" "split-message" "body" "head" "receive" "String" "coerce" "message" "receive-raw" "block" "let*" "socket")}
        {Lisp-Entry "get-version" () 111 18 ("version")}
        {Lisp-Entry "get-code" () 115 18 ("code")}
        {Lisp-Entry "Response-Codes" () 124 14 ("server-error" "not-found" "see-other" "ok")}
        {Lisp-Entry "parse-code" () 131 11 ("unknown" "first" "if" "equal?" "test:" "second" "key:" "Response-Codes" "find" "info" "let" "code")}
        {Lisp-Entry "response-code-info" () 138 11 ("error" "Response-Codes" "assq" "either" "code")}
        {Lisp-Entry "get-body" () 148 18 ("body")}
        {Lisp-Entry "message-string" () 157 11 ("get-output" "output-body" "Cookie-Header" "output-cookies" "output-headers" "output-control" "String-Printer" "new" "printer" "let")}
        {Lisp-Entry "output-control" () 166 11 ("format" "response-code-info" "text" "number" "code" "bind" "printer")}
        {Lisp-Entry "output-body" () 171 11 ("body" "when" "format" "printer")}}}})
"HTTP-Server"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Server.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Server" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Server" () 44 7 ("Socket-Listener")
        {Lisp-Entry "host" () 47 8 ()}
        {Lisp-Entry "port" () 48 8 ()}
        {Lisp-Entry "debug?" () 49 8 ()}
        {Lisp-Entry "hits" () 50 8 ("0")}
        {Lisp-Entry "listeners" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("debug?~self" "port~self" "host~self" "set!" "nextmethod" "apply" "others" "false" "debug?" "http" "port" "host" "bind-keywords" "rest")}
        {Lisp-Entry "get-host" () 67 18 ("host")}
        {Lisp-Entry "get-port" () 71 18 ("port")}
        {Lisp-Entry "get-debug?" () 75 18 ("debug?")}
        {Lisp-Entry "set-debug?" () 79 18 ("debug?" "set!" "value")}
        {Lisp-Entry "get-hits" () 83 18 ("hits")}
        {Lisp-Entry "run" () 92 11 (":port" ":host" "start-listener" "server-port" "port" "server-host" "host" "let" "server-name" "set-name")}
        {Lisp-Entry "server-name" () 104 29 ()}
        {Lisp-Entry "server-host" () 108 29 ("host")}
        {Lisp-Entry "server-port" () 112 29 ("port")}
        {Lisp-Entry "accept-connection" () 122 11 ("close" "send-response" "Socket-Error" "catch" "request-html" "response" "let" "unwind-protect" "server-hit" "socket")}
        {Lisp-Entry "accept-connection" () 134 11 ("close" "send-message" "Socket-Error" "catch" "request-html" "response" "let" "unwind-protect" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "server-hit" "socket")}
        {Lisp-Entry "server-hit" () 150 11 ("call-listeners-hit" "hits" "increase!")}
        {Lisp-Entry "request-html" () 155 11 ("call-listeners-process-request" "not-found" ":code" "generate-not-found" "request-response" "if" "response" "generate-response" "response/html" "let*" "setup-session" "self" "set-server" "dynamic" "function" "with-error-reporting" "call-listeners-receive-request" ":socket" "HTTP-Request" "new" "request" "let" "socket")}
        {Lisp-Entry "with-error-reporting" () 171 11 ("server-error" ":code" "request-response" "debugger" "select-workspace" "read-string-element" "get-debuggers-view" "add-snapshot" "post-primary" "IDE" "typed?" "when" "get-application" "appl" ":string" "print-stack" "stack" "present-error" "set!" "debug?" "not" "if" "exc" "dynamic" "function" "Exception" "call-with-catch" "html" "let" "proc" "request")}
        {Lisp-Entry "present-error" () 191 11 ("format" "msg" "debug?" "not" "if" "get-message" "text" "let" "stack" "err")}
        {Lisp-Entry "SessionID" () 211 14 ()}
        {Lisp-Entry "NoSession" () 214 14 ()}
        {Lisp-Entry "setup-session" () 218 11 ("set-session" "HTTP-Session" "find-session" "session" "parse-integer" "session-id" "let*" "NoSession" "/=" "and" "when" "SessionID" "get-cookie-value" "sessionid" "let" "request")}
        {Lisp-Entry "add-session-cookie" () 227 11 ("HTTP-Cookie" "new" "add-cookie" "get-id" "->string" "NoSession" "null?" "if" "value" "SessionID" "name" "let" "session" "response")}
        {Lisp-Entry "request-response" () 240 11 ("add-session-cookie" "add-content-length" "add-content-type" "add-connection-close" ":body" ":code" "new" "response" "get-session" "session" "effective-html" "body" "let*" "HTTP-Response" "is?" "if" "code" "code:" "response/html" "request")}
        {Lisp-Entry "effective-html" () 253 11 ("process-jml" "pair?" "string?" "cond" "html" "request")}
        {Lisp-Entry "add-connection-close" () 260 11 ("add-header" "response")}
        {Lisp-Entry "add-content-type" () 264 11 ("add-header" "type" "response")}
        {Lisp-Entry "add-location" () 268 11 ("add-header" "location" "response")}
        {Lisp-Entry "add-content-length" () 272 11 ("length" "format" "add-header" "when" "content" "response")}
        {Lisp-Entry "generate-response" () 282 29 ("request")}
        {Lisp-Entry "generate-not-found" () 286 11 ("request-content" "request")}
        {Lisp-Entry "jml-preferences" () 302 29 ("JML-Preferences" "new")}
        {Lisp-Entry "jml-parser" () 306 29 ("preferences:" "XHTML-Parser" "new" "pref")}
        {Lisp-Entry "jml-renderer" () 310 29 ("XHTML-Renderer" "new" "pref")}
        {Lisp-Entry "process-jml" () 314 11 ("get-output" "render" "String-Printer" "new" "printer" "parse" "jml-renderer" "renderer" "jml-parser" "parser" "jml-preferences" "pref" "let*" "jml" "request")}
        {Lisp-Entry "add-listener" () 329 18 ("cons" "listeners" "set!" "listener")}
        {Lisp-Entry "remove-listener" () 333 18 ("remove!" "listeners" "set!" "listener")}
        {Lisp-Entry "call-listeners-hit" () 337 11 ("listeners" "self" "hit" "listener" "dynamic" "function" "for-each")}
        {Lisp-Entry "call-listeners-receive-request" () 343 11 ("listeners" "self" "receive-request" "listener" "dynamic" "function" "for-each" "request")}
        {Lisp-Entry "call-listeners-receive-servlet-request" () 349 11 ("listeners" "self" "receive-servlet-request" "listener" "dynamic" "function" "for-each" "servlet-class" "resource" "request")}
        {Lisp-Entry "call-listeners-process-request" () 355 11 ("listeners" "self" "process-request" "listener" "dynamic" "function" "for-each" "response" "request")}
        {Lisp-Entry "all-details" () 366 18 ("session-details" "request-details" "request")}
        {Lisp-Entry "debug-request" () 371 18 ("request-details" "request")}
        {Lisp-Entry "request-details" () 379 11 ("request-content" "request")}
        {Lisp-Entry "map-hash" () 385 18 ("get-output" "next" "peek" "peek-key" "put" "done?" "not" "while" "List-Factory" "fact" "Hashtable-Iterator" "new" "iter" "let" "hashtable" "proc")}
        {Lisp-Entry "request-content" () 394 11 ("bind" "parameter" "map" "get-value" "cookie" "value" "name" "dynamic" "function" "map-hash" "->string" "border:" "get-parameters" "parameters" "get-cookies" "cookies" "get-headers" "headers" "get-version" "version" "get-resource" "resource" "get-operation" "operation" "get-port" "port" "get-host" "host" "let" "request")}
        {Lisp-Entry "session-details" () 447 11 ("session-content" "request")}
        {Lisp-Entry "session-content" () 452 11 ("value" "property" "dynamic" "function" "map-property" "->string" "border:" "get-properties" "properties" "get-id" "id" "when" "get-session" "session" "let" "request")}}}})
"HTTP-Servlet"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Servlet.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Servlet" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Servlet" () 44 7 ("XHTML-Parser")
        {Lisp-Entry "server" () 47 8 ()}
        {Lisp-Entry "request" () 48 8 ()}
        {Lisp-Entry "generator" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("generator~self" "request~self" "server~self" "set!" "preferences:" "nextmethod" "preferences" "generator" "request" "server")}
        {Lisp-Entry "get-server" () 64 18 ("server")}
        {Lisp-Entry "get-request" () 68 18 ("request")}
        {Lisp-Entry "get-generator" () 72 18 ("generator")}
        {Lisp-Entry "process-request" () 81 18 ("invoke-servlet" "parse" "resource" "request")}
        {Lisp-Entry "invoke-servlet" () 86 19 ("error" "find-pattern" "either" "resource" "request")}
        {Lisp-Entry "find-pattern" () 96 11 ("assoc" "cadr" "get-pattern-associations" "associations" "let" "resource" "request")}
        {Lisp-Entry "get-pattern-associations" () 101 29 ()}
        {Lisp-Entry "forward-servlet" () 110 18 ()}
        {Lisp-Entry "debug-info" () 119 11 ("request" "all-details" "server" "get-debug?" "when")}
        {Lisp-Entry "debug-values" () 125 11 ("->string" "value" "dynamic" "function" "map" "border:" "server" "get-debug?" "when" "values")}}}})
"HTTP-Session"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "HTTP-Session.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.HTTP-Session" () 37 9 ("jazz")
      {Lisp-Entry "HTTP-Session" () 44 7 ("Object")
        {Lisp-Entry "Session-Id" () 52 19 ("0")}
        {Lisp-Entry "Sessions" () 56 19 ()}
        {Lisp-Entry "get-sessions" () 60 23 ("Sessions")}
        {Lisp-Entry "new-session" () 64 23 ("increase!" "cons" "Sessions" "set!" "Session-Id" "self" "new" "session" "let")}
        {Lisp-Entry "close-session" () 71 23 ("remove!" "Sessions" "set!" "session")}
        {Lisp-Entry "find-session" () 75 23 ("Sessions" "get-id" "=" "session" "dynamic" "function" "find-if" "session-id")}
        {Lisp-Entry "id" () 86 8 ()}
        {Lisp-Entry "properties" () 87 8 ()}
        {Lisp-Entry "initialize" () 90 11 ("id~self" "set!" "nextmethod" "id")}
        {Lisp-Entry "print" () 95 11 ("id" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-id" () 106 18 ("id")}
        {Lisp-Entry "Not-Found" () 115 14 ("not-found" "Box")}
        {Lisp-Entry "get-properties" () 119 18 ("properties")}
        {Lisp-Entry "get-property" () 123 18 ("error" "when" "neq?" "if" "Not-Found" "not-found:" "properties" "getf" "value" "let" "true" "error?" "error?:" "name")}
        {Lisp-Entry "set-property" () 131 18 ("addf" "set!" "setf" "properties" "getprop" "if" "value" "name")}}}})
"Handle-Container"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Handle-Container.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.utility.Handle-Container" () 37 9 ("jazz")
      {Lisp-Entry "Handle-Container" () 40 11 ()
        {Lisp-Entry "get-handle" () 43 35 ()}}}})
"Handler"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "handler" "Handler.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.handler.Handler" () 37 9 ("jazz")
      {Lisp-Entry "Handler" () 43 7 ("Object")
        {Lisp-Entry "execute" () 46 8 ("generate")}
        {Lisp-Entry "target" () 47 8 ("generate")}
        {Lisp-Entry "target-name" () 48 8 ("generate")}
        {Lisp-Entry "method-name" () 49 8 ("generate")}
        {Lisp-Entry "form-level" () 50 8 ("generate")}
        {Lisp-Entry "initialize" () 53 11 ("form-level~self" "method-name~self" "target-name~self" "target~self" "execute~self" "set!" "nextmethod" "form-level" "form-level:" "method-name" "method-name:" "target-name" "target-name:" "target" "target:" "execute" "execute:")}
        {Lisp-Entry "print" () 62 11 ("method-name" "target-name" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "invoke" () 74 26 ("" "apply" "method-name" "eval-symbol" "proc" "find-target" "either" "target" "let*" "execute" "if" "rest" "sender")}
        {Lisp-Entry "find-target" () 82 18 ("else" "cdr" "car" "pair?" "and" "form-level" "child" "form:" "=" "cond" "target-name" "get-process" "process-alias" "Component" "is-not?" "if" "sender")}}}})
"Handler-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Handler-Row.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.designer.row.Handler-Row" () 37 9 ("jazz")
      {Lisp-Entry "Handler-Row" () 46 7 ("Value-Row")}}})
"Hashtable-Iterator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Hashtable-Iterator.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.iterator.Hashtable-Iterator" () 37 9 ("jazz")
      {Lisp-Entry "Hashtable-Iterator" () 44 7 ("JzHashtableGetValue" "JzHashtableGetKey" "int" "JzHashtableNextEntry" "Hashtable" "JzHashtableFirstEntry" "Iterator")
        {Lisp-Entry "hashtable" () 47 8 ()}
        {Lisp-Entry "current" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("JzHashtableFirstEntry" "current" "hashtable" "set!" "nextmethod" "h")}
        {Lisp-Entry "peek" () 57 11 ("current" "hashtable" "JzHashtableGetValue")}
        {Lisp-Entry "peek-key" () 61 18 ("current" "hashtable" "JzHashtableGetKey")}
        {Lisp-Entry "next" () 65 11 ("hashtable" "JzHashtableNextEntry" "current" "set!")}
        {Lisp-Entry "done?" () 69 11 ("current" "=")}
        {Lisp-Entry "int" () 78 17 ()}
        {Lisp-Entry "int" () 79 17 ()}
        {Lisp-Entry "Object" () 80 17 ()}
        {Lisp-Entry "Object" () 81 17 ()}}}})
"Hashtable-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Hashtable-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Hashtable-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Hashtable-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-growth" "test-hashtable" "invoke")}
        {Lisp-Entry "hashtable" () 62 14 ("eq?" "new-hashtable")}
        {Lisp-Entry "test-hashtable" () 65 11 ("3" "5" "=" "goo" "hash-ref" "null?" "rpt" "validate" "2" "foo" "hashtable" "hash-set!")}
        {Lisp-Entry "small-hashtable" () 81 14 ("eq?" "new-hashtable")}
        {Lisp-Entry "test-growth" () 84 11 ("5" "hoo" "3" "goo" "2" "foo" "small-hashtable" "hash-set!")}}}})
"Header-Bar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Header-Bar.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Header-Bar" () 37 9 ("jazz")
      {Lisp-Entry "Header-Bar" () 46 7 ("Container")
        {Lisp-Entry "flat?" () 49 12 ("set-flat?" "get-flat?" "false")}
        {Lisp-Entry "shown?" () 50 12 ("set-shown?" "get-shown?" "true")}
        {Lisp-Entry "style" () 51 12 ("set-style" "get-style")}
        {Lisp-Entry "client" () 54 8 ()}
        {Lisp-Entry "get-flat?" () 62 18 ("flat?")}
        {Lisp-Entry "set-flat?" () 66 18 ("layout-view" "set!" "flat?" "/=" "when" "value")}
        {Lisp-Entry "get-shown?" () 72 18 ("shown?")}
        {Lisp-Entry "set-shown?" () 76 18 ("layout-view" "set!" "shown?" "/=" "when" "value")}
        {Lisp-Entry "get-style" () 82 18 ("style")}
        {Lisp-Entry "set-style" () 86 18 ("style" "set!" "value")}
        {Lisp-Entry "flat-look?" () 95 11 ("flat?" "else" "document/header/flat?" "document" "tool/header/flat?" "get-look" "get-element" "tool" "style" "case")}
        {Lisp-Entry "get-client" () 107 18 ("client")}
        {Lisp-Entry "set-client" () 111 18 ("client" "set!" "clt")}
        {Lisp-Entry "layout" () 120 11 ("content-size" "set-size" "content-position" "set-position" "get-size" "size" "when" "get-content" "content" "let")}
        {Lisp-Entry "content-position" () 128 11 ("get-header-height" "0" "Point" "new" "size")}
        {Lisp-Entry "content-size" () 132 11 ("get-header-height" "get-height" "-" "get-width" "Dimension" "new" "size")}
        {Lisp-Entry "get-header-height" () 138 26 ("0" "flat?" "shown?" "if")}
        {Lisp-Entry "get-row-instance" () 147 11 ("nextmethod" "else" "Boolean-Row" "new" "shown?" "flat?" "field-name" "case" "property")}}}})
"Header-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Header-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Header-View" () 37 9 ("jazz")
      {Lisp-Entry "Header-View" () 47 7 ("Container")
        {Lisp-Entry "flat?" () 50 12 ("set-flat?" "get-flat?" "false")}
        {Lisp-Entry "shown?" () 51 12 ("set-shown?" "get-shown?" "true")}
        {Lisp-Entry "style" () 52 12 ("set-style" "get-style")}
        {Lisp-Entry "client" () 55 8 ()}
        {Lisp-Entry "default-name" () 58 11 ("header")}
        {Lisp-Entry "get-flat?" () 67 18 ("flat?")}
        {Lisp-Entry "set-flat?" () 71 18 ("layout-view" "set!" "flat?" "/=" "when" "value")}
        {Lisp-Entry "get-shown?" () 77 18 ("shown?")}
        {Lisp-Entry "set-shown?" () 81 18 ("layout-view" "set!" "shown?" "/=" "when" "value")}
        {Lisp-Entry "get-style" () 87 18 ("style")}
        {Lisp-Entry "set-style" () 91 18 ("style" "set!" "value")}
        {Lisp-Entry "flat-look?" () 100 11 ("flat?" "else" "document/header/flat?" "document" "tool/header/flat?" "get-look" "get-element" "tool" "style" "case")}
        {Lisp-Entry "get-client" () 112 18 ("client")}
        {Lisp-Entry "set-client" () 116 18 ("client" "set!" "clt")}
        {Lisp-Entry "layout" () 125 11 ("content-size" "set-size" "content-position" "set-position" "get-size" "size" "when" "get-content" "content" "let")}
        {Lisp-Entry "content-position" () 133 11 ("get-header-height" "0" "Point" "new" "size")}
        {Lisp-Entry "content-size" () 137 11 ("get-header-height" "get-height" "-" "get-width" "Dimension" "new" "size")}
        {Lisp-Entry "get-header-height" () 143 26 ("0" "flat?" "shown?" "if")}
        {Lisp-Entry "get-row-instance" () 152 11 ("nextmethod" "else" "Boolean-Row" "new" "shown?" "flat?" "field-name" "case" "property")}}}})
"Heading-Slide"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "slide" "Heading-Slide.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.slide.Heading-Slide" () 37 9 ("jazz")
      {Lisp-Entry "Heading-Slide" () 45 7 ("Slide")
        {Lisp-Entry "heading-range" () 48 12 ("generate" "accessors")}}}})
"Heap-Block"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "Heap-Block.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.kernel.runtime.Heap-Block" () 37 9 ("jazz")
      {Lisp-Entry "Heap-Block" () 44 7 ("Sequence")}
      {Lisp-Entry "Heap-Block" () 50 7 ("Object" "JzHeapBlockHandle" "Sequence")
        {Lisp-Entry "print" () 53 11 ("length" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "construct-literal" () 60 16 ("read-char" "read-byte" "set-element!" "do" "below" "0" "from" "n" "for" "loop" "reader" "skip-whites" "size:" "new" "block" "length" "size" "let*" "self" "coerce" "bytes" "context")}
        {Lisp-Entry "print" () 73 11 ("element" "do" "below" "0" "from" "n" "for" "loop" "length" "size" "let" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-handle" () 82 18 ("self" "JzHeapBlockHandle")}
        {Lisp-Entry "int" () 91 17 ()}}}})
"Help"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "help" "Help.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.help.Help" () 37 9 ("jazz")
      {Lisp-Entry "Help" () 44 7 ("WinHelp" "WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "show-help" () 47 23 ("parse" "NULL" "HtmlHelp" "file")}}}})
"Help-Contents"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "help" "Help-Contents.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.help.Help-Contents" () 37 9 ("jazz")
      {Lisp-Entry "Help-Contents" () 49 7 ("descendant" "highlight-edited?:" "show-header?:" "tree" "shown?:" "header" "content" "flat?:" "scroller" "center" "descendants" "on-synchronize" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "synchronize" "north" "location:" "6" "0" "Rect" "layout-insets:" "flow" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Editor-View")
        {Lisp-Entry "external-name" () 66 16 ("help-contents" "rest")}
        {Lisp-Entry "palette-class" () 76 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 81 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-tools-view" () 90 11 ("tools" "locate")}
        {Lisp-Entry "tool-preferences" () 99 11 ("help-contents" "tools" "get-preferences")}
        {Lisp-Entry "install" () 108 11 ("get-client" "set-client" "when" "get-application" "get-documentation-catalog" "catalog" "let" "self" "descendants" "locate" "set-editor" "nextmethod" "rest")}
        {Lisp-Entry "document-status" () 122 11 ()}
        {Lisp-Entry "on-synchronize" () 131 11 ("evt")}
        {Lisp-Entry "synchronize-tree" () 140 11 ("contents-sheet" "tab" "set-selection-name" "row-rank" "set-single-selection" "ensure-expanded" "bell" "null?" "if" "component-row" "row" "descendants" "locate" "tree" "let*" "component")}}}})
"Help-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "help" "Help-Index.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.help.Help-Index" () 37 9 ("jazz")
      {Lisp-Entry "Help-Contents" () 49 7 ("search" "search-border" "on-return-press" "return-press-handler:" "top-padding:" "left-padding:" "show-unfocused-selection?:" "focus-selects-all?:" "accepts-returns?:" "find" "9" "find-border" "8" "search-sheet" "width:" "index" "fill" "vscroll?:" "hscroll?:" "index-border" "index-sheet" "edge" "border-type:" "4" "descendants-border" "title:" "contents-sheet" "on-selection" "selection-handler:" "1" "Point" "position:" "tab" "descendant" "highlight-edited?:" "show-header?:" "tree" "header" "content" "flat?:" "scroller" "center" "descendants" "on-synchronize" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "synchronize" "north" "location:" "6" "flow" "tools" "name:" "2" "0" "Rect" "layout-insets:" "border" "layout-type:" "Dimension" "size:" "Editor-View")
        {Lisp-Entry "palette-class" () 113 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 118 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 123 16 ()}
        {Lisp-Entry "get-tools-view" () 132 11 ("tools" "locate")}
        {Lisp-Entry "tool-preferences" () 141 11 ("help-index" "tools" "get-preferences")}
        {Lisp-Entry "install" () 150 11 ("search" "index" "self" "set-editor" "false" "header" "descendants" "locate" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "client-update" () 158 11 ("search" "client" "index" "locate" "set-client" "nextmethod")}
        {Lisp-Entry "focus-document" () 164 11 ("tree" "descendants" "locate" "acquire-focus")}
        {Lisp-Entry "document-status" () 173 11 ()}
        {Lisp-Entry "resize-center" () 182 29 ("search-border" "index-border" "descendants-border" "0" "tab" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-splitter-move" () 189 18 ("update-view" "search-border" "find-border" "index-border" "descendants-border" "0" "tab" "locate" "size-figure" "right" "get-name" "case" ":delta" "get-property" "delta" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-selection" () 202 18 ("select-all" "acquire-focus" "find" "text" "search-sheet" "get-selection-name" "=" "when" "locate" "tab" "let" "evt")}
        {Lisp-Entry "synchronize-tree" () 215 11 ("contents-sheet" "tab" "set-selection-name" "row-rank" "set-single-selection" "ensure-expanded" "bell" "null?" "if" "component-row" "row" "descendants" "locate" "tree" "let*" "component")}
        {Lisp-Entry "search" () 230 11 ("search" "locate" "set-target" "target")}}}})
"Help-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Help-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Help-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Help-Workspace" () 46 7 ("second" "Help-Contents" "model-name:" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 59 11 ("help")}}}})
"Hierarchy-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "code" "Hierarchy-Browser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.code.Hierarchy-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Hierarchy-Browser" () 49 7 ("width:" "title:" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "show-header?:" "Axis" "sons-class:" "definitions" "shown?:" "header" "content" "flat?:" "hscroll?:" "vscroll?:" "scroller" "on-update" "update" "on-toggle-sorted" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "Dimension" "size:" "sorted?" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "client" () 52 12 ("set-client" "get-client")}
        {Lisp-Entry "external-name" () 69 16 ("definitions-browser" "rest")}
        {Lisp-Entry "palette-class" () 79 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 84 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 89 16 ()}
        {Lisp-Entry "client-activate" () 93 11 ("set-client" "not" "if" "current-document" "client-entry" "entry" "let")}
        {Lisp-Entry "client-deactivate" () 100 11 ("set-client")}
        {Lisp-Entry "client-entry" () 104 11 ("car" "length" "1" "=" "get-context" "context:" "get-file-entries" "entries" "get-cataloguer" "cataloguer" "get-application" "appl" "let*" "read-jml" "ci=" "get-extension" "ext" "get-controller" "get-moniker" "moniker" "let" "Code-Text-View" "is?" "if" "when" "guest")}
        {Lisp-Entry "get-tools-view" () 125 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 129 11 ("acquire-focus" "definitions" "locate" "tree" "let")}
        {Lisp-Entry "get-sorted?" () 139 11 ("sorted?" "locate" "get-selected?")}
        {Lisp-Entry "on-toggle-sorted" () 148 11 ("update" "get-sorted?" "definitions" "locate" "set-sort?" "evt")}
        {Lisp-Entry "on-update" () 153 11 ("update" "reload-jml-client" "Form" "client" "is?" "when" "evt")}
        {Lisp-Entry "on-selection-change" () 159 11 ("false" "selection-change" "definitions" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-double-click" () 166 11 ("true" "selection-change" "definitions" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "mouse-copy" () 174 18 ("get-name" "mouse-insert" "get-row" "get-user-data" "definition" "let" "view->tree" "cell" "definitions" "locate" "tree" "mouse-position" "pos" "let*" "when" "destination")}
        {Lisp-Entry "read-jml" () 193 11 ("read-from-file" "message" "type:" "get-message" "message-box" "err" "Read-Error" "catch" "moniker")}
        {Lisp-Entry "reload-jml-client" () 200 11 ("get-origin" "read-from-file" "client" "set!")}
        {Lisp-Entry "get-client-title" () 204 11 ("get-title" "JML-Node" "is?" "if" "client")}
        {Lisp-Entry "insert-client-definition" () 210 11 ("insert-definition" "get-sorted?" "0" "insert-jml-definition" "begin" "JML-Node" "is?" "if" "client" "tree")}
        {Lisp-Entry "insert-jml-definition" () 219 11 ("insert-jml-self-definitions" "insert-jml-self" "row" "let" "sort?" "node" "level" "father" "tree")}
        {Lisp-Entry "insert-jml-self" () 224 11 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "collapsed" "expanded" "1" "" "state" "get-name" "->string" "get-property" "either" "title" "Bitmap-Resource" "get-class-image" "Component" "subtype?" "and" "if" "image" "get-jml-model" "model" "let*" "node" "level" "father" "tree")}
        {Lisp-Entry "get-jml-model" () 232 11 ("autoload" "in-manifest?" "and" "when" "get-model-name" "model-name" "let" "get-jml-model" "unimplemented" "node")}
        {Lisp-Entry "get-jml-named-children" () 240 11 ("get-children" "title" "get-property" "get-name" "or" "and" "child" "dynamic" "function" "collect-if" "JML-Element" "is?" "when" "node")}
        {Lisp-Entry "insert-jml-self-definitions" () 249 11 ("get-jml-named-children" "insert-jml-definitions" "sort?" "node" "level" "father" "tree")}
        {Lisp-Entry "insert-jml-definitions" () 253 11 ("1" "+" "insert-jml-definition" "definition" "dynamic" "function" "for-each" "sort-jml-definitions" "if" "ordered" "let" "sort?" "definitions" "level" "father" "tree")}
        {Lisp-Entry "sort-jml-definitions" () 260 11 ("get-name" "->string" "definition" "dynamic" "function" "key:" "" "sort" "definitions")}
        {Lisp-Entry "edit-definition" () 264 11 ("false" "activate-focus?:" "edit" "edit-jml-definition" "JML-Node" "is?" "if" "definition")}
        {Lisp-Entry "edit-jml-definition" () 270 11 ("true" "set-visible?" "bring-to-front" "set-selection" "location-range" "range" "0" "list" "get-location" "append" "location" "get-guest" "text" "false" "visible?:" "edit-document" "frame" "client" "get-origin" "moniker" "get-application" "appl" "let*" "definition")}
        {Lisp-Entry "get-client" () 287 18 ("client")}
        {Lisp-Entry "set-client" () 291 18 ("update" "set!" "client" "/=" "when" "clt")}
        {Lisp-Entry "update" () 297 11 ("insert-client-definition" "dynamic" "function" "with-update-locked" "get-client-title" "format" "remove-every-row" "set-title" "begin" "client" "not" "if" "definitions" "locate" "tree" "let")}
        {Lisp-Entry "selection-change" () 315 11 ("edit-definition" "same-file?" "Indexed-Entry" "is-not?" "or" "and" "get-row" "get-user-data" "definition" "get-single-selection" "selection" "get-controller" "get-moniker" "moniker" "when" "current-document" "guest" "let" "double-click?" "tree")}
        {Lisp-Entry "same-file?" () 326 11 ("get-file-definition" "get-file" "pathname=" "and" "moniker" "definition")}}}})
"History-Document-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "history" "History-Document-Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.history.History-Document-Item" () 37 9 ("jazz")
      {Lisp-Entry "History-Document-Item" () 45 7 ("History-Item")
        {Lisp-Entry "document" () 48 8 ()}
        {Lisp-Entry "selection" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("selection~self" "document~self" "set!" "nextmethod" "selection" "document")}
        {Lisp-Entry "valid?" () 58 11 ("document" "open?")}
        {Lisp-Entry "open-item" () 62 11 ("bring-to-front" "selection" "document" "set-selection")}
        {Lisp-Entry "present" () 67 11 ("document" "get-document-view" "name-status")}}}})
"History-File-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "history" "History-File-Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.history.History-File-Item" () 37 9 ("jazz")
      {Lisp-Entry "History-File-Item" () 45 7 ("History-Item")
        {Lisp-Entry "file" () 48 8 ()}
        {Lisp-Entry "selection" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("selection~self" "file~self" "set!" "nextmethod" "selection" "file")}
        {Lisp-Entry "open-item" () 58 11 ("selection" "selection:" "file" "get-application" "edit-document")}
        {Lisp-Entry "present" () 62 11 ("file" "get-name")}}}})
"History-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "history" "History-Item.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.history.History-Item" () 37 9 ("jazz")
      {Lisp-Entry "History-Item" () 45 7 ("Object")
        {Lisp-Entry "valid?" () 48 26 ("true")}
        {Lisp-Entry "open-item" () 52 26 ()}
        {Lisp-Entry "present" () 56 26 ()}}}})
"History-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "history" "History-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.history.History-Manager" () 37 9 ("jazz")
      {Lisp-Entry "History-Manager" () 46 7 ("Object")
        {Lisp-Entry "Max-History" () 49 14 ("8")}
        {Lisp-Entry "history-provider" () 53 8 ()}
        {Lisp-Entry "backward-history" () 54 8 ()}
        {Lisp-Entry "forward-history" () 55 8 ()}
        {Lisp-Entry "initialize" () 58 11 ("history-provider" "set!" "nextmethod" "provider")}
        {Lisp-Entry "get-backward-history" () 68 18 ("backward-history" "cleanup-history")}
        {Lisp-Entry "get-forward-history" () 72 18 ("forward-history" "cleanup-history")}
        {Lisp-Entry "add-current" () 81 18 ("present" "user-message" "add-history" "bell" "null?" "if" "history-provider" "current-history-item" "item" "let")}
        {Lisp-Entry "add-history" () 89 18 ("get-application" "update-history-actions" "forward-history" "set!" "1" "-" "tail" "set-cdr!" "Max-History" "backward-history" "length" ">" "add-backward-history" "when" "item")}
        {Lisp-Entry "add-backward-history" () 98 11 ("cons" "backward-history" "set!" "when" "item")}
        {Lisp-Entry "add-forward-history" () 103 11 ("cons" "forward-history" "set!" "when" "item")}
        {Lisp-Entry "go-backward-history" () 108 18 ("get-application" "update-history-actions" "open-item" "decrease!" "cdr" "car" "set!" "add-forward-history" "while" "history-provider" "current-history-item" "item" "let" "bell" "backward-history" "length" ">=" "if" "cleanup-backward-history" "0" "rank" "rank:")}
        {Lisp-Entry "go-forward-history" () 122 18 ("get-application" "update-history-actions" "open-item" "decrease!" "cdr" "car" "set!" "add-backward-history" ">=" "while" "history-provider" "current-history-item" "item" "let" "bell" "forward-history" "null?" "if" "cleanup-forward-history" "0" "rank" "rank:")}
        {Lisp-Entry "cleanup-history" () 136 11 ("valid?" "item" "dynamic" "function" "collect-if" "history")}
        {Lisp-Entry "cleanup-backward-history" () 142 11 ("cleanup-history" "backward-history" "set!")}
        {Lisp-Entry "cleanup-forward-history" () 146 11 ("cleanup-history" "forward-history" "set!")}}}})
"History-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "history" "History-Menu.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.history.History-Menu" () 37 9 ("jazz")
      {Lisp-Entry "History-Menu" () 46 7 ("Context-Menu")}
      {Lisp-Entry "History-Menu" () 52 7 ("Context-Menu")
        {Lisp-Entry "manager" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "direction" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "track" () 64 23 ("initiator:" "direction:" ":manager" "self" "track-popup-menu" "bell" "null?" "if" "get-history" "history" "get-size" "get-height" "0" "Point" "new" "pos" "let" "direction" "manager" "initiator" "sender")}
        {Lisp-Entry "get-history" () 72 16 ("get-forward-history" "forward" "get-backward-history" "backward" "case" "direction" "manager")}
        {Lisp-Entry "finish" () 83 11 ("direction" "manager" "get-history" "increase!" "rank:" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "present" "title" "item" "dynamic" "function" "for-each" "0" "rank" "let" "nextmethod" "rest")}
        {Lisp-Entry "on-action" () 98 11 ("go-forward-history" "forward" "manager" "go-backward-history" "backward" "direction" "case" "rank:" "get-property" "rank" "get-application" "appl" "let" "evt")}}}})
"History-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "history" "History-Provider.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.history.History-Provider" () 37 9 ("jazz")
      {Lisp-Entry "History-Provider" () 45 11 ()
        {Lisp-Entry "current-history-item" () 48 35 ()}}}})
"History-Request-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "history" "History-Request-Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.sql.history.History-Request-Item" () 37 9 ("jazz")
      {Lisp-Entry "History-Request-Item" () 46 7 ("History-Item")
        {Lisp-Entry "request" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("request~self" "set!" "nextmethod" "request")}
        {Lisp-Entry "open-item" () 57 11 ("true" "evaluate" "insert-line" "fresh-prompt" "get-sql-console-text" "text" "let" "bell" "request" "null?" "if")}
        {Lisp-Entry "present" () 66 11 ("request")}}}})
"History-Search-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "History-Search-Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.search.History-Search-Item" () 37 9 ("jazz")
      {Lisp-Entry "History-Search-Item" () 45 7 ("History-Item")
        {Lisp-Entry "mode" () 48 18 ()}
        {Lisp-Entry "domain" () 49 18 ()}
        {Lisp-Entry "targets" () 50 18 ()}
        {Lisp-Entry "whole-words?" () 51 18 ()}
        {Lisp-Entry "ignore-case?" () 52 18 ()}
        {Lisp-Entry "preserve-case?" () 53 18 ()}
        {Lisp-Entry "play-recording?" () 54 18 ()}
        {Lisp-Entry "expression?" () 55 18 ()}
        {Lisp-Entry "content" () 56 18 ()}
        {Lisp-Entry "selection" () 57 18 ()}
        {Lisp-Entry "initialize" () 60 11 ("selection~self" "content~self" "expression?~self" "play-recording?~self" "preserve-case?~self" "ignore-case?~self" "whole-words?~self" "targets~self" "domain~self" "mode~self" "set!" "nextmethod" "selection" "content" "expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "targets" "domain" "mode")}
        {Lisp-Entry "open-item" () 74 11 ("select-results" "true" "set-visible?" "bring-to-front" "self" "install-history-item" "get-application" "get-search-manager" "search" "let")}
        {Lisp-Entry "present" () 82 11 ("format" "null?" "if" "targets" "caar" "target" "let")}}}})
"Home-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Home-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Home-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Home-Workspace" () 46 7 ("Workbench-Manager" "Repositories-Manager" "Favorites-Manager" "Jazz-Console-Manager" "selection" "Debugger-Console-Manager" "Properties-Manager" "Search-Results" "Output-Log" "Web-Servers-Manager" "model-name:" "vert" "second" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 72 11 ("home")}}}})
"Horizontal-Line"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Horizontal-Line.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Horizontal-Line" () 37 9 ("jazz")
      {Lisp-Entry "Horizontal-Line" () 46 7 ("View")
        {Lisp-Entry "default-size" () 49 11 ("8" "Dimension")}
        {Lisp-Entry "draw" () 58 11 ("top" "edges:" "sunken" "outer:" "raised" "inner:" "2" "0" "Rect" "new" "draw-edge" "Medium" "name:" "Color" "color" "get-width" "width" "let" "lv" "lh" "update" "context" "dc")}}}})
"Horizontal-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "test" "Horizontal-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.test.Horizontal-View" () 37 9 ("jazz")
      {Lisp-Entry "Horizontal-View" () 44 7 ("View")
        {Lisp-Entry "install" () 47 11 ("3" "0" "naturals" "->string" "title:" "Label-View" "self" "parent:" "Vertical-View" "new" "Horizontal-View" "parent" "get-parent" "is-not?" "2" "=" "and" "if" "n" "dynamic" "function" "for-each" "nextmethod" "rest")}
        {Lisp-Entry "layout" () 61 11 ("increase!" "set-size" "Point" "set-position" "view" "dynamic" "function" "for-each-view" "0" "h" "Dimension" "new" "child-size" "get-height" "height" "get-width" "/" "floor" "width" "get-size" "size" "length" "let*" "children" "when")}
        {Lisp-Entry "draw" () 81 11 ("Dark-Red" "name:" "Color" "get-bounds" "fill-rect" "lv" "lh" "update" "context" "dc")}}}})
"Host"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "network" "Host.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.network.Host" () 37 9 ("jazz")
      {Lisp-Entry "Host" () 43 7 ("Object")
        {Lisp-Entry "name" () 46 8 ()}
        {Lisp-Entry "address" () 47 8 ()}
        {Lisp-Entry "ip" () 48 8 ()}
        {Lisp-Entry "origin" () 49 8 ("generate")}
        {Lisp-Entry "initialize" () 52 11 ("error" "else" "ip~self" "address~self" "origin~self" "name~self" "set!" "cond" "nextmethod" "ip" "ip:" "address" "address:" "name" "name:")}
        {Lisp-Entry "compare-object" () 67 11 (":not-equal" "else" ":equal" "get-ip" "=" ":incompatible" "Host" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 76 11 ("present-host" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-name" () 87 18 ("address" "address->ip" "ip" "either" "ip->name" "set!" "name" "unless")}
        {Lisp-Entry "get-address" () 95 18 ("name" "name->ip" "ip" "either" "ip->address" "set!" "address" "unless" "0")}
        {Lisp-Entry "get-ip" () 103 18 ("get-address" "address->ip" "set!" "ip" "unless" "0")}
        {Lisp-Entry "present" () 116 18 ("get-address" "name" "either")}
        {Lisp-Entry "present-host" () 120 18 ("ip" "address" "format" "name" "origin" "case")}
        {Lisp-Entry "present-compact" () 127 18 ("->string" "ip" "address" "name" "origin" "case")}}}})
"Host-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Host-Dialog.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.hosting.Host-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "Host-Dialog" () 46 7 ("View-Host" "Dialog")
        {Lisp-Entry "guest" () 49 12 ("set-guest" "get-guest")}
        {Lisp-Entry "install" () 52 11 ("fill" "root" "set-layout-type" "nextmethod" "rest")}
        {Lisp-Entry "destroy-component" () 57 11 ("nextmethod" "close-guest")}
        {Lisp-Entry "close-guest" () 62 11 ("close" "set-guest" "view" "let" "guest" "when")}
        {Lisp-Entry "new-root" () 69 11 ("Dialog-Root" "new")}
        {Lisp-Entry "get-guest" () 78 18 ("guest")}
        {Lisp-Entry "set-guest" () 82 18 ("install-guest" "set!" "uninstall-guest" "guest" "neq?" "when" "view")}
        {Lisp-Entry "install-guest" () 96 29 ("self" "install-in-host" "get-size" "set-size" "0" "Point" "set-position" "root" "guest" "set-parent")}
        {Lisp-Entry "uninstall-guest" () 103 29 ("close" "self" "guest" "uninstall-from-host")}
        {Lisp-Entry "focus-gain" () 113 11 ("processed" "activate-focus" "nextmethod")}
        {Lisp-Entry "focus-lose" () 119 11 ("processed" "deactivate-focus" "nextmethod" "receiving")}
        {Lisp-Entry "activate-focus" () 125 11 ("guest" "get-guest-actions" "get-application" "set-guest-actions")}
        {Lisp-Entry "deactivate-focus" () 129 11 ("get-application" "set-guest-actions")}
        {Lisp-Entry "validate-dialog" () 138 11 ("validate-dialog" "guest" "when")}
        {Lisp-Entry "get-modal-result" () 143 11 ("guest" "get-modal-result")}}}})
"Host-Docked"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Host-Docked.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.hosting.Host-Docked" () 37 9 ("jazz")
      {Lisp-Entry "Host-Docked" () 45 7 ("View-Host" "Docked")
        {Lisp-Entry "guest" () 48 12 ("set-guest" "get-guest")}
        {Lisp-Entry "install" () 51 11 ("fill" "root" "get-content" "set-layout-type" "nextmethod" "rest")}
        {Lisp-Entry "destroy-component" () 56 11 ("nextmethod" "close-guest")}
        {Lisp-Entry "close-guest" () 61 11 ("close" "set-guest" "view" "let" "guest" "when")}
        {Lisp-Entry "new-root" () 68 11 ("Docked-Root" "new")}
        {Lisp-Entry "get-guest" () 77 18 ("guest")}
        {Lisp-Entry "set-guest" () 81 18 ("install-guest" "set!" "uninstall-guest" "guest" "neq?" "when" "view")}
        {Lisp-Entry "install-guest" () 95 11 ("install-tools" "self" "install-in-host" "true" "set-visible?" "get-size" "set-size" "0" "Point" "set-position" "root" "get-content" "guest" "set-parent")}
        {Lisp-Entry "uninstall-guest" () 104 11 ("close" "self" "guest" "uninstall-from-host")}
        {Lisp-Entry "focus-default" () 114 11 ("focus-default" "guest" "when")}}}})
"Host-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Host-Frame.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.hosting.Host-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Host-Frame" () 49 7 ("View-Host" "Frame" "View-Player-Class")
        {Lisp-Entry "guest" () 52 12 ("set-guest" "get-guest")}
        {Lisp-Entry "workspace" () 55 8 ()}
        {Lisp-Entry "install" () 58 11 ("fill" "root" "get-content" "set-layout-type" "nextmethod" "rest")}
        {Lisp-Entry "destroy-component" () 63 11 ("nextmethod" "close-guest")}
        {Lisp-Entry "close-guest" () 68 11 ("close" "set-guest" "view" "let" "guest" "when")}
        {Lisp-Entry "new-root" () 75 11 ("Frame-Root" "new")}
        {Lisp-Entry "get-guest" () 84 18 ("guest")}
        {Lisp-Entry "set-guest" () 88 18 ("install-guest" "set!" "uninstall-guest" "guest" "neq?" "when" "view")}
        {Lisp-Entry "get-workspace" () 97 18 ("workspace")}
        {Lisp-Entry "set-workspace" () 101 18 ("workspace" "set!" "value")}
        {Lisp-Entry "install-guest" () 110 29 ("self" "install-in-host" "get-size" "set-size" "0" "Point" "set-position" "guest" "set-parent" "root" "get-content" "content" "let")}
        {Lisp-Entry "uninstall-guest" () 118 29 ("close" "self" "guest" "uninstall-from-host")}
        {Lisp-Entry "focus-gain" () 128 11 ("processed" "activate-focus" "nextmethod")}
        {Lisp-Entry "focus-lose" () 134 11 ("processed" "deactivate-focus" "nextmethod" "receiving")}
        {Lisp-Entry "focus-default" () 140 11 ("focus-default" "guest" "when")}
        {Lisp-Entry "activate-focus" () 145 11 ("focus-activate" "guest" "get-guest-actions" "get-application" "set-guest-actions")}
        {Lisp-Entry "deactivate-focus" () 150 11 ("get-application" "set-guest-actions")}
        {Lisp-Entry "frame-activate" () 159 11 ("select-workspace" "get-locked-activations?" "unless" "nextmethod")}
        {Lisp-Entry "frame-deactivate" () 165 11 ("frame-deactivate" "guest" "when")}
        {Lisp-Entry "show" () 175 11 ("nextmethod" "guest" "get-size" "maximize-bounds" "root" "maximize" "get-maximized?" "when" "get-stage" "stage" "let")}
        {Lisp-Entry "select-workspace" () 189 18 ("apply-preferences" "false" "error?:" "car" "memq?" "not" "and" "effective-frame-workspaces" "else" "list" "workspace" "cond" "workspaces" "get-name" "current" "get-workspace-splitter" "get-preferences" "pref" "let" "guest" "when")}
        {Lisp-Entry "get-effective-position" () 210 11 ("get-position" "get-preserved-position" "root" "get-maximized?" "if")}
        {Lisp-Entry "get-effective-size" () 216 11 ("get-size" "get-preserved-size" "root" "get-maximized?" "if")}
        {Lisp-Entry "dispatch-message" () 228 11 ("nextmethod" "MA_NOACTIVATEANDEAT" "dispatch-mouse-copy" "alt-down?" "WM_MOUSEACTIVATE" "eq?" "and" "if" "lparam" "wparam" "msg")}
        {Lisp-Entry "dispatch-mouse-copy" () 234 11 ("mouse-position" "mouse-copy" "and" "when" "get-focus" "dest" "mouse-view" "view" "let")}
        {Lisp-Entry "confirm-close" () 246 11 ("confirm-close" "guest" "when" "rest")}}}})
"Host-Palette"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Host-Palette.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.hosting.Host-Palette" () 37 9 ("jazz")
      {Lisp-Entry "Host-Palette" () 46 7 ("View-Host" "Palette")
        {Lisp-Entry "guest" () 49 12 ("set-guest" "get-guest")}
        {Lisp-Entry "install" () 52 11 ("fill" "root" "get-content" "set-layout-type" "nextmethod" "rest")}
        {Lisp-Entry "destroy-component" () 57 11 ("nextmethod" "close-guest")}
        {Lisp-Entry "close-guest" () 62 11 ("close" "set-guest" "view" "let" "guest" "when")}
        {Lisp-Entry "new-root" () 69 11 ("Palette-Root" "new")}
        {Lisp-Entry "get-guest" () 78 18 ("guest")}
        {Lisp-Entry "set-guest" () 82 18 ("install-guest" "set!" "uninstall-guest" "guest" "neq?" "when" "view")}
        {Lisp-Entry "unanchor-guest" () 91 18 ("guest" "set!")}
        {Lisp-Entry "on-close" () 100 11 ("processed" "false" "set-visible?" "evt")}
        {Lisp-Entry "on-activate-palette" () 105 11 ("root" "activate-palette" "nextmethod")}
        {Lisp-Entry "on-deactivate-palette" () 110 11 ("root" "deactivate-palette" "nextmethod")}
        {Lisp-Entry "install-guest" () 120 11 ("self" "install-in-host" "true" "set-visible?" "get-size" "set-size" "0" "Point" "set-position" "root" "get-content" "guest" "set-parent")}
        {Lisp-Entry "uninstall-guest" () 128 11 ("close" "self" "guest" "uninstall-from-host")}
        {Lisp-Entry "focus-gain" () 138 11 ("processed" "activate-focus" "nextmethod")}
        {Lisp-Entry "focus-lose" () 144 11 ("processed" "deactivate-focus" "nextmethod" "receiving")}
        {Lisp-Entry "activate-focus" () 150 11 ("focus-activate" "guest" "get-guest-actions" "get-application" "set-guest-actions")}
        {Lisp-Entry "deactivate-focus" () 155 11 ("get-application" "set-guest-actions")}}}})
"Host-Sheet"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Host-Sheet.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.hosting.Host-Sheet" () 37 9 ("jazz")
      {Lisp-Entry "Host-Sheet" () 46 7 ("fill" "layout-type:" "content" "name:" "Tab-Sheet")}}})
"Host-Tab"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Host-Tab.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.hosting.Host-Tab" () 37 9 ("jazz")
      {Lisp-Entry "Host-Tab" () 45 7 ("Tab-View")
        {Lisp-Entry "guest" () 49 12 ("set-guest" "get-guest")}
        {Lisp-Entry "get-guest" () 58 18 ("guest")}
        {Lisp-Entry "set-guest" () 63 18 ("install-guest" "set!" "uninstall-guest" "guest" "neq?" "when" "view")}
        {Lisp-Entry "install-guest" () 77 29 ("self" "install-in-host" "get-size" "set-size" "0" "Point" "set-position" "guest" "set-parent" "get-content" "content" "let")}
        {Lisp-Entry "uninstall-guest" () 86 29 ("close" "self" "guest" "uninstall-from-host")}}}})
"Host-Toolbar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Host-Toolbar.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.hosting.Host-Toolbar" () 37 9 ("jazz")
      {Lisp-Entry "Host-Toolbar" () 45 7 ("View-Host" "Docked")
        {Lisp-Entry "guest" () 48 12 ("set-guest" "get-guest")}
        {Lisp-Entry "install" () 51 11 ("fill" "root" "get-content" "set-layout-type" "nextmethod" "rest")}
        {Lisp-Entry "destroy-component" () 56 11 ("nextmethod" "close-guest")}
        {Lisp-Entry "close-guest" () 61 11 ("close" "set-guest" "view" "let" "guest" "when")}
        {Lisp-Entry "new-root" () 68 11 ("Toolbar-Root" "new")}
        {Lisp-Entry "get-guest" () 77 18 ("guest")}
        {Lisp-Entry "set-guest" () 81 18 ("install-guest" "set!" "uninstall-guest" "guest" "neq?" "when" "view")}
        {Lisp-Entry "install-guest" () 95 11 ("self" "install-in-host" "true" "set-visible?" "get-size" "set-size" "0" "Point" "set-position" "root" "get-content" "guest" "set-parent")}
        {Lisp-Entry "uninstall-guest" () 103 11 ("close" "self" "guest" "uninstall-from-host")}
        {Lisp-Entry "focus-default" () 113 11 ("focus-default" "guest" "when")}}}})
"Host-Tooltip"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "Host-Tooltip.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.hosting.Host-Tooltip" () 37 9 ("jazz")
      {Lisp-Entry "Host-Tooltip" () 45 7 ("View-Host" "Tooltip")
        {Lisp-Entry "guest" () 48 12 ("set-guest" "get-guest")}
        {Lisp-Entry "destroy-component" () 51 11 ("nextmethod" "close-guest")}
        {Lisp-Entry "close-guest" () 56 11 ("close" "set-guest" "view" "let" "guest" "when")}
        {Lisp-Entry "get-guest" () 68 18 ("guest")}
        {Lisp-Entry "set-guest" () 72 18 ("install-guest" "set!" "uninstall-guest" "guest" "neq?" "when" "window")}
        {Lisp-Entry "resize" () 87 11 ("size-figure" "guest" "when" "nextmethod" "dv" "dh")}
        {Lisp-Entry "install-guest" () 98 11 ("true" "set-visible?" "get-size" "set-size" "0" "Point" "set-position" "self" "guest" "set-parent")}
        {Lisp-Entry "uninstall-guest" () 105 11 ("guest" "close")}}}})
"Hyperlink-Style"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Hyperlink-Style.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Hyperlink-Style" () 37 9 ("jazz")
      {Lisp-Entry "Hyperlink-Style" () 44 7 ("action" "initialize" "anchor" "highlight" "color" "font" "alignment" "Text-Style")}}})
"I"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "suite" "I.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.suite.I-Class" () 37 9 ("jazz")
      {Lisp-Entry "I-Class" () 40 7 ("Interface")
        {Lisp-Entry "foo" () 43 18 ("2")}}
      {Lisp-Entry "I" () 47 11 ("I-Class")
        {Lisp-Entry "f" () 50 35 ()}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "I.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.I-Class" () 37 9 ("jazz")
      {Lisp-Entry "I-Class" () 40 7 ("Interface")
        {Lisp-Entry "foo" () 43 18 ("2")}}
      {Lisp-Entry "I" () 47 11 ("I-Class")
        {Lisp-Entry "f" () 50 35 ()}}}})
"IConnectionPoint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "IConnectionPoint.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.IConnectionPoint" () 37 9 ("jazz")
      {Lisp-Entry "IConnectionPoint" () 44 11 ("IUnknown&" "int" "int&" "IConnectionPointContainer&" "guid&" "GUID" "guid:" "IUnknown")
        {Lisp-Entry "GetConnectionInterface" () 50 47 ()}
        {Lisp-Entry "GetConnectionPointContainer" () 51 47 ()}
        {Lisp-Entry "Advise" () 52 47 ()}
        {Lisp-Entry "Unadvise" () 53 47 ()}
        {Lisp-Entry "EnumConnections" () 54 47 ()}}}})
"IConnectionPointContainer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "IConnectionPointContainer.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.IConnectionPointContainer" () 37 9 ("jazz")
      {Lisp-Entry "IConnectionPointContainer" () 44 11 ("IConnectionPoint&" "guid&" "IUnknown&" "GUID" "guid:" "IUnknown")
        {Lisp-Entry "EnumConnectionPoints" () 50 47 ()}
        {Lisp-Entry "FindConnectionPoint" () 51 47 ()}}}})
"IDE"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE.fusion"} {Time 128368663140000000L}
    {Lisp-Entry "jazz.ui.ide.IDE" () 37 9 ("jazz")
      {Lisp-Entry "IDE" () 51 7 ("Application")
        {Lisp-Entry "local-debugger-server" () 54 8 ()}
        {Lisp-Entry "cataloguer" () 55 8 ()}
        {Lisp-Entry "catalog-context" () 56 8 ()}
        {Lisp-Entry "catalog-file" () 57 8 ()}
        {Lisp-Entry "search" () 58 8 ()}
        {Lisp-Entry "recorder" () 59 8 ("Macro-Recorder" "new")}
        {Lisp-Entry "start-process" () 62 11 ("setup-debugger-server" "process-title" "toplevel" "set-caption-base" "nextmethod" "rest")}
        {Lisp-Entry "prepare-workbench" () 68 11 ("load-workbench" "nextmethod")}
        {Lisp-Entry "process-title" () 73 11 ("get-preferences" "get-toplevel-title" "either")}
        {Lisp-Entry "workspace-installed" () 78 11 ("acquire-focus" "when" "quick-find" "IDE-Toolbar" "toplevel" "get-workspace-splitter" "find-palette" "locate-component" "get-text" "text" "let" "update-catalog-context" "nextmethod")}
        {Lisp-Entry "close-environment" () 87 11 ("nextmethod" "detach-debugger-processes")}
        {Lisp-Entry "get-backward-history" () 97 18 ("history-manager" "get-backward-history")}
        {Lisp-Entry "get-forward-history" () 101 18 ("history-manager" "get-forward-history")}
        {Lisp-Entry "get-recorder" () 110 11 ("recorder")}
        {Lisp-Entry "use-user-logging?" () 119 11 ("true")}
        {Lisp-Entry "use-user-class?" () 123 11 ("true")}
        {Lisp-Entry "base-frame-class" () 132 11 ("Text-View")}
        {Lisp-Entry "default-frame-class" () 136 11 ("Plain-Text-View")}
        {Lisp-Entry "known-extension-frame-class" () 140 11 ("nextmethod" "else" "Archive-Manager" "Design-Book-View" "JSC-Book" "Image-View" "Python-Text-View" "Lua-Text-View" "JavaScript-Text-View" "Properties-Text-View" "CSS-Text-View" "JSP-Text-View" "SQL-Text-View" "XML-Text-View" "HTML-Text-View" "CSharp-Text-View" "Cpp-Text-View" "Java-Text-View" "Prop-Text-View" "Diary-Manager" "Database-Manager" "Shell-Text-View" "Plain-Formatted-Text-View" "Plain-Text-View" "ci=" "test:" "member?" "cond" "ext")}
        {Lisp-Entry "unknown-extension-frame-class" () 171 11 ("Plain-Text-View")}
        {Lisp-Entry "get-search-manager" () 180 11 ("search")}
        {Lisp-Entry "get-history-manager" () 184 18 ("history-manager")}
        {Lisp-Entry "get-cataloguer" () 188 11 ("get-workbench" "load-catalogs" "create-package-catalogs" "Cataloguer" "new" "set!" "cataloguer" "unless")}
        {Lisp-Entry "get-catalog-context" () 196 11 ("catalog-context")}
        {Lisp-Entry "update-catalog-context" () 200 18 ("get-catalog-context" "set-catalog-context")}
        {Lisp-Entry "set-catalog-context" () 204 18 ("catalog-context" "set!" "set-title" "set-icon" "find-component" "mode" "IDE-Status" "toplevel" "get-workspace-splitter" "find-palette" "status" "Bitmap-Resource" "icon" "cpp/java" "jazz" "case" "title" "let" "when" "context")}
        {Lisp-Entry "create-package-catalogs" () 217 11 ("org.jedi" "Root" "Directory" "org.jazz" "add-catalog" "true" "Package-Catalog" "new" "catalog" "directories" "format" "new-file" "output" "directory" "name" "create-catalog" "define" "get-application" "get-cataloguer" "cataloguer" "extensions" "let")}
        {Lisp-Entry "user-feedback" () 231 11 ("user-message" "message")}
        {Lisp-Entry "class-actions" () 240 11 ("nextmethod" "ide" "find-actions" "cons")}
        {Lisp-Entry "save-environment" () 250 11 ("save-catalogs" "cataloguer" "when" "nextmethod")}
        {Lisp-Entry "load-session" () 262 11 ("set-current-directory" "when" "session" "application" "get-preferences" "get-current-directory" "dir" "let")}
        {Lisp-Entry "reload-opened-windows" () 269 11 ("session" "application" "get-preferences" "get-opened-windows" "reload-component" "exists?" "not" "or" "when" "others" "file" "bind-keywords" "properties" "class" "bind" "info" "dynamic" "function" "for-each")}
        {Lisp-Entry "reload-component" () 279 11 ("nextmethod" "else" "Compare-Files-Frame" "compare-files" "Compare-Directories-Frame" "compare-directories" "Catalogs-Manager" "catalogs-manager" "Java-Reference-Finder" "reference-analyser" "Repository-Manager" "repository-manager" "Repository" "get-repository" ":repository" "Repository-Browser" "repository-browser" "Directory-Browser" "directory-browser" "Browser-Frame" "browser-frame" "Image-Frame" "image-frame" "Java-Text-Palette" "java-palette" "HTML-Text-Frame" "html-text" "Prop-Text-Frame" "prop-text" "Java-Text-Frame" "java-text" "Cpp-Text-Frame" "cpp-text" "Plain-Text-Frame" "new" "apply" "plain-text" "case" "properties" "class")}
        {Lisp-Entry "load-workbench" () 307 18 ("err" "continue-handler:" "get-manifest" "empty-map" "title:" "read-from-file" "instantiate" "with-execution-context" "set-workbench" "exists?" "not" "if" "User" "File" "file" "let" "dynamic" "function" "with-safe-execution")}
        {Lisp-Entry "get-output-log" () 329 11 ("Output-Log" "singleton-docked" "get-guest")}
        {Lisp-Entry "present-debuggee" () 338 18 ("present" "format" "stub-listener" "listening-host" "get-ior" "get-host" "host" "get-process-server" "=" "if" "get-name" "name" "get-local-process-server" "jedi" "let" "debuggee")}
        {Lisp-Entry "register-base-objects" () 354 11 ("local-debugger-server" "debugger" "get-local-directory-server" "register-object" "nextmethod")}
        {Lisp-Entry "setup-controller" () 365 11 ("get-local-process-server" "attach-to-controller" "nextmethod" "command-argument" "if")}
        {Lisp-Entry "reattach-local-controller" () 371 11 ("get-local-process-server" "attach-to-controller")}
        {Lisp-Entry "get-local-debugger-server" () 380 11 ("local-debugger-server")}
        {Lisp-Entry "setup-debugger-server" () 384 11 ("Debugger-Server" "Debugger-Server-Local-Proxy" "new" "local-debugger-server" "set!")}
        {Lisp-Entry "detach-debugger-processes" () 389 11 ("detach-debuggees" "local-debugger-server" "when")}
        {Lisp-Entry "present-thread-stack" () 395 11 ("edit-file" "function" "post-primary" "file")}
        {Lisp-Entry "select-debugger" () 402 11 ("debugger" "workspaces" "get-preferences" "apply-preferences")}
        {Lisp-Entry "process-alias" () 411 11 ("nextmethod" "else" "recorder" ":recorder" "View-Debugger" ":view-debugger" "Debugger" ":debugger" "case" "name")}
        {Lisp-Entry "on-open-favorite" () 424 11 ("get-file" "edit-document" "error" "not" "if" "find-favorite" "favorite" ":char" "get-property" "char" "let*" "evt")}
        {Lisp-Entry "find-favorite" () 432 11 ("get-shortcut" "ci=" "favorite" "dynamic" "function" "find-if" "get-children" "when" "false" "error?:" "favorites" "get-preferences" "pref" "let" "char")}
        {Lisp-Entry "edit-definition" () 446 11 ("get-search-manager" "get-guest" "edit-definitions" "else" "car" "edit" "1" "length" "case" "add-history" "bell" "null?" "if" "get-cataloguer" "get-coalesced-definitions" "filter-entries" "definitions" "let" "history-item" "history-item:" "workspace" "workspace:" "catalog-context" "context" "context:" "class" "class:" "object")}
        {Lisp-Entry "edit-references" () 456 11 ("get-search-manager" "get-guest" "edit-references" "else" "car" "edit-reference" "1" "length" "case" "add-history" "bell" "null?" "if" "get-cataloguer" "get-references" "definitions" "let" "history-item" "history-item:" "catalog-context" "context" "context:" "object")}
        {Lisp-Entry "filter-entries" () 466 11 ("get-field" "field-creator" "subtype?" "Jazz-Field-Entry" "typed?" "and" "entry" "dynamic" "function" "collect-if" "not" "if" "class" "entries")}
        {Lisp-Entry "get-documentation" () 482 18 ("get-definition" "get-documentation-cataloguer" "cataloguer" "let" "when" "symbol")}
        {Lisp-Entry "edit-documentation" () 489 18 ("acquire-focus" "true" "set-visible?" "bring-to-front" "set-selection" "location-range" "range" "0" "list" "get-location" "append" "location" "get-guest" "text" "false" "visible?:" "edit-document" "frame" "get-toplevel" "get-origin" "moniker" "get-form" "form" "let*" "bell" "not" "if" "get-documentation" "doc" "let" "symbol")}
        {Lisp-Entry "edit-documentation" () 506 18 ("get-host" "bring-to-front" "set-entry" ":entry" "get-documentation-catalog" "client:" "new-frame" "not" "if" "list" "info" "stage" "find-guest" "editor" "Doc-Editor" "class" "let*" "text-location" "text" "object" "location")}
        {Lisp-Entry "on-open" () 521 18 ("nextmethod" "else" "on-open-jazz-text" "get-shift?" "on-open-text" "get-alt?" "cond" "evt")}
        {Lisp-Entry "on-open-text" () 530 18 ("get-name" "key:" ">" "sort" "Jazz-Plain-Text-View" "class:" "edit-document" "file" "dynamic" "function" "for-each" "true" "multiple-selection?:" "OpenFile-Dialog" "get-modal" "files" "let" "evt")}
        {Lisp-Entry "on-open-jazz-text" () 537 18 ("get-name" "key:" ">" "sort" "Jazz-Text-View" "class:" "edit-document" "file" "dynamic" "function" "for-each" "true" "multiple-selection?:" "OpenFile-Dialog" "get-modal" "files" "let" "evt")}
        {Lisp-Entry "on-call-test" () 544 18 ("on-test" "else" "on-test-shift" "get-shift?" "cond" "evt")}
        {Lisp-Entry "on-test" () 549 26 ("System" "Development" "Utilities" "Language" "list" "privileged-execute" "privileged-test?" "not" "if" "test" "get-user" "user" "let" "evt")}
        {Lisp-Entry "on-test-shift" () 567 26 ("System" "Development" "Utilities" "Language" "list" "privileged-execute" "privileged-test?" "not" "if" "test-shift" "get-user" "user" "let" "evt")}
        {Lisp-Entry "on-test-no" () 585 11 ("System" "Development" "Utilities" "Language" "->string" "append" "string->symbol" "list" "privileged-execute" "privileged-test?" "not" "if" "test9" "9" "test8" "8" "test7" "7" "test6" "6" "test5" "5" "test4" "4" "test3" "3" "test2" "2" "test1" "1" "test0" "0" "no:" "get-property" "case" "get-user" "user" "let" "evt")}
        {Lisp-Entry "on-debug-view" () 623 18 ("View-Debugger" "debug-view" "evt")}
        {Lisp-Entry "on-explore-views" () 627 18 ("View-Debugger" "explore-views" "evt")}
        {Lisp-Entry "on-threads-manager" () 631 11 ("Threads-Manager" "show-palette" "evt")}
        {Lisp-Entry "on-memory-inspector" () 635 11 ("Memory-Inspector" "show-palette" "evt")}
        {Lisp-Entry "on-resources-monitor" () 639 11 ("Resources-Monitor" "show-palette" "evt")}
        {Lisp-Entry "on-processes-inspector" () 643 11 ("Processes-Inspector" "show-palette" "evt")}
        {Lisp-Entry "on-windows-inspector" () 647 11 ("Windows-Inspector" "show-palette" "evt")}
        {Lisp-Entry "on-logs-viewer" () 651 18 ("Logs-Viewer" "show-palette" "evt")}
        {Lisp-Entry "on-class-browser" () 655 11 ("set-text" "browser" "palette" "dynamic" "function" "initialize:" "Class-Browser" "show-palette" "get-selected-string" "Text-View" "is?" "if" "text" "get-focus" "focus" "let*" "evt")}
        {Lisp-Entry "on-reference-analyser" () 662 18 ("Java-Reference-Finder" "new" "evt")}
        {Lisp-Entry "on-edit-clipboard" () 667 18 ("bell" "edit-definition" "string?" "if" "get-clipboard" "clipboard" "let" "evt")}
        {Lisp-Entry "get-workbench-manager" () 674 18 ("Workbench-Manager" "singleton-docked" "get-guest")}
        {Lisp-Entry "on-edit-project" () 678 18 ("get-workbench-manager" "edit-current" "evt")}
        {Lisp-Entry "on-compile-file" () 683 18 ("get-workbench-manager" "compile-current" "evt")}
        {Lisp-Entry "on-preprocess-file" () 688 18 ("get-workbench-manager" "preprocess-current" "evt")}
        {Lisp-Entry "on-build-project" () 693 18 ("get-workbench-manager" "build-current" "evt")}
        {Lisp-Entry "on-clean-project" () 698 18 ("get-workbench-manager" "clean-current" "evt")}
        {Lisp-Entry "on-options-project" () 703 18 ("get-workbench-manager" "options-current" "evt")}
        {Lisp-Entry "on-references-project" () 708 18 ("get-workbench-manager" "references-current" "evt")}
        {Lisp-Entry "on-view-project-log" () 713 18 ("get-workbench-manager" "view-log" "evt")}
        {Lisp-Entry "on-launch-project" () 718 18 ("get-workbench-manager" "launch-current" "evt")}
        {Lisp-Entry "on-execute-project" () 723 18 ("get-workbench-manager" "execute-current" "evt")}
        {Lisp-Entry "on-distribute-project" () 728 18 ("get-workbench-manager" "distribute-current" "evt")}
        {Lisp-Entry "on-properties" () 738 18 ("true" "focus?:" "Properties-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-search-results" () 742 18 ("true" "focus?:" "Search-Results" "select-palette" "evt")}
        {Lisp-Entry "on-web-servers" () 746 18 ("true" "focus?:" "Web-Servers-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-output-log" () 750 18 ("true" "focus?:" "Output-Log" "select-palette" "evt")}
        {Lisp-Entry "on-user-log" () 754 18 ("refresh" "true" "focus?:" "User-Log" "select-palette" "user-log" "let" "evt")}
        {Lisp-Entry "on-activities" () 759 18 ("true" "focus?:" "Activities-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-workbench" () 763 18 ("true" "focus?:" "Workbench-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-favorites" () 767 18 ("true" "focus?:" "Favorites-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-repositories" () 771 18 ("true" "focus?:" "Repositories-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-contacts" () 776 18 ("true" "focus?:" "Contacts-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-chapters" () 781 18 ("true" "focus?:" "text" "workspace:" "Chapters-Browser" "select-palette" "evt")}
        {Lisp-Entry "on-hierarchy" () 785 18 ("true" "focus?:" "text" "workspace:" "Hierarchy-Browser" "select-palette" "evt")}
        {Lisp-Entry "on-bindings" () 789 18 ("Bindings-Manager" "new-frame" "evt")}
        {Lisp-Entry "on-preferences" () 793 18 ("Preferences-Manager" "new-frame" "evt")}
        {Lisp-Entry "on-toggle-catalog-context" () 797 18 ("cpp/java" "set-catalog-context" "jazz" "catalog-context" "case" "evt")}
        {Lisp-Entry "on-refresh-window" () 804 18 ("redraw-window" "not" "if" "stage" "first-window" "window" "let" "evt")}
        {Lisp-Entry "on-save-workspace" () 812 18 ("call-exit-listeners" "call-save-environment-listeners" "user-message" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-exit-without-save" () 822 18 ("exit" "yes" "question" "type:" "message-box" "eq?" "when" "evt")}
        {Lisp-Entry "on-compare-directories" () 827 18 ("acquire-focus" "true" "set-visible?" "bring-to-front" "compare-trees" "get-guest" "configure" "dynamic" "function" ":wait" "with-cursor" "false" "host-visible?:" "frame" "Compare-Directories" "new-frame" "not" "compare-directories" "tools" "get-preferences" "get-active-configuration" "default" "let" "get-shift?" "if" "evt")}
        {Lisp-Entry "on-compare-files" () 843 18 ("Compare-Files" "new-frame" "evt")}
        {Lisp-Entry "on-compare-databases" () 847 18 ("Compare-Databases" "new-frame" "evt")}
        {Lisp-Entry "on-integrate-clearcase" () 852 18 ("Integrate-ClearCase" "new-frame" "evt")}
        {Lisp-Entry "on-msdn" () 862 11 ("MSDN" "bring-to-front" "evt")}
        {Lisp-Entry "on-repository-manager" () 867 11 ("Repository" "require-repository" ":repository" "new-frame" "bring-to-front" "Repository-Manager" "stage" "find-host" "manager" "let" "message-box" "guest-login?" "if" "evt")}
        {Lisp-Entry "on-update-text" () 877 11 ("recolorize-entries" "CppJava-Text-View" "is?" "when" "get-focus" "text" "let" "evt")}
        {Lisp-Entry "on-update-catalog" () 884 11 ("get-cataloguer" "get-main-catalog" "update" "dynamic" "function" ":wait" "with-cursor" "message-box" "catalogs" "get-preferences" "get-main" "not" "if" "evt")}
        {Lisp-Entry "on-catalogs-manager" () 892 11 ("new-frame" "bring-to-front" "if" "Catalogs-Manager" "stage" "find-host" "manager" "let" "evt")}}}})
"IDE-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE-Actions.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.ide.IDE-Actions" () 37 9 ("jazz")
      {Lisp-Entry "IDE-Actions" () 46 7 ("on-user-code" "user-code" "F12" "on-edit-clipboard" "edit-clipboard" "on-update-text" "update-text" "on-find-backward" "find-backward" "on-find-forward" "find-forward" "open-favorite-0" "open-favorite-9" "open-favorite-8" "open-favorite-7" "open-favorite-6" "open-favorite-5" "open-favorite-4" "open-favorite-3" "open-favorite-2" "open-favorite-1" "open-favorite-z" "open-favorite-y" "open-favorite-x" "open-favorite-w" "open-favorite-v" "open-favorite-u" "open-favorite-t" "open-favorite-s" "open-favorite-r" "open-favorite-q" "open-favorite-p" "open-favorite-o" "open-favorite-n" "open-favorite-m" "open-favorite-l" "open-favorite-k" "open-favorite-j" "open-favorite-i" "open-favorite-h" "open-favorite-g" "open-favorite-f" "open-favorite-e" "open-favorite-d" "open-favorite-c" "open-favorite-b" ":alt" ":shift" ":control" ":char" "on-open-favorite" ":application" "open-favorite-a" "F2" "Shortcut" "shortcut:" "on-paste" ":focus" "Event-Handler" "action-handler:" "paste" "name:" "Actions")}}})
"IDE-File-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE-File-Menu.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.ide.IDE-File-Menu" () 37 9 ("jazz")
      {Lisp-Entry "IDE-File-Menu" () 46 7 ("exit-without-save" "on-exit-without-save" "save-workspace" "on-exit-application" "on-save-workspace" "open-jazz-text" "on-open-jazz-text" "open-text" "jedi" "Action" "action:" "on-close" "before:" "title:" "on-open-text" "name:" "File-Menu")}}})
"IDE-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE-Preferences.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.ide.IDE-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "IDE-Preferences" () 46 7 ("title:" "Application-Preferences")}}})
"IDE-Status"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE-Status.fusion"} {Time 128368671760000000L}
    {Lisp-Entry "jazz.ui.ide.IDE-Status" () 37 9 ("jazz")
      {Lisp-Entry "IDE-Status" () 50 7 ("Status-Toolbar")
        {Lisp-Entry "break-listener" () 53 8 ()}
        {Lisp-Entry "install" () 61 11 ("Status-Break-Listener" "new" "break-listener" "set!" "nextmethod" "rest")}
        {Lisp-Entry "destroy" () 66 11 ("nextmethod" "break-listener" "close")}
        {Lisp-Entry "on-context-menu" () 76 29 ("Mode-Menu" "new" "track-popup-menu" "mode" "case" "get-position" "acquire" "pos" "get-name" "name" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-mouse-down" () 84 29 ("Mode-Menu" "new" "track-popup-menu" "mode" "case" "get-position" "acquire" "pos" "get-name" "name" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "select-debugger-workspace" () 97 11 ("apply-preferences" "when" "false" "error?:" "debugger" "workspaces" "get-preferences" "workspace" "let")}}
      {Lisp-Entry "Debugger-Menu" () 108 7 ("Context-Menu")
        {Lisp-Entry "install" () 111 11 ("insert-debuggees" "nextmethod" "rest")}
        {Lisp-Entry "insert-debuggees" () 116 11 ("=" "insert-debuggee" "debuggee" "dynamic" "function" "for-each" "true" ":validate?" "get-debuggees" "debuggees" "get-selected-debuggee" "selected" "get-local-debugger-server" "debugger" "get-application" "appl" "let*")}
        {Lisp-Entry "insert-debuggee" () 126 11 ("true" "set-selected?" "when" ":debuggee" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "icon:" "title:" "self" "parent:" "Radio-Item" "new" "item" "get-icon" "icon" "get-application" "present-debuggee" "title" "let*" "selected?" "debuggee")}
        {Lisp-Entry "on-action" () 134 11 ("get-application" "get-local-debugger-server" "select-debuggee" ":debuggee" "get-property" "debuggee" "let" "evt")}}
      {Lisp-Entry "Activities-Menu" () 144 7 ("on-clear-done" "Bitmap-Resource" "icon:" "clear-done" "on-close" "close" "on-open" "form:" "Event-Handler" "action-handler:" "open" "name:" "title:" "Context-Menu")
        {Lisp-Entry "on-open" () 155 11 ("get-activity-manager" "show" "evt")}
        {Lisp-Entry "on-close" () 159 11 ("get-activity-manager" "hide" "evt")}
        {Lisp-Entry "on-clear-done" () 163 11 ("get-activity-manager" "clear-done" "evt")}}
      {Lisp-Entry "Locales-Menu" () 172 7 ("Context-Menu")
        {Lisp-Entry "install" () 175 11 ("insert-locales" "nextmethod" "rest")}
        {Lisp-Entry "insert-locales" () 180 11 ("=" "insert-locale" "locale" "dynamic" "function" "for-each" "get-locales" "locales" "get-locale" "current" "let")}
        {Lisp-Entry "insert-locale" () 188 11 ("true" "set-checked?" "when" ":locale" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Check-Item" "new" "item" "present-locale" "title" "let*" "checked?" "locale")}
        {Lisp-Entry "on-action" () 195 11 (":locale" "get-property" "set-locale" "evt")}}
      {Lisp-Entry "Look-Menu" () 204 7 ("Context-Menu")
        {Lisp-Entry "install" () 207 11 ("insert-looks" "nextmethod" "rest")}
        {Lisp-Entry "insert-looks" () 212 11 ("=" "insert-look" "look" "dynamic" "function" "for-each" "get-looks" "looks" "get-look" "current" "let")}
        {Lisp-Entry "insert-look" () 220 11 ("true" "set-checked?" "when" ":look" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Check-Item" "new" "item" "present" "title" "let*" "checked?" "look")}
        {Lisp-Entry "on-action" () 227 11 ("get-toplevel" "redraw-window" ":look" "get-property" "set-look" "evt")}}
      {Lisp-Entry "Mode-Menu" () 237 7 ("Context-Menu")
        {Lisp-Entry "install" () 240 11 ("cpp/java" "Bitmap-Resource" "jazz" "insert-item" "nextmethod" "rest")}
        {Lisp-Entry "insert-item" () 246 11 ("true" "set-checked?" "=" "when" "mode:" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "icon:" "title:" "self" "parent:" "Check-Item" "new" "item" "get-application" "get-catalog-context" "current" "let" "icon" "title" "mode")}
        {Lisp-Entry "on-action" () 253 11 ("mode:" "get-property" "get-application" "set-catalog-context" "evt")}}}})
"IDE-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.ide.IDE-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "IDE-Text-View" () 50 7 ("Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Code-Text-View")
        {Lisp-Entry "context" () 53 12 ("set-context" "get-context")}
        {Lisp-Entry "new-syntax" () 61 11 ("Jazz-Syntax" "new")}
        {Lisp-Entry "get-context" () 70 11 ("syntax" "get-catalog-context" "list" "context" "not" "if")}
        {Lisp-Entry "set-context" () 76 18 ("context" "set!" "value")}
        {Lisp-Entry "catalog-context" () 85 11 ("syntax" "get-catalog-context" "context" "either")}
        {Lisp-Entry "jazz-preferences" () 94 11 ("jazz-text" "documents" "get-preferences")}
        {Lisp-Entry "cpp/java-preferences" () 98 11 ("java-text" "documents" "get-preferences")}
        {Lisp-Entry "sql-preferences" () 102 11 ("sql-text" "documents" "get-preferences")}
        {Lisp-Entry "current-history-item" () 111 11 ()}
        {Lisp-Entry "explorer-class" () 120 11 ("nextmethod" "else" "SQL-Explorer" "sql" "CppJava-Explorer" "cpp/java" "Jazz-Explorer" "jazz" "catalog-context" "case")}
        {Lisp-Entry "expr-at" () 134 11 ("sql-expr-range" "sql-name-at" "sql" "cpp/java-expr-range" "cpp/java-name-at" "cpp/java" "jazz-expr-range" "get-string" "read-string-element" "jazz" "catalog-context" "case" "pos")}
        {Lisp-Entry "expr-range" () 141 11 ("sql-expr-range" "sql" "cpp/java-expr-range" "cpp/java" "jazz-expr-range" "jazz" "catalog-context" "case" "pos")}
        {Lisp-Entry "current-expr" () 148 11 ("current-sql-expr" "sql" "current-cpp/java-expr" "cpp/java" "current-jazz-expr" "jazz" "catalog-context" "case")}
        {Lisp-Entry "current-jazz-expr" () 160 11 ("get-string" "read-string-element" "when" "current-jazz-expr-range" "range" "let")}
        {Lisp-Entry "current-jazz-symbol" () 166 21 ("symbol?" "when" "current-jazz-expr" "expr" "let")}
        {Lisp-Entry "current-jazz-expr-range" () 172 11 ("get-end" "jazz-expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "jazz-expr-range" () 178 11 ("get-range" "outer-expr" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "current-cpp/java-expr" () 189 11 ("current-cpp/java-name")}
        {Lisp-Entry "current-cpp/java-name" () 193 11 ("cpp/java-current-expr-range" "cpp/java-name-at")}
        {Lisp-Entry "cpp/java-current-expr-range" () 197 11 ("get-end" "cpp/java-expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "cpp/java-expr-range" () 203 11 ("get-range" "outer-expr" "end:" "start:" "self" "CppJava-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "cpp/java-name-at" () 209 11 ("read-string-element" "0" "element" "=" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-sql-expr" () 222 11 ("current-sql-name")}
        {Lisp-Entry "current-sql-name" () 226 11 ("sql-current-expr-range" "sql-name-at")}
        {Lisp-Entry "sql-current-expr-range" () 230 11 ("get-end" "sql-expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "sql-expr-range" () 236 11 ("get-range" "outer-expr" "end:" "start:" "self" "SQL-Explorer" "new" "expl" "let" "sql-expr-range" "unimplemented" "pos")}
        {Lisp-Entry "sql-name-at" () 244 11 ("read-string-element" "0" "element" "=" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "favorite-completions" () 257 11 ("nextmethod" "else" "sql-preferences" "sql" "cpp/java-preferences" "cpp/java" "jazz-preferences" "get-completions" "jazz" "catalog-context" "case")}
        {Lisp-Entry "colorize-syntax" () 270 11 ("rest")}
        {Lisp-Entry "recolorize-text" () 274 11 ("end-row" "start")}
        {Lisp-Entry "flash-character?" () 283 11 ("nextmethod" "else" "memq?" "jazz" "catalog-context" "case" "char")}
        {Lisp-Entry "context-menu" () 294 11 ("nextmethod" "else" "edit-references" "edit-definition" "cond" "context-menu-click" "or" "when" "references?" "not" "and" "definition?" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "get-context-menu" () 305 11 ("new-text-context-menu")}}}})
"IDE-Toolbar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE-Toolbar.fusion"} {Time 128368663080000000L}
    {Lisp-Entry "jazz.ui.ide.IDE-Toolbar" () 37 9 ("jazz")
      {Lisp-Entry "IDE-Toolbar" () 48 7 ("Toolbar")
        {Lisp-Entry "on-clipboard-menu" () 56 11 (":clipboards" "Clipboards-Menu" "track-popup-menu" "get-application" "get-clipboard-stack" "get-clipboard" "cons" "clipboards" "get-size" "get-height" "0" "Point" "new" "get-position" "+" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-backward-menu" () 63 11 ("backward" "get-application" "get-history-manager" "History-Menu" "track" "get-combo" "initiator" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-forward-menu" () 69 11 ("forward" "get-application" "get-history-manager" "History-Menu" "track" "get-combo" "initiator" "get-sender" "sender" "let*" "evt")}}
      {Lisp-Entry "Clipboards-Menu" () 80 7 ("Context-Menu")
        {Lisp-Entry "clipboards" () 83 12 ("generate" "accessors")}
        {Lisp-Entry "finish" () 86 11 ("for-each" "self" "parent:" "Separator-Item" "new" "when" "insert-item" "clipboards" "others" "clipboard" "bind" "nextmethod" "rest")}
        {Lisp-Entry "insert-item" () 95 11 (":string" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "self" "parent:" "Label-Item" "new" "item")}
        {Lisp-Entry "on-action" () 99 11 ("paste-clipboard-string" ":string" "get-property" "string" "bell" "Text-View" "is-not?" "if" "get-focus" "focus" "let" "evt")}}}})
"IDE-Toplevel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE-Toplevel.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.ide.IDE-Toplevel" () 37 9 ("jazz")
      {Lisp-Entry "IDE-Toplevel" () 45 7 ("Toplevel")
        {Lisp-Entry "stage-class" () 48 11 ("Wallpaper-Stage")}}}})
"IDE-User"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "IDE-User.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.ide.IDE-User" () 37 9 ("jazz")
      {Lisp-Entry "IDE-User" () 48 7 ("Development" "System" "Utilities" "User")
        {Lisp-Entry "init" () 51 11 ("start-messaging" "nextmethod")}
        {Lisp-Entry "make-home-read/write" () 63 11 ("set-read/write" "file" "function" "Home" "Directory" "iterate-directory")}
        {Lisp-Entry "Stop-Messaging?" () 75 14 ("false")}
        {Lisp-Entry "Messaging-Period" () 79 14 ()}
        {Lisp-Entry "Auto-Reply?" () 83 14 ("false")}
        {Lisp-Entry "Auto-Reply-Message" () 87 14 ()}
        {Lisp-Entry "start-messaging" () 92 11 ("Messaging-Period" "sleep" "delete-file" "receive-message" "exists?" "when" "not" "while" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "false" "Stop-Messaging?" "set!" "personal-file" "file" "let")}
        {Lisp-Entry "stop-messaging" () 108 11 ("true" "Stop-Messaging?" "set!")}
        {Lisp-Entry "receive-message" () 113 11 ("send-to" "no" "yes" "no:" "yes:" "question" "type:" "format" "message-box" "case" "Auto-Reply-Message" "send-message-to" "Auto-Reply?" "if" "string->symbol" "message" "from" "bind" "load-lines" "lines" "let" "sleep" "writable?" "not" "while" "bell" "file")}
        {Lisp-Entry "send-to" () 131 11 ("send-message-to" "String-Request" "get-modal" "message" "let" "person")}
        {Lisp-Entry "send-message-to" () 137 11 ("user-message" "Me" "format" "File-Printer" "new" "printer" "with-closed" "network-file" "file" "let" "person" "message")}
        {Lisp-Entry "on-send-message" () 146 11 ("send-to" ":person" "get-property" "person" "let" "evt")}
        {Lisp-Entry "format-sql" () 156 11 ("error" "else" "format" "string?" "cond" "value")}
        {Lisp-Entry "output-tables" () 161 11 ("sql" "select-workspace" "get-application" "appl" "when" "output-tables" "get-sql-console-text" "text" "let" "true" "select?" "select?:" "name" "name:" "tables")}
        {Lisp-Entry "output-table" () 169 11 ("list" "output-tables" "true" "select?" "select?:" "name" "name:" "table")}
        {Lisp-Entry "log-tables" () 173 11 ("log-table" "for-each" "tables")}
        {Lisp-Entry "log-table" () 177 11 (":data" "get-name" "name:" "log-entry" "table")}
        {Lisp-Entry "glue" () 186 11 ("user-message" "set-clipboard" "join" "2" "format" "case" "glued" "-" "0" "subseq" "get-clipboard" "cons" "lst" "get-clipboard-stack" "stack" "get-application" "appl" "let*" "1" "kind" "n")}
        {Lisp-Entry "get-source" () 202 11 ("find-zipped" "find-file" "find-document" "either" "class-name")}
        {Lisp-Entry "find-document" () 208 11 ("get-stage" "get-children" "ci=" "=" "and" "get-extension" "ext" "get-base" "base" "get-controller" "get-moniker" "moniker" "Document" "get-guest" "guest" "Host-Frame" "is?" "when" "frame" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "->string" "target" "let" "get-manifest-source" "unless" "class-name")}
        {Lisp-Entry "find-file" () 228 11 ("source-directories" "exists?" "when" "new-file" "file" "dir" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "tie" "name" "let" "class-name")}
        {Lisp-Entry "source-directories" () 240 29 ()}
        {Lisp-Entry "find-zipped" () 244 11 ("source-zips" "Zipped" "extract-name" "=" "size" "entry" "iterate-files" "Unzip-File" "new" "unzip" "with-closed" "exists?" "when" "zip" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "format" "target" "let" "class-name")}
        {Lisp-Entry "source-zips" () 260 29 ()}}}})
"IDL-Generator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "registry" "IDL-Generator.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.registry.IDL-Generator" () 37 9 ("jazz")
      {Lisp-Entry "IDL-Generator" () 45 7 ("WinIDL" "COM" "System" "Utilities" "Object")
        {Lisp-Entry "library" () 48 8 ()}
        {Lisp-Entry "interfaces" () 49 8 ()}
        {Lisp-Entry "classes" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("library-classes" "classes~self" "library-interfaces" "interfaces~self" "library~self" "set!" "nextmethod" "library" "library:")}
        {Lisp-Entry "generate-idl" () 60 18 ("user-message" "emit-library" "emit-interfaces" "emit-forward-definitions" "emit-file-header" "library" "library-file" "File-Printer" "new" "printer" "with-closed")}
        {Lisp-Entry "emit-file-header" () 74 11 ("format" "printer")}
        {Lisp-Entry "emit-section-header" () 79 11 ("4" "+" "make-string" "filler" "length" "let*" "format" "printer" "level" "section-name")}
        {Lisp-Entry "emit-forward-definitions" () 88 11 ("interfaces" "type-name" "format" "interface" "dynamic" "function" "for-each" "printer")}
        {Lisp-Entry "emit-interfaces" () 94 11 ("interfaces" "emit-interface" "interface" "dynamic" "function" "for-each" "printer")}
        {Lisp-Entry "emit-interface" () 100 11 ("emit-definitions" "type-ascendant" "category-helpstring" "either" "category-guid" "->string" "upcase" "format" "0" "emit-section-header" "type-name" "name" "let" "printer" "interface")}
        {Lisp-Entry "emit-definitions" () 116 11 ("category-fields" "emit-definition" "coexternal?" "definition-value" "value" "let" "field?" "when" "definition" "dynamic" "function" "for-each" "printer" "interface")}
        {Lisp-Entry "emit-definition" () 125 11 ("proxy-parameters" "false" "set!" "get-type" "idl-type" "get-direction" "idl-direction" "if" "param" "dynamic" "function" "for-each" "true" "first?" "let" "Interpreter" "proxy-name" "format" "printer" "external")}
        {Lisp-Entry "idl-direction" () 138 11 ("case" "direction")}
        {Lisp-Entry "idl-type" () 145 11 ("error" "else" "string" "int" "ecase" "type-name" "format" "IUnknown" "subtype?" "interface?" "and" "if" "type")}
        {Lisp-Entry "emit-library" () 154 11 ("emit-classes" "category-helpstring" "either" "category-guid" "->string" "upcase" "format" "0" "emit-section-header" "library" "type-name" "name" "let" "printer")}
        {Lisp-Entry "emit-classes" () 169 11 ("classes" "emit-class" "class" "dynamic" "function" "for-each" "printer")}
        {Lisp-Entry "emit-class" () 175 11 ("class-cointerfaces" "false" "set!" "if" "interface" "dynamic" "function" "for-each" "true" "first?" "category-helpstring" "either" "category-guid" "->string" "upcase" "format" "1" "emit-section-header" "type-name" "name" "let" "printer" "class")}}}})
"IDispatch"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "IDispatch.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.windows.com.IDispatch" () 37 9 ("jazz")
      {Lisp-Entry "IDispatch" () 40 13 ("DISPPARAMS&" "int" "int&" "jazz.platform.windows._WinIDL" "IUnknown")
        {Lisp-Entry "GetTypeInfoCount" () 43 43 ()}
        {Lisp-Entry "GetTypeInfo" () 44 43 ()}
        {Lisp-Entry "GetIDsOfNames" () 45 43 ()}
        {Lisp-Entry "Invoke" () 46 43 ()}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "IDispatch.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.IDispatch" () 37 9 ("jazz")
      {Lisp-Entry "IDispatch" () 44 11 ("DISPPARAMS&" "int" "int&" "GUID" "guid:" "WinIDL" "IUnknown")
        {Lisp-Entry "GetTypeInfoCount" () 50 43 ()}
        {Lisp-Entry "GetTypeInfo" () 51 43 ()}
        {Lisp-Entry "GetIDsOfNames" () 52 43 ()}
        {Lisp-Entry "Invoke" () 53 43 ()}}}})
"IDropTarget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "IDropTarget.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.IDropTarget" () 37 9 ("jazz")
      {Lisp-Entry "IDropTarget" () 44 11 ("GUID" "guid:" "IUnknown")
        {Lisp-Entry "DragEnter" () 50 47 ()}
        {Lisp-Entry "DragOver" () 51 47 ()}
        {Lisp-Entry "DragLeave" () 52 47 ()}
        {Lisp-Entry "Drop" () 53 47 ()}}}})
"IEnumVARIANT"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "IEnumVARIANT.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.IEnumVARIANT" () 37 9 ("jazz")
      {Lisp-Entry "IEnumVARIANT" () 44 11 ("IEnumVARIANT&" "int&" "variant" "array" "int" "GUID" "guid:" "WinIDL" "IUnknown")
        {Lisp-Entry "Next" () 50 47 ()}
        {Lisp-Entry "Skip" () 51 47 ()}
        {Lisp-Entry "Reset" () 52 47 ()}
        {Lisp-Entry "Clone" () 53 47 ()}}}})
"IErrorInfo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "com" "IErrorInfo.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.kernel.runtime.IErrorInfo" () 37 9 ("jazz")
      {Lisp-Entry "IErrorInfo" () 44 11 ("int&" "string&" "guid&" "GUID" "guid:" "IUnknown")
        {Lisp-Entry "GetGUID" () 50 43 ()}
        {Lisp-Entry "GetSource" () 51 43 ()}
        {Lisp-Entry "GetDescription" () 52 43 ()}
        {Lisp-Entry "GetHelpFile" () 53 43 ()}
        {Lisp-Entry "GetHelpContext" () 54 43 ()}}}})
"IOR"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "IOR.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.utility.IOR" () 37 9 ("jazz")
      {Lisp-Entry "IOR" () 43 7 ("Object")
        {Lisp-Entry "host" () 46 15 ()}
        {Lisp-Entry "port" () 47 15 ()}
        {Lisp-Entry "remotable" () 48 15 ()}
        {Lisp-Entry "reference" () 49 15 ()}
        {Lisp-Entry "initialize" () 52 11 ("reference~self" "remotable~self" "port~self" "host~self" "set!" "nextmethod" "reference" "remotable" "port" "host")}
        {Lisp-Entry "compare-object" () 60 11 (":not-equal" "else" ":equal" "get-reference" "reference" "get-remotable" "remotable" "get-port" "port" "get-host" "host" "=" "and" ":incompatible" "IOR" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 72 11 ("reference" "remotable" "port" "host" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "unmarshal" () 81 11 ("self" "get-process" "get-proxy-dispatcher" "unmarshal-ior")}
        {Lisp-Entry "get-host" () 90 18 ("host")}
        {Lisp-Entry "get-port" () 94 18 ("port")}
        {Lisp-Entry "get-remotable" () 98 18 ("remotable")}
        {Lisp-Entry "get-reference" () 102 18 ("reference")}}}})
"ISupportErrorInfo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "com" "ISupportErrorInfo.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.kernel.runtime.ISupportErrorInfo" () 37 9 ("jazz")
      {Lisp-Entry "ISupportErrorInfo" () 44 11 ("guid&" "GUID" "guid:" "IUnknown")
        {Lisp-Entry "InterfaceSupportsErrorInfo" () 50 43 ()}}}})
"IUnknown"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "IUnknown.scm"} {Time 128366793860000000L}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "IUnknown.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.windows.com.IUnknown" () 37 9 ("jazz")
      {Lisp-Entry "IUnknown" () 40 13 ("int&" "int" "jazz.platform.windows._WinIDL")
        {Lisp-Entry "QueryInterface" () 43 34 ()}
        {Lisp-Entry "AddRef" () 44 34 ()}
        {Lisp-Entry "Release" () 45 34 ()}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "com" "IUnknown.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.kernel.runtime.IUnknown" () 37 9 ("jazz")
      {Lisp-Entry "IUnknown" () 44 11 ("int&" "int" "GUID" "guid:")
        {Lisp-Entry "QueryInterface" () 50 34 ()}
        {Lisp-Entry "AddRef" () 51 34 ()}
        {Lisp-Entry "Release" () 52 34 ()}}}})
"IViewObject"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "IViewObject.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.IViewObject" () 37 9 ("jazz")
      {Lisp-Entry "IViewObject" () 44 11 ("IAdviseSink&" "IAdviseSink" "int&" "RECT&" "record" "int" "GUID" "guid:" "WinDef" "IUnknown")
        {Lisp-Entry "Draw" () 50 47 ()}
        {Lisp-Entry "GetColorSet" () 51 47 ()}
        {Lisp-Entry "Freeze" () 52 47 ()}
        {Lisp-Entry "Unfreeze" () 53 47 ()}
        {Lisp-Entry "SetAdvise" () 54 47 ()}
        {Lisp-Entry "GetAdvise" () 55 47 ()}}}})
"IViewObject2"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "com" "IViewObject2.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.com.IViewObject2" () 37 9 ("jazz")
      {Lisp-Entry "IViewObject2" () 44 11 ("SIZE&" "record" "int" "GUID" "guid:" "WinDef" "IViewObject")
        {Lisp-Entry "GetExtent" () 50 47 ()}}}})
"Icon-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "resource" "Icon-File.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.resource.Icon-File" () 37 9 ("jazz")
      {Lisp-Entry "Icon-File" () 45 7 ("Resource-File")
        {Lisp-Entry "resource-class" () 48 11 ("Icon-Resource")}
        {Lisp-Entry "resource-marker" () 52 11 ()}}}})
"Icon-Resource"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "resource" "Icon-Resource.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.resource.Icon-Resource" () 37 9 ("jazz")
      {Lisp-Entry "Icon-Resource" () 43 7 ("Resource")
        {Lisp-Entry "resource-type" () 52 16 ("icon")}}}})
"Image"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "image" "Image.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.image.Image" () 37 9 ("jazz")
      {Lisp-Entry "Image" () 50 7 ("Object")
        {Lisp-Entry "icon" () 53 8 ()}
        {Lisp-Entry "bitmap" () 54 8 ()}
        {Lisp-Entry "metafile" () 55 8 ()}
        {Lisp-Entry "portfolio" () 56 8 ()}
        {Lisp-Entry "image-name" () 57 8 ()}
        {Lisp-Entry "moniker" () 58 8 ()}
        {Lisp-Entry "source" () 59 8 ()}
        {Lisp-Entry "scaled?" () 60 8 ("false")}
        {Lisp-Entry "scaling" () 61 8 ()}
        {Lisp-Entry "cache?" () 62 8 ("false")}
        {Lisp-Entry "handle" () 63 8 ()}
        {Lisp-Entry "size" () 64 8 ()}
        {Lisp-Entry "view-position" () 65 8 ("0" "Point")}
        {Lisp-Entry "view-size" () 66 8 ()}
        {Lisp-Entry "mode" () 67 8 ()}
        {Lisp-Entry "initialize" () 70 11 ("view-size" "view-size~self" "view-position" "view-position~self" "image-name" "image-name~self" "portfolio" "portfolio~self" "cache?~self" "set!" "nextmethod" "false" "cache?" "cache?:")}
        {Lisp-Entry "get-bounds" () 83 18 ("self" "error" "else" "rclBounds" "get" "RECT->rect" "scaling" "scale" "scaled?" "if" "bounds" "dynamic" "function" "proc" "GetEnhMetaFileHeader" "nSize" "set" "new" "header" "with" "ENHMETAHEADER" "size-of" "size" "let" "metafile" "cond" "get-bounds" "unimplemented")}
        {Lisp-Entry "get-size" () 101 18 ("self" "error" "when" "else" "rect-height" "1" "rect-width" "+" "get-bounds" "bounds" "with" "metafile" "BITMAP-bmHeight-ref" "BITMAP-bmWidth-ref" "Dimension" "new" "size-of-BITMAP" "load-image" "handle" "either" "GetObject" "BITMAP-make" "info" "let" "bitmap" "size" "source" "cond" "true" "error?" "error?:")}
        {Lisp-Entry "get-width" () 120 18 ("get-size" "else" "get-width" "portfolio" "cond")}
        {Lisp-Entry "get-height" () 125 18 ("get-size" "else" "get-height" "portfolio" "cond")}
        {Lisp-Entry "draw" () 135 18 ("draw-image-aux" "get-v" "view-position" "get-h" "+" "let" "true" "enabled?" "enabled?:" "ILD_TRANSPARENT" "style" "style:" "false" "error?:" "get-size" "size" "size:" "v" "h" "context" "dc")}
        {Lisp-Entry "draw-image-aux" () 141 21 ("cache?" "handle" "and" "draw-source" "source" "draw-image" "portfolio" "draw-metafile" "metafile" "draw-bitmap" "bitmap" "draw-icon" "icon" "cond" "enabled?" "style" "size" "v" "h" "context" "dc")}
        {Lisp-Entry "draw-icon" () 150 11 ("draw-image" "load-image" "handle" "either" "icon" "let" "size" "v" "h" "context" "dc")}
        {Lisp-Entry "draw-bitmap" () 155 11 ("icon" "draw-image" "load-image" "handle" "either" "bitmap" "let" "size" "v" "h" "dc")}
        {Lisp-Entry "draw-metafile" () 160 11 ("metafile" "get-hdc" "PlayEnhMetaFile" "rect->RECT" "rect" "get-bounds" "bounds" "with" "draw-metafile" "unimplemented" "size" "v" "h" "dc")}
        {Lisp-Entry "draw-image" () 168 11 ("enabled?:" "style:" "portfolio" "draw-image" "image-name" "when" "enabled?" "style" "size" "v" "h" "context" "dc")}
        {Lisp-Entry "draw-source" () 173 11 ("else" "stretched" "0" "draw-positioned" "filled" "draw-tiled" "tiled" "draw-centered" "centered" "mode" "case" "size" "v" "h" "dc")}
        {Lisp-Entry "draw-source-bitmap" () 182 11 ("NULL" "get-height" "size" "get-width" "get-hdc" "Imaging" "draw-HBITMAP" "handle" "when" "draw-source-bitmap" "unimplemented" "v" "h" "dc")}
        {Lisp-Entry "draw-centered" () 189 11 ("get-v" "get-h" "draw-source-bitmap" "Black" "name:" "Color" "fill-rect" "0" "Rect" "new" "rect" "with" "get-height" "get-width" ">" "or" "when" "view-size" "size" "center" "centered" "let" "v" "h" "dc")}
        {Lisp-Entry "draw-tiled" () 198 11 ("size" "increase!" "draw-source-bitmap" "get-width" "view-size" "get-height" "" "while" "0" "let" "v" "h" "dc")}
        {Lisp-Entry "draw-positioned" () 208 11 ("get-v" "view-position" "get-h" "+" "draw-source-bitmap" "v" "h" "dc")}
        {Lisp-Entry "preload-image" () 217 18 ("preload" "image-name" "portfolio" "and" "when")}
        {Lisp-Entry "get-scaled?" () 227 18 ("scaled?")}
        {Lisp-Entry "set-scaled?" () 231 18 ("scaled?" "set!" "value")}
        {Lisp-Entry "get-scaling" () 235 18 ("scaling")}
        {Lisp-Entry "set-scaling" () 239 18 ("scaling" "set!" "value")}
        {Lisp-Entry "get-mode" () 248 18 ("mode")}
        {Lisp-Entry "set-mode" () 252 18 ("true" "force?:" "update-image" "stretched" "filled" "=" "or" "set!" "old" "let" "mode" "/=" "when" "md")}
        {Lisp-Entry "get-view-position" () 261 18 ("view-position")}
        {Lisp-Entry "set-view-position" () 265 18 ("view-position" "set!" "pos")}
        {Lisp-Entry "get-view-size" () 269 18 ("view-size")}
        {Lisp-Entry "set-view-size" () 273 18 ("view-size" "set!" "s")}
        {Lisp-Entry "get-icon" () 277 18 ("icon")}
        {Lisp-Entry "set-icon" () 281 18 ("icon" "set!" "icn")}
        {Lisp-Entry "get-portfolio" () 285 18 ("portfolio")}
        {Lisp-Entry "set-portfolio" () 289 18 ("portfolio" "set!" "pf")}
        {Lisp-Entry "get-image-name" () 293 18 ("image-name")}
        {Lisp-Entry "set-image-name" () 297 18 ("image-name" "set!" "name")}
        {Lisp-Entry "get-bitmap" () 301 18 ("bitmap")}
        {Lisp-Entry "set-bitmap" () 305 18 ("load-image" "DeleteObject" "handle" "cache?" "when" "bitmap" "set!" "set-bitmap" "unimplemented" "b")}
        {Lisp-Entry "get-handle" () 317 18 ("handle")}
        {Lisp-Entry "set-handle" () 321 18 ("handle" "set!" "hnd")}
        {Lisp-Entry "get-source" () 325 18 ("source")}
        {Lisp-Entry "set-source" () 329 18 ("load-image-source" "DeleteObject" "handle" "when" "source" "set!" "set-source" "unimplemented" "file")}
        {Lisp-Entry "get-moniker" () 340 18 ("source" "bitmap" "moniker" "either")}
        {Lisp-Entry "set-moniker" () 344 18 ("set-source" "else" "load-metafile" "test:" "member?" "set-bitmap" "ci=" "false" "cond" "get-extension" "ext" "let" "moniker" "set!" "mnk")}
        {Lisp-Entry "load-metafile" () 355 11 ("parse" "GetEnhMetaFile" "metafile" "set!" "load-metafile" "unimplemented" "moniker")}
        {Lisp-Entry "update-image" () 361 18 ("source" "set-source" "stretched" "filled" "mode" "=" "or" "when" "false" "force?" "force?:")}
        {Lisp-Entry "load-image-source" () 366 11 ("Dimension" "size" "handle" "source" "get-hdc" "NULL" "RGB->HBITMAP" "bmp" "get-desktop" "Cairo-Client-Surface" "new" "compatibility-dc" "with-closed" "round" ">" "ratio" "rh" "/" "rw" "stretched" "set!" "heap-free" "resize-RGB" "3" "*" "heap-alloc" "resized-rgb" "get-height" "nh" "get-width" "nw" "let*" "filled" "mode" "case" "view-size" "when" "error" "not" "if" "Imaging" "close-source" "read-source" "h" "w" "rgb" "receive" "open-source" "src" "let" "load-image-source" "unimplemented" "file")}
        {Lisp-Entry "open-source" () 405 11 ("length" "get-handle" "open-memory-source" "Ansi-String" "parse" "coerce" "Imaging" "open-file-source" "file?" "if" "open-source" "unimplemented" "source")}
        {Lisp-Entry "read-source" () 413 11 ("read-TIFF->RGB" "tiff" "read-JPG->RGB" "jpg" "read-PNG->RGB" "png" "Imaging" "read-BMP->RGB" "bmp" "source-type" "case" "read-source" "unimplemented" "src" "source")}
        {Lisp-Entry "source-type" () 423 11 ("error" "else" "tiff" "jpg" "test:" "member?" "png" "bmp" "ci=" "cond" "get-extension" "ext" "let" "file?" "if" "source")}}}})
"Image-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "image" "Image-Browser.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.image.Image-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Image-Browser" () 48 7 ("width:" "title:" "tree" "header" "content" "vscroll?:" "hscroll?:" "document" "style:" "scroller" "on-select-directory" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "Dimension" "size:" "select" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "directory" () 51 8 ()}
        {Lisp-Entry "external-name" () 66 16 ("images-browser" "rest")}
        {Lisp-Entry "on-select-directory" () 70 11 ("update-images" "set!" "directory" "/=" "when" "BrowseFolder-Dialog" "get-modal" "dir" "let")}
        {Lisp-Entry "update-images" () 78 11 ("recursive?:" "false" "directories?:" "true" "files?:" "load-image" "image-file?" "when" "file" "directory" "iterate-directory" "dynamic" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "image-file?" () 91 11 ("ci=" "test:" "get-extension" "member?" "file")}
        {Lisp-Entry "load-image" () 96 11 ("image:" "title:" "Tree-Node" "list" "children:" "add-row" "Resource" "new" "image" "get-base" "name" "let*" "file" "tree")}
        {Lisp-Entry "palette-class" () 108 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 113 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 118 16 ()}
        {Lisp-Entry "get-tools-view" () 127 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 131 11 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" () 141 11 ("tree" "locate")}
        {Lisp-Entry "install" () 150 11 ("false" "header" "locate" "set-shown?" "nextmethod" "rest")}}}})
"Image-Style"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Image-Style.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Image-Style" () 37 9 ("jazz")
      {Lisp-Entry "Image-Style" () 45 7 ("Style")
        {Lisp-Entry "properties" () 48 14 (":scaling" ":scaled?" ":image-name" ":portfolio" "moniker:" "alignment:")}
        {Lisp-Entry "image" () 57 8 ("Image" "new")}
        {Lisp-Entry "scaled?" () 58 8 ("false")}
        {Lisp-Entry "scaling" () 59 8 ()}
        {Lisp-Entry "get-value" () 62 11 ("nextmethod" "else" "get-scaling" ":scaling" "get-scaled?" ":scaled?" "get-image-name" ":image-name" "get-portfolio" ":portfolio" "image" "get-moniker" "moniker:" "case" "property")}
        {Lisp-Entry "set-value" () 72 11 ("nextmethod" "else" "set-scaling" ":scaling" "set-scaled?" ":scaled?" "set-image-name" ":image-name" "set-portfolio" ":portfolio" "image" "set-moniker" "moniker:" "case" "value" "property")}
        {Lisp-Entry "get-image" () 87 18 ("image")}
        {Lisp-Entry "get-width" () 96 11 ("image" "get-width")}
        {Lisp-Entry "get-height" () 100 11 ("image" "get-height")}
        {Lisp-Entry "run-width" () 104 11 ("get-width" "run")}
        {Lisp-Entry "propagate?" () 113 11 ("false")}
        {Lisp-Entry "wrap" () 122 11 ("get-width" "+" "run" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "draw-style" () 132 11 ("+" "image" "draw" "justify-element" "top" "get-height" "height" "get-width" "width" "let*" "enabled?" "left" "tab-stops" "line-height" "v" "h" "string" "context" "dc")}}}})
"Image-Tool"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Image-Tool.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Image-Tool" () 37 9 ("jazz")
      {Lisp-Entry "Image-Tool" () 45 7 ("Tool-Button")
        {Lisp-Entry "portfolio" () 48 12 ("set-portfolio" "get-portfolio")}
        {Lisp-Entry "image-name" () 49 12 ("set-image-name" "get-image-name")}
        {Lisp-Entry "disabled-image-name" () 50 12 ("set-disabled-image-name" "get-disabled-image-name")}
        {Lisp-Entry "image" () 53 8 ("2" "Point" "view-position:" "Image" "new")}
        {Lisp-Entry "disabled-image" () 54 8 ("2" "Point" "view-position:" "Image" "new")}
        {Lisp-Entry "get-portfolio" () 62 18 ("image" "get-portfolio")}
        {Lisp-Entry "set-portfolio" () 66 18 ("invalidate-view" "disabled-image" "image" "set-portfolio" "child" "Portfolio" "is?" "if" "let" "portfolio")}
        {Lisp-Entry "get-image-name" () 73 18 ("image" "get-image-name")}
        {Lisp-Entry "set-image-name" () 77 18 ("invalidate-view" "image" "set-image-name" "name")}
        {Lisp-Entry "get-disabled-image-name" () 82 18 ("disabled-image" "get-image-name")}
        {Lisp-Entry "set-disabled-image-name" () 86 18 ("invalidate-view" "disabled-image" "set-image-name" "name")}
        {Lisp-Entry "preload-images" () 91 18 ("disabled-image" "image" "preload-image")}
        {Lisp-Entry "draw-tool" () 101 11 ("enabled?:" "image" "disabled-image" "draw" "get-disabled-image-name" "not" "and" "get-enabled?" "enabled?" "1" "2" "pushed" "get-state" "=" "if" "offset" "let" "context" "dc")}
        {Lisp-Entry "describe-view" () 114 11 ("get-disabled-image-name" "get-image-name" "list" "nextmethod" "append" "pos")}}}})
"Image-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "image" "Image-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.image.Image-View" () 37 9 ("jazz")
      {Lisp-Entry "Image-View" () 48 7 ("Document" "View")
        {Lisp-Entry "icon" () 51 12 ("set-icon" "get-icon")}
        {Lisp-Entry "portfolio" () 52 12 ("set-portfolio" "get-portfolio")}
        {Lisp-Entry "image-name" () 53 12 ("set-image-name" "get-image-name")}
        {Lisp-Entry "moniker" () 54 12 ("set-moniker" "get-moniker")}
        {Lisp-Entry "view-position" () 55 12 ("set-view-position" "get-view-position" "0" "Point")}
        {Lisp-Entry "view-size" () 56 12 ("set-view-size" "get-view-size")}
        {Lisp-Entry "mode" () 57 12 ("set-mode" "get-mode")}
        {Lisp-Entry "image" () 60 8 ("Image" "new")}
        {Lisp-Entry "dragging?" () 61 8 ("false")}
        {Lisp-Entry "base-position" () 62 8 ()}
        {Lisp-Entry "controller" () 63 8 ()}
        {Lisp-Entry "save-content" () 66 11 ("moniker")}
        {Lisp-Entry "default-extension" () 67 11 ()}
        {Lisp-Entry "extensions" () 68 11 ()}
        {Lisp-Entry "focus-document" () 69 11 ()}
        {Lisp-Entry "current-history-item" () 70 11 ()}
        {Lisp-Entry "compare-moniker" () 71 11 ("moniker")}
        {Lisp-Entry "external-name" () 75 16 ("image-view" "rest")}
        {Lisp-Entry "destroy" () 79 11 ("nextmethod" "image" "close" "controller" "when")}
        {Lisp-Entry "install-in-host" () 91 11 ("centered" "set-mode" "set-view-size" "set-size" "get-size" "size" "let" "nextmethod" "host")}
        {Lisp-Entry "size-change" () 99 11 ("update-image" "set-view-size" "nextmethod" "size")}
        {Lisp-Entry "frame-workspaces" () 105 11 ("image")}
        {Lisp-Entry "get-controller" () 114 11 ("new-controller" "set!" "controller" "unless")}
        {Lisp-Entry "new-controller" () 120 11 ("self" "Document-Controller" "new")}
        {Lisp-Entry "install-scroller?" () 124 11 ("true")}
        {Lisp-Entry "get-moniker" () 128 11 ("get-controller" "get-moniker")}
        {Lisp-Entry "set-moniker" () 132 11 ("get-controller" "image" "set-moniker" "moniker")}
        {Lisp-Entry "load-content" () 137 11 ("invalidate-view" "image" "set-moniker" "moniker")}
        {Lisp-Entry "verify-reload" () 142 11 ()}
        {Lisp-Entry "reload-moniker" () 146 11 ("moniker")}
        {Lisp-Entry "get-modified?" () 150 11 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" () 154 11 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "update-status" () 158 11 ("get-controller" "update-status")}
        {Lisp-Entry "update-moniker-time" () 162 11 ("get-controller" "update-moniker-time" "moniker")}
        {Lisp-Entry "tool-update" () 166 11 ("tool?")}
        {Lisp-Entry "console-update" () 170 11 ("console?")}
        {Lisp-Entry "scrollee-size" () 179 11 ("false" "error?:" "image" "get-size")}
        {Lisp-Entry "draw" () 188 11 ("0" "draw-at" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-at" () 192 29 ("draw-image" "get-size" "size" "size:" "v" "h" "context" "dc")}
        {Lisp-Entry "draw-image" () 196 11 ("image" "draw" "true" "enabled?" "enabled?:" "get-size" "size" "size:" "v" "h" "context" "dc")}
        {Lisp-Entry "mouse-down" () 205 11 ("acquire-capture" "base-position" "true" "dragging?" "set!" "scroller" "when" "pos")}
        {Lisp-Entry "drag-move" () 212 11 ("get-v" "get-h" "move-figure" "base-position" "-" "delta" "let" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" () 218 11 ("false" "set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "get-icon" () 229 18 ("image" "get-icon")}
        {Lisp-Entry "set-icon" () 233 18 ("invalidate-view" "image" "set-icon" "icn")}
        {Lisp-Entry "get-portfolio" () 238 18 ("image" "get-portfolio")}
        {Lisp-Entry "set-portfolio" () 242 18 ("invalidate-view" "child" "Portfolio" "is?" "if" "image" "set-portfolio" "pf")}
        {Lisp-Entry "get-image-name" () 247 18 ("image" "get-image-name")}
        {Lisp-Entry "set-image-name" () 251 18 ("invalidate-view" "image" "set-image-name" "name")}
        {Lisp-Entry "get-view-position" () 256 18 ("image" "get-view-position")}
        {Lisp-Entry "set-view-position" () 260 18 ("invalidate-view" "image" "set-view-position" "pos")}
        {Lisp-Entry "get-view-size" () 265 18 ("image" "get-view-size")}
        {Lisp-Entry "set-view-size" () 269 18 ("invalidate-view" "image" "set-view-size" "s")}
        {Lisp-Entry "get-mode" () 274 18 ("mode")}
        {Lisp-Entry "set-mode" () 278 18 ("update-image" "image" "set-mode" "md")}
        {Lisp-Entry "set-handle" () 283 18 ("invalidate-view" "image" "set-handle" "handle")}
        {Lisp-Entry "cursor-update" () 293 11 (":arrow" ":finger" "scroller" "if" "set-cursor" "pos")}
        {Lisp-Entry "get-context-menu" () 297 11 ("Image-Menu" "new")}
        {Lisp-Entry "on-change-mode" () 301 11 ("update-image" "get-sender" "get-name" "image" "set-mode" "evt")}
        {Lisp-Entry "update-image" () 306 18 ("invalidate-view" "image" "update-image")}
        {Lisp-Entry "save-session" () 316 11 ("Opened-Windows" "properties" "push-property" "get-size" "size:" "get-position" "position:" "get-moniker" "moniker:" "external-name" "list" "info" "get-host" "host" "let*")}
        {Lisp-Entry "preload-image" () 332 18 ("image" "preload-image")}
        {Lisp-Entry "get-row-instance" () 341 11 ("nextmethod" "else" "String-Row" "new" "image-name" "field-name" "case" "property")}}
      {Lisp-Entry "Image-Menu" () 352 7 ("on-checkin" "checkin" "on-checkout" "Bitmap-Resource" "icon:" "checkout" "stretched" "filled" "tiled" "on-change-mode" ":focus" "Event-Handler" "action-handler:" "title:" "centered" "name:" "Context-Menu")}}})
"Image-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Image-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Image-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Image-Workspace" () 46 7 ("Jazz-Console-Manager" "Properties-Manager" "Search-Results" "Output-Log" "second" "Favorites-Manager" "Image-Browser" "model-name:" "selection" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Image-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 68 11 ("image")}}}})
"Imaging"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "image" "Imaging.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "Imaging" () 37 9 ("jazz")}})
"Import-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Import-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Import-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Import-Entry" () 45 7 ("Java-Entry")
        {Lisp-Entry "present-name" () 48 11 ("qualified" "join")}
        {Lisp-Entry "get-image" () 52 11 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" () 61 11 ("references" "update-index" "key" "dynamic" "function" "for-each" "references-index" "definitions-index")}}}})
"Impulse"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "thread" "Impulse.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.thread.Impulse" () 37 9 ("jazz")
      {Lisp-Entry "Impulse" () 44 7 ("WinKernel" "WinBase" "WinDef" "Synchronizer")
        {Lisp-Entry "create-synchronizer" () 47 11 ("NULL" "CreateEvent" "initially-signaled?" "initially-signaled?:" "false" "manual-reset?" "manual-reset?:")}
        {Lisp-Entry "set-event" () 51 18 ("handle" "SetEvent")}
        {Lisp-Entry "reset-event" () 55 18 ("handle" "ResetEvent")}
        {Lisp-Entry "pulse-event" () 59 18 ("handle" "PulseEvent")}}}})
"Indented-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Indented-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.display.Indented-Column" () 37 9 ("jazz")
      {Lisp-Entry "Indented-Column" () 44 7 ("Display-Column")
        {Lisp-Entry "indentation" () 47 8 ()}
        {Lisp-Entry "use-contouring?" () 48 8 ()}
        {Lisp-Entry "max-data" () 49 8 ("0")}
        {Lisp-Entry "max-width" () 50 8 ("0")}
        {Lisp-Entry "initialize" () 58 11 ("use-contouring?~self" "indentation~self" "set!" "nextmethod" "apply" "others" "false" "use-contouring?" "2" "indentation" "bind-keywords" "rest" "displayer")}
        {Lisp-Entry "get-indentation" () 70 18 ("indentation")}
        {Lisp-Entry "set-indentation" () 74 18 ("indentation" "set!" "value")}
        {Lisp-Entry "get-use-contouring?" () 78 18 ("use-contouring?")}
        {Lisp-Entry "set-use-contouring?" () 82 18 ("use-contouring?" "set!" "value")}
        {Lisp-Entry "put-data" () 91 11 ("data" "cons" "factory" "put" "0" "level")}
        {Lisp-Entry "empty-replacement" () 95 11 ("0" "cons" "previous-data" "previous-column")}
        {Lisp-Entry "prepare-print" () 104 11 ("minimum" "content" "+" "max-width" "max" "max-data" "set!" "indentation" "*" "indent" "length" "either" "let*" "data" "level" "bind" "info" "dynamic" "function" "for-each" "nextmethod")}
        {Lisp-Entry "print-to" () 118 11 ("border-after" "0" "border" "format" "get-use-contouring?" "Indented-Column" "is?" "and" "puc?" "max-width" "max-data" "-" "use-contouring?" "if" "padding" "indentation" "*" "indent" "length" "either" "let*" "data" "level" "bind" "printer" "previous-data" "previous-column" "info")}}}})
"Indented-Column-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Indented-Column-Preferences.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.display.Indented-Column-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Indented-Column-Preferences" () 45 7 ("Bitmap-Resource" "icon:" "Column-Preferences")
        {Lisp-Entry "indentation" () 48 12 ("generate" "accessors" "2")}
        {Lisp-Entry "use-contouring?" () 49 12 ("generate" "accessors" "false")}
        {Lisp-Entry "column-class" () 61 11 ("Indented-Column")}
        {Lisp-Entry "new-column" () 65 11 ("use-contouring?" "use-contouring?:" "indentation" "indentation:" "minimum" "minimum:" "border-after" "border-after:" "border" "border:" "Indented-Column" "new" "display")}
        {Lisp-Entry "get-row-instance" () 74 11 ("nextmethod" "else" "Boolean-Row" "new" "use-contouring?" "field-name" "case" "property")}}}})
"Index-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Index-Tree.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Index-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Index-Tree" () 46 7 ("kind" "location" "toplevel-controls?:" "width:" "title:" "name:" "on-selection-change" ":self" "Event-Handler" "selection-handler:" "can-select-empty?:" "multiple-selection?:" "row" "selection-mode:" ":icons" "portfolio:" "component" "filled-column:" "Details-Tree")
        {Lisp-Entry "selection-changed" () 61 11 ("focus?" "force-parent?" "origin" "old" "component")}
        {Lisp-Entry "on-designer" () 70 11 ("update" ":property-change" ":child-remove" ":child-add" "get-kind" "case" "evt")}
        {Lisp-Entry "update" () 81 11 ("get-presentation" "key:" "collect-components" "" "sort" "false" "insert-component" "component" "for-each" "client" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "rest")}
        {Lisp-Entry "collect-components" () 91 11 ("cons" "set!" "indexable?" "when" "level" "component" "dynamic" "function" "client" "for-each-descendant" "list" "let")}
        {Lisp-Entry "insert-component" () 100 11 ("user-data:" "Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "class-of" "get-class-presentation" "kind" "present-location" "location" "get-component-image" "image" "get-presentation" "title" "let" "recursive?" "father" "component")}}}})
"Indexed-Catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "catalog" "Indexed-Catalog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.catalog.Indexed-Catalog" () 37 9 ("jazz")
      {Lisp-Entry "Indexed-Catalog" () 45 7 ("Filing-Catalog")
        {Lisp-Entry "directories" () 48 8 ()}
        {Lisp-Entry "extensions" () 49 8 ()}
        {Lisp-Entry "recursive?" () 50 8 ()}
        {Lisp-Entry "references?" () 51 8 ()}
        {Lisp-Entry "content" () 52 8 ()}
        {Lisp-Entry "definitions-index" () 53 8 ()}
        {Lisp-Entry "references-index" () 54 8 ()}
        {Lisp-Entry "initialize" () 57 11 ("references-index~self" "definitions-index~self" "equal?" "new-hashtable" "content~self" "references?~self" "recursive?~self" "extensions~self" "directories~self" "set!" "nextmethod" "true" "report?" "report?:" "references?" "active?" "recursive?" "extensions" "directories" "file" "name")}
        {Lisp-Entry "get-directories" () 73 18 ("directories")}
        {Lisp-Entry "get-extensions" () 77 26 ("extensions")}
        {Lisp-Entry "get-recursive?" () 81 18 ("recursive?")}
        {Lisp-Entry "get-references?" () 85 18 ("references?")}
        {Lisp-Entry "get-content" () 89 18 ("content")}
        {Lisp-Entry "get-definitions-index" () 93 18 ("definitions-index")}
        {Lisp-Entry "get-references-index" () 97 18 ("references-index")}
        {Lisp-Entry "get-file-definitions" () 101 18 ("content" "hash-ref" "name")}
        {Lisp-Entry "get-file-entry" () 105 11 ("get-base" "get-file-definitions" "get-file" "pathname=" "definition" "dynamic" "function" "find-if" "file")}
        {Lisp-Entry "get-statistics" () 111 18 ("format-plural" "format" "references-index" "r" "definitions-index" "hashtable-length" "d" "content" "count-file-entries" "f" "let")}
        {Lisp-Entry "count-file-entries" () 121 11 ("length" "increase!" "file-entries" "name" "dynamic" "function" "for-each-hash" "0" "count" "let" "content")}
        {Lisp-Entry "hashtable-info" () 129 11 ("hashtable-length" "format" "hashtable")}
        {Lisp-Entry "get-entry-time" () 134 11 ("get-time" "definition")}
        {Lisp-Entry "update-entry" () 138 11 ("references-index" "definitions-index" "update-indexes" "entry")}
        {Lisp-Entry "add-entry" () 142 11 ("content" "hash-add" "entry" "name")}
        {Lisp-Entry "activate" () 151 11 ("true" "report?:" "load-content")}
        {Lisp-Entry "deactivate" () 155 11 ()}
        {Lisp-Entry "load-content" () 164 18 ("set!" "update-catalog-indexes" "true" "content" "load-hashtable" "user-message" "file" "exists?" "get-active?" "loaded?" "not" "and" "when" "false" "report?" "report?:")}
        {Lisp-Entry "update-catalog-indexes" () 175 11 ("content" "references-index" "definitions-index" "update-indexes" "self" "set-catalog" "file-definition" "for-each" "definitions" "class-name" "dynamic" "function" "for-each-hash" "user-message" "when" "report?")}
        {Lisp-Entry "save" () 191 11 ("false" "set-modified?" "save-content" "name" "user-message" "modified?" "when")}
        {Lisp-Entry "save-content" () 199 11 ("false" "set!" "print-catalog" "definition" "true" "first?" "let" "format" "when" "definitions" "name" "bind" "info" "dynamic" "function" "for-each" "file" "File-Printer" "new" "printer" "with-closed" "car" "key:" "" "sort" "sorted" "content" "gather-keys/values" "all" "let*")}
        {Lisp-Entry "update" () 222 11 ("name" "reset-marks" "sweep" "scan" "processed" "let" "user-message" "when" "set-active?" "true" "report?" "report?:")}
        {Lisp-Entry "update-file" () 235 18 ("sweep" "process-file" "false" "set-marked?" "when" "get-start" "get-row" "user-message" "err" "Parse-Error" "catch" "get-marked?" "and" "marked?" "get-file-entry" "entry" "let*" "true" "set-active?" "file")}
        {Lisp-Entry "reset-marks" () 251 11 ("content" "false" "set-marked?" "file-definition" "for-each" "definitions" "class-name" "dynamic" "function" "for-each-hash")}
        {Lisp-Entry "Zip-Extensions" () 264 14 ()}
        {Lisp-Entry "scan-directories" () 268 11 ("get-list" "for-each" "Directory-Group" "directories" "is?" "if" "recursive?" "recursive?:" "scan-directory" "increase!" "dir" "dynamic" "function" "scandir" "0" "processed" "let*")}
        {Lisp-Entry "Parser-Associations" () 279 14 ("Scheme-Parser" "Python-Parser" "Properties-Parser" "Lua-Parser" "JavaScript-Parser" "Java-Parser" "Jazz-Parser" "CSS-Parser" "Cpp-Parser" "CommonLisp-Parser")}
        {Lisp-Entry "get-parser-class" () 292 11 ("car" "autoload" "when" "ci=" "member?" "extensions" "ext" "dynamic" "function" "test:" "Parser-Associations" "rassoc" "info" "let" "extension")}
        {Lisp-Entry "get-parser" () 301 11 ("references?" "references?:" "self" "new" "when" "get-parser-class" "class" "let" "extension")}
        {Lisp-Entry "scan-file?" () 307 11 ("get-parser-class" "not-null?" "ci=" "test:" "member?" "not" "or" "and" "get-extensions" "extensions" "get-extension" "extension" "let" "file")}
        {Lisp-Entry "scan-file" () 314 11 ("get-parser" "parse" "scan-zip-file" "ci=" "test:" "Zip-Extensions" "member?" "if" "get-extension" "extension" "let" "user-message" "time" "file")}
        {Lisp-Entry "scan-zip-file" () 322 11 ("get-output" "catalog" "Zip-File-Entry" "parse-zipped" "put" "user-message" "get-entry" "entry" "Zipped" "zipped" "let*" "when" "extract-extension" "get-parser" "parser" "size" "filename" "dynamic" "function" "iterate-files" "Unzip-File" "unzip" "with-closed" "List-Factory" "new" "entries" "let" "time" "file")}
        {Lisp-Entry "sweep" () 342 11 ("references-index" "false" "definitions-index" "true" "marked?" "content" "sweep-hashtable")}
        {Lisp-Entry "marked?" () 348 11 ("get-file-definition" "get-marked?" "definition")}
        {Lisp-Entry "sweep-hashtable" () 352 11 ("hash-set!" "true" "set-modified?" "not" "cddr" "set-cdr!" "false" "set-marked?" "set!" "begin" "if" "car" "definition" "not-null?" "while" "cdr" "list" "previous" "let" "when" "definitions" "class-name" "dynamic" "function" "for-each-hash" "reset?" "marked?" "hashtable")}
        {Lisp-Entry "get-definitions" () 378 11 ("canonicalize-name" "definitions-index" "hash-ref" "name")}
        {Lisp-Entry "get-references" () 382 11 ("canonicalize-name" "references-index" "hash-ref" "name")}
        {Lisp-Entry "get-completions" () 386 11 ("references-index" "definitions-index" "hashtable-complete" "either" "name")}
        {Lisp-Entry "canonicalize-name" () 391 29 ("->string" "name")}
        {Lisp-Entry "get-qualified-category" () 397 18 ("get-definitions" "get-qualified" "=" "get-category-package" "package" "Category-Entry" "is?" "and" "definition" "dynamic" "function" "find-if" "butlast" "qualifier" "last" "name" "let" "qualified")}
        {Lisp-Entry "get-category-package" () 408 11 ("get-file-definition" "get-definitions" "Package-Entry" "is?" "dynamic" "function" "find-if" "definition")}
        {Lisp-Entry "hashtable-complete" () 419 11 ("cons" "set!" "compare-n" "when" "value" "name" "dynamic" "function" "for-each-hash" "result" "length" "let" "string" "hashtable")}}}})
"Indexed-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Indexed-Entry.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.catalog.entry.Indexed-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Indexed-Entry" () 46 7 ("Catalog-Entry")
        {Lisp-Entry "name" () 49 8 ()}
        {Lisp-Entry "line" () 50 8 ()}
        {Lisp-Entry "column" () 51 8 ()}
        {Lisp-Entry "definitions" () 52 8 ()}
        {Lisp-Entry "references" () 53 8 ()}
        {Lisp-Entry "construct-literal" () 57 16 ("self" "new" "definitions" "column" "line" "name" "context")}
        {Lisp-Entry "initialize" () 61 11 ("self" "set-parent" "definition" "dynamic" "function" "for-each" "references" "definitions" "column" "line" "name" "set!" "nextmethod" "r" "d" "c" "l" "n")}
        {Lisp-Entry "print" () 73 11 ("name" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "print-catalog" () 79 26 ("print-definitions" "column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "print-definitions" () 88 11 ("definitions" "1" "+" "print-catalog" "definition" "dynamic" "function" "for-each" "printer" "level")}
        {Lisp-Entry "get-file" () 99 11 ("file-definition" "get-file")}
        {Lisp-Entry "get-moniker" () 103 11 ("file-definition" "root-definition" "either" "get-moniker")}
        {Lisp-Entry "get-title" () 107 18 ("name")}
        {Lisp-Entry "get-category-name" () 111 11 ("file-definition" "root-definition" "either" "get-category-name")}
        {Lisp-Entry "get-name" () 115 11 ("name")}
        {Lisp-Entry "get-line" () 119 11 ("line")}
        {Lisp-Entry "get-column" () 123 11 ("column")}
        {Lisp-Entry "get-definitions" () 127 11 ("definitions")}
        {Lisp-Entry "add-definition" () 131 18 ("list" "append!" "definitions" "set!" "definition")}
        {Lisp-Entry "get-references" () 135 18 ("references")}
        {Lisp-Entry "add-reference" () 139 18 ("cons" "set!" "references" "member?" "unless" "reference")}
        {Lisp-Entry "get-catalog" () 144 18 ("file-definition" "get-catalog")}
        {Lisp-Entry "set-root-definition" () 148 11 ("definitions" "set-root-definition" "definition" "dynamic" "function" "for-each" "nextmethod" "def")}
        {Lisp-Entry "set-file-definition" () 155 11 ("definitions" "set-file-definition" "definition" "dynamic" "function" "for-each" "nextmethod" "def")}
        {Lisp-Entry "update-indexes" () 167 11 ("definitions" "update-indexes" "definition" "dynamic" "function" "for-each" "name" "update-index" "references-index" "definitions-index")}
        {Lisp-Entry "update-index" () 174 21 ("self" "hash-add" "not-null?" "when" "key" "index")}
        {Lisp-Entry "present" () 185 11 ("present-name" "format" "references" "get-category-name" "definitions" "case" "mode")}
        {Lisp-Entry "present-name" () 191 11 ("present-noname" "get-name" "either")}
        {Lisp-Entry "present-noname" () 195 29 ()}
        {Lisp-Entry "file-name" () 204 11 ("get-name" "file")}
        {Lisp-Entry "edit" () 208 11 ("selection:" "edit-document" "name" "->string" "length" "+" "Cell" "Range" "new" "column" "line" "essay" "selection" "get-application" "appl" "error" "exists?" "not" "if" "get-moniker" "moniker" "let" "true" "activate-focus?" "activate-focus?:" "workspace" "workspace:")}
        {Lisp-Entry "find-source" () 217 11 ("get-stage" "get-children" "file-name" "=" "get-moniker" "file" "get-guest" "guest" "Host-Frame" "is?" "and" "frame" "dynamic" "function" "find-if" "source-frame-type" "type" "let" "name")}
        {Lisp-Entry "source-frame-type" () 229 29 ()}}}})
"Info-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Info-Row.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.designer.Category.Row" () 37 9 ("jazz")
      {Lisp-Entry "Info-Row" () 40 7 ("Object")}
      {Lisp-Entry "Info-Row" () 44 7 ("Value-Row")
        {Lisp-Entry "get-filter-name" () 52 16 ("infos")}
        {Lisp-Entry "get-filter-rank" () 56 16 ("0")}
        {Lisp-Entry "get-filter-image" () 60 16 ("Bitmap-Resource")}
        {Lisp-Entry "present" () 69 11 ("format" "Locales" "is?" "if" "value")}
        {Lisp-Entry "edit" () 80 11 ()}
        {Lisp-Entry "end-edition" () 84 11 ()}
        {Lisp-Entry "save-edition" () 88 11 ()}
        {Lisp-Entry "select-editor" () 92 11 ()}
        {Lisp-Entry "set-edited-modified?" () 96 11 ("flag")}
        {Lisp-Entry "get-menu-class" () 105 11 ()}}}})
"Info-Style"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Info-Style.fusion"} {Time 128354921600000000L}
    {Lisp-Entry "jazz.ui.text.Info-Style" () 37 9 ("jazz")
      {Lisp-Entry "Info-Style" () 45 7 ("initialize" "what" "highlight" "color" "font" "alignment" "Text-Style")
        {Lisp-Entry "get-width" () 57 11 ()}
        {Lisp-Entry "get-context-width" () 61 11 ("get-width" "info-value" "->string" "font" "text-width" ":printing?" "getf" "if" "context")}
        {Lisp-Entry "propagate?" () 72 11 ("false")}
        {Lisp-Entry "scan" () 81 11 ("default-scan" "proc" "run" "tabs" "end" "start" "h")}
        {Lisp-Entry "wrap" () 90 11 ("get-context-width" "+" "run" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "info-icon" () 100 11 ("time" "date" "count" "no" "Bitmap-Resource" "filename" "what" "case")}
        {Lisp-Entry "info-value" () 109 11 (":print-time" "time" ":print-date" "date" ":page-count" "count" ":page-no" "1" "+" "no" ":filename" "getf" "filename" "what" "case" "context")}
        {Lisp-Entry "draw-style" () 123 11 ("+" "get-application" "get-icons-cache" "draw-image" "info-icon" "icon" "justify-element" "top" "get-width" "width" "let" "info-value" "->string" "nextmethod" ":printing?" "getf" "if" "enabled?" "left" "tab-stops" "line-height" "v" "h" "string" "context" "dc")}}}})
"Informix-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "informix" "Informix-Data-Source.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.informix.Informix-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "Informix-Data-Source" () 46 7 ("Data-Source")
        {Lisp-Entry "dsn" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "external-name" () 53 16 ("informix" "rest")}
        {Lisp-Entry "new-connection" () 62 11 ("self" "JDBC-Connection" "new")}
        {Lisp-Entry "get-connection-string" () 66 11 ("format" "dsn" "when")}
        {Lisp-Entry "present" () 76 11 ("format" "dsn" "when")}
        {Lisp-Entry "get-class-presentation" () 87 16 ()}
        {Lisp-Entry "property-presentation" () 92 16 ("nextmethod" "else" "dsn" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 98 11 ("nextmethod" "else" "true" "nullable?:" "String-Row" "new" "dsn" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 104 11 ("password" "username" "dsn" "class-info")}}}})
"Informix-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "informix" "Informix-Provider.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.informix.Informix-Provider" () 37 9 ("jazz")
      {Lisp-Entry "Informix-Provider" () 45 7 ("Provider")
        {Lisp-Entry "external-name" () 48 11 ("informix")}
        {Lisp-Entry "get-datatype" () 57 11 ("Adox-Datatype")}
        {Lisp-Entry "format-date" () 67 11 ("present-date2" "date")}
        {Lisp-Entry "present" () 76 11 ()}}}})
"Inheritance and Instantiation Trees"
 ({Lisp-File-Entry {File dev "jazz" "dev" "various" "Inheritance and Instantiation Trees.fusion"} {Time 128366319460000000L}})
"Inspector"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "inspector" "Inspector.fusion"} {Time 128367199060000000L}
    {Lisp-Entry "jazz.jazz.inspector.Inspector" () 37 9 ("jazz")
      {Lisp-Entry "Inspector" () 48 7 ("title:" "name" "name:" ":icons" "portfolio:" "row" "selection-mode:" "multiple-selection?:" "value" "filled-column:" "Tree-View")
        {Lisp-Entry "debuggee" () 51 12 ("set-debuggee" "get-debuggee")}
        {Lisp-Entry "client" () 52 12 ("set-client" "get-client")}
        {Lisp-Entry "sort?" () 53 12 ("set-sort?" "get-sort?" "true")}
        {Lisp-Entry "get-debuggee" () 67 18 ("debuggee")}
        {Lisp-Entry "set-debuggee" () 71 18 ("debuggee" "set!" "value")}
        {Lisp-Entry "get-client" () 75 18 ("client")}
        {Lisp-Entry "set-client" () 79 18 ("present-client" "set!" "client" "neq?" "when" "clt")}
        {Lisp-Entry "get-sort?" () 85 18 ("sort?")}
        {Lisp-Entry "set-sort?" () 89 18 ("sort?" "set!" "value")}
        {Lisp-Entry "update-row" () 98 11 ("inspect" "present" "get-process" "get-local-debuggee" "either" "debuggee" "let" "get-user-data" "kind" "address" "bind" "row")}
        {Lisp-Entry "present-client" () 109 11 ("inspect" "root-row" "present" "kind" "data" "bind" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "client")}
        {Lisp-Entry "present" () 118 11 ("cons" "user-data:" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "collapsed" "if" "state" "let" "kind" "more?" "presented" "address" "name" "bind-optionals" "info" "for-each" "dynamic" "function" "with-update-locked" "values" "row")}
        {Lisp-Entry "inspect" () 133 26 ("inspect-value" ":value" "case" "kind" "data")}}}})
"Inspector-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "inspector" "Inspector-View.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.inspector.Inspector-View" () 37 9 ("jazz")
      {Lisp-Entry "Inspector-View" () 48 7 ("value" "width:" "name" "row" "selection-mode:" "inspector" "content" "name:" "flat?:" "hscroll?:" "vscroll?:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "debuggee" () 51 12 ("set-debuggee" "get-debuggee")}
        {Lisp-Entry "client" () 52 12 ("set-client" "get-client")}
        {Lisp-Entry "frame-title" () 72 16 ()}
        {Lisp-Entry "frame-position" () 77 16 ("Point")}
        {Lisp-Entry "frame-size" () 82 16 ("Dimension")}
        {Lisp-Entry "get-debuggee" () 91 18 ("inspector" "locate" "get-debuggee")}
        {Lisp-Entry "set-debuggee" () 95 18 ("inspector" "locate" "set-debuggee" "debuggee")}
        {Lisp-Entry "get-client" () 99 18 ("inspector" "locate" "get-client")}
        {Lisp-Entry "set-client" () 103 18 ("inspector" "locate" "set-client" "update-title" "client")}
        {Lisp-Entry "Max-Title" () 113 14 ()}
        {Lisp-Entry "update-title" () 117 11 ("0" "subseq" "set-title" "Max-Title" "length" "" "if" "car" "format" "title" "let" "client")}}}})
"Instance-Init-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Instance-Init-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.entry.Instance-Init-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Instance-Init-Entry" () 45 7 ("Java-Entry")
        {Lisp-Entry "construct-literal" () 49 16 ("self" "new" "references" "column" "line" "name" "modifiers" "context")}
        {Lisp-Entry "present-name" () 53 11 ()}
        {Lisp-Entry "print-catalog" () 57 11 ("references" "column" "line" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 64 11 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" () 73 11 ("references" "update-index" "key" "dynamic" "function" "for-each" "references-index" "definitions-index")}}}})
"Integer-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Integer-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Integer-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Integer-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "integer?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 62 11 ("->string" "null?" "if" "value")}}}})
"Integer-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Integer-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Integer-Row" () 37 9 ("jazz")
      {Lisp-Entry "Integer-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 53 11 ("->string" "value")}
        {Lisp-Entry "get-edited-value" () 62 11 ("parse-integer" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-string-content" "string" "let")}}}})
"Integrate-ClearCase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "clearcase" "Integrate-ClearCase.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.clearcase.Integrate-ClearCase" () 37 9 ("jazz")
      {Lisp-Entry "Integrate-ClearCase" () 47 7 ("Bitmap-Resource" "image-name:" "tooltip-text:" "build-updater" "blue" "blue-border" "group" "protocol:" "green" "green-border" "title:" "trees" "name:" "Compare-Directories")
        {Lisp-Entry "external-name" () 61 16 ("integrate-clearcase" "rest")}
        {Lisp-Entry "frame-icon" () 71 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 76 16 ()}
        {Lisp-Entry "overwrite-read-only?" () 85 11 ("false")}
        {Lisp-Entry "delete-item" () 89 11 ("item")}
        {Lisp-Entry "Script-Filename" () 99 14 ()}
        {Lisp-Entry "choose-updater" () 103 11 ("extensions:" "Script-Filename" ":initial-filename" "directory:" "SaveFile-Dialog" "get-modal" "installed-configuration" "get-view-directory" "view-directory" "let")}
        {Lisp-Entry "updater-built" () 108 11 ("get-parent" "parse" "get-name" "format" "message-box" "file")}
        {Lisp-Entry "build-updater" () 114 11 ("build-script" "file")}
        {Lisp-Entry "build-script" () 118 11 ("root-entry" "process-entry" "cc-setup-activity" "insert-header" "File-Printer" "new" "printer" "with-closed" "get-activity" "initial-value:" ":prefix" "title:" "request-string" "activity" "get-view-directory" "view-directory" "installed-configuration" "get-view-name" "view-name" "let" "file")}
        {Lisp-Entry "insert-header" () 128 11 ("false" ":seconds?" "local-date" "present" "format" "printer" "activity" "view-name")}
        {Lisp-Entry "process-entry" () 135 11 ("process-children" "error" "cc-add" "set-right" "get-parent" "right-root" "make-item" "new-right" "cc-remove" "cc-checkout" "file?" "or" "if" "get-right" "right" "get-left" "left" "let" "copy-right" "get-action" "case" "printer" "entry")}
        {Lisp-Entry "process-children" () 152 11 ("get-children" "process-entry" "subentry" "dynamic" "function" "for-each" "printer" "entry")}
        {Lisp-Entry "cc-setup-activity" () 163 11 ("format" "printer" "activity")}
        {Lisp-Entry "cc-add" () 169 11 ("get-parent" "parse" "get-name" "format" "printer" "file")}
        {Lisp-Entry "cc-checkout" () 176 11 ("parse" "get-name" "format" "printer" "file")}
        {Lisp-Entry "cc-checkin" () 181 11 ("parse" "get-name" "format" "printer" "file")}
        {Lisp-Entry "cc-remove" () 186 11 ("get-parent" "parse" "get-name" "format" "printer" "file")}}}})
"Integrity-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "integrity" "Integrity-Constraint.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.integrity.Integrity-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "Integrity-Constraint" () 44 7 ("Object")
        {Lisp-Entry "register-constraints" () 52 31 ("manager")}
        {Lisp-Entry "validate" () 61 26 ("manager" "context" "client" "root" "component")}}}})
"Integrity-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "integrity" "Integrity-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.integrity.Integrity-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Integrity-Manager" () 44 7 ("Object")
        {Lisp-Entry "constraints" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("setup-constraints" "nextmethod")}
        {Lisp-Entry "print" () 55 11 ("format-plural" "format-cardinality" "format" "constraints" "length" "entries" "let" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "setup-constraints" () 69 11 ("get-output" "register-constraints" "List-Factory" "new" "constraints" "set!")}
        {Lisp-Entry "register-constraints" () 75 26 ()}
        {Lisp-Entry "register-constraint" () 79 18 ("list" "constraints" "put" "false" "root?" "root?:" "model" "constraint")}
        {Lisp-Entry "validate-integrity" () 88 18 ("validate-all" "clear-violations" "reporter" "reporter:" "context" "context:" "root")}
        {Lisp-Entry "validate-all" () 93 29 ("validate-hierarchy" "reporter" "context" "root")}
        {Lisp-Entry "validate-hierarchy" () 97 29 ("get-children" "validate-hierarchy" "child" "dynamic" "function" "for-each" "stop-descent" "validate" "eq?" "unless" "report-progress" "when" "reporter" "context" "client" "root" "component")}
        {Lisp-Entry "validate" () 106 18 ("constraints" "validate" "branch-installed?" "is?" "null?" "or" "and" "when" "root?" "model" "constraint" "bind" "info" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "stop-descent" "self" "validate-component" "eq?" "if" "validation-context" "new-context" "let" "context" "client" "root" "component")}
        {Lisp-Entry "validation-context" () 121 29 ("context" "root" "component")}
        {Lisp-Entry "report-progress" () 125 29 ("get-name" "user-message" "test-cancelled" "reporter" "root" "component")}
        {Lisp-Entry "add-violation" () 135 26 ("add-violation" "cons" "if" "set-path-presentation" "set-path" "set-branch-presentation" "set-branch" "present-path" "presentation" "path" "receive" "get-presentation" "branch-presentation" "get-name" "essay" "branch-name" "get-active-branch" "branch" "let*" "client" "root" "component" "violation")}
        {Lisp-Entry "clear-violations" () 147 26 ("clear-violations" "root")}}}})
"Integrity-Violation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "integrity" "Integrity-Violation.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.integrity.Integrity-Violation" () 37 9 ("jazz")
      {Lisp-Entry "Integrity-Violation" () 44 7 ("Object")
        {Lisp-Entry "message" () 47 8 ()}
        {Lisp-Entry "branch" () 48 8 ()}
        {Lisp-Entry "branch-presentation" () 49 8 ()}
        {Lisp-Entry "path" () 50 8 ()}
        {Lisp-Entry "path-presentation" () 51 8 ()}
        {Lisp-Entry "property" () 52 8 ()}
        {Lisp-Entry "construct-literal" () 56 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" () 60 11 ("property" "property~self" "path-presentation" "path-presentation~self" "path" "path~self" "branch-presentation" "branch-presentation~self" "branch" "branch~self" "message~self" "set!" "nextmethod" "message" "message:")}
        {Lisp-Entry "print" () 75 11 ("path-presentation" "path" "branch-presentation" "branch" "message" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-branch" () 90 18 ("branch")}
        {Lisp-Entry "set-branch" () 94 18 ("branch" "set!" "value")}
        {Lisp-Entry "get-branch-presentation" () 98 18 ("branch-presentation")}
        {Lisp-Entry "set-branch-presentation" () 102 18 ("branch-presentation" "set!" "value")}
        {Lisp-Entry "get-path" () 106 18 ("path")}
        {Lisp-Entry "set-path" () 110 18 ("path" "set!" "value")}
        {Lisp-Entry "get-path-presentation" () 114 18 ("path-presentation")}
        {Lisp-Entry "set-path-presentation" () 118 18 ("path-presentation" "set!" "value")}
        {Lisp-Entry "get-property" () 122 18 ("property")}
        {Lisp-Entry "set-property" () 126 18 ("property" "set!" "value")}
        {Lisp-Entry "get-message" () 135 26 ("message")}
        {Lisp-Entry "get-image" () 144 26 ("Bitmap-Resource")}
        {Lisp-Entry "present-message" () 148 26 ("get-message")}
        {Lisp-Entry "present-location" () 152 26 ("join" "path" "get-path" "path-presentation" "either" "location" "let")}}}})
"Interface-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Interface-Declaration.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.language.declaration.Interface-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Interface-Declaration" () 40 7 ("Category-Declaration")
        {Lisp-Entry "ascendants" () 43 8 ("generate")}}}})
"Interface-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Interface-Doc.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.doc.doc.Interface-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Interface-Doc" () 45 7 ("Category-Doc")
        {Lisp-Entry "construct-literal" () 48 16 (":definitions" ":doc" ":extends" "name:" "self" "new" "definitions" "doc" "extends" "name" "context")}
        {Lisp-Entry "get-class-image" () 58 16 ("Bitmap-Resource")}}}})
"Interface-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Interface-Entry.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.catalog.entry.Interface-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Interface-Entry" () 45 7 ("Category-Entry")
        {Lisp-Entry "construct-literal" () 49 16 ("self" "new" "definitions" "column" "line" "extends" "name" "modifiers" "context")}
        {Lisp-Entry "print-catalog" () 53 11 ("definitions" "1" "+" "print-catalog" "definition" "dynamic" "function" "for-each" "column" "line" "extends" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 64 11 ("Bitmap-Resource")}
        {Lisp-Entry "insert-ascendants" () 73 11 ("extends" "insert-interfaces-list" "father" "tree")}}}})
"Interface-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Interface-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Interface-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Interface-Preferences" () 46 7 ("print" "tree" "name:" "title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 60 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 64 11 ("false")}
        {Lisp-Entry "can-move-component?" () 68 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 72 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 76 11 ()}}}})
"Internet-Connection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "Internet-Connection.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.internet.Internet-Connection" () 37 9 ("jazz")
      {Lisp-Entry "Internet-Connection" () 44 7 ("WinInet" "WinBase" "WinDef" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "handle" "set!" "error" "not" "if" "open-connection" "hnd" "let" "nextmethod" "password" "password:" "username" "username:" "default-port" "port" "port:" "server" "session")}
        {Lisp-Entry "default-port" () 59 29 ()}
        {Lisp-Entry "open-connection" () 63 29 ("port" "server" "session")}
        {Lisp-Entry "destroy" () 67 11 ("nextmethod" "handle" "InternetCloseHandle")}
        {Lisp-Entry "get-handle" () 72 18 ("handle")}}}})
"Internet-Session"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "Internet-Session.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.internet.Internet-Session" () 37 9 ("jazz")
      {Lisp-Entry "Internet-Session" () 44 7 ("WinInet" "WinBase" "WinDef" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "handle" "set!" "error" "not" "if" "0" "NULL" "INTERNET_OPEN_TYPE_PRECONFIG" "InternetOpen" "hnd" "let" "nextmethod")}
        {Lisp-Entry "destroy" () 59 11 ("nextmethod" "handle" "InternetCloseHandle")}
        {Lisp-Entry "get-handle" () 64 18 ("handle")}}}})
"Inventory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory" () 37 9 ("jazz")
      {Lisp-Entry "Inventory" () 45 7 ("Object")
        {Lisp-Entry "connection" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "connection" "set!" "nextmethod" "conn")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "connection" "close")}
        {Lisp-Entry "get-version" () 67 26 ()}
        {Lisp-Entry "type-connection-string" () 76 26 ()}
        {Lisp-Entry "get-connection" () 85 18 ("connection")}
        {Lisp-Entry "get-tables" () 94 26 ()}
        {Lisp-Entry "get-table" () 98 26 ("name")}
        {Lisp-Entry "create-table" () 102 26 ("name")}
        {Lisp-Entry "append-table" () 106 26 ("table")}
        {Lisp-Entry "remove-table" () 110 26 ("name")}
        {Lisp-Entry "columns-ordinal-position-consecutive?" () 114 26 ("true")}
        {Lisp-Entry "column-supports-property?" () 118 26 ("true" "property" "object")}
        {Lisp-Entry "create-or-modify-view" () 127 26 ("append-view" "set-text" "create-view" "new-view" "remove-view" "when" "false" "error?:" "get-view" "view" "with-closed" "text" "name")}
        {Lisp-Entry "get-views" () 136 26 ()}
        {Lisp-Entry "get-view" () 140 26 ("rest" "name")}
        {Lisp-Entry "create-view" () 144 26 ("name")}
        {Lisp-Entry "append-view" () 148 26 ("view")}
        {Lisp-Entry "remove-view" () 152 26 ("name")}
        {Lisp-Entry "get-relations" () 161 26 ()}
        {Lisp-Entry "get-relation" () 165 26 ("name")}
        {Lisp-Entry "create-relation" () 169 26 ("name")}
        {Lisp-Entry "create-relation-complete" () 173 26 ("foreign-fields" "foreign-table" "primary-fields" "primary-table" "name")}
        {Lisp-Entry "append-relation" () 177 26 ("new-relation")}
        {Lisp-Entry "remove-relation" () 181 26 ("relation-name")}
        {Lisp-Entry "create-or-modify-procedure" () 190 26 ("append-procedure" "set-text" "create-procedure" "new-procedure" "remove-procedure" "when" "false" "error?:" "get-procedure" "procedure" "with-closed" "text" "name")}
        {Lisp-Entry "get-procedures" () 199 26 ()}
        {Lisp-Entry "get-procedure" () 203 26 ("rest" "name")}
        {Lisp-Entry "create-procedure" () 207 26 ("name")}
        {Lisp-Entry "append-procedure" () 211 26 ("procedure")}
        {Lisp-Entry "remove-procedure" () 215 26 ("name")}
        {Lisp-Entry "create-or-modify-trigger" () 224 26 ("create-or-modify-trigger" "get-table" "table" "let" "text" "trigger-name" "table-name")}
        {Lisp-Entry "create-or-modify-constraint" () 229 26 ("create-or-modify-constraint" "get-table" "table" "let" "exclude-replication?" "checked?" "text" "constraint-name" "table-name")}}}})
"Inventory-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "inventory" "Inventory-Browser.fusion"} {Time 128363203480000000L}
    {Lisp-Entry "jazz.sql.inventory.Inventory-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Browser" () 48 7 ("Layout-View")}
      {Lisp-Entry "Inventory-Browser" () 54 7 ("width:" "title:" "on-context-menu" "context-menu-handler:" "on-selection-change" "selection-handler:" "show-header?:" "Axis" "sons-class:" "inventory" "shown?:" "header" "content" "flat?:" "hscroll?:" "vscroll?:" "scroller" "on-refresh" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "Dimension" "size:" "refresh" "tools" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "connection" () 57 12 ("set-connection" "get-connection")}
        {Lisp-Entry "external-name" () 73 16 ("inventory-browser" "rest")}
        {Lisp-Entry "palette-class" () 83 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 88 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 93 16 ()}
        {Lisp-Entry "get-tools-view" () 102 11 ("tools" "locate")}
        {Lisp-Entry "get-connection" () 111 18 ("connection")}
        {Lisp-Entry "set-connection" () 115 18 ("get-inventory" "essay" "inventory" "locate" "insert-inventory" "set!" "connection" "neq?" "when" "value")}
        {Lisp-Entry "on-refresh" () 126 11 ("describe-item" "clear-output" "null?" "if" "get-row" "get-user-data" "when" "item" "get-single-selection" "selection" "let*" "rank" ":use" "set-expand-state" "get-inventory" "connection" "essay" "insert-inventory" "get-expand-state" "state" "dynamic" "function" "with-preserved-selection" "inventory" "locate" "inventory-tree" "let")}
        {Lisp-Entry "on-selection-change" () 141 11 ("get-row" "get-user-data" "describe-item" "clear-output" "null?" "if" "get-single-selection" "selection" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-context-menu" () 149 11 ("track-popup-menu" "else" "Relations-Menu" "relations" "Procedures-Menu" "procedures" "Views-Menu" "views" "new-tables-menu" "tables" "=" "cond" "car" "section" "Pair" "Relation-Menu" "Inventory-Relation" "Procedure-Menu" "Inventory-Procedure" "View-Menu" "Inventory-View" "Constraint-Menu" "Inventory-Constraint" "Trigger-Menu" "Inventory-Trigger" "Index-Menu" "Inventory-Index" "Column-Menu" "new" "Inventory-Column" "new-table-menu" "Inventory-Table" "typecase" "menu" "when" "selected-element" "element" "dynamic" "function" "with-context-click" "get-position" "pos" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "new-tables-menu" () 177 11 ("layout-menu" "SQLServer-Data-Source" "add-table-by-script" "Access-Data-Source" "connection" "get-data-source" "is?" "add-linked-table" "locate" "set-visible?" "Tables-Menu" "new" "menu" "let")}
        {Lisp-Entry "new-table-menu" () 185 11 ("layout-menu" "modify-owner" "modify-validation-text" "modify-validation-rule" "modify-description" "locate" "set-visible?" "SQLServer-Data-Source" "sqlserver?" "Access-Data-Source" "connection" "get-data-source" "is?" "access?" "Table-Menu" "new" "menu" "let")}
        {Lisp-Entry "add-table" () 197 11 ("append-table" "append-column" "get-name" "Datatype" "new" "set-datatype" "parse-integer" "get-sizeable?" "when" "initial-value:" "find-systype" "set!" "null?" "while" "size" "systype" "get-data-source" "get-provider" "get-datatype" "datatype" "create-column" "column" "create-table" "table" "connection" "get-inventory" "database" "title:" "request-string" "table-name" "let*")}
        {Lisp-Entry "add-table-by-script" () 214 11 ("true" ":reload-inventory?" "get-name" "Datatype" "new" "list" "generate-sql-create-table" "generate-sql-header-script" "dynamic" "function" "execute-sql-commit-preserve" "parse-integer" "get-sizeable?" "when" "initial-value:" "find-systype" "set!" "null?" "while" "size" "systype" "connection" "get-data-source" "get-provider" "get-datatype" "datatype" "column-name" "title:" "request-string" "table-name" "let")}
        {Lisp-Entry "add-linked-table" () 233 11 ("append-table" "set-source-table-name" "set-connect" "source-table-name" "connect" "create-table" "table" "connection" "get-inventory" "database" "title:" "request-string" "table-name" "let*")}
        {Lisp-Entry "remove-table" () 244 11 ("remove-table" "get-parent" "database" "get-title" "table-name" "selected-element" "element" "selected-row" "row" "let*")}
        {Lisp-Entry "add-column" () 252 11 ("append-column" "parse-boolean" "set-nullable?" "get-name" "new" "set-datatype" "parse-integer" "get-sizeable?" "when" "initial-value:" "find-systype" "set!" "null?" "while" "size" "systype" "title:" "request-string" "create-column" "column" "connection" "get-data-source" "get-provider" "get-datatype" "datatype" "selected-element" "table" "selected-row" "row" "let*")}
        {Lisp-Entry "insert-column" () 268 11 ("append-column" "parse-boolean" "set-nullable?" "get-name" "new" "set-datatype" "parse-integer" "get-sizeable?" "when" "initial-value:" "find-systype" "set!" "null?" "while" "size" "systype" "title:" "request-string" "create-column" "column" "connection" "get-data-source" "get-provider" "get-datatype" "datatype" "selected-element" "table" "selected-row" "row" "let*")}
        {Lisp-Entry "remove-column" () 284 11 ("remove-column" "get-parent" "table" "get-title" "column-name" "selected-element" "element" "let*")}
        {Lisp-Entry "add-index" () 291 11 ("append-index" "set-fields/orders" "read-delimited-string" "fields/orders" "title:" "request-string" "create-index" "index" "selected-element" "table" "let*")}
        {Lisp-Entry "remove-index" () 299 11 ("remove-index" "get-parent" "table" "get-title" "index-name" "selected-element" "element" "let*")}
        {Lisp-Entry "add-trigger" () 306 11 ("append-trigger" "set-text" "text" "title:" "request-string" "create-trigger" "trigger" "selected-element" "table" "let*")}
        {Lisp-Entry "remove-trigger" () 314 11 ("remove-trigger" "get-parent" "table" "get-title" "trigger-name" "selected-element" "element" "let*")}
        {Lisp-Entry "add-view" () 321 11 ()}
        {Lisp-Entry "remove-view" () 325 11 ("remove-view" "get-parent" "database" "get-title" "view-name" "selected-element" "element" "selected-row" "row" "let*")}
        {Lisp-Entry "add-procedure" () 333 11 ("append-procedure" "set-text" "text" "create-procedure" "procedure" "connection" "get-inventory" "database" "title:" "request-string" "procedure-name" "let*")}
        {Lisp-Entry "remove-procedure" () 342 11 ("remove-procedure" "get-parent" "database" "get-title" "procedure-name" "selected-element" "element" "selected-row" "row" "let*")}
        {Lisp-Entry "add-relation" () 350 11 ()}
        {Lisp-Entry "remove-relation" () 354 11 ("remove-relation" "get-parent" "database" "get-title" "relation-name" "selected-element" "element" "selected-row" "row" "let*")}
        {Lisp-Entry "insert-inventory" () 367 11 ("insert-procedures" "insert-relations" "insert-views" "insert-tables" "get-relations" "relations" "get-procedures" "procedures" "get-views" "views" "get-tables" "tables" "let" "when" "remove-every-row" "inventory" "tree")}
        {Lisp-Entry "insert-tables" () 380 11 ("cons" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "dynamic" "state:" "add-row" "tables" "tree")}
        {Lisp-Entry "update-tables" () 384 11 ("key:" "ci<" "sort" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "father:" "add-row" "get-title" "title" "let" "table" "dynamic" "function" "for-each" "tables" "row" "tree")}
        {Lisp-Entry "update-table" () 391 11 ("insert-constraints" "insert-triggers" "insert-indexes" "insert-columns" "insert-primary-key" "table" "row" "tree")}
        {Lisp-Entry "insert-constraints" () 399 10 ("user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "collapsed" "state:" "father:" "add-row" "get-title" "title" "constraint" "dynamic" "function" "for-each" "get-constraints" "constraints" "let" "SQLServer-Inventory-Table" "is?" "when" "table" "row" "tree")}
        {Lisp-Entry "insert-primary-key" () 408 11 ("user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "collapsed" "state:" "father:" "add-row" "get-title" "title" "when" "get-primary-key" "primary-key" "let" "table" "row" "tree")}
        {Lisp-Entry "insert-columns" () 415 11 ("user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "collapsed" "state:" "father:" "add-row" "get-title" "title" "column" "dynamic" "function" "for-each" "get-columns" "columns" "let" "table" "row" "tree")}
        {Lisp-Entry "insert-indexes" () 423 11 ("user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "collapsed" "state:" "father:" "add-row" "get-title" "title" "index" "dynamic" "function" "for-each" "get-indexes" "indexes" "let" "table" "row" "tree")}
        {Lisp-Entry "insert-triggers" () 431 11 ("user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "collapsed" "state:" "father:" "add-row" "get-title" "title" "trigger" "dynamic" "function" "for-each" "get-triggers" "triggers" "let" "table" "row" "tree")}
        {Lisp-Entry "insert-views" () 439 11 ("cons" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "dynamic" "state:" "add-row" "views" "tree")}
        {Lisp-Entry "update-views" () 443 11 ("key:" "ci<" "sort" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "get-title" "title" "let" "view" "dynamic" "function" "for-each" "views" "row" "tree")}
        {Lisp-Entry "insert-relations" () 450 11 ("cons" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "dynamic" "state:" "add-row" "relations" "tree")}
        {Lisp-Entry "update-relations" () 454 11 ("key:" "ci<" "sort" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "get-title" "title" "let" "relation" "dynamic" "function" "for-each" "relations" "row" "tree")}
        {Lisp-Entry "insert-procedures" () 461 11 ("cons" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "dynamic" "state:" "add-row" "procedures" "tree")}
        {Lisp-Entry "update-procedures" () 465 11 ("key:" "ci<" "sort" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "get-title" "title" "let" "procedure" "dynamic" "function" "for-each" "procedures" "row" "tree")}
        {Lisp-Entry "update-info-row" () 472 11 ("update-table" "Inventory-Table" "typecase" "update-procedures" "procedures" "update-relations" "relations" "update-views" "views" "update-tables" "tables" "case" "elements" "what" "bind" "pair?" "if" "get-user-data" "info" "get-parent" "tree" "let" "row")}
        {Lisp-Entry "modify-table-description" () 491 11 ("set-description" "title:" "request-string" "value" "selected-element" "table" "let")}
        {Lisp-Entry "remove-table-description" () 497 11 ("set-description" "selected-element" "table" "let")}
        {Lisp-Entry "modify-table-validation-rule" () 502 11 ("set-validation-rule" "title:" "request-string" "value" "selected-element" "table" "let")}
        {Lisp-Entry "modify-table-validation-text" () 508 11 ("set-validation-text" "title:" "request-string" "value" "selected-element" "table" "let")}
        {Lisp-Entry "modify-table-text-file-group" () 514 11 ("set-text-file-group" "title:" "request-string" "value" "selected-element" "table" "let")}
        {Lisp-Entry "modify-table-file-group" () 520 11 ("set-file-group" "title:" "request-string" "value" "selected-element" "table" "let")}
        {Lisp-Entry "modify-table-owner" () 526 11 ("set-owner" "title:" "request-string" "value" "selected-element" "table" "let")}
        {Lisp-Entry "modify-datatype" () 537 11 ("true" "set-nullable?" "get-name" "new" "set-datatype" "parse-integer" "get-sizeable?" "when" "initial-value:" "title:" "request-string" "find-systype" "set!" "null?" "while" "size" "systype" "Access-Datatype" "datatype" "selected-element" "column" "let")}
        {Lisp-Entry "modify-nullable?" () 550 11 ("set-nullable?" "initial-value:" "title:" "request-string" "parse-boolean" "value" "selected-element" "column" "let")}
        {Lisp-Entry "modify-column-description" () 556 11 ("set-description" "title:" "request-string" "description" "selected-element" "column" "let")}
        {Lisp-Entry "remove-column-description" () 562 11 ("set-description" "selected-element" "column" "let")}
        {Lisp-Entry "modify-default-value" () 567 11 ("set-default-value" "set!" "=" "ci=" "or" "when" "title:" "request-string" "value" "selected-element" "column" "let")}
        {Lisp-Entry "modify-column-validation-rule" () 576 11 ("set-validation-rule" "title:" "request-string" "value" "selected-element" "column" "let")}
        {Lisp-Entry "modify-column-validation-text" () 582 11 ("set-validation-text" "title:" "request-string" "value" "selected-element" "column" "let")}
        {Lisp-Entry "modify-ordinal-position" () 588 11 ("set-ordinal-position" "title:" "request-string" "parse-integer" "value" "selected-element" "column" "let")}
        {Lisp-Entry "remove-display-format" () 594 11 ("set-display-format" "selected-element" "column" "let")}
        {Lisp-Entry "modify-display-format" () 599 11 ("set-display-format" "request-string" "value" "selected-element" "column" "let")}
        {Lisp-Entry "modify-auto-increment?" () 605 11 ("set-auto-increment?" "initial-value:" "title:" "request-string" "parse-boolean" "value" "selected-element" "column" "let")}
        {Lisp-Entry "modify-fields/orders" () 616 11 ()}
        {Lisp-Entry "modify-primary?" () 620 11 ()}
        {Lisp-Entry "modify-index-unique?" () 624 11 ()}
        {Lisp-Entry "modify-foreign-columns" () 633 11 ()}
        {Lisp-Entry "modify-foreign-table" () 637 11 ()}
        {Lisp-Entry "modify-primary-columns" () 641 11 ()}
        {Lisp-Entry "modify-primary-table" () 645 11 ()}
        {Lisp-Entry "modify-right?" () 649 11 ()}
        {Lisp-Entry "modify-left?" () 653 11 ()}
        {Lisp-Entry "modify-relation-unique?" () 657 11 ()}
        {Lisp-Entry "modify-delete-cascade?" () 661 11 ()}
        {Lisp-Entry "modify-update-cascade?" () 665 11 ()}
        {Lisp-Entry "modify-procedure-text" () 674 11 ()}
        {Lisp-Entry "modify-view-text" () 683 11 ()}
        {Lisp-Entry "modify-trigger-text" () 692 11 ()}
        {Lisp-Entry "generate-sql-header-script" () 701 11 ("tie")}
        {Lisp-Entry "generate-sql-create-table" () 712 11 ("def-table" "tie" "nullable-string" "second" "get-native" "datatype" "first" "field-name" ":ordinal-position" "get-property" "third" "either" "dynamic" "function" "key:" "object" "get-columns" "" "sort" "create-fields-list" "join" "fields-list" "partition" "user" "let*" "column" "table-name")}
        {Lisp-Entry "execute-sql-commit-preserve" () 729 11 ("reload-inventory" "when" "connection" "execute" "tie" "script" "instructions" "let*" "false" "reload-inventory?" "reload-inventory?:" "proc")}
        {Lisp-Entry "identity-string" () 739 11 ()}
        {Lisp-Entry "create-fields-list" () 743 11 ("0" ">=" "when" "tie" ":identity-replication" "id-repl" ":identity-increment" "id-inc" ":identity-seed" "id-seed" ":identity?" "identity-string" "nullable?:" "if" "nullable-string" ":ordinal-position" "get-property" "ordinal-position" "get-datatype" "third" "get-native" "datatype" "get-name" "field-name" "let" "field" "dynamic" "function" "map" "list")}
        {Lisp-Entry "describe-item" () 769 11 ("clear-output" "else" "describe-relation" "Inventory-Relation" "describe-index" "Inventory-Index" "describe-column" "Inventory-Column" "describe-primary-key" "Inventory-Primary-Key" "describe-constraint" "output-table" "Inventory-Constraint" "describe-table-properties" "describe-table" "list" "output-tables" "Inventory-Table" "typecase" "when" "item")}
        {Lisp-Entry "describe-table-properties" () 781 11 ("Access-Inventory-Table" "Data-Row" "append-row" "SQLServer-Inventory-Table" "is?" "when" "get-validation-text" "validation-text" "get-validation-rule" "validation-rule" "get-description" "description" "get-owner" "owner" "get-file-group" "file-group" "get-text-file-group" "text-file-group" "get-title" "title" "list" ":columns" "Data-Table" "output" "c2" "5" "Datatype" ":datatype" "name:" "Data-Column" "new" "c1" "let*" "table")}
        {Lisp-Entry "describe-table" () 802 11 ("Data-Row" "append-row" "get-validation-text" "validation-text" "get-validation-rule" "validation-rule" "get-default-value-name" "default-value-name" "get-default-value" "default-value" "get-description" "description" "get-collation" "collation" "get-computed-text" "computed-text" "get-computed?" "computed?" "get-row-guid-col?" "row-guid-col?" "get-identity-increment" "identity-increment" "get-identity-seed" "identity-seed" "get-identity-replication?" "identity-replication?" "get-identity?" "either" "identity?" "get-fixed?" "fixed?" "get-nullable?" "nullable?" "get-size" "length" "get-datatype" "present" "datatype" "get-title" "title" "let" "column" "dynamic" "function" "for-each" "get-columns" "columns" "with-closed" "list" "remove-nils" ":columns" "Data-Table" "output" "c18" "Access-Inventory-Table" "c17" "c16" "c15" "c14" "c13" "c12" "c11" "c10" "c9" "c8" "c7" "SQLServer-Inventory-Table" "is?" "when" "c6" "c5" "c4" "1" "c3" "c2" "3" "Datatype" ":datatype" "name:" "Data-Column" "new" "c1" "let*" "table")}
        {Lisp-Entry "describe-constraint" () 847 11 ("Data-Row" "append-row" "get-exclude-replication?" "exclude-replication?" "get-checked?" "checked?" "get-text" "text" "get-title" "title" "list" ":columns" "Data-Table" "output" "c2" "5" "Datatype" ":datatype" "name:" "Data-Column" "new" "c1" "let*" "constraint")}
        {Lisp-Entry "describe-primary-key" () 862 11 ("Data-Row" "append-row" "get-fill-factor" "fill-factor" "get-clustered?" "clustered?" "descending" "ascending" "case" "format" "order" "field" "bind" "field/order" "dynamic" "function" "map" "fields/orders-list" "get-fields/orders" "fields/orders" "get-title" "title" "list" ":columns" "Data-Table" "output" "c2" "5" "Datatype" ":datatype" "name:" "Data-Column" "new" "c1" "let*" "primary-key")}
        {Lisp-Entry "describe-column" () 881 11 ("Access-Inventory-Column" "SQLServer-Inventory-Column" "is?" "when" "Data-Row" "append-row" "get-auto-increment?" "auto-increment?" "get-display-format" "display-format" "get-ordinal-position" "ordinal-position" "get-validation-text" "validation-text" "get-validation-rule" "validation-rule" "get-default-value-name" "default-value-name" "get-default-value" "default-value" "get-description" "description" "get-collation" "collation" "get-computed-text" "computed-text" "get-computed?" "computed?" "get-row-guid-col?" "row-guid-col?" "get-identity-increment" "identity-increment" "get-identity-seed" "identity-seed" "get-identity-replication?" "identity-replication?" "get-identity?" "identity?" "get-fixed?" "fixed?" "get-nullable?" "nullable?" "get-size" "length" "get-datatype" "present" "datatype" "get-title" "title" "list" ":columns" "Data-Table" "output" "c2" "5" "Datatype" ":datatype" "name:" "Data-Column" "new" "c1" "let*" "column")}
        {Lisp-Entry "describe-index" () 929 11 ("Access-Inventory-Index" "SQLServer-Inventory-Index" "is?" "when" "Data-Row" "append-row" "descending" "ascending" "case" "format" "get-order" "order" "let" "field" "dynamic" "function" "map" "fields-list" "get-fields" "fields" "get-ignore-nulls?" "ignore-nulls?" "get-required?" "required?" "get-recompute-statistics?" "recompute-statistics?" "get-pad-index?" "pad-index?" "get-fill-factor" "fill-factor" "get-clustered?" "clustered?" "get-unique?" "unique?" "get-ignore-duplicates?" "ignore-duplicates?" "get-title" "title" "list" ":columns" "Data-Table" "output" "c2" "5" "Datatype" ":datatype" "name:" "Data-Column" "new" "c1" "let*" "index")}
        {Lisp-Entry "describe-relation" () 960 11 ("SQLServer-Inventory-Relation" "Access-Inventory-Relation" "is?" "when" "format" "Data-Row" "append-row" "get-delete-cascade?" "delete-cascade?" "get-update-cascade?" "update-cascade?" "get-exclude-replication?" "exclude-replication?" "get-checked?" "checked?" "describe-relation-attributes" "attributes-list" "get-foreign-field-names" "foreign-field-names" "get-foreign-table" "foreign-table" "get-primary-field-names" "primary-field-names" "get-primary-table" "primary-table" "get-title" "title" "list" ":columns" "Data-Table" "output" "c2" "5" "Datatype" ":datatype" "name:" "Data-Column" "new" "c1" "let*" "relation")}
        {Lisp-Entry "describe-relation-attributes" () 987 11 ("get-right?" "get-left?" "get-delete-cascade?" "get-update-cascade?" "get-inherited?" "get-dont-enforce?" "get-unique?" "cons" "list" "car" "collect-if" "cdr" "map" "relation")}
        {Lisp-Entry "output-table" () 1002 11 ("list" "output-tables" "get-sql-console-text" "text" "let" "table")}
        {Lisp-Entry "output-tables" () 1007 11 ("output-tables" "get-sql-console-text" "text" "let" "tables")}
        {Lisp-Entry "clear-output" () 1012 11 ("clear-output" "get-sql-console-text" "text" "let")}
        {Lisp-Entry "describe-connection-table" () 1022 18 ("get-table" "describe-table" "true" "read-only?:" "get-inventory" "inventory" "let" "name" "connection")}
        {Lisp-Entry "selected-row" () 1032 11 ("get-row" "when" "get-single-selection" "selection" "inventory" "locate" "tree" "let*")}
        {Lisp-Entry "selected-element" () 1039 11 ("get-user-data" "when" "selected-row" "row" "inventory" "locate" "tree" "let")}}
      {Lisp-Entry "Tables-Menu" () 1051 7 ("on-add-linked-table" "add-linked-table" "on-add-table-by-script" "add-table-by-script" "on-add-table" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "add-table" "name:" "Context-Menu")
        {Lisp-Entry "on-add-table" () 1061 11 ("add-table" "evt")}
        {Lisp-Entry "on-add-table-by-script" () 1065 11 ("add-table-by-script" "evt")}
        {Lisp-Entry "on-add-linked-table" () 1069 11 ("add-linked-table" "evt")}}
      {Lisp-Entry "Table-Menu" () 1078 7 ("on-modify-owner" "modify-owner" "on-modify-validation-text" "modify-validation-text" "on-modify-validation-rule" "modify-validation-rule" "on-modify-description" "modify-description" "on-remove-description" "delete-description" "on-add-trigger" "add-trigger" "on-add-index" "add-index" "on-add-column" "add-column" "on-remove-table" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "remove-table" "name:" "Context-Menu")
        {Lisp-Entry "on-remove-table" () 1097 11 ("remove-table" "evt")}
        {Lisp-Entry "on-add-column" () 1101 11 ("add-column" "evt")}
        {Lisp-Entry "on-add-index" () 1105 11 ("add-index" "evt")}
        {Lisp-Entry "on-add-trigger" () 1109 11 ("add-trigger" "evt")}
        {Lisp-Entry "on-remove-description" () 1113 11 ("remove-table-description" "evt")}
        {Lisp-Entry "on-modify-description" () 1117 11 ("modify-table-description" "evt")}
        {Lisp-Entry "on-modify-validation-rule" () 1121 11 ("modify-table-validation-rule" "evt")}
        {Lisp-Entry "on-modify-validation-text" () 1125 11 ("modify-table-validation-text" "evt")}
        {Lisp-Entry "on-modify-owner" () 1129 11 ("modify-table-owner" "evt")}}
      {Lisp-Entry "Column-Menu" () 1138 7 ("on-modify-auto-increment?" "modify-auto-increment?" "on-modify-display-format" "modify-display-format" "on-modify-ordinal-position" "modify-ordinal-position" "on-modify-validation-text" "modify-validation-text" "on-modify-validation-rule" "modify-validation-rule" "on-modify-default-value" "modify-default-value" "on-modify-description" "modify-description" "on-modify-nullable?" "modify-nullable?" "on-modify-datatype" "modify-datatype" "on-remove-display-format" "remove-display-format" "on-remove-description" "remove-description" "on-insert-column" "insert-column" "on-remove-column" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "remove-column" "name:" "Context-Menu")
        {Lisp-Entry "on-remove-column" () 1161 11 ("remove-column" "evt")}
        {Lisp-Entry "on-insert-column" () 1165 11 ("insert-column" "evt")}
        {Lisp-Entry "on-remove-description" () 1169 11 ("remove-column-description" "evt")}
        {Lisp-Entry "on-remove-display-format" () 1173 11 ("remove-display-format" "evt")}
        {Lisp-Entry "on-modify-datatype" () 1177 11 ("modify-datatype" "evt")}
        {Lisp-Entry "on-modify-nullable?" () 1181 11 ("modify-nullable?" "evt")}
        {Lisp-Entry "on-modify-description" () 1185 11 ("modify-column-description" "evt")}
        {Lisp-Entry "on-modify-default-value" () 1189 11 ("modify-default-value" "evt")}
        {Lisp-Entry "on-modify-validation-rule" () 1193 11 ("modify-column-validation-rule" "evt")}
        {Lisp-Entry "on-modify-validation-text" () 1197 11 ("modify-column-validation-text" "evt")}
        {Lisp-Entry "on-modify-ordinal-position" () 1201 11 ("modify-ordinal-position" "evt")}
        {Lisp-Entry "on-modify-display-format" () 1205 11 ("modify-display-format" "evt")}
        {Lisp-Entry "on-modify-auto-increment?" () 1209 11 ("modify-auto-increment?" "evt")}}
      {Lisp-Entry "Index-Menu" () 1218 7 ("on-modify-unique?" "modify-unique?" "on-modify-primary?" "modify-primary?" "on-modify-fields/orders" "modify-fields/orders" "on-remove-index" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "remove-index" "name:" "Context-Menu")
        {Lisp-Entry "on-remove-index" () 1230 11 ("remove-index" "evt")}
        {Lisp-Entry "on-modify-fields/orders" () 1234 11 ("modify-fields/orders")}
        {Lisp-Entry "on-modify-primary?" () 1238 11 ("modify-primary?")}
        {Lisp-Entry "on-modify-unique?" () 1242 11 ("modify-index-unique?")}}
      {Lisp-Entry "Trigger-Menu" () 1251 7 ("on-modify-text" "modify-text" "on-remove-trigger" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "remove-trigger" "name:" "Context-Menu")
        {Lisp-Entry "on-remove-trigger" () 1261 11 ("remove-trigger" "evt")}
        {Lisp-Entry "on-modify-text" () 1265 11 ("modify-trigger-text")}}
      {Lisp-Entry "Views-Menu" () 1274 7 ("on-add-view" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "add-view" "name:" "Context-Menu")
        {Lisp-Entry "on-add-view" () 1282 11 ("add-view" "evt")}}
      {Lisp-Entry "View-Menu" () 1291 7 ("on-modify-text" "modify-text" "on-remove-view" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "remove-view" "name:" "Context-Menu")
        {Lisp-Entry "on-remove-view" () 1301 11 ("remove-view" "evt")}
        {Lisp-Entry "on-modify-text" () 1305 11 ("modify-view-text")}}
      {Lisp-Entry "Procedures-Menu" () 1314 7 ("on-add-procedure" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "add-procedure" "name:" "Context-Menu")
        {Lisp-Entry "on-add-procedure" () 1322 11 ("add-procedure" "evt")}}
      {Lisp-Entry "Procedure-Menu" () 1331 7 ("on-modify-text" "modify-text" "on-remove-procedure" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "remove-procedure" "name:" "Context-Menu")
        {Lisp-Entry "on-remove-procedure" () 1341 11 ("remove-procedure" "evt")}
        {Lisp-Entry "on-modify-text" () 1345 11 ("modify-procedure-text")}}
      {Lisp-Entry "Relations-Menu" () 1354 7 ("on-add-relation" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "add-relation" "name:" "Context-Menu")
        {Lisp-Entry "on-add-relation" () 1362 11 ("add-relation" "evt")}}
      {Lisp-Entry "Relation-Menu" () 1371 7 ("on-modify-update-cascade?" "modify-update-cascade?" "on-modify-delete-cascade?" "modify-delete-cascade?" "on-modify-unique?" "modify-unique?" "on-modify-left?" "modify-left?" "on-modify-right?" "modify-right?" "on-modify-primary-table" "modify-primary-table" "on-modify-primary-columns" "modify-primary-columns" "on-modify-foreign-table" "modify-foreign-table" "on-modify-foreign-columns" "modify-foreign-columns" "on-remove-relation" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "remove-relation" "name:" "Context-Menu")
        {Lisp-Entry "on-remove-relation" () 1389 11 ("remove-relation" "evt")}
        {Lisp-Entry "on-modify-foreign-columns" () 1393 11 ("modify-foreign-columns")}
        {Lisp-Entry "on-modify-foreign-table" () 1397 11 ("modify-foreign-table")}
        {Lisp-Entry "on-modify-primary-columns" () 1401 11 ("modify-primary-columns")}
        {Lisp-Entry "on-modify-primary-table" () 1405 11 ("modify-primary-table")}
        {Lisp-Entry "on-modify-right?" () 1409 11 ("modify-right?")}
        {Lisp-Entry "on-modify-left?" () 1413 11 ("modify-left?")}
        {Lisp-Entry "on-modify-unique?" () 1417 11 ("modify-relation-unique?")}
        {Lisp-Entry "on-modify-delete-cascade?" () 1421 11 ("modify-delete-cascade?")}
        {Lisp-Entry "on-modify-update-cascade?" () 1425 11 ("modify-update-cascade?")}}
      {Lisp-Entry "Inventory-Tree" () 1434 7 ("Tree-View")
        {Lisp-Entry "update-row" () 1437 11 ("update-info-row" "row")}}}})
"Inventory-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Column" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Column" () 45 7 ("Object")
        {Lisp-Entry "inventory" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "index-column?" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("index-column?~self" "parent~self" "inventory~self" "set!" "nextmethod" "index-column?" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 65 18 ("inventory")}
        {Lisp-Entry "get-parent" () 69 18 ("parent")}
        {Lisp-Entry "get-table" () 73 18 ("parent")}
        {Lisp-Entry "get-index-column?" () 77 18 ("index-column?")}
        {Lisp-Entry "get-default-value" () 86 26 ()}
        {Lisp-Entry "set-default-value" () 90 26 ("value")}
        {Lisp-Entry "get-default-value-name" () 94 26 ()}
        {Lisp-Entry "set-default-value-name" () 98 26 ("value")}
        {Lisp-Entry "get-used-defined-datatype" () 102 26 ()}
        {Lisp-Entry "get-datatype" () 106 26 ()}
        {Lisp-Entry "set-datatype" () 110 26 ("value")}
        {Lisp-Entry "get-type" () 114 26 ()}
        {Lisp-Entry "get-size" () 118 26 ()}
        {Lisp-Entry "set-size" () 122 26 ("size")}
        {Lisp-Entry "get-nullable?" () 126 26 ("true")}
        {Lisp-Entry "set-nullable?" () 130 26 ("value")}
        {Lisp-Entry "get-validation-rule" () 134 26 ()}
        {Lisp-Entry "set-validation-rule" () 138 26 ("value")}
        {Lisp-Entry "get-validation-text" () 142 26 ()}
        {Lisp-Entry "set-validation-text" () 146 26 ("value")}
        {Lisp-Entry "get-allow-zero-length?" () 150 26 ("false")}
        {Lisp-Entry "set-allow-zero-length?" () 154 26 ("value")}
        {Lisp-Entry "get-description" () 158 26 ()}
        {Lisp-Entry "set-description" () 162 26 ("value")}
        {Lisp-Entry "get-display-format" () 166 26 ()}
        {Lisp-Entry "set-display-format" () 170 26 ("value")}
        {Lisp-Entry "get-ordinal-position" () 174 26 ()}
        {Lisp-Entry "set-ordinal-position" () 178 26 ("value")}
        {Lisp-Entry "get-auto-increment?" () 182 26 ("false")}
        {Lisp-Entry "set-auto-increment?" () 186 26 ("value")}
        {Lisp-Entry "get-title" () 190 26 ()}
        {Lisp-Entry "get-scale" () 194 26 ()}
        {Lisp-Entry "set-scale" () 198 26 ("value")}
        {Lisp-Entry "get-precision" () 202 26 ()}
        {Lisp-Entry "set-precision" () 206 26 ("value")}
        {Lisp-Entry "get-fixed?" () 210 26 ("false")}
        {Lisp-Entry "get-order" () 214 26 ()}
        {Lisp-Entry "get-identity?" () 218 26 ("false")}
        {Lisp-Entry "set-identity?" () 222 26 ("value")}
        {Lisp-Entry "get-identity-replication?" () 226 26 ("true")}
        {Lisp-Entry "set-identity-replication?" () 230 26 ("value")}
        {Lisp-Entry "get-identity-seed" () 234 26 ("0")}
        {Lisp-Entry "set-identity-seed" () 238 26 ("value")}
        {Lisp-Entry "get-identity-increment" () 242 26 ("0")}
        {Lisp-Entry "set-identity-increment" () 246 26 ("value")}
        {Lisp-Entry "get-row-guid-col?" () 250 26 ()}
        {Lisp-Entry "get-computed?" () 254 26 ()}
        {Lisp-Entry "get-computed-text" () 258 26 ()}
        {Lisp-Entry "get-collation" () 262 26 ()}}}})
"Inventory-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Constraint.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Constraint" () 45 7 ("COM" "System" "Utilities" "Language" "Kernel" "Object")
        {Lisp-Entry "inventory" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("parent~self" "inventory~self" "set!" "nextmethod" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 63 18 ("inventory")}
        {Lisp-Entry "get-parent" () 67 18 ("parent")}
        {Lisp-Entry "get-handle" () 76 26 ()}
        {Lisp-Entry "get-title" () 80 26 ()}
        {Lisp-Entry "get-text" () 84 26 ()}
        {Lisp-Entry "set-text" () 88 26 ("value")}
        {Lisp-Entry "get-checked?" () 92 26 ()}
        {Lisp-Entry "set-checked?" () 96 26 ("value")}
        {Lisp-Entry "get-exclude-replication?" () 100 26 ()}
        {Lisp-Entry "set-exclude-replication?" () 104 26 ("value")}}}})
"Inventory-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Index.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Index" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Index" () 45 7 ("Object")
        {Lisp-Entry "inventory" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("parent~self" "inventory~self" "set!" "nextmethod" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 63 18 ("inventory")}
        {Lisp-Entry "get-parent" () 67 18 ("parent")}
        {Lisp-Entry "get-title" () 76 26 ()}
        {Lisp-Entry "get-unique?" () 80 26 ("false")}
        {Lisp-Entry "set-unique?" () 84 26 ("value")}
        {Lisp-Entry "get-required?" () 88 26 ("false")}
        {Lisp-Entry "get-ignore-nulls?" () 92 26 ("false")}
        {Lisp-Entry "get-fields" () 96 26 ()}
        {Lisp-Entry "get-fields/orders" () 100 26 ("get-order" "get-title" "list" "field" "dynamic" "function" "map" "get-fields" "fields" "with-closed")}
        {Lisp-Entry "set-fields/orders" () 107 26 ("value")}
        {Lisp-Entry "get-ignore-duplicates?" () 111 26 ("false")}
        {Lisp-Entry "get-clustered?" () 115 26 ("false")}
        {Lisp-Entry "get-pad-index?" () 119 26 ("false")}
        {Lisp-Entry "get-recompute-statistics?" () 123 26 ("true")}
        {Lisp-Entry "get-fill-factor" () 127 26 ("0")}}}})
"Inventory-Primary-Key"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Primary-Key.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Primary-Key" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Primary-Key" () 45 7 ("Object")
        {Lisp-Entry "inventory" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("parent~self" "inventory~self" "set!" "nextmethod" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 63 18 ("inventory")}
        {Lisp-Entry "get-parent" () 67 18 ("parent")}
        {Lisp-Entry "get-title" () 76 26 ()}
        {Lisp-Entry "get-fields" () 80 26 ()}
        {Lisp-Entry "get-fields/orders" () 84 26 ("get-order" "get-title" "list" "field" "dynamic" "function" "map" "get-fields" "fields" "with-closed")}
        {Lisp-Entry "get-clustered?" () 91 26 ("false")}
        {Lisp-Entry "get-fill-factor" () 95 26 ("0")}}}})
"Inventory-Procedure"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Procedure.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Procedure" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Procedure" () 45 7 ("Object")
        {Lisp-Entry "inventory" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("parent~self" "inventory~self" "set!" "nextmethod" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 63 18 ("inventory")}
        {Lisp-Entry "get-parent" () 67 18 ("parent")}
        {Lisp-Entry "get-title" () 76 26 ()}
        {Lisp-Entry "get-text" () 80 26 ()}
        {Lisp-Entry "set-text" () 84 26 ("value")}}}})
"Inventory-Relation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Relation.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Relation" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Relation" () 45 7 ("Object")
        {Lisp-Entry "inventory" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("parent~self" "inventory~self" "set!" "nextmethod" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 63 18 ("inventory")}
        {Lisp-Entry "get-parent" () 67 18 ("parent")}
        {Lisp-Entry "get-title" () 76 26 ()}
        {Lisp-Entry "get-primary-table" () 80 26 ()}
        {Lisp-Entry "set-primary-table" () 84 26 ("value")}
        {Lisp-Entry "get-primary-field-names" () 88 26 ()}
        {Lisp-Entry "set-primary-field-names" () 92 26 ("value")}
        {Lisp-Entry "get-foreign-table" () 96 26 ()}
        {Lisp-Entry "set-foreign-table" () 100 26 ("value")}
        {Lisp-Entry "get-foreign-field-names" () 104 26 ()}
        {Lisp-Entry "set-foreign-field-names" () 108 26 ("value")}
        {Lisp-Entry "get-unique?" () 112 26 ("false")}
        {Lisp-Entry "set-unique?" () 116 26 ("value")}
        {Lisp-Entry "get-dont-enforce?" () 120 26 ("false")}
        {Lisp-Entry "get-inherited?" () 124 26 ("false")}
        {Lisp-Entry "get-update-cascade?" () 128 26 ("false")}
        {Lisp-Entry "set-update-cascade?" () 132 26 ("value")}
        {Lisp-Entry "get-delete-cascade?" () 136 26 ("false")}
        {Lisp-Entry "set-delete-cascade?" () 140 26 ("value")}
        {Lisp-Entry "get-left?" () 144 26 ("false")}
        {Lisp-Entry "set-left?" () 148 26 ("value")}
        {Lisp-Entry "get-right?" () 152 26 ("false")}
        {Lisp-Entry "set-right?" () 156 26 ("value")}
        {Lisp-Entry "get-checked?" () 160 26 ("true")}
        {Lisp-Entry "get-exclude-replication?" () 164 26 ("true")}}}})
"Inventory-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Table.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Table" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Table" () 45 7 ("Object")
        {Lisp-Entry "inventory" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("parent~self" "inventory~self" "set!" "nextmethod" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 63 18 ("inventory")}
        {Lisp-Entry "get-parent" () 67 18 ("parent")}
        {Lisp-Entry "get-owner" () 76 26 ()}
        {Lisp-Entry "set-owner" () 80 26 ("value")}
        {Lisp-Entry "get-name" () 84 26 ()}
        {Lisp-Entry "get-title" () 88 26 ()}
        {Lisp-Entry "get-linked?" () 92 26 ("false")}
        {Lisp-Entry "get-connect" () 96 26 ()}
        {Lisp-Entry "set-connect" () 100 26 ("value")}
        {Lisp-Entry "get-source-table-name" () 104 26 ()}
        {Lisp-Entry "set-source-table-name" () 108 26 ("value")}
        {Lisp-Entry "get-validation-rule" () 112 26 ()}
        {Lisp-Entry "set-validation-rule" () 116 26 ("value")}
        {Lisp-Entry "get-validation-text" () 120 26 ()}
        {Lisp-Entry "set-validation-text" () 124 26 ("value")}
        {Lisp-Entry "get-description" () 128 26 ()}
        {Lisp-Entry "set-description" () 132 26 ("value")}
        {Lisp-Entry "get-primary-key" () 141 26 ()}
        {Lisp-Entry "create-primary-key" () 145 26 ("fields/orders" "name")}
        {Lisp-Entry "remove-primary-key" () 149 26 ("name")}
        {Lisp-Entry "append-primary-key" () 153 26 ("primary-key")}
        {Lisp-Entry "get-columns" () 162 26 ()}
        {Lisp-Entry "get-column" () 166 26 ("name")}
        {Lisp-Entry "create-column" () 170 26 ("name")}
        {Lisp-Entry "append-column" () 174 26 ("column")}
        {Lisp-Entry "remove-column" () 178 26 ("name")}
        {Lisp-Entry "get-indexes" () 187 26 ()}
        {Lisp-Entry "get-index" () 191 26 ("name")}
        {Lisp-Entry "create-index" () 195 26 ("name")}
        {Lisp-Entry "append-index" () 199 26 ("index")}
        {Lisp-Entry "remove-index" () 203 26 ("name")}
        {Lisp-Entry "create-or-modify-trigger" () 212 26 ("append-trigger" "set-text" "create-trigger" "new-trigger" "remove-trigger" "when" "false" "error?:" "get-trigger" "trigger" "with-closed" "text" "name")}
        {Lisp-Entry "get-triggers" () 221 26 ()}
        {Lisp-Entry "get-trigger" () 225 26 ("rest" "name")}
        {Lisp-Entry "create-trigger" () 229 26 ("name")}
        {Lisp-Entry "append-trigger" () 233 26 ("trigger")}
        {Lisp-Entry "remove-trigger" () 237 26 ("name")}
        {Lisp-Entry "create-or-modify-constraint" () 246 26 ("set-checked?" "append-constraint" "set-exclude-replication?" "set-text" "create-constraint" "new-constraint" "remove-constraint" "when" "false" "error?:" "get-constraint" "constraint" "with-closed" "exclude-replication?" "checked?" "text" "name")}
        {Lisp-Entry "get-constraints" () 257 26 ()}
        {Lisp-Entry "get-constraint" () 261 26 ("rest" "name")}
        {Lisp-Entry "create-constraint" () 265 26 ("name")}
        {Lisp-Entry "append-constraint" () 269 26 ("constraint")}
        {Lisp-Entry "remove-constraint" () 273 26 ("name")}
        {Lisp-Entry "get-text-file-group" () 282 26 ()}
        {Lisp-Entry "set-text-file-group" () 286 26 ("value")}
        {Lisp-Entry "get-file-group" () 290 26 ()}
        {Lisp-Entry "set-file-group" () 294 26 ("value")}}}})
"Inventory-Table-Updater"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "update" "Inventory-Table-Updater.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.update.Inventory-Table-Updater" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Table-Updater" () 45 7 ("System" "Utilities" "Language" "Kernel" "Object")
        {Lisp-Entry "table-name" () 48 8 ()}
        {Lisp-Entry "columns" () 49 8 ()}
        {Lisp-Entry "indexes" () 50 8 ()}
        {Lisp-Entry "primary-key" () 51 8 ()}
        {Lisp-Entry "foreign-keys" () 52 8 ()}
        {Lisp-Entry "constraints" () 53 8 ()}
        {Lisp-Entry "defaults-values" () 54 8 ()}
        {Lisp-Entry "descriptions" () 55 8 ()}}}})
"Inventory-Trigger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Trigger.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Trigger" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Trigger" () 45 7 ("Object")
        {Lisp-Entry "inventory" () 48 8 ()}
        {Lisp-Entry "parent" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("parent~self" "inventory~self" "set!" "nextmethod" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 63 18 ("inventory")}
        {Lisp-Entry "get-parent" () 67 18 ("parent")}
        {Lisp-Entry "get-title" () 76 26 ()}
        {Lisp-Entry "get-text" () 80 26 ()}
        {Lisp-Entry "set-text" () 84 26 ("value")}}}})
"Inventory-Updater"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-Updater.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-Updater" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-Updater" () 45 7 ("Object")
        {Lisp-Entry "connection" () 48 8 ()}
        {Lisp-Entry "inventory" () 49 8 ()}
        {Lisp-Entry "pending-properties" () 50 8 ()}
        {Lisp-Entry "pending-deletes" () 51 8 ()}
        {Lisp-Entry "pending-triggers/indexes" () 52 8 ()}
        {Lisp-Entry "ugly-patch" () 53 8 ()}
        {Lisp-Entry "initialize" () 56 11 ("get-inventory" "inventory~self" "connection~self" "set!" "nextmethod" "connection")}
        {Lisp-Entry "Actions" () 67 14 ("no-action" "modify" "add" "right" "remove" "left")}
        {Lisp-Entry "update-inventory" () 74 18 ("reporter:" "title:" "ugly-patch" "close" "proxy" "for-each" "process-pending-deletes" "process-pending-triggers/indexes" "process-pending-properties" "process-table-triggers" "SQLServer-Inventory" "is?" "when" "inventory" "process-children" "pending-triggers/indexes" "pending-deletes" "pending-properties" "set!" "dynamic" "function" "with-execution-context" "reporter" "delta")}
        {Lisp-Entry "process-children" () 95 11 ("8" "constraint" "7" "trigger" "6" "index" "5" "primary-key" ":ordinal-position" "get-property" "third" "either" "4" "column" "3" "relation" "2" "procedure" "1" "view" "0" "list" "table" "get-kind" "case" "get-name" "name" "let" "x" "key:" "get-children" "" "sort" "process-entity" "create-sql" "SQLServer-Inventory" "is?" "if" "object" "dynamic" "function" "for-each" "reporter" "parent-proxy" "entity")}
        {Lisp-Entry "create-sql" () 119 11 ("view" "generate-sql-procedure" "procedure" "generate-sql-table" "table" "when" "false" ":has-differences?" "get-property" "has-differences?" "let" "else" "generate-sql-relation" "relation" "get-kind" "case" "dynamic" "function" "with-continue" "reporter" "parent-proxy" "object")}
        {Lisp-Entry "process-object" () 133 11 ("modify" "right" "case" "left" "eq?" "unless" "if" ":difference" "get-property" "action" "let" "drop-proc" "create-proc" "recreate-table?" "object")}
        {Lisp-Entry "find-action-on-process-property" () 145 11 ("left" "modify" "=" "right" "/=" "and" "when" "if" "recreate-table?" "new-value" "old-value" "action")}
        {Lisp-Entry "drop-object" () 158 11 ("execute-sql-commit-preserve" "tie" "script" "get-kind" "object-kind" "get-name" "object-name" "let*" "object")}
        {Lisp-Entry "generate-sql-header-script" () 165 11 ("tie")}
        {Lisp-Entry "Table-Not-Found" () 181 12 ()}
        {Lisp-Entry "set-table-tempo-name" () 185 11 ("Table-Not-Found" "false" "Item" "cotry" "format" "set!" "increase!" "while" "inventory" "get-database" "get-Tables" "tables" "with-closed" "true" "looking" "table-tempo-name" "suffix" "get-name" "table-name" "let" "object")}
        {Lisp-Entry "generate-sql-table" () 198 11 ("modify" "drop-table" "left" "right" "case" "generate-sql-partial-table" "generate-sql-full-table" "regenerate-full-table?" "null?" "if" ":difference" "get-property" "action" "let" "reporter" "table")}
        {Lisp-Entry "regenerate-full-table?" () 212 11 ("false" "left" "true" "right" "modify" "case" "modify-column?" "null?" "if" ":difference" "get-property" "action" "let" "table")}
        {Lisp-Entry "modify-column?" () 222 11 ("either" "key:" "get-columns" "" "sort" "true" "third" "second" "+" "/=" "null?" "when" "else" "decrease!" "left" "increase!" "right" "case" "nullable?:" ":datatype" "modify" ":ordinal-position" "first" "=" "or" ":difference" "get-property" "action" "column" "dynamic" "function" "some?" "0" "column-pos" "let" "table")}
        {Lisp-Entry "generate-sql-full-table" () 243 11 ("generate-sql-access-right" "process-triggers" "process-constraints" "process-indexes" "process-primary-key" "generate-sql-identity-end" ":recreate-table?" "set-property" "undo-create-table" "set!" "process-copy-data" "generate-sql-identity-start" "check-default-values" "process-default-values" "process-description-columns" "true" "process-description-table" "begin" "unwind-protect" "temp-table-created" "let" "generate-sql-create-table" "drop-default-values" "drop-table-relation" "generate-sql-header-script" "execute-sql-commit-preserve" "user-message" "get-columns" ":identity?" "third" "column" "dynamic" "function" "some?" "identity-column?" "if" "table-current-name" "set-table-tempo-name" "not" "when" "table-tempo-name" "right" "=" "new-table?" ":difference" "get-property" "action" "get-name" "table-name" "let*" "reporter" "table")}
        {Lisp-Entry "undo-create-table" () 284 11 ("execute-sql-commit-preserve" "tie" "script" "let" "table-name")}
        {Lisp-Entry "generate-sql-partial-table" () 289 11 ("process-triggers" "process-constraints" "process-indexes" "process-primary-key" "process-default-values" "process-description-columns" "false" "process-description-table" "user-message" "when" "get-name" "table-name" "let" "reporter" "table")}
        {Lisp-Entry "create-fields-list" () 303 11 ("0" ">=" "tie" ":identity-replication?" "id-repl" ":identity-increment" "id-inc" ":identity-seed" "id-seed" ":identity?" "identity-string" "nullable?:" "if" "nullable-string" ":ordinal-position" "ordinal-position" "get-datatype" "third" "get-native" "datatype" "get-name" "field-name" "let" "left" ":difference" "get-property" "/=" "when" "field" "dynamic" "function" "collect" "list")}
        {Lisp-Entry "generate-sql-create-table" () 325 11 ("tie" "def-table" ":ordinal-position" "get-property" "third" "either" "column" "dynamic" "function" "key:" "get-columns" "" "sort" "create-fields-list" "join" "fields-list" "let*" "table-name" "object")}
        {Lisp-Entry "get-added-columns-without-default-value" () 335 11 ("get-columns" "get-defaultable?" "=" "or" "not" "second" "null?" "and" ":datatype" "new-datatype" "nullable?:" "new-nullable?" "first" "new-default-value-action" ":default-value" "third" "new-default-value" ":ordinal-position" "get-property" "ordinal-position" "let" "column" "dynamic" "function" "collect-if" "table")}
        {Lisp-Entry "process-copy-data" () 352 11 ("execute-sql-commit-preserve" "script-drop-rename-table" "tie" "script-copy" "get-native" "format" "not" "and" "need-default?" "modify" "action-for-property" "eq?" "must-convert?" "safe-name" "let" "else" "if" "cond" "read-only" "=" "read-only?" "true" ":indirect?" ":default-value" "get-native-with-value" "default-value" ":datatype" "datatype" "nullable?:" "nullable?" "object-old-property" "null?" "new-column?" "new-values" "get-name" "encapsulate-name" "map" "new-names" "key:" "get-columns" ":ordinal-position" "object-new-property" "not-null?" "column" "dynamic" "function" "collect-if" "" "sort" "new-columns" "let*" "old-table" "new-table" "object")}
        {Lisp-Entry "drop-table" () 397 11 ("drop-object" "drop-default-values" "drop-table-relation" "table")}
        {Lisp-Entry "process-description-table" () 403 11 ("generate-sql-update-description-table" "modify" "generate-sql-drop-description-table" "left" "generate-sql-add-description-table" "right" "case" "execute-sql-commit-preserve" "when" "find-action-on-process-property" "set!" ":description" "get-property" "new-value" "old-value" "action" "bind" "recreate-table?" "table-name" "table")}
        {Lisp-Entry "generate-sql-add-description-table" () 414 11 ("tie" "script" "substitute-alist" "user" "let*" "description" "table-name")}
        {Lisp-Entry "generate-sql-drop-description-table" () 423 11 ("tie" "script" "user" "let*" "table-name")}
        {Lisp-Entry "generate-sql-update-description-table" () 429 11 ("tie" "script" "substitute-alist" "user" "let*" "description" "table-name")}
        {Lisp-Entry "generate-sql-drop-columns" () 444 11 ("tie" "script" "list" "join" "columns-list" "let*" "table-name" "object")}
        {Lisp-Entry "generate-sql-add-default-value" () 451 11 ("tie" "script" "let" "default-value" "constraint-name" "column-name" "table-name")}
        {Lisp-Entry "process-default-values" () 457 11 ("get-columns" "script-add-default-value" "script-drop-default-value" "modify" "generate-sql-drop-constraint" "find-constraint-name" "old-constraint-name" "left" "format" "title:" "generate-sql-add-default-value" "execute-sql-commit-preserve" "with-execution-node" "right" "case" "tie" "new-constraint-name" "column-name" "let*" "when" "find-action-on-process-property" "set!" ":default-value" "get-property" "new-value" "old-value" "action" "bind" "column" "dynamic" "function" "for-each" "get-name" "constraint-table-name" "let" "recreate-table?" "table-name" "table")}
        {Lisp-Entry "check-default-values" () 488 11 ("get-columns" "error" "find-default-value" "/=" "modify" "right" "case" "tie" "new-constraint-name" "column-name" "let*" "when" "false" "find-action-on-process-property" "set!" ":default-value" "get-property" "new-value" "old-value" "action" "bind" "column" "dynamic" "function" "for-each" "get-name" "constraint-table-name" "let" "table-name" "table")}
        {Lisp-Entry "drop-default-values" () 502 11 ("get-columns" "execute-sql-commit-preserve" "generate-sql-drop-constraint" "script-drop-constraint" "generate-sql-header-script" "script-header" "find-constraint-name" "constraint-name" "column-name" "let*" ":default-value" "get-property" "second" "when" "column" "dynamic" "function" "for-each" "get-name" "table-name" "let" "table")}
        {Lisp-Entry "find-constraint-name" () 515 11 ("get-Name" "get-DRIDefault" "default" "column" "get-Columns" "columns" "Item" "table" "inventory" "get-database" "get-Tables" "tables" "with-closed" "column-name" "table-name")}
        {Lisp-Entry "find-default-value" () 524 11 ("0" "connection" "load-value" "tie" "script" "let" "constraint-name")}
        {Lisp-Entry "generate-sql-identity-start" () 529 11 ("tie" "script" "let" "table-name")}
        {Lisp-Entry "generate-sql-identity-end" () 534 11 ("tie" "script" "let" "table-name")}
        {Lisp-Entry "process-description-columns" () 539 11 ("get-columns" "generate-sql-update-description-column" "modify" "generate-sql-drop-description-column" "left" "generate-sql-add-description-column" "right" "case" "execute-sql-commit-preserve" "when" "get-name" "column-name" "let" "find-action-on-process-property" "set!" ":description" "get-property" "new-value" "old-value" "action" "bind" "column" "dynamic" "function" "for-each" "recreate-table?" "table-name" "table")}
        {Lisp-Entry "generate-sql-add-description-column" () 553 11 ("tie" "script" "substitute-alist" "user" "let*" "description" "column-name" "table-name")}
        {Lisp-Entry "generate-sql-drop-description-column" () 562 11 ("tie" "script" "user" "let*" "column-name" "table-name")}
        {Lisp-Entry "generate-sql-update-description-column" () 568 11 ("tie" "script" "substitute-alist" "user" "let*" "description" "column-name" "table-name")}
        {Lisp-Entry "process-primary-key" () 582 11 ("drop-primary-key" "add-primary-key" "process-object" "when" "get-primary-key" "primary-key" "let" "recreate-table?" "table")}
        {Lisp-Entry "add-primary-key" () 588 11 ("execute-sql-commit-preserve" "generate-sql-primary-key" "script-create-primary-key" "generate-sql-header-script" "script-header" "let" "object")}
        {Lisp-Entry "drop-primary-key" () 595 11 ("execute-sql-commit-preserve" "drop-table-relation" "generate-sql-drop-constraint" "script-drop-constraint" "generate-sql-header-script" "script-header" "table-name" "get-parent" "table" "get-name" "constraint-name" "let*" "primary-key")}
        {Lisp-Entry "generate-sql-primary-key" () 606 11 ("script" "tie" "0" ">" "fill-factor-text" ":fill-factor" "fill-factor" ":clustered?" "if" "clustered" ":fields/orders" "get-property" "third" "create-fields/orders-list" "fields/orders" "pk-name" "get-parent" "get-name" "table-name" "let*" "primary-key")}
        {Lisp-Entry "create-fields/orders-list" () 621 11 ("cn" "append" "tie" "ascending" "=" "if" "order-string" "second" "order" "first" "encapsulate-name" "field" "let*" "field/order" "dynamic" "function" "map" "join" "list")}
        {Lisp-Entry "process-indexes" () 637 11 ("get-indexes" "drop-index" "add-index" "process-object" "index" "dynamic" "function" "for-each" "recreate-table?" "object")}
        {Lisp-Entry "add-index" () 643 11 ("execute-sql-commit-preserve" "generate-sql-index" "script-create-index" "generate-sql-header-script" "script-header" "let" "index")}
        {Lisp-Entry "drop-index" () 650 11 ("execute-sql-commit-preserve" "tie" "script" "get-parent" "table-name" "get-name" "index-name" "let*" "index")}
        {Lisp-Entry "generate-sql-index" () 657 11 ("script" "options" "list" "remove-nils" "options-list" ":recompute-statistics?" "statistics-norecompute" ":ignore-duplicates?" "ignore-dup-key" "tie" "0" ">" "fill-factor-text" ":fill-factor" "fill-factor" ":pad-index?" "pad-index" ":clustered?" "clustered" "unique?:" "if" "unique" ":fields/orders" "get-property" "third" "create-fields/orders-list" "fields/orders" "index-name" "get-parent" "get-name" "table-name" "let*" "index")}
        {Lisp-Entry "process-triggers" () 686 11 ("get-triggers" "drop-object" "create-procedure" "process-object" "with-continue" "trigger" "dynamic" "function" "for-each" "recreate-table?" "object")}
        {Lisp-Entry "process-table-triggers" () 694 11 ("get-tables" "process-triggers" "left" "=" "unless" ":difference" "action" "false" ":recreate-table?" "get-property" "recreate-table?" "let" "table" "dynamic" "function" "for-each" "objects")}
        {Lisp-Entry "process-constraints" () 708 11 ("get-constraints" "drop-constraint" "create-constraint" "process-object" "constraint" "dynamic" "function" "for-each" "recreate-table?" "table")}
        {Lisp-Entry "create-constraint" () 714 11 ("execute-sql-commit-preserve" "script" "tie" "checked?:" "not" "checked-text" "exclude-replication?:" "replication-text" "if" "check-text" "true" "check?" "text:" "get-property" "third" "text" "constraint-name" "get-parent" "get-name" "table-name" "let*" "constraint")}
        {Lisp-Entry "drop-constraint" () 731 11 ("execute-sql-commit-preserve" "tie" "script" "constraint-name" "get-parent" "get-name" "table-name" "let*" "constraint")}
        {Lisp-Entry "generate-sql-drop-constraint" () 739 11 ("tie" "script" "let" "constraint-name" "table-name")}
        {Lisp-Entry "generate-sql-relation" () 750 11 ("drop-relation" "create-relation" "process-object" "false" ":recreate-table?" "get-property" "recreate-table?" "let" "relation")}
        {Lisp-Entry "create-relation" () 755 11 ("execute-sql-commit-preserve" "script" "tie" "checked?:" "not" "checked-text" "check-text" "true" "check?" "exclude-replication?:" "replication-text" "delete-cascade?:" "on-delete-cascade" "update-cascade?:" "get-property" "if" "on-update-cascade" "get-foreign-columns" "foreign-fields" "get-foreign-table" "foreign-table" "get-primary-columns" "primary-fields" "get-primary-table" "third" "primary-table" "get-name" "relation-name" "let*" "relation")}
        {Lisp-Entry "drop-relation" () 782 11 ("execute-sql-commit-preserve" "tie" "script" "get-foreign-table" "second" "foreign-table" "get-name" "relation-name" "let*" "relation")}
        {Lisp-Entry "drop-table-relation" () 790 11 ("get-parent" "get-relations" "true" "set-property" "drop-relation" "=" "or" "when" "get-primary-table" "primary-table" "get-foreign-table" "second" "foreign-table" "false" ":recreate-table?" "get-property" "unless" "relation" "dynamic" "function" "for-each" "get-name" "table-name" "let" "table")}
        {Lisp-Entry "generate-sql-procedure" () 808 11 ("modify" "drop-object" "left" "create-procedure" "right" "case" "user-message" "when" "get-name" "name" ":difference" "get-property" "action" "let" "reporter" "object")}
        {Lisp-Entry "create-procedure" () 820 11 ("connection" "execute" "text:" "get-property" "third" "script-create-procedure" "generate-sql-header-script" "script-header" "let" "object")}
        {Lisp-Entry "generate-sql-access-right" () 833 11 ("tie" "script" "user" "let*")}
        {Lisp-Entry "object-new-property" () 850 11 ("get-property" "third" "property" "object")}
        {Lisp-Entry "object-old-property" () 854 11 ("get-property" "second" "property" "object")}
        {Lisp-Entry "action-for-property" () 858 11 ("get-property" "first" "property" "object")}
        {Lisp-Entry "encapsulate-name" () 862 11 ("format" "name")}
        {Lisp-Entry "execute-sql-commit-preserve" () 866 11 ("connection" "execute" "commit" "tie" "let*" "script")}
        {Lisp-Entry "process-entity" () 879 11 ("process-modify" "no-action" "modify" "process-delete" "remove" "process-new" "add" "case" "get-name" "name" "get-kind" "kind" "Actions" ":difference" "get-property" "assq" "cdr" "action" "let" "dynamic" "function" "with-continue" "reporter" "parent-proxy" "object")}
        {Lisp-Entry "process-new" () 891 11 ("format" "title:" "process-proxy" "cons" "ugly-patch" "set!" "new-proxy" "proxy" "let" "dynamic" "function" "with-execution-node" "reporter" "name" "kind" "parent-proxy" "object")}
        {Lisp-Entry "process-delete" () 900 11 ("format" "title:" "process-proxy" "dynamic" "function" "with-execution-node" "reporter" "name" "kind" "parent-proxy" "object")}
        {Lisp-Entry "process-modify" () 907 11 ("format" "title:" "process-proxy" "cons" "ugly-patch" "set!" "get-proxy" "proxy" "let" "dynamic" "function" "with-execution-node" "reporter" "name" "kind" "parent-proxy" "object")}
        {Lisp-Entry "Recreate" () 916 14 ("procedure" "relation" "view" "constraint" "trigger" "index" "primary-key")}
        {Lisp-Entry "process-proxy" () 920 11 ("add-pending-trigger/index" "index" "trigger" "complete-append" "SQLServer-Inventory-Relation" "unless" "process-children" "modify-proxy" "true" "cons" "ugly-patch" "new-proxy" "set!" "delete-proxy" ":linked?" "table" "Recreate" "memq?" "false" ":has-differences?" "and" "modify" "no-action" "or" "process-pending-triggers/indexes" "relation" "list" "add-pending-delete" "remove" "if" "user-message" "when" "add" "=" "new?" "Data-Entity" "is?" "entity?" "get-name" "name" "get-kind" "kind" "Actions" ":difference" "get-property" "assq" "cdr" "action" "let*" "reporter" "proxy" "parent-proxy" "object")}
        {Lisp-Entry "new-proxy" () 958 11 ("error" "else" "create-procedure" "procedure" "create-relation-complete" "foreign-columns:" "foreign-fields" "foreign-table:" "foreign-table" "primary-columns:" "primary-fields" "primary-table:" "primary-table" "create-relation" "SQLServer-Inventory" "is-not?" "if" "relation" "create-view" "view" "create-constraint" "constraint" "create-trigger" "trigger" "create-index" "index" "create-column" "column" "create-primary-key" ":fields/orders" "get-property" "third" "fields/orders" "let" "primary-key" "create-table" "table" "case" "object" "name" "kind" "parent")}
        {Lisp-Entry "get-proxy" () 984 11 ("error" "else" "get-procedure" "procedure" "get-relation" "relation" "get-view" "view" "get-constraint" "constraint" "get-trigger" "trigger" "get-index" "index" "get-column" "column" "get-primary-key" "primary-key" "get-table" "table" "case" "name" "kind" "parent")}
        {Lisp-Entry "modify-proxy" () 1003 11 ("property-names" "modify-proxy-property" "list" "add-pending-property" "allow-zero-length?" "display-format" "description" "memq?" "if" "modify" "=" "or" "when" "new-value" "old-value" "action" "bind" "get-property" "composite" "symbol->keyword" "property" "let*" "symbol" "dynamic" "function" "for-each" "force?" "kind" "physical" "object")}
        {Lisp-Entry "modify-proxy-property" () 1015 11 ("format" "title:" "error" "else" "modify-relation-property" "relation" "modify-procedure-property" "procedure" "modify-view-property" "view" "modify-constraint-property" "constraint" "modify-trigger-property" "trigger" "modify-index-property" "index" "modify-column-property" "column" "modify-primary-key-property" "primary-key" "modify-table-property" "table" "case" "dynamic" "function" "with-execution-node" "force?" "value" "property" "kind" "physical" "object")}
        {Lisp-Entry "modify-table-property" () 1032 11 ("error" "else" "set-validation-text" "validation-text" "set-validation-rule" "validation-rule" "set-description" "description" "set-source-table-name" "source-table-name" "set-connect" "connect" "case" "value" "property" "physical")}
        {Lisp-Entry "modify-primary-key-property" () 1042 11 ("error" "else" "fill-factor" "clustered?" "fields/orders" "case" "value" "property" "physical")}
        {Lisp-Entry "create-field-by-sql" () 1048 11 ("connection" "execute" "tie" "request" "format" "if" "size-label" "has-size?" "sizeable?" "get-size" "size" "get-name" "type-name" "get-nullable?" "nullable?" "field-name" "get-table" "get-title" "table-name" "let*" "value" "physical")}
        {Lisp-Entry "modify-column-property" () 1065 11 ("error" "set-identity-seed" "identity-seed" "set-identity-increment" "identity-increment" "identity-replication?" "set-identity?" "identity?" "set-auto-increment?" "auto-increment?" "set-ordinal-position" "ordinal-position" "set-display-format" "display-format" "set-allow-zero-length?" "allow-zero-length?" "set-validation-text" "validation-text" "set-validation-rule" "validation-rule" "set-nullable?" "get-size" "set-size" "begin" "=" "get-name" "new-type" "get-type" "type" "get-nullable?" "nullable?" "let" "else" "create-field-by-sql" "Access-Datatype" "typecase" "set-datatype" "if" "datatype" "set-description" "description" "set-default-value" "default-value" "case" "inventory" "column-supports-property?" "when" "force?" "value" "property" "physical" "object")}
        {Lisp-Entry "modify-index-property" () 1100 11 ("error" "else" "exclude-replication?" "checked?" "fill-factor" "recompute-statistics?" "pad-index?" "clustered?" "ignore-duplicates?" "set-unique?" "SQLServer-Inventory-Index" "is?" "unless" "unique?" "set-fields/orders" "fields/orders" "case" "value" "property" "physical")}
        {Lisp-Entry "modify-trigger-property" () 1108 11 ("error" "else" "set-text" "text" "case" "value" "property" "physical")}
        {Lisp-Entry "modify-constraint-property" () 1114 11 ("error" "else" "checked?" "exclude-replication?" "text" "case" "value" "property" "physical")}
        {Lisp-Entry "modify-procedure-property" () 1120 11 ("error" "else" "set-text" "text" "case" "value" "property" "physical")}
        {Lisp-Entry "modify-view-property" () 1126 11 ("error" "else" "set-text" "text" "case" "value" "property" "physical")}
        {Lisp-Entry "modify-relation-property" () 1132 11 ("error" "else" "checked?" "exclude-replication?" "set-update-cascade?" "update-cascade?" "set-delete-cascade?" "delete-cascade?" "set-unique?" "unique?" "set-left?" "left?" "set-right?" "right?" "set-foreign-table" "foreign-table" "set-foreign-field-names" "foreign-columns" "set-primary-table" "primary-table" "set-primary-field-names" "primary-columns" "case" "SQLServer-Inventory-Relation" "is?" "unless" "value" "property" "physical")}
        {Lisp-Entry "complete-append" () 1153 11 ("error" "else" "append-procedure" "procedure" "append-relation" "relation" "append-view" "view" "append-constraint" "constraint" "append-trigger" "trigger" "append-index" "index" "append-column" "column" "append-primary-key" "primary-key" "append-table" "table" "case" "dynamic" "function" "with-continue" "child" "parent" "kind")}
        {Lisp-Entry "delete-proxy" () 1174 11 ("error" "else" "remove-procedure" "procedure" "foreign-table:" "get-property" "second" "foreign-table" "let" "remove-relation" "SQLServer-Inventory" "is-not?" "if" "relation" "remove-view" "view" "remove-constraint" "constraint" "remove-trigger" "trigger" "remove-index" "index" "remove-column" "column" "remove-primary-key" "primary-key" "remove-table" "table" "case" "object" "child-name" "parent" "kind")}
        {Lisp-Entry "add-pending-property" () 1196 11 ("cons" "pending-properties" "set!" "info")}
        {Lisp-Entry "add-pending-delete" () 1200 11 ("cons" "pending-deletes" "set!" "info")}
        {Lisp-Entry "add-pending-trigger/index" () 1204 11 ("cons" "pending-triggers/indexes" "set!" "info")}
        {Lisp-Entry "process-pending-properties" () 1208 11 ("pending-properties" "true" "modify-proxy-property" "with-continue" "new-value" "symbol" "kind" "physical" "object" "bind" "element" "dynamic" "function" "for-each")}
        {Lisp-Entry "Entities-Delete" () 1217 14 ("column" "primary-key" "index" "constraint" "trigger" "table" "view" "procedure" "relation")}
        {Lisp-Entry "process-pending-deletes" () 1221 11 ("position" "return:" "Entities-Delete" "first" "find" "lst" "key:" "pending-deletes" "" "sort" "delete-proxy" "with-continue" "object" "name" "physical" "kind" "bind" "element" "dynamic" "function" "for-each")}
        {Lisp-Entry "process-pending-triggers/indexes" () 1231 11 ("set!" "pending-triggers/indexes" "complete-append" "subentity" "entity" "kind" "bind" "element" "dynamic" "function" "for-each")}}}})
"Inventory-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "inventory" "Inventory-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.inventory.Inventory-View" () 37 9 ("jazz")
      {Lisp-Entry "Inventory-View" () 46 7 ("Object")
        {Lisp-Entry "inventory" () 49 8 ()}
        {Lisp-Entry "parent" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("parent~self" "inventory~self" "set!" "nextmethod" "parent" "inventory")}
        {Lisp-Entry "get-inventory" () 64 18 ("inventory")}
        {Lisp-Entry "get-parent" () 68 18 ("parent")}
        {Lisp-Entry "get-title" () 77 26 ()}
        {Lisp-Entry "get-text" () 81 26 ()}
        {Lisp-Entry "set-text" () 85 26 ("value")}}}})
"Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.menu.Item" () 37 9 ("jazz")
      {Lisp-Entry "Item" () 45 7 ("View")
        {Lisp-Entry "prefix-width" () 48 8 ("0")}
        {Lisp-Entry "icon-width" () 49 8 ("0")}
        {Lisp-Entry "body-width" () 50 8 ("0")}
        {Lisp-Entry "accelerator-width" () 51 8 ("0")}
        {Lisp-Entry "arrow-width" () 52 8 ("0")}
        {Lisp-Entry "in?" () 53 8 ("false")}
        {Lisp-Entry "set-prefix-width" () 61 18 ("prefix-width" "set!" "width")}
        {Lisp-Entry "set-icon-width" () 65 18 ("icon-width" "set!" "width")}
        {Lisp-Entry "set-body-width" () 69 18 ("body-width" "set!" "width")}
        {Lisp-Entry "set-accelerator-width" () 73 18 ("accelerator-width" "set!" "width")}
        {Lisp-Entry "set-arrow-width" () 77 18 ("arrow-width" "set!" "width")}
        {Lisp-Entry "get-menubar" () 86 11 ("Menubar" "find-ascendant")}
        {Lisp-Entry "preferred-prefix-width" () 95 26 ("0")}
        {Lisp-Entry "preferred-icon-width" () 99 26 ("0")}
        {Lisp-Entry "preferred-body-width" () 103 26 ("0")}
        {Lisp-Entry "preferred-accelerator-width" () 107 26 ("0")}
        {Lisp-Entry "preferred-arrow-width" () 111 26 ("0")}
        {Lisp-Entry "preferred-height" () 115 26 ("preferred-size" "get-height")}
        {Lisp-Entry "layout-menu" () 119 21 ("layout-menu" "Menu" "parent" "is?" "when")}
        {Lisp-Entry "mouse-enter" () 129 11 ("when" "popup-initiator" "initiator" "let" "update-view" "invalidate-view" "true" "in?" "set!")}
        {Lisp-Entry "mouse-leave" () 138 11 ("update-view" "invalidate-view" "false" "in?" "set!")}
        {Lisp-Entry "poped?" () 149 21 ("self" "popup-initiator" "=" "and" "parent" "get-poped" "poped" "let")}
        {Lisp-Entry "poped-tool" () 154 21 ("get-player" "self" "popup-initiator" "=" "and" "when" "parent" "get-poped" "poped" "let")}
        {Lisp-Entry "close-other-popups" () 160 21 ("poped-tool" "list" "exclude:" "close-popups" "poped?" "if")}}}})
"Iterable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Iterable.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.iterator.Iterable" () 37 9 ("jazz")
      {Lisp-Entry "Iterable" () 44 11 ()
        {Lisp-Entry "new-iterator" () 47 35 ("object")}}}})
"Iterator-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Iterator-Tester.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.suite.Iterator-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Iterator-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ()}}}})
"J"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "suite" "J.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.suite.J" () 37 9 ("jazz")
      {Lisp-Entry "J" () 40 11 ("I")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "J.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.J" () 37 9 ("jazz")
      {Lisp-Entry "J" () 40 11 ("I")}}})
"JDBC-Connection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "connection" "jdbc" "JDBC-Connection.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.connection.jdbc.JDBC-Connection" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Connection" () 45 7 ("Connection")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "destroy-connection" () 51 11 ("nextmethod" "set!" "close" "handle" "when")}
        {Lisp-Entry "get-handle" () 63 18 ("handle")}
        {Lisp-Entry "open" () 72 11 ("nextmethod" "handle" "set!" "getConnection" "connection" "get-password" "password" "get-username" "username" "get-connection-string" "url" "let*" "org.jazzscheme.java.Runtime" "getRuntime" "runtime" "let" "preload-drivers" "rest" "data-source")}
        {Lisp-Entry "Drivers-Loaded?" () 83 14 ("false")}
        {Lisp-Entry "preload-drivers" () 87 11 ("true" "set!" "load-drivers" "Drivers-Loaded?" "unless")}
        {Lisp-Entry "load-drivers" () 93 11 ("forName" "driver" "dynamic" "function" "for-each" "org.jazzscheme.java.Runtime" "getRuntime" "runtime" "jdbc-drivers" "drivers" "get-user" "user" "get-application" "appl" "let*")}
        {Lisp-Entry "get-state" () 109 11 ("open")}
        {Lisp-Entry "new-request" () 118 11 ("self" "JDBC-Request" "new")}
        {Lisp-Entry "supports-multirequests?" () 123 11 ("false")}
        {Lisp-Entry "execute" () 132 11 ("execute" "new-request" "request" "with-closed" "command")}}}})
"JDBC-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Data-Source.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Data-Source" () 46 7 ("Data-Source")
        {Lisp-Entry "url" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "schemas" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "table-types" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "external-name" () 55 16 ("jdbc" "rest")}
        {Lisp-Entry "new-inventory" () 64 11 ("password" "username" "table-types" "schemas" "url" "JDBC-Inventory" "new" "rest" "connection")}
        {Lisp-Entry "new-connection" () 73 11 ("self" "JDBC-Connection" "new")}
        {Lisp-Entry "get-connection-string" () 77 11 ("url")}
        {Lisp-Entry "get-connection-properties" () 81 11 ("password" "password:" "username" "username:" "table-types" ":table-types" "schemas" ":schemas" "url" ":url" "list")}
        {Lisp-Entry "present" () 94 11 ("url" "format")}
        {Lisp-Entry "present-detailed" () 98 11 ("table-types" "schemas" "url" "format" ":bulleted" "list")}
        {Lisp-Entry "get-class-presentation" () 112 16 ()}
        {Lisp-Entry "property-presentation" () 117 16 ("nextmethod" "else" "table-types" "schemas" "url" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 125 11 ("nextmethod" "else" "table-types" "schemas" "true" "nullable?:" "String-Row" "new" "url" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 133 11 ("password" "username" "table-types" "schemas" "url" "class-info")}}}})
"JDBC-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Datatype.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Datatype" () 46 7 ("Datatype")
        {Lisp-Entry "DATATYPES" () 49 20 ("BOOLEAN" "DATALINK" "REF" "CLOB" "BLOB" "ARRAY" "STRUCT" "DISTINCT" "JAVA_OBJECT" "OTHER" "0" "NULL" "LONGVARBINARY" "VARBINARY" "BINARY" "TIMESTAMP" "TIME" "DATE" "LONGVARCHAR" "VARCHAR" "1" "CHAR" "3" "DECIMA" "2" "NUMERIC" "8" "DOUBLE" "7" "REAL" "6" "FLOAT" "BIGINT" "4" "INTEGER" "5" "SMALLINT" "TINYINT" "BIT")}
        {Lisp-Entry "datatype-name" () 82 23 ("DATATYPES" "value->name" "symbol->string" "no")}
        {Lisp-Entry "get-systypes" () 86 16 ("Systype")}}}})
"JDBC-Inventory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory" () 45 7 ("Inventory")
        {Lisp-Entry "schemas" () 48 8 ()}
        {Lisp-Entry "table-types" () 49 8 ()}
        {Lisp-Entry "metadata" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("setup-metadata" "table-types~self" "schemas~self" "set!" "nextmethod" "rest" "password" "table-types" "schemas" "url" "connection")}
        {Lisp-Entry "setup-metadata" () 60 11 ("connection" "get-handle" "getMetaData" "metadata" "set!")}
        {Lisp-Entry "get-schemas" () 69 18 ("schemas")}
        {Lisp-Entry "get-table-types" () 73 18 ("table-types")}
        {Lisp-Entry "get-metadata" () 77 18 ("metadata")}
        {Lisp-Entry "get-version" () 86 11 ("getDatabaseMinorVersion" "metadata" "getDatabaseMajorVersion" "Version" "new")}
        {Lisp-Entry "match-schema" () 97 11 ("schemas" "Regular-Expression" "new" "match" "null?" "or" "schema")}
        {Lisp-Entry "match-table-type" () 102 11 ("table-types" "Regular-Expression" "new" "match" "table-type")}
        {Lisp-Entry "get-tables" () 111 11 ("get-output" "self" "JDBC-Inventory-Table" "put" "resultset" "name" "schema" "dynamic" "function" "for-each-table" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "get-table-names" () 121 11 ("get-output" "cons" "put" "resultset" "name" "schema" "dynamic" "function" "for-each-table" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "for-each-table" () 129 11 ("match-table-type" "match-schema" "and" "when" "table-type" "name" "getString" "schema" "next" "while" "list" "metadata" "getTables" "resultset" "let" "proc")}
        {Lisp-Entry "get-views" () 146 11 ("get-output" "self" "JDBC-Inventory-View" "put" "match-schema" "when" "getString" "schema" "next" "while" "List-Factory" "new" "fact" "list" "metadata" "getTables" "resultset" "let")}
        {Lisp-Entry "get-relations" () 162 11 ("get-output" "close" "put-sequence" "if" "table" "get-table-relations" "relations" "name" "schema" "bind" "info" "dynamic" "function" "for-each" "get-table-names" "table-names" "List-Factory" "new" "fact" "let")}}}})
"JDBC-Inventory-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory-Column.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory-Column" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory-Column" () 45 7 ("Inventory-Column")
        {Lisp-Entry "title" () 48 8 ()}
        {Lisp-Entry "datatype" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("column-datatype" "datatype" "getString" "title" "set!" "false" "nextmethod" "resultset" "parent" "inventory")}
        {Lisp-Entry "column-datatype" () 59 11 ("new-datatype" "size" "getInt" "JDBC-Datatype" "datatype-name" "type" "let" "resultset")}
        {Lisp-Entry "get-title" () 70 11 ("title")}
        {Lisp-Entry "get-datatype" () 74 11 ("datatype")}
        {Lisp-Entry "get-size" () 78 11 ("datatype" "get-size")}
        {Lisp-Entry "get-ordinal-position" () 83 11 ("0")}}}})
"JDBC-Inventory-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory-Constraint.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory-Constraint" () 45 7 ("System" "Utilities" "Language" "Kernel" "Inventory-Constraint")}}})
"JDBC-Inventory-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory-Index.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory-Index" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory-Index" () 45 7 ("Inventory-Index")}}})
"JDBC-Inventory-Primary-Key"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory-Primary-Key.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory-Primary-Key" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory-Primary-Key" () 45 7 ("Inventory-Primary-Key")}}})
"JDBC-Inventory-Procedure"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory-Procedure.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory-Procedure" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory-Procedure" () 45 7 ("Inventory-Procedure")}}})
"JDBC-Inventory-Relation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory-Relation.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory-Relation" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory-Relation" () 45 7 ("Inventory-Relation")}}})
"JDBC-Inventory-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory-Table.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory-Table" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory-Table" () 45 7 ("Inventory-Table")
        {Lisp-Entry "owner" () 48 8 ()}
        {Lisp-Entry "name" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("name" "getString" "owner" "set!" "nextmethod" "resultset" "parent" "inventory")}
        {Lisp-Entry "get-owner" () 63 11 ("owner")}
        {Lisp-Entry "get-name" () 67 11 ("name")}
        {Lisp-Entry "get-title" () 71 11 ("append" "name" "owner" "null?" "if")}
        {Lisp-Entry "get-columns" () 82 11 ("get-output" "self" "JDBC-Inventory-Column" "put" "next" "while" "List-Factory" "new" "fact" "name" "owner" "getColumns" "resultset" "inventory" "get-metadata" "metadata" "let*")}}}})
"JDBC-Inventory-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Inventory-View.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Inventory-View" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Inventory-View" () 46 7 ("Inventory-View")
        {Lisp-Entry "title" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("getString" "title" "set!" "nextmethod" "resultset" "parent" "inventory")}
        {Lisp-Entry "get-title" () 62 11 ("title")}
        {Lisp-Entry "get-text" () 67 11 ()}}}})
"JDBC-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "jdbc" "JDBC-Provider.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.jdbc.JDBC-Provider" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Provider" () 45 7 ("Provider")
        {Lisp-Entry "external-name" () 48 11 ("jdbc")}
        {Lisp-Entry "get-datatype" () 57 11 ("JDBC-Datatype")}
        {Lisp-Entry "present" () 66 11 ()}}}})
"JDBC-Recordset"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "connection" "jdbc" "JDBC-Recordset.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.connection.jdbc.JDBC-Recordset" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Recordset" () 45 7 ("Recordset")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "setup-recordset" () 51 11 (":handle" "getf" "handle" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "get-handle" () 61 18 ("handle")}
        {Lisp-Entry "opened?" () 70 11 ("handle" "not-null?")}
        {Lisp-Entry "open" () 74 11 ("executeQuery" "handle" "set!" "1" "+" "setMaxRows" "neq?" "when" "get-handle" "createStatement" "statement" "let" "true" "max-load" "max-load:" "connection" "connection:" "command")}
        {Lisp-Entry "get-state" () 88 11 ("open")}
        {Lisp-Entry "new-recordset-metadata" () 97 11 ("handle" "getMetaData" "JDBC-Recordset-Metadata" "new")}
        {Lisp-Entry "get-field-type" () 101 11 ("1" "+" "get-handle" "getColumnTypeName" "field" "metadata")}
        {Lisp-Entry "get-field-value" () 105 11 ("1" "+" "handle" "getString" "field" "metadata")}
        {Lisp-Entry "next-recordset!" () 114 11 ()}
        {Lisp-Entry "move-first" () 123 11 ("move-first" "unimplemented")}
        {Lisp-Entry "move-last" () 127 11 ("move-last" "unimplemented")}
        {Lisp-Entry "move-next" () 131 11 ("move-next" "unimplemented")}
        {Lisp-Entry "move-previous" () 135 11 ("move-previous" "unimplemented")}
        {Lisp-Entry "at-bof?" () 139 11 ("at-bof?" "unimplemented")}
        {Lisp-Entry "at-eof?" () 143 11 ("handle" "isAfterLast")}
        {Lisp-Entry "iterate-records" () 147 11 ("handle" "next" "and" "while" "proc")}}}})
"JDBC-Recordset-Metadata"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "connection" "jdbc" "JDBC-Recordset-Metadata.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.connection.jdbc.JDBC-Recordset-Metadata" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Recordset-Metadata" () 45 7 ("Recordset-Metadata")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("handle" "set!" "nextmethod" "hnd")}
        {Lisp-Entry "get-handle" () 61 18 ("handle")}
        {Lisp-Entry "get-count" () 70 11 ("handle" "getColumnCount")}
        {Lisp-Entry "get-field" () 74 11 ("field-name")}
        {Lisp-Entry "get-field-name" () 78 11 ("1" "+" "handle" "getColumnName" "field")}
        {Lisp-Entry "get-field-type" () 82 11 ("1" "+" "handle" "getColumnTypeName" "field")}
        {Lisp-Entry "get-field-size" () 86 11 ("1" "+" "handle" "getColumnDisplaySize" "field")}
        {Lisp-Entry "get-field-precision" () 90 11 ("1" "+" "handle" "getPrecision" "field")}}}})
"JDBC-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "connection" "jdbc" "JDBC-Request.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.connection.jdbc.JDBC-Request" () 37 9 ("jazz")
      {Lisp-Entry "JDBC-Request" () 45 7 ("Request")
        {Lisp-Entry "new-recordset" () 48 11 ("connection" "connection:" "JDBC-Recordset" "new" "apply" "rest" "request")}
        {Lisp-Entry "execute" () 57 11 ("executeUpdate" "connection" "get-handle" "createStatement" "statement" "let" "command")}}}})
"JML-Element"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "model" "JML-Element.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jml.model.JML-Element" () 37 9 ("jazz")
      {Lisp-Entry "JML-Element" () 45 7 ("JML-Node")
        {Lisp-Entry "tag" () 48 8 ()}
        {Lisp-Entry "properties" () 49 8 ()}
        {Lisp-Entry "children" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("properties~self" "tag~self" "set!" "nextmethod" "properties" "properties:" "tag" "parent")}
        {Lisp-Entry "print" () 59 11 ("tag" "format" "properties" "null?" "if" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "clone" () 67 18 ("set-children" "properties" "set-properties" "tag" "JML-Element" "new" "clone" "let" "children" "children:" "parent" "parent:")}
        {Lisp-Entry "get-tag" () 79 18 ("tag")}
        {Lisp-Entry "get-properties" () 83 18 ("properties")}
        {Lisp-Entry "set-properties" () 87 18 ("properties" "set!" "value")}
        {Lisp-Entry "get-children" () 91 18 ("children")}
        {Lisp-Entry "set-children" () 95 18 ("children" "set!" "value")}
        {Lisp-Entry "has-property?" () 104 18 ("not-found:" "key:" "properties" "getf" "neq?" "Box" "not-found" "symbolize-property" "symbol" "let" "property")}
        {Lisp-Entry "get-property" () 110 18 ("cddr" "set!" "cadr" "=" "if" "car" "not-null?" "while" "return" "lambda" "call/ec" "properties" "scan" "symbolize-property" "symbol" "let" "not-found" "property")}
        {Lisp-Entry "set-property" () 123 18 ("list" "append" "cddr" "set!" "cdr" "set-car!" "begin" "=" "if" "car" "not-null?" "while" "return" "lambda" "call/ec" "properties" "scan" "symbolize-property" "symbol" "let" "value" "property")}
        {Lisp-Entry "remove-property" () 138 18 ("get-output" "set!" "properties" "put" "/=" "when" "value" "property" "dynamic" "function" "for-each-property" "List-Factory" "new" "fact" "symbolize-property" "symbol" "let" "target")}
        {Lisp-Entry "Flattened-Tags" () 154 14 ("span" "input" "img" "div")}
        {Lisp-Entry "first-child" () 158 18 ("children" "car")}
        {Lisp-Entry "add-child" () 162 26 ("list" "append!" "children" "set!" "node")}
        {Lisp-Entry "composite?" () 166 18 ("simple?" "not")}
        {Lisp-Entry "simple?" () 170 18 ("JML-Text" "sub" "dynamic" "function" "every?" "simple?" "Flattened-Tags" "get-tag" "memq?" "JML-Element" "is?" "car" "child" "length" "1" "=" "and" "or" "effective-children" "children" "let")}
        {Lisp-Entry "effective-children" () 182 11 ("children")}
        {Lisp-Entry "find-by" () 186 18 ("children" "find-if" "predicate")}
        {Lisp-Entry "find-node" () 190 18 ("get-tag" "=" "JML-Element" "is?" "and" "child" "dynamic" "function" "find-by" "tag")}
        {Lisp-Entry "find-name" () 197 26 ("get-property" "=" "JML-Element" "is?" "and" "child" "dynamic" "function" "find-by" "name")}
        {Lisp-Entry "find-property" () 204 18 ("get-property" "=" "JML-Element" "is?" "and" "child" "dynamic" "function" "find-by" "value" "property")}
        {Lisp-Entry "get-child-text" () 211 18 ("first-child" "get-text")}
        {Lisp-Entry "get-child-location" () 220 11 ("children" "get-rank" "properties" "length" "1" "+" "list" "child")}
        {Lisp-Entry "->jml" () 231 11 ("children->jml" "properties->jml" "tag->jml")}
        {Lisp-Entry "tag->jml" () 235 18 ("tag" "format" "string->symbol")}
        {Lisp-Entry "properties->jml" () 239 18 ("get-output" "properties" "property->jml" "put" "value" "property" "dynamic" "function" "for-each-property" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "property->jml" () 248 18 ("format" "string->symbol" "property")}
        {Lisp-Entry "children->jml" () 252 18 ("children" "->jml" "child" "dynamic" "function" "map")}}}})
"JML-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "text" "JML-Explorer.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jazz.jml.text.JML-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "JML-Explorer" () 45 7 ("CppJava-Explorer")}}})
"JML-Node"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "model" "JML-Node.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jml.model.JML-Node" () 37 9 ("jazz")
      {Lisp-Entry "JML-Node" () 45 7 ("Object")
        {Lisp-Entry "parent" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("self" "add-child" "when" "parent~self" "set!" "nextmethod" "parent")}
        {Lisp-Entry "get-parent" () 63 18 ("parent")}
        {Lisp-Entry "set-parent" () 67 18 ("self" "add-child" "when" "parent" "set!" "value")}
        {Lisp-Entry "set-parent-value" () 73 18 ("parent" "set!" "value")}
        {Lisp-Entry "get-toplevel" () 82 18 ("get-toplevel" "self" "parent" "not" "if")}
        {Lisp-Entry "get-location" () 93 18 ("self" "get-child-location" "get-location" "append" "parent" "not" "if")}
        {Lisp-Entry "get-child-location" () 100 26 ("child")}
        {Lisp-Entry "->jml" () 109 35 ()}
        {Lisp-Entry "pretty-print" () 118 18 ("child" "for-each" "car" "null?" "1" "=" "get-children" "children" "hash-ref" "max" "neq?" "property" "for-each-property" ">" "pres" "get-property" "value" "7" "+" "has-property?" "align-name?" "length" "-" "pad" "not-null?" "space-properties?" "and" ":reader" ":human" "readably" "case" "get-properties" "properties" "cons" "symbol->string" "name" "get-tag" "tag" "let*" "single-line?" "get-text" "text" "JML-Text" "is?" "if" "false" "set!" "2" "*" "indent-first?" "or" "format" "not" "when" "level" "path" "node" "iterate" "letrec" "align-properties?" "base" "self" "compute-maxes" "maxes" "max-name" "max-tag" "receive" "true" "first?" "let" "dynamic" "function" "with-printer" "printer")}
        {Lisp-Entry "compute-maxes" () 190 11 ("values" "get-children" "1" "child" "for-each" "get-properties" "hash-set!" "hash-ref" "max" "eq?" "format" "value" "property" "for-each-property" "set!" ">" "not" "or" "2" "*" "length" "+" "width" "cons" "symbol->string" "name" "get-tag" "tag" "let*" "JML-Element" "is?" "when" "level" "path" "dynamic" "function" "iterate" "letrec" "equal?" "new-hashtable" "essay" "maxes" "max-name" "max-tag" "let" "align-properties?" "base" "node")}}}})
"JML-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "parser" "JML-Parser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jml.parser.JML-Parser" () 37 9 ("jazz")
      {Lisp-Entry "JML-Parser-Class" () 45 7 ("Class")
        {Lisp-Entry "patterns" () 48 8 ()}
        {Lisp-Entry "get-patterns" () 51 18 ("patterns")}
        {Lisp-Entry "add-pattern" () 55 18 ("cons" "set!" "patterns" "memq?" "unless" "pattern")}
        {Lisp-Entry "has-pattern?" () 60 18 ("type-ascendant" "true" "set!" "memq?" "if" "get-patterns" "patterns" "JML-Parser" "neq?" "not" "and" "while" "false" "found?" "self" "class" "let" "tag")}}
      {Lisp-Entry "JML-Parser" () 70 7 ("Object" "JML-Parser-Class")
        {Lisp-Entry "preferences" () 80 8 ()}
        {Lisp-Entry "initialize" () 83 11 ("preferences~self" "set!" "nextmethod" "preferences" "preferences:")}
        {Lisp-Entry "get-preferences" () 93 18 ("preferences")}
        {Lisp-Entry "parse" () 102 18 ("parse-expr" "parse-reader" "Reader" "is?" "if" "reader/expr")}
        {Lisp-Entry "parse-reader" () 108 11 ("read" "parse-expr" "reader")}
        {Lisp-Entry "parse-expr" () 112 11 ("parse-any" "expr" "parent")}
        {Lisp-Entry "parse-any" () 116 11 ("parse-noexpand" "parse-pattern" "pattern-expr?" "if" "object" "parent")}
        {Lisp-Entry "parse-noexpand" () 122 11 ("error" "else" "parse-expr" "sub" "dynamic" "function" "map" "parse-new-node" "car" "symbol?" "pair?" "and" "parse-node" "tagged-expr?" "set-parent" "JML-Node" "is?" "not" "cond" "object" "parent")}
        {Lisp-Entry "parse-pattern" () 140 11 ("parse-any" "parse-noexpand" "eq?" "pair?" "and" "if" "expand-pattern" "expansion" "tag->name" "tag" "car" "first" "let*" "pattern" "parent")}
        {Lisp-Entry "parse-node" () 149 11 ("parse-new-node" "parse-jml-node" "tag?" "if" "car" "first" "let" "expr" "parent")}
        {Lisp-Entry "parse-new-node" () 156 11 ("set-children" "when" "parse-children" "children" "new" "apply" "node" "let*" "true" ":keywords?" "parse-jml-properties/children" "children-list" "properties-list" "receive" "autoload" "class" "let" "rest" "model" "bind" "expr" "parent")}
        {Lisp-Entry "parse-jml-expr" () 167 11 ("values" "parse-jml-properties/children" "children-list" "properties-list" "receive" "tag->name" "tag" "let" "rest" "first" "bind" "expr")}
        {Lisp-Entry "parse-jml-node" () 174 11 ("set-properties" "parse-children" "children" "parse-properties" "properties" "JML-Element" "new" "node" "let*" "parse-jml-properties/children" "children-list" "properties-list" "receive" "tag->name" "tag" "let" "rest" "first" "bind" "expr" "parent")}
        {Lisp-Entry "parse-properties" () 185 11 ("get-output" "put" "validate-property" "parse-property" "error" "ends-with?" "starts-with?" "or" "if" "symbol->string" "name" "value" "property" "dynamic" "function" "for-each-property" "List-Factory" "new" "fact" "let" "properties")}
        {Lisp-Entry "parse-children" () 199 11 ("get-output" "add-nodes" "parse-expr" "jml" "JML-Text" "put" "string?" "if" "element" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let" "children" "parent")}
        {Lisp-Entry "add-nodes" () 210 11 ("put" "add-nodes" "node" "dynamic" "function" "for-each" "pair?" "null?" "or" "if" "nodes" "fact")}
        {Lisp-Entry "parse-property" () 218 11 ("parse-value" "parse-property" "map" ":string" "car" "eq?" "pair?" "and" "if" "value")}
        {Lisp-Entry "parse-value" () 224 11 ("parse-path" "Path" "is?" "if" "value")}
        {Lisp-Entry "parse-path" () 230 11 (":use-generator?" "get-alias" "cons" "append" "apply" "get-path" "path" "alias" "bind" "true" "use-generator?" "use-generator?:" "value")}
        {Lisp-Entry "tag-valid?" () 235 29 ("true" "tag")}
        {Lisp-Entry "validate-tag" () 239 29 ("error" "tag-valid?" "unless" "tag")}
        {Lisp-Entry "validate-property" () 244 29 ("value" "property")}
        {Lisp-Entry "parse-result" () 253 11 ("parse-noexpand" "expr")}
        {Lisp-Entry "pattern-expr?" () 259 11 ("has-pattern?" "tag->name" "tag" "self" "class-of" "class" "tag?" "car" "first" "let" "pair?" "and" "expr")}
        {Lisp-Entry "tagged-expr?" () 268 11 ("tag?" "car" "first" "let" "pair?" "and" "expr")}
        {Lisp-Entry "expand-pattern" () 274 11 ("self" "eval-symbol" "proc" "let" "tag" "tree")}
        {Lisp-Entry "get-alias" () 284 29 ("error" "rest" "name")}}}})
"JML-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "preferences" "JML-Preferences.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jazz.jml.preference.JML-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "JML-Preferences" () 44 7 ("Component")
        {Lisp-Entry "target" () 47 12 ("generate" "accessors")}
        {Lisp-Entry "jml-directory" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "html-directory" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "debug-tables?" () 50 12 ("generate" "accessors" "false")}
        {Lisp-Entry "debug-colors?" () 51 12 ("generate" "accessors" "false")}
        {Lisp-Entry "tab-size" () 52 12 ("generate" "accessors" "2")}
        {Lisp-Entry "get-class-presentation" () 60 16 ()}
        {Lisp-Entry "get-class-image" () 65 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 70 16 ("nextmethod" "else" "tab-size" "debug-colors?" "debug-tables?" "html-directory" "jml-directory" "target" "field-name" "case" "property")}
        {Lisp-Entry "get-presentation" () 81 11 ()}
        {Lisp-Entry "get-categorized-properties" () 85 11 ("tab-size" "debug-colors?" "debug-tables?" "html-directory" "jml-directory" "target")}
        {Lisp-Entry "get-row-instance" () 89 11 ("nextmethod" "else" "Integer-Row" "tab-size" "Boolean-Row" "debug-colors?" "debug-tables?" "Directory-Row" "html-directory" "jml-directory" "String-Row" "new" "target" "field-name" "case" "property")}}}})
"JML-Renderer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "renderer" "JML-Renderer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jml.renderer.JML-Renderer" () 37 9 ("jazz")
      {Lisp-Entry "JML-Renderer" () 40 7 ("Object")
        {Lisp-Entry "preferences" () 43 8 ()}
        {Lisp-Entry "initialize" () 46 11 ("preferences~self" "set!" "nextmethod" "preferences")}
        {Lisp-Entry "render" () 56 26 ("printer" "jml")}
        {Lisp-Entry "render-node" () 60 26 ("printer" "level" "mix?" "simple?" "jml" "context")}}}})
"JML-SQL"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "JML-SQL.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "load-schedule-data" () 3 11 ("Data-Schedule" ":data-class" "load-request" "get-connection" "d.intCommunity" "s.intCommunityOCDepartment" "h.intOCSchedule" "e.intOCScheduleShift" "=" "in" "e" "tblOCScheduleEvent" "h" "tblOCScheduleShift" "s" "tblOCSchedule" "d" "tblCommunityOCDepartment" "c" "as:" "tblCommunity" "e.intUser" "e.dteEnd" "e.dteStart" "e.intType" "e.intOCScheduleEvent" "h.intNextDay" "h.txtEnd" "h.txtStart" "h.txtShift" "h.intOCScheduleShift" "s.dteEnd" "s.dteStart" "s.txtName" "s.intOCSchedule" "d.txtName" "d.intCommunityOCDepartment" "c.txtName" "c.intCommunity" "name:" "request" "->string" "map" "join" "format" "id-list" "let*" "schedules" "connection")}})
"JML-Text"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "model" "JML-Text.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jml.model.JML-Text" () 37 9 ("jazz")
      {Lisp-Entry "JML-Text" () 45 7 ("JML-Node")
        {Lisp-Entry "text" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("text~self" "set!" "nextmethod" "text" "parent")}
        {Lisp-Entry "print" () 56 11 ("text" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-text" () 67 18 ("text")}
        {Lisp-Entry "set-text" () 71 18 ("text" "set!" "value")}
        {Lisp-Entry "->jml" () 80 11 ("text")}
        {Lisp-Entry "multi-line?" () 89 18 ("text" "find")}
        {Lisp-Entry "single-line?" () 93 18 ("multi-line?" "not")}}}})
"JML-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "text" "JML-Text-Preferences.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jazz.jml.text.JML-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "JML-Text-Preferences" () 47 7 ("title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "line-comment-color" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "definition-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "keyword-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "specifier-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "keywords" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "completions" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 69 11 ("specifier-color" "keyword-color" "definition-color" "line-comment-color" "title-color" "completions" "keywords")}
        {Lisp-Entry "get-row-instance" () 75 11 ("nextmethod" "else" "Completion-List-Row" "completions" "Color-Row" "new" "specifier-color" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}}}})
"JML-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "text" "JML-Text-View.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.jml.text.JML-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "JML-Text-View" () 46 7 ("Code-Text-View")
        {Lisp-Entry "install" () 49 11 ("get-specifier-color" "Specifier" "get-keyword-color" "Keyword" "get-definition-color" "Definition" "get-line-comment-color" "Line-Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 60 16 ("jml-text" "rest")}
        {Lisp-Entry "preferences" () 64 11 ("jml-text" "documents" "get-preferences")}
        {Lisp-Entry "get-constituent-test" () 68 16 ("cpp/java-constituent?")}
        {Lisp-Entry "frame-workspaces" () 77 11 ("text")}
        {Lisp-Entry "favorite-completions" () 86 11 ("jml-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "commented?" () 90 11 ("Line-Comment" "Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "explorer-class" () 102 11 ("JML-Explorer")}
        {Lisp-Entry "get-context" () 111 11 ("jml")}
        {Lisp-Entry "current-name" () 115 11 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" () 119 11 ("read-string-element" "element" "=" "if" "0" "length" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" () 128 11 ("current-name")}
        {Lisp-Entry "current-expr-range" () 132 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 138 11 ("get-range" "outer-expr" "end:" "start:" "self" "JML-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" () 144 11 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" () 153 12 ("list")}
        {Lisp-Entry "get-headers" () 158 11 ("headers")}
        {Lisp-Entry "get-first-special?" () 162 11 ("false")}
        {Lisp-Entry "Definitions" () 171 12 ()}
        {Lisp-Entry "get-definitions" () 175 11 ("Definitions")}
        {Lisp-Entry "Keywords" () 184 12 ()}
        {Lisp-Entry "get-keywords" () 188 29 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" () 197 14 ()}
        {Lisp-Entry "Syntax-Automata" () 200 14 ()}
        {Lisp-Entry "syntax-targets" () 204 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 210 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 216 11 ("get-keywords" "keyword" "get-definitions" "definition" "str" "dynamic" "function" "map" "false" "line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" () 222 11 ("cpp/java-constituent?" "self" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-syntax" () 226 11 ("colorize-comments" "colorize-declarations" "dynamic" "function" "with-safe-explore" "rest")}
        {Lisp-Entry "colorize-type" () 233 11 ("Keyword" "keyword" "Definition" "colorize-keyword" "definition" "Title" "Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}}})
"JML-Transformation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "transformation" "JML-Transformation.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jml.transformation.JML-Transformation" () 37 9 ("jazz")
      {Lisp-Entry "JML-Transformation-Class" () 45 7 ("Class")
        {Lisp-Entry "patterns" () 48 8 ()}
        {Lisp-Entry "get-patterns" () 51 18 ("patterns")}
        {Lisp-Entry "add-pattern" () 55 18 ("cons" "set!" "patterns" "memq?" "unless" "pattern")}
        {Lisp-Entry "has-pattern?" () 60 18 ("type-ascendant" "true" "set!" "memq?" "if" "get-patterns" "patterns" "JML-Transformation" "neq?" "not" "and" "while" "false" "found?" "self" "class" "let" "tag")}}
      {Lisp-Entry "JML-Transformation" () 71 7 ("Object" "JML-Transformation-Class")
        {Lisp-Entry "parser" () 79 8 ()}
        {Lisp-Entry "initialize" () 82 11 ("JML-Parser" "either" "new" "parser~self" "set!" "nextmethod" "parser-class" "parser-class:")}
        {Lisp-Entry "transform" () 92 26 ("transform-jml" "parser" "parse" "node")}
        {Lisp-Entry "transform-jml" () 96 18 ("get-children" "transform-jml" "map" "properties->jml" "tag->jml" "get-text" "JML-Text" "is?" "if" "transform-one" "new-node" "let" "node")}
        {Lisp-Entry "transform-one" () 104 11 ("transform-pattern" "parser" "parse" "node-pattern?" "if" "node")}
        {Lisp-Entry "transform-pattern" () 110 11 ("self" "eval-symbol" "proc" "get-tag" "tag" "let*" "node")}
        {Lisp-Entry "node-pattern?" () 121 11 ("has-pattern?" "self" "class-of" "class" "get-tag" "tag" "let" "JML-Element" "is?" "and" "node")}}}})
"JML-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "viewer" "JML-Viewer.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.jml.viewer.JML-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "JML-Viewer" () 47 7 ("notes" "notes-border" "monospace?:" "underline?:" "italic?:" "bold?:" "color:" "point-size:" "font-name:" "Font" "font:" "Default" "Text-Style" "default-style:" "text" "text-border" "vert" "second" "width:" "on-selection-change" "form:" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "jml-tree" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "first" "jml-border" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "center" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "title:" "Layout-View")
        {Lisp-Entry "document" () 50 12 ("set-document" "get-document")}
        {Lisp-Entry "finish" () 75 11 ("refresh" "nextmethod" "initargs")}
        {Lisp-Entry "frame-icon" () 86 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 91 16 ()}
        {Lisp-Entry "frame-position" () 96 16 ("Point")}
        {Lisp-Entry "frame-size" () 101 16 ("Point")}
        {Lisp-Entry "frame-workspaces" () 105 11 ("home")}
        {Lisp-Entry "get-document" () 114 18 ("document")}
        {Lisp-Entry "set-document" () 118 18 ("refresh" "document" "set!" "value")}
        {Lisp-Entry "resize" () 128 11 ("notes-border" "text-border" "0" "jml-border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "refresh" () 135 18 ("view-text" "document" "view-tree" "clear-node")}
        {Lisp-Entry "clear-node" () 141 11 ("clear-all" "notes" "locate" "text" "let")}
        {Lisp-Entry "view-tree" () 153 11 ("insert-node" "node" "for-each" "collect-children" "child-nodes" "get-childNodes" "lst" "with-closed" "hasChildNodes" "and" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "jml-tree" "locate" "tree" "let" "document")}
        {Lisp-Entry "insert-node" () 166 11 ("insert-node" "subnode" "dynamic" "function" "for-each" "collect-children" "child-nodes" "get-childNodes" "lst" "with-closed" "hasChildNodes" "when" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "subfather" "get-nodeName" "title" "jml-tree" "locate" "tree" "let*" "father" "node")}
        {Lisp-Entry "collect-children" () 178 11 ("get-item" "collect" "get-length" "below" "0" "from" "n" "for" "loop" "lst")}
        {Lisp-Entry "view-text" () 183 11 ("get-jml" "set-string-content" "clear-all" "null?" "if" "locate" "text" "let" "document")}
        {Lisp-Entry "describe-node" () 190 11 ("get-nodeType" "get-nodeValue" "get-nodeName" "insert-bulleted-line" "locate" "notes" "let" "node")}
        {Lisp-Entry "on-selection-change" () 202 11 ("describe-node" "get-row" "get-user-data" "node" "when" "get-single-selection" "selection" "jml-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}}}})
"JSP-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "jsp" "JSP-Text-View.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.jsp.JSP-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "JSP-Text-View" () 46 7 ("Java-Text-View")
        {Lisp-Entry "external-name" () 50 16 ("jsp-text" "rest")}
        {Lisp-Entry "frame-workspaces" () 59 11 ("java")}}}})
"JVM"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "runtime" "JVM.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.java.runtime.JVM" () 37 9 ("jazz")
      {Lisp-Entry "JVM" () 45 7 ("jvm-get-method-id" "rest" "int" "jvm-new-object" "ansistring" "jvm-find-class" "jvm-destroy" "jvm-setup" "Object")
        {Lisp-Entry "setup-jvm" () 48 23 ("Ansi-String" "build-option" "coerce" "parse" "jvm-setup" "classpath" "classpath:" "jvm-dll" "jvm-dll:")}
        {Lisp-Entry "build-option" () 52 16 ("Java" "parse-classpath" "format" "classpath")}
        {Lisp-Entry "destroy-jvm" () 56 23 ("jvm-destroy")}
        {Lisp-Entry "new-object" () 65 23 ("jvm-new-object" "apply" "object" "get-method" "method" "proxy-parameters" "parameter-types" "javaexternal-signature" "signature" "get-node-procedure" "external" "find-constructor" "node" "Interpreter" "generic-dispatcher" "dispatcher" "category-field" "definition-value" "generic" "java-class" "class" "let*" "parameters" "jazz-class")}
        {Lisp-Entry "find-constructor" () 78 16 ("car" "else" "cdr" "not-null?" "error" "null?" "cond" "class-of" "map" "find-generics" "nodes" "let" "parameters" "dispatcher")}
        {Lisp-Entry "find-class" () 85 23 ("Java" "period->slash-notation-ansi" "jvm-find-class" "name")}
        {Lisp-Entry "class-exists?" () 89 23 ("true" "find-class" "false" "exception" "Java-Exception" "catch" "name")}
        {Lisp-Entry "get-method" () 97 23 ("Ansi-String" "coerce" "java-class" "jvm-get-method-id" "signature" "name" "jazz-class")}
        {Lisp-Entry "void" () 106 22 ()}
        {Lisp-Entry "void" () 107 22 ()}
        {Lisp-Entry "int" () 108 22 ()}
        {Lisp-Entry "int" () 109 22 ()}
        {Lisp-Entry "int" () 110 22 ()}}}})
"JX"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "JX.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.JX" () 37 9 ("jazz")
      {Lisp-Entry "JX" () 45 7 ("Object")
        {Lisp-Entry "a" () 48 8 ("generate")}
        {Lisp-Entry "b" () 49 8 ("generate" "2")}
        {Lisp-Entry "test" () 52 11 ("g" "f")}
        {Lisp-Entry "access2" () 57 11 ("b" "a" "list")}
        {Lisp-Entry "f" () 61 11 ("3" "2" "1" "h" "map" "g" "list")}
        {Lisp-Entry "g" () 65 26 ("self")}
        {Lisp-Entry "h" () 69 26 ("*" "x")}}}})
"JY"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "JY.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.JY" () 37 9 ("jazz")
      {Lisp-Entry "JY" () 40 7 ("JX")
        {Lisp-Entry "c" () 43 8 ("generate" "5")}
        {Lisp-Entry "d" () 44 8 ("generate" "7")}
        {Lisp-Entry "g" () 47 11 ("nextmethod" "JY.g" "cons")}}}})
"Jad"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "Jad.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.external.Jad" () 8 9 ("jazz")
      {Lisp-Entry "Jad" () 16 7 ("Object")
        {Lisp-Entry "decompile" () 24 18 ("error" "else" "decompile-directory" "Directory" "decompile-file" "File" "typecase" "output" "pathname")}
        {Lisp-Entry "decompile-file" () 31 11 ("false" "visible?:" "directory:" "create-process" "build-command" "command" "let" "create-directories" "parse" "user-message" "output" "file")}
        {Lisp-Entry "decompile-directory" () 40 11 ("recursive?:" "false" "directories?:" "true" "files?:" "decompile-file" "append" "Directory" "new" "output" "get-directory" "trim" "trimed" "let*" "ci=" "when" "get-extension" "ext" "file" "dynamic" "function" "iterate-directory" "list" "get-list" "length" "base" "let" "out" "dir")}
        {Lisp-Entry "trim" () 55 11 ("get-list" "tail" "base" "dir")}
        {Lisp-Entry "build-command" () 64 11 ("parse" "format" "file")}}}})
"Java"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "Java.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "Java" () 42 9 ("jazz")}})
"Java-AST"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "java" "Java-AST.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.java.Java-AST" () 37 9 ("jazz")
      {Lisp-Entry "Java-AST" () 45 7 ("AST")
        {Lisp-Entry "get-type-name" () 53 18 ("get-first-child" "TYPE" "assert-kind")}
        {Lisp-Entry "type-description" () 58 11 ("get-type-name" "description")}
        {Lisp-Entry "get-identifier-name" () 67 18 ("get-text" "IDENT" "assert-kind")}
        {Lisp-Entry "identifier-description" () 72 11 ("get-identifier-name")}
        {Lisp-Entry "get-constructor-name" () 81 18 ("get-first-child" "get-next-sibling" "CTOR_DEF" "assert-kind")}
        {Lisp-Entry "constructor-description" () 86 11 ("get-constructor-name" "description")}
        {Lisp-Entry "get-method-name" () 95 18 ("get-first-child" "get-next-sibling" "METHOD_DEF" "assert-kind")}
        {Lisp-Entry "method-description" () 100 11 ("get-method-name" "description")}
        {Lisp-Entry "get-variable-type" () 109 18 ("get-first-child" "get-next-sibling" "VARIABLE_DEF" "assert-kind")}
        {Lisp-Entry "get-variable-name" () 114 18 ("get-first-child" "get-next-sibling" "VARIABLE_DEF" "assert-kind")}
        {Lisp-Entry "variable-description" () 119 11 ("get-variable-name" "get-variable-type" "description" "format")}
        {Lisp-Entry "get-definition-type" () 130 18 ("self" "error" "else" "variable" "VARIABLE_DEF" "method" "METHOD_DEF" "constructor" "CTOR_DEF" "get-kind" "ecase")}
        {Lisp-Entry "get-definition-name" () 138 18 ("self" "error" "else" "get-variable-name" "VARIABLE_DEF" "get-method-name" "METHOD_DEF" "get-constructor-name" "CTOR_DEF" "get-kind" "ecase")}
        {Lisp-Entry "description" () 151 11 ("nextmethod" "else" "variable-description" "VARIABLE_DEF" "method-description" "METHOD_DEF" "constructor-description" "CTOR_DEF" "identifier-description" "IDENT" "type-description" "TYPE" "get-kind" "ecase")}
        {Lisp-Entry "token-types" () 161 16 ("Token-Types")}
        {Lisp-Entry "Token-Types" () 170 20 ("FLOAT_SUFFIX" "EXPONENT" "VOCAB" "HEX_DIGIT" "ESC" "SL_CONDITIONAL" "WS_" "NUM_FLOAT" "STRING_LITERAL" "CHAR_LITERAL" "NUM_INT" "LITERAL_new" "LITERAL_null" "LITERAL_false" "LITERAL_true" "LITERAL_super" "LITERAL_this" "LNOT" "BNOT" "DEC" "INC" "MOD" "DIV" "MINUS" "PLUS" "BSR" "SR" "SL" "LITERAL_instanceof" "GE" "LE" "GT" "LT_" "EQUAL" "NOT_EQUAL" "BAND" "BXOR" "BOR" "LAND" "LOR" "QUESTION" "BOR_ASSIGN" "BXOR_ASSIGN" "BAND_ASSIGN" "SL_ASSIGN" "BSR_ASSIGN" "SR_ASSIGN" "MOD_ASSIGN" "DIV_ASSIGN" "STAR_ASSIGN" "MINUS_ASSIGN" "PLUS_ASSIGN" "LITERAL_catch" "LITERAL_finally" "LITERAL_try" "LITERAL_default" "LITERAL_case" "LITERAL_assert" "LITERAL_throw" "LITERAL_switch" "LITERAL_return" "LITERAL_continue" "LITERAL_break" "LITERAL_do" "LITERAL_while" "LITERAL_for" "LITERAL_else" "LITERAL_if" "COLON" "LITERAL_throws" "ASSIGN" "ML_COMMENT" "SL_COMMENT" "RPAREN" "LPAREN" "LITERAL_implements" "COMMA" "RCURLY" "LCURLY" "LITERAL_interface" "LITERAL_extends" "LITERAL_class" "LITERAL_volatile" "LITERAL_synchronized" "LITERAL_threadsafe" "LITERAL_native" "LITERAL_transient" "LITERAL_static" "LITERAL_protected" "LITERAL_public" "LITERAL_private" "STAR" "DOT" "IDENT" "LITERAL_double" "LITERAL_long" "LITERAL_float" "LITERAL_int" "LITERAL_short" "LITERAL_char" "LITERAL_byte" "LITERAL_boolean" "LITERAL_void" "RBRACK" "LBRACK" "LITERAL_import" "SEMI" "LITERAL_package" "STRICTFP" "ABSTRACT" "FINAL" "EMPTY_STAT" "FOR_ITERATOR" "FOR_CONDITION" "FOR_INIT" "ELIST" "CASE_GROUP" "UNARY_PLUS" "UNARY_MINUS" "IMPORT" "ARRAY_INIT" "EXPR" "METHOD_CALL" "POST_DEC" "POST_INC" "INDEX_OP" "TYPECAST" "LABELED_STAT" "PARAMETER_DEF" "PARAMETERS" "IMPLEMENTS_CLAUSE" "EXTENDS_CLAUSE" "ARRAY_DECLARATOR" "PACKAGE_DEF" "INTERFACE_DEF" "CLASS_DEF" "TYPE" "STATIC_INIT" "INSTANCE_INIT" "VARIABLE_DEF" "9" "METHOD_DEF" "8" "CTOR_DEF" "7" "SLIST" "6" "OBJBLOCK" "5" "MODIFIERS" "4" "BLOCK")}}}})
"Java-Array"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "runtime" "Java-Array.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.runtime.Java-Array" () 37 9 ("jazz")
      {Lisp-Entry "Java-Array" () 45 7 ("Java-Object")}}})
"Java-Compiler"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "sdk" "Java-Compiler.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.java.sdk.Java-Compiler" () 37 9 ("jazz")
      {Lisp-Entry "Java-Compiler" () 46 7 ("WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "compile" () 54 18 ("report-errors" "EXIT_SUCCESS" "/=" "if" "false" "visible?:" ":capture-error?" "true" ":capture-output?" "create-process" "error-lines" "output-lines" "code" "receive" "build-command" "command" "let" "parse" "user-message" "classpath" "classpath:" "directory" "directory:" "file")}
        {Lisp-Entry "build-command" () 73 11 ("parse" "Java" "parse-classpath" "format" "classpath" "file")}
        {Lisp-Entry "report-errors" () 82 11 ("error" "get-output" "msg" "line" "dynamic" "function" "for-each" "format" "String-Printer" "new" "printer" "let" "lines")}}}})
"Java-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Java-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.entry.Java-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Java-Entry" () 46 7 ("CppJava-Entry")
        {Lisp-Entry "modifiers" () 49 8 ()}
        {Lisp-Entry "qualified" () 50 8 ()}
        {Lisp-Entry "construct-literal" () 54 16 ("self" "new" "definitions" "column" "line" "name" "qualified" "modifiers" "context")}
        {Lisp-Entry "initialize" () 58 11 ("qualified" "modifiers" "set!" "nextmethod" "apply" "rest" "q" "m")}
        {Lisp-Entry "print-catalog" () 64 11 ("print-definitions" "column" "line" "name" "qualified" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "source-frame-type" () 73 11 ("Java-Text-View")}
        {Lisp-Entry "get-modifiers" () 82 11 ("modifiers")}
        {Lisp-Entry "get-qualified" () 86 18 ("qualified")}
        {Lisp-Entry "set-qualified" () 90 18 ("qualified" "set!" "qualified-path")}
        {Lisp-Entry "has-modifier?" () 94 18 ("modifiers" "memq?" "modifier")}
        {Lisp-Entry "get-visibility" () 98 18 ("first" "package" "null?" "if" "modifiers" "private" "protected" "public" "intersection" "common" "let")}}}})
"Java-Exception"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "exception" "Java-Exception.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.java.exception.Java-Exception" () 37 9 ("jazz")
      {Lisp-Entry "Java-Exception" () 45 7 ("Exception")
        {Lisp-Entry "exception" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("exception~self" "set!" "nextmethod" "exception")}
        {Lisp-Entry "get-exception" () 61 18 ("exception")}
        {Lisp-Entry "get-message" () 70 11 ("get-output" "getStackTrace" "getMethodName" "getClassName" "element" "dynamic" "function" "for-each" "getMessage" "exception" "getClass" "getName" "format" "String-Printer" "new" "printer" "let")}}}})
"Java-Extractor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "tools" "Java-Extractor.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.java.tools.Java-Extractor" () 42 9 ("jazz")
      {Lisp-Entry "Java-Extractor" () 51 7 ("Java" "System" "Utilities" "Object")
        {Lisp-Entry "extract" () 54 18 ("import-class" "File-Printer" "new" "printer" "with-closed" "slash->period-notation" "format" "new-file" "file" "let" "directory" "classname")}
        {Lisp-Entry "copy-methods" () 60 18 ("get-output" "set-clipboard" "import-methods" "getMethods" "all-methods" "org.apache.bcel.Repository" "lookupClass" "javaClass" "String-Printer" "new" "printer" "let*" "methods" "classname")}
        {Lisp-Entry "import-class" () 68 11 ("import-methods" "when" "format" "getMethods" "methods" "getInterfaceNames" "interfaceNames" "getSuperclassName" "superclassName" "getPackageName" "packageName" "getClassName" "className" "org.apache.bcel.Repository" "lookupClass" "javaClass" "let*" "output-header" "printer" "classname")}
        {Lisp-Entry "import-methods" () 86 11 ("import-method" "method-info" "dynamic" "function" "for-each" "first" "max-name" "third" "length" "generic-max" "apply" "max-return" "method-infos" "get-method-info" "map" "all-method-infos" "let*" "printer" "methods" "all-methods")}
        {Lisp-Entry "get-method-info" () 96 11 ("list" "getArgumentTypes" "map" "parameter-types" "getReturnType" "jazz-type" "return-type" "isFinal" "if" "propagation" "getName" "name" "let" "method")}
        {Lisp-Entry "import-method" () 104 11 ("format" "=" "unless" "parameter-types" "return-type" "propagation" "name" "bind" "printer" "max-name" "max-return" "method-info")}
        {Lisp-Entry "Type-Alist" () 117 14 ()}
        {Lisp-Entry "jazz-type" () 128 11 ("jazz-signature-type" "getSignature" "signature" "let" "type")}
        {Lisp-Entry "jazz-signature-type" () 133 11 ("error" "cdr" "if" "Type-Alist" "assv" "info" "else" "jazz-reference-type" "jazz-array-type" "case" "0" "element" "first" "let" "signature")}
        {Lisp-Entry "jazz-array-type" () 145 11 ("1" "subseq" "jazz-signature-type" "format" "signature")}
        {Lisp-Entry "jazz-reference-type" () 149 11 ("format" "=" "if" "length" "-" "1" "subseq" "classname" "substitute" "subs" "let*" "signature")}}}})
"Java-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "file" "Java-File.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.builder.file.Java-File" () 37 9 ("jazz")
      {Lisp-Entry "Java-File" () 45 7 ("Product-File")
        {Lisp-Entry "build" () 53 11 ("classpath:" "source" "compile" "require-classpath" "classpath" "Java-Compiler" "new" "javac" "let" "rest" "output" "log" "reporter" "project")}
        {Lisp-Entry "get-class-presentation" () 65 16 ()}}}})
"Java-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Java-File-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.entry.Java-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Java-File-Entry" () 45 7 ("CppJava-File-Entry")
        {Lisp-Entry "insert-definition" () 53 11 ("insert-definitions" "get-output" "insert-imports" "insert-self" "when" "else" "put" "Import-Entry" "set!" "Package-Entry" "typecase" "definition" "dynamic" "function" "for-each" "others" "List-Factory" "new" "imports" "package" "get-definitions" "definitions" "let" "sort?" "father" "tree")}
        {Lisp-Entry "insert-imports" () 70 11 ("insert-self" "import" "dynamic" "function" "for-each" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" ":row-height" "collapsed" "state:" "father:" "add-row" "row" "get-catalog" "catalog" "let" "imports" "father" "tree")}}}})
"Java-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "tools" "Java-Manager.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.java.tools.Java-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Java-Manager" () 49 7 ("width:" "signature" "filled-column:" "methods" "second" "methods-border" "toplevel-controls?:" "name" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "multiple-selection?:" "classes" "fill" "content" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "first" "classes-border" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "center" "splitter" "on-browse" "tail" "title:" "browse" "on-copy-methods" "copy-methods" "on-generate-classes" "generate-classes" "on-edit" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "edit" "0" "6" "2" "Rect" "layout-insets:" "flow" "north" "location:" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "current-classname" () 52 8 ()}
        {Lisp-Entry "frame-icon" () 88 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 93 16 ()}
        {Lisp-Entry "frame-position" () 98 16 ("Point")}
        {Lisp-Entry "frame-size" () 103 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 107 11 ("home")}
        {Lisp-Entry "resize" () 116 11 ("0" "browse" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-edit" () 121 11 ("edit-source" "evt")}
        {Lisp-Entry "on-generate-classes" () 125 11 ("generate-classes" "evt")}
        {Lisp-Entry "on-copy-methods" () 129 11 ("copy-methods" "evt")}
        {Lisp-Entry "on-browse" () 133 11 ("browse-jarfile" "browse-classfile" "ci=" "cond" "get-extension" "ext" "extensions:" "OpenFile-Dialog" "get-modal" "file" "let*" "evt")}
        {Lisp-Entry "on-selection-change" () 140 11 ("browse-methods" "1" "length" "=" "edit" "locate" "set-enabled?" "get-selected-data" "classnames" "classes" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-double-click" () 149 11 ("copy-methods" "methods" "edit-source" "classes" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "browse-classfile" () 163 18 ("classfile")}
        {Lisp-Entry "browse-jarfile" () 172 18 ("extract-jarfile-classnames" "view-classes" "jarfile")}
        {Lisp-Entry "extract-jarfile-classnames" () 176 11 ("get-output" "put" "length" "-" "0" "subseq" "classname" "=" "when" "extract-extension" "extension" "find" "unless" "size" "filename" "dynamic" "function" "iterate-files" "Unzip-File" "unzip" "with-closed" "List-Factory" "new" "fact" "let" "jarfile")}
        {Lisp-Entry "browse-classes" () 194 18 ("0" "list" "set-selection" "classes" "locate" "tree" "let" "1" "length" "=" "when" "view-classes" "classnames")}
        {Lisp-Entry "view-classes" () 201 11 ("insert-class" "classname" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "classes" "locate" "tree" "let" "classnames")}
        {Lisp-Entry "insert-class" () 211 11 ("user-data:" "title:" "Bitmap-Resource" "image:" "Tree-Node" "new" "list" "children:" "add-row" "classname" "tree")}
        {Lisp-Entry "edit-source" () 215 11 ("edit-category" "get-application" "appl" "car" "string->symbol" "classname" "get-selected-data" "classnames" "classes" "locate" "tree" "let*")}
        {Lisp-Entry "generate-classes" () 223 11 ("extract" "user-message" "classname" "dynamic" "function" "for-each" "get-selected-data" "classnames" "Java-Extractor" "new" "extractor" "BrowseFolder-Dialog" "get-modal" "directory" "classes" "locate" "tree" "let*")}
        {Lisp-Entry "browse-methods" () 240 11 ("insert-methods" "car" "classname" "current-classname" "set!" "1" "length" "/=" "if" "remove-every-row" "dynamic" "function" "with-update-locked" "methods" "locate" "tree" "let" "classnames")}
        {Lisp-Entry "insert-methods" () 252 11 ("insert-method" "for-each" "getName" "method" "dynamic" "function" "key:" "getMethods" "" "sort" "methods" "error" "null?" "if" "org.apache.bcel.Repository" "lookupClass" "javaClass" "let" "classname" "tree")}
        {Lisp-Entry "insert-method" () 262 11 ("user-data:" "Tree-Label" "title:" "Bitmap-Resource" "image:" "Tree-Node" "new" "list" "children:" "add-row" "getSignature" "signature" "getName" "name" "let" "method" "tree")}
        {Lisp-Entry "insert-method" () 269 11 ("Bitmap-Resource" "image:" "Tree-Node" "list" "children:" "add-row" "user-data:" "false" "checked?:" "title:" "parent:" "Check-Box" "checkbox" "0" "2" "Rect" ":layout-insets" "fill" ":layout-type" "Layout-View" "new" "layout-view" "getName" "name" "let*" "method" "tree")}
        {Lisp-Entry "copy-methods" () 276 11 ("format-plural" "format" "message-box" "length" "count" "let" "copy-methods" "get-selected-data" "current-classname" "classname" "Java-Extractor" "new" "extractor" "methods" "locate" "tree" "let*")}}}})
"Java-Object"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "runtime" "Java-Object.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.runtime.Java-Object" () 37 9 ("jazz")
      {Lisp-Entry "Java-Object" () 45 7 ("int" "set-java-object" "get-java-object" "get-java-class" "Object")
        {Lisp-Entry "initialize" () 48 11 ("class-of" "JVM" "new-object" "self" "set-java-object" "nextmethod" "rest")}
        {Lisp-Entry "print" () 53 11 ("dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "java-class" () 64 23 ("self" "get-java-class")}
        {Lisp-Entry "int" () 68 22 ()}
        {Lisp-Entry "get-object" () 76 18 ("self" "get-java-object")}
        {Lisp-Entry "int" () 85 17 ()}
        {Lisp-Entry "void" () 86 17 ()}}}})
"Java-Object-Array"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "runtime" "Java-Object-Array.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.runtime.Java-Object-Array" () 37 9 ("jazz")
      {Lisp-Entry "Java-Object-Array" () 45 7 ("Java-Array")}}})
"Java-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "parser" "Java-Parser.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.catalog.parser.Java-Parser" () 37 9 ("jazz")
      {Lisp-Entry "Java-Parser" () 45 7 ("File-Parser")
        {Lisp-Entry "parse" () 48 11 ("references?" ":include-references?" "java-definitions" "catalog" "Java-File-Entry" "new" "Java-AST" "parse-java" "ast" "let" "time" "file")}
        {Lisp-Entry "parse-zipped" () 53 11 ("references?" ":include-references?" "java-definitions" "Zipped-Entry" "new" "Java-AST" "read-content" "parse-java" "ast" "let" "zipped")}
        {Lisp-Entry "sweep" () 64 11 ("qualify-origins" "qualify-categories" "file-entry" "dynamic" "function" "for-each" "content" "gather-values" "append" "apply" "file-entries" "let" "nextmethod")}
        {Lisp-Entry "qualify-categories" () 76 11 ("Category-Entry" "set-qualified" "list" "append" "qualified-path" "get-name" "name" "category-entry" "dynamic" "function" "for-each" "when" "first" "get-qualified" "essay" "package-path" "Package-Entry" "collect-type" "package-entries" "get-definitions" "definitions" "let*" "file-entry")}
        {Lisp-Entry "qualify-origins" () 89 11 ("Category-Entry" "qualify-return-types" "set-implements" "set-extends" "best-implements" "best-qualify" "best-extends" "get-implements" "Class-Entry" "is?" "when" "implements" "get-extends" "extends" "category-entry" "for-each" "get-name" "equal?" "import" "dynamic" "function" "some?" "star-import?" "Import-Entry" "import-entries" "Package-Entry" "collect-type" "package-entries" "get-definitions" "definitions" "let*" "file-entry")}
        {Lisp-Entry "qualify-return-types" () 111 11 ("get-definitions" "Method-Entry" "collect-type" "set-type" "when" "best-qualify-type" "best-type" "get-type" "return-type" "let*" "method-entry" "dynamic" "function" "for-each" "star-import?" "packages" "imports" "category-entry")}
        {Lisp-Entry "best-qualify" () 121 11 ("get-parent" "else" "best-qualify" "debug" "not" "if" "0" "first" "case" "category-from-package" "packaged" "category-from-import" "imported" "last" "category-from-index" "indexed" "let" "map" "length" "1" "=" "item" "dynamic" "function" "some?" "when" "star-import?" "packages" "imports" "name-list")}
        {Lisp-Entry "best-qualify-type" () 141 11 ("else" "not" "if" "0" "1" "length" "case" "category-from-package" "packaged" "category-from-import" "imported" "category-from-index" "indexed" "let" "first" "object-upper-case?" "String" "is?" "and" "when" "star-import?" "packages" "imports" "name")}
        {Lisp-Entry "category-from-index" () 156 11 ("get-definitions" "Class-Entry" "collect-type" "get-qualified" "entry" "dynamic" "function" "map" "name")}
        {Lisp-Entry "category-from-import" () 163 11 ("get-qualified" "import" "map" "last" "equal?" "import-path" "dynamic" "function" "collect-if" "remove-duplicates" "imports" "name")}
        {Lisp-Entry "category-from-package" () 173 11 ("list" "append" "essay" "first" "get-qualified" "qualified" "let" "when" "packages" "name")}}}})
"Java-Primitive"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "runtime" "Java-Primitive.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.runtime.Java-Primitive" () 37 9 ("jazz")
      {Lisp-Entry "Java-Primitive" () 45 7 ("Primitive")}}})
"Java-Reference-Analyser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "java" "Java-Reference-Analyser.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.library.java.Java-Reference-Analyser" () 37 9 ("jazz")
      {Lisp-Entry "Java-Reference-Analyser" () 44 7 ("Object")
        {Lisp-Entry "definitions" () 47 8 ()}
        {Lisp-Entry "unvisited" () 48 8 ()}
        {Lisp-Entry "referenced" () 49 8 ()}
        {Lisp-Entry "initialize" () 57 11 ("get-content" "setup" "nextmethod" "catalog" "catalog:")}
        {Lisp-Entry "setup" () 62 11 ("equal?" "new-hashtable" "referenced" "unvisited" "definitions" "set!" "d")}
        {Lisp-Entry "push-unvisited" () 73 11 ("cons" "unvisited" "set!" "name")}
        {Lisp-Entry "pop-unvisited" () 77 11 ("cdr" "set!" "unvisited" "car" "prog1")}
        {Lisp-Entry "walk-roots" () 87 18 ("referenced" "pop-unvisited" "walk-definitions" "unvisited" "while" "walk-root" "for-each" "roots")}
        {Lisp-Entry "walk-root" () 94 11 ("walk-definitions" ":root" "add-reference" "root")}
        {Lisp-Entry "walk-definitions" () 99 11 ("definitions" "hash-ref" "walk-definition" "for-each" "user-message" "name")}
        {Lisp-Entry "walk-definition" () 104 11 ("get-references" "add-reference" "reference" "dynamic" "function" "for-each" "else" "walk-zipped" "Zipped-Entry" "walk-category" "Category-Entry" "walk-file" "File-Entry" "typecase" "definition")}
        {Lisp-Entry "walk-file" () 114 11 ("get-definitions" "walk-definition" "for-each" "definition")}
        {Lisp-Entry "walk-category" () 118 11 ("get-definitions" "walk-definition" "get-implements" "Class-Entry" "is?" "when" "get-extends" "for-each" "add-reference" "class-name" "dynamic" "function" "add" "let" "definition")}
        {Lisp-Entry "walk-zipped" () 128 11 ("get-definitions" "walk-definition" "for-each" "definition")}
        {Lisp-Entry "already-referenced?" () 137 11 ("referenced" "hash-ref" "name")}
        {Lisp-Entry "add-reference" () 141 11 ("push-unvisited" "referenced" "hash-set!" "already-referenced?" "unless" "definition" "name")}}}})
"Java-Reference-Finder"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tools" "Java-Reference-Finder.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.ui.tools.Java-Reference-Finder" () 37 9 ("jazz")
      {Lisp-Entry "Java-Reference-Finder" () 50 7 ("toplevel-controls?:" "width:" "row" "selection-mode:" "multiple-selection?:" "on-double-click" "double-click-handler:" "5" "references" "fill" "layout-type:" "content" "vscroll?:" "edge" "border-type:" "references-border" "default?:" "on-find" "find" "category-only" "selected?:" "dead" "live" ":icons" "portfolio:" "on-update" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "Bitmap-Resource" "image-name:" "6" "4" "all" "dead-count" "live-count" "roots-dir" "top-padding:" "2" "left-padding:" "accepts-returns?:" "7" "roots" "Default-GUI" "name:" "Font" "font:" "Dimension" "size:" "Point" "position:" "title:" "WinIDL" "WinUser" "WinDef" "System" "Utilities" "View")
        {Lisp-Entry "references" () 53 8 ()}
        {Lisp-Entry "sorted-names" () 54 8 ()}
        {Lisp-Entry "external-name" () 82 16 ("reference-analyser" "rest")}
        {Lisp-Entry "finish" () 86 11 ("roots-dir" "roots" "locate" "set-string-content" "nextmethod" "initargs")}
        {Lisp-Entry "show" () 92 11 ("acquire-focus" "roots" "locate" "select-all" "nextmethod")}
        {Lisp-Entry "destroy" () 98 11 ("nextmethod" "self" "get-application" "remove-exit-listener")}
        {Lisp-Entry "resize" () 104 11 ("references-border" "size-figure" "0" "find" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-return-press" () 110 11 ("on-find" "evt")}
        {Lisp-Entry "on-find" () 114 18 ("update-list" "get-definitions-index" "hashtable-names" "" "sort" "sorted-names" "user-message" "walk-roots" "references" "set!" ":catalog" "Java-Reference-Analyser" "new" "analyser" "get-cataloguer" "get-main-catalog" "catalog" "get-application" "appl" "collect-roots" "roots" "let*" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "collect-roots" () 127 11 ("get-output" "put" "symbol" "for-each" "list" "content" "let*" "File-Reader" "reader" "with-closed" "=" "get-extension" "ext" "file" "dynamic" "function" "iterate-directory" "Directory" "directory" "when" "dir-list" "read-string-content" "->string" "map" "put-sequence" "roots-dir" "locate" "get-string-content" "roots-names" "List-Factory" "new" "roots" "let")}
        {Lisp-Entry "update-list" () 148 11 ("format" "set-title" "sorted-names" "user-data:" "list" "children:" "add-row" "get-category-name" "category-name" "get-definitions" "car" "definition" "let*" "c2" "present" ":root" "=" "Tree-Label" "c1" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "c0" "and" "increase!" "null?" "if" "hash-ref" "reference" "defines-category?" "not" "or" "name" "for-each" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "dead-count" "0" "live-count" "category-only" "category-only?" "dead" "dead?" "live" "live?" "all" "get-selected?" "all?" "get-application" "get-cataloguer" "get-main-catalog" "catalog" "references" "locate" "tree" "let" "user-message")}
        {Lisp-Entry "defines-category?" () 185 11 ("get-application" "get-cataloguer" "get-main-catalog" "get-definitions" "Category-Entry" "is?" "entry" "dynamic" "function" "find-if" "name")}
        {Lisp-Entry "on-update" () 190 11 ("update-list" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-context-menu" () 196 11 ("Analyser-Menu" "new" "track-popup-menu" "get-position" "acquire" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "copy-selection" () 202 11 ("get-selection" "get-row" "get-user-data" "n" "dynamic" "function" "map" "cn" "format" "references" "locate" "tree" "let" "set-clipboard")}
        {Lisp-Entry "on-double-click" () 211 11 ("edit-selection" "references" "get-name" "case" "get-alt?" "alt?" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "edit-selection" () 219 11 ("edit" "list" "set-search-targets" "bell" ":root" "=" "null?" "or" "hash-ref" "reference" "cpp/java" "context:" "edit-definition" "not" "if" "get-application" "appl" "get-row" "get-user-data" "name" "let" "n" "dynamic" "function" "for-each" "get-selection" "selection" "references" "locate" "tree" "let*" "alt?")}
        {Lisp-Entry "column-click" () 240 18 ("n")}
        {Lisp-Entry "confirm-close" () 249 11 ("save-session" "rest")}
        {Lisp-Entry "save-session" () 253 11 ("Opened-Windows" "properties" "push-property" "get-size" "size:" "get-position" "position:" "external-name" "list" "info" "let")}}
      {Lisp-Entry "References-List" () 267 7 ("Tree-View")
        {Lisp-Entry "column-click" () 270 11 ("get-frame" "column-click" "n")}}
      {Lisp-Entry "Analyser-Menu" () 279 7 ("view" "Action" "action:" "title:" "copy" "name:" "Context-Menu")}}})
"Java-Runtime"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "sdk" "Java-Runtime.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.java.sdk.Java-Runtime" () 37 9 ("jazz")
      {Lisp-Entry "Java-Runtime" () 46 7 ("WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "execute" () 54 18 ("report-errors" "EXIT_SUCCESS" "/=" "if" "false" "visible?:" ":capture-error?" "true" ":capture-output?" "create-process" "error-lines" "output-lines" "code" "receive" "build-command" "command" "let" "arguments" "arguments:" "classpath" "classpath:" "directory" "directory:" "class-name")}
        {Lisp-Entry "build-command" () 72 11 ("Java" "parse-classpath" "format" "arguments" "classpath" "class-name")}
        {Lisp-Entry "report-errors" () 81 11 ("error" "get-output" "msg" "line" "dynamic" "function" "for-each" "format" "String-Printer" "new" "printer" "let" "lines")}}}})
"Java-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Java-Text-Actions.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Java-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Java-Text-Actions" () 46 7 ("java-text" "Action" "action:" "insert-accessors" "name:" "Actions")}}})
"Java-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Java-Text-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Java-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Java-Text-Preferences" () 47 7 ("nextmethod" "completions:" "keywords:" "Dark-Orange" "user-macro-color:" "user-keyword-color:" "Dark-Blue" "keyword-color:" "Dark-Green" "balanced-comment-color:" "Purple" "line-comment-color:" "title-color:" "Dark-Red" "name:" "Color" "definition-color:" "title:" "CppJava-Text-Preferences")}}})
"Java-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Java-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Java-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Java-Text-View" () 45 7 ("CppJava-Text-View")
        {Lisp-Entry "external-name" () 49 16 ("java-text" "rest")}
        {Lisp-Entry "preferences" () 53 11 ("java-text" "documents" "get-preferences")}
        {Lisp-Entry "frame-workspaces" () 62 11 ("text")}
        {Lisp-Entry "get-context-menu" () 71 11 ("Java-Text-Menu" "new")}
        {Lisp-Entry "favorite-completions" () 80 11 ("java-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "get-first-special?" () 89 11 ("false")}
        {Lisp-Entry "Keywords" () 98 12 ("nextmethod")}
        {Lisp-Entry "get-keywords" () 155 11 ("Keywords")}
        {Lisp-Entry "get-user-macros" () 164 11 ("java-text" "documents" "get-preferences" "get-macros" "user")}
        {Lisp-Entry "get-user-keywords" () 168 11 ("java-text" "documents" "get-preferences" "get-keywords" "user")}
        {Lisp-Entry "get-user-types" () 172 11 ("java-text" "documents" "get-preferences" "get-types" "user")}
        {Lisp-Entry "Syntax-Targets" () 181 14 ()}
        {Lisp-Entry "Syntax-Automata" () 184 14 ()}
        {Lisp-Entry "syntax-targets" () 188 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 194 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "get-parsed-entries" () 200 11 ("delete-file" "unwind-protect" "get-content" "save-lines" "create-temporary-file" "file" "get-parsed-entries-from" "get-definitions" "get-controller" "get-moniker-time" "get-time" "=" "car" "file-entry" "cpp/java" "context:" "get-file-entries" "entries" "let*" "get-modified?" "not" "file?" "and" "if" "get-application" "get-cataloguer" "cataloguer" "get-moniker" "moniker" "let")}
        {Lisp-Entry "get-parsed-entries-from" () 216 11 ("clear-user-message" "false" ":include-references?" "java-definitions" "definitions" "Java-AST" "parse-java" "ast" "let*" "get-start" "get-row" "user-message" "err" "Parse-Error" "catch" "file")}
        {Lisp-Entry "save-content" () 231 11 ("recolorize-entries" "get-recolorize-on-save?" "and" "when" "false" "error?:" "catalogs" "get-preferences" "pref" "let" "nextmethod" "moniker")}
        {Lisp-Entry "on-insert-accessors" () 243 11 ("insert-accessors" "0" "get-row" "Cell" "set-caret" "dynamic" "function" "undoer" "with-atomic-undo" "self" "Text-Printer" "new" "printer" "get-start" "start" "gather-properties" "properties" "car" "class" "get-parsed-entries" "entries" "let*" "evt")}
        {Lisp-Entry "gather-properties" () 255 11 ("List" "static" "has-modifier?" "not" "Variable-Entry" "is?" "and" "entry" "dynamic" "function" "collect-if" "coerce" "get-definitions" "definitions" "let" "class")}
        {Lisp-Entry "insert-accessors" () 264 11 ("insert-tostring" "insert-setter" "insert-getter" "format" "property" "dynamic" "function" "for-each" "printer" "properties" "class")}
        {Lisp-Entry "insert-getter" () 275 11 ("capitalize" "format" "get-type" "type" "get-name" "name" "let" "printer" "property")}
        {Lisp-Entry "insert-setter" () 284 11 ("capitalize" "format" "get-type" "type" "get-name" "name" "let" "printer" "property")}
        {Lisp-Entry "insert-tostring" () 293 11 ("-" "name" "for-each" "length" "generic-max" "apply" "max" "capitalize" "property" "dynamic" "function" "map" "names" "let*" "get-name" "format" "printer" "properties" "class")}}
      {Lisp-Entry "Java-Text-Menu" () 315 7 ("text" "goto-line" "java-text" "get-latest" "before:" "insert-accessors" "recolorize-syntax" "code-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "update-catalog" "name:" "Context-Menu")}}})
"JavaExternal-Expander"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "macro" "JavaExternal-Expander.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.java.macro.JavaExternal-Expander" () 37 9 ("jazz")
      {Lisp-Entry "JavaExternal-Expander" () 45 7 ("Ansi-String" "executeQuery" "virtual" "public" "%javaexternal" "Interpreter" "Object")
        {Lisp-Entry "executeQuery" () 49 53 ()}
        {Lisp-Entry "expand" () 56 23 ("%javaexternal" ":location" "attribute" "compute-signature" "signature" "Ansi-String" "symbol->string" "coerce" "entry-name" "let" "parameter-types" "name" "return-type" "bind" "Interpreter" "parse-modifiers" "list" "modifiers" "meta?" "receive" "form")}
        {Lisp-Entry "compute-signature" () 65 16 ("get-output" "java-type" "type" "dynamic" "function" "for-each" "format" "String-Printer" "new" "printer" "let" "parameter-types" "return-type")}
        {Lisp-Entry "java-type" () 76 16 ("Interpreter" "parse-specifier" "java-typeref" "specifier")}
        {Lisp-Entry "java-typeref" () 80 16 ("error" "java-reference-type" "either" "else" "java-array-type" "javaarray" "javastring" "javadouble" "javafloat" "javalong" "javaint" "javashort" "javachar" "javabyte" "javabool" "javavoid" "case" "get-reference" "reference" "let" "typeref")}
        {Lisp-Entry "java-array-type" () 98 16 ("java-typeref" "format" "get-parameters" "car" "let" "typeref")}
        {Lisp-Entry "java-reference-type" () 103 16 ("symbol->string" "Java" "period->slash-notation" "format" "symbol?" "when" "reference")}}}})
"JavaScript-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "javascript" "JavaScript-Explorer.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.javascript.JavaScript-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "JavaScript-Explorer" () 45 7 ("CppJava-Explorer")}}})
"JavaScript-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "javascript" "JavaScript-File-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.javascript.JavaScript-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "JavaScript-File-Entry" () 45 7 ("File-Entry")}}})
"JavaScript-Function-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "javascript" "JavaScript-Function-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.javascript.JavaScript-Function-Entry" () 37 9 ("jazz")
      {Lisp-Entry "JavaScript-Function-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"JavaScript-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "javascript" "JavaScript-Parser.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.javascript.JavaScript-Parser" () 37 9 ("jazz")
      {Lisp-Entry "JavaScript-Parser" () 45 7 ("File-Parser")
        {Lisp-Entry "parse" () 48 11 ("parse-definitions" "catalog" "JavaScript-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" () 52 11 ("get-output" "length" "0" "naturals" "find-function" "fn" "put" "when" "find-variable" "var" "n" "line" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "Var" () 72 12 ()}
        {Lisp-Entry "find-variable" () 76 11 ("subseq" "JavaScript-Variable-Entry" "new" "cpp/java-constituent?" "skip" ">" "start:" "skip-whitespace" "col" "start" "let*" "0" "=" "and" "when" "Var" "search" "pos" "length" "len" "let" "n" "line")}
        {Lisp-Entry "Function" () 94 12 ()}
        {Lisp-Entry "find-function" () 98 11 ("subseq" "JavaScript-Function-Entry" "new" "cpp/java-constituent?" "skip" ">" "start:" "skip-whitespace" "col" "start" "let*" "0" "=" "and" "when" "Function" "search" "pos" "length" "len" "let" "n" "line")}}}})
"JavaScript-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "javascript" "JavaScript-Text-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.javascript.JavaScript-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "JavaScript-Text-Preferences" () 47 7 ("completions:" "Dark-Blue" "keyword-color:" "definition-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "CppJava-Text-Preferences")}}})
"JavaScript-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "javascript" "JavaScript-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.javascript.JavaScript-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "JavaScript-Text-View" () 46 7 ("CppJava-Text-View")
        {Lisp-Entry "external-name" () 50 16 ("javascript-text" "rest")}
        {Lisp-Entry "preferences" () 54 11 ("javascript-text" "documents" "get-preferences")}
        {Lisp-Entry "Syntax-Targets" () 63 14 ()}
        {Lisp-Entry "Syntax-Automata" () 66 14 ()}
        {Lisp-Entry "syntax-targets" () 70 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 76 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "favorite-completions" () 87 11 ("javascript-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "Keywords" () 96 12 ()}
        {Lisp-Entry "get-keywords" () 120 11 ("Keywords")}
        {Lisp-Entry "get-user-macros" () 129 11 ("javascript-text" "documents" "get-preferences" "get-macros" "user")}
        {Lisp-Entry "get-user-keywords" () 133 11 ("javascript-text" "documents" "get-preferences" "get-keywords" "user")}
        {Lisp-Entry "get-user-types" () 137 11 ("javascript-text" "documents" "get-preferences" "get-types" "user")}
        {Lisp-Entry "get-user-definitions" () 141 11 ("javascript-text" "documents" "get-preferences" "get-definitions" "user")}}}})
"JavaScript-Variable-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "javascript" "JavaScript-Variable-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.javascript.JavaScript-Variable-Entry" () 37 9 ("jazz")
      {Lisp-Entry "JavaScript-Variable-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"Jazz-Catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "jazz" "Jazz-Catalog.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.library.jazz.Jazz-Catalog" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Catalog" () 44 7 ("JzComplete" "string" "JzWhoReferences" "Filing-Catalog")
        {Lisp-Entry "initialize" () 47 11 ("nextmethod" "rest" "references?" "active?" "recursive?" "extensions" "directories" "file" "name")}
        {Lisp-Entry "in-memory?" () 56 11 ("true")}
        {Lisp-Entry "in-context?" () 65 11 ("jazz" "memq?" "true" "eq?" "or" "context")}
        {Lisp-Entry "get-definitions" () 75 11 ("Zipped-Entry" "list" "Zipped" "is?" "get-source" "zipped" "get-user" "user" "get-application" "appl" "let*" "either" "Jazz-File-Entry" "new" "cons" "in-manifest?" "if" "who-defines" "definitions" "let" "symbol?" "when" "get-definitions" "unimplemented" "object")}
        {Lisp-Entry "get-category-definitions" () 91 11 ("get-definitions" "Jazz-File-Entry" "collect-type" "object")}
        {Lisp-Entry "get-file-entry" () 95 11 ("Jazz-File-Entry" "new" "in-manifest?" "and" "when" "find-symbol" "name" "get-base" "base" "let*" "file")}
        {Lisp-Entry "get-references" () 102 11 ("who-references" "symbol?" "when" "object")}
        {Lisp-Entry "get-completions" () 107 11 ("complete" "object")}
        {Lisp-Entry "who-defines" () 116 11 ("get-output" "all-categories" "Jazz-Field-Entry" "put" "field-creator" "eq?" "and" "when" "category-field" "definition" "category" "dynamic" "function" "for-each" "List-Factory" "new" "output" "let" "target")}
        {Lisp-Entry "who-references" () 126 11 ("get-output" "all-categories" "class-of" "Jazz-Field-Entry" "put" "definition-value" "search-deep" "definition?" "and" "definition" "for-each" "when" "category-fields" "fields" "let" "category" "dynamic" "function" "process-category" "List-Factory" "new" "output" "let*" "target")}
        {Lisp-Entry "complete" () 148 18 ("complete-c++" "string")}
        {Lisp-Entry "complete-c++" () 152 11 ("JzComplete" "string")}
        {Lisp-Entry "complete-compiled" () 156 11 ("symbol->string" "cons" "set!" "compare-n" "when" "get-next" "symbol" "done?" "not" "while" "result" "length" "Symbols-Iterator" "new" "iter" "let" "string")}
        {Lisp-Entry "Object" () 167 17 ()}
        {Lisp-Entry "Object" () 168 17 ()}}}})
"Jazz-Category-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "catalog" "Jazz-Category-Entry.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.jazz.catalog.Jazz-Category-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Category-Entry" () 45 7 ("Jazz-Entry")
        {Lisp-Entry "category" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("category" "set!" "nextmethod" "u")}
        {Lisp-Entry "get-image" () 56 11 ("Bitmap-Resource")}
        {Lisp-Entry "get-title" () 60 11 ("category" "type-name" "->string")}
        {Lisp-Entry "get-definitions" () 64 11 ("category" "category-fields" "gather" "new-entry" "map")}
        {Lisp-Entry "present" () 73 11 ("category" "type-name" "->string" "mode")}
        {Lisp-Entry "present-name" () 77 11 ("category" "type-name" "->string")}
        {Lisp-Entry "get-code-location" () 86 11 ("1" "category" "type-name" "list" "Jazz-Code-Location" "new")}}}})
"Jazz-Code-Location"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "catalog" "Jazz-Code-Location.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.catalog.Jazz-Code-Location" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Code-Location" () 45 7 ("Code-Location")
        {Lisp-Entry "location" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("location" "set!" "nextmethod" "loc")}
        {Lisp-Entry "print" () 56 11 ("location" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "edit" () 62 11 ("acquire-focus" "set-visible?" "bring-to-front" "head" ":force-vertical" "ensure-displayed" "false" ":ensure-displayed?" "set-selection" "range" "text" "frame" "receive" "when" "find-location" "location" "let" "error?" "error?:" "true" "activate-focus?" "activate-focus?:" "workspace" "workspace:")}
        {Lisp-Entry "find-source" () 75 18 ("find-class-source" "location" "sublocation" "class-name" "bind")}
        {Lisp-Entry "find-location" () 80 18 ("values" ":toplevel-location" "location-range" "range" "get-guest" "text" "let*" "when" "find-class" "frame" "let" "location" "sublocation" "class-name" "bind" "true" "error?" "error?:" "workspace" "workspace:")}
        {Lisp-Entry "find-class" () 89 11 (":location" "unknown" ":kind" "Location-Error" "new" "signal" "when" "false" "visible?:" "edit-document" "either" "find-class-source" "source" "extract-toplevel-name" "toplevel-name" "get-application" "appl" "let*" "true" "error?" "error?:" "workspace" "workspace:" "class-name")}
        {Lisp-Entry "find-class-source" () 98 11 ("get-application" "get-user" "get-source" "get-manifest-source" "either" "class-name")}
        {Lisp-Entry "extract-toplevel-name" () 106 11 ("0" "subseq" "string->symbol" "not" "if" "position" "return:" "find" "pos" "symbol->string" "str" "let*" "class-name")}}}})
"Jazz-Console-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "Jazz-Console-Manager.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.console.Jazz-Console-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Console-Manager" () 46 7 ("Console-Manager")
        {Lisp-Entry "external-name" () 50 16 ("jazz-console-manager" "rest")}
        {Lisp-Entry "form-model" () 54 11 ("nextmethod" "else" "Jazz-Console-Text-View" "text" "get-name" "case" "form")}}}})
"Jazz-Console-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "Jazz-Console-Text-Actions.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.console.Jazz-Console-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Console-Text-Actions" () 47 7 (":alt" "Shortcut" "shortcut:" "on-touch-class" ":focus" "Event-Handler" "action-handler:" "touch-class" "name:" "Actions")}}})
"Jazz-Console-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "Jazz-Console-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.console.Jazz-Console-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Console-Text-View" () 49 7 ("jazz" "context:" "Console-Text-View")
        {Lisp-Entry "focus-actions" () 61 11 ("nextmethod" "jazz-console-text" "find-actions" "cons")}
        {Lisp-Entry "on-touch-class" () 71 11 ("user-message" "touch" "get-manifest-source" "source" "bell" "not" "if" "current-jazz-symbol" "symbol" "let" "evt")}
        {Lisp-Entry "eval-command" () 88 11 ("?" "set!" "User" "extends" "Guillaume" "class" "jedi" "jazz.utilities" "jazz.ui.window" "jazz.ui.view" "jazz.ui" "jazz.platform.windows" "jazz.platform" "jazz.literals" "jazz.library" "jazz.jml" "dev" "import" "jazz" "user.Guillaume" "library" "eval" "form" "dynamic" "function" "map" "cdr" "car" "console-command" "not-null?" "and" "if" "true" "console?:" "string:" "read-text-forms" "forms" "get-user" "user" "get-application" "appl" "let*" "console?" "command" "name" "range")}
        {Lisp-Entry "evaluate-form?" () 114 11 ("syntax" "macro" "comethod" "method" "definition" "coexternal" "winexternal" "external" "structure" "enumeration" "package" "interface" "class" "car" "memq?" "pair?" "and" "form")}
        {Lisp-Entry "execute-form" () 119 11 ("type-name" "map" "current-command-range" "get-string" "execute" "Local-Proxy" "is?" "Console" "privileged-execute" "function" "anonymous" "car" "evaluate-form?" "evaluate?" "->string" "?" "set!" "not" "class-of" "list" "evaluate" "result" "let" "0" "get-loop" "get-level" ">" "null?" "true" "or" "if" "get-print-detail" "detail" "console" "tools" "get-preferences" "pref" "get-selected-debuggee" "essay" "process" "get-local-debugger-server" "debugger" "get-application" "appl" "let*" "execute-form" "unimplemented" "frame" "variables" "packages" "object" "form")}
        {Lisp-Entry "current-toplevel-info" () 149 11 ("WinDlg" "WinGDI" "WinUser" "WinKernel" "Windows" "System" "Development" "Utilities" "Language" ":extends" "get-application" "get-user" "Interactive-Object" "either" "list" "values" "current-toplevel-info" "unimplemented")}}}})
"Jazz-Documentation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "documentation" "Jazz-Documentation.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.documentation.Jazz-Documentation" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Documentation" () 47 7 ("Black" "gradient-end:" "Red" "name:" "Color" "gradient-start:" "Dimension" "size:" "Presentation")
        {Lisp-Entry "default-name" () 54 11 ("Documentation")}
        {Lisp-Entry "frame-title" () 64 16 ()}
        {Lisp-Entry "frame-position" () 69 16 ("Point")}
        {Lisp-Entry "frame-size" () 74 16 ("Dimension")}}}})
"Jazz-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "catalog" "Jazz-Entry.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.jazz.catalog.Jazz-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Entry" () 45 7 ("Catalog-Entry")}}})
"Jazz-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Jazz-Explorer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.text.Jazz-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Explorer" () 46 7 ("Lisp-Explorer")
        {Lisp-Entry "Modifiers" () 49 14 ("post" "send" "dynamic" "remote" "deprecated" "unimplemented" "synchronized" "inline" "abstract" "chained" "virtual" "final" "public" "protected" "package" "private" "meta" "dialect")}
        {Lisp-Entry "get-modifiers" () 53 11 ("Modifiers")}
        {Lisp-Entry "forward-in" () 62 18 ("set-end" "exit-list" "intern-marked-symbol" "package" "forward-expr" "skip-forward" "enter-list" "and" "if" "get-end" "copy" "e" "let")}
        {Lisp-Entry "forward-category" () 74 18 ("collect-categories-keywords" "list" "global-value" "false" "symbol-bound?" "essay" "category" "get-end" "end:" "get-start" "start:" "get-marked" "format" "message:" "Explore-Error" "new" "signal" "in-manifest?" "not" "name" "symbol" "get-kind" "=" "forward-modifiers" "meta?" "intern-marked-symbol" "kind" "let" "get-macro-toplevels" "interface" "class" "package" "find-marked-symbol" "memq?" "or" "forward-expr" "enter-list" "and" "when")}
        {Lisp-Entry "forward-category-keywords" () 91 11 ("set-end" "set-start" "when" "uses" "on" "has" "implements" "extends" "metaclass" "get-macro-toplevels" "interface" "class" "package" "memq?" "or" "find-marked-symbol" "set!" "begin" "forward-expr" "and" "while" "get-end" "previous" "keyword" "let" "proc")}
        {Lisp-Entry "collect-categories-keywords" () 108 11 ("get-output" "get-marked" "read-string-element" "resolve-categories" "put" "keyword" "dynamic" "function" "forward-category-keywords" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "resolve-categories" () 117 11 ("load" "map" "autoload" "symbol?" "if" "names")}
        {Lisp-Entry "forward-location" () 128 18 ("forward-numeric" "forward-definition" "symbol?" "forward-form" "form:" ":toplevel-location" "forward-new-form" ":new-form" "meta" "unless" "else" "either" ":location" "bad" ":kind" "Location-Error" "new" "signal" "enter-composite" "not" "and" "cdr" "set!" "forward-expr" "forward" "=" "cond" "1" "c1" "0" "char-forward" "c0" "forward-whites" "get-start" "set-end" "car" "ref" "not-null?" "while" "scan" "let" "toplevel-location" "toplevel-location:" "location")}
        {Lisp-Entry "forward-new-form" () 164 11 ("get-start" "set-end" "forward-category-keywords" "toplevel-location" "toplevel-location:")}
        {Lisp-Entry "forward-form" () 169 11 ("either" ":location" "unknown" ":kind" "Location-Error" "new" "signal" "forward-valid-expr" "when" "form" "form-expr?" "not" "while" "toplevel-location" "toplevel-location:")}
        {Lisp-Entry "forward-definition" () 175 11 ("either" ":location" "unknown" ":kind" "Location-Error" "new" "signal" "forward-valid-expr" "when" "definition-only-name" "/=" "definition-expr?" "not" "or" "while" "toplevel-location" "toplevel-location:" "name")}
        {Lisp-Entry "forward-numeric" () 182 11 ("decrease!" "either" ":location" "unknown" ":kind" "Location-Error" "new" "signal" "forward-valid-expr" "not" "when" "0" ">=" "while" "toplevel-location" "toplevel-location:" "n")}
        {Lisp-Entry "forward-valid-expr" () 189 11 ("else" "expr-comment" "=" "cond" "forward-expr" "kind" "let")}
        {Lisp-Entry "fusion-declaration?" () 203 18 ("interface" "class" "library" "module" "form-expr?")}
        {Lisp-Entry "fusion-module-parameters" () 207 14 ("require")}
        {Lisp-Entry "fusion-library-parameters" () 210 14 ("import" "export" "require")}
        {Lisp-Entry "fusion-class-keywords" () 213 14 ("attributes" "implements" "extends" "metaclass")}
        {Lisp-Entry "fusion-interface-keywords" () 216 14 ("attributes" "extends" "metaclass")}
        {Lisp-Entry "fusion-declaration" () 220 18 ("set-start" "fusion-interface-declaration" "interface" "fusion-class-declaration" "class" "fusion-library-declaration" "library" "fusion-module-declaration" "module" "case" "prog1" "fusion-symbol" "type" "forward-expr" "enter-list" "set-end" "end" "e" "start" "copy" "s" "let")}
        {Lisp-Entry "fusion-module-declaration" () 236 11 ("cons" "fusion-module-parameters" "fusion-collect-parameters" "parameters" "get-marked" "name" "let" "forward-expr" "forward-modifiers")}
        {Lisp-Entry "fusion-library-declaration" () 245 11 ("cons" "fusion-library-parameters" "fusion-collect-parameters" "parameters" "dialect" "get-marked" "name" "let" "forward-expr" "forward-modifiers")}
        {Lisp-Entry "fusion-class-declaration" () 256 11 ("cons" "fusion-class-keywords" "fusion-collect-keywords" "keywords" "get-marked" "name" "let" "forward-expr" "forward-modifiers")}
        {Lisp-Entry "fusion-interface-declaration" () 265 11 ("cons" "fusion-interface-keywords" "fusion-collect-keywords" "keywords" "get-marked" "name" "let" "forward-expr" "forward-modifiers")}
        {Lisp-Entry "fusion-collect-parameters" () 274 11 ("get-output" "exit-list" "get-range-string" "put" "memq?" "fusion-symbol" "expr" "symbol" "forward-expr" "enter-list" "set-end" "get-end" "e" "get-start" "s" "list" "kind" "=" "when" "iterate" "List-Factory" "new" "fact" "let" "parameters")}
        {Lisp-Entry "fusion-collect-keywords" () 293 11 ("get-output" "get-marked" "forward-expr" "->string" "put" "memq?" "fusion-symbol" "expr" "symbol" "kind" "=" "when" "iterate" "List-Factory" "new" "fact" "let" "keywords")}
        {Lisp-Entry "fusion-symbol" () 307 11 ("get-marked" "string->symbol")}
        {Lisp-Entry "Jazz-Toplevels" () 316 14 ("datacontainer" "attributes" "javamethod" "javaexternal" "comethod" "coexternal" "cointerface" "coclass" "c-external" "external" "intrinsic" "specific" "generic" "c-definition" "c-structure" "structure" "c-type" "c-include" "enumeration" "constant" "form" "property" "slot" "inline" "method" "syntax" "macro" "definition" "remote-proxy" "interface" "class" "library" "module")}
        {Lisp-Entry "definition-name?" () 320 11 ("get-macro-definitions" "Jazz-Toplevels" "memq?" "or" "name")}
        {Lisp-Entry "walk-declaration" () 330 11 ("exit-list" "walk-unknown" "self" "walk-macro-declaration" "either" "else" "walk-datacontainer" "datacontainer" "walk-javamethod" "javamethod" "walk-javaexternal" "javaexternal" "walk-comethod" "comethod" "walk-coexternal" "coexternal" "cointerface" "coclass" "c-external" "walk-external" "external" "walk-intrinsic" "intrinsic" "walk-specific" "specific" "walk-generic" "generic" "walk-c-definition" "c-definition" "walk-c-structure" "c-structure" "walk-structure" "structure" "walk-type" "c-type" "walk-enumeration" "enumeration" "walk-constant" "constant" "walk-c-include" "c-include" "walk-form" "form" "walk-property" "property" "c-slot" "walk-slot" "slot" "inline" "c-method" "walk-method" "method" "syntax" "macro" "walk-macro" "%macro" "walk-definition" "definition" "walk-attributes" "native-macro" "native-special" "walk-native" "native" "walk-export" "walk-properties" "properties" "c-package" "in" "package" "import" "walk-import" "export" "remote-proxy" "interface" "c-class" "walk-category" "class" "walk-using" "using" "walk-dialect" "walk-begin" "begin" "case" "true" "code" "start" "attributes" "uses" "includes" "exports" "imports" "dialect" "module" "library" "on" "has" "implements" "extends" "metaclass" "find-marked-symbol" "memq?" "symbol" "kind" "and" "forward-expr" "if" "end" "get-row" "=" "not" "or" "when" "enter-list" "list?" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-modifiers" () 402 11 ("set!" "start" "get-row" "=" "not" "or" "get-modifiers" "find-marked-symbol" "memq?" "symbol" "forward-expr" "eq?" "and" "while" "end" "copy" "old" "let" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-begin" () 412 11 ("walk-declarations" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-dialect" () 416 11 ("walk-declarations" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-using" () 421 11 ("end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-category" () 425 18 ("walk-declarations" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "get-row" "not" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-import" () 435 11 ("end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-properties" () 439 11 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-export" () 445 11 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "get-row" "not" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "forward-whites" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-native" () 457 11 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "get-row" "not" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "forward-whites" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-attributes" () 469 11 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-definition" () 475 11 ("walk-expressions" "exit-list" "walk-parameters" "or" "enter-list" "else" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "forward-expr" "and" "not" "cond" "0" "char-forward" "list?" "=" "when" "forward-whites" "walk-modifiers" "start" "end" "get-row" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-macro" () 497 11 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "get-row" "not" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "enter-list" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-method" () 511 18 ("false" "code" "walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "get-row" "not" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "enter-list" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-slot" () 525 11 ("walk-expressions" "false" "code" "walk-expression" "generate" "accessors" "initialize" "memq?" "if" "while" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "=" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-property" () 540 11 ("walk-expressions" "false" "code" "walk-expression" "default" "setter" "getter" "type" "initialize" "memq?" "if" "while" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "=" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-form" () 555 11 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-include" () 561 11 ("walk-expressions" "when" "end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-constant" () 567 11 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "=" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-enumeration" () 578 11 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "=" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-type" () 589 11 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "=" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-structure" () 600 11 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "=" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-structure" () 611 11 ("walk-expressions" "exit-list" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "forward-expr" "and" "enter-list" "0" "char-forward" "list?" "=" "when" "forward-whites" "walk-modifiers" "start" "end" "get-row" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-c-definition" () 630 11 ("walk-expressions" "exit-list" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "forward-expr" "and" "enter-list" "0" "char-forward" "list?" "=" "when" "forward-whites" "walk-modifiers" "start" "end" "get-row" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-generic" () 649 11 ("walk-expressions" "exit-list" "walk-parameters" "get-row" "not" "or" "enter-list" "find-marked-symbol" "symbol-documented?" "get-marked" "set!" "symbol" "kind" "=" "forward-expr" "and" "when" "0" "char-forward" "/=" "if" "forward-whites" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-specific" () 667 11 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "get-row" "not" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "enter-list" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-intrinsic" () 681 11 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "kind" "=" "enter-list" "entered?" "forward-expr" "and" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-external" () 698 11 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "kind" "=" "and" "enter-list" "entered?" "forward-expr" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-coexternal" () 715 11 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "kind" "=" "and" "enter-list" "entered?" "forward-expr" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-comethod" () 732 11 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "kind" "=" "and" "enter-list" "entered?" "forward-expr" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-javaexternal" () 749 11 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "kind" "=" "and" "enter-list" "entered?" "forward-expr" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-javamethod" () 766 11 ("walk-expressions" "exit-list" "walk-parameters" "find-marked-symbol" "symbol-documented?" "get-marked" "symbol" "kind" "=" "and" "enter-list" "entered?" "forward-expr" "when" "walk-modifiers" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-datacontainer" () 783 11 ("walk-expressions" "find-marked-symbol" "symbol-documented?" "get-marked" "forward-expr" "when" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-unknown" () 793 11 ("walk-expressions" "true" "code" "walk-expression" "when" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "symbol-documentation" () 799 11 ("get-definition" "and" "when" "doc" "symbol")}
        {Lisp-Entry "symbol-documented?" () 804 11 ("symbol-documentation" "doc" "symbol")}
        {Lisp-Entry "highlight-range" () 813 18 ("false" ":edit?" "break" "update-view" "get-range" "text" "set-selection")}}}})
"Jazz-Field-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "catalog" "Jazz-Field-Entry.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.jazz.catalog.Jazz-Field-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Field-Entry" () 45 7 ("Jazz-Entry")}
      {Lisp-Entry "Jazz-Field-Entry" () 51 7 ("Jazz-Entry")
        {Lisp-Entry "field" () 54 8 ()}
        {Lisp-Entry "initialize" () 57 11 ("field" "set!" "nextmethod" "f")}
        {Lisp-Entry "print" () 62 11 ("field" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-field" () 73 18 ("field")}
        {Lisp-Entry "get-file" () 77 11 ("get-category" "category-toplevel" "type-name" "get-manifest-source")}
        {Lisp-Entry "get-moniker" () 83 11 ("get-file")}
        {Lisp-Entry "get-category" () 87 11 ("field" "field-creator")}
        {Lisp-Entry "get-category-name" () 91 11 ("get-category" "type-name" "->string")}
        {Lisp-Entry "get-name" () 95 11 ("field" "field-name")}
        {Lisp-Entry "get-image" () 99 11 ("Bitmap-Resource")}
        {Lisp-Entry "present" () 108 11 ("field" "field-name" "format" "references" "get-category-name" "definitions" "case" "mode")}
        {Lisp-Entry "present-name" () 114 11 ("field" "field-name" "->string")}
        {Lisp-Entry "get-attribute" () 118 11 ("Interpreter" "in-manifest?" "if" "get-attribute" "unimplemented" "keyword" "field")}
        {Lisp-Entry "get-code-location" () 126 11 ("else" "field-modifiers-count" "1" "+" "rank" "let" "coclosure?" "list" "append!" "Jazz-Code-Location" "new" "coexternal?" "external?" "or" "get-attributed-location" ":location" "get-attribute" "cond" "definition-value" "definition?" "essay" "value" "field" "field-name" "name" "get-category-location" "category-location" "get-category" "category" "let*")}
        {Lisp-Entry "get-attributed-location" () 143 11 ("append!" "Jazz-Code-Location" "new" ":location" "field" "get-attribute" "location" "let" "name" "category-location")}}}})
"Jazz-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "file" "Jazz-File.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.builder.file.Jazz-File" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-File" () 45 7 ("Product-File")
        {Lisp-Entry "core?" () 48 12 ("generate" "accessors" "false")}
        {Lisp-Entry "tester?" () 49 12 ("generate" "accessors" "false")}
        {Lisp-Entry "remotable?" () 50 12 ("generate" "accessors" "false")}
        {Lisp-Entry "print" () 53 11 ("name" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "manifest-properties" () 65 11 ("get-output" "remotable?" ":remotable?" "tester?" ":tester?" "false" "core?" ":core?" "source" ":source" "put" "neq?" "when" "default" "value" "property" "dynamic" "function" "add" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "get-project" () 86 18 ("product" "Project" "self" "is?" "if")}
        {Lisp-Entry "build" () 99 11 (":output" ":log" "reporter:" "compile-toplevel" "manifest-properties" ":manifest-properties" ":project" ":category-name" "Compiler" "new" "compiler" "get-name" "category-name" "let*" "unimplemented" "false" "force?" "force?:" "output" "log" "reporter" "project")}
        {Lisp-Entry "get-class-presentation" () 113 16 ()}
        {Lisp-Entry "property-presentation" () 118 16 ("nextmethod" "else" "remotable?" "tester?" "core?" "field-name" "case" "property")}
        {Lisp-Entry "can-rename-component?" () 126 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 130 11 ("remotable?" "tester?" "core?" "build?" "features" "source")}
        {Lisp-Entry "get-row-instance" () 134 11 ("nextmethod" "else" "Boolean-Row" "new" "remotable?" "tester?" "core?" "field-name" "case" "property")}}}})
"Jazz-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "catalog" "Jazz-File-Entry.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jazz.jazz.catalog.Jazz-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-File-Entry" () 45 7 ("Jazz-Entry")
        {Lisp-Entry "category-name" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("category-name" "set!" "nextmethod" "name")}
        {Lisp-Entry "compare-object" () 56 11 (":not-equal" "else" ":equal" "get-category-name" "category-name" "=" ":incompatible" "Jazz-File-Entry" "is-not?" "cond" "target")}
        {Lisp-Entry "get-category-name" () 70 18 ("category-name")}
        {Lisp-Entry "get-image" () 74 11 ("Bitmap-Resource")}
        {Lisp-Entry "get-title" () 78 11 ("category-name" "->string")}
        {Lisp-Entry "get-definitions" () 82 11 ("class-of" "new-entry" "map" "append!" "category-fields" "gather" "fields" "get-loaded-category" "category" "let*" "category-name" "category-loaded?" "when")}
        {Lisp-Entry "present" () 95 11 ("category-name" "->string" "mode")}
        {Lisp-Entry "present-name" () 99 11 ("category-name" "->string")}
        {Lisp-Entry "get-code-location" () 108 11 ("1" "category-name" "list" "Jazz-Code-Location" "new")}}}})
"Jazz-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "parser" "Jazz-Parser.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.parser.Jazz-Parser" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Parser" () 45 7 ("Lisp-Parser")
        {Lisp-Entry "explorer-class" () 48 11 ("Jazz-Explorer" "file")}}}})
"Jazz-Plain-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Jazz-Plain-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.text.Jazz-Plain-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Plain-Text-View" () 46 7 ("Plain-Text-View")
        {Lisp-Entry "install" () 49 11 ("get-comment-color" "Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "colorize-comments" () 61 11 ("Title" "4" "+" "Comment" "stylize" "not" "if" "title?" "end" "start" "dynamic" "function" "for-each-comment" "text-beginning" "end:" "self" "Jazz-Explorer" "new" "expl" "let" "jazz" "type-heuristic" "=" "when" "rest")}
        {Lisp-Entry "recolorize-text" () 72 11 ("recolorize-row" "for-each" "1" "+" "get-row" "naturals" "range" "let" "jazz" "type-heuristic" "=" "when" "end-row" "start")}
        {Lisp-Entry "recolorize-row" () 78 11 ("recolorize-comments" "row")}
        {Lisp-Entry "recolorize-comments" () 82 11 ("Title" "Cell" "new" "Comment" "stylize" "begin" "title-comment-string" "subseq" "=" "if" "4" "+" "title-end" "let" "" "and" "when" "syntax" "comment-string" "search" "comment" "length" "len" "paragraph-string" "line" "let*" "row")}}}})
"Jazz-Presentation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "presentation" "Jazz-Presentation.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.presentation.Jazz-Presentation" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Presentation" () 47 7 ("Black" "gradient-end:" "Blue" "name:" "Color" "gradient-start:" "Presentation")
        {Lisp-Entry "default-name" () 54 11 ("Presentation")}
        {Lisp-Entry "frame-title" () 64 16 ()}
        {Lisp-Entry "frame-position" () 69 16 ("Point")}
        {Lisp-Entry "frame-size" () 74 16 ("Dimension")}}}})
"Jazz-Property-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "catalog" "Jazz-Property-Entry.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.catalog.Jazz-Property-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Property-Entry" () 45 7 ("Jazz-Slot-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"Jazz-Slot-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "catalog" "Jazz-Slot-Entry.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.catalog.Jazz-Slot-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Slot-Entry" () 45 7 ("Jazz-Field-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"Jazz-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "syntax" "Jazz-Syntax.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.syntax.Jazz-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Syntax" () 45 7 ("Lisp-Syntax")
        {Lisp-Entry "translate-key" () 53 11 ("else" "case" "jazz-text" "documents" "get-preferences" "get-translate-keys?" "not" "if" "key")}}}})
"Jazz-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Jazz-Text-Actions.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.text.Jazz-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Text-Actions" () 47 7 ("on-insert-properties" "insert-properties" "on-set-read/write" "set-read/write" "on-remove-break" "remove-break" "F9" "on-add-break" "add-break" "F12" ":shift" "on-edit-documentation" "edit-documentation" "F1" "on-present-documentation" "present-documentation" "on-design-form" "design-form" "Return" ":control" "Shortcut" "shortcut:" "on-evaluate" ":focus" "Event-Handler" "action-handler:" "evaluate" "name:" "Actions")}}})
"Jazz-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Jazz-Text-Preferences.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.text.Jazz-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Text-Preferences" () 49 7 ("nextmethod" "completions:" "Dark-Orange" "feature-color:" "quotation-color:" "named-string-color:" "delimited-string-color:" "string-color:" "boolean-color:" "number-color:" "char-color:" "Ochre" "literal-color:" "specifier-color:" "Dark-Purple" "tag-color:" "keyword-color:" "undocumented-declaration-color:" "Dark-Green" "documented-declaration-color:" "Dark-Blue" "declaration-keyword-color:" "Text-Gray" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Lisp-Text-Preferences")
        {Lisp-Entry "documented-declaration-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "undocumented-declaration-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "literal-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 228 11 ("translate-keys?" "string-color" "specifier-color" "keyword-color" "undocumented-declaration-color" "documented-declaration-color" "expr-comment-color" "comment-color" "title-color" "completions")}
        {Lisp-Entry "get-row-instance" () 233 11 ("nextmethod" "else" "Boolean-Row" "translate-keys?" "Completion-List-Row" "completions" "Color-Row" "new" "string-color" "specifier-color" "keyword-color" "undocumented-declaration-color" "documented-declaration-color" "expr-comment-color" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Jazz-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Jazz-Text-View.fusion"} {Time 128368661540000000L}
    {Lisp-Entry "jazz.jazz.text.Jazz-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Text-View" () 53 7 ("tooltip?:" "Lisp-Text-View")
        {Lisp-Entry "install" () 60 11 ("highlight:" "Break" "Walk-Fatal" "Orange" "Walk-Warning" "Red" "Color" "frame:" "Reference" "get-feature-color" "Feature" "get-literal-color" "Literal" "get-quotation-color" "Quotation" "get-named-string-color" "Named-String" "get-delimited-string-color" "Delimited-String" "get-string-color" "String" "get-boolean-color" "Boolean" "get-number-color" "Number" "get-char-color" "Char" "get-specifier-color" "Specifier" "get-tag-color" "Tag" "get-keyword-color" "Keyword" "get-undocumented-declaration-color" "Undocumented-Declaration" "get-documented-declaration-color" "Documented-Declaration" "get-declaration-keyword-color" "Declaration-Keyword" "get-expr-comment-color" "Expr-Comment" "get-comment-color" "Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 88 16 ("jazz-text" "rest")}
        {Lisp-Entry "default-extension" () 92 11 ()}
        {Lisp-Entry "extensions" () 96 11 ()}
        {Lisp-Entry "new-syntax" () 100 11 ("Jazz-Syntax" "new")}
        {Lisp-Entry "focus-actions" () 109 11 ("nextmethod" "jazz-text" "find-actions" "cons")}
        {Lisp-Entry "get-context-menu" () 119 11 ("layout-menu" "false" "set-read/write" "locate" "set-visible?" "read/write?" "not" "or" "when" "get-moniker" "moniker" "get-controller" "controller" "Jazz-Text-Menu" "new" "menu" "let*")}
        {Lisp-Entry "on-design-form" () 134 11 ("client:" "new-frame" "Manager-View" "View-Editor" "View" "is?" "editor-class" "new" "component" "true" "set-visible?" "bring-to-front" "begin" "find-editor" "essay" "frame" "get-self-form" "form" "error" "Component" "subtype?" "not" "if" "autoload" "class" "current-category-name" "name" "let*" "on-design-form" "unimplemented" "evt")}
        {Lisp-Entry "on-design-form" () 153 11 ("client:" "new-frame" "Manager-View" "View-Editor" "View" "is?" "editor-class" "new" "component" "true" "set-visible?" "bring-to-front" "begin" "find-editor" "frame" "definition-value" "form" "set!" "install-class-form" "when" "field-creator" "eq?" "owner?" "class-form" "category-field" "definition" "error" "Component" "subtype?" "not" "if" "class-of" "metaclass" "autoload" "class" "current-category-name" "name" "let*" "evt")}
        {Lisp-Entry "install-class-form" () 175 11 ("class-form" "meta" "evaluate-code" "list" "Interpreter" "evaluate" "model-name:" "action:" "Form" "new" "form" "uses" "getf" "imports" "let" "keywords" "name" "meta?" "kind" "category" "bind" "current-toplevel-info" "category-info" "in" "receive" "install-class-form" "unimplemented" "model-name" "definition")}
        {Lisp-Entry "find-editor" () 187 11 ("get-children" "get-form" "eq?" "and" "get-designer" "designer" "Editor-View" "get-guest" "guest" "View-Host" "is?" "when" "frame" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "get-stage" "stage" "let" "form")}
        {Lisp-Entry "on-copy-list" () 202 11 ("length" "user-message" "push-clipboard-list" "get-selected-string" "read-string-content" ":reader" "->string" "object" "dynamic" "function" "map" "list" "get-application" "appl" "let" "evt")}
        {Lisp-Entry "on-paste-pathname" () 209 11 (":reader" "->string" "insert-string" "anchorize" "anchorized" "Directory" "new" "directory" "tokenise" "content" "get-clipboard" "string" "let*" "evt")}
        {Lisp-Entry "get-tooltip-context" () 222 11 ("Ansi-Var" "name:" "Font" "font:" "bounds:" "rect-height" "Point" "rect-position" "+" "position:" "text:" "view:" "Tooltip-Context" "in-rect?" "get-end" "get-col" "get-start" "get-row" "row-range-rect" "bounds" "present-location" "essay" "text" "range-location" "location" "get-range" "range" "symbol" "=" "get-kind" "kind" "let" ":outer-composite?" "false" ":composite?" "outer-expr" "err" "Explore-Error" "catch" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "view->text" "pos" "let*" "debugging?" "Debugger" "in-manifest?" "and" "when" "get-tooltip-context" "unimplemented" "view")}
        {Lisp-Entry "default-preferences" () 251 14 ("completions:" "Dark-Blue" "keyword-color:" "Dark-Green" "undocumented-declaration-color:" "documented-declaration-color:" "Dark-Orange" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "form>>")}
        {Lisp-Entry "preferences" () 256 11 ("jazz-text" "documents" "get-preferences")}
        {Lisp-Entry "declaration-style" () 260 11 ("Undocumented-Declaration" "Documented-Declaration" "if" "documented?")}
        {Lisp-Entry "colorize-tag" () 266 11 ("Tag" "apply-coloring" "end" "start" "colorizer")}
        {Lisp-Entry "colorize-specifier" () 270 11 ("Specifier" "apply-coloring" "end" "start" "colorizer")}
        {Lisp-Entry "Specials" () 279 12 ("xml>>" "xsl-transformation" "with-closed" "with" "while" "when" "unwind-protect" "unless" "typecase" "template" "syntax" "synchronize" "substitution" "structure" "specific" "remote-proxy" "receive" "prog1" "profile" "parameterize" "package" "optimize" "new" "monitor" "module" "method" "macro" "library" "letrec" "let*" "let" "lambda" "jml>>" "jml" "interface" "inline" "in" "if" "generic" "function" "for-each-source" "form>>" "form" "enumeration" "ecase" "dialect" "definition" "define" "datacontainer" "c-structure" "5" "c-definition" "cotry" "constant" "comment" "class" "catch" "case" "3" "call-with-catch" "block" "2" "bind" "0" "begin" "attributes" "attribute" "assert" "1" "annotate")}
        {Lisp-Entry "get-specials" () 347 11 ("Specials")}
        {Lisp-Entry "on-evaluate" () 356 29 ("read-text-forms" "fusion-evaluate-forms" "fusion-declarations" "footer" "header" "receive" "sleep" ":wait" "with-cursor" "when" "current-definition-range" "range" "let" "dynamic" "function" "with-safe-explore" "evt")}
        {Lisp-Entry "fusion-evaluate-forms" () 368 11 ("either" "name" "user-message" "false" "display-evaluation" "eval" "format" "read-string-element" "expr" "lambda" "results" "evaluation-break" "form-name" "form" "dynamic" "function" "map" "names" "self" "explorer-class" "new" "expl" "get-console-text" "console-text" "let" "footer" "header" "forms")}
        {Lisp-Entry "fusion-declarations" () 387 11 ("values" "format" "set!" "join" "declaration-header" "fusion-declaration" "declaration" "let*" "fusion-declaration?" "when" "outer-expr" "while" "range:" "self" "Jazz-Explorer" "new" "expl" "footer" "header" "let" "range")}
        {Lisp-Entry "on-evaluate" () 401 29 ("list" "pair?" "evaluate-forms" "expand-macro-evaluations" "uses" "getf" "imports" "true" ":load?" "location-class" "class" "get-application" "appl" "keywords" "name" "meta?" "kind" "category" "bind" "category-info" "in" "receive" "throw-cancel" "cancel" "no" "autoload" "save" "yes" "case" "confirmation" "type:" "format" "message-box" "code" "category-loaded?" "not" "get-modified?" "and" "if" "car" "toplevel" "current-classes" "classes" "read-text-forms" "forms" "current-toplevel-info" "info" "sleep" "remove-highlights" ":wait" "with-cursor" "when" "current-definition-range" "range" "let" "dynamic" "function" "with-safe-explore" "evt")}
        {Lisp-Entry "evaluate-forms" () 436 11 ("fresh-prompt" "false" "display-evaluation" "evaluation-break" "when" "get-console-text" "console" "user-message" "evaluate-code" "names" "let" "packages" "class" "forms" "range")}
        {Lisp-Entry "on-add-break" () 451 18 ("1" "+" "get-start" "Break" "apply-style" "add-break" "error" "not" "if" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "range-location" "loc" "current-expr-range" "range" "let*" "evt")}
        {Lisp-Entry "on-remove-break" () 462 18 ("get-row" "get-paragraph" "invalidate-paragraph" "default-style" "set-style" "when" "1" "get-start" "+" "get-run-at" "run" "let" "remove-break" "bell" "not" "if" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "range-location" "loc" "current-expr-range" "range" "let*" "evt")}
        {Lisp-Entry "present-location" () 481 11 ("present-expr" "Debugger" "active-frame" "frame" "let" "and" "when" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "location")}
        {Lisp-Entry "present-expr" () 489 11 ("present-unknown" "else" "present-constant" "Symbol" "present-field" "Field-Reference" "present-variable" "Variable" "present-self" "Self" "Manifest-Reference" "present-global" "Global-Reference" "typecase" "class-of" "format" "object" "frame")}
        {Lisp-Entry "present-global" () 503 11 ("self" "eval-symbol" "format" "object" "frame")}
        {Lisp-Entry "present-self" () 507 11 ("present-value" "format" "frame-context" "context" "get-address" "Interpreter" "frame-closure-frame" "binder" "let*" "when" "object" "frame")}
        {Lisp-Entry "present-variable" () 517 11 ("present-value" "variable-symbol" "format" "variable-value" "value" "let" "eq?" "test:" "key:" "find" "variable" "" "variable-base" "frame-variables" "variables" "Interpreter" "frame-closure-frame" "binder" "let*" "get-address" "set!" "when" "var" "frame")}
        {Lisp-Entry "present-field" () 535 11 ("present-value" "field-name" "format" "get-value" "value" "let" "definition-method?" "definition?" "and" "unless" "field-creator" "is?" "field-reference-form" "field" "frame-context" "context" "Interpreter" "frame-closure-frame" "binder" "let*" "get-address" "set!" "when" "reference" "frame")}
        {Lisp-Entry "present-constant" () 551 11 ("format" "object" "frame")}
        {Lisp-Entry "present-unknown" () 555 11 ("object" "frame")}
        {Lisp-Entry "present-value" () 559 11 ("format" "else" "closure?" "cond" "value")}
        {Lisp-Entry "current-location" () 568 11 ("get-start" "position->location")}
        {Lisp-Entry "position->location" () 572 11 ("range-location" "get-range" "range" "false" ":outer-composite?" "outer-expr" "when" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "location-class" () 579 11 ("cdr" "class-of" "category-field" "definition-value" "true" "set!" "meta" "eq?" "name" "dynamic" "function" "for-each" "meta?" "let" "error" "not" "if" "global-value" "class" "car" "class-name" "let*" "false" "load?" "load?:" "loc")}
        {Lisp-Entry "split-location" () 595 11 ("get-output" "values" "cdr" "set!" "put" "car" "symbol?" "while" "List-Factory" "new" "definition" "scan" "let" "location")}
        {Lisp-Entry "definition-name-info" () 604 11 ("else" "2" "external?" "true" "closure?" "definition-value" "value" "let" "field?" "field-modifiers-count" "+" "slot?" "false" "1" "values" "category?" "cond" "definition-name-info" "unimplemented" "object")}
        {Lisp-Entry "definition-name-location?" () 620 11 ("0" "and" "list" "=" "or" "inside-allowed?" "skip" "receive" "when" "definition-name-info" "info" "let" "internal-location" "object")}
        {Lisp-Entry "range-location" () 628 11 ("else" "meta" "cond" "cons" "loc" "definition-name" "name" "meta?" "package?" "receive" "definition-expr?" "def?" "true" "set!" "if" "outer-expr" "rank" "not" "while" "done?" "false" "previous-def?" "location" "get-end" "end:" "get-start" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "range")}
        {Lisp-Entry "location-range" () 652 18 ("get-range" ":toplevel-location" "forward-location" "get-end" "set-start" "forward-whites" "forward-in" "text-beginning" "end:" "self" "Jazz-Explorer" "new" "expl" "let" "toplevel-location" "toplevel-location:" "location")}
        {Lisp-Entry "on-edit-documentation" () 666 11 ("edit-documentation" "get-application" "appl" "bell" "not" "if" "current-symbol" "symbol" "let" "evt")}
        {Lisp-Entry "on-edit-documentation" () 675 11 ("current-location" "edit-documentation" "evt")}
        {Lisp-Entry "edit-documentation" () 680 11 ("edit-field-documentation" "field-reference-form" "edit-field-reference-documentation" "Field-Reference" "is?" "and" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "receive" "car" "autoload" "bell" "null?" "if" "location")}
        {Lisp-Entry "edit-field-reference-documentation" () 691 11 ("edit-documentation" "field-name" "field-creator" "type-name" "list" "location" "get-application" "appl" "let" "field")}
        {Lisp-Entry "edit-field-documentation" () 698 11 ("bell" "self" "edit-documentation" "definition-name-location?" "and" "if" "Interpreter" "resolve-location" "object" "toplevel-closure" "in-context?" "resolved?" "split-location" "internal-location" "field-location" "receive" "get-application" "appl" "let" "location")}
        {Lisp-Entry "on-present-documentation" () 707 11 ("current-symbol" "present-documentation" "evt")}
        {Lisp-Entry "present-documentation" () 711 11 ("border:" "alternate-position:" "popup" "DocToText-Transformation" "parse-jml" "transform-jml" "set-text" "get-display" "display" "entry" "style:" "edge" "solid" "border-type:" "5" "Rect" ":border-insets" "Border-View" "border" "alternate" "Point" "pos" "locate" "text" "Dimension" "size:" "Documentation-View" "new" "view" "present-text" "jml" "open-java-documentation" "JVM" "class-exists?" "false" "symbol->string" "classname" "let" "get-documentation" "doc" "get-application" "appl" "let*" "bell" "not" "if" "present-documentation" "unimplemented" "symbol")}
        {Lisp-Entry "open-java-documentation" () 736 11 ("bell" "return" "shell-execute" "exists?" "when" "format" "list" "append" "new-file" "file" "let" "dir" "dynamic" "function" "for-each" "Java" "parse-classname" "name" "package" "receive" "java-apidocs" "apidocs" "get-user" "user" "get-application" "appl" "let*" "open-java-documentation" "unimplemented" "classname")}
        {Lisp-Entry "show-arguments" () 762 11 ("show-category-fields" "show-method-arguments" "0" "char-backward" "case" "symbol" "get-kind" "=" "backward-expr" "and" "get-end" "end:" "get-start" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "empty-selection?" "when")}
        {Lisp-Entry "show-method-arguments" () 773 11 ("show-symbol-arguments" "uses" "getf" "imports" "find-symbol" "symbol" "keywords" "meta?" "kind" "category" "bind" "category-info" "in" "receive" "when" "current-toplevel-info" "info" "get-marked" "name" "let" "expl")}
        {Lisp-Entry "show-symbol-arguments" () 786 11 ("Interpreter" "closure-function" "Closure" "show-function-arguments" "%function" "show-external-arguments" "External" "typecase" "definition-value" "value" "when" "find-in" "field" "let" "show-symbol-arguments" "unimplemented" "packages" "class" "symbol")}
        {Lisp-Entry "show-external-arguments" () 801 11 ("proxy-result" "proxy-rest?" "if" "Interpreter" "proxy-parameters" "get-type" "param" "dynamic" "function" "List" "map-to" "type-name" "map" "user-message" "external" "symbol")}
        {Lisp-Entry "show-function-arguments" () 810 11 ("get-output" "user-message" "present-parameters" "rest" "String-Printer" "new" "printer" "Interpreter" "function-parameters" "parameters" "let*" "function" "symbol")}
        {Lisp-Entry "present-parameters" () 820 11 ("else" "cdr" "present-parameters" "format" "car" "present-parameter" "pair?" "cond" "when" "printer" "bind" "parameters")}
        {Lisp-Entry "present-parameter" () 832 11 ("else" "Interpreter" "variable-symbol" "format" "Variable" "typecase" "printer" "parameter")}
        {Lisp-Entry "find-in" () 839 11 ("when" "class-of" "category-field" "field" "Interpreter-Services" "get-interpreted-category" "either" "type-name" "name" "let*" "package" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "packages" "class" "symbol")}
        {Lisp-Entry "show-category-fields" () 853 11 ("show" "Point" "position:" "self" ":owner-text" "Completion-Popup" "new" "popup" "let")}
        {Lisp-Entry "explorer-class" () 864 11 ("Jazz-Explorer")}
        {Lisp-Entry "current-class-form" () 873 18 ("values" "Form" "fourth" "is?" "class-form" "third" "meta" "second" "definition" "first" "eq?" "4" "and" "car" "form" "1" "length" "=" "read-text-forms" "forms" "current-toplevel-info" "info" "when" "current-definition-range" "dynamic" "function" "with-safe-explore" "range" "let")}
        {Lisp-Entry "current-toplevel-info" () 893 29 ("values" "forward-category" "category" "forward-in" "in" "text-beginning" "end:" "self" "Jazz-Explorer" "new" "expl" "let*")}
        {Lisp-Entry "current-classes" () 900 11 ("meta" "cons" "set!" "definition-name" "name" "meta?" "package?" "receive" "category-expr?" "when" "outer-expr" "while" "classes" "range:" "self" "Jazz-Explorer" "new" "expl" "let" "range")}
        {Lisp-Entry "current-category-name" () 912 11 ("keywords" "name" "meta?" "kind" "category" "bind" "current-toplevel-info" "category-info" "in" "receive")}
        {Lisp-Entry "toplevel-expr" () 918 11 ("get-range" "set!" "outer-expr" "while" "range" "end:" "start:" "self" "Jazz-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "edit-symbol-class" () 931 11 ("true" "get-application" "edit-class" "in-manifest?" "when" "symbol")}
        {Lisp-Entry "on-insert-properties" () 943 11 ("->string" "map" "insert-properties" "format" "0" "get-row" "Cell" "set-caret" "dynamic" "function" "undoer" "with-atomic-undo" "self" "Text-Printer" "new" "printer" "get-start" "start" "bell" "null?" "if" "Properties-Wizard" "get-modal" "names" "let" "evt")}
        {Lisp-Entry "insert-properties" () 956 11 ("insert-setter" "insert-getter" "format" "insert-property" "name" "dynamic" "function" "for-each" "length" "map" "generic-max" "apply" "max" "let" "printer" "names")}
        {Lisp-Entry "insert-property" () 969 11 ("length" "-" "format" "printer" "max" "name")}
        {Lisp-Entry "insert-getter" () 976 11 ("format" "printer" "name")}
        {Lisp-Entry "insert-setter" () 981 11 ("format" "printer" "name")}}
      {Lisp-Entry "Documentation-View" () 991 7 ("editable?:" "Tooltip" "Color" "background:" "text" "content" "name:" "flat?:" "vscroll?:" "hscroll?:" "fill" "layout-type:" "Layout-View")}
      {Lisp-Entry "Jazz-Text-Menu" () 1006 7 ("recolorize-syntax" "update-catalog" "set-read/write" "insert-properties" "patch-file" "show-changes" "show-history" "undo-checkout" "checkin" "checkout" "text" "get-latest" "paste-pathname" "remove-break" "add-break" "add-to-favorites" "edit-documentation" "edit-references" "code-text" "edit-definition" "design-form" "jazz-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "evaluate" "name:" "Context-Menu")}}})
"Jazz-Walker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Jazz-Walker.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Jazz-Walker" () 37 9 ("jazz")
      {Lisp-Entry "Jazz-Walker" () 40 7 ("Walker")}}})
"JazzScheme-Server"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.website" "lib" "JazzWebsite" "Development" "Units" "Server" "JazzScheme-Server.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jazzscheme" () 37 4 ()}
    {Lisp-Entry "JazzScheme-Server" () 40 7 ("Web-Server")
      {Lisp-Entry "Servlet-Associations" () 48 14 ()}
      {Lisp-Entry "get-servlet-associations" () 52 11 ("Servlet-Associations")}}})
"JazzScheme-Site"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.website" "lib" "JazzWebsite" "Development" "Units" "Server" "JazzScheme-Site.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jazzscheme" () 37 4 ()}
    {Lisp-Entry "JazzScheme-Site" () 40 16 ("HTTP-Servlet")}})
"JazzWebsite-Project"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.website" "lib" "JazzWebsite" "JazzWebsite-Project.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "?" () 37 4 ()}
    {Lisp-Entry "JazzWebsite-Project" () 40 7 ("JazzWebsite-Project" "File" "source:" "JazzWebsite-Transformation" "Resources-Module" "Designer-Module" "Library-Module" "reference" "UI-Module" "DDE-Module" "Slayer-Module" "Kernel-Module" "include" "kind:" "Boot-Module" "name:" "Release" "anonymous-build:" "JazzWebsite-Application" "application-class:" "title:" "Project")}})
"JazzWebsite-Transformation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.website" "lib" "JazzWebsite" "Development" "Units" "Transformation" "JazzWebsite-Transformation.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "guillaume" () 37 4 ()}
    {Lisp-Entry "JazzWebsite-Transformation" () 40 16 ("DocToHTML-Transformation")
      {Lisp-Entry "Generate-Manual?" () 43 14 ("false")}
      {Lisp-Entry "anchors" () 47 8 ("eq?" "new-hashtable")}
      {Lisp-Entry "anchor-names" () 48 8 ("eq?" "new-hashtable")}
      {Lisp-Entry "next-section" () 49 8 ("1")}
      {Lisp-Entry "website" () 57 12 ("process-website" "user-message" "node")}
      {Lisp-Entry "screenshot" () 62 12 ("align:" "class:" "src:" "href:" "image" "preview" "get-property" "label" "let" "node")}
      {Lisp-Entry "process-website" () 77 11 ("get-output" "user-message" "validate-anchor-names" "process-sections" "collect-sections" "sections" "List-Factory" "new" "pages" "let" "website")}
      {Lisp-Entry "collect-sections" () 87 11 ("get-children" "get-tag" "=" "node" "collect-if" "cons" "section" "dynamic" "function" "map" "website")}
      {Lisp-Entry "validate-anchor-names" () 95 11 ("message-box" "->string" ":bulleted" "list" "map" "cons" "message" "get-output" "ambiguities" "anchor-names" "put" "1" "length" ">" "when" "lst" "name" "dynamic" "function" "for-each-hash" "List-Factory" "new" "fact" "let")}
      {Lisp-Entry "process-sections" () 116 11 ("subsection" "process-section" "subsections" "section" "bind" "info" "dynamic" "function" "for-each" "pages" "sections")}
      {Lisp-Entry "process-section" () 126 11 ("section-path" "format" "path:" "put" "manual" "neq?" "Generate-Manual?" "or" "when" "section-output" "html" "let" "name" "get-property" "user-message" "pages" "sections" "section")}
      {Lisp-Entry "section-path" () 134 11 ("index" "home" "eq?" "if" "get-property" "name" "let" "section")}
      {Lisp-Entry "section-output" () 141 11 ("section-content-output" "manual-output" "manual" "name" "eq?" "if" "navigation-output" "id:" "format" "type:" "rel:" "href:" "get-property" "title" "let" "sections" "section")}
      {Lisp-Entry "section-content-output" () 159 11 ("get-output" "get-children" "put" "else" "output-articles" "articles" "get-tag" "case" "JML-Element" "is?" "if" "node" "dynamic" "function" "for-each" "List-Factory" "new" "output" "let" "section")}
      {Lisp-Entry "navigation-output" () 177 11 ("get-output" "subsec" "memq?" "or" "when" "if" "href:" "class:" "put" "eq?" "selected?" "title" "section-path" "format" "path" "get-property" "name" "subsecs" "sec" "bind" "info" "dynamic" "function" "for-each" "List-Factory" "new" "output" "let" "sections" "section")}
      {Lisp-Entry "manual-output" () 203 11 ("summary-output" "summary" "toc-output" "toc" "index-output" "index" "manual-content-output" "content" "eq?" "new-hashtable" "toc-anchors" "find-docs" "map" "append" "apply" "products" "get-property" "paths" "let*" "section")}
      {Lisp-Entry "manual-content-output" () 217 11 ("get-output" "output-manual-doc" "product" "dynamic" "function" "for-each" "List-Factory" "new" "output" "let" "products")}
      {Lisp-Entry "output-manual-doc" () 225 11 ("output-manual-doc-children" "output-manual-method" "Method-Doc" "output-manual-property" "Property-Doc" "output-manual-slot" "Slot-Doc" "output-manual-constant" "Constant-Doc" "output-manual-primitive" "Primitive-Doc" "output-manual-syntax" "Syntax-Doc" "output-manual-form" "Form-Doc" "output-manual-class" "Class-Doc" "output-manual-interface" "Interface-Doc" "output-manual-package" "Package-Doc" "output-manual-concept" "Concept-Doc" "output-manual-section" "Section-Doc" "output-manual-product" "Product-Doc" "typecase" "output" "doc")}
      {Lisp-Entry "output-manual-product" () 243 11 ("output-doc-description" "get-effective-title" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-section" () 249 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-concept" () 255 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-package" () 261 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-interface" () 267 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-class" () 273 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-form" () 279 11 ("output-doc-description" "get-parameters" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-syntax" () 286 11 ("output-doc-description" "get-parameters" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-primitive" () 293 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-constant" () 300 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-slot" () 307 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-property" () 314 11 ("output-doc-description" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-manual-method" () 321 11 ("output-doc-examples" "output-doc-description" "get-parameters" "get-effective-title" "class:" "put" "output-anchor" "output" "doc")}
      {Lisp-Entry "output-doc-description" () 329 11 ("put-sequence" "form->node" "->jml" "paragraphs" "tag" "bind" "when" "get-description" "description" "let" "output" "doc")}
      {Lisp-Entry "output-doc-examples" () 336 11 ("get-children" "form->node" "->jml" "rest" "tag" "bind" "example" "dynamic" "function" "map" "put" "when" "get-examples" "examples" "let" "output" "doc")}
      {Lisp-Entry "output-manual-doc-children" () 348 11 ("output-manual-docs" "get-name" "child" "dynamic" "function" "key:" "" "sort" "if" "sorted" "effective-manual-doc-children" "children" "get-sort?" "Section-Doc" "is?" "and" "sort?" "let*" "output" "doc")}
      {Lisp-Entry "output-manual-docs" () 357 11 ("output-manual-doc" "doc" "dynamic" "function" "for-each" "output" "docs")}
      {Lisp-Entry "effective-manual-doc-children" () 363 11 ("get-output" "get-children" "put" "put-sequence" "find-docs" "docs" "get-path" "path" "let*" "Doc-Insert" "is?" "if" "child" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let" "doc")}
      {Lisp-Entry "find-docs" () 375 11 ("get-output" "find-docs" "unimplemented" "else" "get-catalogs" "get-parent-product" "eq?" "when" "dynamic" "function" "for-each" "get-product" "parent" "*" "equal?" "get-client" "put" "null?" "cond" "find-catalog" "catalog" "let" "list" "symbol?" "if" "rest" "name" "bind" "List-Factory" "new" "docs" "get-documentation-cataloguer" "cataloguer" "get-application" "appl" "let*" "path")}
      {Lisp-Entry "output-anchor" () 394 11 ("anchor-names" "hash-add" "when" "name:" "put" "anchors" "register-anchor" "anchor" "get-name" "name" "let" "output" "doc")}
      {Lisp-Entry "register-anchor" () 402 11 ("hash-set!" "increase!" "next-section" "format" "prog1" "->string" "if" "anchor" "let" "anchors" "name" "object")}
      {Lisp-Entry "summary-output" () 413 11 ("length" "0" "naturals" "+" "list" "1" "doc-summary-output" "rank" "product" "dynamic" "function" "map" "href:" "class:" "style:" "user-message" "toc-anchors" "products")}
      {Lisp-Entry "doc-summary-output" () 426 11 ("length" "0" "naturals" "cons" "1" "+" "doc-summary-output" "rank" "child" "dynamic" "function" "map" "null?" "if" "href:" "class:" "collect-summary-children" "children" "hash-ref" "anchor" "present-toc-path" "format" "text" "present-doc-title" "title" "let*" "path" "level" "doc" "toc-anchors")}
      {Lisp-Entry "collect-summary-children" () 442 11 ("get-name" "child" "dynamic" "function" "key:" "" "sort" "if" "has-product-descendant?" "collect-if" "effective-manual-doc-children" "children" "get-sort?" "Section-Doc" "is?" "and" "sort?" "let" "doc")}
      {Lisp-Entry "has-product-descendant?" () 451 11 ("effective-manual-doc-children" "for-each" "Section-Doc" "true" "set!" "Product-Doc" "typecase" "dynamic" "function" "iter" "letrec" "false" "has?" "let" "doc")}
      {Lisp-Entry "toc-output" () 467 11 ("length" "0" "naturals" "+" "list" "1" "doc-toc-output" "rank" "product" "dynamic" "function" "map" "name:" "user-message" "toc-anchors" "products")}
      {Lisp-Entry "doc-toc-output" () 476 11 ("length" "0" "naturals" "cons" "+" "doc-toc-output" "child" "dynamic" "function" "map" "null?" "href:" "name:" "class:" "register-anchor" "toc-anchor" "3" "" "1" "=" "and" "if" "toc-prefix" "car" "rank" "collect-toc-children" "children" "anchors" "hash-ref" "anchor" "present-toc-path" "format" "text" "present-doc-title" "title" "let*" "path" "level" "doc" "toc-anchors")}
      {Lisp-Entry "present-doc-title" () 495 11 ("get-effective-title" "doc")}
      {Lisp-Entry "present-toc-path" () 499 11 ("reverse" "->string" "map" "join" "path")}
      {Lisp-Entry "collect-toc-children" () 503 11 ("get-name" "key:" "" "sort" "if" "Form-Doc" "Category-Doc" "Package-Doc" "Concept-Doc" "Product-Doc" "or" "child" "dynamic" "function" "collect-if" "effective-manual-doc-children" "children" "get-sort?" "Section-Doc" "is?" "and" "sort?" "let" "doc")}
      {Lisp-Entry "index-output" () 523 11 ("get-output" "width:" "index-navigator" "name:" "output-letter" "letter" "dynamic" "function" "for-each" "List-Factory" "new" "output" "eq?" "new-hashtable" "letter-anchors" "car" "key:" "letters-partition" "" "sort" "letters" "let" "user-message")}
      {Lisp-Entry "output-letter" () 537 11 ("href:" "format" "title" "doc" "info" "dynamic" "function" "for-each" "String" "coerce" "name:" "class:" "colspan:" "put" "register-anchor" "anchor" "let" "infos" "char" "bind" "output" "letter-anchors" "letter")}
      {Lisp-Entry "letters-partition" () 550 11 ("third" "first" "upcase" "info" "function" "key:" "gather-anchors" "partition")}
      {Lisp-Entry "gather-anchors" () 554 11 ("third" "key:" "" "sort" "anchors" "list" "cons" "set!" "get-effective-title" "title" "get-name" "when" "anchor" "doc" "dynamic" "function" "for-each-hash" "lst" "let")}
      {Lisp-Entry "index-navigator" () 564 11 ("get-output" "String" "coerce" "href:" "class:" "put" "hash-ref" "format" "anchor" "car" "char" "let" "letter" "for-each" "letter-set" "dynamic" "function" "process-letter-set" "List-Factory" "new" "output" "true" "alpha" "false" "assv" "cdr" "non-alpha" "alphabetic-partition" "partition" "let*" "letter-anchors" "letters")}
      {Lisp-Entry "alphabetic-partition" () 583 11 ("alphabetic?" "car" "char" "let" "letter" "dynamic" "function" "key:" "partition" "letters")}
      {Lisp-Entry "output-articles" () 594 11 ("get-children" "output-article" "article" "dynamic" "function" "for-each" "output" "articles")}
      {Lisp-Entry "output-article" () 600 11 ("children->jml" "title" "->string" "name:" "null?" "if" "get-property" "name" "let" "put" "output" "article")}}})
"Jedi"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "application" "Jedi.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.application.Jedi" () 37 9 ("jazz")
      {Lisp-Entry "Jedi" () 49 7 ("IDE")
        {Lisp-Entry "documentation-cataloguer" () 52 8 ()}
        {Lisp-Entry "external-name" () 56 16 ("jedi" "rest")}
        {Lisp-Entry "process-name" () 60 11 ()}
        {Lisp-Entry "process-owner" () 64 11 ()}
        {Lisp-Entry "process-copyright" () 68 11 ()}
        {Lisp-Entry "process-icon" () 72 11 ("Bitmap-Resource")}
        {Lisp-Entry "process-version" () 76 11 ("6" "beta" "0" "1" "Version")}
        {Lisp-Entry "process-email" () 80 11 ()}
        {Lisp-Entry "new-toplevel" () 84 11 ("Jedi-Toplevel" "new")}
        {Lisp-Entry "prepare-process" () 88 11 ("launch-supervisor-thread" "nextmethod" "rest")}
        {Lisp-Entry "start-process" () 94 11 ("jazz" "set-catalog-context" "nextmethod" "rest")}
        {Lisp-Entry "finalize-process" () 99 11 ("loop" "add-level-change-listener" "on-level-change" "listener" "let" "on-workspace" "method-name:" "self" "target:" "Event-Handler" "workspace" "add-application-listener" "JDBC-Provider" "Sybase-Provider" "SQLServer-Provider" "Oracle-Provider" "Informix-Provider" "dBase-Provider" "Access-Provider" "new" "register-provider" "Provider" "in-manifest?" "when" "get-cataloguer" "preload-catalogs" "nextmethod" "rest")}
        {Lisp-Entry "on-level-change" () 120 11 ("continue" "toplevel" "stop" "call-run-to" "call-step-out" "call-step-into" "call-step-over" "run-to-result" "run-to-cursor" "step-outside-function" "step-out" "step-into-function" "step-into" "step-over" "debugger" "Action" "set-action-enabled?" "0" "/=" "enabled?" "get-level" "level" "get-sender" "loop" "let*" "evt")}
        {Lisp-Entry "finish-process" () 143 11 ("display-boot-time" "nextmethod" "launch-time:" "getf" "launch-time" "let" "rest")}
        {Lisp-Entry "get-search-manager" () 155 11 ("Jedi-Search" "singleton-palette")}
        {Lisp-Entry "mandatory-version" () 164 11 ("nextmethod" "else" "4" "access-database" "6" "3" "dao" "0" "8" "Version" "sqlserver" "case" "what")}
        {Lisp-Entry "base-frame-class" () 177 11 ("Text-View")}
        {Lisp-Entry "default-frame-class" () 181 11 ("Jazz-Text-View")}
        {Lisp-Entry "known-extension-frame-class" () 185 11 ("nextmethod" "else" "Jazz-Text-View" "Jazz-Extensions" "CommonLisp-Text-View" "CommonLisp-Extensions" "Scheme-Text-View" "Scheme-Extensions" "Java-Text-View" "Jazz-Plain-Text-View" "ci=" "test:" "member?" "cond" "ext")}
        {Lisp-Entry "edit-file" () 200 11 ("nextmethod" "else" "browse-java-jarfile" "browse-java-classfile" "edit-snapshot" "edit-stack" "ci=" "cond" "get-extension" "ext" "let" "file")}
        {Lisp-Entry "edit-category" () 209 11 ("edit" "1" "list" "Jazz-Code-Location" "new" "location" "let" "name")}
        {Lisp-Entry "get-text-class" () 219 11 ("Jazz-Text-View")}
        {Lisp-Entry "edit-stack" () 229 11 ("debugger" "select-workspace" "get-debuggers-view" "open-snapshot" "file")}
        {Lisp-Entry "edit-snapshot" () 240 11 ("debugger" "select-workspace" "get-debuggers-view" "open-snapshot" "file")}
        {Lisp-Entry "browse-java-classfile" () 251 11 ("browse-classfile" "get-guest" "manager" "Java-Manager" "new-frame" "host" "let*" "file")}
        {Lisp-Entry "browse-java-jarfile" () 258 11 ("browse-jarfile" "get-guest" "manager" "Java-Manager" "new-frame" "host" "let*" "file")}
        {Lisp-Entry "get-repository-classes" () 270 11 ("VSS-Repository" "list")}
        {Lisp-Entry "persist-usernames?" () 280 11 ("true")}
        {Lisp-Entry "persist-passwords?" () 284 11 ("true")}
        {Lisp-Entry "get-context-text" () 293 11 ()}
        {Lisp-Entry "reload-opened-windows" () 304 11 ()}
        {Lisp-Entry "reload-component" () 309 11 ("nextmethod" "else" "Jazz-Text-View" "jazz-text" "Jedi-Search" "new-frame" "" "apply" "search" "case" "properties" "class")}
        {Lisp-Entry "launch" () 321 18 (":wait?" "directory:" "create-process" "debug-string" "save-all" "command" "arguments-arg" "action-arg" "listening-port" "controllerport-arg" "stub-listener" "listening-host" "get-ip" "controllerhost-arg" "debug-arg" "user-arg" "Root" "Directory" "rootdir-arg" "homedir-arg" "format" "app-arg" "Base" "File" "interpreter" "case" "parse" "filename" "let*" "start-proxy-dispatcher" "start-stub-listener" "when" "export-manifest" "get-name" "error" "not" "if" "project-application" "app-class" "let" "launcher" "get-runtime" "runtime" "runtime:" "project-command-arguments" "get-arguments" "command-arguments" "command-arguments:" "project-command-action" "get-action" "command-action" "command-action:" "wait?" "wait?:" "false" "get-debug-c++?" "debug-c++?" "debug-c++?:" "project-debug?" "get-debug?" "debug?" "debug?:" "project-user" "get-user" "essay" "either" "user" "user:" "project-home" "home-directory" "home-directory:" "jazz-directory" "jazz-directory:" "configuration" "configuration:" "project")}
        {Lisp-Entry "execute" () 352 18 (":wait?" "create-process" "debug-string" "command" "arguments-arg" "action-arg" "format" "user-arg" "parse" "filename" "outputed-file" "file" "let*" "get-presentation" "error" "not" "if" "project-application" "app-class" "let" "false" "wait?" "wait?:" "project-command-arguments" "command-arguments" "command-arguments:" "project-command-action" "command-action" "command-action:" "project-user" "user" "user:" "project")}
        {Lisp-Entry "log-exception" () 373 11 ("Bitmap-Resource" "image:" "get-message" "log-line" "log-info" "Error" "is?" "if" "clear-results" "get-output-log" "output" "let" "exception")}
        {Lisp-Entry "select-output-log" () 382 11 ("Output-Log" "select-palette" "select-first" "select-results" "get-output-log" "output" "let")}
        {Lisp-Entry "get-documentation-cataloguer" () 395 11 ("new-documentation-cataloguer" "set!" "get-preferences" "get-documented?" "when" "documentation-cataloguer" "unless")}
        {Lisp-Entry "new-documentation-cataloguer" () 403 11 ("add-catalog" "Doc-Catalog" "catalog" "get-name" "name" "read-from-file" "instantiate" "doc" "let*" "when" "get-documentation" "file" "descendant" "dynamic" "function" "for-each-product" "get-workbench" "workbench" "Cataloguer" "new" "cataloguer" "let")}
        {Lisp-Entry "reload-documentation" () 418 18 ("get-documentation-cataloguer" "documentation-cataloguer" "set!")}
        {Lisp-Entry "class-actions" () 428 11 ("nextmethod" "jedi" "debugger" "find-actions" "cons")}
        {Lisp-Entry "update-project-titles" () 440 18 ("edit" "child" "get-content" "locate" "set-title" "get-presentation" "format" "not" "if" "title" "Workbench-Manager" "get-active-project" "project" "let*" "menubar" "when")}
        {Lisp-Entry "update-project-actions" () 448 18 ("launch-project" "execute-project" "export-project-manifest" "analyse-project-references" "view-project-log" "build-project" "compile-file" "edit-project" "jedi" "Action" "set-action-enabled?" "find-source" "get-workbench" "workbench" "get-controller" "get-moniker" "moniker" "Document" "is?" "and" "when" "current-document" "guest" "product-file" "Workbench-Manager" "get-active-project" "project" "let")}
        {Lisp-Entry "update-windowing-actions" () 472 11 ("update-menubar-buttons" "update-window-actions" "update-project-actions" "update-search-actions" "update-history-actions")}
        {Lisp-Entry "navigable-results" () 485 11 ("Violations-Manager" "Output-Log" "Search-Results" "singleton-docked" "get-guest" "list")}
        {Lisp-Entry "on-java-reference-finder" () 497 11 ("Java-Reference-Finder" "new" "evt")}
        {Lisp-Entry "on-message-spy" () 502 11 ("Message-Spy" "new-palette" "evt")}
        {Lisp-Entry "on-event-spy" () 507 11 ("Event-Spy" "new-palette" "evt")}
        {Lisp-Entry "on-registry-viewer" () 512 11 ("Registry-Viewer" "new-frame" "evt")}
        {Lisp-Entry "on-type-viewer" () 517 11 ("Type-Viewer" "new-frame" "evt")}
        {Lisp-Entry "on-java-manager" () 522 11 ("Java-Manager" "new-frame" "evt")}
        {Lisp-Entry "on-showcase" () 527 11 ("Showcase" "new-frame" "evt")}
        {Lisp-Entry "on-gc-triggers" () 532 11 ("gc-triggers" "user-message" "evt")}
        {Lisp-Entry "on-profiler-manager" () 537 11 ("Profiler-Manager" "show-palette" "evt")}
        {Lisp-Entry "on-documentation-editor" () 542 11 ("get-client" "client:" "Doc-Editor" "new-frame" "get-catalogs" "car" "catalog" "get-documentation-cataloguer" "cataloguer" "let*" "evt")}
        {Lisp-Entry "on-reload-libraries" () 549 11 ("user-message" "reload-libraries" "evt")}
        {Lisp-Entry "on-run-smoker" () 555 11 ("Smoker-Builder" "new" "build/run" "evt")}
        {Lisp-Entry "on-find-dead-code" () 560 11 ("Dead-Code-Analyser" "go" "evt")}
        {Lisp-Entry "on-update-remotable-code" () 565 11 ("get-shift?" "force?:" "Remotable-Updater" "new" "update" "evt")}
        {Lisp-Entry "on-toolbox" () 570 11 ("true" "focus?:" "designer" "workspace:" "Toolbox-Manager" "select-palette" "evt")}
        {Lisp-Entry "on-descendants" () 575 11 ("true" "focus?:" "designer" "workspace:" "Descendants-Editor" "select-palette" "evt")}
        {Lisp-Entry "on-branches" () 580 11 ("true" "focus?:" "designer" "workspace:" "Branches-Editor" "select-palette" "evt")}
        {Lisp-Entry "on-spy-events" () 585 18 ("Event-Spy" "show-palette" "evt")}
        {Lisp-Entry "on-spy-messages" () 590 18 ("Message-Spy" "show-palette" "evt")}
        {Lisp-Entry "record-event?" () 595 11 ("true" "event")}
        {Lisp-Entry "on-import-jsc-database" () 604 11 ("import-repository" "JSC-Repository-Importer" "new" "importer" "let" "evt")}
        {Lisp-Entry "on-import-jsc-directory" () 610 11 ("import-base-directory" "get-application" "get-user" "type-name" "->string" "user" "JSC-Directory-Importer" "new" "importer" "Native" "Directory" "depot" "initial-value:" ":prefix" "title:" "request-string" "name" "BrowseFolder-Dialog" "get-modal" "directory" "let" "evt")}
        {Lisp-Entry "on-create-jsc-workspace" () 620 11 ("import-repository" "JSC-Repository-Importer" "new" "importer" "let" "evt")}
        {Lisp-Entry "on-create-snapshot" () 631 11 ("get-shift?" ":central?" "JSC-Roaming" "new" "create-snapshot" "evt")}
        {Lisp-Entry "on-install-roamer" () 636 11 ("JSC-Roaming" "new" "install-roamer" "evt")}
        {Lisp-Entry "on-gather-changes" () 641 11 ("JSC-Roaming" "new" "gather-changes" "evt")}
        {Lisp-Entry "on-integrate-latest" () 646 11 ("JSC-Roaming" "new" "integrate-latest" "evt")}
        {Lisp-Entry "on-submit" () 651 11 ("JSC-Roaming" "new" "submit" "evt")}
        {Lisp-Entry "on-fetch" () 656 11 ("JSC-Roaming" "new" "fetch" "evt")}
        {Lisp-Entry "on-merge-changes" () 661 11 ("JSC-Roaming" "new" "merge-changes" "evt")}
        {Lisp-Entry "on-readme" () 671 18 ("Root" "File" "edit-document" "evt")}}}})
"Jedi-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "preferences" "Jedi-Actions.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.preferences.Jedi-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Actions" () 47 7 ("on-about" "about" "on-readme" "readme" "sql" "select-sql" "groupware" "select-groupware" "debugger" "select-debugger" "text" "select-text" "home" "workspace:" "on-select-workspace" "select-home" "play-recording-5" "play-recording-4" "play-recording-3" "play-recording-2" "play-recording-1" "play-recording-0" "on-play-recording" "play-recording" "on-set-active-recording" "set-active-recording" "on-output-recording" "output-recording" "on-register-recording" "register-recording" "on-present-recording" "present-recording" "on-continue-recording" "continue-recording" "on-stop-recording" "stop-recording" "on-start-recording" ":recorder" "start-recording" "on-reload-libraries" "reload-libraries" "on-update-remotable-code" "update-remotable-code" "on-refresh-window" "refresh-window" "on-capture-root" "capture-root" "on-capture-document" "capture-document" "unzoom-document" "zoom-out-document" "document" "zoom-in-document" "on-unzoom" "unzoom-mouse-view" "on-zoom-out" "zoom-out-mouse-view" "mouse-view" ":what" "on-zoom-in" "zoom-in-mouse-view" "on-update-catalog" "update-catalog" "on-catalogs-manager" "catalogs-manager" "on-gather-changes" "gather-changes" "on-create-snapshot" "create-snapshot" "on-compare-files" "compare-files" "on-compare-directories" "compare-directories" "on-windows-inspector" "windows-inspector" "on-processes-inspector" "processes-inspector" "on-threads-manager" "threads-manager" "on-memory-inspector" "memory-inspector" "on-profiler-manager" "profiler-manager" "on-resources-monitor" "resources-monitor" "on-logs-viewer" "logs-viewer" "on-class-browser" "class-browser" "0" "test-0" "9" "test-9" "8" "test-8" "7" "test-7" "6" "test-6" "5" "test-5" "4" "test-4" "3" "test-3" "2" "test-2" "1" "no:" "on-test-no" "test-1" "on-test-shift" "test-shift" "on-test" "test" "on-spy-events" "spy-events" "on-spy-messages" "spy-messages" "on-explore-views" "explore-views" "F8" "on-debug-view" "debug-view" "on-launch-project" "launch-project" "F5" "on-execute-project" "execute-project" "on-export-manifest" "export-project-manifest" "on-references-project" "analyse-project-references" "on-view-project-log" "view-project-log" "on-build-project" "build-project" "F7" "on-compile-file" "compile-file" "on-edit-project" "edit-project" "on-showcase" "view-showcase" "on-documentation-editor" "view-documentation-editor" "on-hierarchy" "view-hierarchy" "on-chapters" "view-chapters" "on-sql-console" "view-sql-console" "on-sql-inventory" "view-sql-inventory" "on-sql-connections" "view-sql-connections" "on-java-manager" "view-java-manager" "on-java-reference-finder" "view-java-reference-finder" "on-preferences" "view-preferences" "on-bindings" "view-bindings" "on-branches" "view-branches" "on-descendants" "view-descendants" "on-toolbox" "view-toolbox" "on-type-viewer" "view-type-viewer" "on-registry-viewer" "view-registry-viewer" "on-web-servers" "view-web-servers" "on-activities" "view-activities" "on-user-log" "view-user-log" "on-output-log" "view-output-log" "on-search-results" "view-search-results" "on-properties" "view-properties" "on-debugger" "view-debugger" "Space" "on-console" "view-console" "on-contacts" "view-contacts" "on-favorites" "view-favorites" "on-repositories" "view-repositories" "on-workbench" "view-workbench" "on-exit-without-save" "exit-without-save" "on-save-workspace" "save-workspace" ":shift" "on-open-jazz-text" "open-jazz-text" ":alt" ":control" "Shortcut" "shortcut:" "on-open-text" ":application" "Event-Handler" "action-handler:" "open-text" "name:" "Actions")}}})
"Jedi-Bindings"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "preferences" "Jedi-Bindings.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.preferences.Jedi-Bindings" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Bindings" () 47 7 ("wallpaper" "tree-showcase" "formatted-presentation" "presentation" "preview-pane" "search-results-tree" "search-manager" "compare-trees" "class-browser" "debugger" "guest" "manager" "workbench-manager" "workbench-tree" "entities-tree" "components-tree" "tree" "components-viewer" "tree-embedded-search-text" "sql-text" "scheme-text" "html-text" "formatted-text" "doc-text" "composite-text" "compare-text" "combo-text" "jazz-console-text" "console-text" "jazz-text" "lisp-text" "code-text" "text" "view" "jedi" "ide" "application" "name:" "Bindings")}}})
"Jedi-Menubar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "application" "Jedi-Menubar.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.application.Jedi-Menubar" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Menubar" () 46 7 ("Menubar")
        {Lisp-Entry "palette-class" () 55 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 60 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 65 16 ()}
        {Lisp-Entry "install" () 74 11 ("select" "content" "child" "layout-menu" "Help-Menu" "help" "Window-Advanced-Menu" "window" "Workspace-Menu" "workspace" "Tools-Menu" "tools" "External-Menu" "external" "Group-Menu" "group" "Debug-Menu" "debug" "Run-Menu" "run" "Project-Menu" "project" "Search-Menu" "search" "View-Menu" "view" "Edit-Menu" "edit" "IDE-File-Menu" "list" "children:" "file" "name:" "self" "parent:" "Label-Item" "new" "dynamic" "function" "with-update-locked" "nextmethod" "rest")}}
      {Lisp-Entry "View-Menu" () 100 7 ("view-showcase" "showcase" "view-documentation-editor" "documentation-editor" "view-hierarchy" "hierarchy" "view-chapters" "chapters" "view-sql-console" "sql-console" "view-sql-inventory" "sql-inventory" "view-sql-connections" "sql-connections" "view-java-manager" "java-manager" "view-java-reference-finder" "java-reference-finder" "view-preferences" "preferences" "view-bindings" "bindings" "view-branches" "branches" "view-descendants" "descendants" "view-toolbox" "toolbox" "view-type-viewer" "type-viewer" "view-registry-viewer" "registry-viewer" "view-web-servers" "web-servers" "view-activities" "activities" "view-user-log" "user-log" "view-output-log" "output-log" "view-search-results" "search-results" "view-properties" "properties" "view-console" "console" "view-contacts" "contacts" "view-favorites" "favorites" "view-repositories" "repositories" "view-workbench" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "workbench" "name:" "title:" "Menu")}
      {Lisp-Entry "Project-Menu" () 165 7 ("launch-project" "launch" "execute-project" "execute" "analyse-project-references" "references" "view-project-log" "view-log" "build-project" "build" "compile-file" "compile" "edit-project" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "edit" "name:" "title:" "Menu")}
      {Lisp-Entry "Run-Menu" () 187 7 ("next-debuggee" "next-process" "variables" "debuggers" "toplevel" "stop" "continue" "debugger" "Action" "action:" "Bitmap-Resource" "icon:" "break" "name:" "title:" "Menu")}
      {Lisp-Entry "Debug-Menu" () 210 7 ("windows-inspector" "processes-inspector" "threads-manager" "memory-inspector" "profiler-manager" "resources-monitor" "logs-viewer" "class-browser" "test-0" "test-9" "test-8" "test-7" "test-6" "test-5" "test-4" "test-3" "test-2" "test-1" "test-shift" "tooltip-text:" "tooltip?:" "test" "spy-events" "spy-messages" "Bitmap-Resource" "icon:" "explore-views" "jedi" "Action" "action:" "debug-view" "name:" "title:" "Menu")}
      {Lisp-Entry "Group-Menu" () 254 7 ("gather-changes" "create-snapshot" "compare-files" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "compare-directories" "name:" "title:" "Menu")}
      {Lisp-Entry "Tools-Menu" () 271 7 ("update-remotable-code" "refresh-window" "capture-root" "capture-document" "name:" "unzoom-document" "zoom-out-document" "zoom-in-document" "unzoom-mouse-view" "zoom-out-mouse-view" "zoom-in-mouse-view" "update-catalog" "catalogs-manager" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "Menu")}
      {Lisp-Entry "Help-Menu" () 305 7 ("about" "readme" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "Menu")}}})
"Jedi-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "preferences" "Jedi-Preferences.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jedi.preferences.Jedi-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Preferences" () 47 7 ("wallpaper" "SealedDebugged" "Sealed" "Distribution" "sealed?:" "distribution?:" "generate-symbols?:" "debug-executable?:" "debug-c++-code?:" "optimize?:" "validate?:" "Debug" "Release" "active-policy:" "VC-Builder" "cpp-builder:" "build" "active?:" "output-file:" "type:" "Runtime" "catalogs" "repositories" "debug" "image" "image-view" "associations:" "Jedi-Status" ":status" "Jedi-Toolbar" ":toolbar" "Jedi-Menubar" ":menubar" "toolbar-classes:" "home" "sql" "jazz-files" "active-domain:" "Zip-Module" "JavaParser-Module" "Java-Module" "Interpreter-Module" "Kernel-Module" "DDE-Module" "cpp/java-directories:" "text" "active:" "search-manager" "repository-manager" "preferences-manager" "console" "compare-directories" "xml-text" "sql-text" "shell-text" "scheme-text" "python-text" "properties-text" "prop-text" "plain-text" "lua-text" "jazz-text" "javascript-text" "java-text" "html-text" "css-text" "csharp-text" "cpp-text" "commonlisp-text" "name:" "Doc-Catalog" "Jazz-Catalog" "jazz" "Indexed-Catalog" "indexed" "catalog-types:" "Category-Moniker" "category" "Document-Moniker" "doc" "Roaming-Directory" "roaming-directory" "Roaming-File" "roaming-file" "Roamer" "roamer" "Roaming-Repository" "rrp" "Repository-Moniker" "item" "Zipped" "zip" "URL" "url" "Directory-Group" "group" "Directory" "dir" "File" "file" "protocols:" "documented?:" "maximized" "toplevel-state:" "title:" "IDE-Preferences")}}})
"Jedi-Project"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "Jedi-Project.fusion"} {Time 128360669980000000L}
    {Lisp-Entry "jedi.Jedi-Project" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Project" () 44 7 ("Memory" "Pretty-Printer" "Completion-Popup" "Vertical-View" "Horizontal-View" "Smoker-Suite" "Smoker-Builder" "Smoker" "Tree-Showcase-Actions" "Tree-Showcase" "Threads-Showcase" "Text-Showcase" "Showcase" "Scaled-View" "Outline-Showcase" "Jedi-Search" "Jedi-Bindings" "Jedi-Actions" "Jedi-Preferences" "Code-Generator" "Manager-Actions" "Menu-Editor" "Manager-View" "Designer-Manager" "Alignment-Editor" "Updater-Builder" "Updater" "Jedi-User" "Jedi-Toplevel" "Jedi-Toolbar" "Jedi-Status" "Jedi-Menubar" "Live-Exceptions" "Dead-Code-Analyser" "Jedi-Project" "File" "source:" "Analyser" "JazzWebsite-Project" "Launcher-Project" "Interpreter-Project" "XML-Module" "SQL-Module" "Setup-Module" "Schema-Module" "Repository-Module" "Recorder-Module" "Python-Module" "Messenger-Module" "Lua-Module" "JSC-Module" "JRM-Module" "JML-Module" "Jazz-Module" "Java-Module" "HTML-Module" "Groupware-Module" "Explorer-Module" "Doc-Module" "Designer-Module" "Debugger-Module" "Debuggee-Module" "Console-Module" "Compiler-Module" "Catalog-Module" "Builder-Module" "Application-Module" "Access-Module" "UI-Module" "reference" "Library-Module" "Interpreter-Module" "Resources-Module" "DDE-Module" "Zip-Module" "Slayer-Module" "JavaParser-Module" "Kernel-Module" "include" "kind:" "Boot-Module" "dependencies" "name:" "Release" "anonymous-build:" "Jedi" "application-class:" "copyright:" "owner:" "title:" "Project")
        {Lisp-Entry "project-root-databases" () 142 11 ("User" "File")}
        {Lisp-Entry "project-extra-roots" () 154 11 ("Web-Server-Configuration" "Web-Server-Configurations")}
        {Lisp-Entry "project-manifest" () 159 11 ("project-distribution" "new-directory" "new-file")}}}})
"Jedi-Search"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "search" "Jedi-Search.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.search.Jedi-Search" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Search" () 45 7 ("definitions-search" "definitions" "directories-search" "directories" "text-search" "fill" "layout-type:" "content" "title:" "text" "tab" "name:" "Search-Manager")}}})
"Jedi-Status"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "application" "Jedi-Status.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.application.Jedi-Status" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Status" () 49 7 ("mode" "look" "locales" "activities" "Bitmap-Resource" "icon:" "tail" "title:" "workspace" "center" "location:" "message" "on-context-menu" "context-menu-handler:" "on-mouse-down" "form:" "Event-Handler" "mouse-down-handler:" "tooltip-text:" "tooltip?:" "Dimension" "size:" "debugger" "name:" "IDE-Status")
        {Lisp-Entry "install" () 63 11 ("debugger" "locate" "set-icon" "process-icon" "icon" "get-process" "process" "let*" "nextmethod" "rest")}
        {Lisp-Entry "palette-class" () 77 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 82 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 87 16 ()}
        {Lisp-Entry "on-context-menu" () 96 11 ("nextmethod" "else" "Look-Menu" "look" "Locales-Menu" "locales" "Activities-Menu" "activities" "self" "Workspaces-Menu" "popup-workspaces-menu" "workspace" "Debugger-Menu" "new" "track-popup-menu" "debugger" "case" "get-position" "acquire" "pos" "get-name" "name" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-mouse-down" () 109 11 ("nextmethod" "else" "Look-Menu" "look" "Locales-Menu" "new" "track-popup-menu" "locales" "get-activity-manager" "toggle-visible?" "activities" "self" "Workspaces-Menu" "popup-workspaces-menu" "workspace" "select-debugger-workspace" "debugger" "case" "get-position" "acquire" "pos" "get-name" "name" "get-sender" "sender" "let*" "evt")}}}})
"Jedi-Toolbar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "application" "Jedi-Toolbar.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.application.Jedi-Toolbar" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Toolbar" () 46 7 ("sql" "groupware" "text" "workspace:" "on-select-workspace" "tooltip?:" "selected?:" ":icons" "portfolio:" "workspace" "group:" "tail" "location:" "home" "on-compare-files" "compare-files" "compare-directories" ":preserve-domain?" "on-find" ":application" "find" "continue" "toplevel" "break" "debugger" "launch-project" "launch" "execute-project" "jedi" "execute" "on-forward-menu" "forward-history" "forward" "on-backward-menu" "action-handler:" "pick" "body" "backward-history" "backward" "quick-find" "entry" "style:" "edge" "border-type:" "1" "Point" "position:" "redo" "undo" "on-clipboard-menu" "form:" "Event-Handler" "context-menu-handler:" "paste" "copy" "view" "cut" "0" "4" "Dimension" "size:" "print-preview" "print-layout" "print" "guest" "disabled-image-name:" "save" "open" "application" "Action" "action:" "Bitmap-Resource" "image-name:" "tooltip-text:" "new" "name:" "IDE-Toolbar")
        {Lisp-Entry "palette-class" () 107 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 112 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 117 16 ()}}}})
"Jedi-Toplevel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "application" "Jedi-Toplevel.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.application.Jedi-Toplevel" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-Toplevel" () 47 7 ("Dimension" "size:" "Point" "position:" "caption-base:" "IDE-Toplevel" "View-Player-Class")
        {Lisp-Entry "window-class" () 55 16 ()}
        {Lisp-Entry "initialize" () 60 16 ("Icon-Resource" "icon:" "register-toplevel" "nextmethod")}}}})
"Jedi-User"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "application" "Jedi-User.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.application.Jedi-User" () 37 9 ("jazz")
      {Lisp-Entry "Jedi-User" () 49 7 ("IDE-User")
        {Lisp-Entry "init" () 52 11 ("nextmethod")}
        {Lisp-Entry "finalize" () 56 11 ("nextmethod")}
        {Lisp-Entry "export-jedi" () 65 11 ("user-message" "export-manifest" "Jedi-Project" "find-project" "project" "get-workbench" "workbench" "let*")}
        {Lisp-Entry "load-catalog" () 77 11 ("thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "load-catalog-synchronized" "name")}
        {Lisp-Entry "load-catalog-synchronized" () 88 24 ("true" "set-active?" "when" "false" "error?:" "get-catalog" "catalog" "get-cataloguer" "cataloguer" "get-application" "appl" "let*" "name")}
        {Lisp-Entry "console-command" () 101 11 ("nextmethod" "else" "exit" ":exit" "edit" ":edit" "compile" ":compile" "touch-descendants" ":touch-descendants" "touch" ":touch" "Analyser" "load-all" ":load-all" "expand-scheme" ":expand-scheme" "expand" ":expand" "checkin" ":checkin" "true" "checkout" ":checkout" "car" "edit-documentation" ":doc" "case" "arguments" "command")}
        {Lisp-Entry "edit-documentation" () 121 11 ("edit-documentation" "get-application" "appl" "let" "name")}
        {Lisp-Entry "checkout" () 126 11 ("checkout-file" "get-manifest-source" "file" "name" "dynamic" "function" "for-each" "Repository" "get-repository" "repository" "let" "names")}
        {Lisp-Entry "checkin" () 134 11 ("checkin-file" "get-manifest-source" "file" "name" "dynamic" "function" "for-each" "Repository" "get-repository" "repository" "let" "names")}
        {Lisp-Entry "expand" () 142 11 ("else" "macro?" "apply" "syntax-macro?" "cond" "definition-value" "macro" "let" "true" "debug" "begin" "null?" "if" "Interactive-Object" "essay" "Java" "Language" "either" "definition" "class-of" "category-field" "object" "dynamic" "function" "try" "let*" "arguments" "name" "bind" "form")}
        {Lisp-Entry "expand-scheme" () 157 11 ("true" "macro?" "apply" "debug" "syntax-macro?" "cond" "Kernel" "either" "definition-value" "macro" "class-of" "category-field" "package" "dynamic" "function" "try" "let*" "arguments" "name" "bind" "form")}
        {Lisp-Entry "touch" () 166 11 ("false" "touch-classes" "classes")}
        {Lisp-Entry "touch-descendants" () 170 11 ("true" "touch-classes" "classes")}
        {Lisp-Entry "touch-classes" () 174 11 ("->string" "map" "join" "format" "null?" "if" "format-plural" "length" "count" "get-output" "all" "autoload" "type-descendants" "for-each" "user-message" "put" "touch" "category-compiled?" "and" "when" "get-manifest-source" "source" "type-name" "name" "let*" "model" "dynamic" "function" "process" "letrec" "List-Factory" "new" "touched" "let" "classes" "descendants?")}
        {Lisp-Entry "compile" () 200 11 ("compile-classes" "classes")}
        {Lisp-Entry "edit" () 204 11 ("Jazz-Code-Location" "new" "edit" "location")}
        {Lisp-Entry "JazzWebsite-Directory" () 213 14 ("JazzWebsite-Project" "Directory")}
        {Lisp-Entry "test0" () 217 11 ("regenerate-jazzwebsite" "save" "Jazz-Text-View" "get-guest" "guest" "View-Host" "is?" "and" "when" "current-frame" "frame" "let")}
        {Lisp-Entry "regenerate-jazzwebsite" () 226 11 ("generate-jazzwebsite" "get-application" "reload-documentation")}
        {Lisp-Entry "generate-jazzwebsite" () 231 11 ("render-jazzwebsite-page" "path" "get-property" "user-message" "page" "dynamic" "function" "for-each" "get-children" "pages" "JazzWebsite-Transformation" "new" "transform-jml" "site" "load-jml" "node" "JazzWebsite-Project" "File" "file" "let*")}
        {Lisp-Entry "render-jazzwebsite-page" () 243 11 ("render" "File-Printer" "printer" "with-closed" "first-child" "html" "XHTML-Renderer" "renderer" "JML-Preferences" "new" "preferences" "path" "get-property" "format" "new-file" "file" "JazzWebsite-Directory" "content" "let*" "page")}
        {Lisp-Entry "test" () 259 11 ("new-mandelbrot")}
        {Lisp-Entry "new-mandelbrot" () 264 11 ("home" "host-workspace:" "Dimension" "host-size:" "Point" "host-position:" "host-title:" "Mandelbrot" "new-frame")}
        {Lisp-Entry "gambit" () 273 11 ("true" "visible?:" "Dimension" "size:" ":wait?" ":capture-error?" ":capture-output?" "false" ":capture-input?" "jazz" "Directory" "directory:" "create-process" "if" "format" "command" ":exit" "case" "exception" "let*" ":repl" "exception-handler" "exception-handler:" "maximum-heapsize" "maximum-heapsize:" "expr" "expr:")}
        {Lisp-Entry "Template-AList" () 285 14 ("source" "package" "title")}
        {Lisp-Entry "test8" () 292 11 ("user-message" "Template-AList" "expand" "File-Printer" "output" "with-closed" "Builder-Module" "File" "template" "Template-Expander" "new" "expander" "let")}
        {Lisp-Entry "test" () 306 11 ("test-taskbar")}
        {Lisp-Entry "test-shift" () 311 11 ("test-remove-taskbar")}
        {Lisp-Entry "test-taskbar" () 316 11 ("NIM_ADD" "Shell_NotifyIcon" "hIcon" "JZ_TASKICON" "uCallbackMessage" "NIF_ICON" "NIF_MESSAGE" "bit-or" "uFlags" "uID" "get-toplevel-hwnd" "hWnd" "size-of" "cbSize" "set" "height:" "width:" "Icon-Resource" "Image" "load-image" "icon" "NOTIFYICONDATA" "new" "record" "let")}
        {Lisp-Entry "test-remove-taskbar" () 329 11 ("NIM_DELETE" "Shell_NotifyIcon" "uID" "get-toplevel-hwnd" "hWnd" "size-of" "cbSize" "set" "NOTIFYICONDATA" "new" "record" "let")}
        {Lisp-Entry "test" () 343 11 ("tie" "debug" "1" "x" "let")}
        {Lisp-Entry "test1" () 354 11 (":console" "format")}
        {Lisp-Entry "test2" () 359 11 (":console" "format")}
        {Lisp-Entry "test" () 369 11 ("org.apache.bcel.classfile.JavaClass" "category-field" "definition-value" "debug")}
        {Lisp-Entry "test" () 374 11 ("X" "new" "foo" "debug")}
        {Lisp-Entry "test-shift" () 379 11 ("X" "new" "get-foo" "debug")}
        {Lisp-Entry "test1" () 384 11 ("Window" "type-name" "map" "debug" "find-generics" "generics" "signature" "dynamic" "function" "test" "let" "B" "A" "Y" "X" "list" "insert-node" "get-dag-root" "dag-root" "Dispatcher" "new" "dispatcher" "let*")}
        {Lisp-Entry "test2" () 405 11 ("Integer" "Object" "type-name" "map" "debug" "find-generics" "generics" "signature" "dynamic" "function" "test" "let" "Point" "Rect" "list" "insert-node" "get-dag-root" "dag-root" "Dispatcher" "new" "dispatcher" "let*")}
        {Lisp-Entry "test2" () 421 11 ("Integer" "type-name" "map" "debug" "find-generics" "generics" "signature" "dynamic" "function" "test" "let" "list" "insert-node" "get-dag-root" "dag-root" "Dispatcher" "new" "dispatcher" "let*")}
        {Lisp-Entry "ed" () 442 14 ()}
        {Lisp-Entry "xa" () 446 14 ()}
        {Lisp-Entry "xb" () 450 14 ()}
        {Lisp-Entry "x1" () 454 14 ()}
        {Lisp-Entry "x2" () 458 14 ()}
        {Lisp-Entry "setup-exemplar" () 463 11 ("user-message" "x2" "x1" "5" "base:" "b" "xb" "3" ":c" "2" ":b" "1" ":a" "a" "name:" ":domain" "X" "xa" "Exemplar-Domain" "new" "ed" "set!")}
        {Lisp-Entry "test-exemplar" () 473 11 ("user-message" "x2" "x1" "xb" "xa" "init")}
        {Lisp-Entry "test9" () 486 11 ("internal-tabulate" "bell" "Jazz-Text-View" "is-not?" "if" "get-focus" "text" "let")}
        {Lisp-Entry "internal-tabulate" () 493 11 ("tabulate-columns" "set-range" "collect-maxes" "maxes" "range:" "Jazz-Explorer" "explorer" "Range" "new" "range" "get-start" "pos" "let*" "text")}
        {Lisp-Entry "collect-maxes" () 502 11 ("exit-composite" "get-output" "put" "get-start" "get-end" "get-col" "-" "size" "forward-expr" "List-Factory" "new" "let" "enter-composite" "while" "max" "map" "null?" "if" "set!" "sizes" "dynamic" "function" "update-maxes" "maxes" "let*" "explorer")}
        {Lisp-Entry "tabulate-columns" () 519 11 ("exit-composite" "cdr" "set!" "make-string" "list" "Range" "new" "replace-text" "end" "0" ">" "when" "diff" "get-start" "get-end" "get-col" "-" "size" "car" "max" "let*" "forward-expr" "enter-composite" "while" "dynamic" "function" "with-atomic-undo" "get-undoer" "undoer" "let" "maxes" "explorer" "text")}
        {Lisp-Entry "text-macro" () 543 11 ("toggle-bulleted" "get-format" "get-bulleted?" "unless" "get-paragraph" "paragraph" "let" "naturals" "one" "keep:" "paragraph-length" "remove-spaces" "row" "for-each" "list" "2" "+" "0" "Range" "replace" "dynamic" "function" "with-locked-update" "bell" "/=" "if" "Cell" "new" "get-char" "char" "get-column" "col" "get-end" "end" "get-start" "get-row" "start" "let*" "text")}
        {Lisp-Entry "test" () 565 11 ("test-for-each-page")}
        {Lisp-Entry "test-for-each-page" () 570 11 ("-" "debug" "get-top" "b" "get-row" "get-bottom" "t" "let" "bottom" "top" "page" "dynamic" "function" "1" "get-limit" "+" "0" "%" "for-each-page")}
        {Lisp-Entry "test-message-box" () 579 11 ("sound:" "1" "Light-Red" "highlight:" "Bitmap-Resource" "image:" "yo" "debug" "close-modal-dialog" "function" ":hyperlink" "2" ":indent" ":bulleted" "list" "message-box")}
        {Lisp-Entry "hide-paragraphs" () 589 11 ("hide" "paragraph" "row" "dynamic" "function" "for-each-selected-paragraph" "get-focus" "text" "let")}
        {Lisp-Entry "Excel-Dll" () 602 14 ("Native" "File")}
        {Lisp-Entry "Excel-Lib" () 606 14 ("Excel-Dll" "file:" "Type-Lib" "new")}
        {Lisp-Entry "Excel-Extractor" () 610 14 ("Excel-Lib" ":library" "Type-Extractor" "new")}
        {Lisp-Entry "Excel-Type" () 614 14 ("Excel-Lib" "get-handle" "get-type-info" "Type-Info" "new")}
        {Lisp-Entry "generate-typelib" () 619 11 ("extract" ":library" "Type-Extractor" "extractor" "file:" "Type-Lib" "new" "library" "let*" "pathname")}
        {Lisp-Entry "test-excel" () 626 11 ("emit-type-info" "set-emited" "Excel-Type" "list" "Excel-Extractor" "set-to-emit" "Jazz" "File" "File-Printer" "new" "printer" "with-closed")}
        {Lisp-Entry "test-excel" () 634 11 ("Excel-Extractor" "extract")}
        {Lisp-Entry "test-excel" () 639 11 (":activity" "Excel-Extractor" "extract" "activity" "function" "execute:" "self" "context:" "Activity" "new")}
        {Lisp-Entry "test-storage" () 652 11 ("Storage" "create-storage-file" "storage" "with-closed" "Jazz" "File" "file" "let")}
        {Lisp-Entry "test-doc-storage" () 659 11 ("debug" "type" "types" "pwcsName" "get" "stat" "dynamic" "function" "map" "names" "get-content" "content" "let*" "Storage" "open-storage-file" "storage" "with-closed" "Jazz" "File" "file" "let")}
        {Lisp-Entry "test-mail" () 674 11 (":attachment" "format" ":body" ":subject" ":recipient" "true" ":prompt?" "send-email" "Jazz" "File" "attachment" "let" "Mapi-Messages" "messages" "Mapi-Session" "new" "session" "with-closed")}
        {Lisp-Entry "test-ado" () 692 11 ("execute" "new-connection" "connection" "with-closed" ":dsn" "Access-Data-Source" "new" "data-source" "let")}
        {Lisp-Entry "Test-Connection" () 699 14 ()}
        {Lisp-Entry "get-connection" () 704 11 ("new-connection" "set!" "Test-Connection" "unless")}
        {Lisp-Entry "new-connection" () 711 11 ("open" "Connection" "new" "connection" "let")}
        {Lisp-Entry "close-connection" () 718 11 ("set!" "close" "Test-Connection" "when")}
        {Lisp-Entry "rq" () 725 11 ("get-connection" "new-request" "load-request" "request")}
        {Lisp-Entry "process-sql" () 730 11 ("describe-connection-table" "false" "focus?:" "workspace:" "Inventory-Browser" "select-palette" "browser" "1" "+" "name" "=" "0" "subseq" "command" "when" "position" "return:" "find" "pos" "let" "request" "connection")}
        {Lisp-Entry "expand-sql" () 741 11 ("format" "columns" "let" "upcase" "member?" "1" "+" "where" "0" "subseq" "null?" "if" "name" "position" "return:" "find" "pos" "trim-whitespace" "let*" "request")}
        {Lisp-Entry "test2" () 761 11 ("cn" "join" "message-box" ":arguments" "Java-Classpath" "classpath:" "execute" "output" "Java-Runtime" "new" "java" "let*")}
        {Lisp-Entry "test3" () 768 11 ("3" "5" "4" "test" "2" "cj" "debug" "8" "obj2" "org.jazzscheme.test.Test" "new" "obj1" "let")}
        {Lisp-Entry "test" () 781 11 ("foo" "thread" "function" "execute:" "self" "context:" "Thread" "new")}
        {Lisp-Entry "foo" () 789 11 ("hello" "debug" "message-box" "car" "begin" "unwind-protect" "1" "x" "let")}
        {Lisp-Entry "Error-Tester" () 799 9 ("View")
          {Lisp-Entry "processing?" () 802 10 ("false")}
          {Lisp-Entry "mouse-down" () 805 13 ("true" "processing?" "set!" "pos")}
          {Lisp-Entry "drag-move" () 809 13 ("1" "car" "processing?" "when" "pos")}
          {Lisp-Entry "drag-up" () 814 13 ("false" "processing?" "set!" "up" "debug" "rest" "pos")}}
        {Lisp-Entry "test-shift" () 820 11 ("self" ":guest-context" "Error-Tester" "new-frame")}
        {Lisp-Entry "test" () 830 11 ("foo" "dynamic" "receive-primary-with-error" "debug" "thread" "function" "execute:" "self" "context:" "Thread" "new")}
        {Lisp-Entry "test" () 841 11 ("1" "car" "thread" "function" "execute:" "self" "context:" "Thread" "new")}
        {Lisp-Entry "test-shift" () 849 11 ("done" "false" "error?:" ":timeout" "wait-for" "thread-done" "debug" "set-event" "1" "car" "sleep" "thread" "function" "execute:" "self" "context:" "Thread" "Impulse" "new" "impulse" "let")}
        {Lisp-Entry "test1" () 863 11 ("false" "error?:" ":timeout" "list" "wait-for" "debug" "t2" "sleep" "thread" "function" "execute:" "self" "context:" "Thread" "new" "t1" "let")}
        {Lisp-Entry "test-context" () 881 11 ("title:" "self" "context:" "false" "threaded?:" "a" "car" "0" "naturals" "foo" "with-continue" "n" "for-each" "to-fix" "with-restart" "reporter" "with-progress" "dynamic" "function" "with-execution-context")}
        {Lisp-Entry "to-fix" () 902 11 ("symbol->string" "debug")}
        {Lisp-Entry "foo" () 907 11 (":details" "title:" "goo" "dynamic" "function" "with-execution-node" "n")}
        {Lisp-Entry "goo" () 916 11 (":details" "title:" "hoo" "dynamic" "function" "with-execution-node" "n")}
        {Lisp-Entry "hoo" () 925 11 ("title:" "car" "dynamic" "function" "with-execution-node" "n")}
        {Lisp-Entry "test-parameters" () 938 11 ("main" "sleep" "3" "get-parameter" "debug" "thread" "function" "execute:" "self" "context:" "Thread" "new" "2" "test" "set-parameter")}
        {Lisp-Entry "test" () 956 11 ("log-entry" "dynamic" "function" "Base" "File" "file:" "test" "name:" "Log" "new" "with-log")}
        {Lisp-Entry "test-shift" () 964 11 ("2" "foo")}
        {Lisp-Entry "foo" () 969 11 ("bar" "format" "message:" "name:" "log-entry" "x")}
        {Lisp-Entry "bar" () 975 11 ("Stack-Snapshot" "new" ":data" "message:" "name:" "log-entry" "+" "y" "let" "x")}
        {Lisp-Entry "test" () 981 11 ("+" "node" "with-profile" "5" ":c" "3" ":b" "2" ":a" "list" "log-properties" "log-entry" "dynamic" "function" "Base" "File" "file:" "test" "name:" "Log" "new" "with-log")}
        {Lisp-Entry "test3" () 999 11 ("test-resources" "gc")}
        {Lisp-Entry "test-resources" () 1005 11 ("test-user-name" "test-thread" "test-synchronizer" "test-stack" "test-socket" "test-registry-key" "test-region" "test-reader" "test-pseudo-handle" "test-portfolio" "test-picture" "test-pen" "test-image" "test-font" "test-file-reader" "test-file-printer" "test-dc" "test-bitmap" "test-accelerator-table" "dynamic" "function" "Base" "File" "file:" "name:" "Log" "new" "with-log")}
        {Lisp-Entry "test-accelerator-table" () 1030 11 ("name:" "self" "F4" "list" "Accelerator-Table" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-bitmap" () 1038 11 ("name:" "height:" "width:" "desktop-dc" ":dc" "Bitmap" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-dc" () 1046 11 ("name:" "get-toplevel" "Window-DC" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-file-printer" () 1054 11 ("name:" "true" ":temporary?" "File-Printer" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-file-reader" () 1062 11 ("name:" "Root" "File" "File-Reader" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-font" () 1070 11 ("name:" "8" "point-size:" "font-name:" "Font" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-image" () 1078 11 ("name:" "Cursor-Resource" "cursor" "height:" "width:" "Icon-Resource" "icon" "Bitmap-Resource" "bitmap" "Image" "load-image" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-pen" () 1088 11 ("name:" "blue:" "green:" "red:" "Color" "color:" "Pen" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-picture" () 1096 11 ("name:" "Picture" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-portfolio" () 1104 11 ("name:" "Portfolio" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-pseudo-handle" () 1112 11 ("name:" "GetCurrentProcess" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-reader" () 1120 11 ("name:" "Root" "File" "File-Reader" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-region" () 1128 11 ("name:" "0" "Rect" "rect:" "Region" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-registry-key" () 1136 11 ("name:" "subkey" "key" "with-closed" "open-key" "HKEY_CURRENT_USER" "key2" "HKEY_CLASSES_ROOT" "key:" "Registry-Key" "new" "key1" "let" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-socket" () 1154 11 ("name:" "Socket" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-stack" () 1162 11 ("new-log-node" ":node" "1" "-" "after" "0" "=" "if" "n" "proc" "letrec" "before" "name:" "log-profile" "node" "dynamic" "function" "with-node")}
        {Lisp-Entry "test-synchronizer" () 1176 11 ("name:" "Semaphore" "Mutex" "Impulse" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-thread" () 1186 11 ("name:" "sleep" "thread" "execute:" "self" "context:" "Thread" "new" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test-user-name" () 1197 11 ("name:" "get-windows-user-name" "node" "dynamic" "function" "with-profile")}
        {Lisp-Entry "test1" () 1205 11 ("class-of" "type-name" "map" "debug" "Memory-DC" "memory-dcs" "Bitmap" "collect-type" "bitmaps" "Component" "is-not?" "obj" "function" "collect-if" "not-component" "gc-undestroyed-objects" "undestroyed" "let*" "gc")}
        {Lisp-Entry "test9" () 1215 11 ("gc-clear-undestroyed")}
        {Lisp-Entry "present-process-monitor-stack" () 1225 11 ("get-application" "fresh-prompt" "get-sym-from-addr" "either" ":console" "format" "read-string-element" "addr" "let" "absolute" "relative" "name" "no" "bind" "line" "dynamic" "function" "for-each" "read-process-monitor-stack" "stack" "Symbol-Handler" "new" "handler" "Base" "File" "executable" "let*" "file")}
        {Lisp-Entry "read-process-monitor-stack" () 1238 11 ("get-output" "put" "true" "set!" "eof-object?" "if" "read-process-monitor-stack-line" "line" "not" "while" "false" "done?" "List-Factory" "lines" "set-readtable" "TWhitespace" "set-syntax" "Readtable" "readtable" "File-Reader" "new" "reader" "let" "file")}
        {Lisp-Entry "read-process-monitor-stack-line" () 1254 11 ("list" "executable" "absolute" "relative" "name" "eof-object?" "if" "read" "no" "let" "reader")}
        {Lisp-Entry "test9" () 1266 11 ("Native" "File" "present-process-monitor-stack")}
        {Lisp-Entry "ts" () 1276 11 ("get-sym-from-addr" "debug" "Symbol-Handler" "new" "handler" "Base" "File" "executable" "let*" "addr")}
        {Lisp-Entry "test-shift" () 1289 11 ("2" "foo" "debug")}
        {Lisp-Entry "foo" () 1294 11 ("+" "baz" "bar" "list" "foo" "name:" "true" ":on?" "profile" "x")}
        {Lisp-Entry "bar" () 1301 11 ("bar2" "bar1" "+" "foo" ":condition" "bar" "name:" "profile" "x")}
        {Lisp-Entry "bar1" () 1308 11 ("sleep" "bar" ":condition" "bar1" "name:" "profile" "x")}
        {Lisp-Entry "bar2" () 1315 11 ("sleep" "bar" ":condition" "bar2" "name:" "profile" "y")}
        {Lisp-Entry "baz" () 1322 11 ("sleep" "foo" ":condition" "baz" "name:" "profile" "y")}
        {Lisp-Entry "Ping-Host" () 1334 14 ("name:" "Host")}
        {Lisp-Entry "Ping-Port" () 1338 14 ()}
        {Lisp-Entry "Ping-Running?" () 1343 14 ("false")}
        {Lisp-Entry "start-ping-server" () 1348 11 ("user-message" "true" "set!" "launch" "Ping-Project" "find-project" "project" "get-workbench" "workbench" "get-application" "appl" "let*" "Ping-Running?" "unless")}
        {Lisp-Entry "stop-ping-server" () 1359 11 ("user-message" "false" "set!" "quit" "send-object" "Ping-Port" "Ping-Host" "connect" "Socket" "new" "socket" "with-closed" "Ping-Running?" "when")}
        {Lisp-Entry "test" () 1369 11 ("start-ping-server")}
        {Lisp-Entry "test-shift" () 1374 11 ("stop-ping-server")}
        {Lisp-Entry "test1" () 1379 11 ("receive-object" "debug" "0" "naturals" "send-object" "Ping-Port" "Ping-Host" "connect" "Socket" "new" "socket" "with-closed" "start-ping-server")}
        {Lisp-Entry "test" () 1393 11 ("self" ":guest-context" "Dimension" "host-size:" "Point" "host-position:" "host-title:" "Scaling-Scroller" "new-frame")}
        {Lisp-Entry "Scaling-Scroller" () 1398 9 ("Dimension" "size:" "0" "Point" "position:" "view" "content" "name:" "hscroll?:" "vscroll?:" "Scroller-View")
          {Lisp-Entry "Scaling-View" () 1407 11 ("View")
            {Lisp-Entry "flag" () 1410 18 ("true")}
            {Lisp-Entry "draw" () 1414 15 ("1" "inflate-rect" "get-bounds" "fill-rect" "not" "set!" "Dark-Blue" "Dark-Red" "name:" "Color" "flag" "if" "color" "get-update-rect" "update-rect" "let" "lv" "lh" "update" "context" "dc")}
            {Lisp-Entry "mouse-down" () 1421 15 ("mouse-down" "debug" "v" "h")}}}
        {Lisp-Entry "test" () 1431 11 ("format" "message-box" "my-dialog" "b" "a" "receive")}
        {Lisp-Entry "my-dialog" () 1437 11 ("self" ":guest-context" "My-Dialog" "get-modal")}
        {Lisp-Entry "My-Dialog" () 1442 9 ("on-cancel" ":host" ":source?" "on-update" ":guest" "Event-Handler" "action-handler:" "default?:" "Point" "position:" "title:" "Dimension" "size:" "View")
          {Lisp-Entry "on-update" () 1452 13 ("Stop-Signal" "catch" "end-modal" "if" "update-database" "dynamic" "function" "update" ":source?" "get-property" "source?" "get-host" "dialog" "let" "my-dialog" "evt")}
          {Lisp-Entry "update-database" () 1465 13 ("something" "reporter" "dynamic" "function" "with-progress")}
          {Lisp-Entry "something" () 1471 13 ("3" "2" "values" "0" "naturals" "sleep" "user-message" "1" "car" "7" "=" "if" "with-continue" "test-cancelled" "n" "for-each" "dynamic" "function" "with-execution-context" "reporter")}}
        {Lisp-Entry "test1" () 1492 11 ("blend")}
        {Lisp-Entry "test2" () 1497 11 ("blend")}
        {Lisp-Entry "test3" () 1502 11 ("blend")}
        {Lisp-Entry "blend" () 1507 11 ("get-player" "set-alpha-blending" "pos" "view" "position" "window" "function" "pick-figure" "x")}
        {Lisp-Entry "reprint-toplevel-form" () 1518 11 ("insert-string" "set-selection" "dynamic" "function" "with-update-locked" "0" "false" "saved-form" "output" "form:" "Designer" "new" "designer" "bell" "Form" "is-not?" "if" "read-string-element" "jml->form" "form" "get-string" "string" "get-end" "toplevel-expr" "range" "get-focus" "text" "let*" "align-name?" "align-name?:" "true" "space-properties?" "space-properties?:")}
        {Lisp-Entry "reprint-current-form" () 1533 11 ("insert-string" "set-selection" "dynamic" "function" "with-update-locked" "length" "1" "+" "saved-form" "output" "form:" "Designer" "new" "designer" "bell" "Form" "is-not?" "if" "read-string-element" "second" "jml->form" "form" "get-string" "string" "get-end" "definition-range" "range" "get-selection" "current-classes" "classes" "get-focus" "text" "let*" "align-name?" "align-name?:" "true" "space-properties?" "space-properties?:")}
        {Lisp-Entry "reprint-selected-form" () 1549 11 ("insert-string" "set-selection" "dynamic" "function" "with-update-locked" "0" "false" "saved-form" "output" "form:" "Designer" "new" "designer" "bell" "Form" "is-not?" "if" "read-string-element" "jml->form" "form" "get-string" "string" "get-selection" "range" "get-focus" "text" "let*" "align-name?" "align-name?:" "true" "space-properties?" "space-properties?:")}
        {Lisp-Entry "clear-activities" () 1569 11 ("unregister-activity" "reporter" "dynamic" "function" "for-each" "get-reporters" "reporters" "get-activity-manager" "manager" "let*")}
        {Lisp-Entry "Foo" () 1583 9 ("Object")
          {Lisp-Entry "holder" () 1586 16 ()}
          {Lisp-Entry "bar" () 1590 13 ("false" "7" "true" "5" "if" "message-box" "break" "v" "let" "p" "+" "y" "flag" "n" "dynamic" "function" "proc" "self" "z" "2" "x" "let*" "holder" "set!")}
          {Lisp-Entry "baz" () 1607 13 ("car" "2" "x" "let")}}
        {Lisp-Entry "test" () 1613 11 ("Foo" "new" "bar")}
        {Lisp-Entry "test-shift" () 1618 11 ("Foo" "new" "baz")}
        {Lisp-Entry "test-location" () 1623 11 ("list" "3" "z" "break" "y" "2" "x" "let")}
        {Lisp-Entry "test-location-aux" () 1631 11 ("foo" "X" "Y" "Z" "new" "z" "let")}
        {Lisp-Entry "X" () 1637 9 ("Object")
          {Lisp-Entry "Y" () 1640 11 ("Object")
            {Lisp-Entry "Z" () 1643 13 ("Object")
              {Lisp-Entry "foo" () 1646 17 ("0" "naturals" "car" "y" "map" "x" "dynamic" "function" "for-each" "list")}
              {Lisp-Entry "bar" () 1654 17 ("1" "car")}}}}
        {Lisp-Entry "xml-viewer" () 1664 11 ("true" "set-visible?" "bring-to-front" "set-document" "get-guest" "viewer" "false" "host-visible?:" "XML-Viewer" "new-frame" "frame" "let*" "load" "Native" "File" "file" "XML-Document" "new" "document" "let")}
        {Lisp-Entry "test" () 1676 11 ("parse-text" "debug" "text:" "XML-Parser" "new" "parser" "text" "let*")}
        {Lisp-Entry "test1" () 1683 11 ("parse-text" "debug" "text:" "XML-Parser" "new" "parser" "text" "let*" "name:" "log-entry")}
        {Lisp-Entry "test2" () 1691 11 ("length" "parse-text" "debug" "text:" "XML-Parser" "parser" "read-string-content" "File-Reader" "new" "reader" "with-closed" "text" "Jazz" "File" "file" "let*")}
        {Lisp-Entry "My-Transfo" () 1704 9 ("XML-Transformer")
          {Lisp-Entry "machin" () 1707 20 ("cdr" "p" ">>xml" "n" "dynamic" "function" "for-each" "xml>>" "-xm" "title" "mode" "f" "a" "xsl-rules" "y" "x" "node")}
          {Lisp-Entry "chouette" () 1718 20 ("children" "machin" "apply-transformation" "xml>>" "xsl-rules" "b" "a" "node")}}
        {Lisp-Entry "test" () 1726 11 ("2" "1" "a" "machin" "XML-Formatter" ":handler" "My-Transfo" "new" "transfo" "let")}
        {Lisp-Entry "test1" () 1732 11 ("node" "children" "-xm" "p" ">>xml" "n" "function" "for-each" "xml>>" "f" "a" "list" "y" "x" "expand-xsl-ruleset" ":console" "format")}
        {Lisp-Entry "test0" () 1748 11 ("text" "end-element" "add-attribute" "begin-element" "2" "indentation:" "true" ":pretty" "XML-Formatter" "new" "f" "let")}
        {Lisp-Entry "test1" () 1761 11 ("b" "align" "h1" "body" "process-sxml" "converter" "false" ":pretty" "XML-Formatter" "new" "processor" "let")}
        {Lisp-Entry "test0" () 1774 11 ("1" "car")}
        {Lisp-Entry "setup-compiler" () 1779 11 ("Mutation-Annotator" "Type-Annotator" "new" "add-user-pass" "Compiler" "initialize-user-passes")}
        {Lisp-Entry "test1" () 1791 11 ("debug" "=>" "2" "cond")}
        {Lisp-Entry "test" () 1796 11 ("+" "ID" "lalr-parser" "debug")}
        {Lisp-Entry "test" () 1801 11 ("identity" "CPS" "test")}
        {Lisp-Entry "test-directx" () 1811 11 ("DxVBLib.DDBLTFAST_WAIT" "Top" "Left" "get" "BltFast" "NULL" "MapWindowPoints" "GetClientRect" "RECT" "fr" "0" "Rect" "rect->RECT" "rect" "offscreen" "3" "lHeight" "lWidth" "DxVBLib.DDSCAPS_OFFSCREENPLAIN" "DxVBLib.DDSD_HEIGHT" "DxVBLib.DDSD_WIDTH" "bit-or" "DxVBLib.DirectDrawSurface7" "primary" "2" "record-address" "CreateSurface" "DxVBLib.DDSCAPS_PRIMARYSURFACE" "lCaps" "ddsCaps" "DxVBLib.DDSD_CAPS" "lFlags" "size-of" "lSize" "set" "DxVBLib.DDSURFACEDESC2" "ddsd" "DxVBLib.DDSCL_NORMAL" "get-handle" "SetCooperativeLevel" "DxVBLib.DirectDraw7" "cobind" "dd" "1" "assert-hr" "DirectDrawCreate" "ptr" "hr" "receive" "DxVBLib.DirectX7" "cocreate" "dx" "Point" "position:" "Dimension" "size:" "title:" "Frame" "new" "frame" "let")}
        {Lisp-Entry "assert-hr" () 1840 11 ("DxVBLib.CONST_DDRAWERR" "value->name" "error" "->string" "set-clipboard" "succeeded?" "unless" "n" "hr")}
        {Lisp-Entry "test-analyser" () 1852 11 ("message-box" "set-%" "Jedi" "find-references" "resources" "references" "receive" "true" ":include-path?" "Reference-Analyser" "new" "analyser" "let")}
        {Lisp-Entry "report-times" () 1864 11 ("get-application" "fresh-prompt" "SweepPhase" "EmptyUnvisited" "MarkSystemStack" "MarkRootsFinal" "MarkRootsInitial" "EndMarkPhase" "MarkPhase" "GcSome" ":console" "format" "average" "maximum" "bind" "name" "info" "dynamic" "function" "for-each" "gc-times" "times" "let")}
        {Lisp-Entry "speedup" () 1882 11 ("-" "percentage" "new" "old")}
        {Lisp-Entry "activity-no" () 1887 14 ("0")}
        {Lisp-Entry "test-activities" () 1892 11 ("true" ":unregister?" "set-done" "unless" "1" "delta-pos" "user-message" "sleep" "cancel-requested?" "not" "" "and" "while" "Range" "set-range" "increase!" "0" "n" "activity-no" "no" "2" "zero?" "keep?" "wait" "random" "5" "+" "dynamic" "execute-primary" "max" "let" "activity" "function" "execute:" "self" "context:" "Activity" "new")}
        {Lisp-Entry "test-styles" () 1916 11 ("Bitmap-Resource" "bitmap" "Image" "load-image" "IMAGE_BITMAP" "BM_SETIMAGE" "pb" "send-message" "Showcase" "get-stage" "find-guest" "locate" "stage" "let")}
        {Lisp-Entry "test-resources" () 1922 11 ("EndUpdateResource" "English-US" "int-resource" "UpdateResource" "name" "type" "false" "BeginUpdateResource" "handle" "let" "list" "SizeofResource" "size" "LockResource" "data" "LoadResource" "res" "->string" "message-box" "RT_ICON" "FindResource" "info" "current-instance" "inst" "let*")}
        {Lisp-Entry "test-resources2" () 1941 11 ("EndUpdateResource" "get-handle" "English-US" "int-resource" "UpdateResource" "->string" "message-box" "length" "size" "size:" "Heap-Block" "new" "data" "name" "RT_RCDATA" "type" "false" "BeginUpdateResource" "handle" "filename" "let*")}
        {Lisp-Entry "test-resources3" () 1955 11 ("message-box" "get-handle" "update" "length" "size" "size:" "Heap-Block" "data" "name" "type" "let*" ":module" "Resources-Manager" "new" "manager" "with-closed" "Boot" "File" "module" "let")}
        {Lisp-Entry "collect-extensions" () 1971 11 ("" "sort" "downcase" "cons" "set!" "ci=" "test:" "member?" "not" "when" "get-extension" "ext" "file" "dynamic" "function" "iterate-directory" "extensions" "let" "dir")}
        {Lisp-Entry "test-ast" () 1987 11 ("get-application" "fresh-prompt" "describe" "when" "Java-AST" "parse-java" "ast" "org.jazz" "File" "file" "let" "true" "describe?")}
        {Lisp-Entry "test-java" () 1997 11 ("java-definitions" "Java-AST" "parse-java" "ast" "org.jazz" "File" "file" "let")}
        {Lisp-Entry "purify-packages" () 2008 11 ("all-categories" "class-of" "category-fields" "external-address" "external?" "definition-value" "value" "let" "field" "user-message" "package?" "when" "category" "dynamic" "function" "for-each")}
        {Lisp-Entry "report-aliases" () 2026 11 ("get-application" "fresh-prompt" "car" "key:" "" "sort" ":console" "format" "value" "key" "bind" "info" "dynamic" "function" "for-each" "newline" "gather-keys/values" "aliases" "get-aliases" "hashtable" "let*")}}}})
"Jikes"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "Jikes.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.external.Jikes" () 8 9 ("jazz")
      {Lisp-Entry "Jikes" () 16 7 ("WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "compile" () 24 18 ("report-errors" "EXIT_SUCCESS" "/=" "when" "false" "visible?:" ":pipe-size" ":capture-error?" "true" ":capture-output?" "create-process" "error-lines" "output-lines" "code" "receive" "build-command" "command" "let" "parse" "user-message" "class-path" "class-path:" "directory" "directory:" "file")}
        {Lisp-Entry "build-command" () 44 11 ("parse" "format" "class-path" "file")}
        {Lisp-Entry "report-errors" () 53 11 ("selection:" "get-application" "edit-document" "message-box" "car" "msg" "range" "file" "bind" "parse-error" "map" "parsed" "let" "lines")}
        {Lisp-Entry "parse-error" () 61 11 ("join" "msg" "+" "0" "Cell" "Range" "range" "1" "parse-integer" "-" "format" "Native" "list" "File" "new" "substitute" "converted" "let*" "parts" "ec" "er" "sc" "sr" "file" "drive" "bind" "split" "let" "empty-string?" "unless" "line")}}}})
"Jsc-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Jsc-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Jsc-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "JSC-Workspace" () 46 7 ("JSC-Manager" "JSC-Branches-Editor" "JSC-Catalog-Editor" "JSC-Snapshots-Editor" "JSC-Users-Editor" "Jazz-Console-Manager" "Properties-Manager" "selection" "Search-Results" "Output-Log" "model-name:" "second" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "JSC-Book" "frame-model:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")}}})
"Keyboard-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Keyboard-Event.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.event.Keyboard-Event" () 37 9 ("jazz")
      {Lisp-Entry "Keyboard-Event" () 44 7 ("Event")
        {Lisp-Entry "key" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("key" "set!" "nextmethod" "k" "sender" "kind")}
        {Lisp-Entry "print" () 55 11 ("key" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-key" () 61 18 ("key")}}}})
"Label-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Label-Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.menu.Label-Item" () 37 9 ("jazz")
      {Lisp-Entry "Label-Item" () 47 7 ("Item")
        {Lisp-Entry "icon" () 50 12 ("set-icon" "get-icon")}
        {Lisp-Entry "disabled-icon" () 51 12 ("set-disabled-icon" "get-disabled-icon")}
        {Lisp-Entry "accelerator" () 52 12 ("set-accelerator" "get-accelerator")}
        {Lisp-Entry "default?" () 53 12 ("set-default?" "get-default?" "false")}
        {Lisp-Entry "content" () 56 8 ()}
        {Lisp-Entry "mouse-activate?" () 59 11 ("false")}
        {Lisp-Entry "component-alias" () 68 11 ("nextmethod" "else" "content" "case" "name")}
        {Lisp-Entry "shortcut-update" () 79 11 ("get-shortcut" "set-accelerator" "action-item")}
        {Lisp-Entry "add-child" () 88 11 ("content" "set!" "child")}
        {Lisp-Entry "get-content" () 92 18 ("content")}
        {Lisp-Entry "get-title" () 101 11 ("get-title" "content" "when" "title" "either")}
        {Lisp-Entry "get-icon" () 107 18 ("icon")}
        {Lisp-Entry "set-icon" () 111 18 ("layout-menu" "icon" "set!" "icn")}
        {Lisp-Entry "get-disabled-icon" () 116 18 ("disabled-icon")}
        {Lisp-Entry "set-disabled-icon" () 120 18 ("layout-menu" "disabled-icon" "set!" "icn")}
        {Lisp-Entry "get-accelerator" () 125 18 ("accelerator")}
        {Lisp-Entry "set-accelerator" () 129 18 ("layout-menu" "accelerator" "set!" "acc")}
        {Lisp-Entry "get-default?" () 134 18 ("default?")}
        {Lisp-Entry "set-default?" () 138 18 ("default?" "set!" "value")}
        {Lisp-Entry "title-string" () 147 11 ("remove" "title")}
        {Lisp-Entry "preferred-icon-width" () 156 11 ("0" "+" "icon" "if" "4" "left" "let")}
        {Lisp-Entry "preferred-body-width" () 161 11 ("get-width" "+" "6" "menubar-label?" "if" "left" "title-string" "text-extent" "extent" "get-title" "localize" "title" "effective-font" "font" "let*")}
        {Lisp-Entry "preferred-accelerator-width" () 169 11 ("get-width" "+" "right" "6" "left" "present-shortcut" "text-extent" "extent" "effective-font" "font" "let*" "0" "accelerator" "not" "if")}
        {Lisp-Entry "preferred-arrow-width" () 179 11 ("0" "menubar-label?" "not" "content" "and" "if")}
        {Lisp-Entry "preferred-height" () 185 11 ("4" "+" "font-height" "height" "get-title" "localize" "title" "effective-font" "font" "let*")}
        {Lisp-Entry "Label-Font" () 197 14 ("Default-GUI" "name:" "Font")}
        {Lisp-Entry "Default-Label-Font" () 200 14 ()}
        {Lisp-Entry "get-label-font" () 204 11 ("Label-Font")}
        {Lisp-Entry "get-default-label-font" () 207 11 ("Label-Font" "toggle-bold" "set!" "Default-Label-Font" "unless")}
        {Lisp-Entry "effective-font" () 213 11 ("get-label-font" "get-default-label-font" "default?" "if")}
        {Lisp-Entry "draw" () 217 11 ("draw-arrow" "draw-accelerator" "draw-body" "draw-icon" "draw-prefix" "draw-highlight" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-highlight" () 226 11 ("Focused-Selection" "name:" "Color" "fill-rect" "rectangle" "edges:" "sunken" "outer:" "raised" "highlight-flag" "inner:" "draw-edge" "menubar-label?" "if" "get-bounds" "bounds" "with" "item-selected?" "when" "dc")}
        {Lisp-Entry "draw-prefix" () 234 29 ("context" "dc")}
        {Lisp-Entry "draw-icon" () 238 11 ("enabled?:" "0" "draw-image" "disabled-icon" "enabled?" "not" "and" "if" "get-icons-cache" "portfolio" "9" "prefix-width" "+" "left" "get-application" "appl" "let*" "icon" "when" "context" "dc")}
        {Lisp-Entry "draw-body" () 248 11 ("text-enabled?" "draw-text" "effective-font" "set-font" "text-color" "set-text-color" "2" "get-height" "quotient" "-" "v" "icon-width" "prefix-width" "+" "h" "1" "0" "top" "6" "menubar-label?" "if" "left" "get-font-height" "height" "title-string" "text" "get-title" "localize" "title" "let*" "dc")}
        {Lisp-Entry "draw-accelerator" () 261 11 ("text-enabled?" "draw-text" "2" "get-height" "quotient" "-" "v" "body-width" "icon-width" "prefix-width" "+" "h" "1" "top" "6" "left" "get-font-height" "height" "present-shortcut" "text" "let*" "accelerator" "when" "dc")}
        {Lisp-Entry "draw-arrow" () 272 11 ("right" "4" "5" "-" "draw-arrow-tip" "tip-pen" "set-pen" "get-width" "width" "let" "menubar-label?" "not" "content" "and" "when" "dc")}
        {Lisp-Entry "item-selected?" () 279 11 ("get-player" "owned?" "self" "popup-initiator" "=" "in?" "or" "mouse-view" "view" "parent" "get-poped" "poped" "let" "surrogate" "not" "and")}
        {Lisp-Entry "menubar-label?" () 290 11 ("Menubar" "parent" "is?")}
        {Lisp-Entry "in-menubar?" () 294 11 ("Context-Menu" "parent" "is-not?")}
        {Lisp-Entry "highlight-flag" () 298 11 ("parent" "get-poped" "=" "content" "and")}
        {Lisp-Entry "tip-pen" () 302 11 ("Black" "White" "name:" "Pen" "item-selected?" "if")}
        {Lisp-Entry "text-enabled?" () 306 11 ("item-selected?" "enabled?" "or")}
        {Lisp-Entry "text-color" () 310 11 ("Black" "else" "White" "menubar-label?" "item-selected?" "and" "Dark" "name:" "Color" "enabled?" "not" "cond")}
        {Lisp-Entry "mouse-enter" () 321 11 ("popup-content" "poped?" "close-other-popups" "if" "content" "popup-initiator" "invalidate-view" "track-hovering" "parent" "get-poped" "poped" "let" "unless" "nextmethod" "Label-Item" "mouse-down-view" "is?" "mouse-down?" "menubar-label?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-leave" () 338 11 ("cancel-hovering" "menubar-label?" "not" "when" "nextmethod")}
        {Lisp-Entry "mouse-hover" () 344 11 ("popup-content" "surrogate" "not" "content" "and" "when" "close-other-popups" "pos")}
        {Lisp-Entry "mouse-down" () 350 11 ("popup-content" "close-popups" "parent" "get-poped" "if" "content" "when" "pos")}
        {Lisp-Entry "mouse-up" () 357 11 ("self" "process-action" "enabled?" "when" "true" "all?:" "player" "close-popups" "content" "unless" "pos")}
        {Lisp-Entry "popup-content" () 369 11 ("popup-menu" "invalidate-view" "parent" "set-poped" "3" "get-width" "-" "get-height" "0" "Point" "new" "menubar-label?" "if" "position" "get-size" "size" "let*" "get-children" "when" "update" "get-content" "content" "let")}
        {Lisp-Entry "popup-menu" () 380 11 ("2" "Point" "alternate-position:" "false" "close-root?:" "fade-speed:" "border:" "Menu-Transient" "class:" "popup" "Dark" "Color" "border-color:" "solid" "border-type:" "name:" "Border-View" "new" "border" "let" "position" "menu")}
        {Lisp-Entry "close-popups" () 385 11 ("invalidate-view" "nextmethod" "double-click" "mouse-down" "memq?" "unless" "exclude" "exclude:" "false" "all?" "all?:" "event" "event:")}
        {Lisp-Entry "popup-destroy" () 391 11 ("parent" "set-poped" "popup")}
        {Lisp-Entry "describe-view" () 400 11 ("icon" "list" "nextmethod" "append" "pos")}}}})
"Label-Tool"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Label-Tool.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Label-Tool" () 37 9 ("jazz")
      {Lisp-Entry "Label-Tool" () 46 7 ("Tool-Button")
        {Lisp-Entry "justification" () 49 12 ("set-justification" "get-justification" "center")}
        {Lisp-Entry "color" () 50 12 ("set-color" "get-color" "Black" "name:" "Color")}
        {Lisp-Entry "default-size" () 53 11 ("Dimension")}
        {Lisp-Entry "get-justification" () 62 18 ("justification")}
        {Lisp-Entry "set-justification" () 66 18 ("invalidate-view" "justification" "set!" "value")}
        {Lisp-Entry "get-color" () 71 18 ("color")}
        {Lisp-Entry "set-color" () 75 18 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "draw-tool" () 85 11 ("enabled?" "get-v" "get-h" "+" "draw-text" "color" "set-text-color" "center" "justification" "list" "get-size" "justify" "pos" "get-text-extent" "extent" "localize" "title" "let*" "0" "1" "pushed" "get-state" "=" "if" "offset" "let" "context" "dc")}}}})
"Label-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Label-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Label-View" () 37 9 ("jazz")
      {Lisp-Entry "Label-View" () 47 7 ("View")
        {Lisp-Entry "justification" () 50 12 ("set-justification" "get-justification" "head")}
        {Lisp-Entry "color" () 51 12 ("set-color" "get-color" "Black" "name:" "Color")}
        {Lisp-Entry "shadow?" () 52 12 ("set-shadow?" "get-shadow?" "false")}
        {Lisp-Entry "default-size" () 55 11 ("Dimension")}
        {Lisp-Entry "get-justification" () 64 18 ("justification")}
        {Lisp-Entry "set-justification" () 68 18 ("invalidate-view" "justification" "set!" "value")}
        {Lisp-Entry "get-color" () 73 18 ("color")}
        {Lisp-Entry "set-color" () 77 18 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "get-shadow?" () 82 18 ("shadow?")}
        {Lisp-Entry "set-shadow?" () 86 18 ("invalidate-view" "shadow?" "set!" "value")}
        {Lisp-Entry "label-title" () 96 29 ("title")}
        {Lisp-Entry "preferred-size" () 105 11 ("font" "text-width" "Dimension" "new" "default-size" "not" "if" "label-title" "localize" "title" "let")}
        {Lisp-Entry "draw" () 117 11 ("enabled?" "color" "get-v" "2" "get-h" "+" "draw-text" "Dark-Gray" "name:" "Color" "set-text-color" "shadow?" "when" "get-size" "justify" "pos" "center" "list" "pair?" "if" "justification" "get-text-extent" "extent" "label-title" "either" "localize" "title" "let*" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "property-presentation" () 135 16 ("nextmethod" "else" "shadow?" "color" "justification" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 143 11 ("nextmethod" "else" "Boolean-Row" "shadow?" "Color-Row" "color" "Justification-Combo-Row" "new" "justification" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 152 11 ("auto-size?" "shadow?" "justification" "font" "color" "background" "title" "name-info" "class-info")}}
      {Lisp-Entry "Justification-Combo-Row" () 163 7 ("Combo-Row")
        {Lisp-Entry "Justification-Choices" () 166 14 ("tail" "center" "head")}
        {Lisp-Entry "initialize" () 172 11 ("Justification-Choices" "set-choices" "nextmethod" "apply" "rest")}}}})
"Layout"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "layout" "Layout.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.layout.Layout" () 37 9 ("jazz")
      {Lisp-Entry "Layout" () 45 7 ("Component")
        {Lisp-Entry "layout" () 48 26 ("rest" "height" "width" "figures")}}}})
"Layout-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Layout-Text-View.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Layout-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Layout-Text-View" () 45 7 ("Formatted-Text-View")}}})
"Layout-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Layout-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Layout-View" () 37 9 ("jazz")
      {Lisp-Entry "Layout-View-Class" () 46 7 ("View-Class")
        {Lisp-Entry "get-class-image" () 54 11 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 58 11 ("nextmethod" "else" "layout-padding" "layout-justification" "layout-insets" "layout-type" "field-name" "case" "property")}}
      {Lisp-Entry "Layout-View" () 67 7 ("View" "Layout-View-Class")
        {Lisp-Entry "layout-type" () 80 12 ("set-layout-type" "get-layout-type")}
        {Lisp-Entry "layout-insets" () 81 12 ("set-layout-insets" "get-layout-insets" "0" "Rect")}
        {Lisp-Entry "layout-justification" () 82 12 ("set-layout-justification" "get-layout-justification" "center")}
        {Lisp-Entry "layout-padding" () 83 12 ("set-layout-padding" "get-layout-padding" "0")}
        {Lisp-Entry "get-layout-type" () 91 18 ("layout-type")}
        {Lisp-Entry "set-layout-type" () 95 18 ("layout-view" "set!" "layout-type" "/=" "when" "type")}
        {Lisp-Entry "get-layout-insets" () 102 18 ("layout-insets")}
        {Lisp-Entry "set-layout-insets" () 106 18 ("layout-view" "layout-type" "when" "layout-insets" "set!" "insets")}
        {Lisp-Entry "get-layout-justification" () 112 18 ("layout-justification")}
        {Lisp-Entry "set-layout-justification" () 116 18 ("layout-view" "layout-type" "when" "layout-justification" "set!" "just")}
        {Lisp-Entry "get-layout-padding" () 122 18 ("layout-padding")}
        {Lisp-Entry "set-layout-padding" () 126 18 ("layout-view" "layout-type" "when" "layout-padding" "set!" "pad")}
        {Lisp-Entry "inner?" () 137 11 ("children" "memq?" "view")}
        {Lisp-Entry "layout" () 146 11 ("layout-padding" "padding:" "Flow-Layout" "flow" "insets:" "get-height" "get-width" "layout" "Border-Layout" "new" "ly" "border" "+" "layout-justification" "get-location" "either" "justification" "let*" "rect-size" "rect-position" "topleft" "get-bottom" "get-right" "-" "get-top" "layout-insets" "get-left" "expand-rect" "rect" "get-bounds" "bounds" "with" "justify" "pos" "get-size" "center" "children" "set-size" "set-position" "View" "is?" "when" "child" "dynamic" "function" "for-each" "fill-size" "size" "fill-position" "position" "let" "fill" "layout-type" "case")}
        {Lisp-Entry "fill-position" () 182 29 ("get-top" "layout-insets" "get-left" "Point" "new")}
        {Lisp-Entry "fill-size" () 186 29 ("get-bottom" "get-top" "get-right" "layout-insets" "get-left" "+" "Dimension" "new" "get-size" "-")}
        {Lisp-Entry "get-row-instance" () 195 11 ("nextmethod" "else" "Rect-Row" "layout-insets" "Justification-Combo-Row" "layout-justification" "Type-Combo-Row" "new" "layout-type" "field-name" "case" "property")}}
      {Lisp-Entry "Type-Combo-Row" () 208 7 ("Combo-Row")
        {Lisp-Entry "Choices" () 211 14 ("flow" "border" "justify" "center" "fill")}
        {Lisp-Entry "initialize" () 220 11 ("Choices" "set-choices" "nextmethod" "apply" "rest")}}
      {Lisp-Entry "Justification-Combo-Row" () 231 7 ("Combo-Row")
        {Lisp-Entry "Choices" () 234 14 ("tail" "center" "head")}
        {Lisp-Entry "initialize" () 242 11 ("Choices" "set-choices" "nextmethod" "apply" "rest")}}}})
"Lexical-Binding"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Lexical-Binding.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Lexical-Binding" () 37 9 ("jazz")
      {Lisp-Entry "Lexical-Binding" () 40 7 ("Walk-Binding")
        {Lisp-Entry "name" () 43 8 ("generate")}
        {Lisp-Entry "print" () 46 11 ("get-name" "format" "function" "print-unreadable" "detail" "output" "binding")}}}})
"Lexical-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Lexical-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.frame.Lexical-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Lexical-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-image" () 57 11 ("Bitmap-Resource")}}}})
"Library-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Library-Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.Library-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Library-Declaration" () 40 7 ("Namespace-Declaration")
        {Lisp-Entry "accessors" () 43 16 ("generate")}
        {Lisp-Entry "exports" () 44 8 ("generate")}
        {Lisp-Entry "imports" () 45 8 ("generate")}}}})
"License"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "license" "License.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.license.License" () 37 9 ("jazz")
      {Lisp-Entry "License" () 57 7 ("Object")
        {Lisp-Entry "license" () 60 12 ("set-license" "get-license")}
        {Lisp-Entry "owner" () 61 12 ("set-owner" "get-owner")}
        {Lisp-Entry "get-license" () 64 18 ("license" "BaseCodec" "encode32")}
        {Lisp-Entry "set-license" () 68 18 ("string" "BaseCodec" "decode32" "license" "set!" "value")}
        {Lisp-Entry "get-owner" () 72 18 ("owner")}
        {Lisp-Entry "set-owner" () 76 18 ("owner" "set!" "value")}
        {Lisp-Entry "valid-code?" () 80 18 ("license" "hashcode" "bit-xor" "apply" "0" "=")}
        {Lisp-Entry "valid-owner?" () 84 18 ("prefix?" "8" "license" "hashcode" "subseq" "hashed-license" "owner" "hash-owner" "hashed-owner" "let")}
        {Lisp-Entry "key-expired?" () 90 18 ("now" ">" "2" "8" "1" "element" "shift-left" "+" "key-expires" "license" "hashcode" "hashed-license" "let*")}
        {Lisp-Entry "license-expired?" () 97 18 ("now" ">" "4" "8" "3" "element" "shift-left" "+" "license-expires" "license" "hashcode" "hashed-license" "let*")}
        {Lisp-Entry "demo?" () 105 18 ("1" "mask-bit-set?" "5" "element" "bitfield" "license" "hashcode" "hashed-license" "let*")}
        {Lisp-Entry "ElapseInDay" () 111 19 ("2" "1" "Date" "new" "get-time" "get-elapse" "-")}
        {Lisp-Entry "now" () 118 16 ("ElapseInDay" "Date" "new" "get-time" "universal-time" "get-elapse" "-" "/")}
        {Lisp-Entry "Hash8" () 129 19 ()}
        {Lisp-Entry "Roll20" () 135 19 ("8" "9" "4" "6" "7" "5" "1" "3" "2" "0")}
        {Lisp-Entry "hashcode" () 141 16 ("length" "0" "naturals" "Roll20" "5" "modulo" "element" "bit-xor" "n" "offset" "dynamic" "function" "map" "Hash8" "BaseCodec" "decode32" "hash" "let" "list")}
        {Lisp-Entry "hash-owner" () 150 11 ("hash-data" "gather" "Heap-Block" "coerce" "data" "let" "Cryptography-Provider" "new" "provider" "with-closed" "hash-owner" "unimplemented" "owner")}}}})
"License-Creator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "license" "License-Creator.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.license.License-Creator" () 37 9 ("jazz")
      {Lisp-Entry "License-Creator" () 55 7 ("License")
        {Lisp-Entry "Demo-Flag" () 58 12 ()}
        {Lisp-Entry "flags" () 61 8 ("Demo-Flag")}
        {Lisp-Entry "license-expires" () 64 12 ("set-license-expires" "get-license-expires")}
        {Lisp-Entry "key-expires" () 65 12 ("set-key-expires" "get-key-expires")}
        {Lisp-Entry "demo?" () 66 12 ("set-demo?" "get-demo?")}
        {Lisp-Entry "get-license-expires" () 69 18 ("license-expires")}
        {Lisp-Entry "set-license-expires" () 73 18 ("license-expires" "set!" "value")}
        {Lisp-Entry "get-key-expires" () 77 18 ("key-expires")}
        {Lisp-Entry "set-key-expires" () 81 18 ("key-expires" "set!" "value")}
        {Lisp-Entry "get-demo?" () 85 18 ("Demo-Flag" "flags" "mask-bit-set?")}
        {Lisp-Entry "set-demo?" () 89 18 ("Demo-Flag" "mask-bit-set" "flags" "set!" "flag")}
        {Lisp-Entry "unroll20" () 99 16 ("length" "0" "naturals" "Roll20" "get-rank" "n" "dynamic" "function" "map")}
        {Lisp-Entry "unhashcode" () 105 16 ("length" "0" "naturals" "Roll20" "5" "modulo" "element" "bit-xor" "n" "offset" "dynamic" "function" "map" "Hash8" "BaseCodec" "decode32" "hash" "let" "list")}}}})
"License-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "license" "License-Dialog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.license.License-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "License-Dialog" () 48 7 ("on-cancel" "cancel" "on-ok" ":host" "action-handler:" "default?:" "ok" "license" "license-border" "license-label" "on-escape-press" "escape-press-handler:" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "Ansi-Var" "Default" "Text-Style" "default-style:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "name" "fill" "layout-type:" "vscroll?:" "hscroll?:" "entry" "style:" "edge" "border-type:" "name-border" "name-label" "content" "Default-GUI" "description" "Label-Bold" "Font" "font:" "9" "Point" "position:" "title:" "title" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "install-in-host" () 70 11 ("name" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "dialog-class" () 81 16 ("License-Host-Dialog")}
        {Lisp-Entry "License-Host-Dialog" () 86 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "get-modal-result" () 98 11 ("license" "name" "locate" "get-string-content" "values")}
        {Lisp-Entry "get-tab-stops" () 108 11 ("license" "name" "locate" "list")}
        {Lisp-Entry "on-double-click" () 120 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-return-press" () 126 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 132 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "Header-Color" () 142 14 ("blue:" "green:" "red:" "Color" "new")}
        {Lisp-Entry "draw" () 146 11 ("Header-Color" "White" "name:" "Color" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "update" "context" "dc")}}}})
"Line"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Line.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Line" () 37 9 ("jazz")
      {Lisp-Entry "Line" () 45 7 ("Object")
        {Lisp-Entry "text" () 48 18 ("generate")}
        {Lisp-Entry "runs" () 49 18 ("generate")}
        {Lisp-Entry "rank" () 50 18 ("generate")}
        {Lisp-Entry "offset" () 51 18 ("generate")}
        {Lisp-Entry "length" () 52 18 ("generate")}
        {Lisp-Entry "left" () 53 18 ("generate")}
        {Lisp-Entry "top" () 54 18 ("generate")}
        {Lisp-Entry "width" () 55 18 ("generate")}
        {Lisp-Entry "height" () 56 18 ("generate")}
        {Lisp-Entry "initialize" () 59 11 ("compute-height" "height~self" "compute-length" "length~self" "width~self" "top~self" "left~self" "offset~self" "rank~self" "runs~self" "text~self" "set!" "nextmethod" "width" "top" "left" "offset" "rank" "runs" "text")}
        {Lisp-Entry "print" () 72 11 ("runs" "write" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-limit" () 83 18 ("length" "offset" "+")}
        {Lisp-Entry "compute-length" () 92 11 ("runs" "get-length" "increase!" "run" "dynamic" "function" "for-each" "0" "len" "let")}
        {Lisp-Entry "compute-height" () 105 11 ("max" "set!" "run-height" "run" "dynamic" "function" "for-each" "0" "height" "let" "text" "get-default-style" "get-height" "runs" "null?" "if")}
        {Lisp-Entry "get-bottom" () 116 18 ("height" "top" "+")}
        {Lisp-Entry "range-region" () 125 21 ("acquire-delta" "rect:" "Region" "offset-rect" "offset" "get-bottom" "top" "Rect" "new" "rect" "with" "not" "if" "right" "false" "0" "either" "col->view" "get-h" "left" "let" "sc" "dv" "dh" "paragraph" "end" "start" "paragraph-width" "paragraph-top" "paragraph-left")}
        {Lisp-Entry "scan" () 138 21 ("runs" "1" "increase!" "scan" "get-length" "len" "set!" "+" ">=" "and" "if" "right" "mid" "n" "c" "call" "with" "rightmost" "nmost" "run" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "text" "get-tab-stops" "tabs" "left" "h" "0" "b" "let" "proc" "end")}
        {Lisp-Entry "draw-line" () 166 21 ("runs" "increase!" "height" "draw-run" "width" "run" "dynamic" "function" "for-each" "text" "draw-enabled?" "enabled?" "left~self" "+" "let" "left" "tabs" "v" "h" "context" "dc")}
        {Lisp-Entry "view->col" () 180 21 ("get-length" ">" "right" "mid" "left" "n" "c" "dynamic" "function" "scan" "return" "lambda" "call/ec" "get-bottom" "" "top" ">=" "and" "when" "get-v" "v" "get-h" "h" "let" "view")}
        {Lisp-Entry "col->view" () 193 21 ("runs" "not-null?" "unless" "set!" "top" "Point" "new" "=" "when" "right" "mid" "left" "n" "c" "dynamic" "function" "scan" "return" "lambda" "call/ec" "0" "rightmost" "let" "strict?" "col")}
        {Lisp-Entry "col->text" () 210 21 ("-" "rank" "Cell" "new" "get-limit" "" "offset" ">=" "and" "when" "col")}}}})
"Line-Printer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "printer" "Line-Printer.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.printer.Line-Printer" () 37 9 ("jazz")
      {Lisp-Entry "Line-Printer" () 44 7 ("Printer")
        {Lisp-Entry "lines" () 47 8 ("List-Factory" "new")}
        {Lisp-Entry "last-proper?" () 48 8 ("false")}
        {Lisp-Entry "put-line" () 51 26 ("last-proper?" "set!" "lines" "put" "proper?" "line")}
        {Lisp-Entry "get-output" () 56 18 ("get-output" "lines" "put" "last-proper?" "when")}}}})
"Line-Surrogate"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Line-Surrogate.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Line-Surrogate" () 37 9 ("jazz")
      {Lisp-Entry "Line-Surrogate" () 45 7 ("View-Surrogate")}}})
"Line-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Line-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Line-View" () 37 9 ("jazz")
      {Lisp-Entry "Line-View" () 46 7 ("View")
        {Lisp-Entry "from" () 49 12 ("set-from" "get-from")}
        {Lisp-Entry "to" () 50 12 ("set-to" "get-to")}
        {Lisp-Entry "color" () 51 12 ("set-color" "get-color")}
        {Lisp-Entry "get-from" () 59 18 ("from")}
        {Lisp-Entry "set-from" () 63 18 ("invalidate-view" "from" "set!" "value")}
        {Lisp-Entry "get-to" () 68 18 ("to")}
        {Lisp-Entry "set-to" () 72 18 ("invalidate-view" "to" "set!" "value")}
        {Lisp-Entry "get-color" () 77 18 ("color")}
        {Lisp-Entry "set-color" () 81 18 ("invalidate-view" "color" "set!" "value")}
        {Lisp-Entry "Tolerance" () 91 14 ()}
        {Lisp-Entry "in-drawing?" () 95 11 ("Tolerance" "" "line-distance" "distance" "let" "to" "from" "null?" "or" "nextmethod" "and" "size" "pos")}
        {Lisp-Entry "mouse-down" () 103 11 ("pos")}
        {Lisp-Entry "draw" () 112 11 ("get-v" "get-h" "line" "set-pen" "line-pen" "pen" "with-closed" "line-color" "color" "let" "to" "from" "and" "when" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "line-width" () 120 29 ("1")}
        {Lisp-Entry "line-color" () 124 29 ("Black" "name:" "Color" "color" "either")}
        {Lisp-Entry "line-pen" () 128 29 ("color:" "line-width" "width:" "Pen" "new" "color")}
        {Lisp-Entry "component-surrogate" () 137 11 ("Line-Surrogate")}}}})
"Links-Inspector"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "Links-Inspector.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.internet.Links-Inspector" () 37 9 ("jazz")
      {Lisp-Entry "Links-Inspector" () 48 7 ("toplevel-controls?:" "width:" "on-selection-change" "selection-handler:" "row" "selection-mode:" "links" "fill" "content" "vscroll?:" "edge" "border-type:" "center" "projects-border" "on-update" "update" "on-launch" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "launch" "name:" "north" "location:" "6" "0" "Rect" "layout-insets:" "flow" "border" "layout-type:" "Dimension" "size:" "title:" "Layout-View")
        {Lisp-Entry "browser" () 51 12 ("set-browser" "get-browser")}
        {Lisp-Entry "document" () 54 8 ()}
        {Lisp-Entry "links" () 55 8 ()}
        {Lisp-Entry "get-browser" () 77 18 ("browser")}
        {Lisp-Entry "set-browser" () 81 18 ("update-links" "get-document" "links" "locate" "remove-every-row" "document" "begin" "null?" "if" "set!" "browser" "/=" "when" "br")}
        {Lisp-Entry "on-selection-change" () 97 11 ("on-launch" "evt")}
        {Lisp-Entry "on-launch" () 101 11 ("launch-link" "bell" "null?" "if" "selected-link" "link" "get-shift?" "new?" "get-control?" "close?" "let" "evt")}
        {Lisp-Entry "on-update" () 110 11 ("update-links" "evt")}
        {Lisp-Entry "update-links" () 119 11 ("user-data:" "Bitmap-Resource" "image:" "parse" "get-title" "either" "title:" "Tree-Node" "new" "list" "children:" "add-row" "anchor" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "get-anchors" "anchors" "links" "locate" "tree" "let" "document" "when")}
        {Lisp-Entry "launch-link" () 136 11 ("when" "new-window" "browser" "navigate" "not" "if" "close?" "new?" "link")}
        {Lisp-Entry "selected-link" () 150 11 ("get-row" "get-user-data" "when" "get-single-selection" "selection" "links" "locate" "tree" "let*")}}}})
"Lisp-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Lisp-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Lisp-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Lisp-Entry" () 45 7 ("Indexed-Entry")
        {Lisp-Entry "signature" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "definitions" "references" "column" "line" "signature" "name" "context")}
        {Lisp-Entry "initialize" () 58 11 ("signature~self" "set!" "nextmethod" "r" "d" "c" "l" "s" "n")}
        {Lisp-Entry "print-catalog" () 63 11 ("print-definitions" "references" "column" "line" "signature" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 73 11 ("Bitmap-Resource")}
        {Lisp-Entry "get-signature" () 82 18 ("signature")}
        {Lisp-Entry "present" () 91 11 ("present-name" "mode")}
        {Lisp-Entry "present-name" () 95 11 ("format" "signature" "present-noname" "not" "if" "get-name" "name" "let")}
        {Lisp-Entry "present-noname" () 104 11 ()}
        {Lisp-Entry "edit-reference" () 113 11 ("highlight-expression" "when" "get-start" "definition-range" "range" "get-guest" "text" "edit" "apply" "frame" "let*" "rest" "target")}
        {Lisp-Entry "update-indexes" () 126 11 ("definitions" "update-indexes" "definition" "references" "key" "dynamic" "function" "for-each" "name" "update-index" "references-index" "definitions-index")}}}})
"Lisp-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Lisp-Explorer.fusion"} {Time 128369339220000000L}
    {Lisp-Entry "jazz.jazz.text.Lisp-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "Lisp-Explorer" () 63 7 ("Code-Explorer")
        {Lisp-Entry "Composites" () 66 12 ()}
        {Lisp-Entry "Open-Composites" () 72 12 ()}
        {Lisp-Entry "Close-Composites" () 78 12 ()}
        {Lisp-Entry "get-modifiers" () 84 26 ()}
        {Lisp-Entry "get-syntax" () 88 11 ("jazz")}
        {Lisp-Entry "explore-error" () 92 11 ("end:" "start:" "message:" "Explore-Error" "new" "signal" "end" "start" "message")}
        {Lisp-Entry "present-char" () 96 11 ("String" "coerce" "else" "char-symbol" "memv?" "not" "cond" "c")}
        {Lisp-Entry "current-expr" () 105 18 ("get-marked" "symbol" "kind" "=" "backward-expr" "and" "when")}
        {Lisp-Entry "forward-expr" () 110 11 ("forward-simple-expr" "forward-expr" "if" "found" "=" "and" "or" "next" "forward" "when" "memv?" "quotation?" "get-start" "start" "0" "char-forward" "c" "let" "end" "set-start" "forward-whites")}
        {Lisp-Entry "backward-expr" () 130 11 ("else" "expr-comment" "/=" "backward" "case" "prev" "when" "backward-simple-expr" "found" "backward-scheme-char" "backward-delimited-string" "=" "and" "if" "2" "c2" "1" "c1" "0" "char-backward" "c0" "let" "start" "set-end" "backward-whites")}
        {Lisp-Entry "forward-simple-expr" () 164 19 ("false" "else" "literal" "reference" "list" "forward-composite" "forward-expr-comment" "forward-constituent" "jazz-constituent?" "forward-escaped-symbol" "forward-string" "string-delimiter?" "forward-sharp" "=" "cond" "when" "0" "char-forward" "c" "let")}
        {Lisp-Entry "backward-simple-expr" () 178 19 ("false" "else" "literal" "reference" "list" "backward-composite" "backward-constituent" "jazz-constituent?" "backward-escaped-symbol" "=" "backward-string" "string-delimiter?" "cond" "when" "0" "char-backward" "c" "let")}
        {Lisp-Entry "forward-all-expr" () 190 18 ("start" "set!" "forward-expr" "while" "end" "copy" "initial-end" "let")}
        {Lisp-Entry "backward-all-expr" () 197 18 ("end" "set!" "backward-expr" "while" "start" "copy" "initial-start" "let")}
        {Lisp-Entry "forward-constituent" () 204 19 ("false" "else" "symbol" "keyword" "and" "if" "kind" "set!" "jazz-constituent?" "not" "or" "forward" "cond" "c" "true" "while" "return" "lambda" "call/ec" "last" "0" "char-forward" "=" "keyword?" "let")}
        {Lisp-Entry "backward-constituent" () 223 19 ("false" "else" "symbol" "keyword" "if" "kind" "set!" "jazz-constituent?" "not" "or" "backward" "1" "cond" "c" "true" "while" "return" "lambda" "call/ec" "unspecified" "last" "0" "char-backward" "=" "keyword?" "let")}
        {Lisp-Entry "backward-escaped-symbol" () 242 19 ("else" "symbol" "kind" "set!" "1" "=" "cond" "false" "not" "if" "0" "char-backward" "c" "let" "true" "while" "backward" "return" "lambda" "call/ec")}
        {Lisp-Entry "backward-scheme-char" () 262 19 ("char" "kind" "set!" "backward")}
        {Lisp-Entry "forward-expr-comment" () 270 19 ("expr-comment" "kind" "set!" "forward-expr" "forward")}
        {Lisp-Entry "forward-scheme-comment" () 277 19 ("expr-comment" "kind" "set!" "forward-expr" "forward")}
        {Lisp-Entry "forward-sharp" () 284 19 ("forward-constituent" "else" "forward-scheme-comment" "forward-scheme-char" "forward-named-string" "and" "forward-delimited-string" "=" "boolean" "kind" "set!" "memq?" "cond" "1" "c1" "0" "char-forward" "c0" "let" "forward")}
        {Lisp-Entry "forward-escaped-symbol" () 304 19 ("else" "symbol" "=" "cond" "false" "not" "if" "0" "char-forward" "c" "let" "true" "while" "forward" "return" "lambda" "call/ec")}
        {Lisp-Entry "forward-delimited-string" () 323 19 ("else" "delimited-string" "kind" "set!" "=" "and" "false" "not" "or" "cond" "1" "c1" "0" "char-forward" "c0" "let" "true" "while" "forward" "return" "lambda" "call/ec")}
        {Lisp-Entry "forward-named-string" () 342 19 ("false" "named-string" "begin" "=" "if" "limit" "" "while" "0" "1" "+" "Cell" "new" "set-end" "get-col" "end" "get-row" "get-paragraph" "subseq" "name" "let" "return" "lambda" "call/ec" "forward")}
        {Lisp-Entry "forward-scheme-char" () 359 19 ("else" "jazz-constituent?" "false" "=" "cond" "true" "while" "return" "lambda" "call/ec" "char" "kind" "set!" "begin" "alphanumeric?" "not" "if" "0" "char-forward" "c" "let" "forward")}
        {Lisp-Entry "forward-string" () 381 19 ("else" "string" "kind" "set!" "string-delimiter?" "=" "false" "not" "cond" "0" "char-forward" "c" "let" "true" "while" "forward" "return" "lambda" "call/ec")}
        {Lisp-Entry "backward-delimited-string" () 401 19 ("else" "delimited-string" "kind" "set!" "=" "and" "false" "not" "or" "cond" "1" "c1" "0" "char-backward" "c0" "let" "true" "while" "return" "lambda" "call/ec" "backward")}
        {Lisp-Entry "backward-string" () 421 19 ("else" "string" "kind" "set!" "string-delimiter?" "1" "=" "false" "not" "cond" "0" "char-backward" "c" "let" "true" "while" "backward" "return" "lambda" "call/ec")}
        {Lisp-Entry "forward-composite" () 441 19 ("kind" "set!" "1" "next-pos" "present-char" "format" "explore-error" "/=" "if" "0" "char-forward" "c" "let" "forward-whites" "forward-all-expr" "forward" "end" "set-start" "delimiter" "knd")}
        {Lisp-Entry "backward-composite" () 454 19 ("kind" "end" "set!" "1" "previous-pos" "present-char" "format" "explore-error" "/=" "if" "0" "char-backward" "c" "backward-whites" "backward-all-expr" "backward" "start" "copy" "initial-start" "let" "delimiter" "knd")}
        {Lisp-Entry "enter-list" () 468 18 ("true" "forward" "0" "char-forward" "=" "when" "forward-whites")}
        {Lisp-Entry "exit-list" () 475 18 ("true" "forward" "0" "char-forward" "=" "when" "forward-whites" "forward-all-expr")}
        {Lisp-Entry "enter-composite" () 483 18 ("false" "else" "literal" "reference" "list" "quasiquote" "quote" "unquote" "true" "unquote-splicing" "kind" "set!" "forward" "=" "and" "cond" "1" "c1" "0" "char-forward" "c0" "forward-whites" "get-start" "set-end" "get-end" "end" "let")}
        {Lisp-Entry "exit-composite" () 523 18 ("true" "forward" "Close-Composites" "0" "char-forward" "memv?" "when" "forward-whites" "forward-all-expr")}
        {Lisp-Entry "skip-forward" () 531 18 ("get-marked" "=" "forward-expr" "and" "name")}
        {Lisp-Entry "skip-backward" () 535 18 ("get-marked" "=" "backward-expr" "and" "name")}
        {Lisp-Entry "forward-modifiers" () 539 18 ("true" "meta" "get-modifiers" "memq?" "find-marked-symbol" "set!" "kind" "=" "forward-expr" "and" "when" "iterate" "symbol" "false" "meta?" "end" "copy" "old" "let")}
        {Lisp-Entry "forward-comments" () 555 11 ("next-paragraph")}
        {Lisp-Entry "backward-comments" () 559 11 ()}
        {Lisp-Entry "forward-whites" () 563 18 ("true" "set!" "forward" "when" "forward-comments" "=" "whitespace?" "or" "and" "if" "0" "char-forward" "c" "not" "while" "false" "done?" "let" "return" "lambda" "call/ec")}
        {Lisp-Entry "backward-whites" () 577 18 ("backward-lisp-comment" "set!" "backward" "when" "whitespace?" "and" "if" "0" "char-backward" "c" "not" "false" "done?" "let" "true" "while" "return" "lambda" "call/ec")}
        {Lisp-Entry "backward-lisp-comment" () 592 11 ("true" "start" "set-col" "when" "find-lisp-comment" "col" "let")}
        {Lisp-Entry "find-lisp-comment" () 599 11 ("else" "forward-scheme-char" "forward-delimited-string" "forward" "forward-string" "cond" "1" "c1" "char-forward" "c0" "" "=" "and" "when" "iterate" "0" "Cell" "new" "set-end" "false" "result" "copy" "end" "essay" "preserved-end" "get-col" "start-col" "start" "get-row" "start-row" "let")}
        {Lisp-Entry "outer-expr" () 658 11 ("forward" "backward" "Composites" "assq" "cdr" "nc" "pc" "present-char" "format" "explore-error" "composites-match?" "char-backward" "starter" "backward-all-expr" "skipped" "set!" "char-forward" "ender" "forward-all-expr" "when" "else" "next-pos" "set-end" "1" "previous-pos" "set-start" "get-char" "let*" "memv?" "forward-expr" "open-composite?" "backward-constituent" "forward-constituent" "backward-expr" "jazz-constituent?" "not" "string-delimiter?" "close-composite?" "or" "=" "and" "cond" "next-char" "nxt" "0" "previous-char" "prv" "end" "e" "start" "copy" "s" "let" "outer-composite?" "outer-composite?:" "true" "composite?" "composite?:")}
        {Lisp-Entry "form-expr" () 713 18 ("set-start" "find-marked-symbol" "symbol" "kind" "forward-expr" "enter-list" "0" "next-char" "=" "when" "prog1" "set-end" "end" "e" "start" "copy" "s" "let")}
        {Lisp-Entry "form-expr?" () 727 18 ("form-expr" "memq?" "symbols")}
        {Lisp-Entry "form-name" () 731 18 ("symbol?" "if" "expr" "set!" "memq?" "not-null?" "while" "get-modifiers" "modifiers" "cdr" "scan" "let" "car" "definition-name?" "pair?" "and" "when" "form")}
        {Lisp-Entry "category-expr?" () 746 18 ("get-macro-toplevels" "cointerface" "coclass" "remote-proxy" "package" "interface" "class" "form-expr?" "or")}
        {Lisp-Entry "definition-expr?" () 751 26 ("form-expr" "definition-name?")}
        {Lisp-Entry "definition-name?" () 755 26 ("get-macro-toplevels" "cointerface" "coclass" "remote-proxy" "package" "interface" "class" "memq?" "or" "name")}
        {Lisp-Entry "definition-name" () 760 18 ("set-start" "values" "prog1" "begin" "0" "char-forward" "if" "forward-whites" "javamethod" "javaexternal" "comethod" "coexternal" "specific" "generic" "intrinsic" "winexternal" "external" "memq?" "cond" "forward-modifiers" "meta?" "package" "=" "package?" "find-marked-symbol" "type" "let*" "forward-expr" "enter-list" "set-end" "end" "e" "start" "copy" "s" "let")}
        {Lisp-Entry "definition-only-name" () 785 11 ("definition-name" "name" "meta?" "package?" "receive")}
        {Lisp-Entry "for-each-comment" () 795 18 ("comment-string" "search-occurrences" "get-syntax" "title-comment-string" "subseq" "=" "length" "4" "+" "" "and" "end" "paragraph-end" "set-end" "set!" "string-style?" "Expr-Comment" "get-name" "eq?" "unless" "start" "text" "get-style-at" "style" "paragraph-string" "string" "/=" "not" "or" "when" "get-col" "col" "get-row" "row" "pos" "dynamic" "function" "for-each" "previous-row" "let" "proc")}
        {Lisp-Entry "walk-declarations" () 821 26 ("walk-declaration" "while" "walk-expressions?" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-declaration" () 826 26 ("walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-parameters" () 830 21 ("code" "walk-expression" "true" "set!" "start" "/=" "if" "not" "forward-expr" "and" "while" "false" "out?" "end" "get-row" "let" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "iterate-expressions" () 844 18 ("for-each-expressions" "true" "recursive?" "recursive?:" "code" "mode" "mode:" "proc")}
        {Lisp-Entry "iterate-expression" () 848 18 ("for-each-expression" "true" "recursive?" "recursive?:" "code" "mode" "mode:" "proc")}
        {Lisp-Entry "for-each-expressions" () 852 11 ("for-each-expression" "forward-expr" "while" "mode" "proc")}
        {Lisp-Entry "for-each-expression" () 857 11 ("for-each-expression" "forward-expr" "code" "quasiquote" "quote" "memq?" "else" "exit-composite" "for-each-expressions" "quotation" "literal" "if" "let" "composite-kind?" "exit-list" "for-each-forms" "list" "kind" "=" "cond" "enter-composite" "when" "mode" "proc")}
        {Lisp-Entry "Quotation-Forms" () 873 14 ("intrinsic" "external" "jml>>" "form>>" "form" "quasiquote" "quote")}
        {Lisp-Entry "for-each-forms" () 877 11 ("for-each-expressions" "for-each-expression" "quotation" "0" "char-forward" "form" "intern-marked-symbol" "/=" "or" "Quotation-Forms" "find-marked-symbol" "memq?" "symbol" "=" "and" "if" "let" "kind" "when" "forward-expr" "mode" "proc")}
        {Lisp-Entry "walk-expressions" () 890 18 ("false" "set!" "walk-expression" "forward-expr" "while" "true" "first?" "code" "mode" "expression" "context")}
        {Lisp-Entry "walk-expression" () 896 11 ("false" "walk-expression" "forward-expr" "code" "quasiquote" "quote" "memq?" "let" "else" "exit-composite" "walk-expressions" "composite-kind?" "cond" "enter-composite" "when" "specifier" "tag" "specifier-marked?" "symbol" "kind" "=" "and" "if" "end" "start" "first?" "mode" "expression" "context")}
        {Lisp-Entry "specifier-marked?" () 913 11 ("1" "end" "-" "start" "get-char" "symbol" "kind" "=" "and")}
        {Lisp-Entry "search-expressions" () 952 18 ("mode:" "get-range" "list" "match?" "start" ">=" "and" "when" "bind" "info" "for-each" "iterate-expressions" "return" "lambda" "call/ec" "cons" "read-string-element" "target" "target-string" "dynamic" "function" "map" "all" "let" "ignore-case?" "whole-words?" "position" "targets" "mode")}
        {Lisp-Entry "match?" () 970 11 ("get-marked" "read-string-element" "equal?" "expression-kind" "eq?" "not" "or" "and" "parse-pattern-variable" "kind" "name" "pattern-variable?" "if" "get-kind" "expl-kind" "let" "parse-expression" "expression" "mode" "receive" "target" "expl-mode")}
        {Lisp-Entry "expression-kind" () 983 11 ("expression-kind" "unimplemented" "else" "symbol" "symbol?" "string" "string?" "char" "char?" "boolean" "boolean?" "number" "number?" "cond" "expression")}
        {Lisp-Entry "parse-expression" () 992 11 ("cadr" "quotation" "values" "quote" "car" "eq?" "pair?" "and" "if" "expression")}
        {Lisp-Entry "pattern-variable?" () 998 11 ("0" "symbol->string" "element" "=" "symbol?" "and" "expression")}
        {Lisp-Entry "parse-pattern-variable" () 1003 11 ("string->symbol" "empty-string?" "if" "values" "mode" "kind" "name" "bind-optionals" "separator:" "1" "symbol->string" "subseq" "parse-strings" "elements" "let" "variable")}
        {Lisp-Entry "open-composite?" () 1016 11 ("Open-Composites" "memv?" "char")}
        {Lisp-Entry "close-composite?" () 1020 11 ("Close-Composites" "memv?" "char")}
        {Lisp-Entry "composite-kind?" () 1024 11 ("literal" "reference" "list" "memq?" "kind")}
        {Lisp-Entry "composites-match?" () 1028 11 ("=" "and" "or" "end" "start")}}}})
"Lisp-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Lisp-File-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Lisp-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Lisp-File-Entry" () 45 7 ("File-Entry")}}})
"Lisp-Frame-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Lisp-Frame-Snapshot.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Lisp-Frame-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Lisp-Frame-Snapshot" () 45 7 ("Frame-Snapshot")
        {Lisp-Entry "title" () 48 8 ()}
        {Lisp-Entry "model" () 49 8 ()}
        {Lisp-Entry "method" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("method~self" "model~self" "title~self" "set!" "nextmethod" "parameters" "method" "model" "title" "thread")}
        {Lisp-Entry "get-title" () 65 18 ("title")}
        {Lisp-Entry "get-model" () 69 18 ("model")}
        {Lisp-Entry "get-method" () 73 18 ("method")}
        {Lisp-Entry "present" () 82 11 ("title")}
        {Lisp-Entry "get-image" () 86 11 ("Bitmap-Resource")}
        {Lisp-Entry "edit" () 95 11 ("error?:" "false" "activate-focus?:" "edit" "method" "list" "Jazz-Code-Location" "new" "location" "let" "model" "when")}}}})
"Lisp-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "parser" "Lisp-Parser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.parser.Lisp-Parser" () 37 9 ("jazz")
      {Lisp-Entry "Lisp-Parser" () 45 7 ("File-Parser")
        {Lisp-Entry "parse" () 48 11 ("parse-definitions" "catalog" "Lisp-File-Entry" "new" "time" "file")}
        {Lisp-Entry "Lisp-Period" () 53 14 ()}
        {Lisp-Entry "parse-definitions" () 57 11 ("get-output" "true" "else" "dispatch->name" "dispatch-string?" "tag->name" "tag-string?" "cond" "add-reference" "Lisp-Period" "=" "unless" "get-marked" "keyword" "symbol" "memq?" "and" "when" "kind" "mode" "add-definition" "set-parent" "put" "not" "get-col" "get-row" "Lisp-Entry" "entry" "cdr" "signature" "car" "pair?" "if" "name" "documented?" "marked" "end" "start" "parent" "dynamic" "function" "walk-declarations" "List-Factory" "fact" "end:" "start:" "explorer-class" "expl" "text-beginning" "beginning" "let*" "set-moniker" "false" ":colorize?" "Jazz-Text-View" "new" "text" "let" "file")}
        {Lisp-Entry "explorer-class" () 90 29 ("file")}}}})
"Lisp-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Lisp-Syntax.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.text.Lisp-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "Lisp-Syntax" () 45 7 ("Code-Syntax")
        {Lisp-Entry "Comment" () 53 14 ("1" "make-string")}
        {Lisp-Entry "Title-Comment" () 57 14 ("4" "make-string")}
        {Lisp-Entry "comment-string" () 61 11 ("Comment")}
        {Lisp-Entry "title-comment-string" () 65 11 ("Title-Comment")}
        {Lisp-Entry "Auto-Complete-Characters" () 74 14 ()}
        {Lisp-Entry "auto-complete-characters" () 78 11 ("Auto-Complete-Characters")}
        {Lisp-Entry "auto-complete-char?" () 82 11 ("=" "and" "nextmethod" "or" "last" "key")}}}})
"Lisp-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Lisp-Text-Actions.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.text.Lisp-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Lisp-Text-Actions" () 47 7 (":shift" "on-remove-highlights" "remove-highlights" "on-highlight-selection" "highlight-selection" ":alt" "Shortcut" "shortcut:" "on-toggle-expr" ":focus" "Event-Handler" "action-handler:" "toggle-expr" "name:" "Actions")}}})
"Lisp-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Lisp-Text-Preferences.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.text.Lisp-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Lisp-Text-Preferences" () 45 7 ("Code-Text-Preferences")
        {Lisp-Entry "title-color" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "comment-color" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "expr-comment-color" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "declaration-keyword-color" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "declaration-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "keyword-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "tag-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "specifier-color" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "char-color" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "number-color" () 57 12 ("generate" "accessors")}
        {Lisp-Entry "boolean-color" () 58 12 ("generate" "accessors")}
        {Lisp-Entry "string-color" () 59 12 ("generate" "accessors")}
        {Lisp-Entry "delimited-string-color" () 60 12 ("generate" "accessors")}
        {Lisp-Entry "named-string-color" () 61 12 ("generate" "accessors")}
        {Lisp-Entry "quotation-color" () 62 12 ("generate" "accessors")}
        {Lisp-Entry "feature-color" () 63 12 ("generate" "accessors")}
        {Lisp-Entry "completions" () 64 12 ("generate" "accessors")}
        {Lisp-Entry "translate-keys?" () 65 12 ("generate" "accessors" "false")}}}})
"Lisp-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Lisp-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.text.Lisp-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Auto-Complete-Characters" () 48 10 ()}
      {Lisp-Entry "Lisp-Text-View" () 52 7 ("cond" "list" "x" "function" "for-each" "b" "a" "foo" "virtual" "public" "method" "comment" "Code-Text-View")
        {Lisp-Entry "new-syntax" () 55 11 ("Lisp-Syntax" "new")}
        {Lisp-Entry "frame-icon" () 65 16 ("Bitmap-Resource")}
        {Lisp-Entry "focus-actions" () 74 11 ("nextmethod" "lisp-text" "find-actions" "cons")}
        {Lisp-Entry "context-menu" () 84 11 ("get-context-menu" "track-popup-menu" "edit-references" "edit-definition" ":move-caret" "context-menu-click" "always" "else" "never" "outside-selection" "not" "and" "cond" "move-caret" "let" "modifiers-down" "alt?" "control?" "shift?" "receive" "pos")}
        {Lisp-Entry "tab-press" () 97 11 ("tabulate" "dynamic" "function" "undoer" "with-atomic-undo" "insert-char" "shift-key?" "navigate-view" "accepts-returns?" "not" "if" "modifiers" "key")}
        {Lisp-Entry "on-toggle-expr" () 107 11 ("true" "set-modified?" "replace" "rs" "range-strings" "ls" "not" "or" "right" "get-range" "left" "forward-expr" "get-end" "backward-expr" "get-start" "set-pos" "right-expl" "self" "explorer-class" "new" "left-expl" "let" "dynamic" "function" "undoer" "with-atomic-undo" "bell" "has-selection?" "if" "evt")}
        {Lisp-Entry "get-constituent-test" () 135 16 ("jazz-constituent?")}
        {Lisp-Entry "colorize-syntax" () 144 11 ("colorize-comments" "colorize-declarations" "dynamic" "function" "with-safe-explore" "entries?:" "nextmethod" "false" "recoloring?" "recoloring?:")}
        {Lisp-Entry "Syntax-Targets" () 152 14 ()}
        {Lisp-Entry "Syntax-Automata" () 155 14 ()}
        {Lisp-Entry "syntax-targets" () 159 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 165 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 171 11 ("Syntax-Targets")}
        {Lisp-Entry "compute-syntax-automata" () 175 11 ("jazz-constituent?" "self" "false" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" () 179 11 ("recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "colorize-declarations" () 183 11 ("finish-current" "true" "get-application" "get-documentation-cataloguer" "Feature" "feature" "Literal" "literal" "Expr-Comment" "expr-comment" "Named-String" "named-string" "Delimited-String" "delimited-string" "String" "string" "Boolean" "boolean" "Number" "number" "Char" "char" "colorize-specifier" "specifier" "colorize-tag" "tag" "Keyword" "Default" "get-style-at" "get-name" "eq?" "keyword" "Quotation" "quasiquote" "quote" "memq?" "symbol" "case" "kind" "mode" "Declaration-Keyword" "declaration-style" "apply-coloring" "when" "documented?" "marked" "end" "start" "context" "dynamic" "function" "walk-declarations" "new-colorizer" "not" "essay" "colorizer" "end:" "text-beginning" "start:" "self" "explorer-class" "new" "expl" "let" "false" "recoloring?")}
        {Lisp-Entry "colorize-tag" () 234 29 ("end" "start" "colorizer")}
        {Lisp-Entry "colorize-specifier" () 238 29 ("end" "start" "colorizer")}
        {Lisp-Entry "declaration-style" () 242 29 ("documented?")}
        {Lisp-Entry "colorize-comments" () 246 11 ("finish-current" "when" "Title" "4" "+" "Comment" "apply-coloring" "if" "Cell" "paragraph-length" "len" "get-row" "row" "let*" "title?" "end" "start" "dynamic" "function" "for-each-comment" "new-colorizer" "not" "essay" "colorizer" "text-beginning" "end:" "self" "explorer-class" "new" "expl" "let" "false" "recoloring?")}
        {Lisp-Entry "recolorize-text" () 262 11 ("recolorize-row" "to" "get-row" "from" "row" "for" "loop" "nextmethod" "end-row" "start")}
        {Lisp-Entry "recolorize-row" () 268 11 ("recolorize-delimited-strings" "recolorize-strings" "recolorize-specifiers" "recolorize-chars" "recolorize-booleans" "recolorize-comments" "recolorize-expr-comments" "recolorize-declarations" "row")}
        {Lisp-Entry "Max-Declaration-Col" () 279 14 ("4")}
        {Lisp-Entry "recolorize-declarations" () 283 11 ("false" "get-application" "get-documentation-cataloguer" "Expr-Comment" "expr-comment" "String" "string" "Specifier" "specifier" "Tag" "tag" "case" "kind" "mode" "Declaration-Keyword" "declaration-style" "apply-style" "documented?" "marked" "end" "start" "context" "dynamic" "function" "walk-declaration" "end:" "start:" "self" "explorer-class" "expl" "Cell" "new" "pos" "element" "=" "Max-Declaration-Col" "length" "" "and" "when" "skip-whitespace" "col" "paragraph-string" "line" "let*" "Explore-Error" "catch" "row")}
        {Lisp-Entry "recolorize-expr-comments" () 312 11 ("get-start" "Expr-Comment" "apply-style" "get-row" "symbol" "when" "get-end" "end" "forward-expr" "kind" "end:" "self" "explorer-class" "expl" "+" "Cell" "new" "pos" "1" "-" "element" "=" ">" "and" "unless" "true" "set!" "if" "start:" "search" "comment" "let" "not" "while" "false" "done?" "0" "col" "length" "len" "paragraph-string" "line" "let*" "row")}
        {Lisp-Entry "recolorize-comments" () 331 11 ("Title" "Comment" "apply-style" "begin" "title-comment-string" "subseq" "=" "" "if" "4" "+" "title-end" "let" "Cell" "new" "get-style-at" "textual-style?" "not" "and" "when" "syntax" "comment-string" "search" "comment" "length" "len" "paragraph-string" "line" "let*" "row")}
        {Lisp-Entry "recolorize-booleans" () 344 11 ("Boolean" "apply-style" "Cell" "new" "commented?" "unless" "+" "end" "target" "pos" "bind" "true" "set!" "if" "position:" "multisearch-string" "found" "let" "not" "while" "false" "done?" "0" "col" "length" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "recolorize-chars" () 361 11 ("increase!" "jazz-constituent?" "" "and" "Char" "apply-style" "commented?" "unless" "3" "end" "2" "+" "Cell" "new" "get-char" "alphanumeric?" "true" "set!" "if" "start:" "search" "let" "not" "while" "false" "done?" "0" "col" "length" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "recolorize-specifiers" () 383 11 ("get-col" "+" "Specifier" "Tag" "=" "apply-style" "1" "-" "get-char" ">" "essay" "before" "Cell" "new" "find-specifier-end" "end" "true" "set!" "if" "start:" "search" "let" "not" "while" "return" "lambda" "call/ec" "false" "done?" "0" "col" "length" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "recolorize-strings" () 402 11 ("commented?" "unless" "Cell" "new" "String" "apply-style" "begin" "1" "+" "end" "true" "set!" "if" "start:" "search" "let" "not" "while" "false" "done?" "0" "col" "length" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "recolorize-delimited-strings" () 422 11 ("commented?" "unless" "Cell" "new" "Delimited-String" "apply-style" "begin" "2" "+" "end" "true" "set!" "if" "start:" "search" "let" "not" "while" "false" "done?" "0" "col" "length" "len" "paragraph-string" "str" "let*" "row")}
        {Lisp-Entry "Comment-Styles" () 446 14 ("Comment" "Title")}
        {Lisp-Entry "String-Styles" () 449 14 ("Named-String" "Delimited-String" "String")}
        {Lisp-Entry "commented?" () 453 11 ("get-style-at" "comment-style?" "pos")}
        {Lisp-Entry "comment-style?" () 457 11 ("Comment-Styles" "inherits?" "style-name" "dynamic" "function" "some?" "style")}
        {Lisp-Entry "string-style?" () 463 11 ("String-Styles" "inherits?" "style-name" "dynamic" "function" "some?" "style")}
        {Lisp-Entry "textual-style?" () 469 11 ("string-style?" "comment-style?" "or" "style")}
        {Lisp-Entry "favorite-completions" () 474 11 ("preferences" "get-completions")}
        {Lisp-Entry "get-specials" () 505 29 ()}
        {Lisp-Entry "return-press" () 509 11 ("tabulate" "nextmethod" "dynamic" "function" "undoer" "with-atomic-undo" "key")}
        {Lisp-Entry "tabulate" () 516 11 ("ignore" "action:" "true" "set-modified?" "when" "+" "get-row" "tabulate-lines" "last-delta" "modified?" "receive" "set-caret" "with-safe-explore" "dynamic" "function" "with-update-locked" "get-end" "end" "get-start" "start" "let")}
        {Lisp-Entry "tabulate-lines" () 531 11 ("values" "true" "set!" "0" "/=" "when" "tabulate-line" "delta" "with" "to" "from" "row" "for" "loop" "last-delta" "false" "modified?" "let" "end" "start")}
        {Lisp-Entry "remove-specifiers" () 542 11 ("collect" "1" "get-end" "-" "get-start" "get-char" "/=" "get-range" "range" "let" "or" "when" "in" "mark" "false" "then" "true" "first" "first?" "for" "loop" "lst")}
        {Lisp-Entry "effective-symbol" () 552 11 ("1" "length" "-" "0" "subseq" "string->symbol" "ends-with?" "if" "string")}
        {Lisp-Entry "tabulate-line" () 558 11 ("tabulate-column" "tabulate-delta" "delta" "let" "row")}
        {Lisp-Entry "tabulate-delta" () 564 18 ("get-column" "*" "count-modifiers" "decrease!" "when" "specials" "modifiers?" "bind" "element" "upper-case?" ">" "default-col" "4" "threshold" "proposed-col" "else" "neq?" "2" "/=" "get-row" "first-row" "first-on-last-line" "first-last" "let" "get-macro-tabulation" "cdr" "either" "info" "get-specials" "assq" "special-info" "not" "or" "first-indent" "ends-with?" "first-dispatch?" "first-without?" "starts-with?" "and" "first-with?" "tag?" "first-tag?" "effective-symbol" "symbol" "get-kind" "=" "essay" "first-symbol" "get-range" "get-string" "first-string" "car" "first" "get-col" "+" "set!" "null?" "if" "col" "rank" "length" "count" "1" "get-start" "-" "opening" "collect-backward-exprs" "remove-specifiers" "expressions" "start:" "self" "explorer-class" "expl" "0" "Cell" "new" "pos" "let*" "row")}
        {Lisp-Entry "tabulate-column" () 611 11 ("+" "make-string" "list" "Cell" "Range" "new" "replace-text" "get-column" "actual" "let" "0" "/=" "when" "delta" "row")}
        {Lisp-Entry "count-modifiers" () 618 11 ("cdr" "increase!" "true" "set!" "self" "explorer-class" "new" "get-modifiers" "memq?" "or" "if" "car" "get-range" "get-string" "find-symbol" "symbol" "not" "not-null?" "and" "while" "false" "done?" "0" "total" "let" "expressions")}
        {Lisp-Entry "first-on-last-line" () 631 11 ("set!" "=" "not-null?" "and" "while" "get-range" "get-start" "get-row" "line" "car" "first" "cdr" "reverse" "1" ">" "if" "reversed" "let*" "count" "expressions")}
        {Lisp-Entry "current-name" () 646 11 ("get-string" "when" "current-expr-range" "range" "let")}
        {Lisp-Entry "current-expr" () 652 11 ("get-string" "read-string-element" "when" "current-expr-range" "range" "let")}
        {Lisp-Entry "current-expr-range" () 658 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 664 11 ("get-range" "outer-expr" "end:" "start:" "self" "explorer-class" "new" "expl" "let" "pos")}
        {Lisp-Entry "current-symbol" () 670 11 ("symbol?" "when" "current-expr" "expr" "let")}
        {Lisp-Entry "expr-at" () 676 11 ("butlast" "read-string-element" "ends-with?" "if" "expr-range" "get-string" "string" "let" "pos")}
        {Lisp-Entry "flash-character?" () 688 11 ("memq?" "char")}
        {Lisp-Entry "headers" () 697 12 ("4" "make-string" "append" "list")}
        {Lisp-Entry "get-headers" () 702 11 ("headers")}
        {Lisp-Entry "get-context" () 711 11 ("jazz")}
        {Lisp-Entry "current-definition" () 715 11 ("get-string" "read-string-element" "when" "current-definition-range" "range" "let")}
        {Lisp-Entry "current-definition-range" () 721 11 ("get-end" "definition-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "definition-range" () 727 18 ("need-definition?" "or" "and" "definition-expr?" "when" "get-range" "true" "set!" "outer-expr" "if" "not" "while" "done?" "false" "definition?" "range" "end:" "start:" "self" "explorer-class" "new" "expl" "let" "pos")}
        {Lisp-Entry "need-definition?" () 743 29 ("true")}
        {Lisp-Entry "on-highlight-selection" () 752 11 ("highlight-expression" "remove-highlights" "bell" "symbol?" "not" "or" "if" "current-expr" "symbol" "get-start" "definition-range" "range" "let" "evt")}
        {Lisp-Entry "on-remove-highlights" () 761 11 ("remove-highlights" "bell" "not" "if" "get-start" "definition-range" "range" "let" "evt")}
        {Lisp-Entry "highlight-expression" () 768 18 ("get-end" "Reference" "apply-style" "find-marked-symbol" "eq?" "get-kind" "=" "and" "when" "mode" "dynamic" "function" "iterate-expression" "end:" "get-start" "start:" "self" "explorer-class" "new" "expl" "let" "symbol" "range")}
        {Lisp-Entry "remove-highlights" () 776 18 ("1" "get-end" "+" "end:" "get-start" "get-row" "start:" "get-runs" "invalidate-paragraph" "default-style" "set-style" "Break" "Walk-Fatal" "Walk-Warning" "Reference" "memq?" "when" "get-name" "style-name" "get-style" "style" "let*" "run" "for-each" "paragraph" "row" "dynamic" "function" "for-each-paragraph" "range")}}}})
"List-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "List-Domain.fusion"} {Time 128363203480000000L}
    {Lisp-Entry "jazz.library.domain.List-Domain" () 37 9 ("jazz")
      {Lisp-Entry "List-Domain" () 44 7 ("Domain")}
      {Lisp-Entry "List-Domain" () 50 7 ("initialize" "domain" "nullable?" "Domain")
        {Lisp-Entry "validate-value" () 62 11 ("domain" "validate-value" "subvalue" "dynamic" "function" "for-each" "property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "pair?" "not" "if" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 75 11 ("domain" "present" "dynamic" "function" "map" "join" "null?" "if" "value")}
        {Lisp-Entry "setup-entry" () 89 11 ("domain" "setup-list-entry" "client" "view")}}}})
"List-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "List-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.List-Row" () 37 9 ("jazz")
      {Lisp-Entry "List-Row" () 45 7 ("Value-Row")}}})
"List-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "List-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.List-Tester" () 37 9 ("jazz")
      {Lisp-Entry "List-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-list" "invoke")}
        {Lisp-Entry "test-list" () 61 11 ("set-element!" "0" "element" "car" "error?" "begin" "second" "key:" "4" "8" "5" "" "sort" "ci=" "test:" "cdr" "=" "assoc" "eq?" "x" "let" "f" "e" "d" "append" "null?" "reverse" "3" "2" "1" "list" "equal?" "not" "c" "b" "a" "pair?" "rpt" "validate")}}}})
"Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "listener" "Listener.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.listener.Listener" () 37 9 ("jazz")
      {Lisp-Entry "Listener" () 45 11 ()}}})
"Listening-Socket"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "network" "Listening-Socket.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.network.Listening-Socket" () 37 9 ("jazz")
      {Lisp-Entry "Listening-Socket" () 50 7 ("Socket")
        {Lisp-Entry "present-socket" () 58 11 ("get-port" "get-host" "name" "format")}}}})
"Live-Exceptions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "analysis" "Live-Exceptions.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.analysis.Live-Exceptions" () 37 9 ("jazz")
      {Lisp-Entry "Live-Exceptions" () 44 7 ("Object")
        {Lisp-Entry "Class-Exceptions" () 47 26 ()}
        {Lisp-Entry "Definition-Exceptions" () 48 26 ()}}}})
"Local-Proxy"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "remote" "Local-Proxy.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.jrm.remote.Local-Proxy" () 37 9 ("jazz")
      {Lisp-Entry "Local-Proxy" () 45 7 ("Object-Proxy")
        {Lisp-Entry "object" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("object" "set!" "nextmethod" "obj")}
        {Lisp-Entry "get-object" () 61 18 ("object")}
        {Lisp-Entry "marshal" () 70 11 ("remotable-class" "object" "marshal-local-object" "error" "null?" "if" "get-stub-listener" "stub-listener" "get-process" "process" "let*")}
        {Lisp-Entry "remotable-class" () 78 29 ()}
        {Lisp-Entry "live?" () 87 11 ("true")}}}})
"Locale-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "locale" "Locale-Row.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.locale.Locale-Row" () 37 9 ("jazz")
      {Lisp-Entry "Locale-Row" () 46 7 ("String-Row")}}})
"Locales"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "locale" "Locales.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.locale.Locales" () 37 9 ("jazz")
      {Lisp-Entry "Locales" () 40 7 ("Object")
        {Lisp-Entry "locales" () 43 8 ()}
        {Lisp-Entry "initialize" () 46 11 ("locales" "set!" "nextmethod" "rest")}
        {Lisp-Entry "print" () 51 11 ("locales" "if" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-locales" () 63 18 ("locales")}
        {Lisp-Entry "get-locale" () 67 18 ("locales" "getf" "locale")}
        {Lisp-Entry "localize" () 76 18 ("second" "locales" "getf" "either" "locale")}}}})
"Localized-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "locale" "Localized-Row.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.locale.Localized-Row" () 37 9 ("jazz")
      {Lisp-Entry "Localized-Row" () 46 7 ("Value-Row")}}})
"Location-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Location-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.text.Location-Error" () 37 9 ("jazz")
      {Lisp-Entry "Location-Error" () 45 7 ("Error")
        {Lisp-Entry "kind" () 48 8 ()}
        {Lisp-Entry "location" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("location~self" "kind~self" "set!" "nextmethod" "apply" "others" "location" "bad" "kind" "bind-keywords" "rest")}
        {Lisp-Entry "get-kind" () 64 18 ("kind")}
        {Lisp-Entry "get-location" () 68 18 ("location")}
        {Lisp-Entry "get-message" () 77 11 ("unknown" "location" "format" "bad" "kind" "case")}}}})
"Locator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Locator.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.utility.Locator" () 37 9 ("jazz")
      {Lisp-Entry "Locator" () 45 7 ("Object")
        {Lisp-Entry "prefix" () 48 8 ()}
        {Lisp-Entry "reset-time" () 49 8 ()}
        {Lisp-Entry "max-delay" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("max-delay~self" "set!" "nextmethod" "max-delay" "max-delay:")}
        {Lisp-Entry "get-prefix" () 63 18 ("prefix")}
        {Lisp-Entry "setup" () 72 18 ("max-delay" "clock" "+" "reset-time" "prefix" "set!" "string")}
        {Lisp-Entry "enter" () 82 18 ("locate" "append" "prefix" "null?" "if" "target" "validate" "String" "coerce" "string" "let" "key")}
        {Lisp-Entry "validate" () 89 11 ("reset" "ci=" "reset-time" "clock" ">" "or" "prefix" "and" "when" "string")}
        {Lisp-Entry "locate" () 95 18 ("setup" "select" "ci=" "and" "when" "0" "subseq" ">=" "essay" "prefix" "rank" "title" "dynamic" "function" "iterate" "return" "lambda" "call/ec" "length" "len" "let" "target")}
        {Lisp-Entry "iterate" () 113 26 ("proc")}
        {Lisp-Entry "select" () 117 26 ("rank")}
        {Lisp-Entry "reset" () 126 18 ("reset-time" "prefix" "set!")}}}})
"Lock"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "thread" "Lock.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.thread.Lock" () 37 9 ("jazz")
      {Lisp-Entry "Lock" () 44 20 ("Object")}}})
"Log"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "log" "Log.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.log.Log" () 37 9 ("jazz")
      {Lisp-Entry "Log" () 45 7 ("Object")
        {Lisp-Entry "name" () 48 8 ()}
        {Lisp-Entry "file" () 49 8 ()}
        {Lisp-Entry "last-mark" () 50 8 ()}
        {Lisp-Entry "read-error?" () 51 8 ("false")}
        {Lisp-Entry "current-node" () 52 8 ()}
        {Lisp-Entry "toplevel-nodes" () 53 8 ()}
        {Lisp-Entry "initialize" () 56 11 ("load-toplevel-nodes" "when" "List-Factory" "new" "toplevel-nodes~self" "current-node~self" "file~self" "name~self" "set!" "nextmethod" "false" "load?" "load?:" "file" "file:" "name" "name:")}
        {Lisp-Entry "get-name" () 71 18 ("name")}
        {Lisp-Entry "get-file" () 75 18 ("file")}
        {Lisp-Entry "get-current-node" () 79 18 ("current-node")}
        {Lisp-Entry "get-toplevel-nodes" () 83 18 ("toplevel-nodes" "get-list")}
        {Lisp-Entry "reload" () 92 18 ("load-toplevel-nodes" "name" "error" "file" "null?" "if")}
        {Lisp-Entry "get-mark-position" () 99 11 ("first" "mark")}
        {Lisp-Entry "get-mark-line" () 103 11 ("third" "mark")}
        {Lisp-Entry "get-mark-column" () 107 11 ("fourth" "mark")}
        {Lisp-Entry "handle-read-error" () 111 11 ("true" "set!" "format" "message-box" "get-mark-column" "column" "get-mark-line" "1" "+" "line" "file" "parse" "file-path" "let" "last-mark" "get-mark-position" "=" "read-error?" "and" "if" "current-mark")}
        {Lisp-Entry "load-toplevel-nodes" () 121 11 ("read-error?" "toplevel-nodes" "put" "parse-jml" "node" "true" "eof-object?" "if" "read" "expr" "reader-file-mark" "set!" "not" "while" "handle-read-error" "err" "Error" "catch" "current-mark" "false" "done?" "let" "set-reader-file-mark" "last-mark" "when" "read/write" ":sharing" "file" "File-Reader" "new" "reader" "with-closed")}
        {Lisp-Entry "add-toplevel-node" () 145 11 ("toplevel-nodes" "put" "file" "null?" "when" "node")}
        {Lisp-Entry "output-toplevel-node" () 150 11 ("pretty-print" "read" ":sharing" "append" "mode:" "File-Printer" "new" "printer" "with-closed" "file" "when" "node")}
        {Lisp-Entry "with-node" () 161 18 ("output-toplevel-node" "set!" "set-parent" "begin" "unwind-protect" "prog1" "add-toplevel-node" "not" "when" "preserved" "current-node" "parent" "let" "proc" "node")}
        {Lisp-Entry "log-node" () 176 18 ("output-toplevel-node" "add-toplevel-node" "not" "when" "set-parent" "current-node" "parent" "let" "node")}
        {Lisp-Entry "log-entry" () 185 18 ("new-entry" "log-node" "data" "message" "name" "tag")}
        {Lisp-Entry "new-entry" () 189 18 ("set-property" "either" "JML-Element" "new" "entry" "let" "data" "message" "name" "tag")}
        {Lisp-Entry "clear" () 197 18 ("clear" "unimplemented")}}}})
"Log-Reporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "reporter" "Log-Reporter.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.reporter.Log-Reporter" () 37 9 ("jazz")
      {Lisp-Entry "Log-Reporter" () 44 7 ("Reporter" "Object")
        {Lisp-Entry "log" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("log~self" "set!" "nextmethod" "log")}
        {Lisp-Entry "section-title" () 55 11 ("log" "format" "title")}
        {Lisp-Entry "set-message" () 59 11 ("log" "format" "msg")}
        {Lisp-Entry "user-message" () 63 11 ("format" "apply" "set-message" "rest" "fmt")}
        {Lisp-Entry "set-range" () 67 11 ("range")}
        {Lisp-Entry "set-pos" () 71 11 ("pos")}
        {Lisp-Entry "delta-pos" () 75 11 ("increment")}
        {Lisp-Entry "set-step" () 79 11 ("increment")}
        {Lisp-Entry "step-it" () 83 11 ()}
        {Lisp-Entry "set-done" () 87 11 ()}
        {Lisp-Entry "disable-cancel" () 91 11 ()}
        {Lisp-Entry "cancel-requested?" () 95 11 ("false")}
        {Lisp-Entry "test-cancelled" () 99 11 ()}}}})
"Log-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "Log-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debuggee.Log-View" () 37 9 ("jazz")
      {Lisp-Entry "Log-View" () 48 7 ("data" "width:" "title:" "name" ":icons" "portfolio:" "message" "filled-column:" "log-tree" "shown?:" "header" "content" "flat?:" "vscroll?:" "document" "style:" "scroller" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "log" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "get-tree" () 71 11 ("log-tree" "locate")}
        {Lisp-Entry "clear" () 80 18 ("update" "clear" "bell" "log" "null?" "if")}
        {Lisp-Entry "update" () 92 18 ("view-content" "reload" "get-file" "log" "and" "when" "true" "reload?" "reload?:")}
        {Lisp-Entry "extract-log-content" () 98 29 ("get-toplevel-nodes" "log")}
        {Lisp-Entry "view-log" () 107 18 ("view-content" "log~self" "set!" "log")}
        {Lisp-Entry "view-content" () 112 11 ("extract-log-content" "insert-node" "node" "for-each-reversed" "log" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "insert-node" () 123 11 ("get-children" "insert-node" "subnode" "dynamic" "function" "for-each" "user-data:" "Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "subfather" "data" "message" "node-image" "image" "get-property" "either" "->string" "name" "let*" "else" "resources" "get-tag" "case" "node" "father" "tree")}
        {Lisp-Entry "node-image" () 137 11 ("else" "problem" "Bitmap-Resource" "resources" "get-tag" "case" "node")}}}})
"Loggable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Loggable.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.utility.Loggable" () 37 9 ("jazz")
      {Lisp-Entry "Loggable" () 44 11 ()
        {Lisp-Entry "log-info" () 47 35 ("output")}
        {Lisp-Entry "edit" () 48 35 ()}
        {Lisp-Entry "edit-child" () 49 35 ("child")}}}})
"Logical-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "data" "Logical-Datatype.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.data.Logical-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "Logical-Datatype" () 45 7 ("Object")
        {Lisp-Entry "name" () 48 8 ()}
        {Lisp-Entry "size" () 49 8 ()}
        {Lisp-Entry "precision" () 50 8 ()}
        {Lisp-Entry "scale" () 51 8 ()}
        {Lisp-Entry "construct-literal" () 55 16 ("self" "new" "null?" "integer?" "or" "assert" "scale" "precision" "size" "name" "context")}
        {Lisp-Entry "initialize" () 62 11 ("scale~self" "precision~self" "size~self" "name~self" "set!" "nextmethod" "scale" "precision" "size" "name")}
        {Lisp-Entry "compare-object" () 70 11 (":not-equal" "else" ":equal" "get-scale" "scale" "get-precision" "precision" "get-size" "size" "get-name" "name" "=" "and" ":incompatible" "Logical-Datatype" "is-not?" "cond" "target")}
        {Lisp-Entry "foldable?" () 82 11 ("true")}
        {Lisp-Entry "fold-object" () 86 11 ("scale" "precision" "size" "name" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 96 11 ("scale" "precision" "size" "name" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-name" () 110 18 ("name")}
        {Lisp-Entry "get-size" () 114 18 ("size")}
        {Lisp-Entry "has-size?" () 118 18 ("size" "not-null?")}
        {Lisp-Entry "has-precision?" () 122 18 ("precision" "not-null?")}
        {Lisp-Entry "has-scale?" () 126 18 ("scale" "not-null?")}
        {Lisp-Entry "present" () 135 26 ("scale" "name" "format" "precision" "size" "null?" "if")}}}})
"Logical-Datatype-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "designer" "Logical-Datatype-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.designer.Logical-Datatype-Row" () 37 9 ("jazz")
      {Lisp-Entry "Logical-Datatype-Row" () 46 7 ("Combo-Row")
        {Lisp-Entry "domains" () 49 12 ("set-domains" "get-domains")}
        {Lisp-Entry "initialize" () 57 11 ("setup" "domains~self" "set!" "nextmethod" "apply" "others" "domains" "bind-keywords" "rest")}
        {Lisp-Entry "setup" () 64 11 ("get-children" "get-name" "list" "domain" "function" "map" "set-choices" "domains")}
        {Lisp-Entry "get-domains" () 75 18 ("domains")}
        {Lisp-Entry "set-domains" () 79 18 ("domains" "set!" "value")}
        {Lisp-Entry "present" () 88 11 ("present" "null?" "if" "type")}
        {Lisp-Entry "editor-class" () 99 11 ("Logical-Datatype-Row-Editor")}
        {Lisp-Entry "get-edited-value" () 103 11 ("Logical-Datatype" "new" "size" "name" "receive" "when" "parse-content" "parsed" "editor" "get-content" "string" "let*")}
        {Lisp-Entry "set-edited-value" () 111 11 ("present" "editor" "set-content" "value")}
        {Lisp-Entry "read-content" () 115 11 ("separator:" "substitute" "parse-strings" "content")}
        {Lisp-Entry "parse-content" () 119 11 ("message:" "Parse-Error" "new" "signal" "else" "cadr" "parse-integer" "2" "car" "values" "1" "0" "length" "case" "read-content" "content" "let" "string")}}
      {Lisp-Entry "Logical-Datatype-Row-Editor" () 133 7 ("Combo-Row-Editor")
        {Lisp-Entry "content-change" () 136 11 ("nextmethod" "popup" "eq?" "unless" "origin")}
        {Lisp-Entry "combo-choice" () 141 11 ()}
        {Lisp-Entry "get-entry" () 145 11 ("car" "when" "get-content" "read-content" "content" "let")}
        {Lisp-Entry "set-entry" () 151 11 ("cdr" "cons" "join" "set-content" "get-content" "read-content" "actual" "let" "entry")}}}})
"Login-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "login" "Login-Dialog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.login.Login-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "Login-Dialog" () 49 7 ("standard" "open" "new" "on-cancel" "cancel" "on-ok" ":host" "default?:" "login" "display-images?:" "toplevel-controls?:" "width:" "on-double-click" "double-click-handler:" "can-select-empty?:" "row" "selection-mode:" "default-row-height:" "show-header?:" "users" "document" "standard-border" "open-pathname" "open-label" "editable?:" "text" "scroller" "moniker-border" "on-moniker-update" "moniker-update-handler:" "display-protocol?:" "dir" "protocol:" "new-directory" "new-directory-label" "on-content-change" "content-change-handler:" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "Ansi-Var" "Default" "Text-Style" "default-style:" "show-unfocused-selection?:" "accepts-returns?:" "top-padding:" "2" "left-padding:" "new-user" "fill" "layout-type:" "vscroll?:" "hscroll?:" "entry" "style:" "edge" "border-type:" "new-border" "visible?:" "new-label" "8" "on-standard" "standard-button" "on-open" "open-button" "on-new" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "new-button" "content" "Default-GUI" "description" "Label-Bold" "Font" "font:" "9" "Point" "position:" "title:" "title" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "use-user-class?" () 52 12 ("generate" "accessors" "false")}
        {Lisp-Entry "finish" () 106 11 ("setup-standard-users" "setup-open-user" "setup-new-user" "nextmethod" "rest")}
        {Lisp-Entry "setup-new-user" () 113 11 ("Users" "Directory" "new-directory" "set-moniker" "get-windows-user-name" "new-user" "locate" "set-string-content")}
        {Lisp-Entry "setup-open-user" () 118 11 ("extensions:" "set-parameters" "file" "else" "get-text" "set-tooltip-text" "dir" "set-protocol" "set-title" "use-user-class?" "not" "cond" "open-pathname" "open" "open-label" "locate" "label" "let")}
        {Lisp-Entry "setup-standard-users" () 132 11 ("standard-button" "install-standard" "else" "true" "new-button" "locate" "set-selected?" "install-new" "null?" "cond" "collect-standard-users" "users" "let")}
        {Lisp-Entry "dialog-class" () 148 16 ("Login-Host-Dialog")}
        {Lisp-Entry "Login-Host-Dialog" () 153 14 ("Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "validate-dialog" () 165 11 ("throw-cancel" "message-box" "when" "validate-user" "message" "let")}
        {Lisp-Entry "get-modal-result" () 172 11 ("get-user-data" "get-row" "row" "when" "get-single-selection" "rank" "users" "tree" "let*" "standard" "open-pathname" "open" "format" "list" "new-file" "else" "use-user-class?" "not" "cond" "new-user" "get-string-content" "name" "new-directory" "locate" "get-moniker" "dir" "let" "new" "branch" "get-name" "case")}
        {Lisp-Entry "get-tab-stops" () 196 11 ("standard" "open" "new-directory" "get-text" "new-user" "locate" "list" "new" "branch" "get-name" "case")}
        {Lisp-Entry "on-new" () 213 11 ("install-new" "evt")}
        {Lisp-Entry "on-open" () 217 11 ("install-open" "evt")}
        {Lisp-Entry "on-standard" () 221 11 ("collect-standard-users" "install-standard" "evt")}
        {Lisp-Entry "on-content-change" () 225 11 ("update-login" "evt")}
        {Lisp-Entry "on-moniker-update" () 229 11 ("update-login" "evt")}
        {Lisp-Entry "on-double-click" () 233 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "login" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-return-press" () 241 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "validate-dialog" "login" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "escape-press" () 249 11 ("cancel-modal" "get-host" "dialog" "let" "key")}
        {Lisp-Entry "install-new" () 259 11 ("update-login" "select-all" "acquire-focus" "prefix" "get-string-content" "content" "new-user" "text" "let*" "new" "locate" "set-active-branch")}
        {Lisp-Entry "install-open" () 269 11 ("update-login" "select-all" "acquire-focus" "open-pathname" "get-text" "text" "let" "open" "locate" "set-active-branch")}
        {Lisp-Entry "install-standard" () 277 11 ("update-login" "acquire-focus" "ensure-displayed" "set-single-selection" "when" "user-data:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "file" "presentation" "bind" "info" "dynamic" "function" "for-each" "remove-every-row" "0" "essay" "position" "return:" "equal?" "test:" "car" "key:" "Default-User" "get-system-property" "command-argument" "find" "either" "rank" "tree" "let" "standard" "locate" "set-active-branch" "users")}
        {Lisp-Entry "collect-standard-users" () 293 11 ("car" "key:" "ci<" "sort" "recursive?:" "true" "directories?:" "false" "files?:" "get-base" "exists?" "when" "format" "new-file" "file" "else" "cons" "set!" "get-name" "presentation" "use-user-class?" "not" "cond" "dynamic" "function" "iterate-directory" "lst" "Users" "Directory" "dir" "let")}
        {Lisp-Entry "update-login" () 317 11 ("users" "get-selection" "standard" "open-pathname" "open" "new-directory" "get-moniker" "new-user" "get-string-content" "empty-string?" "not" "and" "login" "locate" "set-enabled?" "new" "get-name" "case" "branch" "when")}
        {Lisp-Entry "validate-user" () 333 11 ("else" "validate-open-user" "open-pathname" "get-moniker" "pathname" "open" "validate-new-user" "new-user" "locate" "get-string-content" "username" "let" "new" "branch" "get-name" "case")}
        {Lisp-Entry "validate-new-user" () 345 11 ("else" "exists?" "Users" "list" "Directory" "new" "dir" "format" "in-manifest?" "and" "find-symbol" "symbol" "memv?" "numeric?" "char" "dynamic" "function" "every?" "alphabetic?" "eqv?" "or" "not" "first" "let" "cond" "validate-new-user" "unimplemented" "username")}
        {Lisp-Entry "validate-open-user" () 368 11 ("parse" "format" "/=" "get-parent" "get-name" "name" "get-base" "base" "let" "else" "use-user-class?" "not" "cond" "pathname")}
        {Lisp-Entry "Header-Color" () 388 14 ("blue:" "green:" "red:" "Color" "new")}
        {Lisp-Entry "draw" () 392 11 ("Header-Color" "White" "name:" "Color" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "update" "context" "dc")}}
      {Lisp-Entry "User-Text-View" () 402 7 ("Plain-Text-View")
        {Lisp-Entry "get-context-menu" () 405 11 ("new-text-context-menu")}}}})
"Logs-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "log" "Logs-Viewer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.log.Logs-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "Logs-Viewer" () 49 7 ("data-container" "log-tree" "header" "scroller" "log-view" "second" "log-border" "width:" "toplevel-controls?:" "on-return-press" "return-press-handler:" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "log" "filled-column:" "logs-tree" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "logs-border" "horz" "first" "horizontal" "division:" "relative" "mode:" "vert" "orientation:" "split" "state:" "center" "vertical" "on-refresh" "refresh" "on-clear" "clear" "on-open" "tail" "open" "on-refresh-logs" "refresh-logs" "on-directory-logs" "directory-logs" "on-memory-logs" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "memory-logs" "0" "6" "flow" "north" "location:" "Dimension" "size:" "tools" "name:" "2" "Rect" "layout-insets:" "border" "layout-type:" "title:" "Layout-View")
        {Lisp-Entry "logs-directory" () 52 8 ()}
        {Lisp-Entry "data-viewer" () 53 8 ()}
        {Lisp-Entry "finish" () 89 11 ("refresh-logs" "nextmethod" "initargs")}
        {Lisp-Entry "palette-icon" () 100 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 105 16 ()}
        {Lisp-Entry "palette-position" () 110 16 ("Point")}
        {Lisp-Entry "palette-size" () 115 16 ("Point")}
        {Lisp-Entry "client-activate" () 119 11 ("perserving-refresh-logs")}
        {Lisp-Entry "get-tree" () 128 11 ("logs-tree" "locate")}
        {Lisp-Entry "Logs-Directory" () 137 14 ("Base" "Directory")}
        {Lisp-Entry "with-directory" () 141 11 ("dynamic" "function" "with-preserved-current-directory" "Logs-Directory" "exists?" "and" "if" "proc" "default?")}
        {Lisp-Entry "on-memory-logs" () 149 11 ("refresh-logs" "logs-directory" "set!" "evt")}
        {Lisp-Entry "on-directory-logs" () 154 11 ("refresh-logs" "logs-directory" "set!" "directory:" "BrowseFolder-Dialog" "get-modal" "directory" "let" "dir" "dynamic" "function" "get-shift?" "with-directory" "evt")}
        {Lisp-Entry "on-refresh-logs" () 162 11 ("refresh-logs" "evt")}
        {Lisp-Entry "perserving-refresh-logs" () 166 11 ("true" "generate-event?:" "data" ":use" "refresh-logs" "dynamic" "function" "with-preserved-selection" "get-tree" "tree" "let")}
        {Lisp-Entry "refresh-logs" () 175 18 ("view-logs" "close-data-viewer")}
        {Lisp-Entry "on-open" () 180 11 ("view-log" "set-selection" "locate" "log-view" "true" ":load?" "file:" "Log" "new" "log" "directory:" "extensions:" "OpenFile-Dialog" "get-modal" "file" "get-tree" "tree" "let*" "dir" "dynamic" "function" "get-shift?" "with-directory" "evt")}
        {Lisp-Entry "on-clear" () 191 11 ("on-refresh" "on-clear" "unimplemented" "evt")}
        {Lisp-Entry "on-refresh" () 196 18 ("update" "locate" "log-view" "let" "evt")}
        {Lisp-Entry "on-selection-change" () 201 11 ("view-data" "node" "log-tree" "view-log" "reload" "get-file" "close-data-viewer" "get-row" "get-user-data" "log" "locate" "log-view" "when" "get-single-selection" "selection" "logs-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-double-click" () 220 11 ("edit-data" "get-row" "get-user-data" "node" "when" "get-single-selection" "selection" "log-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-return-press" () 230 11 ("on-double-click" "evt")}
        {Lisp-Entry "view-logs" () 239 11 ("insert-file" "ci=" "when" "get-extension" "extension" "file" "iterate-directory" "get-logs" "insert-log" "log" "for-each" "logs-directory" "null?" "if" "remove-every-row" "dynamic" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "insert-log" () 255 11 ("user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "get-name" "->string" "name" "let" "log" "tree")}
        {Lisp-Entry "insert-file" () 260 11 ("file:" "Log" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "get-base" "name" "let" "file" "tree")}
        {Lisp-Entry "view-data" () 270 29 ("layout-view" "parent:" "client:" "new" "data-viewer" "set!" "data-container" "locate" "container" "data-viewer-class" "class" "get-property" "data" "let*" "JML-Node" "is?" "when" "close-data-viewer" "node")}
        {Lisp-Entry "data-viewer-class" () 283 11 ("No-Data-Viewer" "get-viewer-class" "either" "Viewable" "is?" "and" "if" "data")}
        {Lisp-Entry "close-data-viewer" () 289 11 ("set!" "close" "data-viewer" "when")}
        {Lisp-Entry "edit-data" () 300 29 ("node")}}
      {Lisp-Entry "No-Data-Viewer" () 309 7 ("entry" "style:" "edge" "border-type:" "Border-View")
        {Lisp-Entry "client" () 312 12 ("generate" "accessors")}
        {Lisp-Entry "Background-Font" () 319 14 ("point-size:" "font-name:" "Font")}
        {Lisp-Entry "draw" () 323 11 ("draw-no-data" "nextmethod" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-no-data" () 328 11 ("true" "get-v" "get-h" "draw-text" "Dark-Gray" "name:" "Color" "set-text-color" "get-display-size" "center" "pos" "get-text-extent" "extent" "localize" "title" "let*" "Background-Font" "set-font" "dc")}}}})
"Look"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "look" "Look.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.look.Look" () 37 9 ("jazz")
      {Lisp-Entry "Look" () 50 7 ("Object")
        {Lisp-Entry "present" () 58 26 ()}
        {Lisp-Entry "get-element" () 67 26 ("name")}}}})
"Lua-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "lua" "Lua-Explorer.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.lua.lua.Lua-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "Lua-Explorer" () 45 7 ("CppJava-Explorer")}}})
"Lua-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "lua" "Lua-File-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.lua.lua.Lua-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Lua-File-Entry" () 45 7 ("File-Entry")}}})
"Lua-Function-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "lua" "Lua-Function-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.lua.lua.Lua-Function-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Lua-Function-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"Lua-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "lua" "Lua-Parser.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.lua.lua.Lua-Parser" () 37 9 ("jazz")
      {Lisp-Entry "Lua-Parser" () 45 7 ("File-Parser")
        {Lisp-Entry "parse" () 48 11 ("parse-definitions" "catalog" "Lua-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" () 52 11 ("get-output" "length" "0" "naturals" "put" "when" "find-function" "fn" "n" "line" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "Function" () 69 12 ()}
        {Lisp-Entry "find-function" () 73 11 ("subseq" "Lua-Function-Entry" "new" "cpp/java-constituent?" "skip" ">" "+" "start" "let*" "start:" "Function" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}}}})
"Lua-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "lua" "Lua-Syntax.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.lua.lua.Lua-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "Lua-Syntax" () 45 7 ("Text-Syntax")
        {Lisp-Entry "get-constituent-test" () 53 11 ("cpp/java-constituent?")}}}})
"Lua-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "lua" "Lua-Text-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.lua.lua.Lua-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Lua-Text-Preferences" () 49 7 ("completions:" "Dark-Blue" "keyword-color:" "definition-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "line-comment-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "definition-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "keyword-color" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "keywords" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "completions" () 57 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 80 11 ("keyword-color" "definition-color" "line-comment-color" "title-color" "completions" "keywords")}
        {Lisp-Entry "property-presentation" () 86 16 ("nextmethod" "else" "completions" "keywords" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 98 11 ("nextmethod" "else" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}}}})
"Lua-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "lua" "Lua-Text-View.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.lua.lua.Lua-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Lua-Text-View" () 46 7 ("Code-Text-View")
        {Lisp-Entry "install" () 49 11 ("get-keyword-color" "Keyword" "get-definition-color" "Definition" "get-line-comment-color" "Line-Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 59 16 ("lua-text" "rest")}
        {Lisp-Entry "preferences" () 63 11 ("lua-text" "documents" "get-preferences")}
        {Lisp-Entry "frame-workspaces" () 72 11 ("text")}
        {Lisp-Entry "favorite-completions" () 81 11 ("preferences" "get-completions")}
        {Lisp-Entry "commented?" () 85 11 ("Line-Comment" "Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "return-press" () 97 11 ("tabulate" "nextmethod" "key")}
        {Lisp-Entry "explorer-class" () 107 11 ("Lua-Explorer")}
        {Lisp-Entry "get-context" () 116 11 ("cpp/java")}
        {Lisp-Entry "current-name" () 120 11 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" () 124 11 ("read-string-element" "element" "=" "if" "0" "length" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" () 133 11 ("current-name")}
        {Lisp-Entry "current-expr-range" () 137 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 143 11 ("get-range" "outer-expr" "end:" "start:" "self" "Lua-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" () 149 11 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" () 158 12 ("list")}
        {Lisp-Entry "get-headers" () 163 11 ("headers")}
        {Lisp-Entry "get-first-special?" () 167 11 ("false")}
        {Lisp-Entry "Definitions" () 176 12 ()}
        {Lisp-Entry "get-definitions" () 180 11 ("Definitions")}
        {Lisp-Entry "Keywords" () 189 12 ()}
        {Lisp-Entry "get-keywords" () 204 29 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" () 213 14 ()}
        {Lisp-Entry "Syntax-Automata" () 216 14 ()}
        {Lisp-Entry "syntax-targets" () 220 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 226 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 232 11 ("get-keywords" "keyword" "get-definitions" "definition" "str" "dynamic" "function" "map" "false" "line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" () 238 11 ("cpp/java-constituent?" "self" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" () 242 11 ("Keyword" "keyword" "Definition" "colorize-keyword" "definition" "Title" "Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}}})
"MSDN"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "MSDN.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.MSDN" () 37 9 ("jazz")
      {Lisp-Entry "MSDN" () 44 7 ("External-Tool")
        {Lisp-Entry "MSDN-Class" () 48 19 ()}
        {Lisp-Entry "toplevel-class" () 53 16 ("MSDN-Class")}}}})
"MSHTML"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "com" "MSHTML.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "MSHTML" () 37 9 ("jazz")}})
"MSMAPI"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "MSMAPI.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "MSMAPI" () 37 9 ("jazz")}})
"MSXML2"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "com" "MSXML2.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "MSXML2" () 37 9 ("jazz")}})
"Macro-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Macro-Declaration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.language.declaration.Macro-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Macro-Declaration" () 40 7 ("Declaration")}}})
"Macro-Form"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Macro-Form.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Macro-Form" () 37 9 ("jazz")
      {Lisp-Entry "Macro-Form" () 40 7 ("Form-Binding")
        {Lisp-Entry "expander" () 43 8 ("generate")}}}})
"Macro-Recorder"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "recorder" "Macro-Recorder.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.recorder.Macro-Recorder" () 37 9 ("jazz")
      {Lisp-Entry "Recording?" () 48 19 ("false")}
      {Lisp-Entry "Recording-Playing?" () 51 19 ("false")}
      {Lisp-Entry "Recording-Factory" () 54 19 ("List-Factory" "new")}
      {Lisp-Entry "Registered-Recordings" () 57 19 ("eqv?" "new-hashtable")}
      {Lisp-Entry "Active-Recording" () 60 19 ()}
      {Lisp-Entry "Macro-Recorder" () 64 7 ("Object")
        {Lisp-Entry "on-start-recording" () 72 11 ("List-Factory" "new" "Recording-Factory" "true" "set!" "user-message" "Recording?" "not" "when" "evt")}
        {Lisp-Entry "on-stop-recording" () 79 11 ("Active-Recording" "get-output" "coalesce-actions" "Recording-Factory" "false" "set!" "user-message" "Recording?" "when" "evt")}
        {Lisp-Entry "on-continue-recording" () 87 11 ("true" "set!" "user-message" "Recording?" "not" "when" "evt")}
        {Lisp-Entry "on-play-recording" () 93 11 ("error" "get-recording" "play-recording" "play-current-recording" "null?" "no:" "get-property" "no" "let" "user-message" "begin" "Recording?" "not" "if" "evt")}
        {Lisp-Entry "on-output-recording" () 105 11 ("output-recording" "bell" "null?" "if" "Recording-Factory" "get-output" "actions" "let" "evt")}
        {Lisp-Entry "on-present-recording" () 112 11 ("present-recording" "bell" "null?" "if" "Recording-Factory" "get-output" "actions" "let" "evt")}
        {Lisp-Entry "on-register-recording" () 119 11 ("user-message" "register-recording" "Recording-Factory" "get-output" "recording" "6" "1" "between?" "assert" "initial-value:" ":prefix" "title:" "request-string" "parse-integer" "no" "let" "evt")}
        {Lisp-Entry "on-set-active-recording" () 127 11 ("get-recording" "user-message" "Active-Recording" "set!" "begin" "null?" "if" "title:" "request-string" "read-string-element" "name" "let" "evt")}
        {Lisp-Entry "coalesce-actions" () 138 11 ("append" "null?" "String" "coerce" "added" "key:" "get-property" "char" "on-key-press" "get-action/method-name" "get-target-name" "=" "and" "if" "action/handler" "bind" "action" "for-each" "set!" "cons" "put" "content:" "self" ":string" "Event" "event" "on-insert" ":focus" "Event-Handler" "handler" "let" "when" "dynamic" "function" "coalesce" "string" "List-Factory" "new" "fact" "let*" "actions")}
        {Lisp-Entry "present-recording" () 164 11 ("title:" "get-output" "message-box" "get-action/method-name" "not" "format" "event" "action/handler" "bind" "do" "false" "then" "true" "first" "first?" "in" "action" "for" "loop" "car" "get-target-name" "map" "remove-duplicates" "targets" "String-Printer" "new" "printer" "get-focus" "focus" "let*" "actions")}
        {Lisp-Entry "output-recording" () 180 11 ("tabulate" ":reader" "->string" "insert-string" "insert-newline" "unless" "do" "in" "action" "false" "then" "true" "first" "first?" "for" "loop" "insert-char" "dynamic" "function" "get-undoer" "with-atomic-undo" "bell" "Text-View" "is-not?" "if" "get-focus" "text" "let" "actions")}
        {Lisp-Entry "target-name" () 197 11 ("keyword->symbol" "appl" ":application" "=" "if" "target")}
        {Lisp-Entry "get-target-name" () 212 11 ("else" "get-target-name" "Action" "typecase" "action/handler")}
        {Lisp-Entry "get-action/method-name" () 218 11 ("get-method-name" "else" "get-action-name" "Action" "typecase" "action/handler")}
        {Lisp-Entry "record" () 233 18 ("cons" "Recording-Factory" "put" ":recorder" "get-target-name" "=" "unless" "event" "action/handler")}
        {Lisp-Entry "register-recording" () 238 18 ("Registered-Recordings" "hash-set!" "recording" "name")}
        {Lisp-Entry "get-recording" () 242 18 ("error" "Registered-Recordings" "hash-ref" "either" "name")}
        {Lisp-Entry "play-current-recording" () 252 18 ("get-recording" "Recording-Factory" "get-output" "play-recording" "unless" "get-application" "get-user" "user" "let" "Active-Recording" "not" "if")}
        {Lisp-Entry "play-recording" () 260 18 ("play-action" "for-each" "dynamic" "function" "get-undoer" "with-atomic-undo" "Text-View" "is?" "if" "get-focus" "focus" "true" "set!" "begin" "unwind-protect" "Recording-Playing?" "old" "let" "recording")}
        {Lisp-Entry "play-action" () 274 18 ("invoke" "get-focus" "target" "let" "else" "event:" "call-action" "Action" "typecase" "event" "action/handler" "bind" "action")}
        {Lisp-Entry "find-target" () 284 18 ("get-process" "process-alias" "target")}}}})
"Macro-Symbol"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Macro-Symbol.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Macro-Symbol" () 37 9 ("jazz")
      {Lisp-Entry "Macro-Symbol" () 40 7 ("Symbol-Binding")
        {Lisp-Entry "getter" () 43 8 ("generate")}
        {Lisp-Entry "setter" () 44 8 ("generate")}}}})
"Manager-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "designer" "Manager-Actions.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.designer.Manager-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Manager-Actions" () 47 7 ("on-save" "save" "on-open" "open" ":shift" ":control" "Shortcut" "shortcut:" "on-new" ":frame" "Event-Handler" "action-handler:" "new" "name:" "Actions")}}})
"Manager-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "designer" "Manager-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.designer.Manager-View" () 37 9 ("jazz")
      {Lisp-Entry "Manager-View" () 46 7 ("card" "card-border" "card-contour" "right" "descendant" "on-tab-press" "tab-press-handler:" "descendants" "descendants-border" "on-splitter-move" "move-handler:" "horz" "orientation:" "3" "left" "width:" "branch" "branches" "header" "fill" "content" "flat?:" "vscroll?:" "hscroll?:" "document" "scroller" "entry" "style:" "edge" "border-type:" "1" "Point" "position:" "branches-border" "center" "on-edit-form" "edit-form" "end-undo-group" "on-redo" "redo" "on-undo" "undo" "end-open-group" "on-save" "save" "on-open" "open" "on-new" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "new" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "toolbar" "name:" "border" "layout-type:" "Dimension" "size:" "Editor-View")
        {Lisp-Entry "frame-icon" () 88 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-position" () 93 16 ("Point")}
        {Lisp-Entry "frame-size" () 98 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 102 11 ("home")}
        {Lisp-Entry "new-controller" () 111 11 ("self" "Manager-View-Controller" "new")}
        {Lisp-Entry "Manager-View-Controller" () 115 9 ("Editor-View-Controller")
          {Lisp-Entry "name-status" () 118 13 ("document" "editor-title")}}
        {Lisp-Entry "install" () 127 11 ("card" "descendants" "self" "branches" "locate" "set-editor" "nextmethod" "rest")}
        {Lisp-Entry "guest-actions" () 139 11 ("nextmethod" "manager" "find-actions" "cons")}
        {Lisp-Entry "size-change" () 149 11 ("get-height" "get-width" "Dimension" "new" "set-size" "when" "locate-component" "toolbar" "let" "nextmethod" "size")}
        {Lisp-Entry "resize-center" () 156 29 ("card-contour" "right" "0" "descendants-border" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-splitter-move" () 162 18 ("update-view" "card-contour" "right" "-" "descendants-border" "move-figure" "0" "branches-border" "locate" "size-figure" "left" "get-name" "case" ":delta" "get-property" "delta" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-new" () 179 11 ("new-form" "evt")}
        {Lisp-Entry "on-open" () 183 11 ("open-form" "evt")}
        {Lisp-Entry "on-edit-form" () 187 11 ("edit-form" "evt")}
        {Lisp-Entry "on-tab-press" () 191 11 ("get-row" "auto-select" "when" "get-single-selection" "rank" "acquire-focus" "card" "locate" "get-tree" "tree" "let" "evt")}
        {Lisp-Entry "install-current-designer" () 204 11 ("editor-title" "set-title" "nextmethod" "form" "component")}
        {Lisp-Entry "Center-View" () 214 9 ("View")
          {Lisp-Entry "resize" () 217 13 ("resize-center" "nextmethod" "dv" "dh")}}}}})
"Mandelbrot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.tutorials" "lib" "mandelbrot" "jazz" "Mandelbrot.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.utilities.mandelbrot" () 37 9 ()}
    {Lisp-Entry "Mandelbrot" () 40 7 ("View")
      {Lisp-Entry "iterations" () 43 12 ("generate" "accessors")}
      {Lisp-Entry "ch" () 46 8 ()}
      {Lisp-Entry "cv" () 47 8 ()}
      {Lisp-Entry "scale" () 48 8 ()}
      {Lisp-Entry "c" () 49 8 ()}
      {Lisp-Entry "n" () 50 8 ()}
      {Lisp-Entry "pixels" () 51 8 ("List-Factory" "new")}
      {Lisp-Entry "frame-title" () 60 16 ()}
      {Lisp-Entry "frame-position" () 65 16 ("Point")}
      {Lisp-Entry "frame-size" () 70 16 ("Dimension")}
      {Lisp-Entry "setup-coordinates" () 79 11 ("scale~self" "cv~self" "ch~self" "set!" "5" "min" "-" "scale" "cv" "2" "/" "ch" "get-height" "height" "get-width" "width" "let*")}
      {Lisp-Entry "complex->view" () 90 11 ("cv" "scale" "*" "ch" "+" "floor" "Point" "new" "i" "r")}
      {Lisp-Entry "view->complex" () 94 11 ("Complex" "new" "cv" "i" "scale" "ch" "-" "/" "r" "let" "rest" "v" "h")}
      {Lisp-Entry "iterate" () 105 11 ("close" "Pixel-Radius" "to" "radius" "draw-pixel" "pixels" "put" "true" "iteration-color" "complex->view" "Pixel" "set!" "begin" "2" ">" "if" "norm" "sleep" "get-i" "get-r" "line" "not" "when" "c" "*" "+" "next" "unless" "do" "iterations" "below" "from" "n" "for" "loop" "false" "outside?" "pixel" "0" "Complex" "z" "Dark-Red" "name:" "Color" "color:" "Pen" "set-pen" "self" "View-DC" "new" "dc" "let" "dragging?")}
      {Lisp-Entry "change-iterations" () 136 11 ("parse-integer" "set!" "iterations" "->string" "initial-value:" ":prefix" "title:" "request-string" "new-iterations" "let")}
      {Lisp-Entry "size-change" () 146 11 ("recalculate-pixel-positions" "setup-coordinates" "nextmethod" "size")}
      {Lisp-Entry "recalculate-pixel-positions" () 152 11 ("pixels" "get-output" "get-i" "get-r" "complex->view" "set-pos" "get-c" "c" "let" "pixel" "dynamic" "function" "for-each")}
      {Lisp-Entry "Colors" () 164 14 ("Purple" "Red" "Orange" "Yellow" "Green" "Blue" "name:" "Color")}
      {Lisp-Entry "Background-Color" () 172 14 ("Dark-Gray" "name:" "Color")}
      {Lisp-Entry "Radius-Color" () 175 14 ("Gray" "name:" "Color")}
      {Lisp-Entry "Pixel-Radius" () 178 14 ()}
      {Lisp-Entry "Draw-Outside?" () 181 14 ("true")}
      {Lisp-Entry "draw" () 185 11 ("pixels" "get-output" "draw-pixel" "pixel" "dynamic" "function" "for-each" "Radius-Color" "get-v" "get-h" "Rect" "new" "ellipse" "rb" "complex->view" "lt" "let" "2" "0" "line" "White" "name:" "Pen" "set-pen" "Background-Color" "fill-rect" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}
      {Lisp-Entry "draw-pixel" () 199 11 ("+" "get-v" "get-h" "-" "Rect" "new" "ellipse" "Draw-Outside?" "when" "get-color" "color" "get-pos" "pos" "let" "Pixel-Radius" "radius" "pixel" "dc")}
      {Lisp-Entry "iteration-color" () 206 11 ("length" "modulo" "Colors" "element" "Black" "name:" "Color" "null?" "if" "n")}
      {Lisp-Entry "line" () 212 11 ("get-v" "get-h" "line" "dst" "complex->view" "src" "let" "di" "dr" "i" "r" "dc")}
      {Lisp-Entry "mouse-down" () 223 11 ("redraw-view" "false" "iterate" "0" "n~self" "c~self" "set!" "get-v" "get-h" "view->complex" "c" "let" "acquire-focus" "pos")}
      {Lisp-Entry "drag-move" () 232 11 ("true" "iterate" "0" "n~self" "c~self" "set!" "get-v" "get-h" "view->complex" "c" "let" "pos")}
      {Lisp-Entry "mouse-up" () 239 11 ("redraw-view" "pos")}
      {Lisp-Entry "key-press" () 248 11 ("change-iterations" "clear" "case" "char")}
      {Lisp-Entry "clear" () 254 11 ("redraw-view" "pixels" "reset")}
      {Lisp-Entry "Pixel" () 264 9 ("Object")
        {Lisp-Entry "c" () 267 10 ()}
        {Lisp-Entry "pos" () 268 10 ()}
        {Lisp-Entry "iter" () 269 10 ()}
        {Lisp-Entry "color" () 270 10 ()}
        {Lisp-Entry "initialize" () 273 13 ("color~self" "iter~self" "pos~self" "c~self" "set!" "nextmethod" "color" "iter" "pos" "c")}}}})
"Map-Iterator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Map-Iterator.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.iterator.Map-Iterator" () 37 9 ("jazz")
      {Lisp-Entry "Map-Iterator" () 44 7 ("JzMapGetValue" "JzMapGetKey" "int" "JzMapNextEntry" "Map" "JzMapFirstEntry" "Iterator")
        {Lisp-Entry "int" () 47 17 ()}
        {Lisp-Entry "int" () 48 17 ()}
        {Lisp-Entry "Object" () 49 17 ()}
        {Lisp-Entry "Object" () 50 17 ()}
        {Lisp-Entry "map-table" () 53 8 ()}
        {Lisp-Entry "current" () 54 8 ()}
        {Lisp-Entry "initialize" () 57 11 ("JzMapFirstEntry" "current" "map-table" "set!" "nextmethod" "m")}
        {Lisp-Entry "peek" () 63 11 ("current" "map-table" "JzMapGetValue")}
        {Lisp-Entry "peek-key" () 67 18 ("current" "map-table" "JzMapGetKey")}
        {Lisp-Entry "next" () 71 11 ("map-table" "JzMapNextEntry" "current" "set!")}
        {Lisp-Entry "done?" () 75 11 ("current" "=")}}}})
"Map-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Map-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Map-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Map-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-map" "invoke")}
        {Lisp-Entry "test-map" () 61 11 ()}}}})
"Mapi-Messages"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "Mapi-Messages.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.internet.Mapi-Messages" () 37 9 ("jazz")
      {Lisp-Entry "Mapi-Messages" () 44 7 ("WinBase" "WinDef" "COM" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "get-handle" "get-SessionID" "put-SessionID" "MSMAPI.MAPIMessages" "cocreate" "handle" "set!" "nextmethod" "session")}
        {Lisp-Entry "Send-Was-Cancelled" () 57 12 ()}
        {Lisp-Entry "send-email" () 61 11 ("false" "Send-Was-Cancelled" "true" "prompt?" "Send" "begin" "cotry" "parse" "put-AttachmentPathName" "put-AttachmentIndex" "MSMAPI.mapData" "put-AttachmentType" "attachment" "when" "body" "put-MsgNoteText" "subject" "put-MsgSubject" "put-RecipDisplayName" "0" "put-RecipIndex" "handle" "Compose" "recipient" "recipient:")}
        {Lisp-Entry "destroy" () 81 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 91 18 ("handle")}}}})
"Mapi-Session"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "Mapi-Session.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.internet.Mapi-Session" () 37 9 ("jazz")
      {Lisp-Entry "Mapi-Session" () 44 7 ("WinBase" "WinDef" "COM" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "setup-session" "MSMAPI.MAPISession" "cocreate" "handle" "set!" "nextmethod")}
        {Lisp-Entry "setup-session" () 57 11 ("SignOn" "false" "handle" "put-DownLoadMail")}
        {Lisp-Entry "destroy" () 62 11 ("nextmethod" "corelease" "handle" "SignOff")}
        {Lisp-Entry "get-handle" () 73 18 ("handle")}}}})
"Matches-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Matches-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Matches-Row" () 37 9 ("jazz")
      {Lisp-Entry "Matches-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 48 13 ("format" "null?" "if" "matches")}
        {Lisp-Entry "get-edited-value" () 54 13 ("split" "map" "trim-spaces" "dynamic" "function" "clean" "=" "if" "editor" "get-string-content" "string" "let")}}}})
"Memo-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Memo-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Memo-Row" () 37 9 ("jazz")
      {Lisp-Entry "Memo-Row" () 45 7 ("Combo-Row")
        {Lisp-Entry "initialize" () 53 11 ("choose" "set-kind" "nextmethod" "apply" "rest")}
        {Lisp-Entry "present" () 63 11 ("format" "null?" "nullable?" "and" "if" "value")}
        {Lisp-Entry "combo-choose" () 74 11 ("true" "focus-editor" "enter-edited-value" "set-edited-value" "get-edited-value" ":initial-text" "request-text" "text" "let")}
        {Lisp-Entry "get-edited-value" () 87 11 ("=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" () 94 11 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Memory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "tools" "Memory.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.tools.Memory" () 37 9 ("jazz")
      {Lisp-Entry "Memory" () 44 7 ("Object")
        {Lisp-Entry "report-timing" () 47 23 (":object128" ":object64" ":object32" ":object16" ":object12" ":object8" ":time" "list" ":console" "format" "c128" "c64" "c32" "c16" "c12" "c8" "time" "result" "bind" "proc")}
        {Lisp-Entry "describe-symbols" () 53 16 ("format" "printer" "info")}
        {Lisp-Entry "describe-objects" () 58 16 ("percentage" "increase!" "bytes-free" "bytes-used" "*" "bytes-alloc" "-" "used" "let*" "free" "alloc" "size" "nb-bags" "dynamic" "function" "for-each" "format" "bytes-free-total" "bytes-used-total" "bytes-alloc-total" "free-total" "used-total" "alloc-total" "0" "bags-total" "let" "zones" "bind" "printer" "info")}
        {Lisp-Entry "describe-heap" () 104 16 ("percentagepercentage" "+" "format" "-" "used" "let" "collector" "object" "virtual" "map" "hashtable" "vector" "string" "free" "alloc" "bind" "printer" "info")}
        {Lisp-Entry "describe-memory" () 125 23 ("describe-heap" "describe-objects" "describe-symbols" "statistics" "heap" "objects" "symbols" "bind" ":console" "printer")}}}})
"Memory-Block"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "Memory-Block.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.kernel.runtime.Memory-Block" () 37 9 ("jazz")
      {Lisp-Entry "Memory-Block" () 44 7 ("Windows" "Sequence")
        {Lisp-Entry "print" () 47 11 ("length" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-word-element" () 53 11 ("1" "+" "self" "element" "make-word" "2" "*" "index" "let" "offset")}
        {Lisp-Entry "get-int-element" () 59 11 ("3" "2" "1" "+" "self" "element" "make-word" "make-int" "4" "*" "index" "let" "offset")}}}})
"Memory-DC"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Memory-DC.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Memory-DC" () 37 9 ("jazz")
      {Lisp-Entry "Memory-DC" () 45 7 ("DC")
        {Lisp-Entry "size" () 48 8 ()}
        {Lisp-Entry "bitmap" () 49 8 ()}
        {Lisp-Entry "keep-bitmap?" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("destroy-mandatory" "bitmap" "select-object" "get-height" "height:" "get-width" "width:" ":dc" "Bitmap" "new" "when" "keep-bitmap?~self" "bitmap~self" "size~self" "set!" "NULL" "get-hdc" "if" "CreateCompatibleDC" "nextmethod" "false" "keep-bitmap?" "keep-bitmap?:" "true" "bitmap?" "bitmap?:" "size" "size:" "compatibility-dc")}
        {Lisp-Entry "destroy" () 64 11 ("nextmethod" "set!" "close" "keep-bitmap?" "not" "bitmap" "and" "when")}
        {Lisp-Entry "get-size" () 76 11 ("size")}
        {Lisp-Entry "get-bitmap" () 80 18 ("bitmap")}}}})
"Memory-Inspector"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "Memory-Inspector.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debuggee.Memory-Inspector" () 37 9 ("jazz")
      {Lisp-Entry "Memory-Inspector" () 49 7 ("user-objects" "gdi-objects" "virtual-space" "string-space" "gc-triggers" "gc-undestroyed" "gc-marked" "gc-phase" "collector-stack" "data-stack" "system-stack" "Default-GUI" "Font" "font:" "symbols" "memory" "tail" "justification:" "width:" "size" "filled-column:" "row" "selection-mode:" "zones" "fill" "layout-type:" "content" "flat?:" "document" "entry" "style:" "edge" "border-type:" "5" "zones-border" "default?:" "on-update" "form:" "Event-Handler" "action-handler:" "7" "Point" "position:" "title:" "update" "name:" "Dimension" "size:" "WinUser" "WinKernel" "WinDef" "System" "Utilities" "Runtime-Listener" "View")
        {Lisp-Entry "palette-title" () 93 16 ()}
        {Lisp-Entry "palette-position" () 98 16 ("Point")}
        {Lisp-Entry "palette-size" () 103 16 ("Dimension")}
        {Lisp-Entry "client-activate" () 107 11 ("update-memory")}
        {Lisp-Entry "finish" () 116 11 ("update-memory" "destroy-mandatory" "self" "Runtime" "get-runtime" "add-runtime-listener" "nextmethod" "initargs")}
        {Lisp-Entry "destroy" () 123 11 ("nextmethod" "self" "Runtime" "get-runtime" "remove-runtime-listener")}
        {Lisp-Entry "resize" () 133 11 ("memory" "zones-border" "size-figure" "0" "update" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-update" () 141 11 ("update-memory" "trigger-gc" "gc" "null?" "if" "selected-debuggee" "debuggee" "let" "get-shift?" "when" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-thread-added" () 152 11 ("evt")}
        {Lisp-Entry "on-thread-removed" () 156 11 ("evt")}
        {Lisp-Entry "on-gc-marking" () 160 11 ("update-collector" "evt")}
        {Lisp-Entry "on-gc-sweeping" () 164 11 ("update-collector" "evt")}
        {Lisp-Entry "on-gc-completed" () 168 11 ("update-collector" "evt")}
        {Lisp-Entry "on-zone-expanded" () 172 11 ("evt")}
        {Lisp-Entry "on-zone-shrinked" () 176 11 ("shrinking" "write" "evt")}
        {Lisp-Entry "selected-debuggee" () 185 11 ("get-selected-debuggee" "when" "get-local-debugger-server" "debugger" "get-application" "appl" "let*")}
        {Lisp-Entry "update-memory" () 197 24 ("view-extra" "view-heap" "unless" "view-zones" "heap" "zones" "symbols" "bind" "memory-statistics" "null?" "if" "statistics" "selected-debuggee" "debuggee" "let*" "false" "only-allocated-in-gc?" "only-allocated-in-gc?:")}
        {Lisp-Entry "view-zones" () 207 11 ("children:" "add-row" "->string" "format" "Tree-Label" "title:" "Tree-Node" "new" "list" "children" "not" "when" "lifetime" "trigger-count" "usage" "bytes-free" "bytes-allocated" "bytes-committed" "free" "allocated" "committed" "nb-bags" "size" "bind" "info" "for-each" "Performance" "objects-info" "remove-every-row" "unless" "dynamic" "function" "with-update-locked" "locate" "tree" "let" "only-allocated-in-gc?" "zones")}
        {Lisp-Entry "view-heap" () 234 11 ("virtual-space" "format" "string-space" "locate" "set-title" "collector" "object" "virtual" "map" "hashtable" "vector" "string" "bind" "heap")}
        {Lisp-Entry "view-extra" () 240 11 ("view-user-objects" "user-objects" "view-gdi-objects" "gdi-objects" "view-gc-triggers" "gc-triggers" "view-gc-undestroyed" "gc-undestroyed" "view-gc-marked" "gc-marked" "view-gc-phase" "gc-phase" "view-collector-stack" "collector-stack" "view-data-stack" "data-stack" "view-system-stack" "system-stack" "view-symbols" "symbols" "locate" "set-title")}
        {Lisp-Entry "view-symbols" () 254 11 ("-" "format" "symbols-statistics" "free" "allocated" "bind")}
        {Lisp-Entry "view-system-stack" () 262 11 ("system-stack-info" "format")}
        {Lisp-Entry "view-data-stack" () 266 11 ("data-stack-info" "format")}
        {Lisp-Entry "view-collector-stack" () 270 11 ("format" "gc-statistics" "roots" "size" "bind")}
        {Lisp-Entry "GC-Phases" () 276 12 ("2" "1" "0")}
        {Lisp-Entry "view-gc-phase" () 282 11 ("GC-Phases" "assq" "cadr" "format" "gc-info" "phase" "bind")}
        {Lisp-Entry "view-gc-undestroyed" () 287 11 ("format" "gc-undestroyed-count" "undestroyed" "let")}
        {Lisp-Entry "view-gc-triggers" () 292 11 ("format" "gc-triggers" "triggers" "let")}
        {Lisp-Entry "view-gdi-objects" () 297 11 ("GR_GDIOBJECTS" "GetCurrentProcess" "GetGuiResources" "0" "5" "Version" "get-windows-version" ">=" "if" "format")}
        {Lisp-Entry "view-user-objects" () 301 11 ("GR_USEROBJECTS" "GetCurrentProcess" "GetGuiResources" "0" "5" "Version" "get-windows-version" ">=" "if" "format")}
        {Lisp-Entry "update-collector" () 310 11 ("view-gc-phase" "gc-phase" "locate" "set-title" "true" ":only-allocated-in-gc?" "update-memory" "0" "=" "when" "gc-info" "phase" "bind")}}}})
"Memory-Monitor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "tools" "Memory-Monitor.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.tools.Memory-Monitor" () 37 9 ("jazz")
      {Lisp-Entry "Memory-Monitor" () 45 7 ("Dimension" "size:" "0" "Point" "position:" "title:" "Palette")
        {Lisp-Entry "install" () 52 11 ("get-desktop" "get-width" "Dimension" "set-size" "get-height" "get-v" "+" "0" "Point" "new" "set-position" "get-size" "size" "get-position" "pos" "get-stage" "stage" "let*" "nextmethod" "rest")}
        {Lisp-Entry "on-draw" () 67 11 ("draw-zones" "draw-border" "get-dc" "dc" "let" "evt")}
        {Lisp-Entry "draw-border" () 73 11 ("White" "line-to" "move-to" "Dark" "name:" "Pen" "set-pen" "1" "get-bottom" "-" "bottom" "get-right" "right" "top" "0" "left" "get-client-rect" "rect" "let*" "dc")}
        {Lisp-Entry "draw-zones" () 88 11 ("increase!" "Dark" "+" "free" "alloc" "nb-bags" "info" "dynamic" "function" "for-each" "Medium" "name:" "Color" "Rect" "new" "fill-rect" "0" "h" "get-width" "/" "round" "width" "length" "nb-zones" "zones" "statistics" "heap" "objects" "symbols" "bind" "get-height" "height" "get-size" "size" "let*" "dc")}}}})
"Memory-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Memory-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Memory-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Memory-Snapshot" () 45 7 ("Component")
        {Lisp-Entry "symbols" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "strings" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "vectors" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "maps" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "virtuals" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "objects" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "collector" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "zones" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 59 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" () 63 11 ("zones" ":zones" "collector" ":collector" "objects" ":objects" "virtuals" ":virtuals" "maps" ":maps" "vectors" ":vectors" "strings" ":strings" "symbols" ":symbols" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Menu.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.menu.Menu" () 37 9 ("jazz")
      {Lisp-Entry "Menu" () 46 7 ("visible?:" "View")
        {Lisp-Entry "poped" () 49 8 ()}
        {Lisp-Entry "locked?" () 50 8 ("false")}
        {Lisp-Entry "conclude" () 62 11 ("layout-menu" "nextmethod" "rest")}
        {Lisp-Entry "get-poped" () 72 18 ("poped")}
        {Lisp-Entry "set-poped" () 76 18 ("set!" "invalidate-view" "popup-initiator" "initiator" "let" "poped" "when" "menu")}
        {Lisp-Entry "invalidate-update" () 89 11 ("layout-menu")}
        {Lisp-Entry "update" () 93 26 ()}
        {Lisp-Entry "layout-menu" () 102 26 ("2" "increase!" "set-arrow-width" "set-accelerator-width" "set-body-width" "set-icon-width" "set-prefix-width" "Dimension" "set-size" "Point" "new" "set-position" "preferred-height" "height" "view" "dynamic" "function" "for-each-view" "1" "v" "+" "width" "let" "collect-maximums" "arrow" "accelerator" "body" "icon" "prefix" "receive" "get-finished?" "when")}
        {Lisp-Entry "collect-maximums" () 121 11 ("values" "set!" ">" "when" "preferred-arrow-width" "arrow" "preferred-accelerator-width" "accelerator" "preferred-body-width" "body" "preferred-icon-width" "icon" "preferred-prefix-width" "prefix" "view" "dynamic" "function" "for-each-view" "arrow-max" "accelerator-max" "body-max" "icon-max" "0" "prefix-max" "let")}
        {Lisp-Entry "cleanup-separators" () 147 18 ("set!" "when" "false" "set-visible?" "if" "and" "consecutive?" "Separator-Item" "is?" "separator?" "let*" "for-each" "kept-separator" "true" "previous-separator?" "children" "get-visible?" "item" "dynamic" "function" "collect-if" "visibles" "let")}}}})
"Menu-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "designer" "Menu-Editor.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.designer.Menu-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Menu-Editor" () 44 7 ("View-Editor")
        {Lisp-Entry "frame-title" () 53 16 ()}
        {Lisp-Entry "frame-position" () 58 16 ("Point")}
        {Lisp-Entry "frame-size" () 63 16 ("Dimension")}}}})
"Menu-Transient"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Menu-Transient.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.window.Menu-Transient" () 37 9 ("jazz")
      {Lisp-Entry "Menu-Transient" () 45 7 ("Transient")}}})
"Menubar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Menubar.fusion"} {Time 128368663200000000L}
    {Lisp-Entry "jazz.ui.menu.Menubar" () 37 9 ("jazz")
      {Lisp-Entry "Menubar" () 51 7 ("on-close" "close" "on-restore" "restore" "on-minimize" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "type:" "minimize" "name:" "visible?:" "Dimension" "size:" "Menu")
        {Lisp-Entry "showing?" () 54 8 ("false")}
        {Lisp-Entry "host-activate" () 69 11 ("self" "set-menubar" "get-application" "appl" "let")}
        {Lisp-Entry "host-deactivate" () 74 11 ("set-menubar" "get-application" "appl" "let")}
        {Lisp-Entry "on-minimize" () 84 11 ("get-stage" "restore" "minimize" "current-frame" "frame" "let" "evt")}
        {Lisp-Entry "on-restore" () 90 11 ("get-stage" "restore" "evt")}
        {Lisp-Entry "on-close" () 94 11 ("0" "WM_CLOSE" "send-message" "current-frame" "frame" "let" "validate-focus" "evt")}
        {Lisp-Entry "maximize" () 105 18 ("show-buttons")}
        {Lisp-Entry "restore" () 109 18 ("hide-buttons")}
        {Lisp-Entry "update-buttons" () 113 18 ("hide-buttons" "show-buttons" "get-maximized?" "and" "if" "get-windows" "frames" "get-stage" "stage" "let*")}
        {Lisp-Entry "show-buttons" () 121 11 ("close" "restore" "true" "minimize" "locate" "set-visible?" "always-maximized?" "unless")}
        {Lisp-Entry "hide-buttons" () 128 11 ("close" "restore" "false" "minimize" "locate" "set-visible?")}
        {Lisp-Entry "always-maximized?" () 134 29 ("false")}
        {Lisp-Entry "minimize-rect" () 143 11 ("4" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "restore-rect" () 147 11 ("4" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "close-rect" () 151 11 ("3" "4" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "layout" () 160 11 ("close-rect" "close" "restore-rect" "restore" "minimize-rect" "minimize" "locate" "set-rect" "3" "get-right" "+" "right" "0" "top" "get-bounds" "bounds" "let*")}
        {Lisp-Entry "layout-menu" () 169 11 ("increase!" "-" "Dimension" "set-size" "preferred-body-width" "width" "2" "Point" "new" "set-position" "Item" "is?" "when" "view" "dynamic" "function" "for-each-view" "0" "h" "get-height" "height" "let")}}}})
"Message-Box"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Message-Box.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.dialog.Message-Box" () 37 9 ("Message-Text-View" "register-autoclass" "jazz")
      {Lisp-Entry "Message-Box" () 52 7 ("editable?:" "0" "top-padding:" "2" "left-padding:" "background:" "text" "fill" "layout-type:" "content" "flat?:" "vscroll?:" "hscroll?:" "scroller" "Dark" "Color" "border-color:" "border-type:" "border" "Point" "position:" "icon" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "type" () 55 8 ()}
        {Lisp-Entry "process-keys?" () 56 8 ()}
        {Lisp-Entry "user-content" () 57 8 ()}
        {Lisp-Entry "action-buttons" () 58 8 ()}
        {Lisp-Entry "default-button" () 59 8 ()}
        {Lisp-Entry "dialog-class" () 77 16 ("Message-Box-Dialog")}
        {Lisp-Entry "Message-Box-Dialog" () 82 14 ("Host-Dialog")
          {Lisp-Entry "show" () 85 13 ("text" "guest" "locate" "acquire-focus" "nextmethod")}}
        {Lisp-Entry "Type-Infos" () 95 14 ("custom" "IDI_ERROR" "error" "cancel" "confirmation" "no" "IDI_EXCLAMATION" "question" "yes" "true" "IDI_INFORMATION" "message" "list")}
        {Lisp-Entry "type-info" () 104 11 ("error" "cdr" "if" "Type-Infos" "assq" "info" "let" "type")}
        {Lisp-Entry "resize" () 116 11 ("action-buttons" "move-figure" "button" "dynamic" "function" "for-each" "user-content" "border" "locate" "size-figure" "2" "get-width" "resize-parts" "second-dh" "first-dh" "bind" "current-modal-dialog" "get-host" "eq?" "when" "nextmethod" "dv" "dh")}
        {Lisp-Entry "process-return" () 129 11 ("default-button" "end-modal-dialog" "get-host" "dialog" "let")}
        {Lisp-Entry "process-escape" () 134 11 ("end-modal-dialog" "get-host" "dialog" "let" "when" "type" "type-info" "close-result" "cancelable?" "default-cancel" "default-no" "default-yes" "default-sound" "default-icon" "default-title" "bind")}
        {Lisp-Entry "process-key" () 141 11 ("action-buttons" "for-each" "end-modal-dialog" "ci=" "0" "element" "either" "first" "get-title" "localize" "get-name" "result" "car" "not" "if" "accelerator-key" "let" "get-user-data" "optional" "name" "title" "bind" "get-visible?" "button" "dynamic" "function" "try-button" "get-host" "dialog" "let*" "return" "lambda" "call/ec" "process-keys?" "when" "key")}
        {Lisp-Entry "on-select" () 160 11 ("end-modal-dialog" ":button" "get-property" "button" "let" "evt")}
        {Lisp-Entry "process-box" () 170 18 ("process-modal" "play-sound" "layout-dialog" "selection" "layout-box" "size" "first" "default-button" "let*" "list" "cons" "second" "key:" "actions" "member?" "not" "and" "when" "cancel" "no" "yes" "default" "eq?" "if" "sound" "icon" "either" "title" "get-host" "dialog" "let" "content" "user-content~self" "process-keys?" "process-keys?~self" "type~self" "set!" "type" "type-info" "close-result" "cancelable?" "default-cancel" "default-no" "default-yes" "default-sound" "default-icon" "default-title" "bind" "text")}
        {Lisp-Entry "layout-dialog" () 207 11 ("set-size" "set-position" "set-title" "get-size" "center" "position" "get-desktop" "desktop" "let*" "size" "title" "dialog")}
        {Lisp-Entry "Left-Padding" () 220 14 ("2")}
        {Lisp-Entry "Top-Padding" () 223 14 ("0")}
        {Lisp-Entry "Content-Spacing" () 226 14 ()}
        {Lisp-Entry "Buttons-Spacing" () 229 14 ("6")}
        {Lisp-Entry "layout-box" () 233 29 ("action-buttons" "position-buttons" "v" "center" "h" "solid" "set-border-type" ">" "overflow?" "set-icon" "dialog-height" "dialog-width" "2" "get-height" "increase!" "get-width" "set!" "Content-Spacing" "get-left" "Point" "set-position" "self" "set-parent" "get-bottom" "bottom" "0" "if" "get-visible-height" "text-height" "compute-width" "max" "min" "let" "set-selection" "when" "set-text" "setup-buttons" "buttons-width" "Top-Padding" "Left-Padding" "1" "+" "Dimension" "new" "set-size" "height" "width" "dynamic" "function" "size-border" "border" "border-view" "scroller" "scroller-view" "text-view" "locate" "icon-view" "let*" "default" "actions" "content" "icon" "title" "selection" "text")}
        {Lisp-Entry "setup-buttons" () 269 11 ("default-button" "get-output" "action-buttons" "set!" "for-each" "put" "Buttons-Spacing" "/=" "when" "get-height" "set-size" "get-width" "max" "width" "preferred-size" "localize" "set-title" "=" "default?:" "action-handler:" "user-data:" "size:" "*" "Point" "position:" "self" "parent:" "name:" "Push-Button" "button" ":button" "list" "properties:" "on-select" "method-name:" ":guest" "target-name:" "Event-Handler" "handler" "increase!" "accelerator-key" "button-name" "title" "bind" "action" "dynamic" "function" "setup-button" "List-Factory" "fact" "count" "Dimension" "new" "size" "0" "buttons-width" "let*" "default" "actions")}
        {Lisp-Entry "position-buttons" () 294 11 ("for-each" "Buttons-Spacing" "get-width" "+" "set!" "Point" "new" "set-position" "get-visible?" "when" "button" "dynamic" "function" "position-button" "let" "v" "h" "action-buttons")}}
      {Lisp-Entry "Message-Text-View" () 308 7 ("Formatted-Text-View")
        {Lisp-Entry "get-context-menu" () 311 11 ("new-text-context-menu")}
        {Lisp-Entry "return-press" () 315 11 ("process-return" "key")}
        {Lisp-Entry "escape-press" () 320 11 ("process-escape" "key")}
        {Lisp-Entry "key-press" () 325 11 ("process-key" "key")}}}})
"Message-Consumer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "consumer" "Message-Consumer.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.consumer.Message-Consumer" () 37 9 ("jazz")
      {Lisp-Entry "Message-Consumer" () 43 11 ("Consumer")
        {Lisp-Entry "dispatch-message" () 46 35 ("lparam" "wparam" "msg")}}}})
"Message-Spy"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "spy" "Message-Spy.fusion"} {Time 128360669960000000L}
    {Lisp-Entry "jazz.jazz.spy.Message-Spy" () 37 9 ("prepare-symbolic-messages" "jazz")
      {Lisp-Entry "Message-Categories" () 54 19 ("unknown" "app" "user" "menu" "mdi" "focus" "clipboard" "keyboard" "mouse" "action" "paint" "window" "Bitmap-Resource" "general")}
      {Lisp-Entry "Symbolic-Messages" () 70 19 ("BM_SETIMAGE" "BM_GETIMAGE" "BM_CLICK" "BM_SETSTYLE" "BM_SETSTATE" "BM_GETSTATE" "BM_SETCHECK" "BM_GETCHECK" "WM_PENWINLAST" "WM_PENWINFIRST" "WM_AFXLAST" "WM_AFXFIRST" "WM_HANDHELDLAST" "WM_HANDHELDFIRST" "WM_PRINTCLIENT" "WM_PRINT" "WM_HOTKEY" "WM_PALETTECHANGED" "WM_PALETTEISCHANGING" "WM_QUERYNEWPALETTE" "WM_HSCROLLCLIPBOARD" "WM_CHANGECBCHAIN" "WM_ASKCBFORMATNAME" "WM_SIZECLIPBOARD" "WM_VSCROLLCLIPBOARD" "WM_PAINTCLIPBOARD" "WM_DRAWCLIPBOARD" "WM_DESTROYCLIPBOARD" "WM_RENDERALLFORMATS" "WM_RENDERFORMAT" "WM_UNDO" "WM_CLEAR" "WM_PASTE" "WM_COPY" "WM_CUT" "WM_MOUSELEAVE" "WM_MOUSEHOVER" "WM_IME_KEYUP" "WM_IME_KEYDOWN" "WM_IME_CHAR" "WM_IME_SELECT" "WM_IME_COMPOSITIONFULL" "WM_IME_CONTROL" "WM_IME_NOTIFY" "WM_IME_SETCONTEXT" "WM_MDIREFRESHMENU" "WM_DROPFILES" "WM_EXITSIZEMOVE" "WM_ENTERSIZEMOVE" "WM_MDISETMENU" "WM_MDIGETACTIVE" "WM_MDIICONARRANGE" "WM_MDICASCADE" "WM_MDITILE" "WM_MDIMAXIMIZE" "WM_MDINEXT" "WM_MDIRESTORE" "WM_MDIACTIVATE" "WM_MDIDESTROY" "WM_MDICREATE" "WM_DEVICECHANGE" "WM_POWERBROADCAST" "WM_MOVING" "WM_CAPTURECHANGED" "WM_SIZING" "WM_NEXTMENU" "WM_EXITMENULOOP" "WM_ENTERMENULOOP" "WM_PARENTNOTIFY" "WM_MOUSELAST" "WM_MOUSEWHEEL" "WM_MBUTTONDBLCLK" "WM_MBUTTONUP" "WM_MBUTTONDOWN" "WM_RBUTTONDBLCLK" "WM_RBUTTONUP" "WM_RBUTTONDOWN" "WM_LBUTTONDBLCLK" "WM_LBUTTONUP" "WM_LBUTTONDOWN" "WM_MOUSEMOVE" "WM_MOUSEFIRST" "WM_CTLCOLORSTATIC" "WM_CTLCOLORSCROLLBAR" "WM_CTLCOLORDLG" "WM_CTLCOLORBTN" "WM_CTLCOLORLISTBOX" "WM_CTLCOLOREDIT" "WM_CTLCOLORMSGBOX" "WM_ENTERIDLE" "WM_MENUCHAR" "WM_MENUSELECT" "WM_INITMENUPOPUP" "menu" "WM_INITMENU" "WM_VSCROLL" "WM_HSCROLL" "WM_TIMER" "WM_SYSCOMMAND" "WM_COMMAND" "WM_INITDIALOG" "WM_IME_KEYLAST" "WM_IME_COMPOSITION" "WM_IME_ENDCOMPOSITION" "WM_IME_STARTCOMPOSITION" "WM_KEYLAST" "WM_SYSDEADCHAR" "WM_SYSCHAR" "WM_SYSKEYUP" "WM_SYSKEYDOWN" "WM_DEADCHAR" "WM_CHAR" "WM_KEYUP" "WM_KEYDOWN" "keyboard" "WM_KEYFIRST" "WM_NCMBUTTONDBLCLK" "WM_NCMBUTTONUP" "WM_NCMBUTTONDOWN" "WM_NCRBUTTONDBLCLK" "WM_NCRBUTTONUP" "WM_NCRBUTTONDOWN" "WM_NCLBUTTONDBLCLK" "WM_NCLBUTTONUP" "WM_NCLBUTTONDOWN" "WM_NCMOUSEMOVE" "WM_SYNCPAINT" "WM_GETDLGCODE" "WM_NCACTIVATE" "WM_NCPAINT" "WM_NCHITTEST" "WM_NCCALCSIZE" "WM_NCDESTROY" "WM_NCCREATE" "WM_SETICON" "WM_GETICON" "WM_DISPLAYCHANGE" "WM_STYLECHANGED" "WM_STYLECHANGING" "WM_CONTEXTMENU" "WM_NOTIFYFORMAT" "WM_USERCHANGED" "WM_HELP" "WM_TCARD" "WM_INPUTLANGCHANGE" "WM_INPUTLANGCHANGEREQUEST" "action" "WM_NOTIFY" "WM_CANCELJOURNAL" "WM_COPYDATA" "WM_POWER" "WM_WINDOWPOSCHANGED" "WM_WINDOWPOSCHANGING" "WM_COMMNOTIFY" "WM_COMPACTING" "WM_GETOBJECT" "WM_COMPAREITEM" "WM_QUERYDRAGICON" "WM_GETHOTKEY" "WM_SETHOTKEY" "WM_GETFONT" "WM_SETFONT" "WM_CHARTOITEM" "WM_VKEYTOITEM" "WM_DELETEITEM" "WM_MEASUREITEM" "WM_DRAWITEM" "WM_SPOOLERSTATUS" "WM_NEXTDLGCTL" "WM_ICONERASEBKGND" "WM_PAINTICON" "WM_GETMINMAXINFO" "WM_QUEUESYNC" "mdi" "WM_CHILDACTIVATE" "WM_MOUSEACTIVATE" "mouse" "WM_SETCURSOR" "WM_CANCELMODE" "WM_TIMECHANGE" "WM_FONTCHANGE" "WM_ACTIVATEAPP" "WM_DEVMODECHANGE" "WM_WININICHANGE" "WM_SHOWWINDOW" "WM_ENDSESSION" "WM_SYSCOLORCHANGE" "WM_ERASEBKGND" "WM_QUERYOPEN" "WM_QUIT" "WM_QUERYENDSESSION" "WM_CLOSE" "WM_PAINT" "WM_GETTEXTLENGTH" "WM_GETTEXT" "focus" "WM_SETTEXT" "paint" "WM_SETREDRAW" "WM_ENABLE" "WM_KILLFOCUS" "WM_SETFOCUS" "WM_ACTIVATE" "WM_SIZE" "WM_MOVE" "WM_DESTROY" "window" "WM_CREATE" "general" "WM_NULL")}
      {Lisp-Entry "prepare-symbolic-messages" () 295 13 ("Symbolic-Messages" "list" "cdr" "set-cdr!" "WinCtrl" "WinUser" "either" "value" "first" "let*" "info" "for-each" "definition-value" "definition?" "when" "class-of" "category-field" "definition" "name" "package" "dynamic" "function" "try" "let")}
      {Lisp-Entry "Message-Spy" () 317 7 ("toplevel-controls?:" "width:" "title:" "tree" "tree-header" "content" "tree-scroller" "tree-border" "name:" "Spy-View")
        {Lisp-Entry "palette-title" () 340 16 ()}
        {Lisp-Entry "palette-position" () 345 16 ("Point")}
        {Lisp-Entry "palette-size" () 350 16 ("Dimension")}
        {Lisp-Entry "spy-domain" () 359 11 ("windows")}
        {Lisp-Entry "spy" () 363 11 ("self" "Spyer" "new" "set-message-consumer" "get-message-consumer" "old-consumer" "set!" "Message-Consumer" "is?" "when" "client")}
        {Lisp-Entry "unspy" () 369 11 ("old-consumer" "set-message-consumer" "Message-Consumer" "is?" "when" "client")}
        {Lisp-Entry "incoming-message" () 374 11 ("slowdown-quantum" "sleep" "slowdown?" "update-view" "ensure-at-end" "list" "children:" "add-row" "get-visible-count" "item" "5" "*" "format" "c3" "c2" "Tree-Label" "c1" "image:" "title:" "Tree-Node" "new" "c0" "present-general" "else" "present-windowpos-changed" "WM_WINDOWPOSCHANGED" "present-windowpos-changing" "WM_WINDOWPOSCHANGING" "present-style-changing" "WM_STYLECHANGING" "present-activate-app" "WM_ACTIVATEAPP" "present-print-client" "WM_PRINTCLIENT" "present-print" "WM_PRINT" "present-erase-background" "WM_ERASEBKGND" "present-ncpaint" "WM_NCPAINT" "present-paint" "WM_PAINT" "case" "parameters" "present-message" "first" "message" "Message-Categories" "assq" "cdr" "image" "get-tree" "tree" "all" "category" "eq?" "or" "when" "find-category" "second" "if" "cat" "third" "key:" "Symbolic-Messages" "find" "info" "let*" "lparam" "wparam" "msg" "window" "level")}
        {Lisp-Entry "incoming-result" () 406 11 ("invalidate-cell" "get-cell-data" "set-title" "2" "Cell" "new" "cell" "get-tree" "tree" "let" "0" "/=" "when" "result" "row" "level")}
        {Lisp-Entry "find-category" () 414 11 ("unknown" "else" "user" "WM_USER" "app" "WM_APP" ">=" "cond" "msg")}
        {Lisp-Entry "present-message" () 420 11 ("else" "WM_APP" "app" "WM_USER" "-" "format" "user" "case" "cat" "msg")}
        {Lisp-Entry "present-general" () 432 11 ("format" "lparam" "wparam" "window")}
        {Lisp-Entry "present-paint" () 436 11 ("get-update-rect" "format" "lparam" "wparam" "window")}
        {Lisp-Entry "present-ncpaint" () 440 11 ("format" "lparam" "wparam" "window")}
        {Lisp-Entry "present-erase-background" () 444 11 ("format" "lparam" "wparam" "window")}
        {Lisp-Entry "present-print" () 448 11 ("PRINTFLAG" "bits->symbolic" "format" "lparam" "wparam" "window")}
        {Lisp-Entry "present-print-client" () 452 11 ("PRINTFLAG" "bits->symbolic" "format" "lparam" "wparam" "window")}
        {Lisp-Entry "present-activate-app" () 456 11 ("format" "lparam" "wparam" "window")}
        {Lisp-Entry "present-style-changing" () 460 11 ("WINEXSTYLE" "styleNew" "WINSTYLE" "styleOld" "get" "bits->symbolic" "format" "GWL_STYLE" "=" "if" "STYLESTRUCT" "coerce" "rec" "let" "lparam" "wparam" "window")}
        {Lisp-Entry "present-windowpos-changing" () 471 11 ("WINDOWPOSSTYLE" "flags" "get" "bits->symbolic" "format" "WINDOWPOS" "coerce" "rec" "let" "lparam" "wparam" "window")}
        {Lisp-Entry "present-windowpos-changed" () 476 11 ("WINDOWPOSSTYLE" "flags" "get" "bits->symbolic" "format" "WINDOWPOS" "coerce" "rec" "let" "lparam" "wparam" "window")}}
      {Lisp-Entry "Spyer" () 486 7 ("Message-Consumer" "Object")
        {Lisp-Entry "level" () 489 8 ("0")}
        {Lisp-Entry "spy-window" () 490 8 ()}
        {Lisp-Entry "client" () 491 8 ()}
        {Lisp-Entry "initialize" () 494 11 ("client" "spy-window" "set!" "nextmethod" "clt" "wnd")}
        {Lisp-Entry "dispatch-message" () 500 11 ("incoming-result" "when" "decrease!" "dispatch-message" "result" "increase!" "client" "level" "spy-window" "incoming-message" "row" "let" "lparam" "wparam" "msg")}}}})
"Message-Window"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Message-Window.fusion"} {Time 128360916800000000L}
    {Lisp-Entry "jazz.ui.window.Message-Window" () 37 9 ("jazz")
      {Lisp-Entry "Message-Window" () 46 7 ("visible?:" "Window")
        {Lisp-Entry "default-parent" () 58 11 ()}
        {Lisp-Entry "window-parent" () 62 11 ()}
        {Lisp-Entry "window-style" () 67 11 ("0" "rest")}
        {Lisp-Entry "window-ex-style" () 72 11 ("0" "rest")}
        {Lisp-Entry "dispatch-message" () 82 11 ("nextmethod" "else" "object-address" "JZ_RECEIVE" "0" "address-object-unsafe" "JZ_SEND" "receive-post" "JZ_POST" "ecase" "lparam" "wparam" "msg")}}}})
"Method-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Method-Declaration.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.declaration.Method-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Method-Declaration" () 40 7 ("Field-Declaration")
        {Lisp-Entry "propagation" () 43 8 ("generate")}
        {Lisp-Entry "implementation" () 44 8 ("generate")}
        {Lisp-Entry "expansion" () 45 8 ("generate")}
        {Lisp-Entry "parameters" () 46 8 ("generate")}}}})
"Method-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Method-Doc.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.doc.doc.Method-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Method-Doc" () 45 7 ("Definition-Doc")
        {Lisp-Entry "parameters" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "print-catalog" () 56 11 ("doc" "parameters" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present" () 68 11 ("parameters" "name" "cons" "format")}
        {Lisp-Entry "present-text" () 77 11 ("package-name" "not" "get-children" "example" "dynamic" "function" "map" "examples" "null?" "if" "parameters" "cons" "->string" "Red-Ball" "Dark-Blue" "color:" "name" "form->node" "->jml" "paragraphs" "tag" "bind" "description" "when")}
        {Lisp-Entry "get-class-image" () 108 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 118 16 ("nextmethod" "else" "parameters" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 124 11 ("nextmethod" "else" "String-Row" "new" "parameters" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 130 11 ("parameters" "package-name")}}}})
"Method-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Method-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Method-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Method-Entry" () 45 7 ("Definition-Entry")
        {Lisp-Entry "parameters" () 48 8 ()}
        {Lisp-Entry "throws" () 49 8 ()}
        {Lisp-Entry "construct-literal" () 53 16 ("false" "self" "new" "references" "column" "line" "throws" "parameters" "type" "name" "modifiers" "context")}
        {Lisp-Entry "initialize" () 57 11 ("throws~self" "parameters~self" "set!" "nextmethod" "references" "definitions" "column" "line" "throws" "parameters" "literal?" "type" "name" "modifiers")}
        {Lisp-Entry "print-catalog" () 63 11 ("references" "column" "line" "throws" "parameters" "type" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "present-detailed" () 70 11 ("name" "format" "parameters" "null?" "if")}
        {Lisp-Entry "get-image" () 76 11 ("Bitmap-Resource")}
        {Lisp-Entry "get-parameters" () 85 18 ("parameters")}
        {Lisp-Entry "get-throws" () 89 11 ("throws")}}}})
"Module-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Module-Declaration.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.declaration.Module-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Module-Declaration" () 40 7 ("Declaration")}}})
"Module-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Module-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Module-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Module-Doc" () 45 7 ("Product-Doc")}}})
"Moniker-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "widget" "Moniker-Browser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.widget.Moniker-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Moniker-Browser" () 49 7 ("on-browse" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "Medium" "Color" "background:" "browse" "on-receive-files" "receive-files-handler:" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "top-padding:" "2" "left-padding:" "show-unfocused-selection?:" "accepts-returns?:" "text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "scroller" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "mode" () 52 12 ("set-mode" "get-mode" "open")}
        {Lisp-Entry "protocol" () 53 12 ("set-protocol" "get-protocol" "file")}
        {Lisp-Entry "parameters" () 54 12 ("set-parameters" "get-parameters")}
        {Lisp-Entry "display-logical?" () 55 12 ("set-display-logical?" "get-display-logical?")}
        {Lisp-Entry "anchors" () 56 12 ("set-anchors" "get-anchors")}
        {Lisp-Entry "read-only?" () 57 12 ("set-read-only?" "get-read-only?" "false")}
        {Lisp-Entry "on-browse" () 73 11 ("browse-moniker" "evt")}
        {Lisp-Entry "on-return-press" () 77 11 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "on-receive-files" () 82 11 ("bell" "set-moniker" "car" "is?" "1" "length" "=" "and" "protocol" "get-protocol-handler" "handler" ":receive-files" "Event" "new" "self" "invoke" "receive-files-handler" "if" ":files" "files" "position:" "get-property" "pos" "let" "evt")}
        {Lisp-Entry "get-mode" () 99 18 ("mode")}
        {Lisp-Entry "set-mode" () 103 18 ("save" "Bitmap-Resource" "set-image-name" "open" "case" "locate" "browse" "let" "mode" "set!" "value")}
        {Lisp-Entry "get-protocol" () 111 18 ("protocol")}
        {Lisp-Entry "set-protocol" () 115 18 ("protocol" "set!" "value")}
        {Lisp-Entry "get-parameters" () 119 18 ("parameters")}
        {Lisp-Entry "set-parameters" () 123 18 ("parameters" "set!" "value")}
        {Lisp-Entry "get-display-logical?" () 127 18 ("display-logical?")}
        {Lisp-Entry "set-display-logical?" () 131 18 ("display-logical?" "set!" "value")}
        {Lisp-Entry "get-anchors" () 135 18 ("anchors")}
        {Lisp-Entry "set-anchors" () 139 18 ("anchors" "set!" "value")}
        {Lisp-Entry "get-text" () 143 18 ("text" "locate")}
        {Lisp-Entry "inner?" () 152 11 ("children" "memq?" "view")}
        {Lisp-Entry "layout" () 161 11 ("browse-size" "browse-position" "browse" "scroller-size" "set-size" "scroller-position" "scroller" "locate" "set-position" "get-size" "size" "let")}
        {Lisp-Entry "scroller-position" () 169 11 ("0" "Point" "size")}
        {Lisp-Entry "scroller-size" () 173 11 ("get-width" "-" "Dimension" "new" "size")}
        {Lisp-Entry "browse-position" () 177 11 ("0" "get-width" "-" "Point" "new" "size")}
        {Lisp-Entry "browse-size" () 181 11 ("Dimension" "size")}
        {Lisp-Entry "browse-moniker" () 190 18 ("true" ":reposition?" "tail" ":force-horizontal" "ensure-displayed" "text-ending" "set-caret" "acquire-focus" "get-text" "text" "let" "set-moniker" "get-modal" "" "apply" "moniker" "parameters" "get-moniker" ":actual" "mode" "mode:" "augment" "arguments" "protocol" "get-protocol-handler" "handler" "let*")}
        {Lisp-Entry "get-moniker" () 206 18 ("else" "Pathname" "Directory-Group" "typecase" "moniker" "parse-protocol" "let*" "bind" "read-string-content" "content" "anchors" "anchors:" "new-moniker" "anchorize" "tokenise" "list" "protocol" "get-protocol-handler" "handler" "alias-displayed?" "not" "if" "empty-string?" "unless" "get-text" "get-string-content" "string" "let")}
        {Lisp-Entry "set-moniker" () 223 18 ("moniker-update" "when" "present-moniker" "null?" "if" "get-text" "set-string-content" "true" "update?" "update?:" "moniker")}
        {Lisp-Entry "moniker-update" () 229 29 ()}
        {Lisp-Entry "present-moniker" () 233 18 ("present" "class-of" "get-protocol" "format" "->string" "parse" "Pathname" "is?" "alias-displayed?" "not" "null?" "if" "moniker")}
        {Lisp-Entry "alias-displayed?" () 245 11 ("get-application" "display-aliases?" "display-logical?" "not" "if")}
        {Lisp-Entry "get-modified?" () 251 11 ("get-text" "get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" () 255 11 ("get-text" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "parse-protocol" () 264 11 ("error" "butlast" "string->symbol" "get-protocol-handler" "symbol->string" "last" "=" "symbol?" "and" "if" "object")}
        {Lisp-Entry "get-protocol-handler" () 271 11 ("cdr" "autoload" "error" "not" "if" "get-preferences" "get-protocols" "assq" "pair" "let" "protocol")}
        {Lisp-Entry "get-read-only?" () 283 18 ("read-only?")}
        {Lisp-Entry "set-read-only?" () 287 18 ("browse" "locate" "set-enabled?" "not" "get-text" "set-editable?" "read-only?" "set!" "value")}}
      {Lisp-Entry "Moniker-Text-View" () 298 7 ("IDE-Text-View")
        {Lisp-Entry "get-scroll-context" () 301 11 ("0" "cons")}}
      {Lisp-Entry "Moniker-Button" () 310 7 ("Push-Tool")
        {Lisp-Entry "light-pen" () 313 11 ("Light-Background" "name:" "Pen")}
        {Lisp-Entry "dark-pen" () 317 11 ("Dark" "name:" "Pen")}
        {Lisp-Entry "draw-inactive" () 321 11 ("Medium" "Light" "name:" "Color" "get-enabled?" "if" "frame-rect" "get-bounds" "bounds" "with" "dc")}
        {Lisp-Entry "draw-tool" () 326 11 ("draw-ellipsis" "context" "dc")}
        {Lisp-Entry "draw-ellipsis" () 330 11 ("enabled?" "get-v" "1" "get-h" "+" "draw-text" "Black" "name:" "Color" "set-text-color" "center" "justify" "pos" "get-text-extent" "extent" "title" "get-offset" "offset" "get-size" "size" "let*" "dc")}
        {Lisp-Entry "get-offset" () 340 11 ("0" "1" "choose" "pushed" "get-state" "memq?" "if")}}}})
"Moniker-Widget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "widget" "Moniker-Widget.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.widget.Moniker-Widget" () 37 9 ("jazz")
      {Lisp-Entry "Moniker-Widget" () 49 7 ("on-browse" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "browse" "on-receive-files" "receive-files-handler:" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "top-padding:" "2" "left-padding:" "show-unfocused-selection?:" "accepts-returns?:" "text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "scroller" "edge" "border-type:" "moniker-border" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "mode" () 52 12 ("set-mode" "get-mode" "open")}
        {Lisp-Entry "protocol" () 53 12 ("set-protocol" "get-protocol" "file")}
        {Lisp-Entry "parameters" () 54 12 ("set-parameters" "get-parameters")}
        {Lisp-Entry "display-logical?" () 55 12 ("set-display-logical?" "get-display-logical?")}
        {Lisp-Entry "display-protocol?" () 56 12 ("set-display-protocol?" "get-display-protocol?")}
        {Lisp-Entry "anchors" () 57 12 ("set-anchors" "get-anchors")}
        {Lisp-Entry "moniker-update-handler" () 58 12 ("set-moniker-update-handler" "get-moniker-update-handler")}
        {Lisp-Entry "on-browse" () 75 11 ("browse-moniker" "evt")}
        {Lisp-Entry "on-return-press" () 79 11 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "on-receive-files" () 84 11 ("bell" "set-moniker" "car" "is?" "1" "length" "=" "and" "protocol" "get-protocol-handler" "handler" ":receive-files" "Event" "new" "self" "invoke" "receive-files-handler" "if" ":files" "files" "position:" "get-property" "pos" "let" "evt")}
        {Lisp-Entry "get-mode" () 101 18 ("mode")}
        {Lisp-Entry "set-mode" () 105 18 ("save" "Bitmap-Resource" "set-image-name" "open" "case" "locate" "browse" "let" "mode" "set!" "value")}
        {Lisp-Entry "get-protocol" () 113 18 ("protocol")}
        {Lisp-Entry "set-protocol" () 117 18 ("protocol" "set!" "value")}
        {Lisp-Entry "get-parameters" () 121 18 ("parameters")}
        {Lisp-Entry "set-parameters" () 125 18 ("parameters" "set!" "value")}
        {Lisp-Entry "get-display-logical?" () 129 18 ("display-logical?")}
        {Lisp-Entry "set-display-logical?" () 133 18 ("display-logical?" "set!" "value")}
        {Lisp-Entry "get-display-protocol?" () 137 18 ("display-protocol?")}
        {Lisp-Entry "set-display-protocol?" () 141 18 ("display-protocol?" "set!" "value")}
        {Lisp-Entry "get-anchors" () 145 18 ("anchors")}
        {Lisp-Entry "set-anchors" () 149 18 ("anchors" "set!" "value")}
        {Lisp-Entry "get-moniker-update-handler" () 153 18 ("moniker-update-handler")}
        {Lisp-Entry "set-moniker-update-handler" () 157 18 ("moniker-update-handler" "set!" "value")}
        {Lisp-Entry "call-moniker-update" () 161 18 ("invoke" "self" ":update" "Event" "new" "event" "with" "moniker-update" "moniker-update-handler" "null?" "if")}
        {Lisp-Entry "get-text" () 168 18 ("text" "locate")}
        {Lisp-Entry "set-enabled?" () 177 11 ("invalidate-view" "browse" "text" "locate" "set-enabled?" "enabled?" "set!" "flag")}
        {Lisp-Entry "inner?" () 189 11 ("children" "memq?" "view")}
        {Lisp-Entry "layout" () 198 11 ("browse-size" "browse-position" "browse" "moniker-size" "set-size" "moniker-position" "moniker-border" "locate" "set-position" "get-size" "size" "let")}
        {Lisp-Entry "moniker-position" () 206 11 ("1" "0" "Point" "size")}
        {Lisp-Entry "moniker-size" () 210 11 ("get-width" "-" "Dimension" "new" "size")}
        {Lisp-Entry "browse-position" () 214 11 ("0" "get-width" "-" "Point" "new" "size")}
        {Lisp-Entry "browse-size" () 218 11 ("Dimension" "size")}
        {Lisp-Entry "browse-moniker" () 227 18 ("true" ":reposition?" "tail" ":force-horizontal" "ensure-displayed" "text-ending" "set-caret" "acquire-focus" "get-text" "text" "let" "set-moniker" "get-modal" "" "apply" "moniker" "parameters" "get-moniker" ":actual" "cons" "arguments" "SaveFile-Dialog" "save" "protocol" "get-protocol-handler" "open" "mode" "case" "handler" "let*")}
        {Lisp-Entry "get-moniker" () 243 18 ("Pathname" "is?" "moniker" "parse-content" "receive" "read-string-content" "content" "anchors" "anchors:" "new-moniker" "anchorize" "tokenise" "list" "protocol" "get-protocol-handler" "handler" "alias-displayed?" "not" "if" "empty-string?" "unless" "get-text" "get-string-content" "string" "let")}
        {Lisp-Entry "parse-content" () 258 11 ("parse-protocol" "list" "bind" "protocol" "get-protocol-handler" "values" "protocol-displayed?" "not" "if" "content")}
        {Lisp-Entry "set-moniker" () 265 18 ("call-moniker-update" "when" "present-moniker" "null?" "if" "get-text" "set-string-content" "true" "generate-event?" "generate-event?:" "moniker")}
        {Lisp-Entry "moniker-update" () 271 29 ()}
        {Lisp-Entry "present-moniker" () 275 11 ("class-of" "get-protocol" "format" "present" "protocol-displayed?" "parse" "alias-displayed?" "not" "if" "moniker")}
        {Lisp-Entry "alias-displayed?" () 285 11 ("get-application" "display-aliases?" "display-logical?" "not" "if")}
        {Lisp-Entry "protocol-displayed?" () 291 11 ("get-application" "display-protocol?" "not" "if")}
        {Lisp-Entry "get-modified?" () 297 11 ("get-text" "get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" () 301 11 ("get-text" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "parse-protocol" () 310 11 ("format" "message:" "Parse-Error" "new" "signal" "butlast" "string->symbol" "get-protocol-handler" "last" "=" "symbol?" "and" "if" "object")}
        {Lisp-Entry "get-protocol-handler" () 317 11 ("cdr" "autoload" "format" "message:" "Parse-Error" "new" "signal" "not" "if" "get-preferences" "get-protocols" "assq" "pair" "let" "else" "File" "file" "Directory" "dir" "case" "protocol")}
        {Lisp-Entry "validate-content" () 335 11 ("get-moniker" "throw-cancel" "focus-body" "yes:" "get-message" "message-box" "err" "Parse-Error" "catch")}
        {Lisp-Entry "focus-body" () 343 18 ("select-all" "acquire-focus" "get-text" "text" "let")}}
      {Lisp-Entry "Moniker-Text-View" () 354 7 ("IDE-Text-View")
        {Lisp-Entry "get-scroll-context" () 357 11 ("0" "cons")}}}})
"Mouse-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Mouse-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.event.Mouse-Event" () 37 9 ("jazz")
      {Lisp-Entry "Mouse-Event" () 44 7 ("Event")
        {Lisp-Entry "position" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("position" "set!" "nextmethod" "pos" "sender" "kind")}
        {Lisp-Entry "print" () 55 11 ("position" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-position" () 66 18 ("position")}
        {Lisp-Entry "get-h" () 70 18 ("position" "get-h")}
        {Lisp-Entry "get-v" () 74 18 ("position" "get-v")}}}})
"Multiplexer-Reporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "reporter" "Multiplexer-Reporter.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.reporter.Multiplexer-Reporter" () 37 9 ("jazz")
      {Lisp-Entry "Multiplexer-Reporter" () 44 7 ("Reporter" "Object")
        {Lisp-Entry "reporters" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("reporters~self" "set!" "nextmethod" "reporters")}
        {Lisp-Entry "main-reporter" () 55 11 ("reporters" "car")}
        {Lisp-Entry "section-title" () 59 11 ("reporters" "section-title" "reporter" "dynamic" "function" "for-each" "title")}
        {Lisp-Entry "set-message" () 65 11 ("reporters" "set-message" "reporter" "dynamic" "function" "for-each" "msg")}
        {Lisp-Entry "user-message" () 71 11 ("reporters" "user-message" "" "apply" "reporter" "dynamic" "function" "for-each" "rest" "fmt")}
        {Lisp-Entry "set-range" () 77 11 ("reporters" "set-range" "reporter" "dynamic" "function" "for-each" "range")}
        {Lisp-Entry "set-pos" () 83 11 ("reporters" "set-pos" "reporter" "dynamic" "function" "for-each" "pos")}
        {Lisp-Entry "delta-pos" () 89 11 ("reporters" "delta-pos" "reporter" "dynamic" "function" "for-each" "increment")}
        {Lisp-Entry "set-step" () 95 11 ("reporters" "set-step" "reporter" "dynamic" "function" "for-each" "increment")}
        {Lisp-Entry "step-it" () 101 11 ("reporters" "step-it" "reporter" "dynamic" "function" "for-each")}
        {Lisp-Entry "set-done" () 107 11 ("reporters" "set-done" "reporter" "dynamic" "function" "for-each")}
        {Lisp-Entry "disable-cancel" () 113 11 ("reporters" "disable-cancel" "reporter" "dynamic" "function" "for-each")}
        {Lisp-Entry "cancel-requested?" () 119 11 ("cancel-requested?" "main-reporter" "main" "let")}
        {Lisp-Entry "test-cancelled" () 124 11 ("test-cancelled" "main-reporter" "main" "let")}}}})
"Mutex"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "thread" "Mutex.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.thread.Mutex" () 37 9 ("jazz")
      {Lisp-Entry "Mutex" () 44 7 ("WinKernel" "WinBase" "WinDef" "Synchronizer")
        {Lisp-Entry "create-synchronizer" () 47 11 ("NULL" "CreateMutex" "true" "creator-owns?" "creator-owns?:")}
        {Lisp-Entry "release-mutex" () 51 18 ("handle" "ReleaseMutex")}}}})
"MySQL-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Data-Source.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Data-Source" () 46 7 ("Data-Source")
        {Lisp-Entry "database" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "dsn" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "external-name" () 54 16 ("mysql" "rest")}
        {Lisp-Entry "new-inventory" () 63 11 ("password" "database" "MySQL-Inventory" "new" "false" "read-only?" "read-only?:" "connection")}
        {Lisp-Entry "new-connection" () 72 11 ("self" "ADO-Connection" "new")}
        {Lisp-Entry "get-connection-string" () 76 11 ("password" "username" "either" "database" "parse" "format" "dsn" "if")}
        {Lisp-Entry "get-connection-properties" () 86 11 ("password" "password:" "username" "username:" "database" "database:" "list")}
        {Lisp-Entry "present" () 97 11 ("database" "get-name" "format" "dsn" "if")}
        {Lisp-Entry "present-detailed" () 103 11 ("database" "get-name" "format" ":bulleted" "list")}
        {Lisp-Entry "get-class-presentation" () 115 16 ()}
        {Lisp-Entry "property-presentation" () 120 16 ("nextmethod" "else" "dsn" "database" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 127 11 ("nextmethod" "else" "true" "nullable?:" "String-Row" "dsn" "extensions:" "parameters:" "open" "mode:" "MySQL-Database-Row" "new" "database" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 134 11 ("password" "username" "database" "dsn" "class-info")}}}})
"MySQL-Database-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Database-Row.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Database-Row" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Database-Row" () 46 7 ("String-Row")
        {Lisp-Entry "edit" () 49 11 ("self" "get-tree" "expand" "edit-in-cell")}
        {Lisp-Entry "close-editor" () 54 11 ("self" "get-tree" "collapse" "nextmethod")}}}})
"MySQL-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Datatype.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Datatype" () 46 7 ("Datatype")
        {Lisp-Entry "get-systypes" () 49 16 ("7" "0" "Systype")}}}})
"MySQL-Inventory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory" () 38 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory" () 46 7 ("Inventory")
        {Lisp-Entry "database" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "get-data-source" "get-database" "database" "set!" "nextmethod" "false" "read-only?" "read-only?:" "password" "pathname" "connection")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod")}
        {Lisp-Entry "get-database" () 62 18 ("database")}
        {Lisp-Entry "get-version" () 71 11 ("0" "Version" "new" "split" "parse-integer" "map" "minor" "major" "bind" "database" "get-Version" "string" "let")}
        {Lisp-Entry "get-DAO-version" () 77 18 ("0" "Version" "new" "split" "parse-integer" "map" "minor" "major" "bind" "engine" "get-Version" "string" "let")}
        {Lisp-Entry "type-connection-string" () 88 11 ()}
        {Lisp-Entry "get-tables-views" () 95 11 ("self" "new" "table-comment" "get" "table-name" "let" "row" "function" "map" "connection" "load-rows" "table-view-rows" "tie" "cmd" "let*" "MySQL-inventory-table-view" "type")}
        {Lisp-Entry "get-tables" () 110 11 ("MySQL-Inventory-Table" "get-tables-views")}
        {Lisp-Entry "get-table" () 114 11 ("corelease" "self" "MySQL-Inventory-Table" "new" "DAO.dbSystemObject" "get-Attributes" "mask-bit-set?" "not" "if" "get-Item" "table" "let" "database" "get-TableDefs" "tables" "with-closed" "name")}
        {Lisp-Entry "create-table" () 123 11 ("database" "CreateTableDef" "self" "MySQL-Inventory-Table" "new" "name")}
        {Lisp-Entry "append-table" () 127 11 ("get-handle" "Append" "database" "get-TableDefs" "tabledefs" "with-closed" "table")}
        {Lisp-Entry "remove-table" () 132 11 ("Delete" "database" "get-TableDefs" "tabledefs" "with-closed" "name")}
        {Lisp-Entry "column-supports-property?" () 138 11 ("true" "else" "equal?" "test:" "get-name" "member?" "get-datatype" "third" "datatype" "let" "allow-zero-length?" "case" "property" "object")}
        {Lisp-Entry "get-views" () 150 11 ("MySQL-Inventory-View" "get-tables-views")}
        {Lisp-Entry "get-view" () 154 11 ("rest" "name")}
        {Lisp-Entry "create-view" () 158 11 ("views-unsupported" "name")}
        {Lisp-Entry "append-view" () 162 11 ("views-unsupported" "view")}
        {Lisp-Entry "remove-view" () 166 11 ("views-unsupported" "name")}
        {Lisp-Entry "views-unsupported" () 170 11 ("error")}
        {Lisp-Entry "get-relations" () 179 11 ("get-Item" "self" "MySQL-Inventory-Relation" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "database" "get-Relations" "relations" "with-closed")}
        {Lisp-Entry "get-relation" () 186 11 ("get-Item" "self" "MySQL-Inventory-Relation" "new" "database" "get-Relations" "relations" "with-closed" "name")}
        {Lisp-Entry "create-relation" () 191 11 ("database" "CreateRelation" "self" "MySQL-Inventory-Relation" "new" "name")}
        {Lisp-Entry "append-relation" () 195 11 ("get-handle" "Append" "database" "get-Relations" "relations" "with-closed" "relation")}
        {Lisp-Entry "remove-relation" () 200 11 ("Delete" "database" "get-Relations" "relations" "with-closed" "name")}
        {Lisp-Entry "get-procedures" () 210 11 ("get-Item" "self" "MySQL-Inventory-Procedure" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "database" "get-QueryDefs" "procedures" "with-closed")}
        {Lisp-Entry "Procedure-Not-Existant" () 217 13 ()}
        {Lisp-Entry "get-procedure" () 221 11 ("self" "MySQL-Inventory-Procedure" "new" "when" "Procedure-Not-Existant" "cotry" "if" "procedure" "get-Item" "dynamic" "function" "action" "let*" "database" "get-QueryDefs" "procedures" "with-closed" "true" "error?" "error?:" "name")}
        {Lisp-Entry "create-procedure" () 234 11 ("database" "CreateQueryDef" "self" "MySQL-Inventory-Procedure" "new" "name")}
        {Lisp-Entry "append-procedure" () 238 11 ("procedure")}
        {Lisp-Entry "remove-procedure" () 243 11 ("database" "DeleteQueryDef" "name")}}}})
"MySQL-Inventory-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-Column" () 38 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-Column" () 46 7 ("DAO" "COM" "System" "Utilities" "Inventory-Column")
        {Lisp-Entry "column-name" () 49 8 ()}
        {Lisp-Entry "ordinal-position" () 50 8 ()}
        {Lisp-Entry "column-default" () 51 8 ()}
        {Lisp-Entry "nullable?" () 52 8 ("false")}
        {Lisp-Entry "datatype" () 53 8 ()}
        {Lisp-Entry "collation-name" () 54 8 ()}
        {Lisp-Entry "privileges" () 55 8 ()}
        {Lisp-Entry "column-comment" () 56 8 ()}
        {Lisp-Entry "initialize" () 59 11 ("destroy-mandatory" "column-comment~self" "privileges~self" "collation-name~self" "MySQL-Datatype" "new-datatype" "datatype~self" "nullable?~self" "column-default~self" "ordinal-position~self" "column-name~self" "set!" "nextmethod" "column-comment" "privileges" "collation-name" "numeric-scale" "numeric-precision" "character-maximum-length" "data-type" "nullable?" "column-default" "ordinal-position" "column-name" "index-column?" "parent" "inventory")}
        {Lisp-Entry "destroy" () 72 11 ("nextmethod")}
        {Lisp-Entry "reload" () 76 11 ("get-title" "get-Item" "handle" "set!" "parent" "get-handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "get-handle" () 87 18 ("handle")}
        {Lisp-Entry "get-default-value" () 93 11 ("column-default" "empty-string?" "if")}
        {Lisp-Entry "set-default-value" () 99 11 ("either" "handle" "put-DefaultValue" "value")}
        {Lisp-Entry "get-description" () 104 11 ("column-comment" "empty-string?" "if")}
        {Lisp-Entry "set-description" () 110 11 ("set-property" "value")}
        {Lisp-Entry "get-datatype" () 115 11 ("datatype")}
        {Lisp-Entry "get-size" () 119 11 ()}
        {Lisp-Entry "set-datatype" () 123 11 ("put-Size" "when" "append" "string->symbol" "DAO.DataTypeEnum" "name->value" "handle" "put-Type" "get-size" "size" "get-name" "name" "let" "value")}
        {Lisp-Entry "set-size" () 132 11 ("handle" "put-Size" "when" "size")}
        {Lisp-Entry "get-nullable?" () 138 11 ("nullable?")}
        {Lisp-Entry "set-nullable?" () 142 11 ("not" "handle" "put-Required" "value")}
        {Lisp-Entry "get-validation-rule" () 147 11 ("empty-string?" "if" "handle" "get-ValidationRule" "value" "let")}
        {Lisp-Entry "set-validation-rule" () 156 11 ("either" "handle" "put-ValidationRule" "value")}
        {Lisp-Entry "get-validation-text" () 161 11 ("empty-string?" "if" "handle" "get-ValidationText" "value" "let")}
        {Lisp-Entry "set-validation-text" () 170 11 ("either" "handle" "put-ValidationText" "value")}
        {Lisp-Entry "get-allow-zero-length?" () 175 11 ("handle" "get-AllowZeroLength" "unspecified")}
        {Lisp-Entry "set-allow-zero-length?" () 181 11 ("handle" "put-AllowZeroLength" "value")}
        {Lisp-Entry "get-display-format" () 186 11 ("get-property")}
        {Lisp-Entry "set-display-format" () 192 11 ("set-property" "value")}
        {Lisp-Entry "get-ordinal-position" () 197 11 ("handle" "get-OrdinalPosition" "ordinal-position")}
        {Lisp-Entry "set-ordinal-position" () 203 11 ("handle" "put-OrdinalPosition" "value")}
        {Lisp-Entry "get-auto-increment?" () 208 11 ("DAO.dbAutoIncrField" "get-attributes" "mask-bit-set?" "unspecified")}
        {Lisp-Entry "set-auto-increment?" () 214 11 ("DAO.dbAutoIncrField" "get-attributes" "mask-bit-set" "set-attributes" "value")}
        {Lisp-Entry "get-title" () 219 11 ("column-name")}
        {Lisp-Entry "get-fixed?" () 223 11 ("DAO.dbFixedField" "get-attributes" "mask-bit-set?" "unspecified")}
        {Lisp-Entry "get-indexes" () 229 11 ("handle" "get-Indexes")}
        {Lisp-Entry "get-order" () 235 11 ("ascending" "descending" "DAO.dbDescending" "get-attributes" "mask-bit-set?" "if")}
        {Lisp-Entry "get-attributes" () 248 11 ("handle" "get-Attributes")}
        {Lisp-Entry "set-attributes" () 254 11 ("handle" "put-Attributes" "value")}
        {Lisp-Entry "Property-Inexistant" () 259 12 ()}
        {Lisp-Entry "Object-Already-Existant" () 263 12 ()}
        {Lisp-Entry "Element-Not-Found" () 267 12 ()}
        {Lisp-Entry "get-property" () 271 11 ("get-Value" "null?" "if" "Property-Inexistant" "get-Item" "cotry" "property" "handle" "get-Properties" "properties" "with-closed" "property-name")}
        {Lisp-Entry "set-property" () 281 11 ("Element-Not-Found" "Delete" "set-existant-property" "Object-Already-Existant" "Append" "cotry" "DAO.dbText" "CreateProperty" "property" "if" "handle" "get-Properties" "properties" "with-closed" "value" "property-name")}
        {Lisp-Entry "set-existant-property" () 292 11 ("put-Value" "when" "Property-Inexistant" "get-Item" "cotry" "property" "handle" "get-Properties" "properties" "with-closed" "value" "property-name")}}}})
"MySQL-Inventory-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-Constraint.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-Constraint" () 45 7 ("COM" "System" "Utilities" "Language" "Kernel" "Inventory-Constraint")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}}}})
"MySQL-Inventory-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-Index.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-Index" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-Index" () 45 7 ("Inventory-Index")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "fields" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 68 18 ("handle")}
        {Lisp-Entry "get-title" () 72 11 ("handle" "get-Name")}
        {Lisp-Entry "get-fields" () 76 11 ("get-effective-fields" "fields" "either")}
        {Lisp-Entry "get-effective-fields" () 80 11 ("DAO._Field" "get-Item" "item" "true" "self" "inventory" "Access-Inventory-Column" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "DAO.IndexFields" "coquery" "index-fields" "handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "set-fields/orders" () 88 18 ("Append" "DAO.IndexFields" "coquery" "index-fields" "get-Fields" "fields" "DAO.dbDescending" "put-Attributes" "descending" "eq?" "when" "handle" "CreateField" "field" "with-closed" "cadr" "field-order" "car" "field-name" "let" "field-values" "dynamic" "function" "for-each" "value")}
        {Lisp-Entry "get-unique?" () 101 11 ("handle" "get-Unique")}
        {Lisp-Entry "set-unique?" () 105 18 ("handle" "put-Unique" "value")}
        {Lisp-Entry "get-required?" () 109 11 ("handle" "get-Required")}
        {Lisp-Entry "get-ignore-nulls?" () 113 11 ("handle" "get-IgnoreNulls")}}}})
"MySQL-Inventory-Primary-Key"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-Primary-Key.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-Primary-Key" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-Primary-Key" () 45 7 ("Inventory-Primary-Key")
        {Lisp-Entry "index" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "index~self" "set!" "nextmethod" "index" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "index" "close")}
        {Lisp-Entry "get-index" () 67 17 ("index")}
        {Lisp-Entry "get-title" () 71 11 ("index" "get-title")}
        {Lisp-Entry "get-fields" () 75 11 ("index" "get-fields")}}}})
"MySQL-Inventory-Procedure"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-Procedure.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-Procedure" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-Procedure" () 45 7 ("Inventory-Procedure")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-title" () 67 11 ("handle" "get-Name")}
        {Lisp-Entry "get-text" () 71 11 ("handle" "get-SQL")}
        {Lisp-Entry "set-text" () 75 18 ("handle" "put-SQL" "value")}}}})
"MySQL-Inventory-Relation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-Relation.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-Relation" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-Relation" () 45 7 ("Inventory-Relation")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-title" () 71 18 ("handle" "get-Name")}
        {Lisp-Entry "get-primary-table" () 75 11 ("handle" "get-Table")}
        {Lisp-Entry "set-primary-table" () 79 11 ("handle" "put-Table" "value")}
        {Lisp-Entry "get-primary-field-names" () 83 11 ("get-Count" "0" "naturals" "get-Name" "get-Item" "field" "n" "dynamic" "function" "map" "handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "set-primary-field-names" () 91 11 ("Append" "CreateField" "field" "field-name" "dynamic" "function" "for-each" "handle" "get-Fields" "fields" "with-closed" "values")}
        {Lisp-Entry "get-foreign-table" () 99 11 ("handle" "get-ForeignTable")}
        {Lisp-Entry "set-foreign-table" () 103 11 ("handle" "put-ForeignTable" "value")}
        {Lisp-Entry "get-foreign-field-names" () 107 11 ("get-Count" "0" "naturals" "get-ForeignName" "get-Item" "field" "n" "dynamic" "function" "map" "handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "set-foreign-field-names" () 115 11 ("length" "0" "naturals" "put-ForeignName" "get-Item" "field" "i" "field-name" "dynamic" "function" "for-each" "handle" "get-Fields" "fields" "with-closed" "values")}
        {Lisp-Entry "get-unique?" () 124 11 ("DAO.dbRelationUnique" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-unique?" () 128 18 ("DAO.dbRelationUnique" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-dont-enforce?" () 132 11 ("DAO.dbRelationDontEnforce" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "get-inherited?" () 136 11 ("DAO.dbRelationInherited" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "get-update-cascade?" () 140 11 ("DAO.dbRelationUpdateCascade" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-update-cascade?" () 144 18 ("DAO.dbRelationUpdateCascade" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-delete-cascade?" () 148 11 ("DAO.dbRelationDeleteCascade" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-delete-cascade?" () 152 18 ("DAO.dbRelationDeleteCascade" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-left?" () 156 11 ("DAO.dbRelationLeft" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-left?" () 160 18 ("DAO.dbRelationLeft" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-right?" () 164 11 ("DAO.dbRelationRight" "get-attribute" "mask-bit-set?")}
        {Lisp-Entry "set-right?" () 168 18 ("DAO.dbRelationRight" "get-attribute" "mask-bit-set" "set-attribute" "value")}
        {Lisp-Entry "get-attribute" () 172 11 ("handle" "get-Attributes")}
        {Lisp-Entry "set-attribute" () 176 11 ("handle" "put-Attributes" "value")}}}})
"MySQL-Inventory-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-Table.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-Table" () 38 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-Table" () 46 7 ("Inventory-Table")
        {Lisp-Entry "table-name" () 49 8 ()}
        {Lisp-Entry "table-comment" () 50 8 ()}
        {Lisp-Entry "indexes" () 51 8 ("not-loaded")}
        {Lisp-Entry "initialize" () 54 11 ("destroy-mandatory" "table-comment~self" "table-name~self" "set!" "nextmethod" "table-comment" "table-name" "parent" "inventory")}
        {Lisp-Entry "destroy" () 61 11 ("nextmethod")}
        {Lisp-Entry "get-owner" () 70 11 ()}
        {Lisp-Entry "get-handle" () 73 18 ()}
        {Lisp-Entry "get-title" () 77 11 ("table-name")}
        {Lisp-Entry "get-linked?" () 81 11 ("handle" "get-SourceTableName" "empty-string?" "not" "false")}
        {Lisp-Entry "get-connect" () 86 11 ("handle" "get-Connect")}
        {Lisp-Entry "set-connect" () 91 11 ("handle" "put-Connect" "connect")}
        {Lisp-Entry "get-source-table-name" () 95 11 ("handle" "get-SourceTableName")}
        {Lisp-Entry "set-source-table-name" () 100 11 ("handle" "put-SourceTableName" "source-table-name")}
        {Lisp-Entry "get-validation-rule" () 104 11 ("empty-string?" "if" "handle" "get-ValidationRule" "value" "let")}
        {Lisp-Entry "set-validation-rule" () 112 11 ("either" "handle" "put-ValidationRule" "value")}
        {Lisp-Entry "get-validation-text" () 116 11 ("empty-string?" "if" "handle" "get-ValidationText" "value" "let")}
        {Lisp-Entry "set-validation-text" () 124 11 ("either" "handle" "put-ValidationText" "value")}
        {Lisp-Entry "get-description" () 128 11 ("table-comment")}
        {Lisp-Entry "set-description" () 132 11 ("set-property" "value")}
        {Lisp-Entry "get-primary-key" () 141 18 ("get-output" "car" "corelease" "MySQL-Inventory-Index" "self" "inventory" "MySQL-Inventory-Primary-Key" "put" "get-Primary" "if" "get-Item" "index" "get-Count" "below" "0" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Indexes" "indexes" "with-closed")}
        {Lisp-Entry "create-primary-key" () 153 18 ("MySQL-Inventory-Index" "self" "inventory" "MySQL-Inventory-Primary-Key" "new" "Append" "DAO.IndexFields" "coquery" "index-fields" "get-Fields" "fields" "DAO.dbDescending" "put-Attributes" "descending" "eq?" "when" "CreateField" "with-closed" "order" "field" "bind" "field/order" "dynamic" "function" "for-each" "true" "put-Primary" "handle" "CreateIndex" "primary-index" "let" "fields/orders" "name")}
        {Lisp-Entry "remove-primary-key" () 168 11 ("Delete" "handle" "get-Indexes" "indexes-handle" "with-closed" "get-index" "index" "let" "name")}
        {Lisp-Entry "append-primary-key" () 174 11 ("get-index" "get-handle" "Append" "handle" "get-Indexes" "indexes-handle" "with-closed" "primary-key")}
        {Lisp-Entry "get-columns" () 184 11 ("false" "self" "MySQL-Inventory-Column" "new" "column-comment" "privileges" "collation-name" "numeric-scale" "numeric-precision" "character-maximum-length" "data-type" "nullable?" "column-default" "ordinal-position" "get" "column-name" "let" "row" "function" "map" "get-connection" "load-rows" "column-rows" "tie" "cmd" "inventory" "get-database" "database" "let*")}
        {Lisp-Entry "get-column" () 204 11 ("get-Item" "false" "self" "inventory" "MySQL-Inventory-Column" "new" "handle" "get-Fields" "fields" "with-closed" "name")}
        {Lisp-Entry "create-column" () 210 11 ("false" "self" "inventory" "MySQL-Inventory-Column" "new" "name")}
        {Lisp-Entry "append-column" () 214 11 ("get-handle" "Append" "handle" "get-Fields" "fields" "with-closed" "column")}
        {Lisp-Entry "remove-column" () 219 11 ("Delete" "handle" "get-Fields" "fields" "with-closed" "name")}
        {Lisp-Entry "indexes-loaded?" () 229 11 ("not-loaded" "indexes" "neq?")}
        {Lisp-Entry "load-indexes" () 233 11 ("get-effective-indexes" "indexes" "set!" "indexes-loaded?" "unless")}
        {Lisp-Entry "get-indexes" () 238 11 ("indexes" "load-indexes")}
        {Lisp-Entry "get-effective-indexes" () 244 11 ("get-output" "corelease" "self" "inventory" "MySQL-Inventory-Index" "put" "get-Primary" "get-Foreign" "not" "and" "if" "get-Item" "index" "get-Count" "below" "0" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Indexes" "indexes" "with-closed")}
        {Lisp-Entry "get-index" () 256 11 ("get-indexes" "get-title" "=" "index" "dynamic" "function" "find-if" "name")}
        {Lisp-Entry "create-index" () 263 11 ("handle" "CreateIndex" "self" "inventory" "MySQL-Inventory-Index" "new" "name")}
        {Lisp-Entry "append-index" () 267 11 ("cons" "indexes" "set!" "get-handle" "Append" "handle" "get-Indexes" "indexes-handle" "with-closed" "load-indexes" "new-index")}
        {Lisp-Entry "remove-index" () 274 11 ("remove!" "indexes" "set!" "Delete" "handle" "get-Indexes" "indexes-handle" "with-closed" "get-index" "index" "let" "name")}
        {Lisp-Entry "get-triggers" () 286 11 ()}
        {Lisp-Entry "get-trigger" () 290 11 ("rest" "name")}
        {Lisp-Entry "triggers-unsupported" () 294 11 ("error")}
        {Lisp-Entry "create-trigger" () 298 11 ("triggers-unsupported" "name")}
        {Lisp-Entry "append-trigger" () 302 11 ("triggers-unsupported" "trigger")}
        {Lisp-Entry "delete-trigger" () 306 11 ("triggers-unsupported" "name")}
        {Lisp-Entry "get-constraints" () 315 11 ()}
        {Lisp-Entry "get-constraint" () 319 11 ("rest" "name")}
        {Lisp-Entry "constraints-unsupported" () 323 11 ("error")}
        {Lisp-Entry "create-constraint" () 327 11 ("constraints-unsupported" "name")}
        {Lisp-Entry "append-constraint" () 331 11 ("constraints-unsupported" "constraint")}
        {Lisp-Entry "delete-constraint" () 335 11 ("constraints-unsupported" "name")}
        {Lisp-Entry "Property-Inexistant" () 344 12 ()}
        {Lisp-Entry "Object-Already-Existant" () 348 12 ()}
        {Lisp-Entry "Element-Not-Found" () 352 12 ()}
        {Lisp-Entry "get-property" () 356 11 ("get-Value" "null?" "if" "Property-Inexistant" "get-Item" "cotry" "property" "handle" "get-Properties" "properties" "with-closed" "property-name")}
        {Lisp-Entry "set-property" () 364 11 ("Element-Not-Found" "Delete" "set-existant-property" "Object-Already-Existant" "Append" "cotry" "DAO.dbText" "CreateProperty" "property" "if" "handle" "get-Properties" "properties" "with-closed" "value" "property-name")}
        {Lisp-Entry "set-existant-property" () 374 11 ("put-Value" "when" "Property-Inexistant" "get-Item" "cotry" "property" "handle" "get-Properties" "properties" "with-closed" "value" "property-name")}}}})
"MySQL-Inventory-Updater"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-Updater.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-Updater" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-Updater" () 45 7 ("Inventory-Updater")}}})
"MySQL-Inventory-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Inventory-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Inventory-View" () 38 9 ("jazz")
      {Lisp-Entry "MySQL-Inventory-View" () 47 7 ("Inventory-View")
        {Lisp-Entry "view-name" () 50 8 ()}
        {Lisp-Entry "view-comment" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("destroy-mandatory" "view-comment~self" "view-name~self" "set!" "nextmethod" "view-comment" "view-name" "parent" "inventory")}
        {Lisp-Entry "destroy" () 61 11 ("nextmethod")}
        {Lisp-Entry "get-handle" () 70 18 ("handle")}
        {Lisp-Entry "get-title" () 75 11 ("view-name")}
        {Lisp-Entry "get-text" () 79 11 ("get" "get-connection" "load-rows" "first" "row" "tie" "cmd" "inventory" "get-database" "database" "let*")}
        {Lisp-Entry "set-text" () 86 18 ("handle" "put-Text" "value")}}}})
"MySQL-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Provider.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Provider" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Provider" () 45 7 ("Provider")
        {Lisp-Entry "external-name" () 48 11 ("mysql")}
        {Lisp-Entry "get-datatype" () 57 11 ("MySQL-Datatype")}
        {Lisp-Entry "present" () 66 11 ()}
        {Lisp-Entry "browser-class" () 75 11 ("MySQL-Widget")}
        {Lisp-Entry "new-updater" () 84 11 ("MySQL-Inventory-Updater" "new" "connection")}}}})
"MySQL-Widget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "mysql" "MySQL-Widget.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.mysql.MySQL-Widget" () 37 9 ("jazz")
      {Lisp-Entry "MySQL-Widget" () 47 7 ("password" "password-border" "password-label" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "username" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "style:" "edge" "border-type:" "username-border" "username-label" "extensions:" "parameters:" "file" "protocol:" "database-browser" "5" "0" "Point" "position:" "title:" "database-label" "name:" "Dimension" "size:" "Data-Source-Widget")
        {Lisp-Entry "get-data-source" () 71 11 ("password" "password:" "username" "get-string-content" "username:" "database-browser" "locate" "get-moniker" "database:" "MySQL-Data-Source" "new")}
        {Lisp-Entry "set-data-source" () 78 11 ("get-password" "password" "get-username" "username" "set-string-content" "get-database" "database-browser" "locate" "set-moniker" "source")}
        {Lisp-Entry "setup-username/password-mode" () 84 11 ("select-all" "username" "acquire-focus" "false" "database-browser" "locate" "set-enabled?")}
        {Lisp-Entry "set-enabled?" () 95 11 ("invalidate-view" "password" "username" "database-browser" "locate" "set-enabled?" "enabled?" "set!" "flag")}
        {Lisp-Entry "get-tab-stops" () 108 11 ("password" "username" "database-browser" "locate" "get-text" "list")}
        {Lisp-Entry "set-default-focus" () 115 11 ("database-browser" "locate" "get-text" "set-focus")}
        {Lisp-Entry "on-return-press" () 119 11 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "validate-content" () 129 11 ("parse" "format" "exists?" "throw-cancel" "focus-body" "yes:" "message-box" "unless" "get-moniker" "moniker" "validate-content" "database-browser" "locate" "browser" "let")}}}})
"Name-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Name-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Name-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Name-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "string?" "symbol?" "not" "and" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 62 11 ("->string" "value")}
        {Lisp-Entry "setup-entry" () 71 11 ("parent:" "Name-Entry" "new" "client" "view")}}}})
"Name-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "entry" "Name-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.entry.Name-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Name-Entry" () 47 7 ("Default-GUI" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "name" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "scroller" "edge" "border-type:" "border" "name:" "Property-Entry")
        {Lisp-Entry "get-value" () 63 11 ("name" "locate" "get-string-content")}
        {Lisp-Entry "set-value" () 67 11 ("name" "locate" "set-string-content" "value")}
        {Lisp-Entry "get-modified?" () 71 11 ("name" "locate" "get-modified?")}
        {Lisp-Entry "set-modified?" () 75 11 ("name" "locate" "set-modified?" "value")}}}})
"Namespace-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Namespace-Declaration.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.declaration.Namespace-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Namespace-Declaration" () 40 7 ("Declaration")
        {Lisp-Entry "lookups" () 43 8 ("generate")}}}})
"Native-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Native-Declaration.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.declaration.Native-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Native-Declaration" () 40 7 ("Declaration")
        {Lisp-Entry "symbol" () 43 8 ("generate")}}}})
"Naturals"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Naturals.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.iterator.Naturals" () 37 9 ("jazz")
      {Lisp-Entry "Naturals" () 44 7 ("Iterator")
        {Lisp-Entry "start" () 47 8 ()}
        {Lisp-Entry "end" () 48 8 ()}
        {Lisp-Entry "reversed?" () 49 8 ()}
        {Lisp-Entry "current" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("current" "reversed?~self" "end~self" "start~self" "set!" "nextmethod" "false" "reversed?" "reversed?:" "end" "end:" "0" "start" "start:")}
        {Lisp-Entry "peek" () 61 11 ("current")}
        {Lisp-Entry "next" () 65 11 ("decrease!" "current" "increase!" "reversed?" "not" "if")}
        {Lisp-Entry "done?" () 71 11 ("" "current" ">=" "reversed?" "not" "if" "end" "and")}
        {Lisp-Entry "get-state" () 75 11 ("current")}
        {Lisp-Entry "set-state" () 79 11 ("current" "set!" "state")}}}})
"Navigable-Results"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Navigable-Results.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.search.Navigable-Results" () 37 9 ("jazz")
      {Lisp-Entry "Navigable-Results" () 48 7 ("on-return-press" "return-press-handler:" "on-double-click" "double-click-handler:" "row" "selection-mode:" "results" "header" "fill" "content" "flat?:" "hscroll?:" "vscroll?:" "center" "scroller" "on-clear-results" "clear" "0" "4" "on-edit-selection" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "edit" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "finish" () 64 11 ("get-tree" "invalidate-columns" "nextmethod" "rest")}
        {Lisp-Entry "palette-class" () 75 16 ("Tool-Palette")}
        {Lisp-Entry "get-tools-view" () 84 11 ("tools" "locate")}
        {Lisp-Entry "root-activated" () 88 11 ("self" "set-active-results" "get-application" "appl" "let")}
        {Lisp-Entry "get-tree" () 98 18 ("results" "locate")}
        {Lisp-Entry "on-double-click" () 107 11 ("true" "edit-selection" "results" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-return-press" () 114 11 ("true" "edit-selection" "evt")}
        {Lisp-Entry "on-edit-selection" () 118 11 ("true" "edit-selection" "evt")}
        {Lisp-Entry "on-clear-results" () 122 11 ("clear-results" "evt")}
        {Lisp-Entry "clear-results" () 131 26 ("get-tree" "remove-every-row")}
        {Lisp-Entry "edit-next" () 140 18 ("true" "edit-selection" "update-view" "list" "false" "set-selection" "begin" "not" "if" "next-editable" "rank" "last" "essay" "current" "get-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "edit-previous" () 155 18 ("true" "edit-selection" "list" "false" "set-selection" "begin" "not" "if" "previous-editable" "rank" "get-selection" "car" "current" "get-tree" "tree" "let*")}
        {Lisp-Entry "edit-current" () 168 18 ("true" "edit-selection")}
        {Lisp-Entry "edit-selection" () 172 29 ("forward?")}
        {Lisp-Entry "editable-row?" () 176 29 ("user-data")}
        {Lisp-Entry "next-editable" () 180 11 ("increase!" "get-user-data" "editable-row?" "get-row" "row" "let" "" "while" "return" "lambda" "call/ec" "0" "1" "+" "if" "rank" "get-visible-count" "count" "get-tree" "tree" "let*" "current")}
        {Lisp-Entry "previous-editable" () 194 11 ("decrease!" "get-user-data" "editable-row?" "get-row" "row" "let" "0" ">=" "while" "return" "lambda" "call/ec" "1" "-" "if" "rank" "get-visible-count" "count" "get-tree" "tree" "let*" "current")}
        {Lisp-Entry "select-results" () 208 18 ("acquire-focus" "get-tree" "tree" "let" "get-application" "get-active?" "when")}
        {Lisp-Entry "select-first" () 214 18 ("list" "set-selection" "bell" "not" "if" "next-editable" "rank" "get-tree" "tree" "let")}}}})
"Navigation-Branches"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "navigation" "Navigation-Branches.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.navigation.Navigation-Branches" () 37 9 ("jazz")
      {Lisp-Entry "Navigation-Branches" () 45 7 ("Branches-Viewer")
        {Lisp-Entry "external-name" () 49 16 ("navigation-branches" "rest")}
        {Lisp-Entry "palette-title" () 59 16 ()}}}})
"Navigator-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Navigator-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Navigator-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Navigator-Workspace" () 46 7 ("second" "Navigation-Branches" "selection" "Jazz-Console-Manager" "model-name:" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 61 11 ("navigator")}}}})
"New-Reader"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "New-Reader.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.iterator.New-Reader" () 37 9 ("jazz")
      {Lisp-Entry "New-Reader" () 44 7 ("Iterator")
        {Lisp-Entry "Empty" () 47 14 ("empty")}
        {Lisp-Entry "next" () 51 8 ()}
        {Lisp-Entry "getc" () 54 11 ("set!" "prog1" "get-next" "Empty" "next" "eq?" "if")}
        {Lisp-Entry "ungetc" () 61 11 ("next" "set!" "c")}
        {Lisp-Entry "peekc" () 65 11 ("get-next" "set!" "Empty" "next" "eq?" "when")}
        {Lisp-Entry "reset-next" () 71 11 ()}
        {Lisp-Entry "read" () 75 29 ()}
        {Lisp-Entry "skip-line" () 79 11 ("=" "when" "set!" "eof-object" "/=" "and" "while" "getc" "c" "let")}
        {Lisp-Entry "skip-whites" () 87 11 ("ungetc" "else" "space?" "skip-line" "return" "eof-object" "=" "cond" "getc" "c" "let" "true" "while")}
        {Lisp-Entry "read-list" () 100 11 ("read-composite" "getc")}
        {Lisp-Entry "read-reference" () 105 11 ("new-reference" "error" "!=" "when" "skip-whites" "context" "read" "form" "let" "getc")}
        {Lisp-Entry "read-literal" () 115 11 ("read-composite" "self" "eval-symbol" "construct-literal" "read" "symbol" "let" "getc" "context")}
        {Lisp-Entry "read-composite" () 121 11 ("get-output" "put" "else" "error" "eof-object" "???" "Empty" "form" "read" "put-sequence" "getc" "=" "cond" "peekc" "!=" "while" "skip-whites" "List-Factory" "new" "out" "let" "delimiter")}
        {Lisp-Entry "end-composite" () 139 11 ("error" "/=" "when" "getc" "c" "let" "skip-whites" "delimiter")}
        {Lisp-Entry "read-into-string" () 146 11 ("adjust-string" "false" "1" "+" "set-element!" "ungetc" "or" "constituent" "JzReadtableCharType" "/=" "not" "and" "set!" "eof-object" "=" "cond" "getc" "while" "0" "pos" "true" "first?" "c" "let" "numeric?" "str")}
        {Lisp-Entry "read-constituent" () 169 11 ("intern" "else" "JzAtol" "integer-string?" "parse-hexadecimal-string" "hexadecimal-string?" "cond" "false" "read-into-string" "make-string" "str" "let")}
        {Lisp-Entry "read-quote" () 180 11 ("read" "quote" "list" "getc")}
        {Lisp-Entry "read-string" () 185 11 ("adjust-string" "1" "+" "set-element!" "set!" "read-error" "eof-object" "=" "cond" "c" "true" "while" "getc" "0" "pos" "make-string" "str" "let")}
        {Lisp-Entry "read-error" () 204 11 ("error")}
        {Lisp-Entry "read-block" () 208 29 ("jBuffer")}}}})
"Node"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "element" "Node.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.element.Node" () 37 9 ("jazz")
      {Lisp-Entry "Node" () 43 7 ("Object")
        {Lisp-Entry "name" () 46 18 ("generate")}
        {Lisp-Entry "owned" () 47 18 ("generate")}
        {Lisp-Entry "node-properties" () 50 29 ()}
        {Lisp-Entry "get-owned" () 55 18 ("owned")}
        {Lisp-Entry "initialize" () 59 11 ("set-property" "for-each-property" "owned~self" "name~self" "set!" "nextmethod" "others" "name" "bind-keywords" "rest")}
        {Lisp-Entry "copy-object" () 67 11 ("owned" "copy" "set-owned" "node-properties" "get-value" "set-value" "property" "dynamic" "function" "for-each" "name" "set-name" "self" "class-of" "new" "element" "let" "deep?")}
        {Lisp-Entry "compare-object" () 77 11 (":not-equal" "else" ":equal" "node-properties" "get-value" "property" "dynamic" "function" "every?" "get-name" "name" "=" "and" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 89 11 ("owned-properties" "name" "name:" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "owned-properties" () 97 18 ("get-output" "node-properties" "get-value" "put" "owned" "memq?" "when" "property" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "get-name" () 112 18 ("name")}
        {Lisp-Entry "named?" () 116 18 ("name")}
        {Lisp-Entry "supports?" () 125 18 ("node-properties" "memq?" "property")}
        {Lisp-Entry "set-property" () 129 18 ("cons" "set!" "owned" "memq?" "unless" "set-value" "value" "property")}
        {Lisp-Entry "get-properties" () 135 18 ("node-properties")}
        {Lisp-Entry "get-value" () 144 26 ("error" "property")}
        {Lisp-Entry "set-value" () 148 26 ("error" "value" "property")}}}})
"Note-List-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "database" "Note-List-Row.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.database.Note-List-Row" () 37 9 ("jazz")
      {Lisp-Entry "Note-List-Row" () 45 7 ("List-Row")
        {Lisp-Entry "get-subrow-class" () 48 11 ("Note-Row")}}}})
"Note-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "database" "Note-Row.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.database.Note-Row" () 37 9 ("jazz")
      {Lisp-Entry "Note-Row" () 45 7 ("Formatted-Text-Row")
        {Lisp-Entry "present" () 53 11 ("format" "car" "text" "date" "bind" "null?" "if" "value")}
        {Lisp-Entry "new-editor" () 65 11 ("0" "left-padding:" "editor-class" "new")}
        {Lisp-Entry "editor-class" () 70 11 ("Row-Formatted-Text-View")}}}})
"Notify-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Notify-Event.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.event.Notify-Event" () 37 9 ("jazz")
      {Lisp-Entry "Notify-Event" () 44 7 ("Event")
        {Lisp-Entry "record" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("record" "set!" "nextmethod" "rec" "sender" "kind")}
        {Lisp-Entry "get-record" () 55 18 ("record")}
        {Lisp-Entry "get-from" () 59 18 ("hwndFrom" "record" "get" "get-window")}
        {Lisp-Entry "get-code" () 63 18 ("code" "record" "get")}}}})
"Number-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Number-Tester.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.suite.Number-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Number-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-bit" "test-number" "invoke")}
        {Lisp-Entry "test-number" () 62 11 ("min" "max" "error?" "begin" "generic-min" "8" "7" "generic-max" "6" "" "/=" "not" "/" "*" "4" "2" "-" "3" "1" "5" "+" "0" "=" "rpt" "validate")}
        {Lisp-Entry "test-bit" () 121 11 ("7" "bit-or" "2" "6" "0" "4" "1" "5" "bit-and" "=" "rpt" "validate")}}}})
"Object-Proxy"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "remote" "Object-Proxy.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.jrm.remote.Object-Proxy" () 37 9 ("jazz")
      {Lisp-Entry "Object-Proxy" () 45 7 ("Object")
        {Lisp-Entry "live?" () 53 26 ()}}}})
"Object-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Object-Tester.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.validate.suite.Object-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Object-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "X" () 155 7 ("Object")
          {Lisp-Entry "foo" () 157 29 ()}
          {Lisp-Entry "goo" () 158 14 ()}
          {Lisp-Entry "bar" () 160 15 ("5")}
          {Lisp-Entry "toto" () 162 18 ("bar")}
          {Lisp-Entry "tutu" () 165 18 ("bar" "*" "x")}
          {Lisp-Entry "tata" () 168 18 ("X2")}
          {Lisp-Entry "yuyu" () 171 18 ("bar~self" "list" "bar" "let")}
          {Lisp-Entry "yiyi" () 175 18 ("list" "7" "bar~self" "set!" "bar" "let")}}
        {Lisp-Entry "Y" () 182 7 ("X")
          {Lisp-Entry "foo" () 184 21 ()}
          {Lisp-Entry "bah" () 186 26 ("x")}}
        {Lisp-Entry "Z" () 190 7 ("Y")
          {Lisp-Entry "bah" () 192 11 ("+" "x")}}
        {Lisp-Entry "W" () 196 7 ("X")
          {Lisp-Entry "hoo" () 198 15 ("0" "Cell" "new")}}
        {Lisp-Entry "test-part1" () 201 9 ("X" "get-foo" "=" "get-goo" "error?" "begin" "Z" "Y" "W" "new" "get-hoo" "neq?" "rpt" "validate")}
        {Lisp-Entry "X1" () 215 19 ()}
        {Lisp-Entry "X2" () 216 19 ()}
        {Lisp-Entry "call-bah" () 219 9 ("bah" "x" "obj")}
        {Lisp-Entry "call-bah2" () 222 9 ("bah" "x" "obj")}
        {Lisp-Entry "test-part2" () 226 9 ("error?" "begin" "call-bah2" "Z" "Y" "call-bah" "yiyi" "yuyu" "equal?" "4" "tata" "tutu" "toto" "7" "6" "set-bar" "5" "get-bar" "get-foo" "=" "rpt" "validate" "X2" "X" "new" "X1" "set!")}
        {Lisp-Entry "test-part3" () 258 9 ("4" "3" "1" "J" "public" "Object" "extends" "class" "v" "virtual" "protected" "+" "apply" "rest" "f" "method" "aa" "5" "initialize" "meta" "slot" "6" "9" "mak" "bar" "2" "I" "new" "foo" "list" "=" "rpt" "validate" "7" "mm" "set!")}}}})
"OpenFile-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "OpenFile-Dialog.fusion"} {Time 128360915020000000L}
    {Lisp-Entry "jazz.ui.dialog.OpenFile-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "OpenFile-Dialog" () 49 7 ("Dialog")
        {Lisp-Entry "tokenise-choose-file-string" () 52 11 ("1" "+" "WCHAR-subarray" "WCHAR-string" "cons" "if" "WCHAR-array-ref" "eq?" "end-of-string?" "true" "start-of-string?" "0" "offset" "loop" "let" "buffer")}
        {Lisp-Entry "get-modal" () 64 11 ("error" "throw-cancel" "CommDlgExtendedError" "code" "append" "map" "dirlist" "filenames" "dir" "bind" "list" "1" "length" "=" "tokenise-choose-file-string" "tokens" "tokenise" "File" "new" "WCHAR-string" "filename" "begin" "GetOpenFileName" "anchors" "anchors:" "debug" "pathname" "dynamic" "function" "anchorize" "OPENFILENAME-lpfnHook-set!" "OPENFILENAME-lCustData-set!" "OPENFILENAME-lpstrDefExt-set!" "OFN_ENABLESIZING" "OFN_FILEMUSTEXIST" "OFN_ENABLEHOOK" "OFN_HIDEREADONLY" "OFN_ALLOWMULTISELECT" "OFN_EXPLORER" "bit-or" "OPENFILENAME-Flags-set!" "either" "OPENFILENAME-lpstrTitle-set!" "parse" "directory" "OPENFILENAME-lpstrInitialDir-set!" "OPENFILENAME-nMaxFile-set!" "OPENFILENAME-lpstrFile-set!" "OPENFILENAME-lpstrFilter-set!" "get-handle" "get-toplevel" "toplevel" "OPENFILENAME-hwndOwner-set!" "OPENFILENAME-sizeof" "OPENFILENAME-lStructSize-set!" "get-dialog-proc" "fake-dialog-proc" "get-current-directory" "fake-current-directory" "NULL" "extensions" "extensions-filter" "fake-extensions-filter" "WCHAR-copy" "0" "WCHAR-array-set!" "initial-filename" "not" "WCHAR-array-make" "buffer" "OPENFILENAME-make" "r" "with" "*" "MAX_PATH" "+" "multiple-selection?" "if" "size" "let" "close-all-popups" "title" "title:")}}}})
"Oracle-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "oracle" "Oracle-Data-Source.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.oracle.Oracle-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "Oracle-Data-Source" () 45 7 ("Adox-Data-Source")
        {Lisp-Entry "external-name" () 49 16 ("oracle" "rest")}
        {Lisp-Entry "get-connection-string" () 58 11 ("password" "username" "if" "format" "dsn" "when")}
        {Lisp-Entry "present" () 71 11 ("dsn" "format")}
        {Lisp-Entry "get-class-presentation" () 81 16 ()}}}})
"Oracle-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "oracle" "Oracle-Datatype.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.oracle.Oracle-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "Oracle-Datatype" () 45 7 ("Adox-Datatype")}}})
"Oracle-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "oracle" "Oracle-Provider.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.oracle.Oracle-Provider" () 37 9 ("jazz")
      {Lisp-Entry "Oracle-Provider" () 45 7 ("Provider")
        {Lisp-Entry "external-name" () 48 11 ("oracle")}
        {Lisp-Entry "get-datatype" () 57 11 ("Oracle-Datatype")}
        {Lisp-Entry "present" () 66 11 ()}}}})
"Orphanage-Window"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Orphanage-Window.fusion"} {Time 128360916840000000L}
    {Lisp-Entry "jazz.ui.window.Orphanage-Window" () 37 9 ("jazz")
      {Lisp-Entry "Orphanage-Window" () 48 7 ("visible?:" "Window" "Window-Class")
        {Lisp-Entry "default-parent" () 60 11 ()}
        {Lisp-Entry "window-parent" () 64 11 ("NULL")}
        {Lisp-Entry "window-style" () 69 11 ("0" "rest")}
        {Lisp-Entry "window-ex-style" () 74 11 ("0" "rest")}}}})
"Outline-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "outline" "Outline-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.outline.Outline-Row" () 37 9 ("jazz")
      {Lisp-Entry "Outline-Row" () 46 7 ("Drawing")
        {Lisp-Entry "father" () 49 22 ("set-father" "get-father")}
        {Lisp-Entry "sons" () 50 22 ("set-sons" "get-sons")}
        {Lisp-Entry "level" () 51 22 ("set-level" "get-level")}
        {Lisp-Entry "state" () 52 22 ("set-state" "get-state" "collapsed")}
        {Lisp-Entry "row-height" () 53 22 ("set-row-height" "get-row-height")}
        {Lisp-Entry "previous" () 56 18 ("generate")}
        {Lisp-Entry "next" () 57 18 ("generate")}
        {Lisp-Entry "initialize-component" () 67 11 ("rest")}
        {Lisp-Entry "install-in-parent" () 71 11 ()}
        {Lisp-Entry "set-parent" () 75 11 ("parent" "set!" "prt")}
        {Lisp-Entry "get-outline" () 84 18 ("parent")}
        {Lisp-Entry "get-father" () 88 18 ("father")}
        {Lisp-Entry "set-father" () 92 18 ("father" "set!" "row")}
        {Lisp-Entry "get-sons" () 96 18 ("sons")}
        {Lisp-Entry "set-sons" () 100 18 ("sons" "set!" "s")}
        {Lisp-Entry "get-level" () 104 18 ("level")}
        {Lisp-Entry "set-level" () 108 18 ("level" "set!" "lvl")}
        {Lisp-Entry "get-state" () 112 18 ("state")}
        {Lisp-Entry "set-state" () 116 18 ("state" "set!" "s")}
        {Lisp-Entry "get-row-height" () 120 18 ("row-height")}
        {Lisp-Entry "set-row-height" () 124 18 ("row-height" "set!" "height")}
        {Lisp-Entry "change-father" () 133 18 ("get-sons" "length" "either" "add-son" "set-father" "self" "remove-son" "father" "when" "position" "position:" "father-row")}
        {Lisp-Entry "for-each-father" () 141 18 ("for-each-father" "father" "when" "proc")}
        {Lisp-Entry "for-each-ancestor" () 147 18 ("for-each-father" "self" "proc")}
        {Lisp-Entry "remove-every-son" () 157 18 ("sons" "remove-row" "son" "dynamic" "function" "for-each" "get-outline" "outline" "let")}
        {Lisp-Entry "son-rank" () 164 18 ("position" "return:" "sons" "find" "son")}
        {Lisp-Entry "last-son" () 168 18 ("sons" "last")}
        {Lisp-Entry "get-transparent?" () 177 11 ("true")}
        {Lisp-Entry "expanded?" () 186 18 ("expanded" "state" "=")}
        {Lisp-Entry "collapsed?" () 190 18 ("collapsed" "state" "=")}
        {Lisp-Entry "expandable?" () 194 18 ("first-visible-son" "dynamic" "state" "=" "or")}
        {Lisp-Entry "collapsable?" () 199 18 ("expanded" "state" "=")}
        {Lisp-Entry "set-descendants-level" () 208 21 ("sons" "1" "+" "set-descendants-level" "son" "dynamic" "function" "for-each" "level" "set!" "lvl")}
        {Lisp-Entry "get-effective-width" () 220 26 ("get-width")}
        {Lisp-Entry "get-effective-height" () 224 18 ("get-height" "row-height" "either")}
        {Lisp-Entry "draw" () 233 11 ("draw-selection" ":selected?" "getf" "when" "nextmethod" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-selection" () 239 29 ("Light-Gray" "Black" "name:" "Color" "frame-rect" "inflate-rect" "inner" "get-bounds" "outer" "with" "dc")}
        {Lisp-Entry "show" () 251 11 ("link" "false" "show-rows" "visible-in-father?" "visible?" "let" "parent" "nextmethod" "first-visible-son" "father" "essay" "get-next" "if" "next" "self" "previous-visible-row" "previous" "last-descendant" "last" "let*" "get-visible-flag" "unless")}
        {Lisp-Entry "hide" () 266 11 ("unlink" "visible-in-father?" "hide-rows" "parent" "if" "nextmethod" "false" "in-collapse?" "self" "last-descendant" "either" "last" "let" "get-visible-flag" "when")}
        {Lisp-Entry "get-visible?" () 277 11 ("row-visible?" "father" "and")}
        {Lisp-Entry "row-visible?" () 281 18 ("visible-in-father?" "get-visible-flag" "and")}
        {Lisp-Entry "visible-in-father?" () 286 18 ("row-visible?" "expanded?" "and" "father" "not" "or")}
        {Lisp-Entry "count-visible" () 291 18 ("increase!" "get-next" "set!" "level" "get-level" ">" "and" "while" "0" "count" "next" "scan" "let")}
        {Lisp-Entry "node-height" () 300 18 ("sons-height" "parent" "get-row-spacing" "get-effective-height" "+")}
        {Lisp-Entry "sons-height" () 304 18 ("get-next" "set!" "get-effective-height" "+" "increase!" "level" "get-level" ">" "and" "while" "parent" "get-row-spacing" "rs" "0" "total" "next" "scan" "let")}
        {Lisp-Entry "sons-width" () 314 18 ("get-next" "set!" "when" "get-effective-width" "w" "level" "get-level" ">" "and" "while" "0" "width" "next" "scan" "let")}
        {Lisp-Entry "first-visible-son" () 325 18 ("son" "dynamic" "function" "find-if" "get-visible-flag" "if" "first" "let" "sons" "empty?" "not" "when")}
        {Lisp-Entry "previous-visible-row" () 335 18 ("expanded?" "last-descendant" "essay" "either" "get-father" "father" "previous-visible-sibling" "let" "target")}
        {Lisp-Entry "previous-visible-sibling" () 342 18 ("get-visible-flag" "when" "true" "set!" "self" "=" "if" "unless" "dynamic" "function" "for-each" "false" "found-self?" "first" "scan" "get-sons" "father" "essay" "siblings" "sibling" "let*")}
        {Lisp-Entry "last-visible-descendant" () 357 21 ("set!" "level" "get-level" ">" "get-next" "and" "while" "when" "first-visible-son" "scan" "let")}
        {Lisp-Entry "add-son" () 370 18 ("insert!" "cdr" "set-cdr!" "1" "-" "tail" "pair" "cons" "List" "is?" "link" "first-visible-son" "/=" "and" "level" "get-level" "after" "get-next" "essay" "following" "element" "previous-visible-row" "last-visible-descendant" "if" "0" "before" "get-visible-flag" "else" ">" "not" "cond" "pos" "length" "count" "last-descendant" "end" "expanded" "state" "=" "expanded?" "let*" "set-father" "self" "eval-symbol" "new" "set!" "parent" "get-sons-class" "class" "let" "sons" "null?" "when" "position" "row")}
        {Lisp-Entry "remove-son" () 402 18 ("remove!" "sons" "set!" "set-previous" "set-next" "get-previous" "when" "next-non-descendant" "following" "let" "row")}
        {Lisp-Entry "relink" () 411 18 ("last-descendant" "expanded?" "either" "set!" "link" "get-visible-flag" "when" "row" "dynamic" "function" "for-each" "let" "after" "before" "replacement")}
        {Lisp-Entry "replace-sons" () 421 18 ("replace-subseq!" "sons" "set!" "relink" "after" "get-previous" "essay" "before" "let" "end" "end-row" "start" "start-row" "replacement")}
        {Lisp-Entry "reorder-sons" () 428 18 ("sons" "set!" "relink" "next-non-descendant" "after" "self" "expanded?" "when" "before" "let" "replacement")}
        {Lisp-Entry "link" () 436 11 ("set-previous" "set-next" "when" "after" "before")}
        {Lisp-Entry "unlink" () 444 11 ("set-next" "set-previous" "link" "get-next" "next" "get-previous" "previous" "let" "last" "first")}
        {Lisp-Entry "attached?" () 457 18 ("parent")}
        {Lisp-Entry "detach-descendants" () 461 18 ("sons" "detach-descendants" "subrow" "dynamic" "function" "for-each")}
        {Lisp-Entry "first-descendant" () 472 21 ("first-visible-son" "sons" "empty?" "not" "expanded" "state" "=" "and" "when")}
        {Lisp-Entry "last-proper-descendant" () 477 21 ("set!" "level" "get-level" ">" "get-next" "and" "while" "when" "first-descendant" "scan" "let")}
        {Lisp-Entry "last-descendant" () 485 21 ("self" "last-proper-descendant" "either")}
        {Lisp-Entry "next-non-descendant" () 490 21 ("last-descendant" "get-next")}
        {Lisp-Entry "visible-sibling-follows?" () 494 21 ("get-sons" "true" "set!" "self" "eq?" "get-visible-flag" "and" "prog1" "son" "dynamic" "function" "some?" "false" "found?" "let" "father" "when")}
        {Lisp-Entry "sibling-follows?" () 504 21 ("get-sons" "last" "self" "neq?" "father" "and")}
        {Lisp-Entry "get-spine" () 513 18 ("get-father" "cons" "set!" "neq?" "while" "spine" "parent" "get-root-row" "root" "self" "row" "let")}
        {Lisp-Entry "internal-fields" () 528 18 ("next" "previous" "state" "level" "values")}}}})
"Outline-Showcase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "showcase" "Outline-Showcase.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.showcase.Outline-Showcase" () 37 9 ("jazz")
      {Lisp-Entry "Outline-Showcase" () 46 7 ("center" "justification:" "width:" ":icons" "portfolio:" "row" "selection-mode:" "info" "info-border" "selection" "first-displayed-offset" "first-displayed-rank" "first-displayed" "visible-height" "visible-count" "on-update-information" "update-information" "on-remove-row" "remove-rows" "on-add-row" "add-row" "on-collapse-row" "collapse-row" "on-expand-row" "expand-row" "on-setting" "form:" "Event-Handler" "action-handler:" "checked?:" "title:" "row-spacing" "0" "row-spacing:" "Axis" "sons-class:" "outline" "fill" "layout-type:" "content" "vscroll?:" "edge" "border-type:" "6" "3" "Point" "position:" "outline-border" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "frame-title" () 87 16 ()}
        {Lisp-Entry "frame-position" () 92 16 ("Point")}
        {Lisp-Entry "frame-size" () 97 16 ("Dimension")}
        {Lisp-Entry "install" () 106 11 ("update-information" "setup-outline" "nextmethod" "rest")}
        {Lisp-Entry "setup-outline" () 117 11 ("0" "naturals" "5" "=" "when" "n" "dynamic" "function" "for-each" "node" "add-row" "locate" "outline" "let")}
        {Lisp-Entry "add-row" () 133 11 ("random-color" ":background" "random-height" ":row-height" "father:" "Color-Row" "class:" "self" "context:" "add-row" "father" "outline")}
        {Lisp-Entry "random-height" () 137 11 ("random" "+")}
        {Lisp-Entry "random-color" () 141 11 ("Dark-Purple" "Dark-Blue" "Dark-Green" "Dark-Orange" "Dark-Red" "name:" "Color" "random-element")}
        {Lisp-Entry "resize" () 155 11 ("info-border" "0" "outline-border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-setting" () 161 11 ("0" "1" "get-checked?" "if" "set-row-spacing" "row-spacing" "get-name" "case" "locate" "outline" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-expand-row" () 168 11 ("update-information" "get-row" "expand" "when" "get-selection" "row" "locate" "outline" "let*" "evt")}
        {Lisp-Entry "on-collapse-row" () 176 11 ("update-information" "get-row" "collapse" "when" "get-selection" "row" "locate" "outline" "let*" "evt")}
        {Lisp-Entry "Mark" () 184 14 ()}
        {Lisp-Entry "on-add-row" () 188 11 ("update-information" "random-color" ":background" "random-height" ":row-height" "collapsed" "state:" "father:" "add-row" "get-row" "essay" "Mark" "if" "row" "get-shift?" "use-mark?" "get-selection" "sel" "locate" "outline" "let*" "evt")}
        {Lisp-Entry "on-remove-row" () 197 11 ("update-information" "remove-row" "get-row" "essay" "Mark" "if" "row" "get-shift?" "use-mark?" "get-selection" "sel" "locate" "outline" "let*" "evt")}
        {Lisp-Entry "on-update-information" () 206 11 ("update-information" "evt")}
        {Lisp-Entry "update-information" () 215 11 ("display-outline" "update-fields")}
        {Lisp-Entry "update-fields" () 220 11 ("get-selection" "selection" "get-first-displayed-offset" "first-displayed-offset" "get-first-displayed-rank" "first-displayed-rank" "get-background" "get-name" "get-first-displayed" "essay" "first-displayed" "get-visible-height" "visible-height" "get-visible-count" "format" "visible-count" "set-title" "locate" "outline" "let")}
        {Lisp-Entry "display-outline" () 231 11 ("get-root-row" "remove-every-row" "with-update-locked" "get-sons" "subrow" "for-each" "display-row" "children:" "expanded" "state:" "father:" "add-row" "subdest" "let" "dest" "row" "dynamic" "function" "proc" "info" "locate" "outline" "letrec")}
        {Lisp-Entry "display-row" () 248 11 ("list" "get-next" "c5" "get-previous" "c4" "c3" "get-state" "c2" "get-level" "Tree-Label" "c1" "get-image" "image:" "get-title" "title:" "get-background" "color:" "Tree-Node" "new" "c0" "Dark-Blue" "Dark-Red" "name:" "Color" "if" "color" "get-visible?" "visible?" "row-rank" "essay" "dynamic" "function" "rank" "get-children" "car" "node" "let*" "row" "outline")}
        {Lisp-Entry "row-rank" () 262 11 ("error" "get-root-row" "get-sons" "for-each" "increase!" "eq?" "if" "subrow" "dynamic" "function" "proc" "rank" "letrec" "return" "lambda" "call/ec" "row" "outline")}
        {Lisp-Entry "Color-Row" () 281 9 ("Outline-Row")
          {Lisp-Entry "background" () 284 14 ("generate" "accessors")}
          {Lisp-Entry "draw-background" () 287 13 ("fill-rect" "get-bounds" "bounds" "with" "background" "when" "context" "dc")}}}}})
"Outline-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "outline" "Outline-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.outline.Outline-View" () 37 9 ("jazz")
      {Lisp-Entry "Outline-View" () 56 7 ("View")
        {Lisp-Entry "sons-class" () 59 22 ("set-sons-class" "get-sons-class")}
        {Lisp-Entry "default-row-height" () 60 22 ("set-default-row-height" "get-default-row-height")}
        {Lisp-Entry "row-spacing" () 61 22 ("set-row-spacing" "get-row-spacing" "0")}
        {Lisp-Entry "left-padding" () 62 22 ("set-left-padding" "get-left-padding" "0")}
        {Lisp-Entry "top-padding" () 63 22 ("set-top-padding" "get-top-padding" "0")}
        {Lisp-Entry "background-filler" () 64 22 ("set-background-filler" "get-background-filler")}
        {Lisp-Entry "root-row" () 67 18 ()}
        {Lisp-Entry "first-displayed" () 68 18 ()}
        {Lisp-Entry "first-displayed-rank" () 69 18 ("0")}
        {Lisp-Entry "first-displayed-offset" () 70 18 ("0")}
        {Lisp-Entry "visible-count" () 71 18 ("0")}
        {Lisp-Entry "visible-height" () 72 18 ("0")}
        {Lisp-Entry "visible-width" () 73 18 ("0")}
        {Lisp-Entry "selection" () 74 18 ()}
        {Lisp-Entry "line-size" () 75 18 ()}
        {Lisp-Entry "page-size" () 76 18 ()}
        {Lisp-Entry "hscrollbar?" () 77 18 ("false")}
        {Lisp-Entry "vscrollbar?" () 78 18 ("false")}
        {Lisp-Entry "install" () 86 11 ("setup-outline" "nextmethod" "rest")}
        {Lisp-Entry "finish" () 91 11 ("layout-scrollee" "nextmethod" "rest")}
        {Lisp-Entry "setup-outline" () 96 11 ("expanded" "set-state" "set-level" "set-father" "self" "set-parent" "row-class" "new" "root-row" "set!")}
        {Lisp-Entry "size-change" () 109 11 ("layout-scrollee" "update-locked?" "unless" "nextmethod" "size")}
        {Lisp-Entry "get-sons-class" () 120 18 ("sons-class")}
        {Lisp-Entry "set-sons-class" () 124 18 ("sons-class" "set!" "value")}
        {Lisp-Entry "get-default-row-height" () 128 18 ("default-row-height")}
        {Lisp-Entry "set-default-row-height" () 132 18 ("default-row-height" "set!" "height")}
        {Lisp-Entry "get-row-spacing" () 136 18 ("row-spacing")}
        {Lisp-Entry "set-row-spacing" () 140 18 ("invalidate-view" "row-spacing" "set!" "spacing")}
        {Lisp-Entry "get-left-padding" () 145 18 ("left-padding")}
        {Lisp-Entry "set-left-padding" () 149 18 ("invalidate-view" "left-padding" "set!" "padding")}
        {Lisp-Entry "get-top-padding" () 154 18 ("top-padding")}
        {Lisp-Entry "set-top-padding" () 158 18 ("invalidate-view" "top-padding" "set!" "padding")}
        {Lisp-Entry "get-background-filler" () 163 18 ("background-filler")}
        {Lisp-Entry "set-background-filler" () 167 18 ("invalidate-view" "background-filler" "set!" "value")}
        {Lisp-Entry "get-expand-state" () 177 18 ("collect" "cons" "expanded" "=" "and" "or" "get-sons" "sons" "get-state" "state" "first-child" "get-title" "title" "let" "row" "dynamic" "function" "proc" "letrec" "root-row" "when" "false" "include-invisibles?" "include-invisibles?:")}
        {Lisp-Entry "set-expand-state" () 194 18 ("for-each" "update-row" "and" "expand/collapse" "unless" "expanded" "=" "if" "get-state" "actual" "find-by-title" "subrow" "let" "children" "title" "bind" "info" "row" "dynamic" "function" "proc" "letrec" "root-row" "when" "state")}
        {Lisp-Entry "expand-spine" () 220 18 ("if" "expand/collapse" "null?" "expanded" "=" "or" "unless" "get-state" "actual" "find-by-title" "subrow" "let" "subspine" "title" "bind" "row" "dynamic" "function" "proc" "letrec" "root-row" "when" "spine")}
        {Lisp-Entry "find-subdrawing" () 241 11 ("get-position" "-" "find-drawing" "get-row" "when" "get-v" "v->row" "row" "let" "pos")}
        {Lisp-Entry "layout-scrollee-content" () 253 11 ("layout-rows")}
        {Lisp-Entry "layout-rows" () 257 11 ("row-spacing" "increase!" "set!" "Dimension" "set-size" "Point" "new" "set-position" "+" "rb" "default-row-height" "get-row-height" "either" "height" "let*" "while" "top-padding" "rt" "root-row" "get-next" "row" "left-padding" "get-width" "-" "width" "let")}
        {Lisp-Entry "scrollee-size" () 276 11 ("scrollee-height" "scrollee-width" "Dimension" "new")}
        {Lisp-Entry "scrollee-width" () 280 11 ("visible-width" "left-padding" "+" "get-display-width" "max")}
        {Lisp-Entry "scrollee-height" () 284 11 ("row-spacing" "visible-height" "top-padding" "+" "get-display-height" "max")}
        {Lisp-Entry "get-visible-width" () 288 18 ("visible-width")}
        {Lisp-Entry "get-visible-height" () 292 18 ("visible-height")}
        {Lisp-Entry "invalidate-update" () 301 11 ("update-scrollbars" "invalidate-view" "layout-scrollee" "update-visible" "update-displayed")}
        {Lisp-Entry "update-visible" () 309 26 ()}
        {Lisp-Entry "draw-children" () 318 11 ("draw-outline" "fill-rect" "when" "get-drawing-background" "background" "let" "get-update-rect" "update-rect" "with" "nextmethod" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-outline" () 330 29 ("draw-rows" "get-bottom" "bottom" "get-v" "get-top" "+" "top" "get-scrolled-position" "pos" "let*" "sc?" "sc" "sv" "sh" "lv" "lh" "update-rect" "update" "context" "dc")}
        {Lisp-Entry "draw-rows" () 337 11 ("draw-empty" "row-spacing" "get-next" "set!" "increase!" "draw-row" ">=" "when" "+" "rb" "get-height" "height" "let*" "" "and" "while" "get-width" "width" "first-displayed-offset" "top-padding" "-" "rt" "first-displayed-rank" "rank" "first-displayed" "row" "let" "sc?" "sc" "sv" "sh" "bottom" "top" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-empty" () 354 29 ("width" "rt" "sc?" "sc" "sv" "sh" "bottom" "top" "dc")}
        {Lisp-Entry "draw-row" () 358 11 ("get-v" "get-h" "paint-displayed" "optimize-context" "new-context" "let" "font" "set-font" "get-position" "pos" "row-draw-selected?" "selected?" "row-spacing" "+" "total-height" "get-height" "height" "get-width" "width" "let*" "name:" "log-entry" "Development" "get-%" "self" "eq?" "when" "sc?" "sc" "sv" "sh" "rank" "row" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "optimized-context" () 374 14 ("0" ":row-rank" ":selected?" "list")}
        {Lisp-Entry "optimize-context" () 378 11 ("set-fourth!" "optimized-context" "set-second!" ":row-rank" ":selected?" "cons" "if" "context" "rank" "selected?")}
        {Lisp-Entry "on-prior" () 391 18 ("get-shift?" "prior-page" "evt")}
        {Lisp-Entry "prior-page" () 395 29 ("vert" "get-page-size" "0" "Point" "new" "scroll" "evt")}
        {Lisp-Entry "on-next" () 399 18 ("get-shift?" "next-page" "evt")}
        {Lisp-Entry "next-page" () 403 29 ("vert" "get-page-size" "-" "0" "Point" "new" "scroll" "evt")}
        {Lisp-Entry "get-line-size" () 407 11 ("8" "horz" "default-row-height" "vert" "case" "orientation")}
        {Lisp-Entry "scroll-invalidate" () 413 11 ("-" "follow" "dv" "dh")}
        {Lisp-Entry "row-class" () 422 29 ("Outline-Row")}
        {Lisp-Entry "add-row" () 426 18 ("update-father-control" "false" "erase?:" "Rect" "new" "0" "scroll-view" "row-rect" "invalidate-rect" "" "layout-scrollee" "added-update-selection" "get-height" "display-height" "get-width" "display-width" "get-size" "display-size" "get-display" "display" "row-top" "top" "row-rank" "rank" "update-visible" "update-displayed" "get-effective-width" "update-visible-width-incremental" "visible-height" "node-height" "height" "let" "update-locked?" "not" "count-visible" "visible-count" "increase!" "row-visible?" "when" "add-son" "set-descendants-level" "default-row-height" "set-height" "parent:" "new-in" "apply" "1" "get-level" "+" "level" "root-row" "either" "let*" "others" "position" "father" "row" "row-class" "class" "self" "context" "bind-keywords" "rest")}
        {Lisp-Entry "update-visible-width-incremental" () 458 29 ("width" "level")}
        {Lisp-Entry "remove-row" () 462 26 ("update-father-control" "detach-descendants" "false" "erase?:" "Rect" "new" "-" "0" "scroll-view" "" "layout-scrollee" "get-height" "display-height" "get-width" "display-width" "get-size" "display-size" "get-display" "display" "update-visible" "update-displayed" "update-locked?" "not" "and" "removed-update-selection" "collapsed" "set-state" "get-sons" "null?" "remove-son" "visible-height" "count-visible" "1" "+" "visible-count" "decrease!" "row-top" "essay" "top" "row-rank" "rank" "node-height" "height" "row-visible?" "visible?" "get-father" "father" "let*" "attached?" "when" "row")}
        {Lisp-Entry "move-row" () 491 18 ("father:" ":row" "add-row" "procedure?" "if" "let" "remove-row" "position" "position:" "father" "row")}
        {Lisp-Entry "find-ordered-position" () 497 18 ("smaller/equal" "sort-predicate" "test:" "row-title" "key:" "get-sons" "ordered-position" "0" "not" "if" "father" "title")}
        {Lisp-Entry "remove-every-row" () 503 26 ("invalidate-view" "layout-scrollee" "update-displayed" "update-locked?" "unless" "horz" "false" "vert" "set-scroll-pos" "Dimension" "set-size" "Point" "set-position" "scroller" "when" "selection" "first-displayed-offset" "first-displayed-rank" "first-displayed" "visible-width" "visible-height" "0" "visible-count" "set!" "setup-outline")}
        {Lisp-Entry "update-father-control" () 523 29 ("father")}
        {Lisp-Entry "update-displayed" () 527 11 ("first-displayed-offset" "first-displayed-rank" "first-displayed" "row-spacing" "increase!" "set!" "not" "if" "get-next" "next" ">" "while" "get-height" "-" "bottom" "when" "get-display-v" "v" "0" "rank" "root-row" "first-visible-son" "row" "let")}
        {Lisp-Entry "get-root-row" () 546 18 ("root-row")}
        {Lisp-Entry "first-row" () 550 18 ("root-row" "get-sons" "first")}
        {Lisp-Entry "get-row" () 554 18 ("decrease!" "get-next" "set!" "0" "while" "root-row" "row" "let" "-" "get-displayed-row" "first-displayed-rank" ">=" "first-displayed" "update-locked?" "not" "and" "if" "n")}
        {Lisp-Entry "get-visible-row" () 565 18 ("=" "when" "rank" "row" "dynamic" "function" "for-each-visible-row" "return" "lambda" "call/ec" "n")}
        {Lisp-Entry "get-row-classic" () 576 11 ("decrease!" "get-next" "set!" "0" ">=" "and" "while" "root-row" "row" "let" "n")}
        {Lisp-Entry "get-displayed-row" () 584 11 ("decrease!" "get-next" "set!" "0" ">" "and" "while" "first-displayed" "row" "let" "n")}
        {Lisp-Entry "row-rank" () 592 18 ("eq?" "when" "rank" "row" "dynamic" "function" "for-each-visible-row" "return" "lambda" "call/ec" "target")}
        {Lisp-Entry "rows-ranks" () 602 18 ("row-rank" "map" "targets")}
        {Lisp-Entry "row-title" () 606 18 ("first-child" "get-title" "row")}
        {Lisp-Entry "get-visible-count" () 610 18 ("visible-count")}
        {Lisp-Entry "forward" () 614 11 ("decrease!" "get-next" "set!" "0" ">" "while" "n" "row")}
        {Lisp-Entry "backward" () 621 11 ("decrease!" "get-previous" "set!" "0" ">" "while" "n" "row")}
        {Lisp-Entry "ensure-row-exists" () 628 18 ("1" "+" "ensure-visible-count" "row")}
        {Lisp-Entry "ensure-visible-count" () 632 18 ("add-empty-row" "visible-count" "" "while" "n")}
        {Lisp-Entry "add-empty-row" () 637 26 ("add-row" "root-row" "either" "let" "father" "father:")}
        {Lisp-Entry "row-selected?" () 642 29 ("selection" "=" "row")}
        {Lisp-Entry "row-draw-selected?" () 646 29 ("row-selected?" "row")}
        {Lisp-Entry "get-row-count" () 650 18 ("get-sons" "length" "0" "root-row" "not" "if")}
        {Lisp-Entry "mouse-down" () 661 11 ("set-selection" "get-v" "v->row" "row" "let" "acquire-focus" "view")}
        {Lisp-Entry "double-click" () 667 11 ("get-row" "expand/collapse" "when" "get-v" "v->row" "row" "let" "view")}
        {Lisp-Entry "empty-selection" () 678 29 ()}
        {Lisp-Entry "get-selection" () 682 26 ("selection")}
        {Lisp-Entry "set-selection" () 686 26 ("user-origin?" "call-selection-handler" "generate-event?" "invalidate-selection" "not-null?" "ensure-displayed" "ensure-displayed?" "set!" "old" "let" "selection" "/=" "force?" "or" "when" "sel")}
        {Lisp-Entry "invalidate-selection" () 704 26 ("true" "invalidate-region" "selection-region" "region" "with-closed" "self" "get-delta" "sc" "dv" "dh" "receive" "get-root" "root" "when" "get-player" "player" "let" "sel")}
        {Lisp-Entry "selection-region" () 713 29 ("selection-row-region" "sc" "dv" "dh" "sel")}
        {Lisp-Entry "selection-row-region" () 717 21 ("selection-row-rect" "acquire-delta" "rect:" "Region" "new" "sc" "dv" "dh" "n")}
        {Lisp-Entry "selection-row-rect" () 721 29 ("get-row" "get-rect" "n")}
        {Lisp-Entry "added-update-selection" () 726 29 ("increase!" ">=" "selection" "and" "when" "count" "rank")}
        {Lisp-Entry "removed-update-selection" () 732 29 ("true" "set!" "decrease!" "+" "if" ">=" "false" "selected?" "let" "selection" "not-null?" "when" "count" "rank")}
        {Lisp-Entry "for-each-row" () 748 18 ("row-visible?" "root-row" "get-sons" "for-each" "increase!" "when" "essay" "expanded?" "son-visible?" "get-visible-flag" "and" "let*" "visible?" "row" "dynamic" "function" "recurse" "0" "rank" "letrec" "proc")}
        {Lisp-Entry "for-each-visible-row" () 763 18 ("for-each-visible-row" "not" "increase!" "set!" "neq?" "and" "while" "when" "0" "row-rank" "if" "rank" "root-row" "get-next" "either" "row" "let" "false" "wrap?" "wrap?:" "end" "end:" "start" "start:" "proc")}
        {Lisp-Entry "for-each-visible-descendant" () 775 18 ("end:" "start:" "for-each-visible-row" "when" "get-next" "essay" "end-row" "last-visible-descendant" "last-son" "first-visible-son" "first-son" "let*" "proc" "parent-row")}
        {Lisp-Entry "get-content" () 788 26 ("root-row" "get-sons")}
        {Lisp-Entry "set-content" () 792 26 ("invalidate-view" "layout-scrollee" "update-displayed" "empty-selection" "set-selection" "sons-height" "visible-height" "count-visible" "visible-count" "set!" "invalidate-columns" "car" "set-next" "root-row" "set-sons" "content")}
        {Lisp-Entry "set-subrows" () 804 18 ("visible-height" "visible-count" "last-proper-descendant" "last" "link-rows" "first" "first-son" "get-next" "old-next" "expanded" "get-state" "=" "Axis" "coerce" "essay" "set-sons" "get-row-height" "increase!" "set!" "set-next" "set-previous" "when" "set-level" "set-father" "subrow" "let" "info" "dynamic" "function" "map" "rows" "previous" "1" "get-level" "+" "level" "height" "0" "count" "root-row" "either" "let*" "empty?" "unless" "proc" "seq" "row")}
        {Lisp-Entry "invalidate-columns" () 835 26 ()}
        {Lisp-Entry "expand/collapse" () 844 26 ("collapse" "expanded" "expand" "collapsed" "get-state" "case" "row")}
        {Lisp-Entry "update-row" () 850 29 ("row")}
        {Lisp-Entry "expand" () 854 18 ("row-visible?" "show-rows" "true" "in-expand?" "get-next" "next" "previous" "last-visible-descendant" "last" "first-descendant" "first" "let" "set-state" "expanded" "get-state" "/=" "when" "false" "dynamic?" "row")}
        {Lisp-Entry "invalidate-expand" () 866 29 ("dynamic?" "top" "row")}
        {Lisp-Entry "expand-all" () 870 18 ("get-sons" "expand-all" "for-each" "expand/collapse" "expanded" "get-state" "=" "unless" "dynamic" "function" "with-update-locked" "row")}
        {Lisp-Entry "collapse" () 878 18 ("row-visible?" "last-proper-descendant" "hide-rows" "invalidate-collapse" "row-selected?" "selected?" "get-position" "get-v" "top" "row-rank" "rank" "set-state" "not" "if" "true" "in-collapse?" "first-descendant" "first" "let" "collapsed" "get-state" "/=" "when" "row")}
        {Lisp-Entry "collapse-selection" () 891 29 ("selected?" "rank")}
        {Lisp-Entry "invalidate-collapse" () 895 29 ("row-rect" "invalidate-rect" "when" "selected?" "top" "row" "rank")}
        {Lisp-Entry "collapse-all" () 900 18 ("expand/collapse" "expanded" "get-state" "=" "when" "get-sons" "collapse-all" "for-each" "dynamic" "function" "with-update-locked" "row")}
        {Lisp-Entry "link-rows" () 908 11 ("set-previous" "set-next" "when" "after" "before")}
        {Lisp-Entry "unlink-rows" () 915 11 ("set-next" "set-previous" "link-rows" "get-next" "next" "get-previous" "previous" "let" "last" "first")}
        {Lisp-Entry "ensure-expanded" () 923 18 ("set!" "expand" "collapsed" "get-state" "=" "when" "while" "get-father" "scan" "let" "row")}
        {Lisp-Entry "ensure-expanded-rows" () 931 18 ("ensure-expanded" "for-each" "rows")}
        {Lisp-Entry "set-visibilities" () 941 18 ("get-sons" "set!" "link-rows" "when" "visible?" "row" "dynamic" "function" "for-each" "root-row" "previous" "let" "predicate")}
        {Lisp-Entry "show-rows" () 951 18 ("ensure-row-range-displayed" ">" "layout-scrollee" "false" "erase?:" "Rect" "new" "scroll-view" "invalidate-expand" "get-scrolled-v" "" "1" "added-update-selection" "display-height" "get-width" "display-width" "get-size" "display-size" "get-display" "display" "get-height" "+" "opens" "0" "get-position" "get-v" "either" "top" "row-rank" "rank" "let*" "update-visible" "update-displayed" "get-level" "update-visible-width-incremental" "visible-height" "visible-count" "increase!" "true" "count-visible-size" "width" "height" "count" "receive" "update-locked?" "not" "and" "when" "link-rows" "dynamic?" "in-expand?" "visible?" "next" "previous" "last" "first")}
        {Lisp-Entry "hide-rows" () 978 18 ("layout-scrollee" "false" "erase?:" "Rect" "new" "-" "scroll-view" "invalidate-collapse" "" "collapse-selection" "display-height" "get-width" "display-width" "get-size" "display-size" "get-display" "display" "1" "removed-update-selection" "removed" "get-height" "+" "opens" "get-position" "get-v" "top" "0" "row-rank" "either" "rank" "let*" "update-visible" "update-displayed" "update-locked?" "not" "and" "collapsed" "set-state" "unlink-rows" "get-previous" "previous" "let" "visible-height" "visible-count" "decrease!" "when" "count-visible-size" "width" "height" "count" "receive" "in-collapse?" "visible?" "last" "first")}
        {Lisp-Entry "count-visible-size" () 1006 18 ("values" "set!" ">" "when" "get-effective-width" "w" "row-spacing" "get-effective-height" "+" "increase!" "/=" "and" "while" "width" "height" "0" "count" "get-next" "stop" "essay" "scan" "let" "visible?" "last" "first")}
        {Lisp-Entry "follow" () 1027 11 ("update-displayed" "not" "when" "-" "follow-backward" "" "follow-forward" "0" ">" "cond" "succeeded?" "let" "v")}
        {Lisp-Entry "follow-forward" () 1038 11 ("true" "decrease!" "first-displayed-rank" "get-next" "set!" "increase!" "begin" "" "if" "first-displayed-offset" "-" "remaining" "row-spacing" "first-displayed" "get-height" "+" "height" "let*" "0" ">" "while" "v")}
        {Lisp-Entry "follow-backward" () 1053 11 ("true" "row-spacing" "get-height" "-" "1" "+" "first-displayed-rank" "false" "not" "get-previous" "first-displayed" "set!" "decrease!" "begin" "first-displayed-offset" "" "if" "0" ">" "while" "return" "lambda" "call/ec" "v")}
        {Lisp-Entry "ensure-displayed" () 1070 26 ("ensure-row-displayed" "selection" "not-null?" "when" "rest")}
        {Lisp-Entry "ensure-row-displayed" () 1075 18 ("get-scroll-context" "0" "Point" "new" "scroll-needed" "scroll" "get-bottom" "bottom" "get-top" "top" "get-row" "row" "let*" "n")}
        {Lisp-Entry "ensure-row-range-displayed" () 1082 18 ("get-scroll-context" "0" "Point" "new" "scroll-needed" "scroll" "get-bottom" "bottom" "get-row" "get-top" "top" "let" "to" "from")}
        {Lisp-Entry "ensure-at-end" () 1088 18 ("1" "visible-count" "-" "ensure-row-displayed")}
        {Lisp-Entry "get-scroll-context" () 1092 29 ("cons")}
        {Lisp-Entry "row-top" () 1103 21 ("get-next" "set!" "row-spacing" "get-height" "increase!" "decrease!" ">" "while" "0" "v" "first-row" "row" "let" "n")}
        {Lisp-Entry "row-rect" () 1114 29 ("get-height" "+" "Rect" "new" "get-width" "right" "row-top" "top" "0" "left" "get-row" "row" "let" "n")}
        {Lisp-Entry "row-region" () 1122 11 ("get-row" "get-bounds" "rect:" "Region" "new" "n")}
        {Lisp-Entry "row->v" () 1126 21 ("get-row" "get-top" "r")}
        {Lisp-Entry "v->row" () 1130 21 ("get-next" "set!" "increase!" "" "or" "and" "while" "row-spacing" "get-height" "bottom" "first-displayed-offset" "top" "0" "first-displayed-rank" "rank" "first-row" "row" "+" "if" "-" ">=" "displayed?" "get-scrolled-v" "scrolled" "let*" "first-displayed" "when" "v")}
        {Lisp-Entry "v->row-extended" () 1150 21 ("values" "get-next" "set!" "increase!" "" "or" "and" "while" "row-spacing" "get-height" "bottom" "first-displayed-offset" "top" "0" "first-displayed-rank" "rank" "first-row" "row" "+" "if" "-" ">=" "displayed?" "get-scrolled-v" "scrolled" "let*" "first-displayed" "when" "v")}
        {Lisp-Entry "property-presentation" () 1175 16 ("nextmethod" "else" "background-filler" "top-padding" "left-padding" "row-spacing" "default-row-height" "sons-class" "field-name" "case" "property")}
        {Lisp-Entry "debug-view" () 1192 11 ("Development" "set-%r" "get-row" "row" "let" "when" "v->row" "r" "get-v" "v" "let*" "nextmethod" "view")}
        {Lisp-Entry "describe-view" () 1202 11 ("first-displayed-offset" "first-displayed-rank" "first-displayed" "visible-height" "visible-width" "visible-count" "list" "nextmethod" "append" "pos")}
        {Lisp-Entry "internal-fields" () 1213 18 ("first-displayed-offset" "first-displayed-rank" "first-displayed" "visible-height" "visible-count" "values")}}}})
"Outline-View.follow_Bug"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "doc" "development" "Bugs" "Outline-View.follow_Bug.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "benchmark" () 37 4 ()}
    {Lisp-Entry "A" () 40 7 ("Object")
      {Lisp-Entry "rpt" () 43 11 ("Tester-Error" "new" "signal" "form")}
      {Lisp-Entry "X" () 54 9 ("Object")
        {Lisp-Entry "foo" () 56 31 ()}
        {Lisp-Entry "goo" () 57 16 ()}
        {Lisp-Entry "bar" () 59 17 ("5")}
        {Lisp-Entry "toto" () 61 20 ("bar")}
        {Lisp-Entry "tutu" () 64 20 ("bar" "*" "x")}
        {Lisp-Entry "tata" () 67 20 ("X2")}
        {Lisp-Entry "yuyu" () 70 20 ("bar~self" "list" "bar" "let")}
        {Lisp-Entry "yiyi" () 74 20 ("list" "7" "bar~self" "set!" "bar" "let")}}
      {Lisp-Entry "Y" () 81 9 ("X")
        {Lisp-Entry "foo" () 83 23 ()}
        {Lisp-Entry "bah" () 85 28 ("x")}}
      {Lisp-Entry "Z" () 89 9 ("Y")
        {Lisp-Entry "bah" () 91 13 ("+" "x")}}
      {Lisp-Entry "W" () 95 9 ("X")
        {Lisp-Entry "hoo" () 97 17 ("0" "Cell" "new")}}
      {Lisp-Entry "test-part1" () 100 11 ("X" "get-foo" "=" "get-goo" "error?" "begin" "Z" "Y" "W" "new" "get-hoo" "neq?" "rpt" "assert")}
      {Lisp-Entry "X1" () 114 21 ("X" "new")}
      {Lisp-Entry "X2" () 115 21 ("X" "new")}
      {Lisp-Entry "call-bah" () 118 11 ("bah" "x" "obj")}
      {Lisp-Entry "call-bah2" () 121 11 ("bah" "x" "obj")}
      {Lisp-Entry "test-part2" () 125 11 ("X" "error?" "begin" "call-bah2" "Z" "Y" "new" "call-bah" "yiyi" "yuyu" "equal?" "4" "tata" "tutu" "toto" "7" "6" "set-bar" "X2" "5" "get-bar" "X1" "get-foo" "=" "rpt" "assert")}
      {Lisp-Entry "mm" () 159 13 ("5")}
      {Lisp-Entry "aa" () 162 8 ("2")}
      {Lisp-Entry "f" () 165 11 ("+" "apply" "aa" "list" "rest")}
      {Lisp-Entry "v" () 169 29 ("aa" "list")}
      {Lisp-Entry "I" () 173 9 ("Object")
        {Lisp-Entry "foo" () 176 20 ("aa")}
        {Lisp-Entry "mak" () 180 20 ("J" "new")}
        {Lisp-Entry "J" () 184 11 ("Object")
          {Lisp-Entry "bar" () 187 22 ("v" "6" "5" "4" "apply" "3" "2" "1" "f" "list" "9" "aa" "set!")}}}
      {Lisp-Entry "test-part3" () 192 11 ("6" "9" "mak" "bar" "2" "I" "new" "foo" "list" "=" "rpt" "assert" "7" "mm" "set!")}}})
"Output-Log"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Output-Log.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.utility.Output-Log" () 37 9 ("jazz")
      {Lisp-Entry "Output-Log" () 48 7 ("width:" "title:" "message" "results" "header" "content" "scroller" "name:" "Navigable-Results")
        {Lisp-Entry "external-name" () 62 16 ("output-log" "rest")}
        {Lisp-Entry "palette-icon" () 72 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 77 16 ()}
        {Lisp-Entry "log-line" () 86 18 ("title:" "Tree-Node" "new" "list" "children:" "add-row" "get-tree" "tree" "let" "user-data" "user-data:" "image" "image:" "collapsed" "state" "state:" "father" "father:" "line")}
        {Lisp-Entry "edit-selection" () 96 11 ("acquire-focus" "true" "edit-document" "frame" "user-message" "msg" "line" "file" "bind" "else" "cdr" "edit-child" "car" "pair?" "and" "edit" "Loggable" "is?" "bell" "null?" "cond" "get-row" "get-user-data" "info" "let" "when" "get-single-selection" "selection" "get-tree" "tree" "let*" "forward?")}
        {Lisp-Entry "edit-document" () 115 11 ("true" "set-visible?" "bring-to-front" "false" "visible?:" "selection:" "get-application" "edit-document" "frame" "1" "+" "0" "Cell" "Range" "new" "essay" "selection" "let*" "dynamic" "function" ":wait" "with-cursor" "focus?" "forward?" "line" "file")}}}})
"Overlapped"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Overlapped.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.window.Overlapped" () 37 9 ("jazz")
      {Lisp-Entry "Overlapped" () 45 7 ("View-Player" "View-Player-Class")
        {Lisp-Entry "owner" () 48 12 ("set-owner" "get-owner")}
        {Lisp-Entry "previously-focused-root" () 52 8 ()}
        {Lisp-Entry "get-owner" () 60 18 ("owner")}
        {Lisp-Entry "set-owner" () 64 18 ("owner" "set!" "window")}
        {Lisp-Entry "get-owners" () 73 18 ("get-owners" "cons" "self" "list" "owner" "not" "if")}
        {Lisp-Entry "set-previously-focused-root" () 84 18 ("previously-focused-root" "set!" "root")}
        {Lisp-Entry "reactivate-focus" () 88 18 ("get-player" "acquire-focus" "get-process" "focus-error?" "not" "previously-focused-root" "and" "when")}}}})
"Overlay"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "overlay" "Overlay.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.overlay.Overlay" () 37 9 ("jazz")
      {Lisp-Entry "Overlay" () 45 7 ("Object")
        {Lisp-Entry "draw-overlay" () 48 26 ("height" "width" "dc" "view")}}}})
"P"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "P.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.test.P" () 37 9 ("new" "v" "h" "lambda" "P" "register-literal-constructor" "jazz")
      {Lisp-Entry "P" () 55 7 ("Object")
        {Lisp-Entry "h" () 58 15 ("generate")}
        {Lisp-Entry "v" () 59 15 ("generate")}
        {Lisp-Entry "initialize" () 62 11 ("set-v" "set-h" "nextmethod" "v" "h" "p")}
        {Lisp-Entry "fold-literal" () 68 11 ("get-v" "get-h" "P" "new" "p")}
        {Lisp-Entry "print" () 72 11 ("get-v" "get-h" "format" "detail" "output" "p")}}}})
"Package-Catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "package" "Package-Catalog.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.builder.package.Package-Catalog" () 37 9 ("jazz")
      {Lisp-Entry "Package-Catalog" () 46 7 ("Indexed-Catalog")}}})
"Package-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Package-Doc.fusion"} {Time 128360669960000000L}
    {Lisp-Entry "jazz.doc.doc.Package-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Package-Doc" () 45 7 ("Category-Doc")
        {Lisp-Entry "generate-html" () 48 11 ("children" "generate-html" "Category-Doc" "is?" "when" "child" "dynamic" "function" "for-each" "nextmethod")}
        {Lisp-Entry "print-children-html" () 56 11 ("print-categories-index" "children" "Category-Doc" "collect-type" "categories" "let" "printer" "formatter")}
        {Lisp-Entry "print-categories-index" () 61 11 ("get-name" "name" "let" "child" "dynamic" "function" "for-each" "format" "when" "printer" "formatter" "categories" "title")}
        {Lisp-Entry "get-class-image" () 80 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" () 84 11 ("extends" "package-name")}}}})
"Package-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Package-Entry.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.entry.Package-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Package-Entry" () 45 7 ("Java-Entry")
        {Lisp-Entry "present-name" () 48 11 ("qualified" "join")}
        {Lisp-Entry "get-image" () 52 11 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" () 61 11 ("references" "update-index" "key" "dynamic" "function" "for-each" "references-index" "definitions-index")}}}})
"Package-Reference"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Package-Reference.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Package-Reference" () 37 9 ("jazz")
      {Lisp-Entry "Package-Reference" () 40 7 ("Declaration-Reference")}}})
"Pad-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Pad-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Pad-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Pad-Preferences" () 46 7 ("Bitmap-Resource" "icon:" "title:" "Figure-Preferences")
        {Lisp-Entry "apply-preferences" () 58 11 ("parent:" "Pad-Window" "new" "apply-to" "assert" "parent")}
        {Lisp-Entry "apply-to" () 63 18 ("layout-window" "get-children" "get-guest" "host-activate" "View-Host" "is?" "when" "child" "children" "apply-preferences" "pref" "dynamic" "function" "for-each" "get-visible?" "set-visible?" "location" "set-location" "remove-children" "pad")}
        {Lisp-Entry "get-class-image" () 83 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" () 87 11 ("location")}
        {Lisp-Entry "get-addable-classes" () 91 11 ("Stage-Preferences" "Docked-Preferences" "Pad-Preferences" "Splitter-Preferences" "list")}}}})
"Pad-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Pad-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Pad-View" () 37 9 ("jazz")
      {Lisp-Entry "Pad-View" () 45 7 ("View")
        {Lisp-Entry "size-change" () 53 11 ("layout-view" "nextmethod" "size")}
        {Lisp-Entry "layout" () 58 11 ("false" "/=" "children" "true" "selection" "get-location" "=" "when" "for-each" "set-size" "0" "Point" "set-position" "set-visible?" "visible?" "child" "dynamic" "function" "proc" "get-size" "size" "let*")}
        {Lisp-Entry "remove-children" () 80 18 ("children" "get-toplevel" "set-parent" "false" "set-visible?" "child" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-selection" () 92 18 ("children" "selection" "get-location" "=" "child" "dynamic" "function" "find-if")}
        {Lisp-Entry "set-selection" () 98 18 ("layout-view" "children" "selection" "eq?" "if" "set-location" "child" "dynamic" "function" "for-each" "target")}
        {Lisp-Entry "select-next" () 105 18 ("acquire-focus" "set-selection" "length" "1" "+" "modulo" "element" "next" "position" "return:" "children" "find" "rank" "get-selection" "selection" "let*")}}}})
"Pad-Window"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Pad-Window.fusion"} {Time 128368664560000000L}
    {Lisp-Entry "jazz.ui.window.Pad-Window" () 37 9 ("jazz")
      {Lisp-Entry "Pad-Window" () 47 7 ("Window")
        {Lisp-Entry "size-change" () 55 11 ("layout-window" "nextmethod" "size")}
        {Lisp-Entry "layout" () 60 11 ("false" "/=" "children" "true" "selection" "get-location" "=" "when" "for-each" "set-size" "0" "Point" "set-position" "set-visible?" "visible?" "child" "dynamic" "function" "proc" "get-size" "size" "let*")}
        {Lisp-Entry "remove-children" () 83 18 ("children" "get-guest" "host-deactivate" "View-Host" "is?" "when" "get-toplevel" "set-parent" "false" "set-visible?" "child" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-selection" () 97 18 ("children" "selection" "get-location" "=" "child" "dynamic" "function" "find-if")}
        {Lisp-Entry "set-selection" () 103 18 ("layout-window" "children" "selection" "eq?" "if" "set-location" "child" "dynamic" "function" "for-each" "target")}
        {Lisp-Entry "select-next" () 110 18 ("acquire-focus" "set-selection" "length" "1" "+" "modulo" "element" "next" "position" "return:" "children" "find" "rank" "get-selection" "selection" "let*")}}}})
"Page-Content"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Content.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Content" () 37 9 ("jazz")
      {Lisp-Entry "Page-Content" () 47 7 ("White" "name:" "Color" "background:" "View")}}})
"Page-Document"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Document.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Document" () 37 9 ("jazz")
      {Lisp-Entry "Page-Document" () 47 7 ("0" "Rect" "layout-insets:" "border" "layout-type:" "White" "name:" "Color" "background:" "Layout-View")}}})
"Page-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Editor.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.print.Page-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Page-Editor" () 50 7 ("shadow" "border-type:" "Dimension" "size:" "0" "Point" "position:" "border" "Dark" "name:" "Color" "background:" "center" "layout-type:" "Layout-View")
        {Lisp-Entry "client" () 53 12 ("set-client" "get-client")}
        {Lisp-Entry "frame-workspaces" () 66 11 ("page")}
        {Lisp-Entry "find-page-setup" () 75 11 ("border" "locate" "first-child")}
        {Lisp-Entry "on-print" () 84 11 ("client" "print-document" "evt")}
        {Lisp-Entry "on-print-preview" () 88 11 ("true" ":from-layout?" "client" "print-preview" "evt")}
        {Lisp-Entry "on-page-setup" () 92 11 ("page-setup" "evt")}
        {Lisp-Entry "on-layout" () 96 11 ("update-page" "child" "set-active-branch" "save-header/footer" "find-page-setup" "page-setup" ":layout" "get-property" "layout" "let" "evt")}
        {Lisp-Entry "on-fit" () 104 11 ("set-fit" ":fit" "get-property" "fit" "let" "evt")}
        {Lisp-Entry "set-fit" () 109 11 ("set-property" "client" "get-page-setup-designer" "designer" "find-page-setup" "page-setup" "let" "fit")}
        {Lisp-Entry "on-close" () 115 11 ("close-workspace" "evt")}
        {Lisp-Entry "escape-press" () 119 11 ("close-workspace" "key")}
        {Lisp-Entry "activate-page" () 128 21 ("update-page" "setup-defaults" "setup-branches")}
        {Lisp-Entry "setup-branches" () 136 11 ("child" "set-active-branch" "get-active-branch" "null?" "when" "file" "printer" "setup-branch" "client" "get-page-setup-designer" "designer" "find-page-setup" "page-setup" "let")}
        {Lisp-Entry "setup-branch" () 146 11 ("install" "action:" "false" "textual?:" "Form" "client-form:" "set-property" "set-name" "branch:" "add-child" "parent:" "Branch" "new" "branch" "let" "find-component" "null?" "when" "name" "designer" "page-setup")}
        {Lisp-Entry "setup-defaults" () 155 11 ()}
        {Lisp-Entry "update-page" () 159 11 ("update-border" "update-fit" "update-branch" "find-page-setup" "page-setup" "Page-Toolbar" "get-workspace-splitter" "find-palette" "toolbar" "get-toplevel" "toplevel" "let*")}
        {Lisp-Entry "update-branch" () 169 11 ("true" "locate" "set-selected?" "get-active-branch-name" "name" "let" "page-setup" "toolbar")}
        {Lisp-Entry "update-fit" () 174 11 ("true" "locate" "set-selected?" "get-fit" "fit" "let" "page-setup" "toolbar")}
        {Lisp-Entry "update-border" () 179 11 ("layout-view" "4" "Dimension" "get-size" "+" "set-size" "locate" "border" "let" "page-setup")}
        {Lisp-Entry "close-workspace" () 190 11 ("get-previous" "apply-preferences" "close" "restore-client" "save-header/footer" "selected-workspace" "workspace" "get-player" "frame" "let")}
        {Lisp-Entry "get-client" () 204 18 ("client")}
        {Lisp-Entry "set-client" () 208 18 ("set-parent" "4" "Dimension" "get-size" "+" "set-size" "printer" "get-page-setup-for" "page-setup" "locate" "border" "let" "client" "set!" "value")}
        {Lisp-Entry "restore-client" () 216 21 ("set-parent" "find-page-setup" "page-setup" "let")}
        {Lisp-Entry "page-setup" () 226 11 ("update-page" "subtract-rects" "symbolize-orientation" "layout-insets" "set-property" ":paper-source" ":paper-size" "numerize-orientation" "orientation:" "add-rects" "scale" ":margins" "Page-Setup-Dialog" "get-modal" "size" "receive" "client" "get-page-setup-designer" "designer" "setup-ratio" "/" "dialog-ratio" "margins" "get-layout-insets" "min-margins" "get-printable" "printable" "get-paper-source" "paper-source" "get-paper-size" "paper-size" "get-orientation" "orientation" "get-resolution" "resolution" "find-page-setup" "page-setup" "let*")}
        {Lisp-Entry "numerize-orientation" () 248 11 ("DMORIENT_LANDSCAPE" "landscape" "DMORIENT_PORTRAIT" "portrait" "case" "numerize-orientation" "unimplemented" "orientation")}
        {Lisp-Entry "symbolize-orientation" () 256 11 ("landscape" "DMORIENT_LANDSCAPE" "portrait" "DMORIENT_PORTRAIT" "ecase" "symbolize-orientation" "unimplemented" "orientation")}
        {Lisp-Entry "save-header/footer" () 269 11 ("get-content" "text-content:" "set-property" "get-footer" "footer" "get-header" "header" "when" "client" "get-page-setup-designer" "designer" "find-page-setup" "page-setup" "let")}}}})
"Page-Footer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Footer.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Footer" () 37 9 ("jazz")
      {Lisp-Entry "Page-Footer" () 46 7 ("Page-Text-View")
        {Lisp-Entry "get-drawing-background" () 54 11 ("Light-Green" "name:" "Color" "nextmethod" ":printing?" "getf" "if" "context")}}}})
"Page-Header"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Header.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Header" () 37 9 ("jazz")
      {Lisp-Entry "Page-Header" () 46 7 ("Page-Text-View")
        {Lisp-Entry "get-drawing-background" () 54 11 ("Light-Yellow" "name:" "Color" "nextmethod" ":printing?" "getf" "if" "context")}}}})
"Page-Printable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Printable.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Printable" () 37 9 ("jazz")
      {Lisp-Entry "Page-Printable" () 46 7 ("Layout-View")
        {Lisp-Entry "get-drawing-background" () 54 11 ("Light-Purple" "name:" "Color" "nextmethod" ":printing?" "getf" "if" "context")}}}})
"Page-Setup"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Setup.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.print.Page-Setup" () 37 9 ("jazz")
      {Lisp-Entry "Page-Setup" () 47 7 ("south" "footer" "center" "content" "north" "location:" "header" "document" "printable" "White" "name:" "Color" "background:" "Rect" "layout-insets:" "fill" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "fit" () 50 12 ("generate" "accessors" "width")}
        {Lisp-Entry "resolution" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "orientation" () 52 12 ("generate" "accessors" "portrait")}
        {Lisp-Entry "paper-size" () 53 12 ("generate" "accessors" "DMPAPER_LETTER")}
        {Lisp-Entry "paper-source" () 54 12 ("generate" "accessors" "DMBIN_AUTO")}
        {Lisp-Entry "get-printable" () 71 18 ("printable" "locate")}
        {Lisp-Entry "get-document" () 80 18 ("document" "locate")}
        {Lisp-Entry "get-header" () 89 18 ("header" "locate")}
        {Lisp-Entry "get-content" () 98 18 ("content" "locate")}
        {Lisp-Entry "get-content-rect" () 102 18 ("get-bounds" "acquire" "get-content" "content" "let")}
        {Lisp-Entry "scale-content" () 107 18 ("resolution" "fit" "fit-rects" "*" "/" "get-content-rect" "content-rect" "get-print-area" "area" "let" "dest-resolution" "client")}
        {Lisp-Entry "get-footer" () 118 18 ("footer" "locate")}
        {Lisp-Entry "wrap-header/footer" () 127 18 ("get-footer" "get-header" "wrap-content" "context")}
        {Lisp-Entry "get-drawing-background" () 137 11 ("blue:" "green:" "red:" "Color" "nextmethod" ":printing?" "getf" "if" "context")}}}})
"Page-Setup-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Setup-Dialog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Setup-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "Page-Setup-Dialog" () 46 7 ("Dialog")
        {Lisp-Entry "get-modal" () 50 16 ("error" "throw-cancel" "=" "CommDlgExtendedError" "code" "GlobalUnlock" "rtMinMargin" "RECT->rect" "ptPaperSize" "POINT->dimension" "values" "prog1" "coerce" "GlobalLock" "pointer" "get" "handle" "let*" "PageSetupDlg" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "left" "rtMargin" "when" "PSD_DISABLEPRINTER" "0" "PSD_MARGINS" "if" "PSD_INTHOUSANDTHSOFINCHES" "Flags" "record-address" "hDevMode" "get-application" "get-toplevel" "get-handle" "hwndOwner" "lStructSize" "DM_DEFAULTSOURCE" "DM_PAPERSIZE" "DM_ORIENTATION" "bit-or" "dmFields" "dmDefaultSource" "dmPaperSize" "dmOrientation" "size-of" "dmSize" "set" "DEVMODE" "devmode" "PAGESETUPDLG" "new" "rec" "let" "close-all-popups" "paper-source" "paper-source:" "paper-size" "paper-size:" "orientation" "orientation:" "margins" "margins:")}}}})
"Page-Status"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Status.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Status" () 37 9 ("jazz")
      {Lisp-Entry "Page-Status" () 47 7 ("center" "location:" "Dimension" "size:" "message" "name:" "Status-Toolbar")
        {Lisp-Entry "palette-class" () 61 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 66 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 71 16 ()}}}})
"Page-Text-Palette"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Text-Palette.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Text-Palette" () 37 9 ("jazz")
      {Lisp-Entry "Page-Text-Palette" () 47 7 ("on-insert-time" "insert-time" "on-insert-date" "insert-date" "on-insert-count" "insert-count" "on-insert-no" "insert-no" "on-insert-filename" ":focus" "Event-Handler" "action-handler:" "enabled?:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "Dimension" "size:" "insert-filename" "insert-table" "table-separator" "insert-image" "image-separator" "toggle-ruler" "ruler-separator" "visible?:" "style-border" "name:" "Text-Palette")
        {Lisp-Entry "enable-buttons" () 67 11 ("insert-time" "insert-date" "insert-count" "insert-no" "insert-filename" "locate" "set-enabled?" "nextmethod" "enabled?")}}}})
"Page-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.print.Page-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Page-Text-View" () 46 7 ("Plain" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "0" "left-padding:" "Formatted-Text-View")
        {Lisp-Entry "scrollee-height" () 53 11 ("visible-height" "top-padding" "+")}
        {Lisp-Entry "layout-scrollee-content" () 57 11 ("parent" "layout-view" "nextmethod")}
        {Lisp-Entry "get-context-menu" () 62 11 ("new-text-context-menu")}
        {Lisp-Entry "on-insert-filename" () 71 11 ("filename" "insert-info" "evt")}
        {Lisp-Entry "on-insert-no" () 75 11 ("no" "insert-info" "evt")}
        {Lisp-Entry "on-insert-count" () 79 11 ("count" "insert-info" "evt")}
        {Lisp-Entry "on-insert-date" () 83 11 ("date" "insert-info" "evt")}
        {Lisp-Entry "on-insert-time" () 87 11 ("time" "insert-info" "evt")}
        {Lisp-Entry "insert-info" () 96 11 ("insert-styled" ":what" "Default" "base:" "Info-Style" "new" "style" "let" "what")}}}})
"Page-Toolbar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Toolbar.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Toolbar" () 37 9 ("jazz")
      {Lisp-Entry "Page-Toolbar" () 48 7 ("on-close" "close" "height" "width" ":fit" "on-fit" "selected?:" "tooltip?:" ":icons" "portfolio:" "both" "on-page-setup" "page-setup" "file" ":layout" "on-layout" "title:" "printer" "0" "Dimension" "size:" "active-separator" "on-print-preview" "print-preview" "on-print" ":document" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" "tooltip-text:" "print" "name:" "Toolbar")
        {Lisp-Entry "install" () 68 11 ("file" "printer" "false" "active-separator" "locate" "set-visible?" "nextmethod" "rest")}
        {Lisp-Entry "client-activate" () 76 11 ("activate-page" "when" "Page-Editor" "find-guest" "editor" "get-stage" "stage" "let*")}
        {Lisp-Entry "palette-class" () 89 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 94 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 99 16 ()}}}})
"Page-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Page-Workspace.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Page-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Page-Workspace" () 46 7 ("Page-Text-Palette" "status" "Page-Status" "line" "second" "text" "Page-Toolbar" "model-name:" "first" "location:" "vert" "orientation:" "split" "state:" "division:" "edge" "separator:" "toolbar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Workspace-Preferences")
        {Lisp-Entry "previous" () 49 12 ("generate" "accessors")}}}})
"Paint-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Paint-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.event.Paint-Event" () 37 9 ("jazz")
      {Lisp-Entry "Paint-Event" () 44 7 ("Event")
        {Lisp-Entry "dc" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("dc~self" "set!" "nextmethod" "dc" "sender" "kind")}
        {Lisp-Entry "get-dc" () 55 18 ("dc")}
        {Lisp-Entry "get-hdc" () 59 18 ("dc" "get-hdc")}}}})
"Palette"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Palette.fusion"} {Time 128368664580000000L}
    {Lisp-Entry "jazz.ui.window.Palette" () 37 9 ("jazz")
      {Lisp-Entry "Palette" () 48 7 ("Overlapped")
        {Lisp-Entry "initialize" () 57 16 ("register-class" "nextmethod")}
        {Lisp-Entry "window-class" () 63 16 ()}
        {Lisp-Entry "default-parent" () 67 11 ("get-toplevel")}
        {Lisp-Entry "window-style" () 72 11 ("WS_CLIPCHILDREN" "WS_POPUP" "bit-or" "rest")}
        {Lisp-Entry "window-ex-style" () 77 11 ("WS_EX_TOOLWINDOW" "rest")}
        {Lisp-Entry "on-activate-palette" () 86 11 ("self" "parent" "send-child-to-front")}
        {Lisp-Entry "on-deactivate-palette" () 90 11 ()}}}})
"Palette-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Palette-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Palette-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Palette-Preferences" () 46 7 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "find-client" () 58 11 ("get-name" "autoload" "get-toplevel" "find-host")}
        {Lisp-Entry "apply-preferences" () 67 11 ("true" "set-visible?" "client-activate" "nextmethod" "client")}}}})
"Palette-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Palette-Root.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Palette-Root" () 37 9 ("jazz")
      {Lisp-Entry "Palette-Root" () 50 7 ("on-close" "close" "on-maximize" "maximize" "on-minimize" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "type:" "minimize" "name:" "Caption-Root")
        {Lisp-Entry "active?" () 53 8 ("false")}
        {Lisp-Entry "dragging?" () 54 8 ("false")}
        {Lisp-Entry "current-part" () 55 8 ()}
        {Lisp-Entry "old-position" () 56 8 ()}
        {Lisp-Entry "minimize-rect" () 71 11 ("2" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "maximize-rect" () 75 11 ("2" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "close-rect" () 79 11 ("2" "+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "size-change" () 88 11 ("4" "Rect" "insets:" "invalidate-border" "invalidate-caption" "nextmethod" "size")}
        {Lisp-Entry "on-minimize" () 94 11 ("on-minimize" "unimplemented" "evt")}
        {Lisp-Entry "on-maximize" () 98 11 ("on-maximize" "unimplemented" "evt")}
        {Lisp-Entry "on-close" () 102 11 ("player" "hide" "evt")}
        {Lisp-Entry "activate-palette" () 111 18 ("invalidate-caption" "true" "set!" "active?" "unless")}
        {Lisp-Entry "deactivate-palette" () 117 18 ("invalidate-caption" "false" "set!" "active?" "when")}
        {Lisp-Entry "layout" () 128 11 ("get-height" "8" "get-width" "Dimension" "new" "set-size" "Point" "set-position" "get-content" "content" "let" "layout-buttons" "get-right" "-" "right" "4" "top" "get-bounds" "bounds" "let*")}
        {Lisp-Entry "layout-buttons" () 138 11 ("close-rect" "close" "maximize-rect" "maximize" "minimize-rect" "minimize" "locate" "set-rect" "get-right" "-" "right" "get-bounds" "bounds" "top" "buttons-border" "border" "let*")}
        {Lisp-Entry "buttons-border" () 148 29 ("0" "4" "caption-visible?" "if")}
        {Lisp-Entry "invalidate-caption" () 157 11 ("get-width" "-" "4" "Rect" "new" "invalidate-rect")}
        {Lisp-Entry "caption-rect" () 166 11 ("get-width" "-" "4" "Rect" "new")}
        {Lisp-Entry "caption-icon" () 170 11 ()}
        {Lisp-Entry "caption-title" () 174 11 ("player" "get-window-title")}
        {Lisp-Entry "caption-focused?" () 178 11 ("true")}
        {Lisp-Entry "caption-visible?" () 182 11 ("true")}
        {Lisp-Entry "draw" () 191 11 ("draw-caption" "rectangle" "edges:" "outer:" "raised" "inner:" "draw-edge" "get-right" "-" "4" "Rect" "new" "caption" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "title-offset" () 198 11 ("3" "Point")}
        {Lisp-Entry "cursor-update" () 207 11 ("get-resize-cursor" ":arrow" "set-cursor" "null?" "if" "get-size" "find-resize-part" "part" "let" "pos")}
        {Lisp-Entry "mouse-down" () 219 11 ("acquire-capture" "to-desktop" "old-position" "current-part" "true" "dragging?" "set!" "or" "when" "get-size" "find-resize-part" "part" "send-to-back" "control-down?" "dock-to" "pick-figure" "unimplemented" "hide" "get-player" "player" "alt-down?" "and" "if" "caption-rect" "in-rect?" "in-caption?" "let" "pos")}
        {Lisp-Entry "drag-move" () 237 11 ("set!" "get-toplevel" "update-window" "size-window" "dheight" "dwidth" "dynamic" "function" "size-client" "player" "move-window" "current-part" "null?" "if" "get-v" "dv" "get-h" "dh" "old-position" "-" "delta" "to-desktop" "let*" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" () 254 11 ("false" "set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "context-menu" () 260 11 ("Palette-Menu" "new" "track-popup-menu" "pos")}
        {Lisp-Entry "dock-palette" () 269 11 ("dock-feedback" "feedback:" "toplevel" ":include" "dock-to" "pick-figure" "unimplemented")}
        {Lisp-Entry "dock-feedback" () 277 11 ("figure-rect" "self" "set-feedback-rect" "pos" "figure" "picker")}
        {Lisp-Entry "figure-rect" () 283 16 ("get-bounds" "get-parent" "acquire" "get-root" "root" "get-display" "display" "get-player" "player" "let" "View" "is?" "when" "figure" "picker")}
        {Lisp-Entry "dock-to" () 291 11 ("set-selection" "set-guest" "set-title" "parent:" "Host-Docked" "new" "new-host" "close" "unanchor-guest" "set-parent" "get-title" "title" "guest" "player" "let*" "null?" "Pad-Window" "find-ascendant" "to-pad" "get-guest" "to-guest" "bell" "View-Host" "is-not?" "if" "get-player" "to-player" "let" "pos" "to-view" "position" "window")}}
      {Lisp-Entry "Palette-Menu" () 316 7 ("on-dock" "form:" "Event-Handler" "action-handler:" "title:" "dock" "name:" "Context-Menu")
        {Lisp-Entry "on-dock" () 324 11 ("dock-palette" "evt")}}}})
"Paragraph"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Paragraph.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Paragraph" () 37 9 ("jazz")
      {Lisp-Entry "Paragraph" () 46 7 ("Outline-Row")
        {Lisp-Entry "format" () 49 18 ("generate")}
        {Lisp-Entry "string" () 50 18 ("generate")}
        {Lisp-Entry "runs" () 51 18 ("generate")}
        {Lisp-Entry "lines" () 52 18 ("generate")}
        {Lisp-Entry "walk-state" () 53 18 ("generate")}
        {Lisp-Entry "print" () 56 11 ("string" "write" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "set-size" () 64 11 ("size" "set!" "sz")}
        {Lisp-Entry "get-length" () 73 18 ("string" "length")}
        {Lisp-Entry "paragraph-left" () 77 18 ("0" "format" "get-left-margin" "either" "position" "get-h" "+")}
        {Lisp-Entry "paragraph-top" () 81 18 ("position" "get-v")}
        {Lisp-Entry "compute-width" () 90 18 ("runs" "compute-width" "increase!" "run" "dynamic" "function" "for-each" "0" "format" "get-left-margin" "either" "width" "let")}
        {Lisp-Entry "range-region" () 104 21 ("or" "combine!" "self" "if" "range-region" "sub" "with-closed" "limit" "dynamic" "function" "for-each-range" "region" "w" "e" "col->text" "s" "else" "offset-rect" "offset" "get-bottom" "get-top" "-" "right" "false" "col->view" "get-h" "beginning" "lines" "last" "line" "let*" "acquire-delta" "rect:" "Region" "get-height" "+" "Rect" "new" "rect" "with" "not" "=" "and" "cond" "size" "get-width" "width" "paragraph-top" "top" "paragraph-left" "left" "string" "length" "re" "0" "either" "rs" "let" "sc" "dv" "dh" "end" "start" "left-padding")}
        {Lisp-Entry "for-each-range" () 135 11 ("else" "cond" "get-length" "len" "line" "let*" "to" "from" "n" "for" "loop" "limit" "beginning" "let" "get-col" "get-line" "get-row" "=" "if" "/=" "when" "proc" "ignored" "end" "start")}
        {Lisp-Entry "get-line" () 154 18 ("lines" "element" "n")}
        {Lisp-Entry "get-line-at" () 158 18 ("col->text" "get-row" "get-line" "col")}
        {Lisp-Entry "get-run" () 167 18 ("" ">" "and" "when" "limit" "offset" "run" "dynamic" "function" "runs" "for-each-run" "return" "lambda" "call/ec" "col")}
        {Lisp-Entry "first-run" () 177 18 ("runs" "car")}
        {Lisp-Entry "range-runs" () 181 21 ("get-output" "right" "left" "over" "put" "inside" "case" "limit" "offset" "where" "for-each-range-run" "get-style" "subseq!" "Run" "e" "s" "run" "dynamic" "function" "make" "List-Factory" "new" "fact" "string" "length" "either" "let" "end" "start")}
        {Lisp-Entry "for-each-run" () 201 11 ("set!" "+" "limit" "get-length" "len" "let*" "run" "dynamic" "function" "for-each" "0" "offset" "let" "proc" "runs")}
        {Lisp-Entry "for-each-range-run" () 219 11 ("right" "else" "left" "over" ">" "inside" "and" "outside" ">=" "" "or" "cond" "limit" "offset" "run" "dynamic" "function" "runs" "for-each-run" "proc" "end" "start")}
        {Lisp-Entry "set-style" () 242 21 ("s" "dynamic" "function" "modify-style" "style" "end" "start")}
        {Lisp-Entry "set-text-alignment" () 248 21 ("set-alignment" "extend" "let" "style" "dynamic" "function" "modify-style" "alignment" "end" "start")}
        {Lisp-Entry "set-text-font" () 256 21 ("set-font" "extend" "let" "style" "dynamic" "function" "modify-style" "font" "end" "start")}
        {Lisp-Entry "set-text-color" () 264 21 ("set-color" "extend" "let" "style" "dynamic" "function" "modify-style" "color" "end" "start")}
        {Lisp-Entry "set-highlight-color" () 272 21 ("set-highlight" "extend" "let" "style" "dynamic" "function" "modify-style" "color" "end" "start")}
        {Lisp-Entry "set-font-name" () 280 21 ("set-font" "get-font" "extend-font-name" "font" "extend" "let*" "font:" "supports?" "when" "style" "dynamic" "function" "modify-style" "name" "end" "start")}
        {Lisp-Entry "set-point-size" () 290 21 ("set-font" "get-font" "extend-point-size" "font" "extend" "let*" "font:" "supports?" "when" "style" "dynamic" "function" "modify-style" "size" "end" "start")}
        {Lisp-Entry "toggle-bold" () 300 21 ("set-font" "get-font" "toggle-bold" "font" "extend" "let*" "style" "dynamic" "function" "modify-style" "end" "start")}
        {Lisp-Entry "toggle-italic" () 309 21 ("set-font" "get-font" "toggle-italic" "font" "extend" "let*" "style" "dynamic" "function" "modify-style" "end" "start")}
        {Lisp-Entry "toggle-underline" () 318 21 ("set-font" "get-font" "toggle-underline" "font" "extend" "let*" "style" "dynamic" "function" "modify-style" "end" "start")}
        {Lisp-Entry "modify-style" () 327 11 ("get-output" "coalesce-runs" "runs" "set!" "right" "left" "over" "inside" "put" "outside" "case" "limit" "offset" "where" "for-each-range-run" "intern-style" "new-style" "style" "make" "get-style" "subseq!" "Run" "e" "s" "run" "dynamic" "function" "split" "List-Factory" "new" "fact" "string" "length" "0" "either" "parent" "text" "let*" "proc" "end" "start")}
        {Lisp-Entry "remove-coloring" () 360 21 ("runs" "true" "set!" "set-style" "get-color" "Text-Style" "is?" "and" "when" "get-style" "style" "run" "dynamic" "function" "for-each" "false" "modified?" "parent" "text" "let" "default-style")}
        {Lisp-Entry "coalesce-runs" () 372 11 ("set-cdr!" "length" "get-string" "grow-subseq!" "set!" "propagate?" "not" "neq?" "or" "car" "get-style" "previous-style" "not-null?" "while" "cdr" "scan" "previous" "let" "null?" "if" "runs")}
        {Lisp-Entry "flatten" () 392 21 ("get-height" "row-height" "list" "lines" "set!" "0" "runs" "parent" "Line" "new" "line" "let")}
        {Lisp-Entry "wrap" () 398 21 ("+" "row-height" "lines~self" "wrap" "get-length" "increase!" "set!" "reset" "height-update" "for-each" "get-height" "height" "Line" "line" "tail" "justify" "center" "centered" "case" "line-left" "get-output" "runs" "right" "break-line" "put" "run" "dynamic" "function" "place" "lruns" "List-Factory" "new" "lines" "get-tab-stops" "tabs" "top" "left" "get-paragraph-spacing" "spacing" "get-left-margin" "either" "margin" "format" "get-justification" "justification" "offset" "0" "rank" "parent" "text" "let*" "width" "context")}
        {Lisp-Entry "Bullet-Outside" () 439 14 ("Blue" "name:" "Color")}
        {Lisp-Entry "Bullet-Inside" () 442 14 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "draw" () 446 11 ("lines" "get-height" "increase!" "draw-line" "line" "dynamic" "function" "for-each" "draw-bullet" "get-bulleted?" "when" "v" "h" "0" "format" "get-left-margin" "either" "left" "get-tab-stops" "tab-stops" "parent" "text" "let*" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-bullet" () 460 11 ("Rect" "new" "ellipse" "7" "set!" "8" "=" "when" "1" "2" "-" "/" "+" "vert" "Bullet-Inside" "get-bullet-inside" "inside" "Bullet-Outside" "format" "get-bullet-outside" "either" "outside" "percent" "round" "size" "lines" "car" "get-height" "height" "let*" "left" "v" "h" "dc")}
        {Lisp-Entry "replace-range" () 477 21 ("append!" "coalesce-runs" "runs" "set-string" "limit" "offset" "run" "dynamic" "function" "for-each-run" "list" ">" "replacement-list" "subseq!" "Run" "new" "replacement" "replace-subseq!" "set!" "Default" "get-style" "find-propagatable-style" "not-null?" "if" "style" "get-length" "after" "0" "range-runs" "before" "-" "delta" "+" "new-end" "string" "either" "length" "inserted" "parent" "text" "let*" "str" "end" "start")}
        {Lisp-Entry "replace-runs" () 498 21 ("append!" "coalesce-runs" "runs" "self" "get-view" "set-parent" "View-Style" "is?" "when" "get-style" "style" "let" "subseq!" "set-string" "limit" "offset" "run" "dynamic" "function" "for-each-run" "replace-subseq!" "set!" "get-length" "after" "0" "range-runs" "before" "-" "delta" "+" "new-end" "string" "either" "length" "inserted" "runs->str" "str" "let*" "replacement" "end" "start")}
        {Lisp-Entry "find-propagatable-style" () 522 11 ("parent" "get-default-style" "propagate?" "when" "get-style" "style" "let" "run" "dynamic" "function" "for-each-reversed" "return" "lambda" "call/ec" "runs")}
        {Lisp-Entry "replace-beginning" () 533 21 ("0" "replace-runs" "runs")}
        {Lisp-Entry "replace-ending" () 537 21 ("replace-runs" "string" "length" "len" "let" "runs")}
        {Lisp-Entry "runs->str" () 542 11 ("get-output" "get-string" "display" "run" "dynamic" "function" "for-each" "String-Printer" "new" "printer" "let" "runs")}
        {Lisp-Entry "view->col" () 556 21 ("get-length" "lines" "get-offset" "+" "when" "view->col" "col" "line" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "get-v" "0" "format" "get-left-margin" "either" "get-h" "-" "Point" "new" "let" "view")}
        {Lisp-Entry "col->view" () 568 21 ("get-v" "get-h" "paragraph-left" "+" "Point" "new" "when" "get-offset" "-" "col->view" "view" "neq?" "strict?" "let*" "line" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "lines" "last" "let" "col")}
        {Lisp-Entry "col->text" () 580 21 ("get-length" "get-rank" "Cell" "new" "lines" "set!" "when" "col->text" "text" "line" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "last" "let" "col")}
        {Lisp-Entry "text->col" () 593 21 ("text")}
        {Lisp-Entry "view->text" () 598 21 ("view->col" "col->text" "view")}
        {Lisp-Entry "text->view" () 603 21 ("text->col" "col->view" "text")}}}})
"Parse-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exception" "Parse-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.exception.Parse-Error" () 37 9 ("jazz")
      {Lisp-Entry "Parse-Error" () 44 7 ("Error")
        {Lisp-Entry "source" () 47 8 ()}
        {Lisp-Entry "start" () 48 8 ()}
        {Lisp-Entry "end" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("end~self" "start~self" "source~self" "set!" "nextmethod" "apply" "others" "end" "start" "source" "bind-keywords" "rest")}
        {Lisp-Entry "get-source" () 65 18 ("source")}
        {Lisp-Entry "get-start" () 69 18 ("start")}
        {Lisp-Entry "get-end" () 73 18 ("end")}}}})
"Password-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Password-Dialog.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.dialog.Password-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "Password-Dialog" () 46 7 ("prefix" "name:" "title:" "String-Request")}}})
"Password-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Password-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Password-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Password-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "string?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}}}})
"Password-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Password-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Password-Row" () 37 9 ("jazz")
      {Lisp-Entry "Password-Row" () 48 7 ("String-Row")
        {Lisp-Entry "present" () 56 11 ("nextmethod" "null?" "if" "value")}
        {Lisp-Entry "editor-class" () 67 11 ("Password-Text-View")}
        {Lisp-Entry "set-edited-value" () 71 11 ("either" "editor" "set-string-content" "value")}}
      {Lisp-Entry "Password-Text-View" () 80 7 ("monospace?:" "underline?:" "italic?:" "bold?:" "color:" "9" "point-size:" "font-name:" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Value-Text-View")
        {Lisp-Entry "copy-selection" () 87 11 ("bell")}
        {Lisp-Entry "draw-outline" () 91 11 ("draw-caret" "draw-password" "draw-selection" "unless" ":printing?" "getf" "printing?" "bottom" "top" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "update-rect" "update" "context" "dc")}
        {Lisp-Entry "draw-password" () 102 11 ("draw-text" "Black" "name:" "Color" "set-text-color" "set-font" "-" "get-v" "+" "v" "get-h" "h" "get-font" "get-default-style" "style" "font" "get-metrics" "font-height" "get-height" "height" "get-position" "pos" "length" "make-string" "hidden" "get-string" "password" "0" "get-paragraph" "paragraph" "let*" "dc")}}}})
"Password-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Password-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Password-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Password-Text-View" () 48 7 ("top-padding:" "2" "left-padding:" "monospace?:" "underline?:" "italic?:" "bold?:" "color:" "9" "point-size:" "font-name:" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Text-View")
        {Lisp-Entry "copy-selection" () 55 11 ("bell")}
        {Lisp-Entry "get-context-menu" () 59 11 ("new-text-context-menu")}
        {Lisp-Entry "draw-outline" () 63 11 ("draw-caret" "draw-password" "draw-selection" "unless" ":printing?" "getf" "printing?" "bottom" "top" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "update-rect" "update" "context" "dc")}
        {Lisp-Entry "draw-password" () 74 11 ("get-enabled?" "draw-text" "Black" "name:" "Color" "set-text-color" "set-font" "-" "get-v" "+" "v" "get-h" "h" "get-font" "get-default-style" "style" "font" "get-metrics" "font-height" "get-height" "height" "get-position" "pos" "length" "make-string" "hidden" "get-string" "password" "0" "get-paragraph" "paragraph" "let*" "dc")}}}})
"Path"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "path" "Path.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.path.Path" () 37 9 ("jazz")
      {Lisp-Entry "Path" () 40 7 ("Object")
        {Lisp-Entry "path" () 43 8 ()}
        {Lisp-Entry "construct-literal" () 46 16 ("self" "new" "path" "context")}
        {Lisp-Entry "initialize" () 50 11 ("path~self" "set!" "nextmethod" "path")}
        {Lisp-Entry "compare-object" () 55 11 (":not-equal" "else" ":equal" "get-path" "path" "=" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "foldable?" () 64 11 ("true")}
        {Lisp-Entry "fold-object" () 68 11 ("path" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 75 11 ("path" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-path" () 86 18 ("path")}
        {Lisp-Entry "set-path" () 90 18 ("path" "set!" "value")}
        {Lisp-Entry "get-parent" () 99 18 ("path" "butlast" "Path" "new")}
        {Lisp-Entry "present" () 108 18 ("path" "format")}
        {Lisp-Entry "follow-component" () 117 26 ("path" "child" "root")}
        {Lisp-Entry "follow-form" () 121 26 ("path" "child" "set!" "name" "dynamic" "function" "for-each" "form")}}}})
"Pathname-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Pathname-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Pathname-Row" () 37 9 ("jazz")
      {Lisp-Entry "Pathname-Row" () 47 7 ("Value-Row")
        {Lisp-Entry "display-logical?" () 50 12 ("set-display-logical?" "get-display-logical?")}
        {Lisp-Entry "initialize" () 58 11 ("set-display-logical?" "self" "value-row:" "editor-class" "new" "editor" "set!" "nextmethod" "apply" "others" "display-logical?" "bind-keywords" "rest")}
        {Lisp-Entry "editor-class" () 65 11 ("Pathname-Row-Editor")}
        {Lisp-Entry "get-display-logical?" () 74 18 ("editor" "get-display-logical?")}
        {Lisp-Entry "set-display-logical?" () 78 18 ("editor" "set-display-logical?" "value")}
        {Lisp-Entry "enter-pathname-value" () 87 11 ("enter-value" "value")}
        {Lisp-Entry "present" () 96 11 ("editor" "present-moniker" "value")}
        {Lisp-Entry "close-editor?" () 105 11 ("false")}
        {Lisp-Entry "get-edited-value" () 109 11 ("editor" "get-moniker")}
        {Lisp-Entry "set-edited-value" () 113 11 ("false" ":update?" "editor" "set-moniker" "value")}
        {Lisp-Entry "get-edited-modified?" () 117 11 ("editor" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" () 121 11 ("editor" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" () 125 11 ("editor" "get-text" "show-text-cursor")}
        {Lisp-Entry "focused-editor" () 129 11 ("editor" "get-text")}}
      {Lisp-Entry "Pathname-Row-Editor" () 138 7 ("top-padding:" "1" "left-padding:" "text" "content" "scroller" "name:" "Moniker-Browser")
        {Lisp-Entry "value-row" () 148 12 ("set-value-row" "get-value-row")}
        {Lisp-Entry "form-model" () 152 11 ("nextmethod" "else" "Pathname-Value-Text-View" "text" "get-name" "case" "form")}
        {Lisp-Entry "get-value-row" () 158 18 ("value-row")}
        {Lisp-Entry "set-value-row" () 162 18 ("text" "locate" "set-value-row" "value-row" "set!" "value")}
        {Lisp-Entry "moniker-update" () 167 11 ("get-moniker" "enter-pathname-value")}}
      {Lisp-Entry "Pathname-Value-Text-View" () 178 7 ("Moniker-Text-View")
        {Lisp-Entry "value-row" () 181 12 ("set-value-row" "get-value-row")}
        {Lisp-Entry "get-value-row" () 189 18 ("value-row")}
        {Lisp-Entry "set-value-row" () 193 18 ("value-row" "set!" "value")}
        {Lisp-Entry "up-arrow-press" () 202 11 ("value-row" "editor-up-arrow" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 206 11 ("value-row" "editor-down-arrow" "modifiers")}
        {Lisp-Entry "document-menu" () 210 11 ()}
        {Lisp-Entry "focus-validate" () 219 11 ("value-row" "editor-focus-validate" "view")}
        {Lisp-Entry "focus-lose" () 223 11 ("value-row" "editor-focus-lose" "nextmethod" "view" "window")}
        {Lisp-Entry "focus-master" () 228 11 ("value-row" "get-tree")}}}})
"Pathname-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Pathname-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Pathname-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Pathname-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-pathname" "invoke")}
        {Lisp-Entry "test-pathname" () 61 11 ()}}}})
"Pen"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Pen.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Pen" () 37 9 ("jazz")
      {Lisp-Entry "Pen" () 45 7 ("Object")
        {Lisp-Entry "name" () 48 8 ()}
        {Lisp-Entry "width" () 49 8 ()}
        {Lisp-Entry "color" () 50 8 ()}
        {Lisp-Entry "style" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("style~self" "width~self" "color~self" "name~self" "set!" "nextmethod" "color" "color:" "1" "width" "width:" "solid" "style" "style:" "name" "name:")}
        {Lisp-Entry "print" () 62 11 ("color" "when" "width" "dynamic" "function" "print-unreadable" "self" "class-of" "type-name" "identifier-name" "format" "name" "if" "readably" "printer")}
        {Lisp-Entry "get-name" () 72 18 ("name")}
        {Lisp-Entry "get-style" () 76 18 ("style")}
        {Lisp-Entry "get-width" () 80 18 ("width")}
        {Lisp-Entry "get-color" () 84 18 ("color")}
        {Lisp-Entry "parse-string" () 94 23 ("eval-symbol" "car" "symbol?" "1" "=" "and" "self" "type:" "object:" "Convertion-Error" "new" "signal" "dynamic" "function" "err" "length" "len" "read-string-content" "lst" "let*" "empty-string?" "if" "string")}
        {Lisp-Entry "present" () 105 18 ("present" "unimplemented" "->string" "name" "if")}}}})
"Pen-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Pen-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Pen-Row" () 37 9 ("jazz")
      {Lisp-Entry "Pen-Row" () 47 7 ("Color-Row")}}})
"Performance"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "performance" "Performance.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "Performance" () 37 9 ("jazz")}})
"Performance-Query"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "performance" "Performance-Query.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.performance.Performance-Query" () 37 9 ("jazz")
      {Lisp-Entry "Performance-Query" () 44 7 ("WinPerf" "WinDef" "Utilities" "Object")
        {Lisp-Entry "query" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "query~self" "set!" "validate-status" "0" "NULL" "PdhOpenQuery" "query" "status" "receive" "nextmethod")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "query" "PdhCloseQuery" "validate-status")}
        {Lisp-Entry "add-counter" () 63 18 ("validate-status" "0" "query" "PdhAddCounter" "counter" "status" "receive" "counter-path" "let" "false" "browse?" "browse?:" "counter-name" "counter-name:" "object-name" "object-name:" "path" "path:")}
        {Lisp-Entry "counter-path" () 70 11 ("error" "else" "guess-process-instance" "module-base" "format" "and" "browse-counter-path" "cond" "browse?" "counter-name" "object-name" "path")}
        {Lisp-Entry "collect-data" () 77 18 ("query" "PdhCollectQueryData" "validate-status")}
        {Lisp-Entry "get-counter-value" () 81 18 ("longValue" "get" "NULL" "PDH_FMT_LONG" "PdhGetFormattedCounterValue" "validate-status" "PDH_FMT_COUNTERVALUE" "new" "value" "let" "counter")}
        {Lisp-Entry "browse-counter-path" () 87 11 ("adjust-string" "PdhBrowseCounters" "PERF_DETAIL_WIZARD" "dwDefaultDetailLevel" "CallBackStatus" "dwCallBackArg" "pCallBack" "length" "cchReturnPathLength" "szReturnPathBuffer" "szDataSource" "0" "hWndOwner" "PDH_BROWSE_DLG_CONFIG_bLocalCountersOnly" "PDH_BROWSE_DLG_CONFIG_bSingleCounterPerDialog" "PDH_BROWSE_DLG_CONFIG_bIncludeInstanceIndex" "bit-or" "configurationFlags" "set" "PDH_BROWSE_DLG_CONFIG" "new" "conf" "PDH_MAX_COUNTER_PATH" "make-string" "path" "let")}
        {Lisp-Entry "validate-status" () 104 11 ("error" "0" "/=" "when" "status")}}}})
"Period"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Period.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.utility.Period" () 37 9 ("jazz")
      {Lisp-Entry "Period" () 44 7 ("Range")
        {Lisp-Entry "get-duration" () 47 18 ("Time" "new" "get-duration" "start" "end" "get-time" "get-elapse" "-" "delta" "let" "field")}
        {Lisp-Entry "present" () 52 18 ("end" "localize" "start" "present-date" "format")}
        {Lisp-Entry "for-each-day" () 59 18 ("1" "day" "add" "set!" "end" "" "while" "start" "date" "let" "proc")}
        {Lisp-Entry "includes-day-of-week?" () 66 18 ("false" "true" "get-day-of-week" "Date" "symbolic-day-of-week" "=" "when" "date" "dynamic" "function" "for-each-day" "return" "lambda" "call/ec" "day")}}}})
"Period-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Period-Domain.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.domain.Period-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Period-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "Period" "is-not?" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 62 11 ("get-end" "get-start" "present-date" "format" "value")}}}})
"Period-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Period-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Period-Row" () 37 9 ("jazz")
      {Lisp-Entry "Period-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 53 11 ("get-end" "get-start" "present-date" "format" "period" "dynamic" "function" "map" "join" "null?" "nullable?" "and" "if" "value")}
        {Lisp-Entry "get-edited-value" () 69 11 ("Date" "parse-date" "Period" "new" "separator:" "parse-strings" "end" "start" "bind" "dynamic" "function" "map" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-string-content" "string" "let")}}}})
"Periods-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "calendar" "Periods-Chooser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.calendar.Periods-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Periods-Chooser" () 48 7 ("on-cancel" "cancel" "default?:" "on-ok" ":host" "ok" "8" "6" "on-remove-period" "remove-period" "on-add-period" "add-period" "on-edit-end" "edit-end" "on-edit-start" "edit-start" "end" "width:" "display-images?:" "toplevel-controls?:" "start" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-selection-change" "selection-handler:" "on-action" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "filled-column:" "periods-tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "periods-border" "Default-GUI" "name:" "Font" "font:" "9" "Point" "position:" "title:" "Dimension" "size:" "View")
        {Lisp-Entry "periods" () 51 12 ("set-periods" "get-periods")}
        {Lisp-Entry "finish" () 74 11 ("acquire-focus" "update-buttons" "setup-selection" "setup-periods" "get-tree" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-periods" () 88 18 ("periods")}
        {Lisp-Entry "set-periods" () 92 18 ("periods" "set!" "value")}
        {Lisp-Entry "get-tree" () 96 11 ("periods-tree" "locate")}
        {Lisp-Entry "dialog-class" () 106 16 ("Periods-Chooser-Dialog")}
        {Lisp-Entry "Periods-Chooser-Dialog" () 111 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "on-action" () 123 11 ("update-buttons" "evt")}
        {Lisp-Entry "on-selection-change" () 127 11 ("update-buttons" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-edit-start" () 133 11 ("update" "set-start" "get-start" ":initial-date" "host-title:" "Calendar-Dialog" "get-modal" "date" "periods" "element" "period" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-edit-end" () 142 11 ("update" "set-end" "get-end" ":initial-date" "host-title:" "Calendar-Dialog" "get-modal" "date" "periods" "element" "period" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-add-period" () 151 11 ("update" "append" "periods" "set!" "Period" "new" "list" "period" "1" "week" "add" ":initial-date" "end" "host-title:" "Calendar-Dialog" "get-modal" "start" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-remove-period" () 160 11 ("set-single-selection" "get-visible-count" "" "when" "update" "remove" "set!" "periods" "element" "period" "get-single-selection" "selection" "get-tree" "tree" "let*" "evt")}
        {Lisp-Entry "on-return-press" () 171 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 177 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "update" () 187 11 ("get-tree" "setup-periods")}
        {Lisp-Entry "setup-periods" () 191 11 ("periods" "user-data:" "get-end" "Tree-Label" "get-start" "present-date" "title:" "Bitmap-Resource" "image:" "Tree-Node" "new" "list" "children:" "add-row" "period" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "tree")}
        {Lisp-Entry "setup-selection" () 200 11 ("0" "list" "set-selection" "periods" "when" "tree")}
        {Lisp-Entry "update-buttons" () 210 11 ("remove-period" "true" "add-period" "edit-end" "false" "edit-start" "locate" "set-enabled?" "begin" "null?" "if" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "get-modal-result" () 230 11 ("get-output" "put" "get-user-data" "period" "rank" "row" "dynamic" "function" "for-each-visible-row" "List-Factory" "new" "periods" "get-tree" "tree" "let")}}}})
"Periods-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Periods-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Periods-Row" () 37 9 ("jazz")
      {Lisp-Entry "Periods-Row" () 46 7 ("Combo-Row")
        {Lisp-Entry "initialize" () 54 11 ("choose" "set-kind" "nextmethod" "apply" "rest")}
        {Lisp-Entry "combo-choose" () 64 11 ("true" "focus-editor" "enter-edited-value" "set-edited-value" "periods:" "Periods-Chooser" "get-modal" "value" "let")}
        {Lisp-Entry "present" () 77 11 ("get-end" "get-start" "present-date" "format" "period" "dynamic" "function" "map" "join" "null?" "nullable?" "and" "if" "value")}
        {Lisp-Entry "get-edited-value" () 93 11 ("Date" "parse-date" "Period" "new" "separator:" "parse-strings" "end" "start" "bind" "dynamic" "function" "map" "=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-body" "get-string-content" "string" "let")}
        {Lisp-Entry "set-edited-value" () 103 11 ("present" "editor" "get-body" "set-string-content" "value")}}}})
"Picker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "debuggee" "Picker.fusion"} {Time 128368654100000000L}
    {Lisp-Entry "jazz.jazz.debuggee.Picker" () 37 9 ("jazz")
      {Lisp-Entry "Picker" () 49 7 ("View-Player")
        {Lisp-Entry "initialize" () 53 16 ("register-class" "nextmethod")}
        {Lisp-Entry "window-class" () 59 16 ()}
        {Lisp-Entry "class-background" () 64 16 ()}
        {Lisp-Entry "window-ex-style" () 69 11 ("WS_EX_TRANSPARENT" "bit-or" "rest")}
        {Lisp-Entry "erase-background" () 73 11 ("dc")}
        {Lisp-Entry "paint" () 77 11 ("handle" "paint-window")}}}})
"Picture"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Picture.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.graphic.Picture" () 37 9 ("jazz")
      {Lisp-Entry "Picture" () 45 7 ("DC")
        {Lisp-Entry "initialize" () 48 11 ("destroy-mandatory" "0" "Rect" "setup-clipper" "CreateEnhMetaFile" "nextmethod" "NULL" "parse" "if" "filename" "let" "file" "file:")}
        {Lisp-Entry "destroy" () 55 11 ("nextmethod" "set!" "CloseEnhMetaFile" "hdc" "not" "unless")}
        {Lisp-Entry "get-metafile" () 62 18 ("set!" "CloseEnhMetaFile" "prog1" "hdc" "not" "unless")}
        {Lisp-Entry "delete-metafile" () 68 23 ("DeleteEnhMetaFile" "metafile")}}}})
"Picture-Job"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Picture-Job.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Picture-Job" () 37 9 ("jazz")
      {Lisp-Entry "Picture-Job" () 45 7 ("Print-Job")
        {Lisp-Entry "directory" () 48 8 ()}
        {Lisp-Entry "filename" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("nextmethod" "apply" "filename~self" "directory~self" "set!" "rest" "resolution" "page-setup" "client" "filename" "directory")}
        {Lisp-Entry "start-page" () 63 11 ("1" "+" "filename" "format" "directory" "new-file" "file:" "Picture" "new" "dc" "set!" "no")}
        {Lisp-Entry "end-page" () 67 11 ("Picture" "delete-metafile" "close" "dc" "get-metafile" "metafile" "let" "no")}}}})
"Pipe"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Pipe.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.utility.Pipe" () 37 9 ("jazz")
      {Lisp-Entry "Pipe" () 44 7 ("Object")
        {Lisp-Entry "read-handle" () 47 8 ()}
        {Lisp-Entry "write-handle" () 48 8 ()}
        {Lisp-Entry "reader" () 49 8 ()}
        {Lisp-Entry "printer" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("destroy-mandatory" "write-handle" "read-handle" "set!" "error" "not" "if" "0" "NULL" "either" "CreatePipe" "write" "read" "ok?" "receive" "nextmethod" "size" "size:" "security-attributes" "security-attributes:")}
        {Lisp-Entry "destroy" () 63 11 ("nextmethod" "write-handle" "printer" "read-handle" "close" "reader" "when")}
        {Lisp-Entry "get-read-handle" () 78 18 ("read-handle")}
        {Lisp-Entry "get-write-handle" () 82 18 ("write-handle")}
        {Lisp-Entry "get-reader" () 86 18 ("read-handle" "Pipe-Reader" "new" "set!" "reader" "unless")}
        {Lisp-Entry "get-printer" () 92 18 ("write-handle" "Pipe-Printer" "new" "set!" "printer" "unless")}}}})
"Plain-Formatted-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Plain-Formatted-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Plain-Formatted-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Plain-Formatted-Text-View" () 47 7 ("Plain" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Formatted-Text-View")
        {Lisp-Entry "install" () 54 11 ("Variable" "monospace?:" "point-size:" "font-name:" "Code" "Hyperlink-Style" "Dark-Blue" "Hyperlink" "Reference" "Dark-Red" "Color" "color:" "Font" "font:" "Text-Style" "add-style" "Heading5" "Heading4" "Heading3" "Heading2" "Heading1" "keep-with-next?:" "Default" "base:" "Heading0" "name:" "Format" "add-format" "nextmethod" "rest")}}}})
"Plain-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Plain-Text-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Plain-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Plain-Text-Preferences" () 48 7 ("Blue" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Text-Preferences")
        {Lisp-Entry "title-color" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "comment-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 67 11 ("comment-color" "title-color")}
        {Lisp-Entry "property-presentation" () 72 16 ("nextmethod" "else" "comment-color" "title-color" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 79 11 ("nextmethod" "else" "Color-Row" "new" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Plain-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Plain-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Plain-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Plain-Text-View" () 47 7 ("left-padding:" "Code" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Text-View")
        {Lisp-Entry "external-name" () 55 16 ("plain-text" "rest")}
        {Lisp-Entry "type-heuristic" () 59 11 ("cpp/java" "jazz" "subseq" "=" "3" "length" ">=" "and" "if" "0" "paragraph-string" "first-line" "let")}
        {Lisp-Entry "frame-workspaces" () 71 11 ("text")}
        {Lisp-Entry "headers" () 80 12 ("4" "make-string" "append" "list")}
        {Lisp-Entry "get-headers" () 85 11 ("headers")}
        {Lisp-Entry "default-preferences" () 94 14 ("Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "form>>" "instantiate")}
        {Lisp-Entry "preferences" () 98 11 ("default-preferences" "false" "error?:" "plain-text" "documents" "get-preferences" "either")}}}})
"Playlist-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Playlist-Manager.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.presentation.Playlist-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Playlist-Manager" () 47 7 ("presentation" "width:" "title:" "on-select-left" "slides" "content" "vscroll?:" "hscroll?:" "document" "slides-border" "slides-splitter" "fill" "second" "library" "entry" "style:" "edge" "border-type:" "first" "library-border" "division:" "horz" "orientation:" "split" "state:" "center" "library-splitter" "on-import-text" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "north" "location:" "7" "flow" "toolbar" "name:" "2" "0" "Rect" "layout-insets:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "finish" () 71 11 ("layout-view" "set-parent" "library" "locate" "set-client" "generate-presentation" "presentation" "Presentation-Generator" "new" "generator" "Jazz" "File" "file" "let*" "nextmethod" "initargs")}
        {Lisp-Entry "frame-title" () 87 16 ()}
        {Lisp-Entry "frame-position" () 92 16 ("Point")}
        {Lisp-Entry "frame-size" () 97 16 ("Dimension")}
        {Lisp-Entry "on-import-text" () 106 11 ("generate-presentation" "presentation" "Presentation-Generator" "new" "generator" "Jazz" "File" "file" "let*" "evt")}
        {Lisp-Entry "on-select-left" () 119 11 ("set-selection-name" "offer-maint" "offer-compose" "offer-components" "offer-cond" "offer-char" "memq?" "true" "offer-tab" "else" "selling-view" "selling" "char-view" "char-activities" "char-special" "char-char" "char" "dest-view" "destinations" "groups-view" "set!" "groups" "case" "false" "visible" "set-visible?" "when" "offer-desc" "locate" "tab" "first" "get-name" "essay" "action" "get-sender" "get-selected-data" "data" "let*" "evt")}}}})
"Point-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Point-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Point-Row" () 37 9 ("jazz")
      {Lisp-Entry "Point-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 53 11 ("get-v" "get-h" "format" "pos")}
        {Lisp-Entry "get-edited-value" () 64 11 ("Point" "new" "height" "width" "bind" "editor" "get-string-content" "read-delimited-string" "list" "let")}
        {Lisp-Entry "edit" () 71 11 ("get-tree" "expand/collapse" "get-v" "value" "get-h" "self" "add-row" "edit-in-cell")}
        {Lisp-Entry "close-editor" () 79 11 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" () 85 11 ("get-sons" "nextmethod" "or")}}}})
"Popup"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Popup.fusion"} {Time 128360916880000000L}
    {Lisp-Entry "jazz.ui.window.Popup" () 37 9 ("jazz")
      {Lisp-Entry "Popup-Class" () 48 7 ("View-Player-Class")
        {Lisp-Entry "initialize" () 51 11 ("register-class" "nextmethod")}
        {Lisp-Entry "window-class" () 56 11 ()}}
      {Lisp-Entry "Popup" () 60 7 ("Overlapped" "Popup-Class")
        {Lisp-Entry "initiator" () 63 8 ()}
        {Lisp-Entry "default-parent" () 71 11 ("get-toplevel")}
        {Lisp-Entry "window-parent" () 75 11 ("NULL")}
        {Lisp-Entry "window-style" () 80 11 ("WS_CLIPCHILDREN" "WS_POPUP" "bit-or" "rest")}
        {Lisp-Entry "window-ex-style" () 85 11 ("WS_EX_TOOLWINDOW" "bit-or" "rest")}
        {Lisp-Entry "conclude" () 89 11 ("destroy-mandatory" "nextmethod" "rest")}
        {Lisp-Entry "show" () 94 11 ("show-noactivate" "true" "set-visible-flag")}
        {Lisp-Entry "destroy" () 104 11 ("nextmethod" "self" "popup-destroy" "initiator" "when")}
        {Lisp-Entry "get-initiator" () 115 18 ("initiator")}
        {Lisp-Entry "set-initiator" () 119 18 ("initiator" "set!" "value")}
        {Lisp-Entry "dispatch-message" () 129 11 ("nextmethod" "MA_NOACTIVATE" "WM_MOUSEACTIVATE" "eq?" "if" "lparam" "wparam" "msg")}
        {Lisp-Entry "popup-key-press" () 140 26 ("true" "popup-escape-press" "=" "when" "char")}
        {Lisp-Entry "popup-escape-press" () 146 26 ("self" "close-popup" "char")}}}})
"Portfolio"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "image" "Portfolio.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.image.Portfolio" () 37 9 ("jazz")
      {Lisp-Entry "Portfolio" () 48 7 ("Component")
        {Lisp-Entry "width" () 51 12 ("set-width" "get-width")}
        {Lisp-Entry "height" () 52 12 ("set-height" "get-height")}
        {Lisp-Entry "masked?" () 53 12 ("set-masked?" "get-masked?" "true")}
        {Lisp-Entry "mask" () 54 12 ("set-mask" "get-mask")}
        {Lisp-Entry "icons" () 55 12 ("set-icons" "get-icons")}
        {Lisp-Entry "bitmaps" () 56 12 ("set-bitmaps" "get-bitmaps")}
        {Lisp-Entry "handle" () 59 8 ()}
        {Lisp-Entry "images" () 60 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "get-handle" () 68 18 ("false")}
        {Lisp-Entry "finish" () 73 11 ("destroy-mandatory" "add-bitmap" "add-icon" "for-each" "bitmaps" "icons" "length" "+" "nb" "let" "nextmethod" "initargs")}
        {Lisp-Entry "destroy" () 81 11 ("nextmethod" "images" "gather-values" "destroy-image" "for-each")}
        {Lisp-Entry "destroy-image" () 86 11 ("cairo_surface_destroy" "image")}
        {Lisp-Entry "get-width" () 94 11 ("width")}
        {Lisp-Entry "set-width" () 98 11 ("width" "set!" "w")}
        {Lisp-Entry "get-height" () 102 11 ("height")}
        {Lisp-Entry "set-height" () 106 11 ("height" "set!" "h")}
        {Lisp-Entry "get-masked?" () 110 11 ("masked?")}
        {Lisp-Entry "set-masked?" () 114 11 ("masked?" "set!" "flag")}
        {Lisp-Entry "get-mask" () 118 11 ("mask")}
        {Lisp-Entry "set-mask" () 122 11 ("mask" "set!" "msk")}
        {Lisp-Entry "get-icons" () 126 11 ("icons")}
        {Lisp-Entry "set-icons" () 130 11 ("icons" "set!" "list")}
        {Lisp-Entry "get-bitmaps" () 134 11 ("bitmaps")}
        {Lisp-Entry "set-bitmaps" () 138 11 ("bitmaps" "set!" "list")}
        {Lisp-Entry "add-icon" () 148 18 ("get-name" "images" "hash-set!" "height" "height:" "width" "width:" "load-image" "icon" "let" "object")}
        {Lisp-Entry "add-bitmap" () 153 18 ("get-name" "images" "hash-set!" "get-bitmap-handle" "bitmap" "let" "object")}
        {Lisp-Entry "add-masked-bitmap" () 158 18 ("false" "mask" "bitmap")}
        {Lisp-Entry "get-bitmap-handle" () 162 11 ("load-image" "exists?" "and" "bitmap" "find-bitmap-file" "file" "let*" "get-handle" "Bitmap" "is?" "if" "object")}
        {Lisp-Entry "preload" () 170 18 ("get-image" "image")}
        {Lisp-Entry "get-image" () 174 18 ("add-bitmap" "begin" "images" "hash-ref" "either" "get-name" "name" "let" "integer?" "if" "image")}
        {Lisp-Entry "draw-image" () 189 18 ("draw-image" "get-image" "let" "rest" "v" "h" "image" "context" "dc")}}}})
"Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Preferences" () 45 7 ("Component")
        {Lisp-Entry "title" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "icon" () 49 12 ("generate" "accessors" "Bitmap-Resource")}
        {Lisp-Entry "apply-preferences" () 57 26 ("children" "apply-preferences" "child" "dynamic" "function" "for-each" "client")}
        {Lisp-Entry "save-preferences" () 68 26 ("children" "save-preferences" "child" "dynamic" "function" "for-each" "client" "designer")}
        {Lisp-Entry "set-property" () 74 18 ("self" "set-property" "value" "property" "designer")}
        {Lisp-Entry "get-component-image" () 83 11 ("icon")}
        {Lisp-Entry "presentation-property?" () 87 11 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 91 11 ("title")}
        {Lisp-Entry "set-presentation" () 95 11 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "display-property?" () 99 11 ("icon" "title" "visible?" "children" "before" "name-info" "class-info" "field-name" "memq?" "not" "property")}}}})
"Preferences-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Preferences-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Preferences-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Preferences-Manager" () 47 7 ("Canvas-Manager")
        {Lisp-Entry "form-model" () 50 11 ("nextmethod" "else" "Preferences-Editor" "descendants" "get-name" "case" "form")}
        {Lisp-Entry "install-in-host" () 56 11 ("get-process" "apply-preferences" "when" "tool-preferences" "preferences" "let" "nextmethod" "host")}
        {Lisp-Entry "external-name" () 64 16 ("preferences-manager" "rest")}
        {Lisp-Entry "frame-icon" () 74 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 79 16 ()}
        {Lisp-Entry "frame-position" () 84 16 ()}
        {Lisp-Entry "frame-size" () 89 16 ()}
        {Lisp-Entry "frame-workspaces" () 93 11 ("home")}
        {Lisp-Entry "focus-default" () 102 11 ("acquire-focus" "descendants" "locate" "tree" "let")}
        {Lisp-Entry "install" () 112 11 ("get-preferences-root" "set-client" "get-application" "get-preferences-rights" "set-rights" "nextmethod" "rest")}
        {Lisp-Entry "Preferences-Manager-Controller" () 124 9 ("Editor-View-Controller")
          {Lisp-Entry "document-status" () 127 13 ()}}
        {Lisp-Entry "new-controller" () 132 11 ("self" "Preferences-Manager-Controller" "new")}
        {Lisp-Entry "get-modified?" () 141 11 ("false")}
        {Lisp-Entry "tool-preferences" () 150 11 ("preferences-manager" "tools" "get-preferences")}
        {Lisp-Entry "confirm-close" () 159 11 ("save-session" "rest")}
        {Lisp-Entry "save-session" () 163 11 ("get-host" "save-preferences" "get-application" "get-preferences-designer" "designer" "tool-preferences" "pref" "let")}
        {Lisp-Entry "on-save-preferences" () 174 18 ("save" "dynamic" "function" ":wait" "with-cursor" "evt")}
        {Lisp-Entry "on-edit" () 180 18 ("User" "File" "edit-document" "get-application" "appl" "let" "evt")}
        {Lisp-Entry "on-update" () 185 18 ("get-preferences-root" "set-client" "load-preferences" "get-process" "process" "let" "tree" "descendants" "locate" "set-selection" "evt")}
        {Lisp-Entry "show-properties" () 197 11 ("set-single-selection" "0" "get-visible-count" ">" "get-selection" "null?" "and" "when" "acquire-focus" "card" "locate" "tree" "let")}
        {Lisp-Entry "set-application-selection" () 209 11 ("force?" "selection")}
        {Lisp-Entry "close-application-selection" () 213 11 ()}}
      {Lisp-Entry "Preferences-Editor" () 222 7 ("Descendants-Editor")
        {Lisp-Entry "form-model" () 225 11 ("nextmethod" "else" "Preferences-Tree" "tree" "get-name" "case" "form")}}
      {Lisp-Entry "Preferences-Tree" () 236 7 ("show-branches?:" "reorderable?:" "draggable?:" ":icons" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "update-selection" () 243 11 ("selected-components" "expand-state")}
        {Lisp-Entry "row-state" () 247 11 ("collapsed" "expanded" "1" "" "if" "level" "update?" "component")}}}})
"Preferences-Manager-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Preferences-Manager-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Preferences-Manager-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Preferences-Manager-Preferences" () 47 7 ("Dimension" "size:" "Point" "position:" "Bitmap-Resource" "icon:" "title:" "Frame-Preferences")}}})
"Presentation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Presentation.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.presentation.Presentation" () 37 9 ("jazz")
      {Lisp-Entry "Presentation" () 47 7 ("Dimension" "size:" "0" "Point" "position:" "content" "name:" "Layout-View")
        {Lisp-Entry "gradient-start" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "gradient-end" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "frame-workspaces" () 64 11 ("navigator")}
        {Lisp-Entry "guest-actions" () 73 11 ("nextmethod" "presentation" "find-actions" "cons")}
        {Lisp-Entry "get-content" () 83 18 ("content" "locate")}
        {Lisp-Entry "get-conductor" () 87 18 ("conductor" "locate-component")}
        {Lisp-Entry "size-change" () 96 11 ("true" "set-scaled?" "set-scaling" "both" "get-size" "size-rect" "fit-rects" "scaling" "get-content" "content" "let*" "nextmethod" "size")}
        {Lisp-Entry "on-first-slide" () 109 18 ("home-action" "get-tree" "tree" "Navigation-Branches" "find-palette" "viewer" "let*" "evt")}
        {Lisp-Entry "on-previous-slide" () 115 18 ("false" "NoModifiers" "up-arrow-action" "get-tree" "tree" "Navigation-Branches" "find-palette" "viewer" "let*" "evt")}
        {Lisp-Entry "on-next-slide" () 121 18 ("false" "NoModifiers" "down-arrow-action" "get-tree" "tree" "Navigation-Branches" "find-palette" "viewer" "let*" "evt")}
        {Lisp-Entry "on-last-slide" () 127 18 ("end-action" "get-tree" "tree" "Navigation-Branches" "find-palette" "viewer" "let*" "evt")}
        {Lisp-Entry "slide-installed" () 138 11 ()}
        {Lisp-Entry "mouse-down" () 147 11 ("acquire-focus" "pos")}
        {Lisp-Entry "cursor-update" () 156 11 (":no" ":finger" "set-cursor" "get-focus" "self" "eq?" "if" "view")}
        {Lisp-Entry "draw" () 167 11 ("gradient-fill" "get-bounds" "bounds" "with" "gradient-end" "gradient-start" "and" "when" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "get-addable-branches" () 178 11 ("Basic-Slide" "Slide" "list")}}}})
"Presentation-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Presentation-Actions.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.presentation.Presentation-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Presentation-Actions" () 46 7 ("End" "on-last-slide" "last-slide" "Next" "on-next-slide" "next-slide" "Prior" "on-previous-slide" "previous-slide" "Home" "Shortcut" "shortcut:" "on-first-slide" ":document" "Event-Handler" "action-handler:" "first-slide" "name:" "Actions")}}})
"Presentation-Branches"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Presentation-Branches.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.presentation.Presentation-Branches" () 37 9 ("jazz")
      {Lisp-Entry "Presentation-Branches" () 45 7 ("Branches-Editor")
        {Lisp-Entry "palette-title" () 54 16 ()}}}})
"Presentation-Components"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Presentation-Components.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.presentation.Presentation-Components" () 37 9 ("jazz")
      {Lisp-Entry "Presentation-Components" () 46 7 ("show-branches?:" "tree" "header" "content" "scroller" "name:" "Descendants-Editor")
        {Lisp-Entry "palette-title" () 64 16 ()}}}})
"Presentation-Content"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Presentation-Content.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.presentation.Presentation-Content" () 37 9 ("jazz")
      {Lisp-Entry "Presentation-Content" () 45 7 ("Layout-View")
        {Lisp-Entry "get-presentation" () 53 11 ("parent")}
        {Lisp-Entry "mouse-down" () 62 11 ("get-presentation" "acquire-focus" "pos")}
        {Lisp-Entry "cursor-update" () 71 11 (":no" ":finger" "set-cursor" "get-focus" "get-presentation" "eq?" "if" "view")}}}})
"Presentation-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Presentation-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Presentation-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Presentation-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "Locales" "is-not?" "string?" "not" "and" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 62 11 ("value")}}}})
"Presentation-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Presentation-Editor.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.presentation.Presentation-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Presentation-Editor" () 47 7 ("fill" "layout-type:" "center" "name:" "View-Editor")
        {Lisp-Entry "new-event" () 60 16 ("import-dictionary" "set-property" "get-designer" "designer" "get-guest" "editor" "client:" "new-frame" "apply" "frame" ":catalog" "new" "base-model" "model" "get-user" "user" "let*" "dynamic" "function" ":wait" "with-cursor" "error" "false" "error?:" "get-cataloguer" "get-catalog" "null?" "or" "if" "get-application" "appl" "Design-Wizard" "get-modal" "name" "let" "rest")}
        {Lisp-Entry "frame-workspaces" () 81 11 ("presenter")}
        {Lisp-Entry "install-client" () 90 11 ("layout-view" "set-client" "get-content" "client" "set-parent" "hscroll?:" "true" "vscroll?:" "center" "locate" "parent:" "Scroller-View" "new" "scroller" "let")}}}})
"Presentation-Generator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Presentation-Generator.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.presentation.Presentation-Generator" () 37 9 ("jazz")
      {Lisp-Entry "Presentation-Generator" () 46 7 ("Object")
        {Lisp-Entry "generate-presentation" () 49 18 ("error" "else" "generate-formatted" "ci=" "test:" "member?" "cond" "get-extension" "ext" "let" "file")}
        {Lisp-Entry "generate-formatted" () 60 11 ("close" "cdr" "set!" "generate-heading" "slide" "cadr" "tail" "car" "head" "not-null?" "while" "previous-slide" "level:" "parent:" "Basic-Slide" "basic-slide" "moniker:" "Black" "gradient-end:" "Blue" "Color" "gradient-start:" "name:" "Formatted-Presentation" "new" "presentation" "collect-headings" "headings" "set-moniker" "get-controller" "controller" "get-guest" "text-view" "false" "host-visible?:" "Plain-Formatted-Text-View" "new-frame" "frame" "let*" "file")}
        {Lisp-Entry "generate-heading" () 79 11 ("level:" "generate-slide" "client-form:" "heading-range:" "parent:" "name:" "Heading-Slide" "slide" "length" "0" "Cell" "Range" "new" "range" "second" "row" "find-parent-slide" "parent" "first" "heading-level" "level" "extract-text" "text" "let*" "third" "extract-name" "conductor" "name" "receive" "tail" "head" "previous-slide" "presentation" "text-view")}
        {Lisp-Entry "extract-name" () 90 11 ("text" "1" "length" "-" "0" "subseq" "values" "ends-with?" "if" "name")}
        {Lisp-Entry "find-parent-slide" () 96 11 ("get-level" "" "when" "Slide" "is-not?" "component" "dynamic" "function" "for-each-ascendant" "return" "lambda" "call/ec" "null?" "if" "level" "previous-slide" "presentation")}
        {Lisp-Entry "extract-text" () 109 11 ("get-styles" "convert-styles" "set-styles" "read-string-element" "text" "get-output" "output" "let*" "paragraph-length" "0" "Cell" "Range" "print-formatted" "decrease!" "increase!" "paragraph-string" "whitespace?" "while" "get-limit" "-" "if" "last" "1" "second" "+" "first" "String-Printer" "new" "printer" "let" "tail" "head" "text-view")}
        {Lisp-Entry "convert-styles" () 124 11 ("White" "Color" "color:" "Slide-Text" "Font" "font:" "name:" "Text-Style" "new" "Default" "get-name" "eq?" "if" "style" "dynamic" "function" "map" "styles")}
        {Lisp-Entry "generate-slide" () 132 11 ("text-content:" "body" "title:" "properties:" "content" "name:" "modify" "model-name:" "list" "Text-Slide-Conductor" "case" "conductor-class" "let" "when" "append" "children:" "install" "action:" "Form" "new" "conductor" "text" "title")}}}})
"Presentation-Properties"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "presentation" "Presentation-Properties.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.presentation.Presentation-Properties" () 37 9 ("jazz")
      {Lisp-Entry "Presentation-Properties" () 45 7 ("Properties-Manager")
        {Lisp-Entry "install" () 48 11 ("categorized" "tree" "locate" "set-filter" "nextmethod" "rest")}}}})
"Presenter-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Presenter-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Presenter-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Presenter-Workspace" () 46 7 ("Text-Palette" "Containment-Editor" "Alignment-Editor" "Designer-Manager" "Toolbox-Manager" "Presentation-Properties" "selection" "Jazz-Console-Manager" "Search-Results" "Output-Log" "Presentation-Branches" "Presentation-Components" "model-name:" "second" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 77 11 ("presenter")}}}})
"Pretty-Printer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "text" "Pretty-Printer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.text.Pretty-Printer" () 37 9 ("jazz")
      {Lisp-Entry "Pretty-Printer" () 44 7 ("System" "Utilities" "Development" "Interpreter" "Language" "Object")}}})
"Preview-Job"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Preview-Job.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Preview-Job" () 37 9 ("jazz")
      {Lisp-Entry "Preview-Job" () 45 7 ("Print-Job")
        {Lisp-Entry "printed-page" () 53 11 ("page-setup")}
        {Lisp-Entry "print-landscape?" () 57 11 ("false")}}}})
"Preview-Page"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Preview-Page.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Preview-Page" () 37 9 ("jazz")
      {Lisp-Entry "Preview-Page" () 46 7 ("View")
        {Lisp-Entry "client" () 49 12 ("set-client" "get-client")}
        {Lisp-Entry "no" () 50 12 ("set-no" "get-no")}
        {Lisp-Entry "dragging?" () 53 8 ("false")}
        {Lisp-Entry "start-position" () 54 8 ()}
        {Lisp-Entry "get-client" () 62 18 ("client")}
        {Lisp-Entry "set-client" () 66 18 ("invalidate-view" "client" "set!" "value")}
        {Lisp-Entry "get-no" () 71 18 ("no")}
        {Lisp-Entry "set-no" () 75 18 ("invalidate-view" "no" "set!" "value")}
        {Lisp-Entry "get-pane" () 80 11 ("get-guest")}
        {Lisp-Entry "cursor-update" () 89 11 (":arrow" ":opened-hand" ":closed-hand" "set-cursor" "get-mouse-down?" "hscroll-needed?" "vscroll-needed?" "or" "if" "locate" "scrollee" "get-pane" "pane" "let*" "pos")}
        {Lisp-Entry "mouse-down" () 104 11 ("acquire-capture" "start-position" "true" "dragging?" "set!" "pos")}
        {Lisp-Entry "drag-move" () 110 11 ("scroll" "locate" "scrollee" "get-pane" "pane" "start-position" "-" "delta" "let*" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" () 118 11 ("false" "set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "double-click" () 124 11 ("no" "set-start" "zoom" "Preview-Toolbar" "get-workspace-splitter" "find-palette" "locate" "set-value" "set-zoom" "get-toplevel" "toplevel" "get-pane" "pane" "let" "pos")}
        {Lisp-Entry "draw" () 137 11 ("print-page" "no" "get-page" "page" "get-job" "job" "get-pane" "pane" "let*" "lv" "lh" "update" "context" "dc")}}}})
"Preview-Pane"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Preview-Pane.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.print.Preview-Pane" () 37 9 ("jazz")
      {Lisp-Entry "Preview-Pane" () 48 7 ("centered" "center" "Dimension" "size:" "scrollee" "content" "vscroll?:" "hscroll?:" "scroller" "Dark" "name:" "Color" "background:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "client" () 51 12 ("set-client" "get-client")}
        {Lisp-Entry "job" () 54 8 ()}
        {Lisp-Entry "pages" () 55 8 ()}
        {Lisp-Entry "start" () 56 8 ("0")}
        {Lisp-Entry "preserved" () 57 8 ()}
        {Lisp-Entry "frame-workspaces" () 73 11 ("preview")}
        {Lisp-Entry "get-job" () 82 18 ("job")}
        {Lisp-Entry "guest-actions" () 91 11 ("nextmethod" "preview-pane" "find-actions" "cons")}
        {Lisp-Entry "on-print" () 101 11 ("client" "print-document" "evt")}
        {Lisp-Entry "on-print-layout" () 105 11 ("true" "from-preview?:" "client" "print-layout" "evt")}
        {Lisp-Entry "on-home" () 109 11 ("0" "set-start" "evt")}
        {Lisp-Entry "on-end" () 113 11 ("modulo" "set-start" "1" "-" "last" "job" "get-pages" "pages" "length" "count" "let*" "evt")}
        {Lisp-Entry "on-previous" () 120 11 ("previous" "evt")}
        {Lisp-Entry "on-next" () 124 11 ("next" "evt")}
        {Lisp-Entry "on-close" () 128 11 ("close-workspace" "evt")}
        {Lisp-Entry "escape-press" () 132 11 ("close-workspace" "key")}
        {Lisp-Entry "close-workspace" () 136 11 ("get-previous" "apply-preferences" "close" "restore-client" "selected-workspace" "workspace" "get-player" "frame" "let")}
        {Lisp-Entry "get-client" () 149 18 ("client")}
        {Lisp-Entry "set-client" () 153 18 ("setup-printing" "preserved" "client" "set!" "value")}
        {Lisp-Entry "restore-client" () 158 21 ("preserved" "restore-printing" "printer" "client" "get-page-setup-for" "wrap-header/footer")}
        {Lisp-Entry "Zoom" () 168 14 ()}
        {Lisp-Entry "get-zoom" () 172 18 ("Zoom")}
        {Lisp-Entry "set-zoom" () 176 18 ("layout-view" "0" "Point" "scrollee" "locate" "scroll-to" "Zoom" "set!" "value")}
        {Lisp-Entry "layout" () 187 11 ("start" "set-start" "set-client" "dynamic" "function" "for-each" "zoom:" "Preview-Job" "job" "update-scrollbars" "layout-view" "-" "set-size" "get-output" "pages" "get-height" "true" ">" "when" "put" "max" "set!" "get-width" "increase!" "Preview-Page" "page" "shadow" "border-type:" "size:" "Point" "position:" "parent:" "Border-View" "border" "not" "while" "List-Factory" "new" "fact" "horz-done?" "false" "vert-done?" "max-v" "max-h" "v" "0" "h" "let" "close-children" "separator" "4" "Dimension" "scale" "+" "border-size" "get-size" "display-size" "Zoom" "/" "zoom" "scale-content" "scaling" "printer" "get-page-setup-for" "page-setup" "client" "get-print-area" "print-area" "centered" "locate" "scrollee" "let*" "nextmethod")}
        {Lisp-Entry "get-page-height" () 240 11 ("size" "get-height")}
        {Lisp-Entry "previous" () 249 18 ("start" "-" "0" "max" "set-start" "pages" "length" "count" "let")}
        {Lisp-Entry "next" () 254 18 ("set-start" "" "when" "start" "+" "pg" "job" "get-pages" "pages" "length" "count" "let*")}
        {Lisp-Entry "set-start" () 262 18 ("0" "naturals" "pages" "true" "set-no" "false" "set-visible?" ">=" "if" "+" "pg" "get-parent" "border" "n" "page" "dynamic" "function" "for-each" "job" "get-pages" "length" "count" "let" "start" "set!" "value")}}}})
"Preview-Pane-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Preview-Pane-Actions.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Preview-Pane-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Preview-Pane-Actions" () 46 7 ("Next" "on-next" "next" "Prior" "on-previous" "previous" "End" "on-end" "end" "Home" "Shortcut" "shortcut:" "on-home" ":focus" "Event-Handler" "action-handler:" "home" "name:" "Actions")}}})
"Preview-Status"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Preview-Status.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Preview-Status" () 37 9 ("jazz")
      {Lisp-Entry "Preview-Status" () 47 7 ("center" "location:" "Dimension" "size:" "message" "name:" "Status-Toolbar")
        {Lisp-Entry "palette-class" () 61 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 66 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 71 16 ()}}}})
"Preview-Toolbar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Preview-Toolbar.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.print.Preview-Toolbar" () 37 9 ("jazz")
      {Lisp-Entry "Preview-Toolbar" () 48 7 ("on-close" "title:" "close" "zoom" "blue:" "green:" "red:" "Medium" "Color" "border-color:" "2" "Rect" "border-insets:" "Dimension" "size:" "on-next" "next" "on-previous" "previous" "on-print-layout" "print-layout" "on-print" ":document" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" "tooltip-text:" "print" "name:" "Toolbar")
        {Lisp-Entry "Zoom-Factors" () 66 14 ()}
        {Lisp-Entry "finish" () 77 11 ("set-value" "Zoom-Factors" "zoom" "locate" "set-choices" "nextmethod" "initargs")}
        {Lisp-Entry "palette-class" () 89 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 94 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 99 16 ()}
        {Lisp-Entry "set-preview-zoom" () 108 11 ("set-zoom" "current-document" "pane" "let" "zoom")}}
      {Lisp-Entry "Zoom-Combo" () 118 7 ("Combo-Box")
        {Lisp-Entry "combo-choice" () 122 11 ("get-value" "set-preview-zoom")}}}})
"Preview-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Preview-Workspace.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Preview-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Preview-Workspace" () 46 7 ("Preview-Status" "line" "second" "status" "Preview-Toolbar" "model-name:" "first" "location:" "vert" "orientation:" "split" "state:" "division:" "edge" "separator:" "toolbar" "name:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Workspace-Preferences")
        {Lisp-Entry "previous" () 49 12 ("set-previous" "get-previous")}
        {Lisp-Entry "pane" () 50 12 ("set-pane" "get-pane")}
        {Lisp-Entry "get-pane" () 67 18 ("pane")}
        {Lisp-Entry "set-pane" () 71 18 ("pane" "set!" "value")}
        {Lisp-Entry "get-previous" () 75 18 ("previous")}
        {Lisp-Entry "set-previous" () 79 18 ("previous" "set!" "value")}
        {Lisp-Entry "apply-preferences" () 88 11 ("nextmethod" "apply" "pane" "layout-view" "rest")}}}})
"Primitive-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Primitive-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Primitive-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Primitive-Doc" () 45 7 ("Definition-Doc")
        {Lisp-Entry "get-class-image" () 54 16 ("Bitmap-Resource")}}}})
"Print-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Print-Dialog.fusion"} {Time 128360915420000000L}
    {Lisp-Entry "jazz.ui.print.Print-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "Print-Dialog" () 46 7 ("WinShell" "WinDlg" "WinGDI" "WinUser" "WinKernel" "WinDef" "System" "Utilities" "Dialog")
        {Lisp-Entry "get-modal" () 50 16 ("error" "throw-cancel" "=" "CommDlgExtendedError" "code" "dmOrientation" "nCopies" "PD_PAGENUMS" "PD_SELECTION" "PD_PRINTTOFILE" "mask-bit-set?" "hDC" "values" "DEVMODE" "coerce" "devmode" "GlobalLock" "pointer" "hDevMode" "handle" "get" "flags" "let*" "PrintDlg" "if" "nMaxPage" "1" "nMinPage" "nToPage" "0" "nFromPage" "PD_USEDEVMODECOPIESANDCOLLATE" "PD_NOSELECTION" "PD_HIDEPRINTTOFILE" "PD_RETURNDC" "bit-or" "Flags" "get-application" "get-toplevel" "get-handle" "hwndOwner" "size-of" "lStructSize" "set" "PRINTDLG" "new" "rec" "let" "close-all-popups" "rest")}}}})
"Print-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Print-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.event.Print-Event" () 37 9 ("jazz")
      {Lisp-Entry "Print-Event" () 44 7 ("Event")
        {Lisp-Entry "dc" () 47 8 ()}
        {Lisp-Entry "context" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("context~self" "dc~self" "set!" "nextmethod" "context" "dc" "sender" "kind")}
        {Lisp-Entry "get-dc" () 57 18 ("dc")}
        {Lisp-Entry "get-hdc" () 61 18 ("dc" "get-hdc")}
        {Lisp-Entry "get-context" () 65 18 ("context")}}}})
"Print-Job"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Print-Job.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.print.Print-Job" () 37 9 ("jazz")
      {Lisp-Entry "Print-Job" () 45 7 ("Object")
        {Lisp-Entry "dc" () 48 8 ()}
        {Lisp-Entry "selection?" () 49 8 ()}
        {Lisp-Entry "from" () 50 8 ()}
        {Lisp-Entry "to" () 51 8 ()}
        {Lisp-Entry "nb-copies" () 52 8 ()}
        {Lisp-Entry "client" () 53 8 ()}
        {Lisp-Entry "page-setup" () 54 8 ()}
        {Lisp-Entry "resolution" () 55 8 ()}
        {Lisp-Entry "scaling" () 56 8 ()}
        {Lisp-Entry "zoom" () 57 8 ()}
        {Lisp-Entry "pages" () 58 8 ()}
        {Lisp-Entry "initialize" () 61 11 ("paginate" "pages" "zoom" "zoom~self" "scale-content" "scaling" "either" "scaling~self" "resolution~self" "page-setup~self" "client~self" "nb-copies" "nb-copies~self" "to" "to~self" "from" "from~self" "selection?" "selection?~self" "dc~self" "set!" "nextmethod" "resolution" "page-setup" "client" "dc")}
        {Lisp-Entry "get-dc" () 87 18 ("dc")}
        {Lisp-Entry "get-selection?" () 91 18 ("selection?")}
        {Lisp-Entry "get-from" () 95 18 ("from")}
        {Lisp-Entry "get-to" () 99 18 ("to")}
        {Lisp-Entry "get-nb-copies" () 103 18 ("nb-copies")}
        {Lisp-Entry "get-client" () 107 18 ("client")}
        {Lisp-Entry "get-pages" () 111 18 ("pages")}
        {Lisp-Entry "get-page" () 115 18 ("pages" "element" "n")}
        {Lisp-Entry "print-job" () 124 18 ("print-document" "nb-copies" "repeat" "loop" "dynamic" "function" "with-document")}
        {Lisp-Entry "print-document" () 131 11 ("length" "to" "1" "-" "from" "null?" "if" "naturals" "pages" "0" "dc" "print-page" "with-page" "no" "page" "dynamic" "function" "for-each")}
        {Lisp-Entry "with-orientation" () 141 11 ("with-landscape" "rect-size" "page-size" "counterclockwise" "orientation" "let" "not" "with-world" "inverse-rect" "if" "with-clipper" "dynamic" "function" "print-landscape?" "landscape?" "let*" "proc" "clipper" "page" "dc")}
        {Lisp-Entry "print-page" () 158 18 ("client" "clipper" "new-lv" "new-lh" "get-top" "top" "get-left" "left" "content" "get-v" "get-h" "-" "get-content-rect" "content-rect" "0" "Point" "acquire" "offset" "true" "paint-drawing" "dynamic" "function" "with-orientation" "page-setup" "wrap-header/footer" "scale" "offset-rect" "printed-rect" "get-bounds" "printed-bounds" "printed-page" "printed" "scaling" "resolution" "/" "*" "ratio" "either" "zoom" "print-context" "context" "let*" "no" "page" "lv" "lh" "dc")}
        {Lisp-Entry "printed-page" () 183 29 ("page-setup" "get-printable")}
        {Lisp-Entry "print-landscape?" () 187 29 ("landscape" "page-setup" "get-orientation" "eq?")}
        {Lisp-Entry "print-context" () 191 11 ("present-time" ":print-time" "local-date" "present-date" ":print-date" "pages" "length" ":page-count" ":page-no" "client-filename" "either" ":filename" "selection?" ":print-selection?" "false" ":print-black/white?" "true" ":printing?" "list" "no")}
        {Lisp-Entry "client-filename" () 204 11 ("get-name" "get-controller" "get-moniker" "moniker" "Document" "is?" "when" "client" "get-guest" "guest" "let")}
        {Lisp-Entry "paginate" () 217 11 ("client" "paginate" "paginate-height" "scaling" "resolution" "*" "/" "ceil" "paginate-width" "get-height" "height" "get-width" "width" "page-setup" "get-content" "content" "let*")}
        {Lisp-Entry "with-document" () 231 18 ("end-document" "start-document" "proc")}
        {Lisp-Entry "start-document" () 237 29 ()}
        {Lisp-Entry "end-document" () 241 29 ()}
        {Lisp-Entry "with-page" () 250 18 ("end-page" "start-page" "proc" "no")}
        {Lisp-Entry "start-page" () 256 29 ("no")}
        {Lisp-Entry "end-page" () 260 29 ("no")}}}})
"Print-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Print-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Print-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Print-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "color?" () 49 12 ("generate" "accessors" "true")}
        {Lisp-Entry "can-rename-component?" () 61 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 65 11 ("false")}
        {Lisp-Entry "can-move-component?" () 69 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 73 11 ("false")}
        {Lisp-Entry "get-row-instance" () 77 11 ("nextmethod" "else" "Boolean-Row" "new" "color?" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 83 11 ("color?")}}}})
"Print-Sequencer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "factory" "Print-Sequencer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.factory.Print-Sequencer" () 37 9 ("jazz")
      {Lisp-Entry "Print-Sequencer" () 44 7 ("WinKernel" "WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "printer" () 47 8 ()}
        {Lisp-Entry "start" () 48 8 ()}
        {Lisp-Entry "sections" () 49 8 ("List-Factory" "new")}
        {Lisp-Entry "initialize" () 52 11 ("start-section" "printer" "set!" "nextmethod" "prt")}
        {Lisp-Entry "start-section" () 58 18 ("get-position" "start" "set!")}
        {Lisp-Entry "end-section" () 62 18 ("start-section" "get-position" "start" "cons" "prog1")}
        {Lisp-Entry "get-position" () 67 11 ("printer" "get-position")}
        {Lisp-Entry "put-section" () 76 18 ("sections" "put" "section")}
        {Lisp-Entry "put-sections" () 80 18 ("sections" "put-sequence" "sections-list")}
        {Lisp-Entry "print-sections" () 84 18 ("sections" "get-output" "transfer" "end" "start" "bind" "section" "dynamic" "function" "for-each" "output")}
        {Lisp-Entry "transfer-size" () 96 14 ()}
        {Lisp-Entry "transfer-buffer" () 99 14 ("transfer-size" "size:" "Heap-Block" "new")}
        {Lisp-Entry "transfer" () 103 24 ("increase!" "decrease!" "WriteFile" "NULL" "transfer-buffer" "get-handle" "ReadFile" "transfer-size" "min" "subsize" "printer" "set-position" "0" ">" "while" "-" "size" "let" "output" "end" "start")}}}})
"Printer-Connection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "connection" "Printer-Connection.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.connection.Printer-Connection" () 37 9 ("jazz")
      {Lisp-Entry "Printer-Connection" () 45 7 ("Connection")
        {Lisp-Entry "printer" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("printer" "set!" "nextmethod" "prt")}
        {Lisp-Entry "get-printer" () 61 18 ("printer")}
        {Lisp-Entry "load-request" () 70 11 ("printer" "format" "rest" "command")}
        {Lisp-Entry "load-multirequest" () 74 11 ("printer" "format" "rest" "command")}
        {Lisp-Entry "load-rows" () 78 11 ("printer" "format" "command")}
        {Lisp-Entry "load-row" () 82 11 ("printer" "format" "command")}
        {Lisp-Entry "execute" () 91 11 ("printer" "format" "command")}
        {Lisp-Entry "comment" () 95 11 ("printer" "format" "apply" "parameters" "string")}}}})
"Printer-Job"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "print" "Printer-Job.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.print.Printer-Job" () 37 9 ("jazz")
      {Lisp-Entry "Printer-Job" () 45 7 ("Print-Job")
        {Lisp-Entry "start-document" () 53 11 ("dc" "start-doc" "0" "fwType" "lpszDocName" "size-of" "cbSize" "set" "DOCINFO" "new" "rec" "let")}
        {Lisp-Entry "end-document" () 61 11 ("dc" "end-doc")}
        {Lisp-Entry "start-page" () 70 11 ("dc" "start-page" "no")}
        {Lisp-Entry "end-page" () 74 11 ("dc" "end-page" "no")}}}})
"Process"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "process" "Process.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.process.Process" () 37 9 ("jazz")
      {Lisp-Entry "Critical-Error?" () 52 19 ("false")}
      {Lisp-Entry "Critical-Debugger-Error?" () 55 19 ("false")}
      {Lisp-Entry "Paint-Error?" () 58 19 ("false")}
      {Lisp-Entry "Focus-Error?" () 61 19 ("false")}
      {Lisp-Entry "Debugging?" () 64 12 ("false")}
      {Lisp-Entry "restore-debugger" () 68 13 ()}
      {Lisp-Entry "restore-messaging" () 73 13 ()}
      {Lisp-Entry "Process" () 78 7 ("Object")
        {Lisp-Entry "loop" () 81 8 ()}
        {Lisp-Entry "loop-running?" () 82 8 ("false")}
        {Lisp-Entry "loop-exit" () 83 8 ("false")}
        {Lisp-Entry "stub-listener" () 84 8 ()}
        {Lisp-Entry "proxy-dispatcher" () 85 8 ()}
        {Lisp-Entry "local-process-server" () 86 8 ()}
        {Lisp-Entry "local-directory-server" () 87 8 ()}
        {Lisp-Entry "local-debuggee" () 88 8 ()}
        {Lisp-Entry "controller-process-server" () 89 8 ()}
        {Lisp-Entry "controller-directory-server" () 90 8 ()}
        {Lisp-Entry "controller-debugger-server" () 91 8 ()}
        {Lisp-Entry "router-server" () 92 8 ()}
        {Lisp-Entry "standard-input" () 93 8 ()}
        {Lisp-Entry "standard-output" () 94 8 ()}
        {Lisp-Entry "standard-error" () 95 8 ()}
        {Lisp-Entry "preferences-root" () 96 8 ()}
        {Lisp-Entry "preferences-designer" () 97 8 ()}
        {Lisp-Entry "context" () 98 8 ()}
        {Lisp-Entry "logger" () 99 8 ()}
        {Lisp-Entry "get-loop" () 107 18 ("loop")}
        {Lisp-Entry "get-loop-running?" () 111 18 ("loop-running?")}
        {Lisp-Entry "set-loop-running?" () 115 18 ("loop-running?" "set!" "flag")}
        {Lisp-Entry "get-preferences-root" () 119 18 ("preferences-root")}
        {Lisp-Entry "get-preferences-designer" () 123 18 ("preferences-designer")}
        {Lisp-Entry "process-name" () 127 26 ()}
        {Lisp-Entry "process-owner" () 131 26 ()}
        {Lisp-Entry "process-copyright" () 135 26 ()}
        {Lisp-Entry "process-licensee" () 139 26 ()}
        {Lisp-Entry "process-icon" () 143 26 ("Bitmap-Resource")}
        {Lisp-Entry "process-version" () 147 26 ("0" "1" "Version")}
        {Lisp-Entry "process-email" () 151 26 ()}
        {Lisp-Entry "process-actions" () 155 26 ()}
        {Lisp-Entry "process-event-source" () 159 26 ("process-name" "EventSource" "argument/property" "either")}
        {Lisp-Entry "boot-environment" () 169 26 ("run-loop" "run-loop?" "when" "activate-process" "conclude-phase" "finish-phase" "finalize-phase" "start-phase" "prepare-phase" "register-versions" "rest")}
        {Lisp-Entry "register-versions" () 182 11 ("get-windows-version" "present" ":windows-version" "register-crash-info")}
        {Lisp-Entry "launch-supervisor-thread" () 187 11 ("supervise-threads" "execute:" "self" "context:" "name:" "Thread" "new")}
        {Lisp-Entry "prepare-phase" () 194 11 ("prepare-process" "prepare-manifests" "prepare-workbench" "prepare-user-aliases" "prepare-preferences" "prepare-environment" "prepare-aliases" "rest")}
        {Lisp-Entry "prepare-environment" () 204 29 ("Home" "User" "set-alias" "self" "set-process" "rest")}
        {Lisp-Entry "prepare-preferences" () 210 11 ("setup-preferences" "rest")}
        {Lisp-Entry "prepare-process" () 214 26 ("rest")}
        {Lisp-Entry "start-phase" () 218 11 ("start-process" "start-environment" "rest")}
        {Lisp-Entry "start-environment" () 223 29 ("coinitialize" "rest")}
        {Lisp-Entry "start-process" () 228 26 ("rest")}
        {Lisp-Entry "finalize-phase" () 233 11 ("setup-user" "finalize-process" "setup-loop" "start-servers" "finalize-environment" "rest")}
        {Lisp-Entry "finalize-environment" () 242 29 ("rest")}
        {Lisp-Entry "finalize-process" () 246 26 ("rest")}
        {Lisp-Entry "setup-user" () 250 26 ("rest")}
        {Lisp-Entry "finish-phase" () 254 11 ("finish-process" "finish-environment" "rest")}
        {Lisp-Entry "finish-environment" () 260 29 ("setup-controller" "register-base-objects" "rest")}
        {Lisp-Entry "finish-process" () 266 26 ("rest")}
        {Lisp-Entry "conclude-phase" () 270 11 ("conclude-process" "conclude-environment" "rest")}
        {Lisp-Entry "conclude-environment" () 275 29 ("rest")}
        {Lisp-Entry "conclude-process" () 279 26 ("rest")}
        {Lisp-Entry "preserve-environment" () 288 26 ()}
        {Lisp-Entry "close-environment" () 292 26 ("stop-winsock" "stop-servers" "detach-from-controller" "close-preferences")}
        {Lisp-Entry "close-preferences" () 300 11 ("save" "preferences-designer" "when")}
        {Lisp-Entry "focus-exit" () 310 26 ()}
        {Lisp-Entry "exit-process" () 319 18 ("exit" "throw" "catched?" "if" "status:" "Exit-Signal" "new" "signal" "let" "close-environment" "preserve-environment" "focus-exit" "0" "status")}
        {Lisp-Entry "process-alias" () 333 26 ("else" "self" ":process" "case" "name")}
        {Lisp-Entry "get-context" () 344 18 ("context")}
        {Lisp-Entry "set-context" () 348 18 ("context-update" "context" "set!" "ctx")}
        {Lisp-Entry "context-update" () 358 29 ("modify-toolbox" "modify-connections" "modify-favorites" "modify-preferences")}
        {Lisp-Entry "modify-preferences" () 365 11 ("set-active-branch" "context" "find-component" "branch" "get-preferences-designer" "designer" "get-preferences" "pref" "let*")}
        {Lisp-Entry "modify-favorites" () 372 11 ("singleton-docked" "get-guest" "modify-editor" "Favorites-Manager" "in-manifest?" "when")}
        {Lisp-Entry "modify-connections" () 378 11 ("singleton-docked" "get-guest" "modify-editor" "SQL-Connections-Manager" "in-manifest?" "when")}
        {Lisp-Entry "modify-toolbox" () 384 11 ("singleton-docked" "get-guest" "modify-editor" "Toolbox-Manager" "in-manifest?" "when")}
        {Lisp-Entry "modify-editor" () 390 11 ("set-client" "set-active-branch" "context" "find-component" "branch" "get-client" "client" "let*" "editor")}
        {Lisp-Entry "install-context" () 398 18 ("set-active-branch" "find-child" "branch" "let" "context" "when" "component")}
        {Lisp-Entry "setup-standard-input/output-handles" () 411 11 ("hStdError" "standard-error" "hStdOutput" "Pipe-Printer" "standard-output" "hStdInput" "Pipe-Reader" "standard-input" "set!" "error" "STARTF_USESTDHANDLES" "dwFlags" "get" "mask-bit-set?" "not" "if" "GetStartupInfo" "STARTUPINFO" "new" "si" "let")}
        {Lisp-Entry "get-standard-input" () 422 18 ("setup-standard-input/output-handles" "standard-input" "not" "when")}
        {Lisp-Entry "get-standard-output" () 429 18 ("setup-standard-input/output-handles" "standard-output" "not" "when")}
        {Lisp-Entry "get-standard-error" () 436 18 ("setup-standard-input/output-handles" "standard-error" "not" "when")}
        {Lisp-Entry "preferences-file" () 447 29 ("User" "File")}
        {Lisp-Entry "setup-preferences" () 451 18 ("set-current-directory" "get-current-directory" "directory" "when" "install-context" "preferences-context" "context" "else" "reference:" "get-form" "form:" "Designer" "new" "preferences-designer" "preferences-root" "set!" "cond" "load-preferences" "pref" "let")}
        {Lisp-Entry "load-preferences" () 471 29 ("read-from-file" "instantiate" "exists?" "if" "preferences-file" "file" "let")}
        {Lisp-Entry "preferences-context" () 478 11 ("else" "get-active-context" "preferences-root" "string->symbol" "cond" "command-argument" "arg" "let")}
        {Lisp-Entry "apply-preferences" () 485 18 ("apply-preferences" "client" "preferences")}
        {Lisp-Entry "save-preferences" () 489 18 ("get-preferences-designer" "save-preferences" "client" "preferences")}
        {Lisp-Entry "set-preferences-property" () 493 18 ("get-preferences-designer" "set-property" "value" "property" "preferences")}
        {Lisp-Entry "get-preferences-rights" () 497 26 ()}
        {Lisp-Entry "persist-usernames?" () 506 26 ("false")}
        {Lisp-Entry "persist-passwords?" () 510 26 ("false")}
        {Lisp-Entry "mandatory-version" () 519 26 ("what")}
        {Lisp-Entry "signal-readyness" () 529 21 ("SetEvent" "when" "false" "EVENT_MODIFY_STATE" "OpenEvent" "handle" "let" "name")}
        {Lisp-Entry "setup-loop" () 540 11 ("Toplevel-Loop" "new" "loop" "set!")}
        {Lisp-Entry "run-loop" () 544 26 ("loop" "toplevel-loop" "loop-exit" "set!" "exit" "lambda" "call/ec")}
        {Lisp-Entry "call-start-loop" () 551 18 ("start-loop" "true" "set-loop-running?")}
        {Lisp-Entry "start-loop" () 556 26 ("process-messages" "true" "while")}
        {Lisp-Entry "stop-loop" () 561 18 ("set!" "exit" "let" "error" "loop-exit" "not" "if")}
        {Lisp-Entry "process-messages" () 574 26 ("default-process-messages")}
        {Lisp-Entry "process-one-message" () 578 26 ("rest")}
        {Lisp-Entry "default-process-messages" () 582 18 ("INFINITE" "sleep")}
        {Lisp-Entry "user-feedback" () 592 29 ("message")}
        {Lisp-Entry "system-title" () 601 26 ()}
        {Lisp-Entry "prepare-aliases" () 610 29 ("get-default-user-profile-dir" "Default-User-Profile" "get-all-users-profile-dir" "All-Users-Profile" "get-profiles-dir" "Profiles" "set-alias" "begin" "rest")}
        {Lisp-Entry "get-profiles-dir" () 619 11 ("tokenize-pathname" "adjust-string" "GetProfilesDirectory" "MAX_PATH" "make-string" "dirname" "let")}
        {Lisp-Entry "get-all-users-profile-dir" () 627 11 ("tokenize-pathname" "adjust-string" "GetAllUsersProfileDirectory" "MAX_PATH" "make-string" "dirname" "let")}
        {Lisp-Entry "get-default-user-profile-dir" () 635 11 ("tokenize-pathname" "adjust-string" "GetDefaultUserProfileDirectory" "MAX_PATH" "make-string" "dirname" "let")}
        {Lisp-Entry "prepare-user-aliases" () 642 26 ("cdr" "Directory" "new" "get-parent" "set-alias" ":up" "car" "eq?" "if" "get-list" "lst" "get-directory" "directory" "get-alias" "alias" "dynamic" "function" "for-each" "get-children" "when" "false" "error?:" "aliases" "get-preferences" "pref" "let")}
        {Lisp-Entry "resolve-alias" () 657 26 ("name")}
        {Lisp-Entry "show-box" () 666 26 ("system-message" "apply" "rest" "text")}
        {Lisp-Entry "prepare-workbench" () 675 26 ()}
        {Lisp-Entry "prepare-manifests" () 684 26 ()}
        {Lisp-Entry "start-stub-listener?" () 695 29 ("false")}
        {Lisp-Entry "start-servers" () 699 29 ("start-stub-listener" "command-argument" "start-stub-listener?" "or" "when")}
        {Lisp-Entry "stop-servers" () 705 29 ("stop-proxy-dispatcher" "stop-stub-listener")}
        {Lisp-Entry "stub-listener-host" () 715 26 ()}
        {Lisp-Entry "stub-listener-port" () 718 26 ()}
        {Lisp-Entry "get-stub-listener" () 722 18 ("stub-listener")}
        {Lisp-Entry "start-stub-listener" () 726 21 ("error" "false" "error?:" "wait-started" "Stub-Listener" "new" "set!" "stub-listener" "unless")}
        {Lisp-Entry "stop-stub-listener" () 733 21 ("set!" "stop-listener" "stub-listener" "when")}
        {Lisp-Entry "get-proxy-dispatcher" () 744 18 ("start-proxy-dispatcher" "proxy-dispatcher" "not" "when")}
        {Lisp-Entry "start-proxy-dispatcher" () 750 21 ("Proxy-Dispatcher" "new" "proxy-dispatcher" "set!")}
        {Lisp-Entry "stop-proxy-dispatcher" () 754 21 ("set!" "stop-dispatcher" "proxy-dispatcher" "when")}
        {Lisp-Entry "get-local-process-server" () 765 18 ("new-local-process-server" "set!" "local-process-server" "not" "when")}
        {Lisp-Entry "new-local-process-server" () 771 29 ("self" "Process-Server" "Process-Server-Local-Proxy" "new")}
        {Lisp-Entry "get-local-directory-server" () 782 18 ("new-local-directory-server" "set!" "local-directory-server" "not" "when")}
        {Lisp-Entry "new-local-directory-server" () 788 29 ("Directory-Server" "Directory-Server-Local-Proxy" "new")}
        {Lisp-Entry "register-base-objects" () 794 29 ()}
        {Lisp-Entry "get-router-server" () 803 18 ("locate-router-server" "unless" "set!" "live?" "not" "router-server" "and" "when")}
        {Lisp-Entry "locate-router-server" () 811 11 ("error" "true" ":interpreted?" "launch-router-server" "unless" "live?" "not" "when" "Router-Server-Remotable" "router-stub-listener" "name:" "Host" "IOR" "unmarshal" "server" "let")}
        {Lisp-Entry "launch-router-server" () 819 11 (":wait-ready" ":homedir" ":app" "launch-process" "launch-router-server" "unimplemented" "not" "if" "false" "interpreted?" "interpreted?:")}
        {Lisp-Entry "get-controller-process-server" () 830 18 ("controller-process-server")}
        {Lisp-Entry "get-controller-directory-server" () 834 18 ("controller-directory-server")}
        {Lisp-Entry "setup-controller" () 838 29 ("new-controller-process-server" "attach-to-controller" "command-argument" "when")}
        {Lisp-Entry "new-controller-process-server" () 843 29 ("unmarshal" "IOR" "ior" "Process-Server-Remotable" "remotable" "port" "command-argument" "parse-integer" ":ip" "Host" "new" "host" "let*")}
        {Lisp-Entry "attach-to-controller" () 851 18 ("local-debuggee" "attach-debuggee" "setup-local-debuggee" "debugger" "find-object" "controller-debugger-server" "get-directory-server" "controller-directory-server" "controller-process-server" "set!" "false" ":reattach-local?" "detach-from-controller" "ct")}
        {Lisp-Entry "setup-local-debuggee" () 860 18 ("self" "Debuggee" "Debuggee-Local-Proxy" "new" "set!" "local-debuggee" "not" "when")}
        {Lisp-Entry "detach-from-controller" () 866 18 ("reattach-local-controller" "local-debuggee" "controller-directory-server" "set!" "detach-from-debugger" "controller-process-server" "when" "true" "reattach-local?" "reattach-local?:")}
        {Lisp-Entry "reattach-local-controller" () 876 29 ()}
        {Lisp-Entry "get-controller-debugger-server" () 885 18 ("controller-debugger-server")}
        {Lisp-Entry "get-local-debugger-server" () 889 26 ()}
        {Lisp-Entry "detach-from-debugger" () 893 18 ("set!" "local-debuggee" "detach-debuggee" "live?" "controller-debugger-server" "when")}
        {Lisp-Entry "get-local-debuggee" () 905 18 ("local-debuggee")}
        {Lisp-Entry "launch-process" () 914 18 ("false" ":wait?" "wait-ready-timeout" ":wait-ready-timeout" "wait-ready" ":wait-ready" "create-process" "command" "command-arguments" "arguments-arg" "command-action" "action-arg" "user" "user-arg" "app-arg" "rootdir-arg" "format" "homedir" "if" "homedir-arg" "Base" "File" "launcher" "Root" "Directory" "parse" "root" "let*" "app" "app:")}
        {Lisp-Entry "present-error" () 945 23 ("present-generic-error" "else" "present-walk-error" "Walk-Error" "present-read-error" "Read-Error" "typecase" "active-content?" "prefix?" "error")}
        {Lisp-Entry "log-error" () 953 40 ("output" "error")}
        {Lisp-Entry "edit-error" () 958 40 ("error")}
        {Lisp-Entry "edit-error-child" () 963 40 ("info" "error")}
        {Lisp-Entry "present-generic-error" () 968 31 ("class-of" "type-name" "format" "not" "if" "list" "get-message" "message" "let" "active-content?" "prefix?" "error")}
        {Lisp-Entry "present-read-error" () 982 31 ("get-message" "message" "get-base" "string?" "if" "format" "header" "get-source" "source" "let*" "active-content?" "prefix?" "error")}
        {Lisp-Entry "present-walk-error" () 995 31 ("get-output" "walk-problem-message" "message" "let" "problem" "dynamic" "function" "for-each" "String-Printer" "new" "printer" "get-category-name" "format-plural" "format" "header" "length" "count" "get-problems" "problems" "let*" "active-content?" "prefix?" "error")}
        {Lisp-Entry "get-debugging?" () 1016 18 ("Debugging?")}
        {Lisp-Entry "focus-error?" () 1020 18 ("Focus-Error?" "Debugging?" "and")}
        {Lisp-Entry "debug-exception" () 1024 29 ("process-exception" "true" "set!" "begin" "unwind-protect" "Debugging?" "preserved" "let" "accountable" "frame" "exception")}
        {Lisp-Entry "process-exception" () 1033 11 ("report-exception" "log-exception" "select-debugger" "Paint-Error?" "true" "set!" "Critical-Debugger-Error?" "when" "else" "exit-process" "message" "type:" "present-exception" ":exception" "dump-stack" "loop-running?" "not" "Critical-Error?" "or" "cond" "log-execution-context" "exception-reported" "accountable" "frame" "exception")}
        {Lisp-Entry "exception-reported" () 1050 29 ()}
        {Lisp-Entry "log-exception" () 1054 29 ("exception")}
        {Lisp-Entry "log-execution-context" () 1058 11 ("report-execution-context" "prefix?" "prefix?:" "present-message" "message" "get-reporter" "reporter" "get-execution-stack" "stack" "when" "get-execution-context" "context" "let" "exception")}
        {Lisp-Entry "report-execution-context" () 1073 11 ("user-message" "detail" "get-details" "details" "get-title" "title" "let" "node" "dynamic" "function" "for-each" "set-message" "report-execution-context" "unimplemented" "reporter" "execution-stack" "message")}
        {Lisp-Entry "report-exception" () 1094 29 ("invoke-debugger" "present-thread-stack" "primary-thread?" "throw-stop" ":exception" "dump-stack" "restore-messaging" "restore-debugger" "controller-debugger-server" "not" "cond" "yes" "stop-debugging" "cancel" "present-exception" "case" "else" "report-walk-error" "Walk-Error" "report-read-error" "Read-Error" "typecase" "report-exception" "unimplemented" "accountable" "frame" "exception")}
        {Lisp-Entry "present-thread-stack" () 1121 29 ("message-box" "file")}
        {Lisp-Entry "select-debugger" () 1125 29 ()}
        {Lisp-Entry "present-exception" () 1129 11 ("cancel:" "yes:" "message-box" "cancel" "else" "case" "yes" "present-message" "message" "let*" "present-execution-context" "Application" "self" "typed?" "get-execution-context" "and" "if" "true" "prefix?" "prefix?:" "error" "type" "type:" "exception")}
        {Lisp-Entry "present-execution-context" () 1143 29 ("prefix?" "type" "exception")}
        {Lisp-Entry "stop-debugging" () 1147 18 ("throw-stop" "restore-messaging" "restore-debugger")}
        {Lisp-Entry "invoke-debugger" () 1153 11 ("stop-debugging" ":exception" "dump-stack" "local-debuggee" "break-exception" "restore-messaging" "restore-debugger" "dynamic" "function" "execute-primary" "interpreter-present?" "if" "unimplemented" "accountable" "frame" "exception")}
        {Lisp-Entry "report-read-error" () 1166 29 ("stop-debugging" "title:" "message-box" "code" "present-message" "message" "let*" "exception")}
        {Lisp-Entry "report-walk-error" () 1173 29 ("stop-debugging" "title:" "message-box" "code" "present-message" "message" "let*" "exception")}}}})
"Process-Info"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "shell" "Process-Info.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.shell.Process-Info" () 37 9 ("jazz")
      {Lisp-Entry "Process-Info" () 44 7 ("Object")
        {Lisp-Entry "name" () 47 8 ()}
        {Lisp-Entry "id" () 48 8 ()}
        {Lisp-Entry "parent-id" () 49 8 ()}
        {Lisp-Entry "parent" () 50 8 ()}
        {Lisp-Entry "children" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("parent-id~self" "id~self" "name~self" "set!" "nextmethod" "parent-id" "id" "name")}
        {Lisp-Entry "get-name" () 61 18 ("name")}
        {Lisp-Entry "get-id" () 65 18 ("id")}
        {Lisp-Entry "get-parent-id" () 69 18 ("parent-id")}
        {Lisp-Entry "get-parent" () 73 18 ("parent")}
        {Lisp-Entry "set-parent" () 77 18 ("parent" "set!" "value")}
        {Lisp-Entry "get-children" () 81 18 ("children")}
        {Lisp-Entry "set-children" () 85 18 ("children" "set!" "value")}}}})
"Process-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "process" "Process-Preferences.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.process.Process-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Process-Preferences" () 47 7 ("title:" "Preferences")
        {Lisp-Entry "active-context" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "current-directory" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "protocols" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "walk-form" () 65 16 ("push-reference" "in-manifest?" "when" "cdr" "protocol-class" "info" "dynamic" "function" "for-each" "get-property" "protocols" "let" "form" "analyser")}
        {Lisp-Entry "can-rename-component?" () 79 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 83 11 ("false")}
        {Lisp-Entry "can-move-component?" () 87 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 91 11 ("false")}
        {Lisp-Entry "get-row-instance" () 95 11 ("nextmethod" "else" "Protocol-List-Row" "new" "protocols" "field-name" "case" "property")}}
      {Lisp-Entry "Protocol-List-Row" () 106 7 ("List-Row")
        {Lisp-Entry "get-subrow-class" () 109 11 ("Protocol-Row")}
        {Lisp-Entry "add-value" () 113 11 ("class:" "cdr" "car" "self" "add-row" "class" "value")}
        {Lisp-Entry "new-value" () 117 11 ("cons")}}
      {Lisp-Entry "Protocol-Row" () 126 7 ("Value-Row")
        {Lisp-Entry "present" () 134 11 ("format" "model")}}}})
"Process-Server"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "process" "Process-Server.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.process.Process-Server" () 37 9 ("jazz")
      {Lisp-Entry "Process-Server" () 45 7 ("Object")
        {Lisp-Entry "process" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("process~self" "set!" "nextmethod" "process")}
        {Lisp-Entry "get-name" () 56 25 ("process" "process-name")}
        {Lisp-Entry "get-icon" () 60 25 ("process" "process-icon")}
        {Lisp-Entry "get-directory-server" () 64 25 ("process" "get-local-directory-server")}}}})
"Process-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Process-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Process-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Process-Snapshot" () 45 7 ("Component")
        {Lisp-Entry "process" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "application" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "date" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "info" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "computer" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "exception" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "memory" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "collector" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "threads" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 60 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" () 64 11 ("threads" ":threads" "collector" ":collector" "memory" ":memory" "exception" ":exception" "computer" ":computer" "date" "date:" "application" ":application" "process" ":process" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Processes-Inspector"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "debuggee" "Processes-Inspector.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.debuggee.Processes-Inspector" () 37 9 ("jazz")
      {Lisp-Entry "Processes-Inspector" () 50 7 ("parent-id" "id" "width:" "name" "tree" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "center" "on-terminate" "terminate" "on-hierarchical" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" ":icons" "portfolio:" "tooltip-text:" "tooltip?:" "selected?:" "hierarchical" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "title:" "WinKernel" "WinNT" "System" "Utilities" "Layout-View")
        {Lisp-Entry "hierarchical?" () 53 8 ("true")}
        {Lisp-Entry "finish" () 73 11 ("refresh" "nextmethod" "initargs")}
        {Lisp-Entry "client-activate" () 78 11 ("refresh")}
        {Lisp-Entry "palette-icon" () 88 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 93 16 ()}
        {Lisp-Entry "palette-position" () 98 16 ("Point")}
        {Lisp-Entry "palette-size" () 103 16 ("Point")}
        {Lisp-Entry "resize" () 112 11 ("border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-hierarchical" () 117 11 ("refresh" "not" "hierarchical?" "set!" "evt")}
        {Lisp-Entry "on-terminate" () 122 11 ("refresh" "sleep" "0" "TerminateProcess" "false" "PROCESS_ALL_ACCESS" "OpenProcess" "handle" "get-id" "id" "get-row" "get-user-data" "info" "bell" "not" "if" "get-single-selection" "selection" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "refresh" () 140 11 ("get-children" "insert-processes" "remove-every-row" "dynamic" "function" "with-update-locked" "locate" "tree" "root-process-info" "info" "let")}
        {Lisp-Entry "insert-processes" () 149 11 ("get-name" "key:" "ci<" "sort" "insert-process" "info" "dynamic" "function" "for-each" "infos" "father" "tree")}
        {Lisp-Entry "insert-process" () 156 11 ("get-children" "hierarchical?" "if" "insert-processes" "user-data:" "->string" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "father:" "add-row" "row" "get-parent-id" "parent-id" "get-id" "id" "get-name" "name" "let*" "info" "father" "tree")}}}})
"Product"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "product" "Product.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.builder.product.Product" () 37 9 ("jazz")
      {Lisp-Entry "Product" () 47 7 ("build?:" "Jazz-File")
        {Lisp-Entry "title" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "include-extensions" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "catalog-extensions" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "documentation" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "editable?" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "active?" () 55 12 ("generate" "accessors" "true")}
        {Lisp-Entry "workbench" () 58 8 ()}
        {Lisp-Entry "parent-product" () 59 8 ()}
        {Lisp-Entry "catalog" () 60 8 ()}
        {Lisp-Entry "initer-property?" () 67 11 ("workbench" "eq?" "nextmethod" "or" "name")}
        {Lisp-Entry "default-name" () 72 11 ("self" "class-of" "type-name")}
        {Lisp-Entry "prepare" () 76 11 ("workbench" "set!" "when" ":workbench" "getf" "arg" "let" "nextmethod" "rest")}
        {Lisp-Entry "print" () 83 11 ("title" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-workbench" () 95 18 ("workbench")}
        {Lisp-Entry "set-workbench" () 99 18 ("workbench" "set!" "value")}
        {Lisp-Entry "get-parent-product" () 103 18 ("parent-product")}
        {Lisp-Entry "set-parent-product" () 107 18 ("parent-product" "set!" "value")}
        {Lisp-Entry "product-title" () 111 26 ("self" "class-of" "type-name" "->string" "title" "either")}
        {Lisp-Entry "get-catalog" () 115 18 ("catalog")}
        {Lisp-Entry "set-catalog" () 119 18 ("catalog" "set!" "value")}
        {Lisp-Entry "get-effective-source" () 129 11 ("name" "get-manifest-source")}
        {Lisp-Entry "require-catalog" () 138 11 ("parent-product" "require-catalog" "create/register-catalog" "set!" "catalog" "unless" "begin" "catalog?" "if")}
        {Lisp-Entry "create/register-catalog" () 147 11 ("get-application" "get-cataloguer" "add-catalog" "create-catalog" "catalog" "let")}
        {Lisp-Entry "create-catalog" () 153 11 ("true" "name" "self" "Product-Catalog" "new" "catalog-output" "output" "let")}
        {Lisp-Entry "catalog-output" () 161 29 ("format" "name" "Manifest" "get-source" "new-brother")}
        {Lisp-Entry "get-effective-editable?" () 170 26 ("parent-product" "get-effective-editable?" "editable?" "not" "if")}
        {Lisp-Entry "for-each-file" () 181 18 ("is?" "when" "level" "descendant" "dynamic" "function" "for-each-descendant" "Product-File" "type" "proc")}
        {Lisp-Entry "collect-files" () 188 18 ("get-output" "put" "is?" "when" "file" "dynamic" "function" "for-each-file" "List-Factory" "new" "fact" "let" "Product-File" "type")}
        {Lisp-Entry "fold-files" () 197 18 ("self" "get-children" "c" "for-each" ":skip" "eq?" "is?" "if" "ps" "let" "s" "f" "x" "dynamic" "function" "fold" "letrec" "Product-File" "type" "seed" "proc")}
        {Lisp-Entry "add-to-index" () 217 11 ("self" "workbench" "add-to-product" "find-workbench" "set-workbench" "component" "name")}
        {Lisp-Entry "remove-from-index" () 222 11 ("self" "workbench" "remove-from-product" "component" "name")}
        {Lisp-Entry "find-workbench" () 226 29 ("find-ascendant" "Workbench" "is?" "if" "workbench" "creator" "either" "product" "let")}
        {Lisp-Entry "get-class-image" () 239 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 244 16 ("nextmethod" "else" "editable?" "active?" "catalog?" "documentation" "catalog-extensions" "include-extensions" "title" "field-name" "case" "property")}
        {Lisp-Entry "presentation-property?" () 256 11 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 260 11 ("self" "class-of" "type-name" "->string" "title" "either")}
        {Lisp-Entry "set-presentation" () 264 11 ("title:" "self" "set-property" "presentation" "designer")}
        {Lisp-Entry "addable-class?" () 268 11 ("Product-Group" "Product-File" "subtype?" "or" "class")}
        {Lisp-Entry "get-addable-classes" () 273 11 ("Product-Group" "list")}
        {Lisp-Entry "get-row-instance" () 285 11 ("nextmethod" "else" "Boolean-Row" "active?" "catalog?" "File-Row" "documentation" "Value-Row" "catalog-extensions" "include-extensions" "true" "nullable?:" "String-Row" "new" "title" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 294 11 ("active?" "catalog?" "documentation" "catalog-extensions" "include-extensions" "title")}}}})
"Product-Catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "product" "Product-Catalog.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.builder.product.Product-Catalog" () 37 9 ("jazz")
      {Lisp-Entry "Product-Catalog" () 46 7 ("Indexed-Catalog")
        {Lisp-Entry "product" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("product~self" "set!" "nextmethod" "apply" "rest" "product")}
        {Lisp-Entry "get-product" () 62 18 ("product")}
        {Lisp-Entry "get-extensions" () 66 11 ("product" "get-catalog-extensions")}
        {Lisp-Entry "get-active?" () 75 11 ("product" "get-active?")}
        {Lisp-Entry "set-active?" () 79 11 ("deactivate" "activate" "if" "set-active?" "product" "get-active?" "/=" "when" "flag")}
        {Lisp-Entry "scan-directories" () 92 11 ("increase!" "process-file" "get-effective-source" "file" "when" ":skip" "get-catalog?" "Product" "is?" "neq?" "and" "if" "seed" "product-file" "dynamic" "function" "product" "fold-files" "get-extensions" "extensions" "0" "processed" "let")}}}})
"Product-Designer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "product" "Product-Designer.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.product.Product-Designer" () 37 9 ("jazz")
      {Lisp-Entry "Product-Designer" () 46 7 ("Designer")
        {Lisp-Entry "print" () 49 11 ("reference" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Product-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Product-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Product-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Product-Doc" () 45 7 ("Doc")}}})
"Product-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "file" "Product-File.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.builder.file.Product-File" () 37 9 ("jazz")
      {Lisp-Entry "Product-File" () 46 7 ("Component")
        {Lisp-Entry "source" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "features" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "build?" () 51 12 ("generate" "accessors" "true")}
        {Lisp-Entry "catalog?" () 53 12 ("generate" "accessors" "false")}
        {Lisp-Entry "product" () 56 8 ()}
        {Lisp-Entry "get-product" () 64 18 ("product")}
        {Lisp-Entry "set-product" () 68 18 ("product" "set!" "value")}
        {Lisp-Entry "get-effective-source" () 77 26 ("source")}
        {Lisp-Entry "require-catalog" () 86 26 ("product" "require-catalog")}
        {Lisp-Entry "manifest-properties" () 95 26 ("source" ":source" "list")}
        {Lisp-Entry "preprocess" () 104 26 ("false" "rest" "output" "log" "reporter" "project")}
        {Lisp-Entry "build" () 108 26 ("false" "rest" "output" "log" "reporter" "project")}
        {Lisp-Entry "get-class-image" () 118 16 ("Bitmap-Resource")}
        {Lisp-Entry "presentation-property?" () 122 11 ("source" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 126 11 ("get-name" "source" "if")}
        {Lisp-Entry "get-categorized-properties" () 132 11 ("build?" "features" "source")}
        {Lisp-Entry "get-row-instance" () 136 11 ("nextmethod" "else" "Boolean-Row" "build?" "File-Row" "new" "source" "field-name" "case" "property")}}}})
"Product-Group"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "file" "Product-Group.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.builder.file.Product-Group" () 37 9 ("jazz")
      {Lisp-Entry "Product-Group" () 46 7 ("Group")
        {Lisp-Entry "directory" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "presentation->name" () 58 16 ("presentation")}
        {Lisp-Entry "name->presentation" () 63 16 ("name")}
        {Lisp-Entry "property-presentation" () 68 16 ("nextmethod" "else" "directory" "field-name" "case" "property")}
        {Lisp-Entry "sort-components" () 75 11 ("get-presentation" "1" "0" "Product-Group" "is?" "if" "cons" "component" "dynamic" "function" "key:" "" "sort" "components")}
        {Lisp-Entry "addable-class?" () 82 11 ("Product-Group" "Product-File" "subtype?" "or" "class")}
        {Lisp-Entry "get-addable-classes" () 88 11 ("Product-Group" "list")}
        {Lisp-Entry "get-row-instance" () 93 11 ("nextmethod" "else" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 100 11 ("directory")}}}})
"Profiler-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "Profiler-Manager.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debuggee.Profiler-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Profiler-Manager" () 48 7 ("on-double-click" "double-click-handler:" "profiles" "header" "content" "scroller" "profiles-view" "entry" "style:" "edge" "border-type:" "profiles-border" "1" "fill" "center" "on-on/off" "on/off" "tail" "on-reset" "delete" "on-update" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "update" "name:" "north" "location:" "0" "6" "flow" "2" "Rect" "layout-insets:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "conclude" () 70 11 ("update-profiles" "get-profiler-on?" "on/off" "locate" "set-selected?" "nextmethod" "rest")}
        {Lisp-Entry "palette-title" () 82 16 ()}
        {Lisp-Entry "palette-icon" () 87 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-position" () 92 16 ("Point")}
        {Lisp-Entry "palette-size" () 97 16 ("Dimension")}
        {Lisp-Entry "client-activate" () 101 11 ("update-profiles")}
        {Lisp-Entry "on-update" () 110 11 ("update-profiles" "evt")}
        {Lisp-Entry "on-reset" () 114 11 ("update-profiles" "reset-profiles" "evt")}
        {Lisp-Entry "on-on/off" () 119 11 ("get-profiler-on?" "not" "set-profiler-on?" "evt")}
        {Lisp-Entry "on-double-click" () 123 11 ("profiles-view" "locate" "edit-profile" "evt")}
        {Lisp-Entry "update-profiles" () 132 11 ("profiles-view" "locate" "update-profiles")}}}})
"Profiler-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "Profiler-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debuggee.Profiler-View" () 37 9 ("jazz")
      {Lisp-Entry "Profiler-View" () 48 7 ("toplevel-percentage" "parent-percentage" "total" "average" "count" "width:" "title:" "on-double-click" "form:" "Event-Handler" "double-click-handler:" "row" "selection-mode:" ":icons" "portfolio:" "name" "filled-column:" "profiles" "header" "content" "flat?:" "vscroll?:" "document" "style:" "scroller" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "update-profiles" () 71 18 ("get-profiles" "profiles->jml" "view-profiles")}
        {Lisp-Entry "view-profiles" () 75 18 ("insert-profiles" "remove-every-row" "dynamic" "function" "with-update-locked" "locate" "tree" "let" "profiles")}
        {Lisp-Entry "insert-profile" () 83 11 ("insert-children" "insert-content" "row" "let" "profile" "father" "tree")}
        {Lisp-Entry "insert-content" () 88 11 ("user-data:" "either" "Tree-Label" "title:" "Bitmap-Resource" "image:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "father:" "add-row" "profile-toplevel-percentage" "toplevel-percentage" "profile-parent-percentage" "parent-percentage" "/" "average" "profile-total" "total" "profile-count" "count" "profile-name" "name" "let*" "profile" "father" "tree")}
        {Lisp-Entry "profile-parent-percentage" () 98 11 ("profile-total" "percentage" "get-tag" "eq?" "and" "when" "profile-parent" "parent" "let" "profile")}
        {Lisp-Entry "profile-toplevel-percentage" () 105 11 ("profile-total" "percentage" "eq?" "if" "profile-toplevel" "toplevel" "let" "profile")}
        {Lisp-Entry "profile-toplevel" () 113 11 ("profile-toplevel" "get-tag" "neq?" "not" "or" "if" "profile-parent" "parent" "let" "profile")}
        {Lisp-Entry "insert-children" () 120 11 ("get-children" "insert-profiles" "profile" "father" "tree")}
        {Lisp-Entry "insert-profiles" () 124 11 ("insert-profile" "child" "dynamic" "function" "for-each" "profiles" "father" "tree")}
        {Lisp-Entry "profile-parent" () 135 11 ("get-parent" "profile")}
        {Lisp-Entry "profile-name" () 139 11 ("name" "get-property" "profile")}
        {Lisp-Entry "profile-count" () 143 11 ("count" "get-property" "profile")}
        {Lisp-Entry "profile-total" () 147 11 ("total" "get-property" "profile")}
        {Lisp-Entry "edit-profile" () 156 18 ("profile-name" "edit-definition" "get-application" "appl" "get-row" "get-user-data" "profile" "let" "bell" "null?" "if" "get-single-selection" "selection" "profiles" "locate" "tree" "let*")}}}})
"Progress-Bar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Progress-Bar.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Progress-Bar" () 37 9 ("jazz")
      {Lisp-Entry "Progress-Bar" () 46 7 ("View")
        {Lisp-Entry "Bar-Width" () 49 14 ()}
        {Lisp-Entry "Bar-Spacing" () 52 14 ("2")}
        {Lisp-Entry "infinite?" () 56 12 ("set-infinite?" "get-infinite?" "false")}
        {Lisp-Entry "pos" () 59 8 ("0")}
        {Lisp-Entry "range" () 60 8 ("9" "0" "Range")}
        {Lisp-Entry "step" () 61 8 ("1")}
        {Lisp-Entry "bars" () 62 8 ("0")}
        {Lisp-Entry "default-size" () 65 11 ("Dimension")}
        {Lisp-Entry "get-infinite?" () 74 18 ("infinite?")}
        {Lisp-Entry "set-infinite?" () 78 18 ("infinite?" "set!" "flag")}
        {Lisp-Entry "get-pos" () 82 18 ("pos")}
        {Lisp-Entry "set-pos" () 86 18 ("invalidate-bars" "pos" "set!" "p")}
        {Lisp-Entry "delta-pos" () 91 18 ("invalidate-bars" "range" "get-end" "modulo" "set!" "infinite?" "when" "pos" "increase!" "increment")}
        {Lisp-Entry "set-step" () 98 18 ("step" "set!" "increment")}
        {Lisp-Entry "step-it" () 102 18 ("step" "delta-pos")}
        {Lisp-Entry "set-done" () 106 18 ("range" "get-end" "set-pos")}
        {Lisp-Entry "get-range" () 110 18 ("range")}
        {Lisp-Entry "set-range" () 114 18 ("invalidate-bars" "range" "set!" "rng")}
        {Lisp-Entry "invalidate-bars" () 124 11 ("invalidate-view" "set!" "bars" "/=" "when" "calculate-bars" "n" "let")}
        {Lisp-Entry "calculate-bars" () 131 11 ("Bar-Spacing" "Bar-Width" "quotient" "1" "pos" "*" "/" "ceil" "+" "right" "2" "get-width" "-" "width" "get-bounds" "bounds" "let*" "0" "=" "if" "get-end" "end" "range" "get-start" "start" "let")}
        {Lisp-Entry "draw" () 147 11 ("0" "naturals" "Bar-Spacing" "increase!" "Focused-Selection" "name:" "Color" "min" "Rect" "new" "fill-rect" "=" "infinite?" "not" "or" "when" "Bar-Width" "+" "right" "let" "n" "dynamic" "function" "for-each" "1" "bars" "last" "3" "-" "max-right" "top" "2" "left" "get-height" "height" "get-width" "width" "let*" "rectangle" "edges:" "sunken" "outer:" "get-bounds" "draw-edge" "lv" "lh" "update" "context" "dc")}}}})
"Progress-Reporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Progress-Reporter.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.dialog.Progress-Reporter" () 37 9 ("jazz")
      {Lisp-Entry "Progress-Reporter" () 48 7 ("on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-action" "form:" "Event-Handler" "action-handler:" "action" "progress" "message" "invite" "name:" "Bitmap-Resource" "image-name:" ":large-icons" "portfolio:" "Point" "position:" "Dimension" "size:" "title:" "Reporter" "View")
        {Lisp-Entry "cancelled?" () 51 8 ("false")}
        {Lisp-Entry "done?" () 52 8 ("false")}
        {Lisp-Entry "install" () 64 11 ("action" "acquire-focus" "0" "set-pos" "locate" "progress" "let" "nextmethod" "rest")}
        {Lisp-Entry "dialog-title" () 77 16 ()}
        {Lisp-Entry "dialog-class" () 82 16 ("Progress-Reporter-Dialog")}
        {Lisp-Entry "Progress-Reporter-Dialog" () 87 14 ("Host-Dialog")
          {Lisp-Entry "on-close" () 90 13 ("processed" "guest" "request-cancel" "closable?" "when" "evt")}}
        {Lisp-Entry "disable-cancel" () 101 11 ("false" "action" "locate" "set-enabled?")}
        {Lisp-Entry "cancel-enabled?" () 105 11 ("action" "locate" "get-enabled?")}
        {Lisp-Entry "cancel-requested?" () 109 11 ("cancelled?")}
        {Lisp-Entry "test-cancelled" () 113 11 ("throw-cancel" "cancel-requested?" "when")}
        {Lisp-Entry "on-action" () 123 11 ("current-action" "evt")}
        {Lisp-Entry "on-return-press" () 128 11 ("current-action" "evt")}
        {Lisp-Entry "escape-press" () 133 11 ("request-cancel" "cancel-enabled?" "when" "key")}
        {Lisp-Entry "section-title" () 143 11 ("set-message" "title")}
        {Lisp-Entry "set-message" () 147 18 ("message" "locate" "set-title" "dynamic" "function" "execute-primary" "msg")}
        {Lisp-Entry "user-message" () 153 18 ("format" "apply" "set-message" "rest" "fmt")}
        {Lisp-Entry "set-range" () 157 18 ("progress" "locate" "set-range" "dynamic" "function" "execute-primary" "range")}
        {Lisp-Entry "set-pos" () 163 18 ("progress" "locate" "set-pos" "dynamic" "function" "execute-primary" "pos")}
        {Lisp-Entry "delta-pos" () 169 18 ("progress" "locate" "delta-pos" "dynamic" "function" "execute-primary" "increment")}
        {Lisp-Entry "set-step" () 175 18 ("progress" "locate" "set-step" "dynamic" "function" "execute-primary" "increment")}
        {Lisp-Entry "step-it" () 181 18 ("progress" "locate" "step-it" "dynamic" "function" "execute-primary")}
        {Lisp-Entry "set-done" () 187 18 ("set-default?" "done-title" "action" "set-title" "progress" "locate" "set-done" "true" "done?" "set!" "dynamic" "function" "execute-primary")}
        {Lisp-Entry "current-action" () 201 11 ("request-cancel" "done-action" "done?" "if")}
        {Lisp-Entry "request-cancel" () 208 26 ("set-message" "true" "cancelled?" "set!")}
        {Lisp-Entry "done-title" () 213 29 ()}
        {Lisp-Entry "done-action" () 217 29 ("get-modal-result" "end-modal" "get-guest" "guest" "get-host" "dialog" "let*")}}}})
"Project-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Project-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Project-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Project-Doc" () 45 7 ("Product-Doc")}}})
"Prop-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Prop-Text-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Prop-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Prop-Text-Preferences" () 48 7 ("Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "comment-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 67 11 ("comment-color" "title-color")}
        {Lisp-Entry "get-row-instance" () 71 11 ("nextmethod" "else" "Color-Row" "new" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Prop-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Prop-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Prop-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Prop-Text-View" () 45 7 ("Code-Text-View")
        {Lisp-Entry "install" () 48 11 ("get-comment-color" "Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 56 16 ("prop-text" "rest")}
        {Lisp-Entry "default-preferences" () 65 14 ("form>>")}
        {Lisp-Entry "preferences" () 70 11 ("prop-text" "documents" "get-preferences")}
        {Lisp-Entry "colorize-syntax" () 74 11 ("colorize-comments" "rest")}
        {Lisp-Entry "colorize-comments" () 78 11 ("Title" "4" "+" "Comment" "apply-style" "not" "if" "title?" "end" "start" "dynamic" "function" "for-each-comment" "text-beginning" "end:" "self" "Jazz-Explorer" "new" "expl" "let" "rest")}
        {Lisp-Entry "recolorize-text" () 88 11 ("recolorize-row" "for-each" "1" "+" "get-row" "naturals" "range" "let" "end-row" "start")}
        {Lisp-Entry "recolorize-row" () 93 11 ("recolorize-comments" "row")}
        {Lisp-Entry "recolorize-comments" () 97 11 ("Title" "Cell" "new" "Comment" "apply-style" "begin" "title-comment-string" "subseq" "=" "if" "4" "+" "title-end" "let" "" "and" "when" "syntax" "comment-string" "search" "comment" "length" "len" "paragraph-string" "line" "let*" "row")}}}})
"Properties"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Properties.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.utility.Properties" () 37 9 ("jazz")
      {Lisp-Entry "Properties" () 45 7 ("Object")
        {Lisp-Entry "file" () 48 8 ()}
        {Lisp-Entry "properties" () 49 8 ()}
        {Lisp-Entry "modified?" () 50 8 ("false")}
        {Lisp-Entry "initialize" () 53 11 ("autoload" "when" "equal?" "new-hashtable" "properties" "set!" "nextmethod" "file" "file:")}
        {Lisp-Entry "get-file" () 65 18 ("file")}
        {Lisp-Entry "set-file" () 69 18 ("file" "set!" "f")}
        {Lisp-Entry "get-properties" () 73 18 ("properties")}
        {Lisp-Entry "get-property" () 77 18 ("properties" "hash-ref" "default" "property")}
        {Lisp-Entry "set-property" () 81 18 ("true" "set-modified?" "properties" "hash-set!" "value" "property")}
        {Lisp-Entry "push-property" () 86 18 ("get-property" "cons" "set-property" "value" "property")}
        {Lisp-Entry "empty-properties" () 90 18 ("properties" "empty-hashtable")}
        {Lisp-Entry "load" () 99 18 ("set-modified?" "file" "set!" "false" "load-hashtable" "properties" "empty-hashtable" "f")}
        {Lisp-Entry "close" () 106 18 ("properties" "empty-hashtable" "save")}
        {Lisp-Entry "save" () 111 18 ("save-content" "save-as" "file" "null?" "if")}
        {Lisp-Entry "save-as" () 117 18 ("SaveFile-Dialog" "get-modal" "save-to")}
        {Lisp-Entry "save-to" () 121 18 ("save-content" "file" "set!" "f")}
        {Lisp-Entry "save-content" () 126 11 ("false" "set-modified?" "save-file-content")}
        {Lisp-Entry "save-file-content" () 131 29 ("length" "-" "format" "value" "property" "bind" "info" "dynamic" "function" "for-each" "car" "key:" "" "sort" "sorted" "find-longest-property" "essay" "max" "when" "gather-all-entries" "all" "let" "file" "File-Printer" "new" "printer" "with-closed")}
        {Lisp-Entry "gather-all-entries" () 143 11 ("properties" "cons" "set!" "value" "property" "dynamic" "function" "for-each-hash" "list" "let")}
        {Lisp-Entry "find-longest-property" () 151 11 ("car" "length" "map" "generic-max" "apply" "list")}
        {Lisp-Entry "get-modified?" () 160 11 ("modified?")}
        {Lisp-Entry "set-modified?" () 164 11 ("set!" "modified?" "/=" "when" "state")}}}})
"Properties-Card"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "card" "Properties-Card.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.card.Properties-Card" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Card" () 47 7 ("on-context-menu" "tree" "Event-Handler" "context-menu-handler:" "header" "content" "vscroll?:" "document" "style:" "scroller" "tools" "name:" "fill" "layout-type:" "Card")
        {Lisp-Entry "get-tree" () 65 18 ("tree" "locate")}
        {Lisp-Entry "on-editor" () 74 11 ("nextmethod" "else" ":selection-changing" "reset-modified-properties" ":saved" "property:" "get-property" "select-property" ":property-selected" "get-tree" "save-edition" ":saving" ":branch-changing" "get-force?" "force?:" "get-selection" "set-client" ":selection-changed" "get-kind" "case" "evt")}
        {Lisp-Entry "client-update" () 93 11 ("get-tree" "client-update")}
        {Lisp-Entry "call-property-change" () 102 11 ("value:" "property:" "property-change" "client" "car" "eq?" "when" "component:" "get-property" "component" "let" "evt")}
        {Lisp-Entry "property-change" () 108 11 ("get-tree" "property-change" "value" "property" "component")}
        {Lisp-Entry "enter-value" () 117 11 ("client" "designer" "set-property" "component" "dynamic" "function" "for-each" "value" "property")}}}})
"Properties-Descriptor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "descriptor" "Properties-Descriptor.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.descriptor.Properties-Descriptor" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Descriptor" () 45 7 ("Component")
        {Lisp-Entry "get-class-descriptor" () 53 16 ("Descriptors.Properties-Descriptor")}}}})
"Properties-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "properties" "Properties-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.properties.Properties-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Entry" () 45 7 ("Indexed-Entry")
        {Lisp-Entry "english" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "column" "line" "name" "context")}
        {Lisp-Entry "initialize" () 56 11 ("nextmethod" "column" "line" "name")}
        {Lisp-Entry "print-catalog" () 60 11 ("column" "line" "name" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 72 11 ("Bitmap-Resource")}}}})
"Properties-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "properties" "Properties-File-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.properties.Properties-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Properties-File-Entry" () 45 7 ("File-Entry")
        {Lisp-Entry "get-image" () 48 11 ("Bitmap-Resource")}}}})
"Properties-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "card" "Properties-Manager.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.card.Properties-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Manager" () 47 7 ("header" "content" "tool" "style:" "scroller" "name:" "Properties-Card")
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "self" "close-selected" "get-application" "appl" "let")}
        {Lisp-Entry "external-name" () 64 16 ("properties-card" "rest")}
        {Lisp-Entry "palette-class" () 74 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 79 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 84 16 ()}
        {Lisp-Entry "host-activate" () 88 11 ("on-selected-change" "method-name:" "self" "target:" "Event-Handler" "new" "add-selected-listener" "get-application" "appl" "let")}
        {Lisp-Entry "host-deactivate" () 93 11 ("self" "remove-selected-listener" "get-application" "appl" "let")}
        {Lisp-Entry "focus-default" () 103 11 ("acquire-focus" "locate" "tree" "let")}
        {Lisp-Entry "get-tools-view" () 108 11 ("tools" "locate")}
        {Lisp-Entry "install-in-host" () 117 11 ("categorized" "tree" "set-filter" "header" "true" "scroller" "locate" "set-flat?" "Host-Docked" "is?" "when" "fill" "get-root" "get-content" "set-layout-type" "nextmethod" "host")}
        {Lisp-Entry "on-selected-change" () 131 11 ("else" "get-designer" "let*" "Editor-View" "force?:" "set-client" "set-designer" "set-editor" "get-force?" "force?" "get-selected" "client" "designer" "editor" "Designer" "typecase" "get-owner" "owner" "let" "evt")}
        {Lisp-Entry "on-editor" () 161 11 ("nextmethod" "else" ":selection-changed" "get-kind" "case" "evt")}}}})
"Properties-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "properties" "Properties-Parser.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.properties.Properties-Parser" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Parser" () 45 7 ("File-Parser")
        {Lisp-Entry "parse" () 48 11 ("parse-definitions" "catalog" "Properties-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" () 52 11 ("get-output" "length" "0" "naturals" "put" "when" "parse-line" "entry" "no" "line" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "parse-line" () 64 11 ("Properties-Entry" "new" "subseq" "name" "end" "let*" ">" "start:" "properties-constituent?" "skip" "start" "0" "=" "when" "skip-whitespace" "col" "let" "no" "line")}
        {Lisp-Entry "properties-constituent?" () 75 11 ("eqv?" "cpp/java-constituent?" "or" "char")}}}})
"Properties-Rights"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "security" "Properties-Rights.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.security.Properties-Rights" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Rights" () 44 7 ("Rights")}}})
"Properties-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "properties" "Properties-Syntax.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.properties.Properties-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Syntax" () 45 7 ("Text-Syntax")
        {Lisp-Entry "get-constituent-test" () 53 11 ("cpp/java-constituent?")}}}})
"Properties-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "properties" "Properties-Text-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.properties.Properties-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Text-Preferences" () 47 7 ("Dark-Blue" "keyword-color:" "definition-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "CppJava-Text-Preferences")}}})
"Properties-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "properties" "Properties-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.html.properties.Properties-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Text-View" () 46 7 ("Code-Text-View")
        {Lisp-Entry "install" () 49 11 ("get-keyword-color" "Keyword" "get-definition-color" "Definition" "get-line-comment-color" "Line-Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 59 16 ("properties-text" "rest")}
        {Lisp-Entry "preferences" () 63 11 ("properties-text" "documents" "get-preferences")}
        {Lisp-Entry "frame-workspaces" () 72 11 ("text")}
        {Lisp-Entry "favorite-completions" () 81 11 ("properties-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "explorer-class" () 90 11 ("CppJava-Explorer")}
        {Lisp-Entry "get-context" () 99 11 ("cpp/java")}
        {Lisp-Entry "current-name" () 103 11 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" () 107 11 ("read-string-element" "0" "element" "=" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" () 115 11 ("current-name")}
        {Lisp-Entry "current-expr-range" () 119 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 125 11 ("get-range" "outer-expr" "end:" "start:" "self" "CppJava-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" () 131 11 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" () 140 12 ("list")}
        {Lisp-Entry "get-headers" () 145 11 ("headers")}
        {Lisp-Entry "get-first-special?" () 149 11 ("false")}
        {Lisp-Entry "Definitions" () 158 12 ()}
        {Lisp-Entry "get-definitions" () 162 11 ("Definitions")}
        {Lisp-Entry "Keywords" () 171 12 ()}
        {Lisp-Entry "get-keywords" () 175 11 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" () 184 14 ()}
        {Lisp-Entry "Syntax-Automata" () 187 14 ()}
        {Lisp-Entry "syntax-targets" () 191 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 197 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 203 11 ("get-keywords" "keyword" "get-definitions" "definition" "str" "dynamic" "function" "map" "false" "line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" () 209 11 ("cpp/java-constituent?" "self" "false" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" () 213 11 ("Keyword" "keyword" "Definition" "colorize-keyword" "definition" "Title" "Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}}})
"Properties-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "card" "Properties-Tree.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.card.Properties-Tree" () 37 9 ("Value-Column" "Property-Column" "register-autoclass" "jazz")
      {Lisp-Entry "Filter-Width" () 48 12 ()}
      {Lisp-Entry "Properties-Tree" () 52 7 ("center" "justification:" "owner" "toplevel-controls?:" "width:" "title:" "property" "name:" "on-context-menu" "form:" "Event-Handler" "context-menu-handler:" ":icons" "portfolio:" "row-spacing:" "0" "column-spacing:" "auto-expand/collapse?:" "row" "selection-mode:" "multiple-selection?:" "draggable?:" "value" "filled-column:" "Tree-View")
        {Lisp-Entry "filter" () 55 12 ("set-filter" "get-filter" "categorized")}
        {Lisp-Entry "filter-locked?" () 56 12 ("set-filter-locked?" "get-filter-locked?" "false")}
        {Lisp-Entry "filter-visible?" () 57 12 ("set-filter-visible?" "get-filter-visible?" "true")}
        {Lisp-Entry "property-handler" () 58 12 ("set-property-handler" "get-property-handler")}
        {Lisp-Entry "get-card" () 73 18 ("5" "child")}
        {Lisp-Entry "get-editor" () 77 18 ("get-card" "get-editor")}
        {Lisp-Entry "get-client" () 81 18 ("get-card" "get-client")}
        {Lisp-Entry "get-designer" () 85 18 ("get-card" "get-designer")}
        {Lisp-Entry "double-click" () 94 11 ("self" "acquire" "double-click" "when" "get-selected-row" "row" "let" "pos")}
        {Lisp-Entry "on-context-menu" () 100 11 ("context-menu" "else" "new-property-menu" "acquire" "acquired" "Info-Row" "is-not?" "get-client" "client" "selected-row" "row" "dynamic" "function" "with-context-click" "Design-Properties-Tree" "typed?" "5" "Point" "Filter-Menu" "new" "track-popup-menu" "get-v" "Filter-Width" "get-h" "" "and" "when" "header-height" "filter-visible?" "not" "filter-locked?" "or" "unless" "Tree-Header" "is?" "cond" "get-position" "pos" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "new-property-menu" () 120 11 ("layout-menu" "consolidate" "distribute" "false" "end-consolidate-group" "locate" "set-visible?" "begin" "branch-installed?" "if" "get-creator" "creator" "car" "any" "Property-Menu" "new" "menu" "let*" "client")}
        {Lisp-Entry "focus-delegate" () 139 11 ("editor-focus-delegate" "when" "selected-row" "row" "let")}
        {Lisp-Entry "save-edition" () 150 21 ("save-edition" "in-edition?" "Value-Row" "is?" "and" "when" "auto-expanded-row" "row" "let")}
        {Lisp-Entry "get-property-handler" () 161 18 ("property-handler")}
        {Lisp-Entry "set-property-handler" () 165 18 ("property-handler" "set!" "handler")}
        {Lisp-Entry "notify-property-change" () 169 18 ("property:" ":property-change" "Event" "new" "self" "invoke" "property-handler" "when" "property")}
        {Lisp-Entry "client-update" () 179 18 ("preserving-update" "close-auto-expanded" "dynamic" "function" "with-update-locked" "get-process" "get-debugging?" "unless")}
        {Lisp-Entry "find-property-index" () 191 11 ("field-name" "eq?" "symbol?" "if" "get-property" "property" "let" "Value-Row" "is?" "when" "rank" "row" "dynamic" "function" "for-each-visible-row" "return" "lambda" "call/ec" "target")}
        {Lisp-Entry "preserving-update" () 210 11 ("false" ":auto-expand?" "set-single-selection" "when" "find-property-index" "either" "index" "update" "get-client-default-property" "default" "selected-property" "selected" "let" "remove-every-row" "get-client" "null?" "if")}
        {Lisp-Entry "update" () 221 11 ("insert-properties" "remove-every-row" "dynamic" "function" "with-update-locked" "get-client-properties" "properties" "get-designer" "designer" "get-editor" "editor" "car" "any" "get-client" "client" "let*")}
        {Lisp-Entry "update-property" () 233 18 ("update-property-row" "get-row" "row" "find-property-index" "rank" "let" "eq?" "when" "car" "any" "get-client" "client" "let*" "property" "clt")}
        {Lisp-Entry "insert-properties" () 243 11 ("insert-properties" "Tree-Image" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "father:" "add-row" "row" "let" "title" "bind" "collapsed" "insert-property" "pair?" "if" "property" "dynamic" "function" "for-each" "properties" "father" "designer" "editor" "any" "client")}
        {Lisp-Entry "insert-property" () 257 11 ("position:" ":row" "state:" "father:" "add-row" "set-color" "set-title" "car" "set-value" "set-property" "list" "set-children" "set-row-height" "self" "set-parent" "owner-image" "Tree-Image" "owner" "Tree-Label" "label" "Dark-Gray" "Dark-Red" "name:" "Color" "color:" "image:" "class-of" "property-presentation" "title:" "Tree-Node" "new" "node" "=" "apply" "1" "length" "" "uniform?" "find-changed-property" "false" "null?" "or" "if" "changed?" "get-active-branch" "essay" "branch" "get-creator" "creator" "present" "value" "presented" "read-property" "component" "dynamic" "function" "map" "values" "get-filter-image" "image" "new-in" "either" "row" "get-row-instance" "instance" "get-row-class" "class" "let*" "position" "state" "property" "father" "designer" "editor" "any" "client")}
        {Lisp-Entry "get-client-default-property" () 283 11 ("class-of" "category-field" "get-default-property" "name" "Component" "is?" "car" "component" "length" "1" "=" "when" "get-client" "client" "let")}
        {Lisp-Entry "get-client-properties" () 293 11 ("get-component-properties" "Component" "is?" "component" "dynamic" "function" "map" "intersection" "apply" "when" "editor" "client")}
        {Lisp-Entry "get-component-properties" () 301 11 ("filter" ":filter" "get-filtered-properties" "filter-by-rights" "editor" "component")}
        {Lisp-Entry "owner-image" () 306 11 ("default-owner-image" "else" "root-owner-image" "get-reference" "eq?" "branch-owner-image" "Branch" "is?" "cond" "find-owner" "owner" "car" "component" "let*" "Info-Row" "neq?" "length" "1" "=" "and" "when" "property" "class" "client" "designer")}
        {Lisp-Entry "default-owner-image" () 315 29 ()}
        {Lisp-Entry "root-owner-image" () 319 29 ("Bitmap-Resource")}
        {Lisp-Entry "branch-owner-image" () 323 29 ("Bitmap-Resource")}
        {Lisp-Entry "reset-modified-properties" () 327 21 ("0" "Cell" "new" "invalidate-cell" "set-color" "get-color" "get-children" "car" "node" "let" "Value-Row" "is?" "when" "rank" "row" "dynamic" "function" "for-each-visible-row")}
        {Lisp-Entry "get-rights" () 342 11 ("get-rights" "editor")}
        {Lisp-Entry "filter-by-rights" () 346 11 ("filter-properties" "when" "find-component-rights" "component-rights" "get-client" "reference" "let*" "null?" "if" "get-rights" "essay" "rights" "let" "properties" "editor" "component")}
        {Lisp-Entry "selected-row" () 361 11 ("Value-Row" "is?" "when" "get-selected-row" "row" "let")}
        {Lisp-Entry "selected-property" () 367 11 ("get-property" "when" "selected-row" "row" "let")}
        {Lisp-Entry "select-property" () 373 18 ("set-single-selection" "generate-event?:" "false" ":auto-expand?" "set-selection" "null?" "if" "find-property-index" "rank" "let" "property")}
        {Lisp-Entry "consolidate-property" () 385 11 ("false" "set-edited-modified?" "set-property" "branch:" "remove-property" "branch" "for-each-branch" "read-property" "value" "get-creator" "creator" "component" "dynamic" "function" "for-each" "get-designer" "designer" "get-property" "property" "save-edition" "selected-row" "row" "let" "yes" "=" "when" "confirmation" "type:" "length" "format-plural" "format" "message-box" "code" "get-client" "client" "let*")}
        {Lisp-Entry "distribute-property" () 404 11 ("false" "set-edited-modified?" "branch:" "set-property" "branch" "for-each-branch" "read-property" "value" "get-creator" "creator" "component" "dynamic" "function" "for-each" "get-designer" "designer" "get-property" "property" "save-edition" "selected-row" "row" "let" "yes" "=" "when" "confirmation" "type:" "length" "format-plural" "format" "message-box" "code" "get-client" "client" "let*")}
        {Lisp-Entry "header-click" () 427 11 ("nextmethod" "end-edition" "close-auto-expanded" "in-edition?" "Value-Row" "is?" "and" "when" "auto-expanded-row" "row" "let" "column")}
        {Lisp-Entry "get-filter" () 441 18 ("filter")}
        {Lisp-Entry "set-filter" () 445 18 ("update" "node-column" "get-header" "invalidate-column-header" "set!" "filter" "/=" "when" "flt")}
        {Lisp-Entry "get-filter-locked?" () 452 18 ("filter-locked?")}
        {Lisp-Entry "set-filter-locked?" () 456 18 ("filter-locked?" "set!" "value")}
        {Lisp-Entry "get-filter-visible?" () 460 18 ("filter-visible?")}
        {Lisp-Entry "set-filter-visible?" () 464 18 ("filter-visible?" "set!" "value")}
        {Lisp-Entry "toggle-filter" () 468 18 ("categorized" "infos" "handlers" "properties" "set-filter" "all" "filter" "case")}
        {Lisp-Entry "property-change" () 482 18 ("invalidate-cell" "class-of" "get-client" "get-designer" "owner-image" "set-image" "get-cell-data" "data" "2" "Cell" "new" "cell" "let*" "update" "get-row" "row" "when" "find-property-index" "rank" "let" "value" "property" "component")}}
      {Lisp-Entry "Property-Column" () 498 7 ("Tree-Node-Column")
        {Lisp-Entry "filter-down?" () 501 8 ("false")}
        {Lisp-Entry "draw-header" () 504 11 ("down?" "get-column-title" "localize" "-" "get-filter-image" "1" "+" "draw-image-at" "filter-down?" "Filter-Width" "draw-header-at" "nextmethod" "filter-visible?" "not" "if" "flat?" "spaced?" "sorted" "height" "width" "v" "h" "context" "dc")}
        {Lisp-Entry "draw-image-at" () 513 11 ("+" "get-application" "get-icons-cache" "draw-image" "0" "1" "filter-down?" "if" "offset" "let" "image" "v" "h" "context" "dc")}
        {Lisp-Entry "header-down" () 519 11 ("self" "parent" "get-header" "invalidate-column-header" "down?" "true" "filter-down?" "set!" "unless" "filter-locked?" "Filter-Width" "get-h" "" "in-filter?" "let" "nextmethod" "filter-visible?" "not" "if" "pos")}
        {Lisp-Entry "header-up" () 533 11 ("header-click" "self" "parent" "get-header" "invalidate-column-header" "toggle-filter" "when" "false" "down?" "set!" "filter-down?" "filter?" "let" "Filter-Width" "get-h" "" "unless" "filter-locked?" "nextmethod" "filter-visible?" "not" "if" "pos")}
        {Lisp-Entry "draw-cell" () 550 11 ("0" "draw-title" "draw-image" "draw-level" "draw-background" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "get-filter-image" () 557 11 ("categorized" "handlers" "properties" "infos" "Bitmap-Resource" "all" "filter" "case")}
        {Lisp-Entry "get-column-title" () 567 11 ("categorized" "handlers" "properties" "infos" "all" "filter" "case")}}
      {Lisp-Entry "Value-Column" () 585 7 ("Tree-Label-Column")
        {Lisp-Entry "complete-mouse-down" () 588 11 ("row" "parent" "auto-expand/collapse" "auto?" "when" "nextmethod" "let*" "control?" "shift?" "pos" "cell")}
        {Lisp-Entry "draw-cell" () 596 11 ("self" "draw-cell" "get-value" "value" "let" "Value-Row" "is?" "when" "height" "width" "cell" "row" "context" "dc")}}
      {Lisp-Entry "Filter-Menu" () 611 7 ("categorized" "handlers" "properties" "infos" "on-action" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "all" "name:" "Context-Menu")
        {Lisp-Entry "finish" () 625 11 ("true" "get-filter" "locate" "set-selected?" "nextmethod" "rest")}
        {Lisp-Entry "on-action" () 631 11 ("set-filter" "get-sender" "get-name" "filter" "let" "evt")}}
      {Lisp-Entry "Property-Menu" () 642 7 ("on-distribute" "distribute" "end-consolidate-group" "on-consolidate" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "consolidate" "name:" "Context-Menu")
        {Lisp-Entry "on-consolidate" () 652 11 ("consolidate-property" "evt")}
        {Lisp-Entry "on-distribute" () 657 11 ("distribute-property" "evt")}}}})
"Properties-Wizard"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "wizard" "Properties-Wizard.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.wizard.Properties-Wizard" () 37 9 ("jazz")
      {Lisp-Entry "Properties-Wizard" () 48 7 ("properties" "panes" "content" "description" "title:" "title" "name:" "Wizard")
        {Lisp-Entry "wizard-title" () 66 16 ()}
        {Lisp-Entry "wizard-result" () 70 11 ("text" "properties" "locate" "get-string-content" "read-string-content")}}
      {Lisp-Entry "Properties-Pane" () 79 7 ("Default-GUI" "title:" "prefix" "on-cancel" "escape-press-handler:" "on-ok" ":host" "Event-Handler" "return-press-handler:" "Ansi-Var" "Font" "font:" "Default" "Text-Style" "default-style:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "text" "fill" "layout-type:" "content" "name:" "vscroll?:" "hscroll?:" "edge" "border-type:" "Dimension" "size:" "Point" "position:" "Wizard-Pane")
        {Lisp-Entry "focus-acquired" () 91 11 ("text" "locate" "acquire-focus")}}}})
"Property-Descriptor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "descriptor" "Property-Descriptor.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.descriptor.Property-Descriptor" () 37 9 ("jazz")
      {Lisp-Entry "Property-Descriptor" () 45 7 ("Component")
        {Lisp-Entry "title" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "domain" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-descriptor" () 57 16 ("Descriptors.Property-Descriptor")}}}})
"Property-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Property-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Property-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Property-Doc" () 45 7 ("Slot-Doc")
        {Lisp-Entry "getter" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "setter" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 52 16 (":doc" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-image" () 62 16 ("Bitmap-Resource")}}}})
"Property-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "property" "Property-Editor.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.property.Property-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Property-Editor" () 45 11 ()
        {Lisp-Entry "get-manager" () 48 35 ()}
        {Lisp-Entry "set-manager" () 49 35 ("manager")}
        {Lisp-Entry "get-edited-value" () 50 35 ()}
        {Lisp-Entry "set-edited-value" () 51 35 ("value")}
        {Lisp-Entry "present-edited-value" () 52 35 ("value")}
        {Lisp-Entry "get-edited-modified?" () 53 35 ()}
        {Lisp-Entry "set-edited-modified?" () 54 35 ("flag")}}}})
"Property-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "entry" "Property-Entry.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.entry.Property-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Property-Entry" () 47 7 ("fill" "layout-type:" "Layout-View")
        {Lisp-Entry "get-value" () 59 26 ()}
        {Lisp-Entry "set-value" () 63 26 ("value")}}}})
"Property-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "property" "Property-Manager.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.property.Property-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Property-Manager" () 45 11 ()
        {Lisp-Entry "editor-focus-gain" () 48 35 ()}
        {Lisp-Entry "editor-focus-lose" () 49 35 ("view" "window")}
        {Lisp-Entry "editor-left-arrow" () 50 35 ("modifiers")}
        {Lisp-Entry "editor-up-arrow" () 51 35 ("modifiers")}
        {Lisp-Entry "editor-right-arrow" () 52 35 ("modifiers")}
        {Lisp-Entry "editor-down-arrow" () 53 35 ("modifiers")}
        {Lisp-Entry "editor-return" () 54 35 ()}}}})
"Property-Moniker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "moniker" "Property-Moniker.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.moniker.Property-Moniker" () 37 9 ("jazz")
      {Lisp-Entry "Property-Moniker" () 46 7 ("Moniker")
        {Lisp-Entry "designer" () 55 18 ()}
        {Lisp-Entry "reference" () 56 18 ()}
        {Lisp-Entry "branch" () 57 18 ()}
        {Lisp-Entry "class" () 58 18 ()}
        {Lisp-Entry "path" () 59 18 ()}
        {Lisp-Entry "property" () 60 18 ()}
        {Lisp-Entry "image" () 61 18 ()}
        {Lisp-Entry "presented" () 62 18 ()}
        {Lisp-Entry "location" () 63 18 ()}
        {Lisp-Entry "extension" () 64 18 ()}
        {Lisp-Entry "print" () 67 11 ("property" "path" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "compare-object" () 73 11 (":not-equal" "else" ":equal" "get-property" "property" "get-path" "path" "=" "get-branch" "branch" "get-designer" "designer" "eq?" "and" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "compare-pathname" () 85 11 (":equal" "compare-object" "eq?" "object")}
        {Lisp-Entry "initialize" () 94 11 ("extension~self" "location~self" "presented~self" "image~self" "property~self" "path~self" "class~self" "branch~self" "reference~self" "designer~self" "set!" "nextmethod" "extension" "location" "presented" "image" "property" "path" "class" "branch" "reference" "designer")}
        {Lisp-Entry "get-designer" () 113 18 ("designer")}
        {Lisp-Entry "get-reference" () 117 18 ("reference")}
        {Lisp-Entry "get-branch" () 121 18 ("branch")}
        {Lisp-Entry "get-class" () 125 18 ("class")}
        {Lisp-Entry "get-path" () 129 18 ("path")}
        {Lisp-Entry "set-path" () 133 18 ("path" "set!" "value")}
        {Lisp-Entry "get-image" () 137 18 ("image")}
        {Lisp-Entry "get-location" () 141 18 ("location")}
        {Lisp-Entry "get-component-name" () 150 18 ("branch" "branch:" "path" "designer" "get-name")}
        {Lisp-Entry "get-component-property" () 154 18 ("branch" "branch:" "path" "designer" "get-property" "property")}
        {Lisp-Entry "set-component-property" () 158 18 ("branch" "branch:" "path" "designer" "set-property" "value" "property")}
        {Lisp-Entry "get-writable?" () 167 11 ("true")}
        {Lisp-Entry "exists?" () 171 11 ("true")}
        {Lisp-Entry "get-base" () 175 11 ("presented")}
        {Lisp-Entry "get-file" () 179 11 ()}
        {Lisp-Entry "get-name" () 183 11 ("presented")}
        {Lisp-Entry "get-extension" () 187 11 ("extension")}
        {Lisp-Entry "get-modification-time" () 191 11 ()}
        {Lisp-Entry "present" () 195 11 ("property" "path" "format")}
        {Lisp-Entry "present-base" () 199 11 ("presented")}
        {Lisp-Entry "present-location" () 203 11 ("location" "join")}
        {Lisp-Entry "load-lines" () 207 11 ("property" "get-component-property" "JzLoadLines")}
        {Lisp-Entry "save-lines" () 211 11 ("cn" "join" "property" "set-component-property" "lines")}}}})
"Property-Rights"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "security" "Property-Rights.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.security.Property-Rights" () 37 9 ("jazz")
      {Lisp-Entry "Property-Rights" () 44 7 ("Rights")}}})
"Property-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "property" "Property-View.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.property.Property-View" () 37 9 ("jazz")
      {Lisp-Entry "Property-View" () 47 7 ("fill" "layout-type:" "Layout-View")
        {Lisp-Entry "property_" () 51 12 ("set-property" "get-property")}
        {Lisp-Entry "get-property" () 63 18 ("property")}
        {Lisp-Entry "set-property" () 67 18 ("property" "set!" "value")}
        {Lisp-Entry "get-entry" () 71 18 ("first-child")}}}})
"Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "provider" "Provider.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.provider.Provider" () 37 9 ("jazz")
      {Lisp-Entry "Providers" () 50 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "register-provider" () 54 20 ("Providers" "hash-set!" "external-name" "name" "let" "provider")}
      {Lisp-Entry "get-provider" () 59 20 ("error" "Providers" "hash-ref" "either" "name")}
      {Lisp-Entry "get-providers" () 64 20 ("Providers" "gather")}
      {Lisp-Entry "Datatypes" () 73 12 ("Sybase-Datatype" "SQLServer-Datatype" "Oracle-Datatype" "dBase-Datatype" "Access-Datatype")}
      {Lisp-Entry "Datatype-Classes" () 76 12 ()}
      {Lisp-Entry "get-datatypes" () 80 20 ("Datatypes" "load" "map" "set!" "Datatype-Classes" "unless")}
      {Lisp-Entry "Provider" () 91 7 ("Object")
        {Lisp-Entry "external-name" () 94 26 ()}
        {Lisp-Entry "get-datatype" () 103 26 ()}
        {Lisp-Entry "supports-multirequests?" () 112 26 ("false")}
        {Lisp-Entry "format-value" () 121 26 ("->string" "else" "format-datetime" "Date" "is?" "format-boolean" "boolean?" "format-string" "string?" "format-variable" "symbol?" "cond" "value")}
        {Lisp-Entry "format-variable" () 129 29 ("->string" "variable")}
        {Lisp-Entry "format-string" () 133 11 ("format" "error" "find" "if" "string")}
        {Lisp-Entry "format-boolean" () 139 11 ("if" "value")}
        {Lisp-Entry "format-date" () 143 26 (":date-separator" "present-date" "date")}
        {Lisp-Entry "format-datetime" () 147 26 (":date-separator" "present" "date")}
        {Lisp-Entry "present" () 156 26 ()}
        {Lisp-Entry "browser-class" () 165 26 ()}
        {Lisp-Entry "new-updater" () 174 26 ("Inventory-Updater" "new" "connection")}}}})
"Proxy-Dispatcher"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "remote" "Proxy-Dispatcher.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jrm.remote.Proxy-Dispatcher" () 37 9 ("jazz")
      {Lisp-Entry "Proxy-Dispatcher" () 49 7 ("Object")
        {Lisp-Entry "stop-dispatcher" () 52 18 ()}
        {Lisp-Entry "unmarshal-ior" () 61 18 ("new" "proxy-remote-class" "remote-class" "get-remotable" "autoload" "remotable-class" "let*" "ior")}}}})
"Proxy-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Proxy-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.frame.Proxy-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Proxy-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "present" () 53 11 ("name")}
        {Lisp-Entry "get-image" () 57 11 ("Bitmap-Resource")}}}})
"Pulsable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Pulsable.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.utility.Pulsable" () 37 9 ("jazz")
      {Lisp-Entry "Pulsable" () 44 11 ()
        {Lisp-Entry "call-pulse" () 47 35 ()}
        {Lisp-Entry "pulse" () 48 35 ()}}}})
"Pulse"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Pulse.fusion"} {Time 128360913800000000L}
    {Lisp-Entry "jazz.library.utility.Pulse" () 37 9 ("jazz")
      {Lisp-Entry "Pulse" () 44 7 ("Pulsable" "Component")
        {Lisp-Entry "owner" () 47 12 ("generate" "accessors")}
        {Lisp-Entry "period" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "pulse-handler" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "window" () 52 8 ()}
        {Lisp-Entry "identifier" () 53 8 ()}
        {Lisp-Entry "start" () 61 18 ("NULL" "period" "self" "object-address" "get-handle" "SetTimer" "owner" "get-player" "window" "set!" "identifier" "null?" "when")}
        {Lisp-Entry "stop" () 68 18 ("set!" "window" "get-handle" "KillTimer" "identifier" "when")}
        {Lisp-Entry "call-pulse" () 81 11 ("pulse" ":mouse-down" "Event" "new" "self" "invoke" "pulse-handler" "if")}
        {Lisp-Entry "pulse" () 87 11 ()}}}})
"Push-Button"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Push-Button.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Push-Button" () 37 9 ("jazz")
      {Lisp-Entry "Push-Button" () 47 7 ("View")
        {Lisp-Entry "default?" () 50 12 ("set-default?" "get-default?" "false")}
        {Lisp-Entry "flat?" () 51 12 ("set-flat?" "get-flat?" "false")}
        {Lisp-Entry "state" () 54 8 ("inactive")}
        {Lisp-Entry "mouse-activate?" () 57 11 ("false")}
        {Lisp-Entry "get-default?" () 66 18 ("default?")}
        {Lisp-Entry "set-default?" () 70 18 ("invalidate-view" "default?" "set!" "flag")}
        {Lisp-Entry "get-flat?" () 75 18 ("flat?")}
        {Lisp-Entry "set-flat?" () 79 18 ("flat?" "set!" "value")}
        {Lisp-Entry "get-state" () 88 18 ("state")}
        {Lisp-Entry "set-state" () 92 18 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "default-size" () 102 11 ("Dimension")}
        {Lisp-Entry "preferred-size" () 106 11 ("font" "text-extent" "get-width" "+" "Dimension" "new" "default-size" "not" "if" "localize" "title" "let")}
        {Lisp-Entry "mouse-enter" () 118 11 ("pushed" "out-pushed" "highlighted" "set-state" "inactive" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-leave" () 125 11 ("out-pushed" "pushed" "inactive" "set-state" "highlighted" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-down" () 132 11 ("pushed" "set-state" "get-enabled?" "when" "pos")}
        {Lisp-Entry "drag-up" () 137 11 ("inactive" "out-pushed" "highlighted" "set-state" "pushed" "get-state" "case" "up" "unwind-protect" "get-enabled?" "when" "rest" "pos")}
        {Lisp-Entry "up" () 146 11 ("self" "process-action" "pushed" "get-state" "=" "when")}
        {Lisp-Entry "draw" () 156 11 ("+" "draw-text" "set-text-color" "v" "2" "-" "quotient" "h" "get-text-extent" "extent" "get-height" "height" "get-width" "width" "get-size" "size" "let*" "false" "true" "eq?" "draw-push-button" "rectangle" "edges:" "raised" "outer:" "draw-edge" "flat?" "inflate-rect" "set!" "Dark" "Black" "name:" "Color" "if" "frame-rect" "default?" "when" "get-enabled?" "enabled?" "get-bounds" "rect" "0" "else" "1" "pushed" "state" "case" "offset" "localize" "either" "title" "let" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "property-presentation" () 183 16 ("nextmethod" "else" "flat?" "default?" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 190 11 ("nextmethod" "else" "Boolean-Row" "new" "flat?" "default?" "field-name" "case" "property")}}}})
"Push-Combo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Push-Combo.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Push-Combo" () 37 9 ("jazz")
      {Lisp-Entry "Push-Combo" () 47 7 ("body" "name:" "Dimension" "size:" "Combo-View")}}})
"Push-Icon"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Push-Icon.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Push-Icon" () 37 9 ("jazz")
      {Lisp-Entry "Push-Icon" () 47 7 (":icons" "portfolio:" "tooltip?:" "Dimension" "size:" "Push-Tool")
        {Lisp-Entry "get-combo" () 59 18 ("parent")}
        {Lisp-Entry "get-enabled?" () 68 11 ("parent" "get-enabled?")}
        {Lisp-Entry "get-state" () 72 11 ("self" "parent" "child-state")}
        {Lisp-Entry "mouse-enter" () 76 11 ("self" "parent" "enter-child")}
        {Lisp-Entry "mouse-leave" () 80 11 ("self" "parent" "leave-child")}
        {Lisp-Entry "mouse-down" () 84 11 ("self" "parent" "child-down" "pos")}
        {Lisp-Entry "drag-up" () 88 11 ("self" "parent" "child-up" "rest" "pos")}}}})
"Push-Tool"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Push-Tool.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Push-Tool" () 37 9 ("jazz")
      {Lisp-Entry "Push-Tool" () 46 7 ("Image-Tool")
        {Lisp-Entry "default-size" () 49 11 ("Dimension")}
        {Lisp-Entry "up" () 53 11 ("self" "process-action" "pushed" "get-state" "=" "when")}}}})
"Python-Class-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "python" "Python-Class-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.python.python.Python-Class-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Python-Class-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"Python-Def-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "python" "Python-Def-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.python.python.Python-Def-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Python-Def-Entry" () 45 7 ("Cpp-Definition-Entry")
        {Lisp-Entry "get-image" () 53 11 ("Bitmap-Resource")}}}})
"Python-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "python" "Python-Explorer.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.python.python.Python-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "Python-Explorer" () 45 7 ("CppJava-Explorer")}}})
"Python-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "python" "Python-File-Entry.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.python.python.Python-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Python-File-Entry" () 45 7 ("File-Entry")}}})
"Python-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "python" "Python-Parser.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.python.python.Python-Parser" () 37 9 ("jazz")
      {Lisp-Entry "Python-Parser" () 45 7 ("File-Parser")
        {Lisp-Entry "parse" () 48 11 ("parse-definitions" "catalog" "Python-File-Entry" "new" "time" "file")}
        {Lisp-Entry "parse-definitions" () 52 11 ("get-output" "length" "0" "naturals" "find-def" "fn" "put" "when" "find-class" "class" "n" "line" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "load-lines" "lines" "let" "file")}
        {Lisp-Entry "Class" () 72 12 ()}
        {Lisp-Entry "find-class" () 76 11 ("subseq" "Python-Class-Entry" "new" "cpp/java-constituent?" "skip" ">" "+" "start" "let*" "start:" "Class" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}
        {Lisp-Entry "Def" () 94 12 ()}
        {Lisp-Entry "find-def" () 98 11 ("subseq" "Python-Def-Entry" "new" "cpp/java-constituent?" "skip" ">" "+" "start" "let*" "start:" "Def" "search" "when" "skip-whitespace" "col" "length" "len" "let" "n" "line")}}}})
"Python-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "python" "Python-Syntax.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.python.python.Python-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "Python-Syntax" () 45 7 ("Text-Syntax")
        {Lisp-Entry "get-constituent-test" () 53 11 ("cpp/java-constituent?")}}}})
"Python-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "python" "Python-Text-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.python.python.Python-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Python-Text-Preferences" () 49 7 ("completions:" "Dark-Blue" "keyword-color:" "definition-color:" "Dark-Green" "balanced-comment-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "line-comment-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "balanced-comment-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "definition-color" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "keyword-color" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "keywords" () 57 12 ("generate" "accessors")}
        {Lisp-Entry "completions" () 58 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 82 11 ("keyword-color" "definition-color" "line-comment-color" "title-color" "completions" "keywords")}
        {Lisp-Entry "property-presentation" () 88 16 ("nextmethod" "else" "completions" "keywords" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 100 11 ("nextmethod" "else" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}}}})
"Python-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "python" "Python-Text-View.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.python.python.Python-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Python-Text-View" () 46 7 ("Code-Text-View")
        {Lisp-Entry "install" () 49 11 ("get-keyword-color" "Keyword" "get-definition-color" "Definition" "get-balanced-comment-color" "Balanced-Comment" "get-line-comment-color" "Line-Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 60 16 ("python-text" "rest")}
        {Lisp-Entry "preferences" () 64 11 ("python-text" "documents" "get-preferences")}
        {Lisp-Entry "frame-workspaces" () 73 11 ("text")}
        {Lisp-Entry "favorite-completions" () 82 11 ("preferences" "get-completions")}
        {Lisp-Entry "commented?" () 86 11 ("Line-Comment" "Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "return-press" () 98 11 ("tabulate" "nextmethod" "key")}
        {Lisp-Entry "explorer-class" () 108 11 ("Python-Explorer")}
        {Lisp-Entry "get-context" () 117 11 ("cpp/java")}
        {Lisp-Entry "current-name" () 121 11 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" () 125 11 ("read-string-element" "element" "=" "if" "0" "length" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" () 134 11 ("current-name")}
        {Lisp-Entry "current-expr-range" () 138 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 144 11 ("get-range" "outer-expr" "end:" "start:" "self" "Python-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" () 150 11 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" () 159 12 ()}
        {Lisp-Entry "get-headers" () 163 11 ("headers")}
        {Lisp-Entry "get-first-special?" () 167 11 ("false")}
        {Lisp-Entry "Definitions" () 176 12 ()}
        {Lisp-Entry "get-definitions" () 180 11 ("Definitions")}
        {Lisp-Entry "Keywords" () 189 12 ()}
        {Lisp-Entry "get-keywords" () 213 29 ("Keywords")}
        {Lisp-Entry "Balanced-Comment" () 223 14 ()}
        {Lisp-Entry "Syntax-Targets" () 227 14 ()}
        {Lisp-Entry "Syntax-Automata" () 230 14 ()}
        {Lisp-Entry "syntax-targets" () 234 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 240 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 246 11 ("get-keywords" "keyword" "get-definitions" "definition" "str" "dynamic" "function" "map" "balanced-comment" "Balanced-Comment" "false" "line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" () 253 11 ("cpp/java-constituent?" "self" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" () 257 11 ("Keyword" "keyword" "Definition" "colorize-keyword" "definition" "Balanced-Comment" "colorize-balanced-comment" "balanced-comment" "Title" "Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "colorize-balanced-comment" () 265 11 ("set!" "apply-coloring" "3" "2" "+" "Cell" "new" "balanced-comment" "=" "col" "row" "type" "target" "bind" "car" "info" "not-null?" "while" "return" "lambda" "call/ec" "get-char" "/=" "if" "cdr" "scan" "let" "style" "colorizer" "end" "start" "found")}}}})
"Q"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "Q.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.test.Q" () 37 9 ("new" "h" "w" "lambda" "Q" "register-literal-constructor" "jazz")
      {Lisp-Entry "Q" () 55 7 ("Object")
        {Lisp-Entry "w" () 58 15 ("generate")}
        {Lisp-Entry "h" () 59 15 ("generate")}
        {Lisp-Entry "initialize" () 62 11 ("set-h" "set-w" "nextmethod" "h" "w" "q")}
        {Lisp-Entry "fold-literal" () 68 11 ("get-h" "get-w" "Q" "new" "q")}
        {Lisp-Entry "print" () 72 11 ("get-h" "get-w" "format" "detail" "output" "q")}}}})
"Quick-Find"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "ide" "Quick-Find.fusion"} {Time 128368663160000000L}
    {Lisp-Entry "jazz.ui.ide.Quick-Find" () 37 9 ("jazz")
      {Lisp-Entry "Quick-Find" () 48 7 ("content" "vscroll?:" "hscroll?:" "scroller" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "install" () 57 11 ("true" "get-controller" "set-tool?" "scroller" "locate" "set-client" "new-text" "text" "let" "nextmethod" "rest")}
        {Lisp-Entry "new-text" () 64 11 ("on-return-press" "method-name:" "self" "target:" "Event-Handler" "return-press-handler:" "tooltip-text:" "tooltip?:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "false" "show-unfocused-selection?:" "true" "focus-selects-all?:" "text" "name:" "scroller" "locate" "get-content" "parent:" "IDE-Text-View" "new")}
        {Lisp-Entry "get-text" () 83 18 ("text" "scroller" "locate" "get-content" "child")}
        {Lisp-Entry "get-string-content" () 87 18 ("get-text" "get-string-content")}
        {Lisp-Entry "on-return-press" () 96 11 ("select-previous" "select-next" "not" "list" "targets" "get-string-content" "content" "get-text-view" "text" "Document" "get-guest" "guest" "let" "bell" "View-Host" "is-not?" "if" "first-child" "frame" "get-stage" "stage" "get-shift?" "shift?" "get-control?" "control?" "get-key" "key" "let*" "evt")}}}})
"Radio-Button"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Radio-Button.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Radio-Button" () 37 9 ("jazz")
      {Lisp-Entry "Radio-Button" () 47 7 ("Selectable" "Groupable" "View")
        {Lisp-Entry "box-size" () 50 14 ()}
        {Lisp-Entry "group" () 54 12 ("set-group" "get-group")}
        {Lisp-Entry "selected?" () 55 12 ("set-selected?" "get-selected?" "false")}
        {Lisp-Entry "tracking?" () 58 8 ("false")}
        {Lisp-Entry "inside?" () 59 8 ("false")}
        {Lisp-Entry "default-size" () 62 11 ("Dimension")}
        {Lisp-Entry "get-group" () 71 11 ("group")}
        {Lisp-Entry "set-group" () 75 11 ("group" "set!" "value")}
        {Lisp-Entry "get-selected?" () 84 11 ("selected?")}
        {Lisp-Entry "set-selected?" () 88 11 ("not" "set-selected-state" "get-current-selection" "current" "let" "selected?" "/=" "when" "flag")}
        {Lisp-Entry "unselect" () 96 11 ("false" "set-selected-state" "selected?" "when")}
        {Lisp-Entry "get-current-selection" () 101 11 ("parent" "get-children" "get-selected?" "Radio-Button" "is?" "and" "child" "dynamic" "function" "find-if")}
        {Lisp-Entry "set-selected-state" () 108 11 ("invalidate-view" "selected?" "set!" "flag")}
        {Lisp-Entry "draw" () 118 11 ("draw-text" "Black" "name:" "Color" "set-text-color" "inside?" "tracking?" "and" "enabled?" ":inactive?" "selected?" ":selected?" "box-size" "1" "+" "0" "Rect" "new" "draw-radio-button" "2" "-" "quotient" "v" "h" "get-text-extent" "get-height" "empty-string?" "not" "or" "if" "height" "localize" "either" "title" "let*" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "mouse-down" () 133 11 ("invalidate-view" "acquire-capture" "inside?" "true" "tracking?" "set!" "enabled?" "when" "pos")}
        {Lisp-Entry "drag-move" () 141 11 ("invalidate-view" "set!" "inside?" "neq?" "over-view?" "over?" "let" "tracking?" "when" "pos")}
        {Lisp-Entry "drag-up" () 149 11 ("self" "process-action" "true" "set-modified?" "selected?" "not" "set-selected?" "inside?" "false" "set!" "release-capture" "tracking?" "when" "rest" "pos")}
        {Lisp-Entry "cursor-update" () 164 11 (":finger" "set-cursor" "nextmethod" "Jedi" "get-application" "typed?" "alt-down?" "not" "or" "if" "pos")}
        {Lisp-Entry "mouse-copy" () 170 11 ("true" "title" "mouse-insert" "Jedi" "get-application" "typed?" "when" "destination" "pos")}}}})
"Radio-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Radio-Item.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.Radio-Item" () 37 9 ("jazz")
      {Lisp-Entry "Radio-Item" () 45 7 ("Label-Item")
        {Lisp-Entry "selected?" () 48 12 ("set-selected?" "get-selected?" "false")}
        {Lisp-Entry "get-selected?" () 56 18 ("selected?")}
        {Lisp-Entry "set-selected?" () 60 18 ("invalidate-view" "selected?" "set!" "flag")}
        {Lisp-Entry "preferred-prefix-width" () 70 11 ("0" "selected?" "if")}
        {Lisp-Entry "draw-prefix" () 79 11 ("Bitmap-Resource" "get-small-icons-cache" "draw-image" "2" "top" "5" "left" "get-application" "appl" "let" "selected?" "when" "context" "dc")}}}})
"Radio-Tool"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Radio-Tool.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Radio-Tool" () 37 9 ("jazz")
      {Lisp-Entry "Radio-Tool" () 46 7 ("Selectable" "Groupable" "Image-Tool")
        {Lisp-Entry "group" () 49 12 ("set-group" "get-group")}
        {Lisp-Entry "selected?" () 50 12 ("set-selected?" "get-selected?" "false")}
        {Lisp-Entry "default-size" () 53 11 ("Dimension")}
        {Lisp-Entry "draw-frame" () 62 11 ("nextmethod" "draw-pushed" "out-pushed" "highlighted" "inactive" "get-state" "memq?" "selected?" "and" "if" "dc")}
        {Lisp-Entry "draw-tool" () 68 11 ("get-enabled?" "enabled?:" "image" "draw" "1" "2" "pushed" "get-state" "=" "selected?" "or" "if" "offset" "let" "context" "dc")}
        {Lisp-Entry "draw-background" () 73 11 ("nextmethod" "Light-Background" "name:" "Color" "fill-rect" "get-bounds" "bounds" "with" "selected?" "if" "get-state" "state" "let" "context" "dc")}
        {Lisp-Entry "up" () 86 11 ("self" "process-action" "true" "false" "set-selected?" "find-pushed" "let" "selected?" "not" "pushed" "get-state" "=" "and" "when")}
        {Lisp-Entry "radio-group" () 100 11 ("parent" "get-children" "group" "get-group" "eq?" "Radio-Tool" "is?" "and" "component" "dynamic" "function" "collect-if")}
        {Lisp-Entry "find-pushed" () 107 11 ("radio-group" "get-selected?" "view" "dynamic" "function" "find-if")}
        {Lisp-Entry "get-group" () 118 11 ("group")}
        {Lisp-Entry "set-group" () 122 11 ("group" "set!" "value")}
        {Lisp-Entry "get-selected?" () 131 11 ("selected?")}
        {Lisp-Entry "set-selected?" () 135 11 ("not" "set-selected-state" "find-pushed" "current" "let" "selected?" "/=" "when" "flag")}
        {Lisp-Entry "unselect" () 143 11 ("false" "set-selected-state" "selected?" "when")}
        {Lisp-Entry "set-selected-state" () 148 11 ("invalidate-view" "selected?" "set!" "flag")}}}})
"Range"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Range.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.utility.Range" () 37 9 ("jazz")
      {Lisp-Entry "Range" () 43 7 ("Object")
        {Lisp-Entry "start" () 46 15 ()}
        {Lisp-Entry "end" () 47 15 ()}
        {Lisp-Entry "initialize" () 50 11 ("end" "start" "set!" "nextmethod" "e" "s")}
        {Lisp-Entry "copy-object" () 56 11 ("end" "start" "Range" "new" "deep?")}
        {Lisp-Entry "compare-object" () 60 11 (":not-equal" "else" ":equal" "get-end" "end" "get-start" "start" "=" "and" ":incompatible" "Range" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 69 11 ("end" "start" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-start" () 76 25 ("start")}
        {Lisp-Entry "get-end" () 80 25 ("end")}
        {Lisp-Entry "extent" () 84 26 ("start" "end" "-")}
        {Lisp-Entry "cardinality" () 88 26 ("1" "extent" "+")}
        {Lisp-Entry "inside?" () 92 18 ("end" "" "start" ">=" "and" "n")}
        {Lisp-Entry "before?" () 97 18 ("start" "" "n")}
        {Lisp-Entry "after?" () 101 18 ("end" ">" "n")}
        {Lisp-Entry "intersect?" () 105 18 ("start" "get-end" ">=" "end" "get-start" "" "and" "range")}
        {Lisp-Entry "intersect" () 110 18 ("get-end" "end" "generic-min" "get-start" "start" "generic-max" "self" "class-of" "new" "intersect?" "when" "range")}}}})
"Range-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Range-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Range-Row" () 37 9 ("jazz")
      {Lisp-Entry "Range-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 53 11 ("get-end" "get-start" "format" "null?" "if" "range")}
        {Lisp-Entry "get-edited-value" () 66 11 ("Range" "new" "end" "start" "bind" "editor" "get-string-content" "read-delimited-string" "list" "let")}
        {Lisp-Entry "edit" () 72 11 ("get-tree" "expand/collapse" "get-end" "Cell-Row" "value" "get-start" "self" "add-row" "edit-in-cell")}
        {Lisp-Entry "close-editor" () 79 11 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" () 84 11 ("get-sons" "nextmethod" "or")}}}})
"Read-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exception" "Read-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.exception.Read-Error" () 37 9 ("jazz")
      {Lisp-Entry "Read-Error" () 44 7 ("Error")
        {Lisp-Entry "source" () 47 8 ()}
        {Lisp-Entry "start" () 48 8 ()}
        {Lisp-Entry "end" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("end~self" "start~self" "source~self" "set!" "nextmethod" "apply" "others" "end" "start" "source" "bind-keywords" "rest")}
        {Lisp-Entry "get-source" () 65 18 ("source")}
        {Lisp-Entry "get-start" () 69 18 ("start")}
        {Lisp-Entry "get-end" () 73 18 ("end")}
        {Lisp-Entry "get-range" () 77 18 ("end" "start" "Range" "new")}}}})
"Reader-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Reader-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Reader-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Reader-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-reader" "invoke")}
        {Lisp-Entry "test-reader" () 61 11 ("=" "3" "2" "1" "equal?" "rpt" "validate")}}}})
"Recordable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "recorder" "Recordable.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.recorder.Recordable" () 37 9 ("jazz")
      {Lisp-Entry "Recordable" () 45 11 ()}}})
"Recorder-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Recorder-Menu.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.Recorder-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Recorder-Menu" () 46 7 ("play-recording-5" "play-recording-4" "play-recording-3" "play-recording-2" "play-recording-1" "play-recording-0" "play-recording" "set-active-recording" "output-recording" "register-recording" "present-recording" "continue-recording" "stop-recording" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "start-recording" "name:" "Menu")}}})
"Recordset"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "connection" "Recordset.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.connection.Recordset" () 37 9 ("jazz")
      {Lisp-Entry "Recordset" () 45 7 ("Object")
        {Lisp-Entry "initialize" () 48 11 ("destroy-mandatory" "open" "apply" "when" "setup-recordset" "nextmethod" "rest" "command")}
        {Lisp-Entry "setup-recordset" () 56 19 ("initargs")}
        {Lisp-Entry "destroy" () 60 11 ("nextmethod" "destroy-recordset")}
        {Lisp-Entry "destroy-recordset" () 65 19 ()}
        {Lisp-Entry "opened?" () 74 26 ()}
        {Lisp-Entry "open" () 78 19 ("rest" "command")}
        {Lisp-Entry "get-state" () 87 26 ()}
        {Lisp-Entry "new-recordset-metadata" () 96 26 ()}
        {Lisp-Entry "get-field-type" () 100 26 ("field" "metadata")}
        {Lisp-Entry "get-field-value" () 104 26 ("field" "metadata")}
        {Lisp-Entry "safe-field-value" () 108 26 ("get-field-value" "field" "metadata")}
        {Lisp-Entry "next-recordset!" () 117 26 ()}
        {Lisp-Entry "get-columns" () 126 26 ("0" "naturals" "get-column" "n" "dynamic" "function" "map" "get-count" "count" "let" "new-recordset-metadata" "metadata" "with-closed")}
        {Lisp-Entry "get-rows" () 134 26 ("missing?" "get-output" "rows" "increase!" "apply" "Data-Row" "null?" "put" "safe-field-value" "field" "map" "values" "set!" "begin" "=" "neq?" "and" "if" "" "eq?" "or" "when" "dynamic" "function" "iterate-records" "false" "has-more?" "0" "count" "List-Factory" "new" "fact" "let" "get-fields" "fields" "new-recordset-metadata" "metadata" "with-closed" "data-class" "data-class:" "true" "max-load" "max-load:" "table")}
        {Lisp-Entry "move-first" () 165 26 ()}
        {Lisp-Entry "move-last" () 169 26 ()}
        {Lisp-Entry "move-next" () 173 26 ()}
        {Lisp-Entry "move-previous" () 177 26 ()}
        {Lisp-Entry "at-bof?" () 181 26 ()}
        {Lisp-Entry "at-eof?" () 185 26 ()}
        {Lisp-Entry "iterate-records" () 189 26 ("proc")}
        {Lisp-Entry "for-each-record" () 193 26 ("true" "dynamic" "function" "iterate-records" "proc")}
        {Lisp-Entry "create-table" () 205 18 (":max-load" "load-table" "Data-Table" "new" "table" "let" "true" "max-load" "max-load:" "name" "name:")}
        {Lisp-Entry "load-table" () 211 21 ("set-missing?" "set-rows" "set-columns" ":data-class" ":max-load" "get-rows" "missing?" "rows" "receive" "get-columns" "columns" "let" "data-class" "data-class:" "true" "max-load" "max-load:" "table")}}}})
"Recordset-Metadata"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "connection" "Recordset-Metadata.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.connection.Recordset-Metadata" () 37 9 ("jazz")
      {Lisp-Entry "Recordset-Metadata" () 45 7 ("Object")
        {Lisp-Entry "get-column" () 53 18 ("get-field-precision" "width:" "get-field-size" "min" "get-field-type" "Datatype" ":datatype" "get-field-name" "name:" "Data-Column" "new" "get-field" "field" "with-closed" "field-name")}
        {Lisp-Entry "get-fields" () 67 18 ("get-field" "collect" "get-count" "below" "0" "from" "n" "for" "loop")}
        {Lisp-Entry "get-count" () 72 26 ()}
        {Lisp-Entry "get-field" () 76 26 ("field-name")}
        {Lisp-Entry "get-field-value" () 80 26 ("field-name")}
        {Lisp-Entry "get-field-name" () 84 26 ("field")}
        {Lisp-Entry "get-field-type" () 88 26 ("field")}
        {Lisp-Entry "get-field-size" () 92 26 ("field")}
        {Lisp-Entry "get-field-precision" () 96 26 ("field")}}}})
"Rect-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Rect-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Rect-Row" () 37 9 ("jazz")
      {Lisp-Entry "Rect-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 53 11 ("get-bottom" "get-right" "get-top" "get-left" "format" "null?" "if" "rect")}
        {Lisp-Entry "get-edited-value" () 68 11 ("Rect" "new" "bottom" "right" "top" "left" "bind" "read-delimited-string" "list" "=" "if" "editor" "get-string-content" "string" "let")}
        {Lisp-Entry "edit" () 77 11 ("get-tree" "expand/collapse" "get-bottom" "get-right" "get-top" "get-left" "self" "add-row" "value" "when" "edit-in-cell")}
        {Lisp-Entry "close-editor" () 87 11 ("remove-every-son" "nextmethod")}
        {Lisp-Entry "in-edition?" () 92 11 ("get-sons" "nextmethod" "or")}}}})
"Reference-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Reference-Row.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.row.Reference-Row" () 37 9 ("jazz")
      {Lisp-Entry "Reference-Row" () 45 7 ("Combo-Row")}}})
"Region"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Region.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.Region" () 37 9 ("jazz")
      {Lisp-Entry "Region" () 46 7 ("Handle-Container" "Object")
        {Lisp-Entry "handle" () 49 15 ("generate")}
        {Lisp-Entry "rectangles" () 50 15 ("generate")}
        {Lisp-Entry "initialize" () 53 11 ("destroy-mandatory" "0" "else" "Rect" "new" "CreateRectRgn" "list" "rectangles" "CreateRectRgnIndirect" "rect->RECT" "with" "handle~self" "set!" "cond" "nextmethod" "bottom" "bottom:" "right" "right:" "top" "top:" "left" "left:" "rect" "rect:" "handle" "handle:")}
        {Lisp-Entry "destroy" () 69 11 ("nextmethod" "handle" "DeleteObject")}
        {Lisp-Entry "offset!" () 74 18 ("inexact->exact" "handle" "OffsetRgn" "v" "h")}
        {Lisp-Entry "combine!" () 78 18 ("get-rectangles" "append" "rectangles" "set!" "get-combine-mode" "get-handle" "handle" "CombineRgn" "mode" "region")}
        {Lisp-Entry "get-combine-mode" () 83 11 ("error" "else" "RGN_DIFF" "diff" "RGN_XOR" "xor" "RGN_OR" "or" "RGN_AND" "and" "case" "mode")}
        {Lisp-Entry "get-box" () 92 18 ("RECT->rect" "handle" "GetRgnBox" "RECT-make" "rect" "with")}}}})
"Registry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "registry" "Registry.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.registry.Registry" () 37 9 ("jazz")
      {Lisp-Entry "Registry" () 44 7 ("WinAdv" "Utilities" "Object")
        {Lisp-Entry "open-type-lib" () 47 23 ("Type-Lib-Key" "class:" "self" "container:" "Classes-Root" "open-key")}}
      {Lisp-Entry "Type-Lib-Key" () 56 12 ("Registry-Key")
        {Lisp-Entry "get-versions" () 59 18 ("iterate-subkeys" "gather" "type-key")}
        {Lisp-Entry "get-latest-version" () 63 18 ("last" "when" "get-versions" "versions" "let" "type-key")}
        {Lisp-Entry "split-version" () 69 11 ("1" "+" "0" "subseq" "values" "position" "return:" "find" "pos" "let" "version")}
        {Lisp-Entry "get-information" () 76 18 ("split-version" "minor" "major" "receive" "Native" "list" "File" "new" "pathname" "filename" "false" "error?:" "win32-key" "language-key" "let*" "iterate-subkeys" "gather" "car" "language" "get-default" "description" "version-key" "when" "get-latest-version" "version" "let" "open-key" "type-key" "with-closed" "type-guid")}}
      {Lisp-Entry "Classes-Root" () 103 18 ("HKEY_CLASSES_ROOT" "key:" "true" "predefined?:" "Registry-Key" "new")}
      {Lisp-Entry "Current-User" () 104 18 ("HKEY_CURRENT_USER" "key:" "true" "predefined?:" "Registry-Key" "new")}
      {Lisp-Entry "Local-Machine" () 105 18 ("HKEY_LOCAL_MACHINE" "key:" "true" "predefined?:" "Registry-Key" "new")}}})
"Registry-Key"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "registry" "Registry-Key.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.registry.Registry-Key" () 37 9 ("jazz")
      {Lisp-Entry "Registry-Key" () 44 7 ("WinNT" "WinAdv" "WinKernel" "WinError" "WinDef" "Utilities" "Object")
        {Lisp-Entry "key" () 47 8 ()}
        {Lisp-Entry "predefined?" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "predefined?~self" "key~self" "set!" "nextmethod" "false" "predefined?" "predefined?:" "key" "key:")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "error" "ERROR_SUCCESS" "key" "RegCloseKey" "/=" "predefined?" "not" "when")}
        {Lisp-Entry "open-key" () 65 18 ("error" "when" "key:" "new-in" "ERROR_SUCCESS" "=" "if" "KEY_READ" "0" "key" "RegOpenKeyEx" "subkey" "err" "receive" "true" "error?" "error?:" "Registry-Key" "class" "class:" "container" "container:" "path")}
        {Lisp-Entry "create-key" () 73 18 ("error" "key:" "new-in" "ERROR_SUCCESS" "=" "if" "key" "RegCreateKey" "subkey" "err" "receive" "Registry-Key" "class" "container" "path")}
        {Lisp-Entry "get-default" () 80 18 ("system-error" "adjust-string" "begin" "ERROR_MORE_DATA" "ERROR_SUCCESS" "=" "or" "if" "NULL" "key" "RegQueryValue" "err" "receive" "1" "-" "make-string" "value" "size" "let*")}
        {Lisp-Entry "set-default" () 91 18 ("system-error" "ERROR_SUCCESS" "/=" "when" "REG_SZ" "NULL" "key" "RegSetValue" "err" "2" "length" "*" "size" "let" "value")}
        {Lisp-Entry "get-value" () 98 18 ("system-error" "adjust-string" "begin" "ERROR_MORE_DATA" "ERROR_SUCCESS" "=" "or" "if" "0" "key" "RegQueryValueEx" "type" "err" "receive" "1" "-" "make-string" "value" "size" "let*" "value-name")}
        {Lisp-Entry "set-value" () 109 18 ("system-error" "ERROR_SUCCESS" "/=" "when" "REG_SZ" "0" "key" "RegSetValueEx" "err" "2" "1" "length" "+" "*" "size" "let" "value" "value-name")}
        {Lisp-Entry "iterate-subkeys" () 116 18 ("key" "Subkey-Iterator" "new")}}
      {Lisp-Entry "Subkey-Iterator" () 125 7 ("Iterator")
        {Lisp-Entry "key" () 128 8 ()}
        {Lisp-Entry "index" () 129 8 ("0")}
        {Lisp-Entry "initialize" () 132 11 ("key" "set!" "nextmethod" "k")}
        {Lisp-Entry "get-next!" () 137 11 ("system-error" "else" "eof-object" "ERROR_NO_MORE_ITEMS" "adjust-string" "increase!" "ERROR_SUCCESS" "ecase" "index" "key" "RegEnumKey" "err" "1" "-" "make-string" "name" "size" "let*")}}}})
"Registry-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "registry" "Registry-Viewer.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.registry.Registry-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "Registry-Viewer" () 48 7 ("width:" ":icons" "portfolio:" "on-selection-change" "selection-handler:" "Axis" "sons-class:" "registry" "fill" "content" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "center" "registry-border" "on-view-type-libs" "form:" "Event-Handler" "action-handler:" "selected?:" "title:" "type-libs" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "toolbar" "name:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "conclude" () 64 11 ("view-type-libs" "nextmethod" "initargs")}
        {Lisp-Entry "frame-icon" () 75 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 80 16 ()}
        {Lisp-Entry "frame-position" () 85 16 ("Point")}
        {Lisp-Entry "frame-size" () 90 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 94 11 ("home")}
        {Lisp-Entry "on-view-type-libs" () 103 11 ("view-type-libs" "evt")}
        {Lisp-Entry "view-type-libs" () 107 11 ("second" "key:" "get-output" "" "sort" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "list" "children:" "add-row" "empty-string?" "not" "pathname" "language-id" "minor-version" "major-version" "desc" "bind" "with-update-locked" "cons" "put" "when" "get-information" "info" "let" "guid-name" "dynamic" "function" "for-each" "List-Factory" "new" "informations" "gather" "guid-names" "iterate-subkeys" "all" "registry" "locate" "tree" "let*" "user-message" "Registry" "open-type-lib" "type-lib" "with-closed")}
        {Lisp-Entry "on-selection-change" () 130 11 ("true" "set-visible?" "bring-to-front" "view-file" "get-guest" "view-registered-typelib" "length" "-" "1" "subseq" "GUID" "new" "guid" "Type-Viewer" "singleton" "frame" "pathname" "language-id" "minor-version" "major-version" "desc" "guid-name" "bind" "get-row" "get-user-data" "info" "let" "when" "get-single-selection" "selection" "get-sender" "sender" "let*" "evt")}}}})
"Regular-Expression"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "regexp" "Regular-Expression.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.regexp.Regular-Expression" () 37 9 ("jazz")
      {Lisp-Entry "Regular-Expression" () 40 7 ("Object")
        {Lisp-Entry "original" () 43 8 ()}
        {Lisp-Entry "expressions" () 44 8 ()}
        {Lisp-Entry "cardinality" () 45 8 ()}
        {Lisp-Entry "initialize" () 48 11 ("length" "cardinality" "parse-expressions" "expressions" "original" "set!" "nextmethod" "pattern")}
        {Lisp-Entry "parse-expressions" () 55 11 ("separator:" "parse-strings" "parse-expression" "map" "pattern")}
        {Lisp-Entry "parse-expression" () 59 11 ("1" "+" "0" "subseq" "false" "true" "Expression" "new" "null?" "if" "find-star" "pos" "let" "pattern")}
        {Lisp-Entry "find-star" () 68 11 ("error" "set!" "null?" "if" "=" "when" "element" "c" "length" "below" "0" "from" "n" "for" "loop" "pos" "let" "pattern")}
        {Lisp-Entry "match" () 84 18 ("expressions" "when" "match-expression" "match" "let" "expression" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "string")}
        {Lisp-Entry "match-expression" () 95 11 ("-" "length" "subseq" "ends-with?" "starts-with?" "and" "get-suffix" "suffix" "get-prefix" "prefix" "let" "else" "get-pattern" "=" "if" "get-exact?" "cond" "string" "expression")}
        {Lisp-Entry "matches?" () 109 18 ("match" "not-null?" "string")}
        {Lisp-Entry "replace" () 118 18 ("get-suffix" "get-prefix" "append" "get-pattern" "get-exact?" "expressions" "car" "expression" "let" "original" "error" "1" "cardinality" "/=" "if" "string")}}
      {Lisp-Entry "Expression" () 132 7 ("Object")
        {Lisp-Entry "pattern" () 135 8 ()}
        {Lisp-Entry "exact?" () 136 8 ()}
        {Lisp-Entry "prefix" () 137 8 ()}
        {Lisp-Entry "suffix" () 138 8 ()}
        {Lisp-Entry "initialize" () 141 11 ("suffix~self" "prefix~self" "exact?~self" "pattern~self" "set!" "nextmethod" "suffix" "prefix" "exact?" "pattern")}}}})
"Remotable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "remote" "Remotable.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.jrm.remote.Remotable" () 37 9 ("jazz")
      {Lisp-Entry "Remotable" () 45 11 ()
        {Lisp-Entry "proxy-local-class" () 49 31 ()}
        {Lisp-Entry "proxy-remote-class" () 54 31 ()}
        {Lisp-Entry "stub-class" () 59 31 ()}}}})
"Remotable-Generator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "tools" "Remotable-Generator.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jrm.tools.Remotable-Generator" () 37 9 ("jazz")
      {Lisp-Entry "Remotable-Generator" () 45 7 ("Code-Generator")
        {Lisp-Entry "class" () 48 8 ()}
        {Lisp-Entry "class-name" () 49 8 ()}
        {Lisp-Entry "ascendant" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("ascendant~self" "type-name" "class-name~self" "class~self" "set!" "nextmethod" "ascendant" "ascendant:" "class" "class:")}
        {Lisp-Entry "emit-code" () 60 18 ("emit-stub" "emit-remote-proxy" "emit-local-proxy" "emit-remotable" "emit")}
        {Lisp-Entry "emit" () 67 11 ("File-Printer" "new" "printer" "with-closed" "ensure-read/write" "error" "null?" "if" "get-manifest-source" "file" "remote-class-name" "name" "let*" "suffix" "proc")}
        {Lisp-Entry "remote-class-name" () 77 11 ("class" "type-name" "->string" "append" "string->symbol" "suffix")}
        {Lisp-Entry "remotable-name" () 86 18 ("remote-class-name")}
        {Lisp-Entry "for-each-remote" () 95 11 ("class" "category-fields" "function-parameters" "parameters" "Interpreter" "closure-function" "definition-value" "closure" "field-name" "name" "let*" "field-remote?" "when" "field" "dynamic" "function" "for-each" "proc")}
        {Lisp-Entry "emit-remotable" () 112 11 ("emit-parameters" "false" "set!" "when" "parameters" "dynamic" "function" "for-each-remote" "true" "first?" "class-name" "type-name" "ascendant" "if" "extends" "let" "format" "output-header" "printer" "name")}
        {Lisp-Entry "emit-local-proxy" () 141 11 ("parameters" "dynamic" "function" "for-each-remote" "class-name" "type-name" "ascendant" "if" "extends" "let" "format" "output-header" "printer" "name")}
        {Lisp-Entry "emit-remote-proxy" () 161 11 ("parameters" "dynamic" "function" "for-each-remote" "class-name" "type-name" "ascendant" "if" "extends" "let" "format" "output-header" "printer" "name")}
        {Lisp-Entry "emit-stub" () 179 11 ("parameters" "dynamic" "function" "for-each-remote" "type-name" "ascendant" "if" "extends" "let" "format" "output-header" "printer" "name")}}}})
"Remotable-Updater"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "tools" "Remotable-Updater.fusion"} {Time 128360671600000000L}
    {Lisp-Entry "jazz.jrm.tools.Remotable-Updater" () 37 9 ("jazz")
      {Lisp-Entry "Remotable-Updater" () 45 7 ("Object")}
      {Lisp-Entry "Remotable-Updater" () 51 7 ("Code-Generator")
        {Lisp-Entry "update" () 54 18 ("Bitmap-Resource" "image:" "if" "format" "log-line" "true" "set!" "update-remotable" "when" "name" "dynamic" "function" "for-each" "Output-Log" "select-palette" "select-results" "clear-results" "dirty?" "get-output-log" "output" "new-map" "new-environment" "environment" "collect-remotables" "remotables" "let" "false" "force?" "force?:")}
        {Lisp-Entry "collect-remotables" () 71 11 ("cons" "set!" "get-remotable?" "when" "get-name" "category-name" "file" "dynamic" "function" "for-each-jazz-file" "remotables" "get-workbench" "workbench" "let")}
        {Lisp-Entry "update-remotable" () 82 11 ("true" "emit-code" "Bitmap-Resource" "image:" "format" "log-line" "get-modification-time" ">" "exists?" "not" "null?" "or" "when" "remotable-file" "remotable-name" "get-manifest-source" "source-file" "essay" "ascendant:" "class:" "Remotable-Generator" "new" "generator" "type-name" "get-workbench" "get-entry" "get-remotable?" "ascendant-remotable?" "type-ascendant" "ascendant" "get-category" "class" "let*" "output" "force?" "environment" "name")}}}})
"Remote-Proxy"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "remote" "Remote-Proxy.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jrm.remote.Remote-Proxy" () 37 9 ("jazz")
      {Lisp-Entry "Remote-Proxy" () 45 7 ("WinSock" "WinUser" "System" "Utilities" "Object-Proxy")
        {Lisp-Entry "ior" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("ior~self" "set!" "nextmethod" "ior")}
        {Lisp-Entry "compare-object" () 56 11 ("get-ior" "ior" "compare-object" ":incompatible" "Remote-Proxy" "is-not?" "if" "target")}
        {Lisp-Entry "get-ior" () 67 18 ("ior")}
        {Lisp-Entry "marshal" () 76 11 ("ior")}
        {Lisp-Entry "send-to-stub" () 85 11 ("error" "stack" "message" "bind" "null?" "if" "cdr" "exception-info" "car" "result" "receive-object" "unmarshal-object" "info" "let*" "list" "send-object" "connect" "format" "name:" "Socket" "new" "socket" "with-closed" "marshal-object" "map" "marshalled" "get-reference" "reference" "get-port" "port" "ior" "get-host" "host" "let" "arguments" "method-name")}
        {Lisp-Entry "live?" () 107 11 ("true" "send-object" "connect" "signal" "false" "WSAECONNREFUSED" "get-no" "=" "if" "err" "Socket-Error" "catch" "name:" "Socket" "new" "socket" "with-closed" "get-port" "port" "ior" "get-host" "host" "let")}}}})
"Remote-Stub"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "remote" "Remote-Stub.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.jrm.remote.Remote-Stub" () 37 9 ("jazz")
      {Lisp-Entry "Remote-Stub" () 45 7 ("Object")
        {Lisp-Entry "object" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("object" "set!" "nextmethod" "obj")}
        {Lisp-Entry "invoke" () 61 26 ("error" "arguments" "method-name")}}}})
"Renderer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Renderer.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Renderer" () 37 9 ("jazz")
      {Lisp-Entry "Renderer" () 45 11 ()
        {Lisp-Entry "render" () 48 35 ("sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc" "drawing")}}}})
"Reporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "reporter" "Reporter.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.reporter.Reporter" () 37 9 ("jazz")
      {Lisp-Entry "Reporter" () 44 11 ()
        {Lisp-Entry "section-title" () 47 35 ("title")}
        {Lisp-Entry "set-message" () 48 35 ("msg")}
        {Lisp-Entry "user-message" () 49 35 ("rest" "fmt")}
        {Lisp-Entry "set-range" () 50 35 ("range")}
        {Lisp-Entry "set-pos" () 51 35 ("pos")}
        {Lisp-Entry "delta-pos" () 52 35 ("increment")}
        {Lisp-Entry "set-step" () 53 35 ("increment")}
        {Lisp-Entry "step-it" () 54 35 ()}
        {Lisp-Entry "set-done" () 55 35 ()}
        {Lisp-Entry "disable-cancel" () 56 35 ()}
        {Lisp-Entry "cancel-requested?" () 57 35 ()}
        {Lisp-Entry "test-cancelled" () 58 35 ()}}}})
"Repositories-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repositories-Editor.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.manager.Repositories-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Repositories-Editor" () 45 7 ("Descendants-Editor")
        {Lisp-Entry "form-model" () 48 11 ("nextmethod" "else" "Repositories-Tree" "tree" "get-name" "case" "form")}}}})
"Repositories-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repositories-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.manager.Repositories-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Repositories-Manager" () 51 7 ("width:" "title:" "descendant" "highlight-edited?:" "show-header?:" "tree" "flat?:" "scroller" "center" "location:" "descendants" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Exit-Listener" "Repository-Listener" "Editor-View")
        {Lisp-Entry "external-name" () 64 16 ("repositories-manager" "rest")}
        {Lisp-Entry "palette-class" () 74 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 79 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 84 16 ()}
        {Lisp-Entry "get-tools-view" () 93 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 97 11 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" () 107 11 ("tree" "descendants" "locate")}
        {Lisp-Entry "Repositories-Manager-Controller" () 117 9 ("Editor-View-Controller")
          {Lisp-Entry "document-status" () 120 13 ()}}
        {Lisp-Entry "new-controller" () 125 11 ("self" "Repositories-Manager-Controller" "new")}
        {Lisp-Entry "install" () 134 11 ("get-repositories-preferences" "set-client" "Repository" "add-repository-listener" "get-application" "add-exit-listener" "self" "locate" "set-editor" "false" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "on-designer" () 148 11 ("Repository" "remove-preferences" "Repository-Preferences" "is?" "when" "child:" "get-property" "child" ":child-remove" "case" "get-kind" "kind" "let" "nextmethod" "evt")}
        {Lisp-Entry "resize-center" () 163 11 ("descendants" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "prepare-exit" () 167 11 ("save" "get-modified?" "when")}
        {Lisp-Entry "edit-repository-properties" () 177 21 ("dynamic" "set-state" "remove-every-son" "Repository" "reload-preferences" "designer" "set-properties" "preferences:" "get-modal" "initargs" "class-of" "editor-class" "editor" "get-name" "name" "get-user-data" "preferences" "get-selected-row" "row" "get-tree" "tree" "let*")}
        {Lisp-Entry "update-tree-row" () 195 21 ("insert-content" "insert-project" "Repository-Moniker" "new" "project" "get-name" "Repository" "get-repository" "repository" "let*" "Repository-Preferences" "typecase" "get-user-data" "data" "let" "row" "tree")}
        {Lisp-Entry "insert-content" () 206 11 ("insert-files" "insert-projects" "row" "tree" "moniker")}
        {Lisp-Entry "insert-projects" () 211 11 ("insert-project" "project" "dynamic" "function" "for-each" "false" "leaves?:" "true" "nodes?:" "get-content" "projects" "let" "row" "tree" "moniker")}
        {Lisp-Entry "insert-project" () 218 11 ("user-data:" "title:" "Bitmap-Resource" "image:" "Tree-Node" "new" "list" "children:" "father:" "dynamic" "state:" "add-row" "empty-string?" "if" "effective-title" "get-name" "title" "let*" "row" "tree" "project")}
        {Lisp-Entry "insert-files" () 224 11 ("user-data:" "title:" "image:" "Tree-Node" "new" "list" "children:" "father:" "collapsed" "state:" "add-row" "get-moniker-image" "image" "get-name" "remote->local" "title" "get-repository" "repository" "let*" "child" "dynamic" "function" "for-each" "true" "leaves?:" "false" "nodes?:" "get-content" "children" "let" "row" "tree" "moniker")}
        {Lisp-Entry "get-moniker-image" () 234 11 ("checked-out-me" "checked-out" "Bitmap-Resource" "checked-in" "get-status" "case" "get-repository-item" "item" "with-closed" "moniker")}
        {Lisp-Entry "update-image" () 242 11 ("invalidate-cell" "get-cell-data" "set-image" "get-moniker-image" "image" "0" "Cell" "cell" "row-rank" "rank" "when" "=" "test:" "user-data-row" "row" "get-tree" "tree" "file->path" "Repository-Moniker" "new" "moniker" "Repository" "find-repository" "repository" "let*" "file")}
        {Lisp-Entry "repository-event" () 260 11 ("update-image" ":item-status" "case" "moniker" "repository" "what")}
        {Lisp-Entry "selected-moniker" () 266 11 ("Repository-Moniker" "is?" "when" "selected-component" "data" "get-tree" "tree" "let*")}
        {Lisp-Entry "selected-project" () 273 11 ("get-project?" "and" "when" "selected-moniker" "moniker" "let")}
        {Lisp-Entry "selected-file" () 279 11 ("get-file?" "and" "when" "selected-moniker" "moniker" "let")}
        {Lisp-Entry "selected-repository/path" () 285 11 ("get-path" "get-repository" "values" "selected-moniker" "moniker" "let")}
        {Lisp-Entry "selected-repository/pathname" () 291 11 ("values" "get-pathname" "pathname" "get-repository" "repository" "selected-moniker" "moniker" "let*")}
        {Lisp-Entry "selected-repository/file" () 298 11 ("values" "get-pathname" "file" "get-repository" "repository" "selected-file" "moniker" "let*")}
        {Lisp-Entry "moniker->file" () 305 11 ("get-pathname" "get-repository-item" "item" "with" "moniker")}
        {Lisp-Entry "add-files-to-selection" () 310 21 ("refresh-row" "add-files-to-project" "get-path" "path" "get-repository" "repository" "get-user-data" "moniker" "get-selected-row" "row" "get-tree" "tree" "let*")}
        {Lisp-Entry "create-project-in-selection" () 320 21 ("refresh-row" "create-project-in-project" "get-path" "path" "get-repository" "repository" "get-user-data" "moniker" "get-selected-row" "row" "get-tree" "tree" "let*")}
        {Lisp-Entry "edit-selection" () 330 21 ("edit-document" "get-pathname" "file" "get-application" "appl" "when" "selected-file" "moniker" "let")}
        {Lisp-Entry "get-selection-latest" () 338 21 ("get-latest" "selected-repository/file" "file" "repository" "receive")}
        {Lisp-Entry "detach-selection" () 343 21 ("detach-file" "selected-repository/file" "file" "repository" "receive")}
        {Lisp-Entry "checkout-selection" () 348 21 ("checkout-file" "selected-repository/file" "file" "repository" "receive")}
        {Lisp-Entry "checkin-selection" () 353 21 ("checkin-file" "selected-repository/file" "file" "repository" "receive")}
        {Lisp-Entry "reintegrate-selection" () 358 21 ("reintegrate-file" "selected-repository/file" "file" "repository" "receive")}
        {Lisp-Entry "undo-selection-checkout" () 363 21 ("undo-checkout-file" "selected-repository/file" "file" "repository" "receive")}
        {Lisp-Entry "show-selection-history" () 368 21 ("show-history" "selected-repository/file" "file" "repository" "receive")}
        {Lisp-Entry "show-selection-changes" () 373 21 ("show-changes" "selected-repository/file" "file" "repository" "receive")}
        {Lisp-Entry "delete-selected-item" () 378 21 ("refresh-row" "select-row" "propose-delete" "get-father" "father" "get-selected-row" "row" "get-tree" "tree" "let*" "selected-repository/path" "path" "repository" "receive")}
        {Lisp-Entry "rename-selected-item" () 388 21 ("refresh-moniker" "Repository-Moniker" "new" "new-moniker" "propose-rename" "new-path" "selected-moniker" "moniker" "let*" "selected-repository/path" "path" "repository" "receive")}
        {Lisp-Entry "refresh-selection" () 396 21 ("refresh-row" "get-selected-row" "row" "get-tree" "tree" "let*")}
        {Lisp-Entry "refresh-moniker" () 402 11 ("select-row" "when" "refresh-row" "refresh-moniker" "unimplemented" "get-path" "unless" "get-father" "father" "=" "test:" "user-data-row" "row" "get-tree" "tree" "let*" "new-moniker" "moniker")}
        {Lisp-Entry "refresh-row" () 413 11 ("expand/collapse" "when" "dynamic" "set-state" "remove-every-son" "expanded" "get-state" "eq?" "expanded?" "let" "row" "tree")}
        {Lisp-Entry "select-row" () 421 11 ("row-rank" "set-single-selection" "row" "tree")}}}})
"Repositories-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "preferences" "Repositories-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.preferences.Repositories-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Repositories-Preferences" () 47 7 ("title:" "Preferences")
        {Lisp-Entry "active" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "auto-checkout?" () 51 12 ("generate" "accessors" "false")}
        {Lisp-Entry "editor-class" () 59 31 ()}
        {Lisp-Entry "can-view-properties?" () 68 11 ("false")}
        {Lisp-Entry "can-rename-component?" () 72 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 76 11 ("false")}
        {Lisp-Entry "can-move-component?" () 80 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 84 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 88 11 ("preferences-class" "essay" "repository-class" "dynamic" "function" "map" "get-repository-classes" "repository-classes" "get-application" "appl" "let*")}
        {Lisp-Entry "get-row-instance" () 96 11 ("nextmethod" "else" "Boolean-Row" "new" "auto-checkout?" "field-name" "case" "property")}}}})
"Repositories-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repositories-Tree.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.manager.Repositories-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Repositories-Tree" () 48 7 ("multiple-selection?:" "Descendants-Tree")
        {Lisp-Entry "get-manager" () 60 11 ("player" "get-guest")}
        {Lisp-Entry "insert-components" () 69 11 ("nextmethod" "Repository-Preferences" "is?" "unless" "level" "update?" "rights" "component" "row")}
        {Lisp-Entry "component-state" () 74 11 ("dynamic" "Repository-Preferences" "is?" "when" "component")}
        {Lisp-Entry "update-row" () 79 11 ("self" "get-manager" "update-tree-row" "row")}
        {Lisp-Entry "row-state" () 83 11 ("collapsed" "expanded" "1" "" "if" "level" "update?" "component")}
        {Lisp-Entry "add-component-request" () 94 11 ("values" "name:" "getf" "initial-value:" "get-children" "component-presentation-request" "presentation" "get-modal" "initargs" "editor-class" "editor" "let*" "parent" "class")}
        {Lisp-Entry "install-new-properties" () 101 11 ("add-properties" "install-preferences" "extra-properties" "initargs" "child" "designer")}
        {Lisp-Entry "get-context-menu" () 111 11 ("nextmethod" "new-project-menu" "new-item-menu" "get-file?" "Repository-Moniker" "is?" "if" "class-of" "class" "selected-component" "data" "let*")}
        {Lisp-Entry "new-project-menu" () 121 11 ("Project-Menu" "new" "data")}
        {Lisp-Entry "new-item-menu" () 125 11 ("layout-menu" "Repository" "update-item-menu" "get-pathname" "file" "Item-Menu" "new" "menu" "let" "data")}
        {Lisp-Entry "update-selection" () 133 11 ("selected-components" "expand-state")}
        {Lisp-Entry "double-click" () 137 11 ("get-manager" "edit-selection" "nextmethod" "pos")}
        {Lisp-Entry "key-press" () 142 11 ("nextmethod" "else" "get-manager" "edit-selection" "case" "key")}
        {Lisp-Entry "on-add-files" () 148 11 ("get-manager" "add-files-to-selection" "evt")}
        {Lisp-Entry "on-create-project" () 152 11 ("get-manager" "create-project-in-selection" "evt")}
        {Lisp-Entry "on-refresh" () 156 11 ("get-manager" "refresh-selection" "evt")}
        {Lisp-Entry "on-edit" () 160 11 ("get-manager" "edit-selection" "evt")}
        {Lisp-Entry "on-get-latest" () 164 11 ("get-manager" "get-selection-latest" "evt")}
        {Lisp-Entry "on-detach" () 168 11 ("get-manager" "detach-selection" "evt")}
        {Lisp-Entry "on-checkout" () 172 11 ("get-manager" "checkout-selection" "evt")}
        {Lisp-Entry "on-checkin" () 176 11 ("get-manager" "checkin-selection" "evt")}
        {Lisp-Entry "on-reintegrate" () 180 11 ("get-manager" "reintegrate-selection" "evt")}
        {Lisp-Entry "on-undo-checkout" () 184 11 ("get-manager" "undo-selection-checkout" "evt")}
        {Lisp-Entry "on-show-history" () 188 11 ("get-manager" "show-selection-history" "evt")}
        {Lisp-Entry "on-show-changes" () 192 11 ("get-manager" "show-selection-changes" "evt")}
        {Lisp-Entry "on-delete-item" () 196 11 ("get-manager" "delete-selected-item" "evt")}
        {Lisp-Entry "on-rename-item" () 200 11 ("get-manager" "rename-selected-item" "evt")}
        {Lisp-Entry "show-properties" () 209 11 ("get-manager" "edit-repository-properties")}
        {Lisp-Entry "Project-Menu" () 218 9 ("on-refresh" "refresh" "refresh-separator" "on-rename-item" "rename-item" "on-delete-item" "delete-item" "delete-separator" "on-create-project" "create-project" "on-add-files" ":focus" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "add-files" "name:" "Context-Menu")}
        {Lisp-Entry "Item-Menu" () 237 9 ("on-rename-item" "rename-item" "on-delete-item" "delete-item" "delete-separator" "on-show-changes" "show-changes" "on-show-history" "show-history" "history-separator" "on-undo-checkout" "undo-checkout" "on-reintegrate" "reintegrate" "on-checkin" "checkin" "on-checkout" "checkout" "on-detach" "detach" "on-get-latest" "Bitmap-Resource" "icon:" "get-latest" "checkin-separator" "on-edit" ":focus" "Event-Handler" "action-handler:" "default?:" "title:" "edit-item" "name:" "Context-Menu")}}}})
"Repository"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Repository.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.repository.Repository" () 72 9 ("jazz")
      {Lisp-Entry "Repository" () 83 7 ("Object")}
      {Lisp-Entry "Repositories" () 86 12 ("equal?" "new-hashtable")}
      {Lisp-Entry "Repository" () 93 16 ("Exit-Listener" "Object")
        {Lisp-Entry "name" () 96 8 ()}
        {Lisp-Entry "base-project" () 97 8 ()}
        {Lisp-Entry "base-directory" () 98 8 ()}
        {Lisp-Entry "get-concrete" () 101 26 ("self")}
        {Lisp-Entry "preferences-class" () 110 31 ()}
        {Lisp-Entry "preferences" () 114 16 ("get-repositories-preferences" "get-application" "appl" "let")}
        {Lisp-Entry "repository-preferences" () 119 16 ("find-component" "when" "preferences" "pref" "name")}
        {Lisp-Entry "reload-preferences" () 124 23 ("false" "error?:" "remove-repository" "get-name" "name" "let" "pref")}
        {Lisp-Entry "remove-preferences" () 129 23 ("false" "error?:" "remove-repository" "get-name" "name" "let" "pref")}
        {Lisp-Entry "add-repository" () 139 16 ("Repositories" "hash-set!" "instantiate-preferences" "repository" "remove-repository" "get-repository" "when" "get-name" "name" "let" "pref")}
        {Lisp-Entry "remove-repository" () 147 16 ("Repositories" "hash-clear" "error" "when" "get-repository" "not" "if" "true" "error?" "error?:" "name")}
        {Lisp-Entry "require-repository" () 159 23 ("error" "null?" "if" "get-repository" "either" "name")}
        {Lisp-Entry "get-repository" () 166 23 ("hash-set!" "instantiate-preferences" "repository" "get-active?" "and" "repository-preferences" "let" "Repositories" "hash-ref" "when" "get-active" "essay" "either" "preferences" "pref" "let*" "name")}
        {Lisp-Entry "instantiate-preferences" () 182 23 ("new-repository" "get-name" "name" "repository-class" "class" "get-application" "appl" "let" "pref")}
        {Lisp-Entry "new-repository" () 189 31 ("name:" "self" "new" "name" "pref")}
        {Lisp-Entry "for-each-repository-preferences" () 198 23 ("get-children" "for-each" "when" "preferences" "pref" "let" "proc")}
        {Lisp-Entry "find-repository" () 204 23 ("get-name" "get-repository" "in-repository?" "when" "pref" "dynamic" "function" "for-each-repository-preferences" "return" "lambda" "call/ec" "pathname")}
        {Lisp-Entry "find-moniker" () 214 23 ("file->path" "Repository-Moniker" "new" "essay" "find-repository" "repository" "let" "pathname")}
        {Lisp-Entry "initialize" () 225 11 ("base-directory~self" "base-project~self" "name~self" "set!" "nextmethod" "base-directory" "base-directory:" "base-project" "base-project:" "name" "name:")}
        {Lisp-Entry "install-initargs" () 232 29 (":base-directory" "base-directory" ":base-project" "getf" "base-project" "set!" "initargs")}
        {Lisp-Entry "print" () 237 11 ("name" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "connected?" () 243 35 ()}
        {Lisp-Entry "get-name" () 252 18 ("name")}
        {Lisp-Entry "set-name" () 256 18 ("name" "set!" "value")}
        {Lisp-Entry "get-base-project" () 265 26 ("error")}
        {Lisp-Entry "set-base-project" () 269 29 ("error" "value")}
        {Lisp-Entry "get-base-directory" () 273 26 ("error")}
        {Lisp-Entry "set-base-directory" () 277 29 ("error" "value")}
        {Lisp-Entry "prepare-exit" () 286 11 ("close")}
        {Lisp-Entry "file/path->path" () 295 18 ("file->path" "pathname?" "if" "file/path")}
        {Lisp-Entry "file->path" () 301 18 ("length" "get-list" "tail" "when" "anchor-to" "anchored" "get-base-directory" "base" "let*" "true" "error?" "error?:" "file")}
        {Lisp-Entry "path->file" () 308 18 ("get-base-directory" "get-list" "append" "File" "new" "path")}
        {Lisp-Entry "path->directory" () 312 18 ("get-base-directory" "get-list" "append" "Directory" "new" "path")}
        {Lisp-Entry "local->remote" () 316 26 ("file")}
        {Lisp-Entry "remote->local" () 320 26 ("file")}
        {Lisp-Entry "add-file-to-repository" () 329 18 ("get-name" "format" "message-box" "self" ":item-status" "call-repository-event" "add-file" "added-item" "get-item" "parent-item" "with-closed" "get-parent" "parent-directory" "let" "file")}
        {Lisp-Entry "add-files-to-project" () 337 18 ("add-file" "item" "file" "dynamic" "function" "for-each" ":files" "get-modal" "files" "pathname=" "test:" "difference" "effective" "collect-files" "all" "collect-actual" "actual" "add-chooser-class" "chooser" "path->directory" "directory" "let*" "get-item" "project" "with-closed" "add-default-extension" "extension" "extension:" "path")}
        {Lisp-Entry "add-chooser-class" () 351 29 ("Repository-Add-Chooser")}
        {Lisp-Entry "add-default-extension" () 355 29 ("true")}
        {Lisp-Entry "collect-actual" () 359 11 ("get-pathname" "item" "dynamic" "function" "map" "true" "leaves?:" "false" "nodes?:" "get-content" "items" "with-closed" "project")}
        {Lisp-Entry "collect-files" () 366 11 ("key:" "get-output" "ci<" "sort" "false" "recursive?:" "put" "test:" "get-name" "member?" "not" "get-extension" "ci=" "true" "eq?" "or" "and" "when" "file" "dynamic" "function" "iterate-directory" "List-Factory" "new" "fact" "let" "extension" "directory")}
        {Lisp-Entry "create-project-in-project" () 377 21 ("add-project" "item" "request-string" "name" "collect-subprojects" "actual" "path->directory" "directory" "let" "get-item" "project" "with-closed" "path")}
        {Lisp-Entry "collect-subprojects" () 386 11 ("get-name" "item" "dynamic" "function" "map" "false" "leaves?:" "true" "nodes?:" "get-content" "items" "with-closed" "project")}
        {Lisp-Entry "propose-delete" () 399 18 ("delete-item" "destroy-item" "get-checked?" "yes" "=" "when" "content:" "question" "type:" "format" "message-box" "code" "let" "layout-view" "get-base-project" "last" "name" "title:" "parent:" "Check-Box" "checkbox" "Dimension" "size:" "0" "2" "Rect" ":layout-insets" "fill" ":layout-type" "Layout-View" "new" "border" "let*" "propose-delete" "unimplemented" "null?" "if" "path")}
        {Lisp-Entry "delete-item" () 413 18 ("delete-item" "get-item" "item" "with-closed" "path")}
        {Lisp-Entry "destroy-item" () 418 18 ("destroy-item" "get-item" "item" "with-closed" "path")}
        {Lisp-Entry "propose-rename" () 429 18 ("rename-item" ":unicity-domain" "false" ":accepts-empty?" "initial-value:" "title:" "request-string" "new-name" "equal?" "test:" "collect-names" "remove" "unicity-domain" "base-project" "last" "name" "let*" "propose-rename" "unimplemented" "null?" "if" "path")}
        {Lisp-Entry "collect-names" () 438 11 ("get-name" "remote->local" "item" "dynamic" "function" "map" "leaves?:" "true" "nodes?:" "get-content" "items" "get-item" "parent-item" "with-closed" "butlast" "parent-path" "let" "when" "path")}
        {Lisp-Entry "rename-item" () 448 18 ("get-base-project" "set-base-project" "list" "butlast" "append" "rename-item" "get-item" "item" "with-closed" "if" "new-name" "path")}
        {Lisp-Entry "get-item" () 462 35 ("rest" "file/path")}
        {Lisp-Entry "in-repository?" () 466 35 ("file")}
        {Lisp-Entry "get-latest" () 475 18 ("self" ":item-status" "call-repository-event" "get-latest-pathname" "dynamic" "function" ":wait" "with-cursor" "pathname")}
        {Lisp-Entry "get-latest-pathname" () 482 11 ("base:" "get-latest-directory" "get-latest-file" "file?" "if" "dynamic" "function" "iterate-item" "get-item" "item" "with-closed" "Output-Log" "select-palette" "select-results" "clear-results" "when" "get-output-log" "output" "let" "pathname")}
        {Lisp-Entry "get-latest-file" () 497 18 ("set-read-only" "set-read/write" "if" "same" "skip" "Bitmap-Resource" "image:" "get-name" "format" "output" "log-line" ":make-writable?" "get-latest-action" "get" "unspecified" "file" "determine-operation" "case" "true" "feedback?" "feedback?:" "false" "make-writable?" "make-writable?:" "item")}
        {Lisp-Entry "determine-operation" () 511 11 ("=" "no" "yes" "question" "type:" "message-box" "unspecified?" "ask" "same" "is-different?" "different?" "read-only?" "let" "get" "exists?" "not" "if" "overwrite" "file" "item")}
        {Lisp-Entry "get-latest-action" () 524 38 ("rest" "file")}
        {Lisp-Entry "get-latest-directory" () 528 11 ("create" "Bitmap-Resource" "image:" "get-name" "format" "log-line" "exists?" "unless" "output" "directory" "item")}
        {Lisp-Entry "log-line" () 534 11 ("log-line" "" "apply" "when" "user-message" "rest" "line" "output")}
        {Lisp-Entry "supports-detaching?" () 545 26 ("false" "file")}
        {Lisp-Entry "detach-file" () 549 35 ("rest" "file")}
        {Lisp-Entry "reattach-file" () 553 35 ("rest" "file")}
        {Lisp-Entry "checkin-file" () 557 18 ("get-name" "user-message" "when" ":item-status" "set-read-only" "unless" ":keep-checked-out?" "checkin-action" "self" ":checkin" "call-repository-event" "true" "feedback?" "feedback?:" "false" "keep-checked-out?" "keep-checked-out?:" "file")}
        {Lisp-Entry "checkin-action" () 567 38 ("rest" "file")}
        {Lisp-Entry "checkout-file" () 571 18 ("get-name" "user-message" "same" "skip" "case" "action" "when" "self" ":item-status" "call-repository-event" "set-read/write" "get" "=" ":get?" "checkout-action" "get-output-log" "output" "determine-operation" "get-item" "item" "with-closed" "operation" "let" "true" "feedback?" "feedback?:" "unspecified" "get?" "get?:" "file")}
        {Lisp-Entry "checkout-action" () 586 38 ("rest" "file")}
        {Lisp-Entry "undo-checkout-file" () 590 18 ("throw-cancel" "cancel" "no" "get-name" "user-message" "self" ":item-status" "call-repository-event" "set-read-only" "when" ":get?" "undo-checkout-action" "dynamic" "function" ":wait" "with-cursor" "yes" "case" "confirmation" "type:" "title:" "format" "message-box" "code" "let" "feedback?" "feedback?:" "true" "get?" "get?:" "file")}
        {Lisp-Entry "undo-checkout-action" () 610 35 ("rest" "file")}
        {Lisp-Entry "reintegrate-file" () 619 35 ("rest" "file")}
        {Lisp-Entry "get-detached-status" () 628 18 ("detached" "else" "not-edited" "read-only?" "checked-out" "checked-out-me" "get-status" "=" "and" "not-present" "exists?" "not" "cond" "false" "error?:" "get-item" "item" "with-closed" "file")}
        {Lisp-Entry "get-file-status" () 641 35 ("rest" "file")}
        {Lisp-Entry "get-file-checkouts-usernames" () 645 35 ("file")}
        {Lisp-Entry "show-history" () 654 26 ("file:" "Repository-Version-Browser" "get-modal" "file")}
        {Lisp-Entry "show-changes" () 658 26 ("locate" "acquire-focus" "true" "set-visible?" "bring-to-front" "message-box" "close" "begin" "not" "if" "get-guest" "compare-monikers" "has-differences?" "file->path" "self" "Repository-Moniker" "new" "right" "left" "text" "host-workspace:" "false" "host-visible?:" "Compare-Files" "new-frame" "frame" "let*" "dynamic" "function" ":wait" "with-cursor" "file")}
        {Lisp-Entry "present-checkouts-usernames" () 679 18 ("get-checkouts-usernames" "present-usernames" "file")}
        {Lisp-Entry "present-usernames" () 683 18 ("format" "usernames")}
        {Lisp-Entry "get-checkouts-usernames" () 687 11 ("get-username" "checkout" "dynamic" "function" "map" "get-checkouts" "checkouts" "get-item" "item" "with-closed" "file")}
        {Lisp-Entry "repository-listeners" () 700 19 ()}
        {Lisp-Entry "add-repository-listener" () 704 23 ("cons" "repository-listeners" "set!" "listener")}
        {Lisp-Entry "remove-repository-listener" () 708 23 ("remove!" "repository-listeners" "set!" "listener")}
        {Lisp-Entry "call-repository-event" () 712 16 ("repository-event" "listener" "dynamic" "function" "for-each" "repository-listeners" "when" "moniker" "repository" "what")}
        {Lisp-Entry "update-item-menu" () 724 23 ("cleanup-separators" "checked-in" "=" "checked-out-me" "/=" "read/write?" "read-only?" "get-status" "get-item" "with-closed" "status" "supports-detaching?" "detaching?" "let" "show-history" "show-changes" "undo-checkout" "reintegrate" "checkin" "checkout" "detach" "get-latest" "false" "locate" "set-visible?" "item" "dynamic" "function" "for-each" "not" "if" "exists?" "local-exists?" "in-repository?" "and" "remote?" "find-repository" "essay" "repository" "let*" "file" "menu")}}}})
"Repository-Add-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repository-Add-Chooser.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.manager.Repository-Add-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Add-Chooser" () 48 7 ("on-cancel" "cancel" "default?:" "on-ok" ":host" "action-handler:" "ok" "toplevel-controls?:" "width:" "model" "on-escape-press" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-double-click" "form:" "Event-Handler" "double-click-handler:" ":icons" "portfolio:" "multiple-selection?:" "tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "Default-GUI" "Font" "font:" "9" "Point" "position:" "title:" "invite" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "files" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "finish" () 66 11 ("acquire-focus" "setup-files" "locate" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "dialog-class" () 79 16 ("Add-Chooser-Dialog")}
        {Lisp-Entry "Add-Chooser-Dialog" () 84 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "setup-files" () 96 11 ("files" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "file-image" "image" "get-name" "title" "let" "file" "dynamic" "function" "for-each" "tree")}
        {Lisp-Entry "file-image" () 104 29 ("Bitmap-Resource" "file")}
        {Lisp-Entry "on-double-click" () 114 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-return-press" () 120 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 126 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "get-modal-result" () 136 11 ("get-selected-data" "locate" "tree" "let")}}}})
"Repository-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repository-Browser.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.manager.Repository-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Browser" () 45 7 ("Directory-Browser")
        {Lisp-Entry "expand-state" () 48 12 ("set-expand-state" "get-expand-state")}
        {Lisp-Entry "external-name" () 52 16 ("repository-browser" "rest")}
        {Lisp-Entry "palette-title" () 57 16 ()}
        {Lisp-Entry "palette-icon" () 62 16 ("Bitmap-Resource")}
        {Lisp-Entry "install" () 66 11 ("get-base-directory" "essay" "set-directory" "Repository" "get-repository" "repository" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-repository" () 77 11 ("Repository" "get-repository")}
        {Lisp-Entry "get-expand-state" () 86 18 ("tree" "locate" "get-expand-state")}
        {Lisp-Entry "set-expand-state" () 90 18 ("tree" "locate" "set-expand-state" "state")}
        {Lisp-Entry "confirm-close" () 99 11 ("save-session" "rest")}
        {Lisp-Entry "save-session" () 103 11 ("Opened-Windows" "properties" "push-property" "get-expand-state" "expand-state:" "get-size" "size:" "get-position" "position:" "external-name" "list" "info" "let")}
        {Lisp-Entry "update-title" () 118 11 ("set-title")}
        {Lisp-Entry "get-moniker-image" () 122 11 ("=" "get-extension" "ext" "let" "checked-out-me" "checked-out" "Bitmap-Resource" "checked-in" "get-status" "case" "if" "false" "error?:" "get-item" "item" "Repository" "require-repository" "repository" "let*" "moniker")}}}})
"Repository-Browser-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repository-Browser-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.manager.Repository-Browser-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Browser-Preferences" () 45 7 ("Docked-Preferences")
        {Lisp-Entry "get-class-image" () 54 16 ("Bitmap-Resource")}}}})
"Repository-Checkout"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Repository-Checkout.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.repository.Repository-Checkout" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Checkout" () 45 16 ("Object")
        {Lisp-Entry "repository" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("repository~self" "set!" "nextmethod" "repository")}
        {Lisp-Entry "connected?" () 56 35 ()}
        {Lisp-Entry "get-username" () 65 35 ()}
        {Lisp-Entry "get-version-number" () 69 35 ()}}}})
"Repository-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Repository-Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.repository.Repository-Item" () 40 9 ("jazz")
      {Lisp-Entry "Repository-Item" () 48 16 ("Object")
        {Lisp-Entry "repository" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("repository~self" "set!" "nextmethod" "repository")}
        {Lisp-Entry "print" () 59 11 ("get-name" "format" "connected?" "when" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "connected?" () 66 35 ()}
        {Lisp-Entry "get-repository" () 75 18 ("repository")}
        {Lisp-Entry "get-name" () 84 35 ()}
        {Lisp-Entry "get-type" () 88 35 ()}
        {Lisp-Entry "get-file?" () 92 35 ()}
        {Lisp-Entry "get-project?" () 96 35 ()}
        {Lisp-Entry "get-binary?" () 100 35 ()}
        {Lisp-Entry "get-status" () 104 35 ()}
        {Lisp-Entry "get-path" () 108 35 ()}
        {Lisp-Entry "get-pathname" () 112 35 ()}
        {Lisp-Entry "get-deleted?" () 116 35 ()}
        {Lisp-Entry "get-items" () 120 35 ("rest")}
        {Lisp-Entry "add-file" () 129 35 ("local")}
        {Lisp-Entry "add-project" () 133 35 ("name")}
        {Lisp-Entry "delete-item" () 142 35 ()}
        {Lisp-Entry "destroy-item" () 146 35 ()}
        {Lisp-Entry "rename-item" () 155 35 ("new-name")}
        {Lisp-Entry "get-local" () 164 35 ("local")}
        {Lisp-Entry "checkin" () 173 35 ("rest" "local")}
        {Lisp-Entry "checkout" () 177 35 ("rest" "local")}
        {Lisp-Entry "undo-checkout" () 181 35 ("rest" "local")}
        {Lisp-Entry "is-different?" () 185 35 ("local")}
        {Lisp-Entry "iterate-item" () 194 18 ("cons" "get-name" "repository" "remote->local" "local" "subitem" "for-each" "get-items" "items" "with-closed" "self" "eq?" "or" "and" "reverse" "append" "new" "pathname" "File" "Directory" "class" "let*" "if" "when" "get-project?" "project?" "let" "path" "item" "dynamic" "function" "iterate" "get-list" "essay" "root" "letrec" "recursive?" "recursive?:" "true" "include-self?" "include-self?:" "base" "base:" "proc")}
        {Lisp-Entry "get-extension" () 219 18 ("get-name" "extract-extension")}
        {Lisp-Entry "get-parent" () 223 35 ()}
        {Lisp-Entry "get-content" () 227 35 ("rest")}
        {Lisp-Entry "get-version-number" () 236 35 ()}
        {Lisp-Entry "get-version" () 240 35 ("n")}
        {Lisp-Entry "get-latest-version" () 244 35 ()}
        {Lisp-Entry "get-latest-info" () 248 35 ()}
        {Lisp-Entry "get-versions" () 252 35 ()}
        {Lisp-Entry "get-unlabeled-versions" () 256 35 ()}
        {Lisp-Entry "get-checkouts" () 265 35 ()}
        {Lisp-Entry "get-checkouts-usernames" () 269 35 ()}
        {Lisp-Entry "get-user-checkout" () 273 35 ("user")}}}})
"Repository-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Repository-Listener.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.repository.Repository-Listener" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Listener" () 45 11 ()
        {Lisp-Entry "repository-event" () 48 35 ("moniker" "repository" "what")}}}})
"Repository-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repository-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.manager.Repository-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Manager" () 49 7 ("type" "status" "toplevel-controls?:" "width:" "filename" "row" "selection-mode:" "multiple-selection?:" "on-double-click" "double-click-handler:" ":icons" "portfolio:" "directory" "filled-column:" "files" "fill" "layout-type:" "content" "vscroll?:" "edge" "border-type:" "2" "files-border" "on-update" "update" "on-reintegrate" "reintegrate" "on-checkpoint" "checkpoint" "on-checkin" "form:" "Event-Handler" "action-handler:" "checkin" "9" "7" "Point" "position:" "title:" "check-status" "name:" "Dimension" "size:" "WinUser" "WinDef" "COM" "System" "Utilities" "View")
        {Lisp-Entry "repository" () 52 12 ("set-repository" "get-repository")}
        {Lisp-Entry "external-name" () 75 16 ("repository-manager" "rest")}
        {Lisp-Entry "finish" () 79 11 ("update-files" "setup-status" "nextmethod" "rest")}
        {Lisp-Entry "setup-status" () 85 11 ("true" "set-checked?" "check-status" "locate" "checkbox" "get-check-status?" "and" "when" "false" "error?:" "repository-manager" "tools" "get-preferences" "pref" "let")}
        {Lisp-Entry "frame-title" () 98 16 ()}
        {Lisp-Entry "frame-position" () 103 16 ("Point")}
        {Lisp-Entry "frame-size" () 108 16 ("Dimension")}
        {Lisp-Entry "tool-preferences" () 117 11 ("repository-manager" "tools" "get-preferences")}
        {Lisp-Entry "resize" () 126 11 ("files-border" "size-figure" "update" "reintegrate" "checkpoint" "0" "checkin" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-checkin" () 135 11 ("false" "checkin-files" "evt")}
        {Lisp-Entry "on-checkpoint" () 139 11 ("true" "checkin-files" "evt")}
        {Lisp-Entry "on-reintegrate" () 143 11 ("reintegrate-files" "evt")}
        {Lisp-Entry "on-update" () 147 11 ("update-files" "evt")}
        {Lisp-Entry "on-double-click" () 151 11 ("show-changes" "files" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "get-repository" () 163 18 ("repository")}
        {Lisp-Entry "set-repository" () 167 18 ("repository" "set!" "rep")}
        {Lisp-Entry "confirm-close" () 176 11 ("save-session" "rest")}
        {Lisp-Entry "save-session" () 180 11 ("Opened-Windows" "properties" "push-property" "get-size" "size:" "get-position" "position:" "external-name" "list" "info" "let")}
        {Lisp-Entry "Ignored-Nodes" () 194 14 ()}
        {Lisp-Entry "Ignored-Leaves" () 197 14 ()}
        {Lisp-Entry "Ignored-Extensions" () 200 14 ()}
        {Lisp-Entry "update-files" () 204 11 ("user-message" "1" "sort-column" "get-name" "key:" "collect-read/write-files" "" "sort" "insert-file" "file" "for-each" "check-status" "get-checked?" "status?" "get-base-directory" "base" "repository" "when" "remove-every-row" "with-update-locked" "files" "locate" "tree" "let" "dynamic" "function" ":wait" "with-cursor")}
        {Lisp-Entry "insert-file" () 222 11 ("user-data:" "list" "children:" "add-row" "file-type" "c3" "status-title" "c2" "get-parent" "get-list" "cdr" "format" "Tree-Label" "c1" "status-image" "image:" "get-name" "title:" "Tree-Node" "new" "c0" "unknown" "file-status" "if" "status" "let*" "status?" "base" "file" "tree")}
        {Lisp-Entry "file-status" () 231 11 ("false" "error?:" "repository" "get-file-status" "file")}
        {Lisp-Entry "status-image" () 235 11 ("else" "unknown" "checked-out-me" "checked-out" "Bitmap-Resource" "checked-in" "case" "status")}
        {Lisp-Entry "status-title" () 244 11 ("else" "unknown" "checked-out-me" "checked-out" "checked-in" "case" "status")}
        {Lisp-Entry "file-type" () 253 11 ("else" "ci=" "test:" "member?" "cond" "get-extension" "ext" "let" "file")}
        {Lisp-Entry "collect-read/write-files" () 267 11 ("get-output" "Ignored-Nodes" "ignored-directories:" "false" "directories?:" "true" "files?:" "put" "read-only?" "Ignored-Extensions" "Ignored-Leaves" "member?" "not" "and" "when" "get-extension" "ext" "get-name" "name" "user-message" "pathname" "dynamic" "function" "iterate-directory" "List-Factory" "new" "fact" "let" "directory")}
        {Lisp-Entry "NotCheckedOut-Err" () 289 12 ()}
        {Lisp-Entry "checkin-files" () 293 11 ("format-was/were" "=" "format-plural" "format" "message-box" "/=" "or" "when" "user-message" "remove-row" "unless" "increase!" "not" "if" "checkin-file" "checked-in?" "get-user-data" "file" "row" "for-each" "dynamic" "function" ":wait" "with-cursor" "ncnt" "0" "ccnt" "get-selected-rows" "rows" "files" "locate" "tree" "let*" "true" "report?" "report?:" "keep-checked-out?")}
        {Lisp-Entry "checkin-file" () 320 11 ("true" ":keep-checked-out?" "repository" "checkin-file" "signal" "else" "false" "NotCheckedOut-Err" "get-hresult" "ecase" "err" "CoError" "catch" "keep-checked-out?" "file")}
        {Lisp-Entry "reintegrate-files" () 334 11 ("format-plural" "format" "message-box" "user-message" "remove-row" "increase!" "checkin" "false" ":get?" "checkout" "repository" "get-item" "item" "with-closed" "get-user-data" "file" "let" "row" "dynamic" "function" "for-each" "0" "ccnt" "get-selected-rows" "rows" "files" "locate" "tree" "let*")}
        {Lisp-Entry "show-changes" () 358 11 ("show-changes" "selected-file" "file" "get-repository" "repository" "let")}
        {Lisp-Entry "selected-row" () 369 11 ("get-single-selection" "selection" "files" "locate" "tree" "let*")}
        {Lisp-Entry "selected-file" () 375 11 ("get-row" "get-user-data" "when" "selected-row" "selection" "files" "locate" "tree" "let")}}}})
"Repository-Manager-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repository-Manager-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.manager.Repository-Manager-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Manager-Preferences" () 47 7 ("Dimension" "size:" "Point" "position:" "title:" "Frame-Preferences")
        {Lisp-Entry "check-status?" () 50 12 ("generate" "accessors" "true")}
        {Lisp-Entry "get-categorized-properties" () 62 11 ("check-status?" "size" "position" "location")}
        {Lisp-Entry "get-row-instance" () 66 11 ("nextmethod" "else" "Boolean-Row" "new" "check-status?" "field-name" "case" "property")}}}})
"Repository-Moniker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repository-Moniker.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.manager.Repository-Moniker" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Moniker" () 46 7 ("Moniker")
        {Lisp-Entry "repository" () 49 8 ()}
        {Lisp-Entry "path" () 50 8 ()}
        {Lisp-Entry "version" () 51 8 ()}
        {Lisp-Entry "construct-literal" () 55 16 (":version" "self" "new" "item" "let" "version" "path" "repository" "context")}
        {Lisp-Entry "compare-object" () 60 11 (":not-equal" "else" ":equal" "get-version" "version" "=" "get-path" "path" "equal?" "get-repository" "repository" "eq?" "and" ":incompatible" "Repository-Moniker" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 71 11 ("path" "repository" "format" "version" "null?" "if" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-protocol" () 90 16 ("item")}
        {Lisp-Entry "new-moniker" () 95 16 ("car" "self" "new" "length" "1" "=" "assert" "list")}
        {Lisp-Entry "present" () 100 11 ("path" "format")}
        {Lisp-Entry "initialize" () 109 11 ("version~self" "path~self" "repository~self" "set!" "nextmethod" "version" "version:" "path" "repository")}
        {Lisp-Entry "exists?" () 121 18 ("repository" "in-repository?" "get-file" "file")}
        {Lisp-Entry "get-writable?" () 125 11 ("true")}
        {Lisp-Entry "set-writable?" () 129 11 ("flag")}
        {Lisp-Entry "writable?" () 133 11 ("true")}
        {Lisp-Entry "get-name" () 137 11 ("get-name" "get-repository-item" "item" "with-closed")}
        {Lisp-Entry "get-base" () 142 11 ("extract-base" "last" "filename" "get-list" "list" "let*")}
        {Lisp-Entry "get-extension" () 148 11 ("extract-extension" "last" "filename" "get-list" "list" "let*")}
        {Lisp-Entry "get-parent" () 154 11 ("get-path" "repository" "Repository-Moniker" "new" ":path" "get-repository-item" "item" "with-closed" "path" "last" "remove" "parent-path" "let")}
        {Lisp-Entry "get-content" () 165 11 ("get-path" "repository" "Repository-Moniker" "new" "dynamic" "function" "map" "get-content" "items" "get-repository-item" "item" "with-closed" "leaves?" "leaves?:" "true" "nodes?" "nodes?:")}
        {Lisp-Entry "get-children" () 173 11 ("get-content" "leaves?" "leaves?:" "true" "nodes?" "nodes?:")}
        {Lisp-Entry "get-repository-item" () 182 17 ("repository" "get-item" "" "apply" "other" "get-path" "path" "bind-keywords" "rest")}
        {Lisp-Entry "get-pathname" () 187 18 ("get-pathname" "get-repository-item" "item" "with-closed")}
        {Lisp-Entry "get-local" () 192 18 ("get-local" "get-repository-item" "item" "with-closed" "local")}
        {Lisp-Entry "add" () 197 18 ("add" "get-repository-item" "item" "with-closed" "local")}
        {Lisp-Entry "add-project" () 202 18 ("add-project" "get-repository-item" "item" "with-closed" "local")}
        {Lisp-Entry "checkin" () 207 18 ("repository" "get-username" "get-file" "safe-checkin" "get-repository-item" "item" "with-closed")}
        {Lisp-Entry "checkout" () 212 18 ("get-file" "checkout" "get-repository-item" "item" "with-closed")}
        {Lisp-Entry "get-status" () 217 18 ("get-status" "get-repository-item" "item" "with-closed")}
        {Lisp-Entry "get-file?" () 222 18 ("get-file?" "get-repository-item" "item" "with-closed")}
        {Lisp-Entry "get-project?" () 227 18 ("get-project?" "get-repository-item" "item" "with-closed")}
        {Lisp-Entry "is-different?" () 232 11 ("is-different?" "get-repository-item" "item" "with-closed" "local")}
        {Lisp-Entry "delete-item" () 237 18 ("delete-item" "get-repository-item" "item" "with-closed")}
        {Lisp-Entry "get-list" () 247 18 ("path")}
        {Lisp-Entry "get-file" () 251 18 ("get-pathname")}
        {Lisp-Entry "load-lines" () 260 11 ("false" "error?:" "true" ":overwrite-read-only?" "delete-file" "load-lines" "get-local" "begin" "unwind-protect" "new-unique-file" "tmp" "User" "Directory" "dir" "let*")}
        {Lisp-Entry "get-repository" () 275 18 ("repository")}
        {Lisp-Entry "get-path" () 279 18 ("path")}
        {Lisp-Entry "get-absolute-path" () 283 18 ("path" "repository" "get-base-project" "append")}
        {Lisp-Entry "get-version" () 287 18 ("version")}
        {Lisp-Entry "get-deleted?" () 291 18 ("false" "true" "0" "version" "=" "if")}
        {Lisp-Entry "foldable?" () 302 11 ("true")}
        {Lisp-Entry "fold-object" () 306 11 ("version" "path" "get-repository" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}}}})
"Repository-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "preferences" "Repository-Preferences.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.preferences.Repository-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Preferences" () 47 7 ("Bitmap-Resource" "icon:" "title:" "Preferences")
        {Lisp-Entry "base-project" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "base-directory" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "active?" () 52 12 ("generate" "accessors" "true")}
        {Lisp-Entry "repository-class" () 64 26 ()}
        {Lisp-Entry "install-preferences" () 68 26 (":base-directory" "base-directory" ":base-project" "getf" "base-project" "self" "set-property" "initargs" "designer")}
        {Lisp-Entry "install-concrete" () 73 26 ("pref" "designer")}
        {Lisp-Entry "gather-concrete-initargs" () 77 26 ()}
        {Lisp-Entry "in-repository?" () 81 26 ("false" "error?:" "base-directory" "anchor-to" "not-null?" "Pathname" "is?" "and" "file")}
        {Lisp-Entry "presentation-property?" () 93 11 ("false" "property")}
        {Lisp-Entry "get-presentation" () 98 11 ("name" "name->presentation")}
        {Lisp-Entry "set-presentation" () 103 11 ("presentation->name" "self" "set-name" "presentation" "designer")}
        {Lisp-Entry "editor-class" () 112 31 ()}
        {Lisp-Entry "get-class-presentation" () 122 16 ()}
        {Lisp-Entry "get-class-image" () 127 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-name-mandatory?" () 132 16 ("true")}
        {Lisp-Entry "get-name-unicity?" () 137 16 ("true")}
        {Lisp-Entry "presentation->name" () 142 16 ("presentation")}
        {Lisp-Entry "name->presentation" () 147 16 ("name")}
        {Lisp-Entry "property-presentation" () 152 16 ("nextmethod" "else" "active?" "base-directory" "base-project" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 160 11 ("nextmethod" "else" "Boolean-Row" "active?" "Directory-Row" "base-directory" "false" "nullable?:" "String-Row" "new" "base-project" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 168 11 ("active?" "base-directory" "base-project")}}}})
"Repository-Synchronizer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Repository-Synchronizer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Repository-Synchronizer" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Synchronizer" () 45 7 ("Directory-Comparer")
        {Lisp-Entry "leaf-feedback" () 53 11 ("get-moniker" "feedback" "leaf2" "leaf1")}
        {Lisp-Entry "create-item" () 62 11 ("get-name" "make-item" "moniker")}
        {Lisp-Entry "get-item-content" () 66 11 ("get-name" "make-item" "dynamic" "function" "map" "leaves" "leaves?:" "nodes" "=" "nodes?:" "get-children" "children" "nextmethod" "Repository-Moniker" "is-not?" "if" "get-moniker" "moniker" "let" "kind" "item")}
        {Lisp-Entry "get-item-type" () 78 11 ("nextmethod" "else" "leaf" "node" "get-project" "if" "Repository-Moniker" "get-item-type" "Roaming-Moniker" "get-moniker" "is?" "cond" "item")}
        {Lisp-Entry "new-entry" () 95 11 ("nextmethod" "leaf" "=" "and" "unless" "right-value" "right" "left-value" "left" "kind" "parent")}
        {Lisp-Entry "different?" () 100 11 ("get-moniker" "is-different" "check-algorithm" "item" "file")}
        {Lisp-Entry "collect-item?" () 104 11 ("/=" "get-name" "name" "let" "nextmethod" "and" "ignored-extensions" "ignored-leaves" "ignored-nodes" "content" "item")}}}})
"Repository-Version"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Repository-Version.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.repository.Repository-Version" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Version" () 45 16 ("Object")
        {Lisp-Entry "repository" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("repository~self" "set!" "nextmethod" "repository")}
        {Lisp-Entry "connected?" () 56 35 ()}
        {Lisp-Entry "get-username" () 65 35 ()}
        {Lisp-Entry "get-version-number" () 69 35 ()}
        {Lisp-Entry "labeled?" () 73 35 ()}
        {Lisp-Entry "get-label" () 77 35 ()}
        {Lisp-Entry "get-action" () 81 35 ()}
        {Lisp-Entry "get-date" () 85 35 ()}
        {Lisp-Entry "get-item" () 89 35 ()}}}})
"Repository-Version-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "manager" "Repository-Version-Browser.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.manager.Repository-Version-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Repository-Version-Browser" () 50 7 ("date" "username" "display-images?:" "toplevel-controls?:" "width:" "title:" "version" "row" "selection-mode:" "multiple-selection?:" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "action" "filled-column:" "versions" "fill" "layout-type:" "content" "vscroll?:" "edge" "border-type:" "versions-border" "on-show-differences" "show-differences" "on-view-versions" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "7" "2" "Point" "position:" "view-versions" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "external-name" () 54 16 ("repository-version-browser" "rest")}
        {Lisp-Entry "file" () 58 12 ("set-file" "get-file")}
        {Lisp-Entry "finish" () 82 11 ("update-buttons" "update-versions" "nextmethod" "initargs")}
        {Lisp-Entry "dialog-title" () 93 16 ()}
        {Lisp-Entry "dialog-position" () 97 16 ("Point")}
        {Lisp-Entry "dialog-size" () 101 16 ("Dimension")}
        {Lisp-Entry "get-file" () 110 18 ("file")}
        {Lisp-Entry "set-file" () 114 18 ("file" "set!" "value")}
        {Lisp-Entry "resize" () 123 11 ("versions-border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-view-versions" () 128 11 ("view-versions" "evt")}
        {Lisp-Entry "on-show-differences" () 132 11 ("show-differences" "evt")}
        {Lisp-Entry "on-selection-change" () 136 11 ("update-buttons" "versions" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-double-click" () 143 11 ("view-versions" "versions" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "update-versions" () 155 11 ("user-data:" "list" "children:" "add-row" "get-action" "c3" "get-date" "c2" "get-username" "Tree-Label" "c1" "Ansi-Bold" "name:" "Font" "if" "font:" "title:" "Tree-Node" "new" "c0" "=" "and" "current?" "get-version-number" "no" "let*" "version" "for-each" "get-versions" "get-item" "item" "with-closed" "file-version" "Repository" "find-repository" "repository" "file" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "versions" "locate" "tree" "let")}
        {Lisp-Entry "update-buttons" () 176 11 ("2" "=" "or" "show-differences" "1" ">=" "view-versions" "locate" "set-enabled?" "length" "count" "selected-versions" "versions" "let*")}
        {Lisp-Entry "file-version" () 188 29 ()}
        {Lisp-Entry "view-versions" () 197 11 ("close-modal-dialog" "get-locals" "view-version" "for-each")}
        {Lisp-Entry "view-version" () 202 29 ("edit-document" "get-application" "appl" "let" "local")}
        {Lisp-Entry "show-differences" () 207 11 ("close-modal-dialog" "compare-versions" "dynamic" "function" ":wait" "with-cursor" "car" "right" "cadr" "left/nil" "get-locals" "locals" "let*")}
        {Lisp-Entry "compare-versions" () 217 29 ("locate" "acquire-focus" "true" "set-visible?" "bring-to-front" "file" "either" "get-guest" "compare-monikers" "text" "host-workspace:" "false" "host-visible?:" "Compare-Files" "new-frame" "frame" "let" "right" "left/nil")}
        {Lisp-Entry "get-locals" () 226 29 ("get-local" "User" "list" "File" "new" "local" "get-name" "format" "filename" "get-application" "appl" "let*" "get-version" "version-item" "get-item" "item" "with-closed" "file" "Repository" "find-repository" "repository" "no" "dynamic" "function" "map" "selected-versions" "versions" "let")}
        {Lisp-Entry "selected-versions" () 245 11 ("get-selected-data" "" "sort" "versions" "locate" "tree" "let")}}}})
"Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "connection" "Request.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.connection.Request" () 37 9 ("jazz")
      {Lisp-Entry "Request" () 45 7 ("Object")
        {Lisp-Entry "connection" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("connection" "set!" "nextmethod" "con")}
        {Lisp-Entry "new-recordset" () 56 19 ("rest" "request")}
        {Lisp-Entry "load-request" () 60 18 (":data-class" "load-table" "set-name" "when" ":request" "Data-Table" "new" "either" "let" "closed" "get-state" "=" "unless" ":max-load" "new-recordset" "recordset" "with-closed" "data-class" "data-class:" "true" "max-load" "max-load:" "name" "name:" "table" "table:" "request")}
        {Lisp-Entry "load-multirequest" () 70 18 ("get-output" "next-recordset!" "put" ":data-class" "cdr" "set!" "car" "data-class" "load-table" "null?" ":request" "Data-Table" "table" "open" "get-state" "=" "opened?" "and" "while" "List-Factory" "new" "tables" "let" "new-recordset" "recordset" "with-closed" ":max-load" "load-request" "list" "connection" "supports-multirequests?" "not" "if" "data-classes" "data-classes:" "true" "max-load" "max-load:" "request")}
        {Lisp-Entry "load-rows" () 88 18 ("values" ":max-load" "get-rows" "missing?" "rows" "receive" "get-columns" "columns" "let" "new-recordset" "recordset" "with-closed" "true" "max-load" "max-load:" "table" "request")}
        {Lisp-Entry "execute" () 100 26 ("command")}}}})
"Resource"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "resource" "Resource.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.resource.Resource" () 37 9 ("jazz")
      {Lisp-Entry "Resource" () 40 7 ("Object")
        {Lisp-Entry "name" () 43 8 ()}
        {Lisp-Entry "initialize" () 46 11 ("name~self" "set!" "nextmethod" "name")}
        {Lisp-Entry "compare-object" () 51 11 (":not-equal" "else" ":equal" "get-name" "name" "=" ":incompatible" "Resource" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 60 11 ("name" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-name" () 71 18 ("name")}
        {Lisp-Entry "resource-type" () 81 31 ()}}}})
"Resource-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "resource" "Resource-File.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.builder.resource.Resource-File" () 37 9 ("jazz")
      {Lisp-Entry "Resource-File" () 45 7 ("Product-File")
        {Lisp-Entry "resource-class" () 48 26 ()}
        {Lisp-Entry "resource-marker" () 52 26 ()}}}})
"Resources-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "resource" "Resources-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.resource.Resources-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Resources-Manager" () 44 7 ("WinNT" "WinKernel" "WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "module" () 47 8 ()}
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("set-module" "nextmethod" "module" "module:")}
        {Lisp-Entry "destroy" () 56 11 ("nextmethod" "set-module")}
        {Lisp-Entry "update" () 61 18 ("error" "English-US" "int-resource" "handle" "UpdateResource" "unless" "size" "data" "name" "type")}
        {Lisp-Entry "set-module" () 66 11 ("begin-update" "set!" "end-update" "module" "when" "value")}
        {Lisp-Entry "begin-update" () 74 11 ("error" "not" "when" "false" "module" "parse" "BeginUpdateResource" "handle" "set!")}
        {Lisp-Entry "end-update" () 80 11 ("set!" "error" "false" "handle" "EndUpdateResource" "unless")}}}})
"Resources-Monitor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "Resources-Monitor.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debuggee.Resources-Monitor" () 37 9 ("jazz")
      {Lisp-Entry "Resources-Monitor" () 49 7 ("resources" "entry" "style:" "edge" "border-type:" "resources-border" "1" "fill" "center" "on-update" "tail" "update" "on-clear" "clear" "on-open" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "open" "name:" "north" "location:" "0" "6" "flow" "2" "Rect" "layout-insets:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "palette-title" () 70 16 ()}
        {Lisp-Entry "palette-icon" () 75 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-position" () 80 16 ("Point")}
        {Lisp-Entry "palette-size" () 85 16 ("Dimension")}
        {Lisp-Entry "client-activate" () 89 11 ("update")}
        {Lisp-Entry "conclude" () 98 11 ("update" "nextmethod" "rest")}
        {Lisp-Entry "get-resource-view" () 108 11 ("resources" "locate")}
        {Lisp-Entry "Logs-Directory" () 117 14 ("Base" "Directory")}
        {Lisp-Entry "on-open" () 121 11 ("with-preserved-current-directory" "Logs-Directory" "exists?" "and" "if" "view-log" "true" ":load?" "file:" "Log" "new" "log" "directory:" "extensions:" "OpenFile-Dialog" "get-modal" "file" "dir" "dynamic" "function" "proc" "get-resource-view" "resource-view" "get-shift?" "default?" "let*" "evt")}
        {Lisp-Entry "on-update" () 136 11 ("update" "evt")}
        {Lisp-Entry "on-clear" () 140 11 ("clear" "get-resource-view" "resource-view" "let" "evt")}
        {Lisp-Entry "update" () 150 11 ("update" "get-resource-view" "resource-view" "let")}}}})
"Resources-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "Resources-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debuggee.Resources-View" () 37 9 ("jazz")
      {Lisp-Entry "Resources-View" () 49 7 ("gui-user-objects" "gui-gdi-objects" "handles" "bags" "undestroyed" "collector-roots" "collector-stack" "data-stack" "system-stack" "symbols" "strings" "allocated" "committed" "virtual" "tail" "justification:" "private-bytes" "width:" "title:" "name" "on-context-menu" "context-menu-handler:" "on-double-click" "form:" "Event-Handler" "double-click-handler:" "column-spacing:" "1" "row-spacing:" "cell" "selection-mode:" "filled-column:" "White" "empty-background:" "Dark" "Color" "background:" ":icons" "portfolio:" "resources" "shown?:" "header" "content" "flat?:" "hscroll?:" "vscroll?:" "document" "style:" "scroller" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "log" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "what" () 55 8 ("after")}
        {Lisp-Entry "next-rank" () 56 8 ("0")}
        {Lisp-Entry "last-counters" () 57 8 ("eq?" "new-hashtable")}
        {Lisp-Entry "reference" () 58 8 ()}
        {Lisp-Entry "reference-entry" () 59 8 ()}
        {Lisp-Entry "reference-counters" () 60 8 ()}
        {Lisp-Entry "get-tree" () 93 18 ("resources" "locate")}
        {Lisp-Entry "clear" () 102 18 ("update" "clear" "bell" "log" "null?" "if")}
        {Lisp-Entry "on-double-click" () 109 11 ("set-reference" "clear-reference" "reference" "eqv?" "bell" "null?" "if" "selected-data" "counters" "rank" "bind" "evt")}
        {Lisp-Entry "on-context-menu" () 118 11 ("track-popup-menu" "dynamic" "function" "with-context-click" "layout-menu" "reference" "null?" "when" "clear-reference" "set-reference" "false" "reference-separator" "set-visible?" "delta" "case" "true" "what" "child" "set-selected?" "Resources-Menu" "new" "menu" "get-position" "pos" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "show-delta" () 136 11 ("view-content" "delta" "what" "set!")}
        {Lisp-Entry "show-before" () 141 11 ("view-content" "before" "what" "set!")}
        {Lisp-Entry "show-after" () 146 11 ("view-content" "after" "what" "set!")}
        {Lisp-Entry "set-reference" () 151 11 ("view-content" "reference" "set!" "bell" "null?" "if" "selected-data" "counters" "rank" "bind")}
        {Lisp-Entry "clear-reference" () 159 11 ("view-content" "reference" "set!")}
        {Lisp-Entry "selected-data" () 164 11 ("get-user-data" "data" "get-row" "row" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "update" () 177 18 ("view-content" "reload" "get-file" "log" "and" "when" "true" "reload?" "reload?:")}
        {Lisp-Entry "extract-log-content" () 183 29 ("get-toplevel-nodes" "log")}
        {Lisp-Entry "Reference-Rendering" () 192 14 ("Dark-Blue" "name:" "blue:" "green:" "red:" "Color" "list")}
        {Lisp-Entry "Allocate-Rendering" () 195 14 ("Dark-Red" "Light-Red" "name:" "Color" "list")}
        {Lisp-Entry "Release-Rendering" () 198 14 ("Dark-Green" "Light-Green" "name:" "Color" "list")}
        {Lisp-Entry "Stable-Rendering" () 201 14 ("list")}
        {Lisp-Entry "view-log" () 205 18 ("view-content" "clear-reference" "log~self" "set!" "log")}
        {Lisp-Entry "view-content" () 211 11 ("insert-node" "node" "for-each" "entry-counters" "reference-counters" "element" "reference" "essay" "reference-entry" "extract-log-content" "entries" "eq?" "new-hashtable" "last-counters" "0" "next-rank" "set!" "log" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "insert-node" () 227 11 ("insert-entry" "else" "insert-resources" "resources" "get-tag" "case" "node" "father" "tree")}
        {Lisp-Entry "insert-entry" () 233 11 ("get-children" "insert-node" "child" "for-each" "user-data:" "Resources-Properties" "cdr" "set!" "when" "car" "-" "value" "hash-set!" "or" "Reference-Rendering" "last-counters" "hash-ref" "previous" "let" ":frame-color" ":background" "->string" "Stable-Rendering" "else" "Release-Rendering" "" "Allocate-Rendering" ">" "cond" "frame-color" "background" "bind" "delta" "what" "case" "Tree-Label" "property" "counter" "dynamic" "function" "map" "image:" "title:" "Tree-Node" "new" "children:" "0" "position:" "father:" "add-row" "row" "cons" "user-data" "entry-counters" "counters" "increase!" "next-rank" "prog1" "null?" "rank" "reference-counters" "if" "reference-scan" "reference-entry" "eq?" "reference" "and" "reference-entry?" "Bitmap-Resource" "image" "get-property" "either" "name" "let*" "entry" "father" "tree")}
        {Lisp-Entry "insert-resources" () 271 11 ("user-data:" "->string" "Tree-Label" "counter" "dynamic" "function" "map" "image:" "title:" "Tree-Node" "new" "cons" "children:" "father:" "add-row" "resources-counters" "counters" "Bitmap-Resource" "image" "get-property" "either" "name" "let" "delta" "what" "case" "resources" "father" "tree")}
        {Lisp-Entry "entry-counters" () 285 11 ("resources-counters" "-" "map" "and" "when" "delta" "what" "case" "after" "find-name" "before" "let" "entry")}
        {Lisp-Entry "Resources-Properties" () 300 14 ("gui-user-objects" "gui-gdi-objects" "handles" "bags" "undestroyed" "collector-roots" "collector-stack" "data-stack" "system-stack" "symbols" "strings" "allocated" "committed" "virtual" "private-bytes")}
        {Lisp-Entry "resources-counters" () 318 11 ("Resources-Properties" "get-property" "property" "dynamic" "function" "map" "resources")}}
      {Lisp-Entry "Resources-Menu" () 329 7 ("on-clear-reference" "clear-reference" "on-set-reference" "set-reference" "reference-separator" "on-show-after" "after" "on-show-before" "before" "on-show-delta" "form:" "Event-Handler" "action-handler:" "title:" "delta" "name:" "Context-Menu")
        {Lisp-Entry "on-show-delta" () 343 11 ("show-delta" "evt")}
        {Lisp-Entry "on-show-before" () 347 11 ("show-before" "evt")}
        {Lisp-Entry "on-show-after" () 351 11 ("show-after" "evt")}
        {Lisp-Entry "on-set-reference" () 355 11 ("set-reference" "evt")}
        {Lisp-Entry "on-clear-reference" () 359 11 ("clear-reference" "evt")}}}})
"Rest-Parameter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Rest-Parameter.fusion"} {Time 128367737800000000L}
    {Lisp-Entry "jazz.language.walker.Rest-Parameter" () 37 9 ("jazz")
      {Lisp-Entry "Rest-Parameter" () 40 7 ("Parameter")}}})
"Restart"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exception" "Restart.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.exception.Restart" () 37 9 ("jazz")
      {Lisp-Entry "Restart" () 44 7 ("Exception")}}})
"Restore-Form"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "component" "Restore-Form.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.component.Restore-Form" () 37 9 ("jazz")
      {Lisp-Entry "Restore-Form" () 44 7 ("Form")
        {Lisp-Entry "component" () 47 8 ()}
        {Lisp-Entry "construct-literal" () 51 16 ("error" "rest" "context")}
        {Lisp-Entry "initialize" () 55 11 ("component~self" "set!" "nextmethod" "apply" "others" "component" "bind-keywords" "initargs")}
        {Lisp-Entry "get-component" () 66 18 ("component")}
        {Lisp-Entry "foldable?" () 75 11 ("false")}
        {Lisp-Entry "fold-object" () 79 11 ("error" "compiler")}}}})
"Rights"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "security" "Rights.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.security.Rights" () 37 9 ("jazz")
      {Lisp-Entry "Rights" () 44 7 ("Component")
        {Lisp-Entry "access" () 47 12 ("generate" "accessors" "read/write")}
        {Lisp-Entry "can-access?" () 55 18 ("read/write" "access" "eq?")}
        {Lisp-Entry "can-read?" () 59 18 ("read/write" "read" "access" "memq?")}
        {Lisp-Entry "can-write?" () 63 18 ("read/write" "write" "access" "memq?")}}}})
"Roaming-Repository"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "roaming" "Roaming-Repository.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.roaming.Roaming-Repository" () 37 9 ("jazz")
      {Lisp-Entry "Roaming-Repository" () 46 7 ("Moniker")
        {Lisp-Entry "snapshot" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("snapshot~self" "set!" "nextmethod" "snapshot")}
        {Lisp-Entry "get-protocol" () 63 16 ("rrp")}
        {Lisp-Entry "new-moniker" () 68 16 ("File" "self" "new" "list")}
        {Lisp-Entry "present" () 72 11 ("snapshot" "get-list" "format")}
        {Lisp-Entry "get-snapshot" () 81 18 ("snapshot")}
        {Lisp-Entry "set-snapshot" () 85 18 ("snapshot" "set!" "value")}
        {Lisp-Entry "read-moniker" () 94 18 ("read" "snapshot" "File-Reader" "new" "reader" "with-closed")}}}})
"Roaming-Repository-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "roaming" "Roaming-Repository-File.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.roaming.Roaming-Repository-File" () 37 9 ("jazz")
      {Lisp-Entry "Roaming-Repository-File" () 45 7 ("Roaming-Repository-Moniker")
        {Lisp-Entry "date" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 (":version" "date:" "self" "new" "version" "date" "spec" "context")}
        {Lisp-Entry "initialize" () 56 11 ("date~self" "set!" "nextmethod" "apply" "others" "date" "bind-keywords" "rest" "spec")}
        {Lisp-Entry "get-date" () 67 18 ("date")}
        {Lisp-Entry "get-project?" () 77 11 ("false")}
        {Lisp-Entry "is-different?" () 81 11 ("get-modification-time" "date" "get-time" "different-times?" "local")}
        {Lisp-Entry "get-content" () 90 11 ("rest")}}}})
"Roaming-Repository-Moniker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "roaming" "Roaming-Repository-Moniker.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.roaming.Roaming-Repository-Moniker" () 37 9 ("jazz")
      {Lisp-Entry "Roaming-Repository-Moniker" () 45 7 ("Repository-Moniker")
        {Lisp-Entry "get-name" () 49 11 ("spec" "split" "last")}}}})
"Roaming-Repository-Project"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "roaming" "Roaming-Repository-Project.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.roaming.Roaming-Repository-Project" () 37 9 ("jazz")
      {Lisp-Entry "Roaming-Repository-Project" () 45 7 ("Roaming-Repository-Moniker")
        {Lisp-Entry "content" () 48 8 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "content" "spec" "context")}
        {Lisp-Entry "initialize" () 56 11 ("content~self" "set!" "nextmethod" "content" "spec")}
        {Lisp-Entry "get-project?" () 67 11 ("true")}
        {Lisp-Entry "get-children" () 71 11 ("get-output" "content" "put" "Roaming-Repository-File" "Roaming-Repository-Project" "is?" "and" "or" "when" "moniker" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let" "leaves?" "leaves?:" "true" "nodes?" "nodes?:")}}}})
"Root-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Root-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Root-View" () 37 9 ("jazz")
      {Lisp-Entry "Root-View" () 48 7 ("fill" "layout-type:" "offscreen?:" "Medium" "name:" "Color" "background:" "0" "Point" "position:" "Container")
        {Lisp-Entry "call-activate" () 60 18 ("get-guest" "root-activated" "View-Host" "is?" "when" "get-host" "host" "let" "root-activate" "set-focused-root" "self" "get-focused-root" "eq?" "unless")}
        {Lisp-Entry "call-deactivate" () 69 18 ("root-deactivated" "get-guest" "guest" "View-Host" "is?" "get-host" "host" "let" "root-deactivate" "set-focused-root" "get-overlapped" "set-previously-focused-root" "self" "get-focused-root" "eq?" "when")}
        {Lisp-Entry "mouse-activate" () 81 26 ()}
        {Lisp-Entry "root-activate" () 85 26 ()}
        {Lisp-Entry "root-deactivate" () 89 26 ()}
        {Lisp-Entry "invalidate-caption" () 98 26 ()}
        {Lisp-Entry "get-parent-component" () 107 11 ("get-player")}}}})
"Row-Formatted-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Row-Formatted-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Row-Formatted-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Row-Formatted-Text-View" () 47 7 ("Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Formatted-Text-View")
        {Lisp-Entry "get-value-row" () 59 11 ("4" "child")}
        {Lisp-Entry "get-context-menu" () 68 11 ()}
        {Lisp-Entry "focus-lose" () 77 11 ("get-value-row" "get-father" "invalidate-drawing" "nextmethod" "view" "window")}
        {Lisp-Entry "focus-master" () 82 11 ("get-value-row" "get-tree")}}}})
"Row-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Row-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Row-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Row-Text-View" () 47 7 ("Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Plain-Text-View")
        {Lisp-Entry "get-value-row" () 59 11 ("4" "child")}
        {Lisp-Entry "document-menu" () 68 11 ()}
        {Lisp-Entry "focus-lose" () 77 11 ("get-value-row" "get-father" "invalidate-drawing" "nextmethod" "view" "window")}
        {Lisp-Entry "focus-master" () 82 11 ("get-value-row" "get-tree")}}}})
"Ruler"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Ruler.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Ruler" () 37 9 ("jazz")
      {Lisp-Entry "Ruler" () 47 7 ("fill" "layout-type:" "content" "name:" "shown?:" "Header-View")
        {Lisp-Entry "get-header-height" () 60 11 ("0" "shown?" "if")}
        {Lisp-Entry "Tabbed-Pen" () 69 14 ("Dark-Red" "name:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "Untabbed-Pen" () 72 14 ("blue:" "green:" "red:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "draw" () 76 11 ("draw-ruler" "get-top" "" "when" "get-header-height" "height" "get-width" "width" "let" "get-update-rect" "update-rect" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-ruler" () 84 11 ("draw-measurements" "draw-border" "height" "width" "dc")}
        {Lisp-Entry "draw-border" () 89 11 ("Medium" "name:" "Color" "fill-rect" "rectangle" "edges:" "raised" "inner:" "draw-edge" "inflate-rect" "inner" "0" "Rect" "new" "outer" "with" "height" "width" "dc")}
        {Lisp-Entry "draw-measurements" () 96 11 ("naturals" "line-to" "move-to" "Untabbed-Pen" "Tabbed-Pen" "5" "if" "offset" "0" "modulo" "=" "major?" "memq?" "tab?" ">=" "unless" "+" "pixel" "*" "rank" "n" "dynamic" "function" "for-each" "Black" "name:" "Pen" "set-pen" "get-user-tabs" "tabs" "client" "get-left-padding" "left" "1" "-" "limit" "quotient" "number" "4" "major" "8" "unit" "let*" "height" "width" "dc")}
        {Lisp-Entry "cursor-update" () 122 11 (":arrow" "set-cursor" "pos")}
        {Lisp-Entry "mouse-down" () 131 11 ("pos")}
        {Lisp-Entry "drag-move" () 135 11 ("pos")}
        {Lisp-Entry "drag-up" () 139 11 ("rest" "pos")}}}})
"Run"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Run.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Run" () 37 9 ("jazz")
      {Lisp-Entry "Run" () 45 7 ("Object")
        {Lisp-Entry "string" () 48 18 ("generate")}
        {Lisp-Entry "style" () 49 18 ("generate")}
        {Lisp-Entry "height" () 50 18 ("generate")}
        {Lisp-Entry "initialize" () 53 11 ("get-height" "height~self" "style~self" "string~self" "set!" "nextmethod" "style" "string")}
        {Lisp-Entry "print" () 60 11 ("style" "string" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-length" () 73 18 ("string" "length")}
        {Lisp-Entry "compute-width" () 82 18 ("self" "style" "run-width")}
        {Lisp-Entry "scan" () 91 21 ("self" "style" "scan" "proc" "tabs" "end" "start" "h")}
        {Lisp-Entry "wrap" () 100 21 ("self" "style" "wrap" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "height-update" () 104 21 ("style" "height-update" "height")}
        {Lisp-Entry "draw-run" () 113 21 ("string" "style" "draw-style" "enabled?" "left" "tab-stops" "line-height" "v" "h" "context" "dc")}}}})
"Runtime-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Runtime-Event.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.event.Runtime-Event" () 37 9 ("jazz")
      {Lisp-Entry "Runtime-Event" () 44 7 ("Event")}}})
"Runtime-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "listener" "Runtime-Listener.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.listener.Runtime-Listener" () 37 9 ("jazz")
      {Lisp-Entry "Runtime-Listener" () 45 11 ("Listener")
        {Lisp-Entry "on-thread-added" () 48 35 ("evt")}
        {Lisp-Entry "on-thread-removed" () 49 35 ("evt")}
        {Lisp-Entry "on-gc-marking" () 50 35 ("evt")}
        {Lisp-Entry "on-gc-sweeping" () 51 35 ("evt")}
        {Lisp-Entry "on-gc-completed" () 52 35 ("evt")}
        {Lisp-Entry "on-zone-expanded" () 53 35 ("evt")}
        {Lisp-Entry "on-zone-shrinked" () 54 35 ("evt")}}}})
"SHDocVw"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "com" "SHDocVw.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "SHDocVw" () 37 9 ("jazz")}})
"SQL-Connections-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Connections-Editor.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Connections-Editor" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Connections-Editor" () 45 7 ("Descendants-Editor")
        {Lisp-Entry "form-model" () 48 11 ("nextmethod" "else" "SQL-Connections-Tree" "tree" "get-name" "case" "form")}}}})
"SQL-Connections-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Connections-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Connections-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Active-Data-Source" () 59 12 ()}
      {Lisp-Entry "get-active-data-source" () 63 20 ("Active-Data-Source")}
      {Lisp-Entry "set-active-data-source" () 67 20 ("get-active-connection" "get-tree" "invalidate-view" "get-name" "essay" "default-source" "get-client" "get-designer" "set-property" "when" "get-sql-connections" "guest" "let" "Active-Data-Source" "set!" "data-source")}
      {Lisp-Entry "get-active-connection" () 76 20 ("open" "closed" "get-state" "=" ":data-source" "get-connection" "connection" "get-name" "name" "let*" "Active-Data-Source" "when")}
      {Lisp-Entry "Active-Connections" () 91 12 ()}
      {Lisp-Entry "find-connection" () 95 13 ("Active-Connections" "assoc" "cdr" "name")}
      {Lisp-Entry "get-connection" () 99 13 ("cons" "Active-Connections" "set!" "new-connection" "connection" "let" "when" "find-connection" "either" "data-source" "data-source:" "name")}
      {Lisp-Entry "new-connection" () 107 13 ("new-connection" "data-source")}
      {Lisp-Entry "close-connections" () 111 13 ("set-active-data-source" "set!" "Active-Connections" "close" "connection" "name" "bind" "info" "dynamic" "function" "for-each")}
      {Lisp-Entry "read-connections" () 120 13 ("err" "continue-handler:" "install-context" "read-from-file" "instantiate" "connections" "get-process" "process" "exists?" "when" "User" "File" "file" "let" "dynamic" "function" "with-safe-execution")}
      {Lisp-Entry "SQL-Connections-Manager" () 139 7 ("width:" "title:" "descendant" "highlight-edited?:" "show-header?:" "tree" "flat?:" "scroller" "center" "descendants" "on-close-all-connections" "close-all" "on-open" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "open" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Exit-Listener" "Editor-View")
        {Lisp-Entry "external-name" () 154 16 ("sql-connections" "rest")}
        {Lisp-Entry "palette-class" () 164 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 169 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 174 16 ()}
        {Lisp-Entry "get-tools-view" () 183 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 187 11 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" () 197 18 ("tree" "descendants" "locate")}
        {Lisp-Entry "SQL-Connections-Controller" () 207 9 ("Editor-View-Controller")
          {Lisp-Entry "document-status" () 210 13 ()}}
        {Lisp-Entry "new-controller" () 215 11 ("self" "SQL-Connections-Controller" "new")}
        {Lisp-Entry "browse-inventory" () 224 11 ("set-connection" "workspace:" "Inventory-Browser" "select-palette" "browser" ":data-source" "get-name" "get-connection" "connection" "selected-data-source" "data-source" "let*" "true" "focus?" "focus?:")}
        {Lisp-Entry "selected-data-source" () 231 11 ("get-user-data" "data-source" "get-row" "row" "get-single-selection" "selection" "get-tree" "tree" "let*")}
        {Lisp-Entry "install" () 244 11 ("Active-Data-Source" "set!" "get-name" "=" "source" "dynamic" "function" "for-each-source" "break" "lambda" "call/ec" "when" "client" "get-default-source" "default" "let" "read-connections" "set-client" "get-application" "add-exit-listener" "self" "locate" "set-editor" "false" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "for-each-source" () 261 11 ("Data-Source" "is?" "when" "level" "component" "dynamic" "function" "client" "for-each-descendant" "proc")}
        {Lisp-Entry "resize-center" () 273 11 ("descendants" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-open" () 277 18 ("open-selection" "evt")}
        {Lisp-Entry "on-close-all-connections" () 281 18 ("set-connection" "workspace:" "Inventory-Browser" "select-palette" "browser" "let" "close-connections" "evt")}
        {Lisp-Entry "prepare-exit" () 287 11 ("close-connections" "save" "get-modified?" "when")}
        {Lisp-Entry "open-selection" () 298 18 ("false" "focus?:" "browse-inventory" "set-active-data-source" "Data-Source" "is?" "when" "bell" "null?" "if" "selected-component" "component" "get-tree" "tree" "let*")}
        {Lisp-Entry "new-connections-menu" () 313 18 ("browse-separator" "false" "browse-inventory" "locate" "set-visible?" "Group" "is?" "when" "get-user-data" "data" "get-row" "row" "if" "dynamic" "function" "with-update-locked" "get-single-selection" "selection" "client:" "Connections-Menu" "new" "menu" "get-tree" "tree" "let*")}}
      {Lisp-Entry "Connections-Menu" () 335 7 ("browse-separator" "on-browse-inventory" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "default?:" "title:" "add-item" "before:" "browse-inventory" "name:" "Component-Menu")
        {Lisp-Entry "on-browse-inventory" () 344 11 ("open-selection" "evt")}}}})
"SQL-Connections-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Connections-Tree.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Connections-Tree" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Connections-Tree" () 49 7 ("show-branches?:" "editable?:" "highlight-edited?:" "reorderable?:" "draggable?:" ":icons" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "form-model" () 56 11 ("nextmethod" "else" "Connection-Column" "descendant" "get-name" "case" "form")}
        {Lisp-Entry "mouse-down" () 62 11 ("SQL-Connections-Manager" "set-active-data-source" "bell" "null?" "if" "selected-component" "component" "let" "control-down?" "when" "nextmethod" "pos")}
        {Lisp-Entry "context-menu" () 71 11 ("new-connections-menu" "track-popup-menu" "dynamic" "function" "with-context-click" "SQL-Connections-Manager" "is?" "when" "get-guest" "guest" "get-host" "host" "let*" "pos")}
        {Lisp-Entry "update-selection" () 80 11 ("selected-components" "expand-state")}
        {Lisp-Entry "row-state" () 84 11 ("expanded" "level" "update?" "component")}
        {Lisp-Entry "double-click" () 88 11 ("player" "get-guest" "open-selection" "nextmethod" "pos")}
        {Lisp-Entry "key-press" () 93 11 ("nextmethod" "else" "player" "get-guest" "open-selection" "case" "key")}
        {Lisp-Entry "addable-root-classes" () 99 11 ("dBase-Data-Source" "Access-Data-Source" "SQLServer-Data-Source" "Group" "list")}}
      {Lisp-Entry "Connection-Column" () 113 7 ("Tree-Node-Column")
        {Lisp-Entry "draw-cell" () 116 11 ("Dark-Red" "name:" "Color" "false" "text-rect" "frame-rect" "get-user-data" "eq?" "when" "SQL-Connections-Manager" "get-active-data-source" "active" "let" "nextmethod" "height" "width" "cell" "row" "context" "dc")}}}})
"SQL-Console-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Console-Manager.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Console-Manager" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Console-Manager" () 47 7 ("Console-Manager")
        {Lisp-Entry "form-model" () 50 11 ("nextmethod" "else" "SQL-Console-Text-View" "text" "get-name" "case" "form")}
        {Lisp-Entry "external-name" () 57 16 ("sql-console-manager" "rest")}
        {Lisp-Entry "palette-title" () 67 16 ()}}}})
"SQL-Console-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Console-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Console-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Console-Text-View" () 52 7 ("sql" "context:" "Console-Text-View")
        {Lisp-Entry "current-request" () 55 8 ()}
        {Lisp-Entry "current-table" () 56 8 ()}
        {Lisp-Entry "current-tables" () 57 8 ()}
        {Lisp-Entry "preferences" () 64 11 ("sql" "tools" "get-preferences")}
        {Lisp-Entry "get-context" () 68 11 ("sql")}
        {Lisp-Entry "get-current-request" () 77 18 ("current-request")}
        {Lisp-Entry "display-banner" () 86 11 ("display-prompt" "Banner-Color" "colorize" "format" "insert-string" "get-start" "start" "let")}
        {Lisp-Entry "Header-Font" () 99 14 ("monospace?:" "true" "bold?:" "point-size:" "font-name:" "Font" "new")}
        {Lisp-Entry "Header-Font-Plain" () 102 14 ("true" "monospace?:" "point-size:" "font-name:" "Font" "new")}
        {Lisp-Entry "Header-Color" () 105 14 ("Dark-Blue" "name:" "Color")}
        {Lisp-Entry "Header-Style" () 108 14 ("Header-Color" "color:" "Header-Font" "font:" "Text-Style" "new")}
        {Lisp-Entry "Header-Style-Plain" () 111 14 ("Header-Color" "color:" "Header-Font-Plain" "font:" "Text-Style" "new")}
        {Lisp-Entry "Overflow-Style" () 114 14 ("Dark-Red" "Color" "color:" "Code" "name:" "Font" "font:" "Text-Style")}
        {Lisp-Entry "evaluate" () 118 18 ("display-evaluation" "eval-command" "tables" "let" "console?" "command")}
        {Lisp-Entry "evaluate-statements" () 123 18 ("fresh-prompt" "format-plural" "format" "display-result" "evaluation-break" "clear-table" "get-count" "increase!" "when" "load-request" "table" "statement" "for-each" "with-transaction" "affected" "get-connection" "connection" "dynamic" "function" ":wait" "with-cursor" "else" "car" "evaluate" "1" "bell" "0" "case" "length" "let" "console?" "statements")}
        {Lisp-Entry "eval-command" () 148 11 ("load-sql" "process-sql" "shift-down?" "not" "and" "if" "current-request" "set!" "get-connection" "connection" "let" "dynamic" "function" ":wait" "with-cursor" "console?" "command" "name" "range")}
        {Lisp-Entry "get-connection" () 158 11 ("error" "SQL-Connections-Manager" "get-active-connection" "either")}
        {Lisp-Entry "process-sql" () 163 11 ("load-sql" "list" "if" "process-sql" "table" "get-user" "user" "get-application" "appl" "let*" "command" "connection")}
        {Lisp-Entry "load-sql" () 172 11 (":max-load" "load-multirequest" "parse-sql-command" "cmd" "expand-sql" "sql" "get-max-load" "max-load" "preferences" "pref" "let*" "command" "connection")}
        {Lisp-Entry "expand-sql" () 180 11 ("expand-sql" "get-user" "user" "get-application" "appl" "let*" "command")}
        {Lisp-Entry "get-max-display" () 186 11 ("get-max-display" "preferences" "pref" "let")}
        {Lisp-Entry "display-evaluation" () 191 11 ("fresh-prompt" "display-affected" "display-tables" "-" "not-displayed" "min" "displayed" "get-missing?" "missing?" "get-count" "count" "car" "first-table" "get-max-display" "max-display" "let*" "else" "format-plural" "format" "integer?" "display-result" "clear-table" "null?" "cond" "evaluation-break" "when" "console?" "tables")}
        {Lisp-Entry "display-affected" () 212 11 ("0" "=" "not" "if" "format-plural" "format" "display-result" "console?" "not-displayed" "missing?" "count")}
        {Lisp-Entry "display-result" () 225 11 ("Eval-Color" "colorize" "insert-line" "get-start" "start" "let" "clear-user-message" "user-message" "not" "if" "console?" "string")}
        {Lisp-Entry "present-value" () 234 11 ("->string" "null?" "if" "value")}
        {Lisp-Entry "clear-table" () 240 18 ("clear-tables" "remove-columns" "clear-all" "get-sql-output-tree" "tree" "get-sql-output-text" "text" "let")}
        {Lisp-Entry "output-tables" () 248 18 ("0" "get-max-display" "display-tables" "current-request" "set!" "name" "tables")}
        {Lisp-Entry "clear-output" () 254 18 ("clear-tables" "get-sql-output-tree" "remove-columns" "get-sql-output-text" "clear-all")}
        {Lisp-Entry "previous-table" () 260 18 ("0" "get-max-display" "display-current-table" "current-table" "decrease!")}
        {Lisp-Entry "next-table" () 265 18 ("0" "get-max-display" "display-current-table" "current-table" "increase!")}
        {Lisp-Entry "clear-tables" () 270 11 ("recordsets-update" "get-sql-tree-output" "output" "let" "current-tables" "0" "current-table" "set!")}
        {Lisp-Entry "display-tables" () 277 11 ("display-current-table" "current-tables" "0" "current-table" "set!" "not-displayed" "max-display" "tables")}
        {Lisp-Entry "display-current-table" () 283 11 ("recordsets-update" "get-sql-tree-output" "output" "let" "current-table" "current-tables" "element" "display-table" "not-displayed" "max-display")}
        {Lisp-Entry "display-table" () 289 11 ("display-tree" "display-text" "?r" "?c" "?t" "set!" "tree-widths" "tree-max-char" "get-font" "tree-font" "get-sql-output-tree" "tree" "Header-Font" "compute-widths" "text-widths" "Code" "name:" "Font" "get-metrics" "get-max-char-width" "text-max-char" "length" "affected" "get-rows" "rows" "get-columns" "columns" "let*" "not-displayed" "max-display" "table")}
        {Lisp-Entry "compute-widths" () 306 11 ("get-prefered-width" "*" "get-name" "text-width" "max" "+" "min" "column" "dynamic" "function" "map" "max-char" "font" "columns")}
        {Lisp-Entry "display-text" () 312 11 ("Point" "scroll-to" "Overflow-Style" "format-plural" "format" "when" "join-data" "determine-max-list" "max-list" "data" "headers" "else" "subseq" ">" "get-values" "present-value" "row" "for-each" "insert-line" "String" "coerce" "get-name" "column" "join" "insert-styled" "make-tab-stops-from" "append!" "set-tab-stops" "increase!" "width" "dynamic" "function" "map" "stops" "let" "cond" "clear-all" "0" "stop" "Header-Style-Plain" "Header-Style" "if" "intern-style" "style" "get-sql-output-text" "output" "get-tabulate-text?" "tabulate?" "preferences" "pref" "let*" "widths" "not-displayed" "max-display" "affected" "rows" "columns")}
        {Lisp-Entry "determine-max-list" () 348 11 ("0" "naturals" "set!" ">" "when" "count" "let*" "row" "for-each" "element" "length" "max" "let" "n" "dynamic" "function" "map" "data" "headers")}
        {Lisp-Entry "Spacing" () 361 14 ("3")}
        {Lisp-Entry "join-data" () 365 11 ("get-output" "set!" "length" "-" "unless" "format" "cdr" "null?" "last?" "Spacing" "+" "max" "car" "data" "while" "String-Printer" "new" "printer" "let" "max-list" "row")}
        {Lisp-Entry "display-tree" () 379 11 ("0" "subseq" ">" "Tree-Label" "value" "map" "present-value" "Tree-Node" "new" "cons" "children:" "add-row" "cdr" "rest" "first" "get-values" "values" "row" "set-display-images?" "when" "Tree-Label-Column" "width:" "get-name" "title:" "false" "toplevel-controls?:" "Tree-Node-Column" "class:" "add-column" "if" "eq?" "node?" "let*" "width" "column" "dynamic" "function" "for-each" "car" "first-column" "remove-columns" "get-sql-output-tree" "output" "let" "widths" "not-displayed" "max-display" "affected" "rows" "columns")}}}})
"SQL-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Explorer.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Explorer" () 46 7 ("CppJava-Explorer")}}})
"SQL-Output-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Output-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Output-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Output-Text-View" () 47 7 ("left-padding:" "Code" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Text-View")}}})
"SQL-Output-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Output-Tree.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Output-Tree" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Output-Tree" () 49 7 ("White" "name:" "Color" "background-filler:" "Tree-View")
        {Lisp-Entry "double-click" () 56 11 ("self" "sql-output-action" "view->tree" "cell" "get-application" "get-user" "user" "let" "nextmethod" "pos")}
        {Lisp-Entry "context-menu" () 63 11 ("track-popup-menu" "default-sql-menu" "self" "sql-output-menu" "either" "menu" "when" "view->tree" "cell" "get-application" "get-user" "user" "let" "dynamic" "function" "with-context-click" "pos")}
        {Lisp-Entry "default-sql-menu" () 73 11 ("layout-menu" "on-copy-data" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "parent:" "Label-Item" "Context-Menu" "new" "menu" "let" "cell")}
        {Lisp-Entry "on-copy-data" () 80 11 ("map" "join" "else" "car" "1" "0" "selection" "length" "case" "set-clipboard" "get-application" "add-clipboard" "string" "copy" "get-cell-data" "get-title" "cell" "dynamic" "function" "cell-title" "let" "evt")}
        {Lisp-Entry "cell-tooltips?" () 100 11 ("true")}
        {Lisp-Entry "get-cell-tooltip" () 104 11 ("self" "sql-output-tooltip" "0" "get-row" ">" "essay" "get-cell-data" "data" "get-col" "get-column" "column" "get-user" "user" "get-application" "appl" "let*" "cell")}
        {Lisp-Entry "get-tooltip-position" () 113 11 ("rect-size" "6" "font" "text-width" "Dimension" "new" "center" "rect-position" "+" "v" "h" "rect" "text")}}}})
"SQL-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "preferences" "SQL-Preferences.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.sql.preferences.SQL-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Preferences" () 47 7 ("Bitmap-Resource" "icon:" "title:" "Preferences")
        {Lisp-Entry "max-load" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "max-display" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "tabulate-text?" () 52 12 ("generate" "accessors" "true")}
        {Lisp-Entry "can-rename-component?" () 64 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 68 11 ("false")}
        {Lisp-Entry "can-move-component?" () 72 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 76 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 80 11 ("tabulate-text?" "max-display" "max-load")}
        {Lisp-Entry "property-presentation" () 85 16 ("nextmethod" "else" "tabulate-text?" "max-display" "max-load" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 93 11 ("nextmethod" "else" "Boolean-Row" "tabulate-text?" "Integer-Row" "new" "max-display" "max-load" "field-name" "case" "property")}}}})
"SQL-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Syntax.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Syntax" () 45 7 ("Text-Syntax")
        {Lisp-Entry "get-constituent-test" () 53 11 ("sql-constituent?")}
        {Lisp-Entry "auto-complete-characters" () 62 11 ("SQL-Text-View" "auto-complete-characters")}
        {Lisp-Entry "auto-complete-char?" () 66 11 ("SQL-Text-View" "auto-complete-char?" "last" "key")}}}})
"SQL-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Text-Actions.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Text-Actions" () 47 7 ("Return" ":control" "Shortcut" "shortcut:" "on-evaluate" ":focus" "Event-Handler" "action-handler:" "evaluate" "name:" "Actions")}}})
"SQL-Text-Output"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Text-Output.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Text-Output" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Text-Output" () 48 7 ("text" "content" "flat?:" "hscroll?:" "vscroll?:" "center" "scroller" "on-clear" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "clear" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "external-name" () 61 16 ("sql-text-output" "rest")}
        {Lisp-Entry "palette-class" () 71 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 76 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 81 16 ()}
        {Lisp-Entry "get-tools-view" () 90 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 94 11 ("acquire-focus" "get-text" "text" "let")}
        {Lisp-Entry "get-text" () 104 18 ("text" "locate")}
        {Lisp-Entry "delete-selection" () 113 11 ("clear-all" "get-text" "text" "let")}
        {Lisp-Entry "on-clear" () 123 11 ("clear-table" "get-sql-console-text" "console" "let" "evt")}}}})
"SQL-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "preferences" "SQL-Text-Preferences.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.sql.preferences.SQL-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Text-Preferences" () 49 7 ("completions:" "Dark-Blue" "keyword-color:" "definition-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "line-comment-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "definition-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "keyword-color" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "keywords" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "completions" () 57 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 94 11 ("keyword-color" "definition-color" "line-comment-color" "title-color" "completions" "keywords")}
        {Lisp-Entry "property-presentation" () 100 16 ("nextmethod" "else" "completions" "keywords" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 112 11 ("nextmethod" "else" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}}}})
"SQL-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Text-View" () 46 7 ("Code-Text-View")
        {Lisp-Entry "install" () 49 11 ("get-keyword-color" "Keyword" "get-definition-color" "Definition" "get-line-comment-color" "Line-Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 59 16 ("sql-text" "rest")}
        {Lisp-Entry "preferences" () 63 11 ("sql-text" "documents" "get-preferences")}
        {Lisp-Entry "frame-workspaces" () 72 11 ("sql")}
        {Lisp-Entry "focus-actions" () 81 11 ("nextmethod" "sql-text" "find-actions" "cons")}
        {Lisp-Entry "favorite-completions" () 91 11 ("sql-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "commented?" () 95 11 ("Line-Comment" "Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "return-press" () 107 11 ("tabulate" "nextmethod" "key")}
        {Lisp-Entry "explorer-class" () 117 11 ("SQL-Explorer")}
        {Lisp-Entry "get-context" () 126 11 ("sql")}
        {Lisp-Entry "current-name" () 130 11 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" () 134 11 ("read-string-element" "element" "=" "if" "0" "length" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" () 143 11 ("current-name")}
        {Lisp-Entry "current-expr-range" () 147 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 153 11 ("get-range" "outer-expr" "end:" "start:" "self" "SQL-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" () 159 11 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" () 168 12 ("list")}
        {Lisp-Entry "get-headers" () 173 11 ("headers")}
        {Lisp-Entry "get-first-special?" () 177 11 ("false")}
        {Lisp-Entry "Definitions" () 186 12 ()}
        {Lisp-Entry "get-definitions" () 190 11 ("Definitions")}
        {Lisp-Entry "Keywords" () 199 12 ()}
        {Lisp-Entry "get-keywords" () 305 29 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" () 314 14 ()}
        {Lisp-Entry "Syntax-Automata" () 317 14 ()}
        {Lisp-Entry "syntax-targets" () 321 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 327 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 333 11 ("get-keywords" "keyword" "get-definitions" "definition" "str" "dynamic" "function" "map" "false" "line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" () 339 11 ("sql-constituent?" "self" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-type" () 343 11 ("Keyword" "keyword" "Definition" "colorize-keyword" "definition" "Title" "Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}
        {Lisp-Entry "on-evaluate" () 355 11 ("evaluate-selection" "evt")}
        {Lisp-Entry "evaluate-selection" () 359 29 ("false" "evaluate-statements" "get-sql-console-text" "console" "split" "whitespace?" "not" "statement" "dynamic" "function" "collect-if" "statements" "uncommented-string" "string" "statement-range" "get-selection" "has-selection?" "if" "range" "let*")}
        {Lisp-Entry "statement-range" () 367 11 ("text-ending" "text-beginning" "1" "next" "if" "Range" "new" "end:" "start:" "debug" "end" "true" ":reverse?" "position:" "search-string" "start" "statement-pos" "pos" "let*")}
        {Lisp-Entry "statement-pos" () 379 11 ("get-char" "=" "and" "if" "1" "previous" "get-start" "start" "let*")}
        {Lisp-Entry "uncommented-string" () 387 11 ("cn" "uncommented-line" "map" "join" "range-strings" "lines" "let" "range")}
        {Lisp-Entry "uncommented-line" () 392 11 ("0" "subseq" "null?" "if" "search-string" "pos" "let" "line")}}}})
"SQL-Tree-Output"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "sql" "SQL-Tree-Output.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.sql.sql.SQL-Tree-Output" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Tree-Output" () 48 7 ("column-spacing:" "row-spacing:" "multiple-selection?:" "cell" "selection-mode:" "filled-column:" "Dark" "Color" "background:" "tree" "header" "fill" "content" "flat?:" "hscroll?:" "vscroll?:" "scroller" "on-settings" "displayed" "on-clear" "clear" "4" "on-forward-menu" "on-forward-history" "forward" "on-backward-menu" "pick" "on-backward-history" "body" "backward" "on-next-recordset" "next" "on-previous-recordset" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "enabled?:" "previous" "2" "justification:" "monospace?:" "underline?:" "italic?:" "bold?:" "color:" "9" "point-size:" "font-name:" "Font" "font:" "center" "current" "1" "0" "Rect" "layout-insets:" "tail" "location:" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "History-Provider" "Layout-View")
        {Lisp-Entry "history-manager" () 51 8 ("self" "History-Manager" "new")}
        {Lisp-Entry "external-name" () 81 16 ("sql-tree-output" "rest")}
        {Lisp-Entry "palette-class" () 91 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 96 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 101 16 ()}
        {Lisp-Entry "get-tools-view" () 110 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 114 11 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" () 124 18 ("tree" "locate")}
        {Lisp-Entry "delete-selection" () 133 11 ("remove-every-row" "get-tree" "tree" "let")}
        {Lisp-Entry "on-previous-recordset" () 143 11 ("previous-table" "get-sql-console-text" "console" "let" "evt")}
        {Lisp-Entry "on-next-recordset" () 148 11 ("next-table" "get-sql-console-text" "console" "let" "evt")}
        {Lisp-Entry "recordsets-update" () 153 18 ("set-tooltip-text" "set-image-name" "/=" "tooltip-text" "else" "not" "and" "Bitmap-Resource" "null?" "cond" "image-name" "displayed" "displayed-view" "let" "-" "" "next" ">" "previous" "set-enabled?" "1" "+" "format" "0" "=" "if" "locate" "set-title" "get-missing?" "missing?" "get-count" "get-name" "name" "element" "essay" "table" "length" "count" "let*" "not-displayed" "tables" "current")}
        {Lisp-Entry "on-clear" () 176 11 ("clear-table" "get-sql-console-text" "console" "let" "evt")}
        {Lisp-Entry "on-settings" () 181 11 ("sql" "host-workspace:" "Preferences-Manager" "new-frame" "evt")}
        {Lisp-Entry "on-add-history" () 190 18 ("history-manager" "add-current" "evt")}
        {Lisp-Entry "on-backward-history" () 194 18 ("history-manager" "go-backward-history" "evt")}
        {Lisp-Entry "on-forward-history" () 198 18 ("history-manager" "go-forward-history" "evt")}
        {Lisp-Entry "on-backward-menu" () 202 11 ("backward" "history-manager" "History-Menu" "track" "get-combo" "initiator" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-forward-menu" () 208 11 ("forward" "history-manager" "History-Menu" "track" "get-combo" "initiator" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "add-history" () 214 18 ("history-manager" "add-history" "item")}
        {Lisp-Entry "current-history-item" () 218 11 ("History-Request-Item" "new" "when" "get-current-request" "request" "get-sql-console-text" "console" "let*")}}}})
"SQL-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "workspace" "SQL-Workspace.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.sql.workspace.SQL-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "SQL-Workspace" () 47 7 ("SQL-Text-Output" "SQL-Tree-Output" "Inventory-Browser" "Favorites-Manager" "Workbench-Manager" "SQL-Connections-Manager" "Chapters-Browser" "SQL-Console-Manager" "selection" "Properties-Manager" "Search-Results" "Output-Log" "Web-Servers-Manager" "Debugger-Console-Manager" "Jazz-Console-Manager" "model-name:" "second" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "SQL-Text-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 82 11 ("sql")}}}})
"SQLDMO"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "SQLDMO.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "SQLDMO" () 37 9 ("jazz")}})
"SQLServer-Constraint-Name-Global-Unicity-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Constraint-Name-Global-Unicity-Constraint.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Constraint-Name-Global-Unicity-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Constraint-Name-Global-Unicity-Constraint" () 45 7 ("Integrity-Constraint")
        {Lisp-Entry "register-constraints" () 53 16 ("Design-Constraint" "self" "new" "register-constraint" "manager")}
        {Lisp-Entry "validate" () 63 11 ("message:" "Integrity-Violation" "new" "add-violation" "false" "when" "manager" "context" "client" "architecture" "constraint")}}}})
"SQLServer-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Data-Source.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Data-Source" () 46 7 ("Data-Source")
        {Lisp-Entry "server" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "database" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "dsn" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "external-name" () 55 16 ("sqlserver" "rest")}
        {Lisp-Entry "new-inventory" () 64 11 ("database" "password" "username" "server" "SQLServer-Inventory" "new" "rest" "connection")}
        {Lisp-Entry "new-connection" () 73 11 ("self" "ADO-Connection" "new")}
        {Lisp-Entry "get-connection-string" () 77 11 ("password" "username" "either" "database" "server" "format" "dsn" "if")}
        {Lisp-Entry "get-connection-properties" () 87 11 ("password" "password:" "username" "username:" "database" "database:" "server" ":server" "list")}
        {Lisp-Entry "present" () 99 11 ("database" "server" "format" "dsn" "if")}
        {Lisp-Entry "present-detailed" () 105 11 ("database" "server" "format" ":bulleted" "list")}
        {Lisp-Entry "get-class-presentation" () 118 16 ()}
        {Lisp-Entry "property-presentation" () 123 16 ("nextmethod" "else" "dsn" "database" "server" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 131 11 ("nextmethod" "else" "String-Row" "dsn" "condensed?:" "SQLServer-Database-Row" "database" "false" "limit-to-list?:" "true" "nullable?:" "SQLServer-Server-Row" "new" "server" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 139 11 ("database" "password" "username" "server" "dsn" "class-info")}}}})
"SQLServer-Database-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Database-Browser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Database-Browser" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Database-Browser" () 47 7 ("Combo-Box")
        {Lisp-Entry "data-source" () 50 12 ("set-data-source" "get-data-source")}
        {Lisp-Entry "database-names" () 53 8 ()}
        {Lisp-Entry "get-data-source" () 61 18 ("data-source")}
        {Lisp-Entry "set-data-source" () 65 18 ("update-database-names" "data-source" "set!" "value")}
        {Lisp-Entry "Unable-To-Connect" () 75 12 ()}
        {Lisp-Entry "Login-Failed" () 78 12 ()}
        {Lisp-Entry "update-database-names" () 82 11 ("set-entry" "null?" "when" "choices" "length" ">=" "set-condensed?" "database-names" "list" "map" "set-choices" "setup-database-names")}
        {Lisp-Entry "setup-database-names" () 90 11 ("DisConnect" "Login-Failed" "format" "Unable-To-Connect" "Item" "get-Name" "collect" "get-Count" "to" "from" "n" "for" "loop" "get-Databases" "databases" "get-password" "get-username" "Connect" "cotry" "1" "put-LoginTimeout" "message-box" "begin" "SQLDMO.SQLServer" "cocreate" "server" "with-closed" "get-server" "servername" "let" "database-names" "set!" "data-source" "null?" "if" "dynamic" "function" ":wait" "with-cursor")}}}})
"SQLServer-Database-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Database-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Database-Row" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Database-Row" () 48 7 ("Combo-Row")
        {Lisp-Entry "database-names" () 51 8 ()}
        {Lisp-Entry "patch-recursing?" () 52 8 ("false")}
        {Lisp-Entry "Unable-To-Connect" () 55 12 ()}
        {Lisp-Entry "Login-Failed" () 58 12 ()}
        {Lisp-Entry "setup-database-names" () 62 11 ("DisConnect" "Login-Failed" "format" "Unable-To-Connect" "Item" "get-Name" "collect" "get-Count" "to" "from" "n" "for" "loop" "get-Databases" "databases" "get-password" "get-username" "Connect" "cotry" "1" "put-LoginTimeout" "message-box" "database-names" "set!" "begin" "null?" "if" "false" "error?:" "SQLDMO.SQLServer" "cocreate" "server" "with-closed" "get-server" "servername" "get-client" "car" "source" "let*" "dynamic" "function" ":wait" "with-cursor")}
        {Lisp-Entry "update-database-names" () 87 11 ("length" ">" "editor" "get-choices" "choices" "let" "database-names" "list" "map" "set-choices" "true" "set-condensed?" "setup-database-names")}
        {Lisp-Entry "edit-in-cell" () 95 11 ("false" "update-database-names" "unwind-protect" "true" "set!" "patch-recursing?" "unless" "nextmethod")}}}})
"SQLServer-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Datatype.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Datatype" () 46 7 ("Datatype")
        {Lisp-Entry "call-construct-literal" () 50 23 ("construct-literal" "apply" "elements" "context")}
        {Lisp-Entry "get-systypes" () 54 16 ("read-only" "2" "4" "9" "1" "0" "8" "Systype")}}}})
"SQLServer-Default-Value-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Default-Value-Constraint.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Default-Value-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Default-Value-Constraint" () 45 7 ("Integrity-Constraint")
        {Lisp-Entry "register-constraints" () 53 16 ("Design-Column" "self" "new" "register-constraint" "manager")}
        {Lisp-Entry "validate" () 63 11 ("split" "search" "text" "dynamic" "function" "some?" "apostrophe-alone?" "apostrophes?" "stop-descent" "property:" "message:" "Integrity-Violation" "new" "add-violation" "begin" "not" "if" "-" "1" "0" "subseq" "=" "2" ">=" "parentheses?" "length" "len" "not-null?" "SQLServer-Design-Schema" "is?" "and" "get-default-value" "default-value" "get-table" "get-schema" "schema" "Design-Architecture" "find-ascendant" "let*" "get-visible?" "when" "manager" "context" "client" "architecture" "column")}}}})
"SQLServer-Index-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Index-Constraint.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Index-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Index-Constraint" () 45 7 ("Integrity-Constraint")
        {Lisp-Entry "register-constraints" () 53 16 ("Design-Index" "self" "new" "register-constraint" "manager")}
        {Lisp-Entry "validate" () 63 11 ("message:" "Integrity-Violation" "new" "add-violation" "false" "when" "manager" "context" "client" "architecture" "index")}}}})
"SQLServer-Inventory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory" () 45 7 ("Inventory")
        {Lisp-Entry "server" () 53 8 ()}
        {Lisp-Entry "database" () 54 8 ()}
        {Lisp-Entry "system-types" () 55 8 ()}
        {Lisp-Entry "initialize" () 58 11 ("destroy-mandatory" "Item" "database" "get-Databases" "databases" "with-closed" "destroy-inventory" ":cleanup" ":sqlserver-version" ":register" "get-version" "sqlserver" "validate-version" "Connect" "error" "null?" "when" "false" "error?:" "SQLDMO.SQLServer" "cocreate" "server" "set!" "nextmethod" "databasename" "password" "username" "servername" "connection")}
        {Lisp-Entry "destroy" () 71 11 ("nextmethod" "destroy-inventory")}
        {Lisp-Entry "destroy-inventory" () 76 11 ("DisConnect" "server" "cointerface-refcount" "***" "debug" "database" "set!" "corelease" "system-types" "when")}
        {Lisp-Entry "get-version" () 98 11 ("Version" "new" "0" "release" "get-VersionMinor" "minor" "server" "get-VersionMajor" "major" "let")}
        {Lisp-Entry "load-system-types" () 110 11 ("database" "get-SystemDatatypes")}
        {Lisp-Entry "get-system-types" () 114 18 ("load-system-types" "set!" "system-types" "unless")}
        {Lisp-Entry "get-system-type" () 120 18 ("get-system-types" "Item" "name")}
        {Lisp-Entry "get-database" () 130 18 ("database")}
        {Lisp-Entry "get-tables" () 139 11 ("get-output" "self" "SQLServer-Inventory-Table" "put" "corelease" "get-SystemObject" "if" "Item" "table" "get-Count" "to" "1" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "database" "get-Tables" "tables" "with-closed")}
        {Lisp-Entry "get-table" () 150 11 ("Item" "self" "SQLServer-Inventory-Table" "new" "database" "get-Tables" "tables" "with-closed" "name")}
        {Lisp-Entry "create-table" () 155 11 ("self" "SQLServer-Inventory-Table" "new" "put-Name" "SQLDMO.Table" "cocreate" "new-table" "let" "name")}
        {Lisp-Entry "append-table" () 161 11 ("get-handle" "Add" "database" "get-Tables" "tables" "with-closed" "table")}
        {Lisp-Entry "remove-table" () 166 11 ("Remove" "database" "get-Tables" "tables" "with-closed" "name")}
        {Lisp-Entry "columns-ordinal-position-consecutive?" () 171 11 ("false")}
        {Lisp-Entry "get-views" () 180 11 ("get-output" "corelease" "self" "SQLServer-Inventory-View" "put" "get-SystemObject" "not" "if" "Item" "view" "get-Count" "to" "1" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "database" "get-Views" "views" "with-closed")}
        {Lisp-Entry "get-view" () 191 11 ("self" "SQLServer-Inventory-View" "new" "when" "Object-Not-Existant" "cotry" "if" "view" "Item" "dynamic" "function" "action" "let*" "database" "get-Views" "views" "with-closed" "true" "error?" "error?:" "name")}
        {Lisp-Entry "create-view" () 204 11 ("self" "SQLServer-Inventory-View" "new" "put-Name" "SQLDMO.View" "cocreate" "new-view" "let" "name")}
        {Lisp-Entry "append-view" () 210 11 ("get-handle" "Add" "database" "get-Views" "views" "with-closed" "view")}
        {Lisp-Entry "remove-view" () 215 11 ("Remove" "database" "get-Views" "views" "with-closed" "name")}
        {Lisp-Entry "get-relations" () 225 11 ("get-output" "close" "put-sequence" "if" "get-table-relations" "relations" "table" "dynamic" "function" "for-each" "get-tables" "tables" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "create-relation-complete" () 237 11 ("self" "SQLServer-Inventory-Relation" "new" "get-Keys" "foreign-keys" "Item" "database" "get-Tables" "tables" "get-ReferencedColumns" "put-ReferencedTable" "Add" "field" "dynamic" "function" "for-each" "get-KeyColumns" "columns" "with-closed" "SQLDMO.SQLDMOKey_Foreign" "put-Type" "put-Name" "SQLDMO.Key" "cocreate" "new-key" "let" "foreign-fields" "foreign-table" "primary-fields" "primary-table" "relation-name")}
        {Lisp-Entry "remove-relation" () 257 11 ("Remove" "get-Keys" "keys" "Item" "table" "database" "get-Tables" "tables" "with-closed" "table-name" "relation-name")}
        {Lisp-Entry "create-procedure-by-sql" () 269 11 ("connection" "execute" "length" "-" "0" "subseq" "set!" "ends-with?" "when" "tie" "marker" "let" "script-create-procedure")}
        {Lisp-Entry "get-procedures" () 277 11 ("get-output" "corelease" "self" "SQLServer-Inventory-Procedure" "put" "get-SystemObject" "not" "if" "Item" "procedure" "get-Count" "to" "1" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "database" "get-StoredProcedures" "procedures" "with-closed")}
        {Lisp-Entry "Object-Not-Existant" () 288 12 ()}
        {Lisp-Entry "get-procedure" () 292 11 ("self" "SQLServer-Inventory-Procedure" "new" "when" "Object-Not-Existant" "cotry" "if" "procedure" "Item" "dynamic" "function" "action" "let*" "database" "get-StoredProcedures" "procedures" "with-closed" "true" "error?" "error?:" "name")}
        {Lisp-Entry "create-procedure" () 305 11 ("self" "SQLServer-Inventory-Procedure" "new" "put-Name" "SQLDMO.StoredProcedure" "cocreate" "new-procedure" "let" "name")}
        {Lisp-Entry "append-procedure" () 311 11 ("get-handle" "Add" "database" "get-StoredProcedures" "procedures" "with-closed" "procedure")}
        {Lisp-Entry "remove-procedure" () 316 11 ("Remove" "database" "get-StoredProcedures" "procedures" "with-closed" "name")}
        {Lisp-Entry "restore-database" () 326 18 ("server" "SQLRestore" "parse" "put-Files" "put-Database" "SQLDMO.Restore" "cocreate" "restore" "with-closed" "backup" "database")}}}})
"SQLServer-Inventory-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Column" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Column" () 45 7 ("Inventory-Column")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "index-column?" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-default-value" () 71 11 ("get-Text" "handle" "get-DRIDefault" "default" "with-closed")}
        {Lisp-Entry "set-default-value" () 76 11 ("put-Text" "Remove" "null?" "if" "handle" "get-DRIDefault" "default" "with-closed" "value")}
        {Lisp-Entry "get-default-value-name" () 83 11 ("get-Name" "handle" "get-DRIDefault" "default" "with-closed")}
        {Lisp-Entry "set-default-value-name" () 88 11 ("put-Name" "when" "handle" "get-DRIDefault" "default" "with-closed" "value")}
        {Lisp-Entry "get-used-defined-datatype" () 94 11 ("/=" "if" "get-type" "type" "get-used-defined-type" "used-defined-type" "let")}
        {Lisp-Entry "get-used-defined-type" () 102 11 ("handle" "get-Datatype")}
        {Lisp-Entry "get-datatype" () 106 11 ("get-scale" "get-precision" "get-size" "get-type" "SQLServer-Datatype" "new-datatype")}
        {Lisp-Entry "get-type" () 110 11 ("get-Datatype" "handle" "get-PhysicalDatatype")}
        {Lisp-Entry "get-size" () 116 11 ("handle" "get-Length")}
        {Lisp-Entry "set-datatype" () 120 11 ("set-scale" "set-precision" "set-size" "handle" "put-Datatype" "get-scale" "scale" "get-precision" "precision" "get-size" "size" "get-name" "name" "let" "value")}
        {Lisp-Entry "modify-datatype" () 131 11 ("0" "AlterDataType" "SQLDMO._Column2" "handle" "coquery" "column" "with-closed" "get-size" "size" "get-name" "name" "let" "value")}
        {Lisp-Entry "set-size" () 138 11 ("handle" "put-Length" "when" "size")}
        {Lisp-Entry "get-title" () 143 11 ("handle" "get-Name")}
        {Lisp-Entry "get-length" () 147 18 ("handle" "get-Length")}
        {Lisp-Entry "get-scale" () 151 11 ("handle" "get-NumericScale")}
        {Lisp-Entry "set-scale" () 155 11 ("handle" "put-NumericScale" "when" "scale")}
        {Lisp-Entry "get-precision" () 160 11 ("handle" "get-NumericPrecision")}
        {Lisp-Entry "set-precision" () 164 11 ("handle" "put-NumericPrecision" "when" "precision")}
        {Lisp-Entry "get-nullable?" () 169 11 ("handle" "get-AllowNulls")}
        {Lisp-Entry "set-nullable?" () 173 11 ("handle" "put-AllowNulls" "value")}
        {Lisp-Entry "get-fixed?" () 177 11 ("get-IsVariableLength" "not" "get-type" "inventory" "get-system-type" "type" "with-closed")}
        {Lisp-Entry "get-ordinal-position" () 182 11 ("1" "handle" "get-ID" "-")}
        {Lisp-Entry "set-ordinal-position" () 186 11 ("value")}
        {Lisp-Entry "get-order" () 191 11 ("get-title" "parent" "order-of")}
        {Lisp-Entry "get-identity?" () 195 11 ("handle" "get-Identity")}
        {Lisp-Entry "set-identity?" () 199 11 ("handle" "put-Identity" "value")}
        {Lisp-Entry "get-identity-replication?" () 203 11 ("handle" "get-NotForRepl" "not")}
        {Lisp-Entry "set-identity-replication?" () 207 11 ("not" "handle" "put-NotForRepl" "value")}
        {Lisp-Entry "get-identity-seed" () 211 11 ("handle" "get-IdentitySeed")}
        {Lisp-Entry "set-identity-seed" () 215 11 ("handle" "put-IdentitySeed" "value")}
        {Lisp-Entry "get-identity-increment" () 219 11 ("handle" "get-IdentityIncrement")}
        {Lisp-Entry "get-row-guid-col?" () 223 11 ("handle" "get-IsRowGuidCol")}
        {Lisp-Entry "get-computed?" () 227 11 ("handle" "get-IsComputed")}
        {Lisp-Entry "get-computed-text" () 231 11 ("handle" "get-ComputedText")}
        {Lisp-Entry "get-collation" () 235 11 ("get-Collation" "SQLDMO._Column2" "handle" "coquery" "column2" "with-closed")}
        {Lisp-Entry "get-description" () 240 11 ("inventory" "get-connection" "load-value" "tie" "cmd" "parent" "table-name" "get-title" "column-name" "let*")}}}})
"SQLServer-Inventory-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Constraint.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Constraint" () 45 7 ("COM" "System" "Utilities" "Language" "Kernel" "Inventory-Constraint")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-title" () 71 11 ("handle" "get-Name")}
        {Lisp-Entry "get-text" () 75 18 ("handle" "get-Text")}
        {Lisp-Entry "set-text" () 79 18 ("handle" "put-Text" "value")}
        {Lisp-Entry "get-checked?" () 83 18 ("handle" "get-Checked")}
        {Lisp-Entry "set-checked?" () 87 18 ("handle" "put-Checked" "value")}
        {Lisp-Entry "get-exclude-replication?" () 91 18 ("handle" "get-ExcludeReplication")}
        {Lisp-Entry "set-exclude-replication?" () 95 18 ("handle" "put-ExcludeReplication" "value")}}}})
"SQLServer-Inventory-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Index.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Index" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Index" () 45 7 ("Inventory-Index")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "corelease" "SQLDMO._Index2" "coquery" "handle~self" "set!" "nextmethod" "index-handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 68 18 ("handle")}
        {Lisp-Entry "get-title" () 72 11 ("handle" "get-Name")}
        {Lisp-Entry "set-fields/orders" () 76 18 ("descending" "=" "SetIndexedColumnDESC" "order" "field" "bind" "for-each" "handle" "put-IndexedColumns" "car" "format" "field/order" "dynamic" "function" "map" "join" "string" "let" "value")}
        {Lisp-Entry "get-ignore-duplicates?" () 88 11 ("SQLDMO.SQLDMOIndex_IgnoreDupKey" "type-bit?")}
        {Lisp-Entry "get-unique?" () 92 11 ("SQLDMO.SQLDMOIndex_Unique" "type-bit?")}
        {Lisp-Entry "get-clustered?" () 96 11 ("SQLDMO.SQLDMOIndex_Clustered" "type-bit?")}
        {Lisp-Entry "get-pad-index?" () 100 11 ("SQLDMO.SQLDMOIndex_PadIndex" "type-bit?")}
        {Lisp-Entry "get-recompute-statistics?" () 104 11 ("SQLDMO.SQLDMOIndex_NoRecompute" "type-bit?" "not")}
        {Lisp-Entry "get-fields" () 108 11 ("SQLDMO._Column" "coquery" "true" "self" "inventory" "SQLServer-Inventory-Column" "new" "Item" "field" "collect" "get-Count" "to" "1" "from" "n" "for" "loop" "handle" "ListIndexedColumns" "fields" "with-closed")}
        {Lisp-Entry "order-of" () 116 21 ("ascending" "descending" "handle" "GetIndexedColumnDESC" "if" "name")}
        {Lisp-Entry "get-fill-factor" () 125 11 ("handle" "get-FillFactor")}
        {Lisp-Entry "type-bit?" () 134 11 ("handle" "get-Type" "mask-bit-set?" "bit")}
        {Lisp-Entry "set-type-bit?" () 138 11 ("get-Type" "mask-bit-set" "handle" "put-Type" "value" "bit")}}}})
"SQLServer-Inventory-Primary-Key"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Primary-Key.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Primary-Key" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Primary-Key" () 45 7 ("Inventory-Primary-Key")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-title" () 71 11 ("handle" "get-Name")}
        {Lisp-Entry "get-fields/orders" () 75 11 ("get-fields/orders" "parent" "get-primary-index" "primary-index" "with-closed")}
        {Lisp-Entry "get-clustered?" () 80 11 ("handle" "get-Clustered")}
        {Lisp-Entry "get-fill-factor" () 84 11 ("handle" "get-FillFactor")}}}})
"SQLServer-Inventory-Procedure"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Procedure.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Procedure" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Procedure" () 45 7 ("Inventory-Procedure")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-title" () 71 11 ("handle" "get-Name")}
        {Lisp-Entry "get-text" () 75 11 ("length" "-" "0" "subseq" "set!" "ends-with?" "when" "tie" "marker" "handle" "get-Text" "text" "let")}
        {Lisp-Entry "set-text" () 84 18 ("handle" "put-Text" "value")}}}})
"SQLServer-Inventory-Relation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Relation.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Relation" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Relation" () 45 7 ("Inventory-Relation")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "close" "parent" "when" "handle" "corelease")}
        {Lisp-Entry "get-title" () 70 11 ("handle" "get-Name")}
        {Lisp-Entry "get-primary-table" () 74 11 ("handle" "get-ReferencedTable" "standardize-name")}
        {Lisp-Entry "get-primary-field-names" () 78 11 ("Item" "collect" "get-Count" "to" "1" "from" "n" "for" "loop" "handle" "get-ReferencedColumns" "names" "with-closed")}
        {Lisp-Entry "get-foreign-table" () 84 11 ("parent" "get-title")}
        {Lisp-Entry "get-foreign-field-names" () 88 11 ("Item" "collect" "get-Count" "to" "1" "from" "n" "for" "loop" "handle" "get-KeyColumns" "names" "with-closed")}
        {Lisp-Entry "get-checked?" () 94 11 ("handle" "get-Checked")}
        {Lisp-Entry "get-exclude-replication?" () 98 11 ("handle" "get-ExcludeReplication")}
        {Lisp-Entry "get-update-cascade?" () 102 11 ("get-cascade?")}
        {Lisp-Entry "get-delete-cascade?" () 106 11 ("get-cascade?")}
        {Lisp-Entry "get-cascade?" () 110 11 ("false" "true" "1" "inventory" "get-connection" "load-value" "=" "if" "tie" "cmd" "get-title" "fk-name" "let*" "kind")}
        {Lisp-Entry "dbo-header" () 123 14 ()}
        {Lisp-Entry "standardize-name" () 127 11 ("-" "1" "0" "element" "=" "length" "subseq" "set!" "dbo-header" "starts-with?" "when" "name")}}}})
"SQLServer-Inventory-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Table.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Table" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Table" () 45 7 ("Inventory-Table")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-title" () 71 11 ("handle" "get-Name")}
        {Lisp-Entry "get-primary-key" () 80 18 ("self" "inventory" "SQLServer-Inventory-Primary-Key" "new" "when" "handle" "get-PrimaryKey" "key" "let")}
        {Lisp-Entry "create-primary-key" () 86 18 ("self" "inventory" "SQLServer-Inventory-Primary-Key" "new" "handle" "get-Keys" "keys" "Add" "order" "field" "bind" "field/order" "dynamic" "function" "for-each" "get-KeyColumns" "names" "with-closed" "SQLDMO.SQLDMOKey_Primary" "put-Type" "put-Name" "SQLDMO.Key" "cocreate" "primary-key" "let" "fields/orders" "name")}
        {Lisp-Entry "remove-primary-key" () 100 11 ("Remove" "handle" "get-Keys" "keys" "with-closed" "name")}
        {Lisp-Entry "get-columns" () 110 11 ("Item" "false" "self" "inventory" "SQLServer-Inventory-Column" "new" "collect" "get-Count" "to" "1" "from" "n" "for" "loop" "handle" "get-Columns" "columns" "with-closed")}
        {Lisp-Entry "get-column" () 116 11 ("Item" "false" "self" "inventory" "SQLServer-Inventory-Column" "new" "handle" "get-Columns" "columns" "with-closed" "name")}
        {Lisp-Entry "create-column" () 121 11 ("false" "self" "inventory" "SQLServer-Inventory-Column" "new" "put-Name" "SQLDMO.Column" "cocreate" "new-column" "let" "name")}
        {Lisp-Entry "append-column" () 127 11 ("get-handle" "Add" "handle" "get-Columns" "columns" "with-closed" "column")}
        {Lisp-Entry "remove-column" () 132 11 ("Remove" "handle" "get-Columns" "columns" "with-closed" "name")}
        {Lisp-Entry "get-indexes" () 142 11 ("get-output" "corelease" "self" "inventory" "SQLServer-Inventory-Index" "put" "SQLDMO.SQLDMOIndex_DRIPrimaryKey" "get-Type" "mask-bit-set?" "get-StatisticsIndex" "not" "and" "if" "Item" "index" "get-Count" "to" "1" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Indexes" "indexes" "with-closed")}
        {Lisp-Entry "get-primary-index" () 154 18 ("corelease" "self" "inventory" "SQLServer-Inventory-Index" "new" "SQLDMO.SQLDMOIndex_DRIPrimaryKey" "get-Type" "mask-bit-set?" "get-StatisticsIndex" "not" "and" "if" "Item" "index" "let" "get-Count" "to" "1" "from" "n" "for" "loop" "return" "lambda" "call/ec" "handle" "get-Indexes" "indexes" "with-closed")}
        {Lisp-Entry "get-index" () 167 11 ("Item" "self" "inventory" "SQLServer-Inventory-Index" "new" "handle" "get-Indexes" "indexes" "with-closed" "name")}
        {Lisp-Entry "create-index" () 172 11 ("self" "inventory" "SQLServer-Inventory-Index" "new" "put-Name" "SQLDMO.Index" "cocreate" "new-index" "let" "name")}
        {Lisp-Entry "append-index" () 178 11 ("get-handle" "Add" "handle" "get-Indexes" "indexes" "with-closed" "index")}
        {Lisp-Entry "remove-index" () 183 11 ("Remove" "handle" "get-Indexes" "indexes" "with-closed" "name")}
        {Lisp-Entry "get-triggers" () 193 11 ("get-output" "corelease" "self" "inventory" "SQLServer-Inventory-Trigger" "put" "get-SystemObject" "not" "if" "Item" "trigger" "get-Count" "to" "1" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Triggers" "triggers" "with-closed")}
        {Lisp-Entry "Object-Not-Existant" () 204 12 ()}
        {Lisp-Entry "get-trigger" () 208 11 ("self" "inventory" "SQLServer-Inventory-Trigger" "new" "when" "Object-Not-Existant" "cotry" "if" "trigger" "Item" "dynamic" "function" "action" "let*" "handle" "get-Triggers" "triggers" "with-closed" "true" "error?" "error?:" "name")}
        {Lisp-Entry "create-trigger" () 221 11 ("self" "inventory" "SQLServer-Inventory-Trigger" "new" "put-Name" "SQLDMO.Trigger" "cocreate" "new-trigger" "let" "name")}
        {Lisp-Entry "append-trigger" () 227 11 ("get-handle" "Add" "handle" "get-Triggers" "triggers" "with-closed" "trigger")}
        {Lisp-Entry "remove-trigger" () 232 11 ("Remove" "handle" "get-Triggers" "triggers" "with-closed" "trigger-name")}
        {Lisp-Entry "get-table-relations" () 242 21 ("get-output" "corelease" "self" "inventory" "SQLServer-Inventory-Relation" "put" "SQLDMO.SQLDMOKey_Foreign" "get-Type" "=" "if" "Item" "key" "get-Count" "to" "1" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Keys" "keys" "with-closed")}
        {Lisp-Entry "get-constraints" () 258 11 ("get-output" "self" "inventory" "SQLServer-Inventory-Constraint" "put" "Item" "check" "get-Count" "to" "1" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Checks" "checks" "with-closed")}
        {Lisp-Entry "get-constraint" () 267 11 ("self" "inventory" "SQLServer-Inventory-Constraint" "new" "when" "Object-Not-Existant" "cotry" "if" "constraint" "Item" "dynamic" "function" "action" "let*" "handle" "get-Checks" "constraints" "with-closed" "true" "error?" "error?:" "name")}
        {Lisp-Entry "create-constraint" () 280 11 ("self" "inventory" "SQLServer-Inventory-Constraint" "new" "put-Name" "SQLDMO.Check" "cocreate" "new-constraint" "let" "name")}
        {Lisp-Entry "append-constraint" () 286 11 ("get-handle" "Add" "handle" "get-Checks" "constraints" "with-closed" "constraint")}
        {Lisp-Entry "remove-constraint" () 291 11 ("Remove" "handle" "get-Checks" "constraints" "with-closed" "constraint-name")}
        {Lisp-Entry "get-text-file-group" () 301 11 ("handle" "get-TextFileGroup")}
        {Lisp-Entry "set-text-file-group" () 305 11 ("handle" "put-TextFileGroup" "value")}
        {Lisp-Entry "get-file-group" () 309 11 ("handle" "get-FileGroup")}
        {Lisp-Entry "set-file-group" () 313 11 ("handle" "put-FileGroup" "value")}
        {Lisp-Entry "get-owner" () 317 11 ("handle" "get-Owner")}
        {Lisp-Entry "set-owner" () 321 11 ("handle" "put-Owner" "value")}
        {Lisp-Entry "get-description" () 325 11 ("inventory" "get-connection" "load-value" "tie" "cmd" "get-title" "table-name" "let*")}}}})
"SQLServer-Inventory-Trigger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Trigger.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Trigger" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Trigger" () 45 7 ("Inventory-Trigger")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-title" () 71 11 ("handle" "get-Name")}
        {Lisp-Entry "get-text" () 75 11 ("handle" "get-Text")}
        {Lisp-Entry "set-text" () 79 18 ("handle" "put-Text" "value")}}}})
"SQLServer-Inventory-Updater"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-Updater.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-Updater" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-Updater" () 45 7 ("Inventory-Updater")}}})
"SQLServer-Inventory-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Inventory-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Inventory-View" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Inventory-View" () 46 7 ("Inventory-View")
        {Lisp-Entry "handle" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 68 18 ("handle")}
        {Lisp-Entry "get-title" () 72 11 ("handle" "get-Name")}
        {Lisp-Entry "get-text" () 76 11 ("handle" "get-Text")}
        {Lisp-Entry "set-text" () 80 18 ("handle" "put-Text" "value")}}}})
"SQLServer-Primary-Key-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Primary-Key-Constraint.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Primary-Key-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Primary-Key-Constraint" () 45 7 ("Integrity-Constraint")
        {Lisp-Entry "register-constraints" () 53 16 ("Design-Primary-Key" "self" "new" "register-constraint" "manager")}
        {Lisp-Entry "validate" () 63 11 ("get-fields/orders" "fields/orders" "property:" "message:" "Integrity-Violation" "new" "add-violation" "format" "message" "get-nullable?" "find-visible-column" "column" "let" "order" "field" "bind" "field/order" "dynamic" "function" "for-each" "SQLServer-Design-Schema" "is?" "when" "get-schema" "schema" "Design-Architecture" "find-ascendant" "get-table" "table" "let*" "manager" "context" "client" "architecture" "primary-key")}}}})
"SQLServer-Primary-Key-Name-Global-Unicity-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Primary-Key-Name-Global-Unicity-Constraint.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Primary-Key-Name-Global-Unicity-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Primary-Key-Name-Global-Unicity-Constraint" () 45 7 ("Integrity-Constraint")
        {Lisp-Entry "register-constraints" () 53 16 ("Design-Primary-Key" "self" "new" "register-constraint" "manager")}
        {Lisp-Entry "validate" () 63 11 ("message:" "Integrity-Violation" "new" "add-violation" "false" "when" "manager" "context" "client" "architecture" "primary-key")}}}})
"SQLServer-Procedure-Validity-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Procedure-Validity-Constraint.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Procedure-Validity-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Procedure-Validity-Constraint" () 45 7 ("Integrity-Constraint")
        {Lisp-Entry "register-constraints" () 53 16 ("Design-Procedure" "self" "new" "register-constraint" "manager")}
        {Lisp-Entry "ends-with-go?" () 63 11 ("+" "-" "subseq" "ci=" "1" ">=" "and" "position" "return:" "true" "reversed?:" "whitespace?" "not" "c" "dynamic" "function" "find-if" "last-non-white" "let" "text")}
        {Lisp-Entry "validate" () 70 11 ("stop-descent" "property:" "message:" "Integrity-Violation" "new" "add-violation" "ends-with-go?" "SQLServer-Design-Schema" "is?" "and" "when" "get-schema" "schema" "Design-Architecture" "find-ascendant" "get-text" "text" "get-name" "name" "let*" "manager" "context" "client" "architecture" "procedure")}}}})
"SQLServer-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Provider.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Provider" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Provider" () 47 7 ("Provider")
        {Lisp-Entry "external-name" () 50 11 ("sqlserver")}
        {Lisp-Entry "get-datatype" () 59 11 ("SQLServer-Datatype")}
        {Lisp-Entry "supports-multirequests?" () 68 11 ("true")}
        {Lisp-Entry "format-variable" () 77 11 ("format" "variable")}
        {Lisp-Entry "present" () 86 11 ()}
        {Lisp-Entry "get-server-names" () 95 18 ("Item" "collect" "get-Count" "to" "1" "from" "n" "for" "loop" "ListAvailableSQLServers" "essay" "name-list" "message-box" "begin" "null?" "if" "false" "error?:" "SQLDMO.Application" "cocreate" "application" "with-closed" "dynamic" "function" ":wait" "with-cursor")}
        {Lisp-Entry "server-names-for-combo" () 108 18 ("equal?" "test:" "remove" "map" "list" "cons" "get-server-names" "names" "let")}
        {Lisp-Entry "server-names-choices-updater" () 113 18 ("true" "server-names-for-combo" "set-choices" "combo")}
        {Lisp-Entry "browser-class" () 123 11 ("SQLServer-Widget")}
        {Lisp-Entry "new-updater" () 132 11 ("SQLServer-Inventory-Updater" "new" "connection")}}}})
"SQLServer-Server-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Server-Browser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Server-Browser" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Server-Browser" () 46 7 ("Combo-Box")
        {Lisp-Entry "install" () 49 11 ("update-server-names" "nextmethod" "rest")}
        {Lisp-Entry "update-server-names" () 59 11 ("set-entry" "sqlserver" "Provider" "get-provider" "server-names-choices-updater" "" "set-choices-updater")}}}})
"SQLServer-Server-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Server-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Server-Row" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Server-Row" () 46 7 ("Combo-Row")
        {Lisp-Entry "update-server-names" () 49 11 ("true" "sqlserver" "Provider" "get-provider" "server-names-choices-updater" "" "set-choices-updater")}
        {Lisp-Entry "edit" () 54 11 ("self" "get-tree" "expand" "edit-in-cell")}
        {Lisp-Entry "edit-in-cell" () 59 11 ("update-server-names" "nextmethod")}
        {Lisp-Entry "close-editor" () 64 11 ("self" "get-tree" "collapse" "nextmethod")}}}})
"SQLServer-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Text-View" () 47 7 ("SQL-Text-View")
        {Lisp-Entry "frame-workspaces" () 55 11 ("text")}
        {Lisp-Entry "TransactSQL-Keywords" () 64 12 ()}
        {Lisp-Entry "get-keywords" () 82 11 ("TransactSQL-Keywords" "nextmethod" "append")}
        {Lisp-Entry "SQLServer-Syntax-Targets" () 92 14 ()}
        {Lisp-Entry "SQLServer-Syntax-Automata" () 95 14 ()}
        {Lisp-Entry "syntax-targets" () 99 11 ("compute-syntax-targets" "set!" "SQLServer-Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 105 11 ("compute-syntax-automata" "set!" "SQLServer-Syntax-Automata" "unless")}}}})
"SQLServer-Trigger-Name-Global-Unicity-Constraint"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Trigger-Name-Global-Unicity-Constraint.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Trigger-Name-Global-Unicity-Constraint" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Trigger-Name-Global-Unicity-Constraint" () 45 7 ("Integrity-Constraint")
        {Lisp-Entry "register-constraints" () 53 16 ("Design-Trigger" "self" "new" "register-constraint" "manager")}
        {Lisp-Entry "validate" () 63 11 ("message:" "Integrity-Violation" "new" "add-violation" "false" "when" "manager" "context" "client" "architecture" "trigger")}}}})
"SQLServer-Widget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sqlserver" "SQLServer-Widget.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sqlserver.SQLServer-Widget" () 37 9 ("jazz")
      {Lisp-Entry "SQLServer-Widget" () 48 7 ("database" "database-border" "database-label" "password" "password-border" "password-label" "on-return-press" "return-press-handler:" "username" "fill" "layout-type:" "vscroll?:" "hscroll?:" "username-border" "username-label" "top-padding:" "2" "left-padding:" "body" "content" "scroller" "on-server-change" "form:" "Event-Handler" "content-change-handler:" "server" "style:" "edge" "border-type:" "1" "server-border" "3" "0" "Point" "position:" "title:" "server-label" "name:" "Dimension" "size:" "Data-Source-Widget")
        {Lisp-Entry "install" () 77 11 ("database-choices-updater" "database" "locate" "set-choices-updater" "nextmethod" "rest")}
        {Lisp-Entry "database-choices-updater" () 82 11 ("true" "get-data-source" "set-data-source" "combo-box")}
        {Lisp-Entry "get-data-source" () 92 11 ("database" "database:" "password" "password:" "username" "get-string-content" "username:" "server" "locate" "get-entry" ":server" "SQLServer-Data-Source" "new")}
        {Lisp-Entry "set-data-source" () 100 11 ("get-database" "database" "get-password" "password" "get-username" "username" "set-string-content" "get-server" "server" "locate" "set-entry" "source")}
        {Lisp-Entry "setup-username/password-mode" () 107 11 ("select-all" "username" "acquire-focus" "database" "false" "server" "locate" "set-enabled?")}
        {Lisp-Entry "set-enabled?" () 119 11 ("invalidate-view" "database" "password" "username" "server" "locate" "set-enabled?" "enabled?" "set!" "flag")}
        {Lisp-Entry "get-tab-stops" () 133 11 ("database" "password" "username" "server" "locate" "list")}
        {Lisp-Entry "set-default-focus" () 141 18 ("server" "locate" "set-focus")}
        {Lisp-Entry "on-server-change" () 145 11 ("database" "locate" "set-data-source" "evt")}
        {Lisp-Entry "on-return-press" () 149 11 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "validate-content" () 159 11 ("database" "server" "locate" "validate-content")}}}})
"SXML"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "transform" "SXML.fusion"} {Time 128363203480000000L}
    {Lisp-Entry "SXML" () 37 9 ("jazz")}})
"Sample"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "files" "Scheme" "Sample.scm"} {Time 128366793860000000L}
    {Lisp-Entry "f" () 7 9 ("a")}
    {Lisp-Entry "v" () 12 8 ("x" "y" "h" "list")}
    {Lisp-Entry "g" () 15 9 ("e" "b" "a" "x")}
    {Lisp-Entry "h" () 22 11 ("k")}
    {Lisp-Entry "i" () 25 11 ()
      {Lisp-Entry "j" () 27 13 ()
        {Lisp-Entry "k" () 29 15 ("e" "d" "c")}}
      {Lisp-Entry "l" () 32 13 ()}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "files" "Jazz" "Sample.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "?" () 8 4 ()}
    {Lisp-Entry "Sample" () 11 7 ("e" "Object")
      {Lisp-Entry "I" () 19 13 ()
        {Lisp-Entry "i" () 22 37 ()}}
      {Lisp-Entry "C" () 25 9 ("I" "Object")
        {Lisp-Entry "initialize" () 28 13 ("v" "nextmethod")}
        {Lisp-Entry "i" () 33 13 ("v")}}
      {Lisp-Entry "cls" () 37 16 ("v")}
      {Lisp-Entry "s" () 41 16 ("v")}
      {Lisp-Entry "p" () 44 22 ("generate" "accessors" "v")}
      {Lisp-Entry "m" () 51 10 ("v" "form")}
      {Lisp-Entry "y" () 55 11 ("v" "expr")}
      {Lisp-Entry "d" () 59 28 ("v" "function")}
      {Lisp-Entry "f" () 64 25 ("v")}
      {Lisp-Entry "g" () 68 19 ("v")}
      {Lisp-Entry "h" () 72 31 ("v")}
      {Lisp-Entry "c" () 76 12 ("v" "function")}
      {Lisp-Entry "E" () 81 15 ("B" "A")}
      {Lisp-Entry "S" () 86 13 ("x" "int")}
      {Lisp-Entry "bool" () 90 17 ()}
      {Lisp-Entry "%i" () 93 24 ()}
      {Lisp-Entry "literals" () 101 11 ("3" "Point" "x:" ":x" "x" "c" "b" "a" "5L" "2")}
      {Lisp-Entry "comments" () 122 11 ("x" "v")}
      {Lisp-Entry "functional-syntax" () 127 11 ("v")}
      {Lisp-Entry "object-syntax" () 132 11 ("v" "x" "self")}
      {Lisp-Entry "specifier-syntax" () 137 11 ("v" "y" "let" "x")}
      {Lisp-Entry "binding-specials" () 147 11 ("receive" "bind-keywords" "bind-optionals" "bind" "with-closed" "let*" "v" "x" "let")}
      {Lisp-Entry "functional-specials" () 159 11 ("v" "x" "function")}
      {Lisp-Entry "quotation-specials" () 164 11 ("quote" "x")}
      {Lisp-Entry "logical-specials" () 169 11 ("or" "v" "and")}
      {Lisp-Entry "control-specials" () 174 11 ("while" "v" "if")}
      {Lisp-Entry "assignment-specials" () 182 11 ("v" "set!")}
      {Lisp-Entry "other-specials" () 186 11 ("cast" "v" "synchronize" "other-specials" "name:" "true" ":on?" "profile" "false" ":frame?" "optimize")}
      {Lisp-Entry "binding-macros" () 199 11 ("with" "v" "x" "letrec")}
      {Lisp-Entry "quotation-macros" () 205 11 ("unquote-splicing" "unquote" "quasiquote" "v" "x")}
      {Lisp-Entry "logical-macros" () 210 11 ("either" "v" "essay")}
      {Lisp-Entry "control-macros" () 215 11 ("unwind-protect" "catch" "typecase" "ecase" "x" "case" "else" "cond" "unless" "when" "prog1" "v" "begin")}
      {Lisp-Entry "assertion-macros" () 242 11 ("error?" "assert-type" "v" "assert")}
      {Lisp-Entry "iteration-macros" () 248 11 ("do" "collect" "by" "to" "v" "from" "x" "for" "loop")}
      {Lisp-Entry "assignment-macros" () 254 11 ("decrease!" "v" "increase!")}
      {Lisp-Entry "runtime-errors" () 264 16 ("x" "Object" "new" "obj" "let")}}})
"Save-Environment-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "process" "Save-Environment-Listener.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.process.Save-Environment-Listener" () 37 9 ("jazz")
      {Lisp-Entry "Save-Environment-Listener" () 46 11 ("Listener")
        {Lisp-Entry "save-environment" () 49 35 ()}}}})
"SaveFile-Dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "SaveFile-Dialog.fusion"} {Time 128360915060000000L}
    {Lisp-Entry "jazz.ui.dialog.SaveFile-Dialog" () 37 9 ("jazz")
      {Lisp-Entry "SaveFile-Dialog" () 46 7 ("Dialog")
        {Lisp-Entry "get-modal" () 50 16 ("error" "throw-cancel" "=" "CommDlgExtendedError" "code" "tokenise" "File" "anchorize" "adjust-string" "begin" "GetSaveFileName" "get-dialog-proc" "lpfnHook" "lCustData" "either" "lpstrDefExt" "OFN_OVERWRITEPROMPT" "OFN_ENABLESIZING" "OFN_FILEMUSTEXIST" "OFN_ENABLEHOOK" "OFN_EXPLORER" "bit-or" "Flags" "get-current-directory" "parse" "lpstrInitialDir" "nMaxFile" "lpstrFile" "extensions-filter" "lpstrFilter" "NULL" "get-handle" "get-toplevel" "toplevel" "hwndOwner" "size-of" "lStructSize" "set" "copy-into!" "0" "set-element!" "null?" "if" "MAX_PATH" "make-string" "filename" "OPENFILENAME" "new" "r" "let" "create-directories" "when" "close-all-popups" "anchors" "anchors:" "extensions" "extensions:" "default-extension" "default-extension:" "initial-filename" "initial-filename:" "directory" "directory:")}}}})
"Scaled-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "showcase" "Scaled-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.showcase.Scaled-View" () 37 9 ("jazz")
      {Lisp-Entry "Scaled-View" () 44 7 ("View")
        {Lisp-Entry "client" () 47 12 ("set-client" "get-client")}
        {Lisp-Entry "print" () 50 11 ("size" "position" "background" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-client" () 61 18 ("client")}
        {Lisp-Entry "set-client" () 65 18 ("client" "set!" "value")}
        {Lisp-Entry "draw-background" () 74 11 ("context" "dc")}
        {Lisp-Entry "draw" () 78 11 ("get-v" "get-h" "draw-text" "get-size" "Dimension" "new" "center" "get-text-width" "width" "name" "->string" "string" "let*" "Label-Bold" "name:" "Font" "set-font" "fill-rect" "get-bounds" "bounds" "with" "background" "when" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "Info" () 94 26 ()}
        {Lisp-Entry "register-info" () 98 18 ("get-name" "background" "essay" "list" "cons" "Info" "set!" "when" "new-sc?" "new-sc" "clp" "vor" "wor")}
        {Lisp-Entry "mouse-down" () 108 11 ("background" "debug" "pos")}}}})
"Scanner"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Scanner.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.iterator.Scanner" () 37 9 ("jazz")
      {Lisp-Entry "Scanner" () 44 7 ("Iterator")
        {Lisp-Entry "procedure" () 47 8 ()}
        {Lisp-Entry "current" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("current" "procedure" "set!" "nextmethod" "object" "proc")}
        {Lisp-Entry "peek" () 57 11 ("current" "procedure")}
        {Lisp-Entry "next" () 61 11 ("peek" "current" "set!")}
        {Lisp-Entry "done?" () 65 11 ("current" "null?")}}}})
"Schema-Archive"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "archive" "Schema-Archive.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.archive.Schema-Archive" () 37 9 ("jazz")
      {Lisp-Entry "Schema-Archive" () 45 7 ("Entity" "Object")
        {Lisp-Entry "version" () 48 8 ()}
        {Lisp-Entry "properties" () 49 8 ()}
        {Lisp-Entry "schemas" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("schemas~self" "properties~self" "version~self" "set!" "nextmethod" "schemas" "properties" "version")}
        {Lisp-Entry "print" () 60 11 ("format-plural" "format" "schemas" "length" "count" "let" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-version" () 72 18 ("version")}
        {Lisp-Entry "get-properties" () 76 18 ("properties")}
        {Lisp-Entry "get-property" () 80 18 ("not-found:" "properties" "getf" "not-found" "property")}
        {Lisp-Entry "set-property" () 84 18 ("cons" "set!" "setf" "properties" "getf" "if" "value" "property")}
        {Lisp-Entry "get-schemas" () 90 18 ("schemas")}
        {Lisp-Entry "get-schema" () 94 18 ("error" "find-schema" "either" "true" "error?" "error?:" "name")}
        {Lisp-Entry "find-schema" () 99 18 ("schemas" "name:" "get-property" "=" "schema" "dynamic" "function" "find-if" "name")}
        {Lisp-Entry "schema-properties" () 105 23 (":provider" "name:" "get-property" "list" "schema")}
        {Lisp-Entry "add-schema" () 109 18 ("schema-properties" "get-property" ":schemas" "set-property" "list" "append!" "schemas" "set!" "schema")}
        {Lisp-Entry "remove-schema" () 114 18 ("name:" "get-property" "assoc" ":schemas" "set-property" "remove!" "schemas" "set!" "schema")}
        {Lisp-Entry "rename-schema" () 119 18 ("set-car!" "set-property" ":schemas" "name:" "get-property" "assoc" "pair" "let" "name" "schema")}
        {Lisp-Entry "read-header" () 130 23 ("read-properties" "read-version" "values" "File-Reader" "new" "reader" "with-closed" "moniker")}
        {Lisp-Entry "read-version" () 136 16 ("error" "Version" "is?" ":version" "=" "and" "if" "version" "read" "name" "let" "reader")}
        {Lisp-Entry "read-properties" () 144 16 ("error" "pair?" "properties:" "=" "and" "if" "properties" "read" "name" "let" "reader")}
        {Lisp-Entry "new-archive" () 157 23 ("MetaModeler" "archive-version" "self" "new")}
        {Lisp-Entry "load-archive" () 167 23 (":schemas" "properties:" ":version" "getf" "self" "eof-object?" "read-until" "content" "let" "File-Reader" "new" "reader" "with-closed" "file")}
        {Lisp-Entry "save-archive" () 181 18 ("schemas" "output-schemas" "properties" "output-properties" "version" "output-version" "output-header" "File-Printer" "new" "printer" "with-closed" "file")}
        {Lisp-Entry "output-version" () 189 11 ("format" "printer" "version")}
        {Lisp-Entry "output-properties" () 193 11 ("null?" "if" "format" "printer" "properties")}
        {Lisp-Entry "output-schemas" () 200 11 ("output-schema" "schema" "dynamic" "function" "for-each" "format" "printer" "schemas")}
        {Lisp-Entry "output-schema" () 209 11 ("print-schema" "name:" "get-property" "output-section" "printer" "schema")}
        {Lisp-Entry "get-factory" () 219 11 ()}
        {Lisp-Entry "get-factories" () 223 11 ()}
        {Lisp-Entry "get-presentation" () 227 11 ()}
        {Lisp-Entry "set-presentation" () 231 11 ("presentation" "controller")}
        {Lisp-Entry "can-cut-entity?" () 235 11 ("false")}
        {Lisp-Entry "can-copy-entity?" () 239 11 ("false")}
        {Lisp-Entry "can-paste-entity?" () 243 11 ("false")}
        {Lisp-Entry "determine-paster" () 247 11 ("rest")}
        {Lisp-Entry "can-rename-entity?" () 251 11 ("false")}
        {Lisp-Entry "can-delete-entity?" () 255 11 ("false")}
        {Lisp-Entry "can-move-entity?" () 259 11 ("false")}
        {Lisp-Entry "can-view-properties?" () 263 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 267 11 ()}}}})
"Schema-Browser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "view" "Schema-Browser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.view.Schema-Browser" () 37 9 ("jazz")
      {Lisp-Entry "Schema-Browser" () 49 7 ("on-return-press" "return-press-handler:" "1" "paragraph-spacing:" "2" "top-padding:" "left-padding:" "show-unfocused-selection?:" "accepts-returns?:" "selectable?:" "editable?:" "text" "vscroll?:" "hscroll?:" "center" "scroller" "on-browse" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "browse" "label" "0" "4" "Medium" "Color" "background:" "flow" "north" "location:" "top" "border" "content" "name:" "fill" "layout-type:" "entry" "style:" "edge" "border-type:" "Dimension" "size:" "Border-View")
        {Lisp-Entry "empty-text" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "source" () 55 8 ()}
        {Lisp-Entry "on-browse" () 75 11 ("get-source" ":source" "Schema-Chooser" "get-modal" "set-source" "evt")}
        {Lisp-Entry "on-return-press" () 79 11 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "get-text" () 89 18 ("text" "locate")}
        {Lisp-Entry "inner?" () 98 11 ("children" "memq?" "view")}
        {Lisp-Entry "draw-children" () 107 11 ("-" "line-to" "2" "move-to" "Outline-Border" "name:" "Pen" "set-pen" "get-width" "width" "let" "nextmethod" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "get-schema" () 121 18 ("get-data-schema" "when" "get-source" "source" "let" "reporter" "reporter:")}
        {Lisp-Entry "get-source" () 132 18 ("source")}
        {Lisp-Entry "set-source" () 136 18 ("source-changed" "present-source" "get-text" "set-text" "source" "set!" "source-changing" "value")}
        {Lisp-Entry "present-source" () 143 11 ("present-detailed" "when" "source")}
        {Lisp-Entry "source-changing" () 148 29 ("source")}
        {Lisp-Entry "source-changed" () 152 29 ("true" "reload" "locate" "set-enabled?" "source")}}
      {Lisp-Entry "Schema-Text-View" () 161 7 ("Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Plain-Formatted-Text-View")
        {Lisp-Entry "get-scroll-context" () 168 11 ("0" "cons")}
        {Lisp-Entry "draw-children" () 172 11 ("nextmethod" "draw-empty-schema" "text-empty?" "if" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "Background-Font" () 178 14 ("point-size:" "font-name:" "Font")}
        {Lisp-Entry "draw-empty-schema" () 182 11 ("true" "get-v" "get-h" "draw-text" "Dark" "name:" "Color" "set-text-color" "get-display-size" "center" "pos" "get-text-extent" "extent" "empty-text" "either" "localize" "title" "let*" "Background-Font" "set-font" "dc")}}}})
"Schema-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "view" "Schema-Chooser.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.view.Schema-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Schema-Chooser" () 48 7 ("Chooser")}}})
"Schema-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "source" "Schema-Source.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.schema.source.Schema-Source" () 37 9 ("jazz")
      {Lisp-Entry "Schema-Source" () 45 11 ()
        {Lisp-Entry "present" () 48 35 ()}
        {Lisp-Entry "present-detailed" () 49 35 ()}
        {Lisp-Entry "get-data-schema" () 50 35 ("rest")}}}})
"Scheme-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Scheme-Explorer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.text.Scheme-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "Scheme-Explorer" () 45 7 ("Lisp-Explorer")
        {Lisp-Entry "Modifiers" () 48 14 ()}
        {Lisp-Entry "get-modifiers" () 52 11 ("Modifiers")}
        {Lisp-Entry "Scheme-Toplevels" () 61 14 ("jazz.define-syntax" "jazz.define-macro" "jazz.define" "define-macro" "define")}
        {Lisp-Entry "Gambit-Toplevels" () 65 14 ("define-library-type-of-exception" "define-library-type" "define-runtime-syntax" "define-runtime-macro" "define-type-of-port" "define-type" "define-fail-check-type" "define-check-type" "define-prim" "##define-macro")}
        {Lisp-Entry "definition-name?" () 78 11 ("Gambit-Toplevels" "Scheme-Toplevels" "memq?" "or" "name")}
        {Lisp-Entry "walk-declaration" () 88 11 ("exit-list" "walk-unknown" "else" "walk-native" "native" "walk-type" "c-define-type" "walk-define-class" "jazz.define-class" "jazz.define-class-syntax" "walk-define-macro" "syntax" "macro" "define-runtime-syntax" "define-runtime-macro" "##define-macro" "jazz.define-special" "jazz.define-syntax" "jazz.define-macro" "define-syntax" "define-macro" "walk-define-generic/specific" "jazz.define-specific" "jazz.define-generic" "walk-define" "define-type-of-port" "define-type" "define-fail-check-type" "define-check-type" "define-library-type-of-exception" "define-library-type" "define-prim" "jazz.define-remote" "jazz.define" "define" "walk-import" "export" "import" "require" "walk-module" "module" "library" "walk-cond-expand" "cond-expand" "walk-declarations" "begin" "case" "find-marked-symbol" "symbol" "and" "true" "kind" "code" "start" "forward-expr" "not" "if" "end" "get-row" "=" "null?" "or" "when" "enter-list" "list?" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-cond-expand" () 147 11 ("exit-list" "walk-declarations" "feature" "code" "end" "start" "symbol" "get-kind" "=" "when" "forward-expr" "true" "set!" "if" "enter-list" "enter?" "not" "while" "false" "done?" "let" "walk-expressions?" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-module" () 160 11 ("walk-declarations" "false" "get-marked" "set!" "get-row" "null?" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-import" () 169 11 ("end" "start" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define" () 173 11 ("walk-declarations" "exit-list" "walk-parameters" "false" "get-marked" "set!" "get-row" "null?" "or" "symbol" "kind" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "=" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-generic/specific" () 191 11 ("walk-declarations" "walk-parameters" "exit-list" "false" "list" "set!" "typename" "get-marked" "name" "get-end" "get-start" "get-row" "null?" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "enter-list" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-macro" () 213 11 ("walk-declarations" "exit-list" "code" "walk-expressions" "false" "get-marked" "set!" "get-row" "null?" "or" "symbol" "kind" "forward-expr" "and" "enter-list" "when" "0" "char-forward" "=" "list?" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-define-class" () 231 11 ("walk-expressions" "false" "get-marked" "set!" "get-row" "null?" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-native" () 242 11 ("false" "get-marked" "set!" "get-row" "not" "or" "symbol" "kind" "=" "forward-expr" "and" "when" "forward-whites" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-type" () 251 11 ("walk-expressions" "false" "get-marked" "set!" "symbol" "kind" "=" "forward-expr" "and" "when" "end" "start" "entry" "let" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}
        {Lisp-Entry "walk-unknown" () 261 11 ("walk-expressions" "true" "code" "walk-expression" "when" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context")}}}})
"Scheme-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "parser" "Scheme-Parser.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog.parser.Scheme-Parser" () 37 9 ("jazz")
      {Lisp-Entry "Scheme-Parser" () 45 7 ("Lisp-Parser")
        {Lisp-Entry "explorer-class" () 48 11 ("Scheme-Explorer" "file")}}}})
"Scheme-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Scheme-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Scheme-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Scheme-Tester" () 45 7 ("Tester")}}})
"Scheme-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Scheme-Text-Actions.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.jazz.text.Scheme-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Scheme-Text-Actions" () 47 7 ("Return" ":control" "Shortcut" "shortcut:" "on-evaluate" ":focus" "Event-Handler" "action-handler:" "evaluate" "name:" "Actions")}}})
"Scheme-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Scheme-Text-Preferences.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.text.Scheme-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Scheme-Text-Preferences" () 49 7 ("completions:" "Dark-Orange" "feature-color:" "quotation-color:" "named-string-color:" "string-color:" "boolean-color:" "number-color:" "specifier-color:" "Dark-Purple" "tag-color:" "Ochre" "char-color:" "keyword-color:" "Dark-Green" "declaration-color:" "Dark-Blue" "declaration-keyword-color:" "Text-Gray" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Lisp-Text-Preferences")
        {Lisp-Entry "get-categorized-properties" () 89 11 ("translate-keys?" "keyword-color" "declaration-color" "expr-comment-color" "comment-color" "title-color" "completions")}
        {Lisp-Entry "get-row-instance" () 94 11 ("nextmethod" "else" "Boolean-Row" "translate-keys?" "Completion-List-Row" "completions" "Color-Row" "new" "keyword-color" "declaration-color" "expr-comment-color" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Scheme-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "text" "Scheme-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.text.Scheme-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Scheme-Text-View" () 49 7 ("tooltip?:" "WinUser" "WinDef" "System" "Utilities" "Development" "Lisp-Text-View")
        {Lisp-Entry "install" () 56 11 ("Red" "Color" "frame:" "Reference" "get-feature-color" "Feature" "get-quotation-color" "Quotation" "get-named-string-color" "Named-String" "get-delimited-string-color" "Delimited-String" "get-string-color" "String" "get-boolean-color" "Boolean" "get-char-color" "Char" "get-specifier-color" "Specifier" "get-tag-color" "Tag" "get-keyword-color" "Keyword" "get-declaration-color" "Declaration" "get-declaration-keyword-color" "Declaration-Keyword" "get-expr-comment-color" "Expr-Comment" "get-comment-color" "Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 78 16 ("scheme-text" "rest")}
        {Lisp-Entry "default-extension" () 82 11 ()}
        {Lisp-Entry "extensions" () 86 11 ()}
        {Lisp-Entry "focus-actions" () 95 11 ("nextmethod" "scheme-text" "find-actions" "cons")}
        {Lisp-Entry "get-context-menu" () 105 11 ("Scheme-Text-Menu" "new")}
        {Lisp-Entry "default-preferences" () 114 14 ("completions:" "Dark-Blue" "keyword-color:" "Dark-Green" "declaration-color:" "Dark-Orange" "expr-comment-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "form>>")}
        {Lisp-Entry "preferences" () 119 11 ("scheme-text" "documents" "get-preferences")}
        {Lisp-Entry "declaration-style" () 123 11 ("Declaration" "documented?")}
        {Lisp-Entry "Scheme-Specials" () 132 12 ("%%when" "jazz.define-syntax" "jazz.define-macro" "jazz.define" "jazz.assert" "receive" "prog1" "parameterize" "module" "library" "letrec" "let*" "let" "lambda" "if" "2" "do" "define-macro" "define" "1" "case" "call/cc" "0" "begin")}
        {Lisp-Entry "Gambit-Specials" () 155 12 ("##define-macro" "define-type" "define-runtime-syntax" "define-runtime-macro" "define-prim" "define-library-type-of-exception" "define-fail-check-type" "2" "define-check-type" "1" "c-lambda")}
        {Lisp-Entry "Chicken-Specials" () 166 12 ("1" "##core#lambda")}
        {Lisp-Entry "Specials" () 170 12 ("Chicken-Specials" "Gambit-Specials" "Scheme-Specials" "append")}
        {Lisp-Entry "get-specials" () 177 11 ("Specials")}
        {Lisp-Entry "on-evaluate" () 186 11 ("evaluate-forms" "read-text-forms" "forms" "sleep" ":wait" "with-cursor" "when" "current-definition-range" "range" "let" "dynamic" "function" "with-safe-explore" "evt")}
        {Lisp-Entry "evaluate-forms" () 199 11 ("either" "name" "user-message" "false" "eval-commands" "evaluation-break" ":reader" "->string" "commands" "form-name" "form" "dynamic" "function" "map" "names" "self" "explorer-class" "new" "expl" "get-debugger-console-text" "console-text" "let" "forms" "range")}
        {Lisp-Entry "need-definition?" () 217 11 ("false")}
        {Lisp-Entry "explorer-class" () 226 11 ("Scheme-Explorer")}}
      {Lisp-Entry "Scheme-Text-Menu" () 235 7 ("recolorize-syntax" "update-catalog" "edit-references" "code-text" "edit-definition" "jazz-text" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "evaluate" "name:" "Context-Menu")}}})
"Screen-DC"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Screen-DC.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.graphic.Screen-DC" () 37 9 ("jazz")
      {Lisp-Entry "Screen-DC" () 45 7 ("DC")
        {Lisp-Entry "initialize" () 48 11 ("destroy-mandatory" "CreateDC" "hdc" "set!" "NULL" "nextmethod")}
        {Lisp-Entry "destroy" () 54 11 ("nextmethod" "hdc" "DeleteDC")}}}})
"Scrollbar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Scrollbar.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Scrollbar" () 38 9 ("jazz")
      {Lisp-Entry "Scrollbar" () 48 7 ("View")
        {Lisp-Entry "autorepeat-delay" () 51 14 ()}
        {Lisp-Entry "autorepeat-period" () 54 14 ()}
        {Lisp-Entry "orientation" () 58 12 ("set-orientation" "get-orientation" "vert")}
        {Lisp-Entry "pos" () 59 12 ("set-pos" "get-pos" "0")}
        {Lisp-Entry "range" () 60 12 ("set-range" "get-range" "9" "0" "Range")}
        {Lisp-Entry "line-height" () 61 12 ("set-line-height" "get-line-height" "1")}
        {Lisp-Entry "page-height" () 62 12 ("set-page-height" "get-page-height" "3")}
        {Lisp-Entry "flat?" () 63 12 ("set-flat?" "get-flat?" "false")}
        {Lisp-Entry "style" () 64 12 ("set-style" "get-style")}
        {Lisp-Entry "tracking?" () 67 8 ("false")}
        {Lisp-Entry "tracking-start" () 68 8 ()}
        {Lisp-Entry "tracking-start-pos" () 69 8 ()}
        {Lisp-Entry "autorepeat-pulse" () 70 8 ()}
        {Lisp-Entry "autorepeat-verb" () 71 8 ()}
        {Lisp-Entry "autorepeat-action" () 72 8 ()}
        {Lisp-Entry "print" () 75 11 ("range" "pos" "size" "position" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-orientation" () 86 18 ("orientation")}
        {Lisp-Entry "set-orientation" () 90 18 ("invalidate-view" "set!" "orientation" "neq?" "when" "or")}
        {Lisp-Entry "get-pos" () 96 18 ("pos")}
        {Lisp-Entry "set-pos" () 100 18 ("redraw-view-only" "set!" "pos" "/=" "when" "min-pos" "max-pos" "min" "max" "new-pos" "let" "redraw?" "p")}
        {Lisp-Entry "min-pos" () 108 11 ("range" "get-start")}
        {Lisp-Entry "max-pos" () 112 11 ("page-height" "range" "get-end" "-")}
        {Lisp-Entry "get-range" () 116 18 ("range")}
        {Lisp-Entry "set-range" () 120 18 ("invalidate-view" "set!" "range" "/=" "when" "rg")}
        {Lisp-Entry "get-line-height" () 126 18 ("line-height")}
        {Lisp-Entry "set-line-height" () 130 18 ("invalidate-view" "set!" "line-height" "/=" "when" "height")}
        {Lisp-Entry "get-page-height" () 136 18 ("page-height")}
        {Lisp-Entry "set-page-height" () 140 18 ("invalidate-view" "set!" "page-height" "/=" "when" "height")}
        {Lisp-Entry "set-info" () 146 18 ("set-page-height" "Range" "new" "set-range" "page" "max" "min")}
        {Lisp-Entry "get-flat?" () 151 18 ("flat?")}
        {Lisp-Entry "set-flat?" () 155 18 ("invalidate-view" "set!" "flat?" "/=" "when" "value")}
        {Lisp-Entry "get-style" () 161 18 ("style")}
        {Lisp-Entry "set-style" () 165 18 ("invalidate-view" "set!" "style" "/=" "when" "value")}
        {Lisp-Entry "get-client" () 176 18 ("parent")}
        {Lisp-Entry "call-scroll" () 185 11 ("on-hscroll" "horz" "on-vscroll" "vert" "orientation" "case" "get-client" "client" "let" "thumb-pos" "action")}
        {Lisp-Entry "line-up" () 197 11 ("setup-autorepeat" "line-up" "call-scroll")}
        {Lisp-Entry "line-down" () 202 11 ("setup-autorepeat" "line-down" "call-scroll")}
        {Lisp-Entry "page-up" () 212 11 ("setup-autorepeat" "page-up" "call-scroll")}
        {Lisp-Entry "page-down" () 217 11 ("setup-autorepeat" "page-down" "call-scroll")}
        {Lisp-Entry "pulse" () 227 11 ("page-down" "page-up" "line-down" "line-up" "autorepeat-action" "autorepeat-period" "register-pulse" "autorepeat-pulse" "unregister-pulse" "action" "set!" "setup" "autorepeat-verb" "case")}
        {Lisp-Entry "get-breadth" () 246 11 ("get-height" "horz" "get-width" "vert" "orientation" "case")}
        {Lisp-Entry "get-extent" () 252 11 ("get-width" "horz" "get-height" "vert" "orientation" "case")}
        {Lisp-Entry "new-rect" () 258 11 ("horz" "Rect" "new" "vert" "orientation" "case" "bottom" "right" "top" "left")}
        {Lisp-Entry "get-place" () 264 11 ("get-h" "horz" "get-v" "vert" "orientation" "case" "point")}
        {Lisp-Entry "up-rect" () 275 11 ("0" "new-rect" "get-breadth" "b" "let")}
        {Lisp-Entry "down-rect" () 280 11 ("-" "0" "new-rect" "get-extent" "e" "get-breadth" "b" "let")}
        {Lisp-Entry "thumb-range" () 286 11 ("values" "pos" "+" "thumb-pos" "page-height" "/" "1" "min" "*" "round" "6" "max" "thumb" "shaft" "let*" "0" ">" "when" "get-start" "range" "get-end" "-" "r" "get-extent" "e" "get-breadth" "b" "let")}
        {Lisp-Entry "thumb-rect" () 297 11 ("0" "new-rect" "get-breadth" "b" "end" "start" "receive" "when" "thumb-range" "info" "let")}
        {Lisp-Entry "mouse-down" () 310 11 ("page-down" ">=" "page-up" "" "end" "start" "receive" "when" "thumb-range" "info" "get-place" "place" "let" "else" "start-tracking" "thumb-rect" "line-down" "down-rect" "line-up" "up-rect" "in-rect?" "cond" "acquire-capture" "pos")}
        {Lisp-Entry "drag-move" () 324 11 ("track-thumb" "tracking?" "when" "pos")}
        {Lisp-Entry "drag-up" () 329 11 ("end-tracking" "tracking?" "when" "release-capture" "kill-autorepeat" "rest" "pos")}
        {Lisp-Entry "start-tracking" () 341 11 ("get-pos" "tracking-start-pos" "get-place" "tracking-start" "true" "tracking?" "set!" "pos")}
        {Lisp-Entry "track-thumb" () 347 11 ("tracking-start-pos" "+" "thumb-track" "call-scroll" "*" "quotient" "dp" "shaft" "tracking-start" "get-place" "dv" "get-start" "range" "get-end" "-" "r" "get-extent" "e" "get-breadth" "b" "let*" "pos")}
        {Lisp-Entry "end-tracking" () 357 11 ("false" "tracking?" "set!")}
        {Lisp-Entry "Flat-Color" () 366 14 ()}
        {Lisp-Entry "Background-Color" () 369 14 ()}
        {Lisp-Entry "get-flat-color" () 373 11 ("flat-color" "set!" "Flat-Color" "unless")}
        {Lisp-Entry "flat-color" () 379 11 ("blue:" "green:" "red:" "Light" "name:" "Color" "white?" "if")}
        {Lisp-Entry "get-background-color" () 385 11 ("background-color" "set!" "Background-Color" "unless")}
        {Lisp-Entry "background-color" () 391 11 ("blue:" "green:" "red:" "white?" "if" "Light" "name:" "Color" "color" "let")}
        {Lisp-Entry "flat-look?" () 398 11 ("flat?" "else" "document/scrollbar/flat?" "document" "tool/scrollbar/flat?" "get-look" "get-element" "tool" "style" "case")}
        {Lisp-Entry "draw" () 405 11 ("7" "9" "4" "Dark" "6" "3" "line" "Light" "Pen" "set-pen" "8" "quotient" "get-top" "+" "v" "rect-height" "height" "let*" "Medium" "-" "inflate-rect" "inflated" "2" "1" "width" "let" "rectangle" "edges:" "outer:" "raised" "inner:" "draw-edge" "draw-raised" "Entry-Border" "name:" "Color" "frame-rect" "if" "when" "draw-scroll-bar" "else" "right" "down" "left" "horz" "up" "vert" "orientation" "case" "draw-button" "cond" "get-background-color" "fill-rect" "flat-look?" "flat?" "thumb-rect" "down-rect" "up-rect" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-button" () 440 11 ("4" "get-top" "3" "get-left" "+" "draw-arrow-tip" "dv" "0" "1" "horz" "orientation" "=" "if" "dh" "let" "Black" "Pen" "set-pen" "Medium" "name:" "Color" "fill-rect" "inflate-rect" "inflated" "with" "draw-raised" "direction" "rect" "dc")}
        {Lisp-Entry "setup-autorepeat" () 455 11 ("autorepeat-action" "setup" "autorepeat-verb" "autorepeat-delay" "register-pulse" "set!" "autorepeat-pulse" "not" "when" "action")}
        {Lisp-Entry "kill-autorepeat" () 462 11 ("autorepeat-action" "autorepeat-verb" "set!" "unregister-pulse" "autorepeat-pulse" "when")}
        {Lisp-Entry "get-class-image" () 476 16 ("Bitmap-Resource")}}}})
"Scroller-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Scroller-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Scroller-View" () 37 9 ("jazz")
      {Lisp-Entry "scrollbar-size" () 47 19 ()}
      {Lisp-Entry "Scroller-View" () 51 7 ("Container")
        {Lisp-Entry "client" () 54 12 ("set-client" "get-client")}
        {Lisp-Entry "vscroll?" () 55 12 ("set-vscroll?" "get-vscroll?" "false")}
        {Lisp-Entry "hscroll?" () 56 12 ("set-hscroll?" "get-hscroll?" "false")}
        {Lisp-Entry "flat?" () 57 12 ("set-flat?" "get-flat?" "false")}
        {Lisp-Entry "style" () 58 12 ("set-style" "get-style")}
        {Lisp-Entry "vscroll" () 61 8 ()}
        {Lisp-Entry "hscroll" () 62 8 ()}
        {Lisp-Entry "default-name" () 65 11 ("scroller")}
        {Lisp-Entry "finish" () 69 11 ("get-scroll-client" "set-client" "get-content" "content" "let" "client" "not" "when" "nextmethod" "rest")}
        {Lisp-Entry "get-client" () 81 18 ("client")}
        {Lisp-Entry "set-client" () 85 18 ("layout-scrollee" "self" "set-scroller" "invalidate-layout" "set!" "client" "/=" "when" "clt")}
        {Lisp-Entry "size-change" () 99 11 ("layout-scrollee-patch" "layout-scrollee" "get-content" "get-client" "eq?" "client" "and" "when" "nextmethod" "size")}
        {Lisp-Entry "layout" () 113 11 ("hscroll-size" "hscroll-position" "hscroll" "vscroll-size" "vscroll-position" "vscroll" "layout-scrollee" "client" "content-size" "set-size" "content-position" "set-position" "when" "find-child" "content" "get-size" "size" "let")}
        {Lisp-Entry "content-position" () 129 11 ("0" "Point" "size")}
        {Lisp-Entry "content-size" () 133 11 ("hscroll" "get-height" "0" "scrollbar-size" "vscroll" "if" "get-width" "-" "Dimension" "new" "size")}
        {Lisp-Entry "vscroll-position" () 139 11 ("0" "scrollbar-size" "get-width" "-" "Point" "new" "size")}
        {Lisp-Entry "vscroll-size" () 143 11 ("0" "hscroll" "if" "get-height" "-" "scrollbar-size" "Dimension" "new" "size")}
        {Lisp-Entry "hscroll-position" () 147 11 ("scrollbar-size" "get-height" "-" "0" "Point" "new" "size")}
        {Lisp-Entry "hscroll-size" () 151 11 ("0" "scrollbar-size" "vscroll" "if" "get-width" "-" "Dimension" "new" "size")}
        {Lisp-Entry "set-scroll-pos" () 160 11 ("hscroll" "horz" "set-pos" "vscroll" "when" "vert" "case" "redraw?" "pos" "part")}
        {Lisp-Entry "set-scroll-info" () 166 11 ("hscroll" "horz" "set-info" "vscroll" "when" "vert" "case" "page" "max" "min" "part")}
        {Lisp-Entry "on-vscroll" () 172 11 ("get-scrolled-position" "get-v" "thumb-track" "page-down" "get-page-size" "page-up" "-" "line-down" "get-line-size" "0" "Point" "new" "scroll" "line-up" "case" "client" "when" "orientation" "thumb-pos" "code")}
        {Lisp-Entry "on-hscroll" () 182 11 ("get-scrolled-position" "get-h" "thumb-track" "page-down" "get-page-size" "page-up" "-" "line-down" "0" "get-line-size" "Point" "new" "scroll" "line-up" "case" "client" "when" "orientation" "thumb-pos" "code")}
        {Lisp-Entry "get-vscroll" () 197 18 ("vscroll")}
        {Lisp-Entry "get-vscroll?" () 201 18 ("vscroll?")}
        {Lisp-Entry "set-vscroll?" () 205 18 ("vscroll?" "set!" "flag")}
        {Lisp-Entry "set-vscroll-needed?" () 209 18 ("layout-view" "close" "style" "style:" "flat?" "flat?:" "vert" "orientation:" "self" "parent:" "Scrollbar" "new" "set!" "not" "if" "vscroll" "boolean" "/=" "vscroll?" "and" "when" "flag")}
        {Lisp-Entry "get-hscroll" () 218 18 ("hscroll")}
        {Lisp-Entry "get-hscroll?" () 222 18 ("hscroll?")}
        {Lisp-Entry "set-hscroll?" () 226 18 ("hscroll?" "set!" "flag")}
        {Lisp-Entry "set-hscroll-needed?" () 230 18 ("layout-view" "close" "style" "style:" "flat?" "flat?:" "horz" "orientation:" "self" "parent:" "Scrollbar" "new" "set!" "not" "if" "hscroll" "boolean" "/=" "hscroll?" "and" "when" "flag")}
        {Lisp-Entry "get-flat?" () 239 18 ("flat?")}
        {Lisp-Entry "set-flat?" () 243 18 ("flat?" "set!" "value")}
        {Lisp-Entry "get-style" () 247 18 ("style")}
        {Lisp-Entry "set-style" () 251 18 ("style" "set!" "value")}
        {Lisp-Entry "get-class-image" () 261 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-row-instance" () 265 11 ("nextmethod" "else" "Boolean-Row" "new" "flat?" "field-name" "case" "property")}}}})
"Search-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.search.Search-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Search-Manager" () 49 7 ("5" "4" "Point" "position:" "tab" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "external-name" () 58 16 ("search-manager" "rest")}
        {Lisp-Entry "palette-class" () 68 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 73 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-position" () 78 16 ("Point")}
        {Lisp-Entry "palette-size" () 83 16 ("Dimension")}
        {Lisp-Entry "palette-title" () 88 16 ()}
        {Lisp-Entry "install" () 97 11 ("load-session" "nextmethod" "rest")}
        {Lisp-Entry "load-session" () 107 11 ("get-children" "get-content" "first-child" "set-session-properties" "when" "find-component" "sheet" "get-name" "name" "config" "dynamic" "function" "for-each" "set-selection-name" "locate" "tab" "get-active" "active" "search-manager" "tools" "get-preferences" "pref" "let*")}
        {Lisp-Entry "confirm-close" () 120 11 ("save-session" "rest")}
        {Lisp-Entry "save-session" () 124 11 ("get-session-properties" "Search-Manager" "set-property" "Opened-Windows" "properties" "push-property" "get-size" "size:" "get-position" "position:" "external-name" "list" "info" "let")}
        {Lisp-Entry "get-session-properties" () 134 11 ("get-children" "get-content" "first-child" "get-session-properties" "get-name" "sheet" "dynamic" "function" "map" "get-selection-name" "cons" "locate" "tab" "let")}
        {Lisp-Entry "guest-actions" () 147 11 ("nextmethod" "search-manager" "find-actions" "cons")}
        {Lisp-Entry "resize" () 157 11 ("tab" "locate" "size-figure" "dv" "dh")}
        {Lisp-Entry "on-ignore-case" () 161 11 ("debug" "evt")}
        {Lisp-Entry "get-search" () 171 18 ("get-sheet-search" "selected-sheet" "sheet" "locate" "tab" "let*")}
        {Lisp-Entry "get-search-named" () 177 18 ("get-sheet-search" "when" "child" "sheet" "locate" "tab" "let*" "name")}
        {Lisp-Entry "get-searches" () 184 18 ("get-children" "get-sheet-search" "map" "locate" "tab" "let")}
        {Lisp-Entry "get-sheet-search" () 189 11 ("get-content" "first-child" "sheet")}
        {Lisp-Entry "current-history-item" () 198 11 ("get-search" "current-history-item")}
        {Lisp-Entry "install-history-item" () 202 21 ("get-search" "install-history-item" "item")}
        {Lisp-Entry "edit-definitions" () 211 18 ("tab" "locate" "set-selection-name" "get-search-named" "search-definitions" "definitions" "name")}
        {Lisp-Entry "edit-references" () 216 18 ("tab" "locate" "set-selection-name" "definitions" "get-search-named" "search-references" "context" "references" "name")}
        {Lisp-Entry "selected-files" () 226 11 ("error" "car" "file?" "pair?" "and" "if" "get-user-data" "info" "let" "item" "dynamic" "function" "map" "get-selection" "selection" "results" "locate" "tree" "let*")}
        {Lisp-Entry "checkout-selection" () 237 18 ("selected-files" "checkout-files" "present-checkin/out-results")}
        {Lisp-Entry "checkout-files" () 241 11 ("get-output" "values" "checkout-file" "increase!" "checked-out-me" "=" "if" "get-file-status" "status" "file" "dynamic" "function" "for-each" "List-Factory" "new" "unprocessed" "already-done" "0" "processed" "Repository" "require-repository" "repository" "let" "files")}
        {Lisp-Entry "checkin-selection" () 256 18 ("selected-files" "checkin-files" "present-checkin/out-results")}
        {Lisp-Entry "checkin-files" () 260 11 ("get-output" "values" "checkin-file" "format" "cons" "put" "checkin-needs-merge?" "increase!" "checked-out-me" "/=" "if" "get-file-status" "status" "file" "dynamic" "function" "for-each" "List-Factory" "new" "unprocessed" "already-done" "0" "processed" "Repository" "require-repository" "repository" "let" "files")}
        {Lisp-Entry "present-checkin/out-results" () 277 11 ("user-message" "set-clipboard" "get-output" "output" "get-base" "base" "reason" "file" "bind" "dynamic" "function" "for-each" "String-Printer" "new" "printer" "header-unprocessed" "length" "nb" "let*" "title:" "message-box" "null?" "format-was/were" "0" "=" "if" "header-already" "format-plural" "format-cardinality" "header-processed" "format" "title" "let" "unprocessed" "already-done" "processed" "receive" "oper" "info")}}}})
"Search-Manager-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-Manager-Actions.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.search.Search-Manager-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Search-Manager-Actions" () 46 7 (":alt" "Shortcut" "shortcut:" "on-ignore-case" ":document" "Event-Handler" "action-handler:" "ignore-case" "name:" "Actions")}}})
"Search-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-Menu.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.search.Search-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Search-Menu" () 46 7 ("quick-find" "quick-separator" "replace-all-selected" "replace-all" "replace&find-forward" "replace" "replace-separator" "find-backward" "find-forward" "find-separator" "pop-results" "edit-current" "edit-previous" "disabled-icon:" "edit-next" "edit-separator" "find-in-files" "Bitmap-Resource" "icon:" "application" "Action" "action:" "find" "name:" "title:" "Menu")}}})
"Search-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.search.Search-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Search-Preferences" () 46 7 ("definitions" "directories" "text" "name:" "Bitmap-Resource" "icon:" "title:" "Tool-Preferences")
        {Lisp-Entry "active" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "cpp/java-directories" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "get-addable-base" () 65 11 ("Search-View-Preferences")}
        {Lisp-Entry "get-addable-details" () 69 11 ("expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "targets" "name-info")}}}})
"Search-Results"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-Results.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.search.Search-Results" () 37 9 ("Stack-Combo" "register-autoclass" "jazz")
      {Lisp-Entry "Search-Results" () 50 7 ("type" "width:" "title:" "name" "on-context-menu" "form:" "Event-Handler" "context-menu-handler:" "multiple-selection?:" "location" "filled-column:" "results" "header" "content" "scroller" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip?:" "edit-as-jazz-text" "tail" "location:" "edit-as-jazz-text-separator" "stack" "blue:" "green:" "red:" "Medium" "Color" "border-color:" "1" "Rect" "border-insets:" "0" "4" "Dimension" "size:" "tooltip-text:" "clear" "tools" "name:" "Navigable-Results")
        {Lisp-Entry "mode" () 53 8 ()}
        {Lisp-Entry "context" () 54 8 ()}
        {Lisp-Entry "references-target" () 55 8 ()}
        {Lisp-Entry "current-results" () 56 8 ()}
        {Lisp-Entry "results-stack" () 57 8 ()}
        {Lisp-Entry "external-name" () 81 16 ("search-results" "rest")}
        {Lisp-Entry "form-model" () 85 11 ("nextmethod" "else" "Search-Results-Tree" "results" "get-name" "case" "form")}
        {Lisp-Entry "palette-icon" () 97 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 102 16 ()}
        {Lisp-Entry "get-mode" () 111 18 ("mode")}
        {Lisp-Entry "set-mode" () 115 18 ("mode" "set!" "value")}
        {Lisp-Entry "get-context" () 119 18 ("context")}
        {Lisp-Entry "set-context" () 123 18 ("context" "set!" "value")}
        {Lisp-Entry "get-references-target" () 127 18 ("references-target")}
        {Lisp-Entry "set-references-target" () 131 18 ("references-target" "set!" "value")}
        {Lisp-Entry "get-results-stack" () 135 18 ("results-stack")}
        {Lisp-Entry "on-context-menu" () 144 11 ("track-popup-menu" "dynamic" "function" "with-context-click" "when" "get-context-menu" "menu" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "get-context-menu" () 155 11 ("Found-Menu" "new")}
        {Lisp-Entry "clear-results" () 159 11 ("pop-results" "bell" "1" "results-stack" "length" "" "if")}
        {Lisp-Entry "edit-selection" () 170 11 ("get-stage" "first-window" "acquire-focus" "true" "edit-item" "item" "for-each" "dynamic" "function" "with-locked-update" "when" "get-selection" "selection" "get-tree" "tree" "let*" "forward?")}
        {Lisp-Entry "edit-item" () 182 18 ("edit-document" "get-row" "get-user-data" "definition" "get-tree" "tree" "let*" "focus?" "forward?" "item")}
        {Lisp-Entry "edit-document" () 193 11 ("results" "Moniker" "values" "set-visible?" "bring-to-front" "select-expr-backward" "select-expr" "Text-View" "is?" "when" "get-guest" "guest" "true" ":return-new?" "false" "visible?:" "class:" "edit-document" "new?" "frame" "receive" "Jazz-Text-View" "class" "edit-as-jazz-text" "locate" "get-selected?" "jazz?" "get-application" "appl" "let*" "targets" "source" "let" "target" "entry" "bind" "car" "pair?" "and" "edit" "else" "activate-focus?:" "references-target" "edit-reference" "references" "mode" "case" "Catalog-Entry" "typed?" "if" "dynamic" "function" ":wait" "with-cursor" "focus?" "forward?" "info")}
        {Lisp-Entry "item-icon" () 235 29 ("else" "Method-Entry" "Constructor-Entry" "Variable-Entry" "Instance-Init-Entry" "Static-Init-Entry" "Interface-Entry" "Bitmap-Resource" "Class-Entry" "typed?" "cond" "info")}
        {Lisp-Entry "item-moniker" () 247 29 ("cadr" "Moniker" "car" "is?" "get-moniker" "Catalog-Entry" "typed?" "if" "info")}
        {Lisp-Entry "item-location" () 255 29 ("present-location" "not" "if" "item-moniker" "moniker" "let" "info")}
        {Lisp-Entry "item-type" () 262 29 ("else" "Method-Entry" "Constructor-Entry" "Variable-Entry" "Instance-Init-Entry" "Static-Init-Entry" "Interface-Entry" "Class-Entry" "cond" "Jazz-Field-Entry" "typed?" "interpreter-present?" "and" "if" "info")}
        {Lisp-Entry "present-info" () 277 18 ("->string" "present-name" "target" "pos" "moniker" "bind" "Moniker" "car" "is?" "mode" "present" "Catalog-Entry" "typed?" "if" "info")}
        {Lisp-Entry "add-results" () 286 18 ("update-stack-combo" "update-results" "cons" "results-stack" "list" "current-results" "set!" "preserve-current-selection" "target" "targets" "results")}
        {Lisp-Entry "pop-results" () 294 11 ("update-stack-combo" "update-results" "update-search-targets" "car" "current-results" "cdr" "results-stack" "set!")}
        {Lisp-Entry "set-results" () 302 11 ("update-stack-combo" "update-results" "update-search-targets" "current-results" "set!" "preserve-current-selection" "info")}
        {Lisp-Entry "preserve-current-selection" () 310 11 ("get-tree" "get-selection" "set-fourth!" "current-results" "when")}
        {Lisp-Entry "update-search-targets" () 315 11 ("set-search-targets" "end-search-edition" "get-application" "appl" "let" "current-results" "target" "targets" "results" "bind")}
        {Lisp-Entry "update-stack-combo" () 322 11 ("current-results" "set-value" "results-stack" "first" "join" "list" "target" "targets" "results" "bind" "info" "dynamic" "function" "map" "set-choices" "stack" "locate" "combo" "let")}
        {Lisp-Entry "update-results" () 331 11 ("update-search-actions" "Search-Results" "select-palette" "with-locked-update" "list" "either" "set-selection" "0" "get-visible-count" ">" "and" "when" "present-info" "key:" "" "sort" "target:" "add-item" "info" "for-each" "remove-every-row" "get-node-column" "set-toplevel-controls?" "false" "else" "true" "references" "mode" "case" "flag" "dynamic" "function" "with-update-locked" "get-tree" "tree" "get-application" "appl" "let" "current-results" "selection" "target" "targets" "results" "bind")}
        {Lisp-Entry "add-item" () 354 11 ("user-data:" "list" "children:" "state:" "add-row" "cons" "user-data" "item-type" "type" "item-location" "Tree-Label" "location" "item-icon" "image:" "present-info" "title:" "Tree-Node" "new" "node" "collapsed" "dynamic" "references" "mode" "=" "if" "state" "get-tree" "tree" "let" "target" "target:" "father" "father:" "info")}
        {Lisp-Entry "update-tree-row" () 364 21 ("present-info" "key:" "" "sort" "target:" "father:" "add-item" "info" "dynamic" "function" "for-each" "context" "context:" "get-references" "definitions" "get-cataloguer" "cataloguer" "get-application" "appl" "get-name" "name" "let*" "get-user-data" "target" "entry" "bind" "references" "mode" "case" "row")}
        {Lisp-Entry "selected-files" () 377 11 ("File" "car" "Pair" "is?" "and" "when" "get-row" "get-user-data" "info" "let" "rank" "dynamic" "function" "collect" "get-selection" "selection" "results" "locate" "tree" "let*")}
        {Lisp-Entry "touch-selection" () 392 21 ("format-plural" "user-message" "touch" "file" "dynamic" "function" "for-each" "length" "count" "selected-files" "files" "let*")}}
      {Lisp-Entry "Stack-Combo" () 406 7 ("Combo-Box")
        {Lisp-Entry "content-change" () 409 11 ("get-value" "set-results" "origin")}}
      {Lisp-Entry "Found-Menu" () 422 7 ("on-touch-files" "touch" "on-checkin-files" "checkin" "on-checkout-files" "checkout" "on-copy" ":focus" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "copy" "name:" "Context-Menu")}}})
"Search-Results-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-Results-Tree.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.search.Search-Results-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Search-Results-Tree" () 46 7 ("Tree-View")
        {Lisp-Entry "focus-actions" () 54 11 ("nextmethod" "search-results-tree" "find-actions" "cons")}
        {Lisp-Entry "get-search" () 64 11 ("Search-Results" "find-ascendant")}
        {Lisp-Entry "return-press" () 73 11 ("true" "get-search" "edit-selection" "key")}
        {Lisp-Entry "copy-selection" () 77 11 ("get-selection" "get-row" "get-user-data" "get-search" "present-info" "n" "dynamic" "function" "map" "format" "set-clipboard")}
        {Lisp-Entry "select-all" () 85 11 ("rest")}
        {Lisp-Entry "on-edit-definition" () 89 11 ("true" "get-search" "edit-selection" "evt")}
        {Lisp-Entry "on-checkout-files" () 93 11 ("get-search" "checkout-selection" "evt")}
        {Lisp-Entry "on-checkin-files" () 97 11 ("get-search" "checkin-selection" "evt")}
        {Lisp-Entry "on-touch-files" () 101 11 ("get-search" "touch-selection" "evt")}
        {Lisp-Entry "update-row" () 105 11 ("get-search" "update-tree-row" "row")}}}})
"Search-Results-Tree-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-Results-Tree-Actions.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.search.Search-Results-Tree-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Search-Results-Tree-Actions" () 46 7 ("F12" "on-edit-definition" "edit-definition" "Return" ":control" "Shortcut" "shortcut:" "on-action" ":focus" "Event-Handler" "action-handler:" "action" "name:" "Actions")}}})
"Search-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Search-Tree.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Search-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Search-Tree" () 46 7 ("kind" "location" "toplevel-controls?:" "width:" "title:" "name:" "on-selection-change" ":self" "Event-Handler" "selection-handler:" "can-select-empty?:" "multiple-selection?:" "row" "selection-mode:" ":icons" "portfolio:" "component" "filled-column:" "Details-Tree")
        {Lisp-Entry "target" () 49 12 ("set-target" "get-target")}
        {Lisp-Entry "get-target" () 64 18 ("target")}
        {Lisp-Entry "set-target" () 68 18 ("acquire-focus" "set-single-selection" "0" "visible-count" ">" "when" "update" "target" "set!" "value")}
        {Lisp-Entry "selection-changed" () 81 11 ("focus?" "force-parent?" "origin" "old" "component")}
        {Lisp-Entry "on-designer" () 90 11 ("update" ":property-change" ":child-remove" ":child-add" "get-kind" "case" "evt")}
        {Lisp-Entry "update" () 101 11 ("get-presentation" "localize" "key:" "search-components" "" "sort" "false" "insert-component" "component" "for-each" "target" "client" "and" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "rest")}
        {Lisp-Entry "search-components" () 111 11 ("cons" "set!" "search-component" "indexable?" "and" "when" "level" "component" "dynamic" "function" "client" "for-each-descendant" "list" "let" "target")}
        {Lisp-Entry "insert-component" () 120 11 ("user-data:" "Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "break" "and" "not" "when" "class-of" "get-class-presentation" "kind" "present-location" "location" "get-component-image" "image" "get-presentation" "title" "let" "recursive?" "father" "component")}}}})
"Search-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.search.Search-View" () 37 9 ("jazz")
      {Lisp-Entry "Search-View" () 49 7 ("play-recording?" "expression?" "preserve-case?" "ignore-case?" "whole-words?" "display-images?:" "toplevel-controls?:" "width:" "default-row-height:" "Ansi-Var" "Font" "font:" "targets" "fill" "layout-type:" "vscroll?:" "style:" "edge" "border-type:" "targets-border" "on-splitter-move" "move-handler:" "6" "vertical" "8" "domain" "default?:" "on-search" "form:" "Event-Handler" "action-handler:" "Dimension" "size:" "Point" "position:" "title:" "search" "name:" "Layout-View")
        {Lisp-Entry "next-radio" () 72 18 ("length" "1" "+" "modulo" "element" "set-search-domain" "when" "position" "return:" "find" "pos" "get-search-domains" "domains" "get-search-domain" "domain" "let*")}
        {Lisp-Entry "next-tab" () 80 18 ("set-selection" "1" "+" "modulo" "new-selection" "get-selection" "old-selection" "get-children" "length" "max-selection" "get-manager" "manager" "let*")}
        {Lisp-Entry "finish" () 94 11 ("get-columns" "1" "set-title-vertical-offset" "column" "dynamic" "function" "for-each" "targets" "locate" "tree" "let" "nextmethod" "rest")}
        {Lisp-Entry "get-session-properties" () 107 26 ("get-expression?" "expression?" "get-play-recording?" "play-recording?" "get-preserve-case?" "preserve-case?" "get-ignore-case?" "ignore-case?" "get-whole-words?" "whole-words?" "get-search-targets" "targets" "get-search-domain" "domain" "list")}
        {Lisp-Entry "set-session-properties" () 118 26 ("get-expression?" "set-expression?" "get-play-recording?" "set-play-recording?" "get-preserve-case?" "set-preserve-case?" "get-ignore-case?" "set-ignore-case?" "get-whole-words?" "set-whole-words?" "get-targets" "set-search-targets" "config")}
        {Lisp-Entry "get-manager" () 132 11 ("3" "child")}
        {Lisp-Entry "get-results" () 141 21 ("get-application" "get-search-results")}
        {Lisp-Entry "get-targets-tree" () 145 18 ("targets" "locate")}
        {Lisp-Entry "get-search-targets" () 149 18 ("get-output" "naturals" "list" "put" "empty-string?" "and" "unless" "1" "repl" "0" "Cell" "get-cell-data" "get-title" "find" "let" "row" "dynamic" "function" "for-each" "in-edition?" "if" "List-Factory" "new" "fact" "get-visible-count" "height" "targets" "locate" "tree" "let*")}
        {Lisp-Entry "set-search-targets" () 165 18 ("0" "naturals" "invalidate-cell" "get-cell-data" "set-title" "Cell" "new" "cell" "col" "target" "row" "line" "for-each" "dynamic" "function" "with-update-locked" "get-visible-count" "height" "get-columns-count" "width" "ensure-visible-count" "length" "count" "locate" "tree" "let" "targets")}
        {Lisp-Entry "get-find-targets" () 191 18 ("get-search-targets" "first" "map")}
        {Lisp-Entry "get-replace-targets" () 195 11 ("get-search-targets" "second" "map")}
        {Lisp-Entry "get-search-domain" () 199 18 ("get-search-domains" "find-if" "get-selected?" "and" "when" "find-component" "radio" "let" "name" "dynamic" "function" "proc" "domain" "locate" "group" "let*")}
        {Lisp-Entry "set-search-domain" () 208 18 ("get-children" "eq?" "set-selected?" "Radio-Button" "is?" "child" "dynamic" "function" "for-each" "when" "find-component" "radio" "locate" "group" "let*" "domain")}
        {Lisp-Entry "get-whole-words?" () 218 18 ("whole-words?" "locate" "get-checked?")}
        {Lisp-Entry "set-whole-words?" () 222 18 ("whole-words?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-ignore-case?" () 226 18 ("ignore-case?" "locate" "get-checked?")}
        {Lisp-Entry "set-ignore-case?" () 230 18 ("ignore-case?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-preserve-case?" () 234 18 ("preserve-case?" "locate" "get-checked?")}
        {Lisp-Entry "set-preserve-case?" () 238 18 ("preserve-case?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-play-recording?" () 242 18 ("play-recording?" "locate" "get-checked?")}
        {Lisp-Entry "set-play-recording?" () 246 18 ("play-recording?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-expression?" () 250 18 ("expression?" "locate" "get-checked?")}
        {Lisp-Entry "set-expression?" () 254 18 ("expression?" "locate" "set-checked?" "flag")}
        {Lisp-Entry "get-search-domains" () 263 26 ()}
        {Lisp-Entry "get-active-window-domain" () 267 26 ()}
        {Lisp-Entry "on-search" () 276 18 ("search-targets" "bell" "null?" "if" "get-find-targets" "find-targets" "end-edition" "locate" "targets" "let" "get-player" "hide" "evt")}
        {Lisp-Entry "search-targets" () 286 29 ("targets")}
        {Lisp-Entry "resize" () 290 11 ("expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "targets-border" "domain" "size-figure" "0" "search" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-splitter-move" () 302 11 ("update-view" "-" "targets-border" "move-figure" "0" "domain" "locate" "size-figure" ":delta" "get-property" "delta" "let" "evt")}
        {Lisp-Entry "on-return-press" () 310 18 ("on-search" "evt")}
        {Lisp-Entry "on-find-forward" () 314 18 ("bell" "follow-search-results?" "find-forward" "and" "unless" "get-search-domain" "domain" "get-target-text" "target" "get-find-targets" "find" "let" "evt")}
        {Lisp-Entry "on-find-backward" () 322 18 ("bell" "follow-search-results?" "find-backward" "and" "unless" "get-search-domain" "domain" "get-target-text" "target" "get-find-targets" "find" "let" "evt")}
        {Lisp-Entry "on-replace" () 330 18 ("bell" "replace" "and" "unless" "get-target-text" "target" "get-expression?" "expression?" "get-play-recording?" "play?" "get-preserve-case?" "case?" "get-ignore-case?" "ignore-case?" "get-application" "appl" "get-replace-targets" "repl" "get-find-targets" "find" "let*" "evt")}
        {Lisp-Entry "on-replace&find-forward" () 343 18 ("bell" "replace&find-forward" "and" "unless" "get-target-text" "target" "follow-search-results?" "next?" "get-expression?" "expression?" "get-play-recording?" "play?" "get-preserve-case?" "case?" "get-ignore-case?" "ignore-case?" "get-application" "appl" "get-search-domain" "domain" "get-replace-targets" "repl" "get-find-targets" "find" "let*" "evt")}
        {Lisp-Entry "on-replace-all" () 358 18 ("replace-all" "bell" "not" "if" "get-target-text" "target" "get-expression?" "expression?" "get-play-recording?" "play?" "get-preserve-case?" "case?" "get-ignore-case?" "ignore-case?" "get-application" "appl" "get-replace-targets" "repl" "get-find-targets" "find" "let*" "evt")}
        {Lisp-Entry "on-replace-all-selected" () 372 18 ("format-plural" "format" "close" "increase!" "save" "get-modified?" "and" "when" "replace-all" "get-name" "user-message" "get-controller" "get-moniker" "moniker" "get-text-view" "target" "get-guest" "guest" "false" "true" "edit-item" "new?" "frame" "receive" "item" "dynamic" "function" "for-each" "0" "modified-count" "get-selection" "selection" "locate" "tree" "get-results" "results" "get-expression?" "expression?" "get-play-recording?" "play?" "get-preserve-case?" "case?" "get-ignore-case?" "ignore-case?" "get-application" "appl" "get-replace-targets" "repl" "get-find-targets" "find" "yes" "auto-save/close?" "let*" "throw-cancel" "cancel" "eq?" "if" "confirmation" "type:" "message-box" "code" "let" "evt")}
        {Lisp-Entry "get-target-text" () 406 11 ("get-text-view" "Document" "get-guest" "guest" "Host-Frame" "is?" "when" "get-stage" "first-child" "frame" "let")}
        {Lisp-Entry "follow-search-results?" () 414 11 ("get-active-window-domain" "/=" "not" "or" "domain")}
        {Lisp-Entry "get-search-reporter" () 423 21 ("show" "setup-search-reporter" "register-activity" "reporter" "get-activity-manager" "manager" "let*" "count")}
        {Lisp-Entry "setup-search-reporter" () 431 29 ("count" "reporter")}
        {Lisp-Entry "determine-case" () 440 11 ("capitalized" "upper-case" "upper-case?" "1" "length" "=" "lower-case" "0" "element" "lower-case?" "empty-string?" "or" "if" "str")}
        {Lisp-Entry "convert-case" () 448 11 ("capitalize" "capitalized" "upcase" "upper-case" "downcase" "lower-case" "case" "cs" "str")}
        {Lisp-Entry "replace" () 455 11 ("true" "get-application" "get-recorder" "play-current-recording" "acquire-focus" "determine-case" "convert-case" "insert-string" "not" "element" "repl" "let" "when" "position" "return:" "=" "ci=" "test:" "find" "0" "if" "rank" "get-selected-string" "str" "let*" "expression?" "play?" "case?" "ignore-case?" "repl-list" "find-list" "target")}
        {Lisp-Entry "replace&find-forward" () 469 11 ("find-forward" "replace" "true" "next?" "expression?" "play?" "case?" "ignore-case?" "repl" "find" "target")}
        {Lisp-Entry "replace-all" () 474 11 ("false" "find-forward" "while" "replace" "expression?" "play?" "case?" "ignore-case?" "repl" "find" "target")}
        {Lisp-Entry "find-forward" () 480 21 ("get-results" "edit-next" "essay" "select-next" "either" "true" "next?" "strings" "target")}
        {Lisp-Entry "find-backward" () 485 21 ("get-results" "edit-previous" "essay" "select-previous" "either" "true" "previous?" "strings" "target")}
        {Lisp-Entry "search-in-file" () 495 11 ("list" "put" "search-file" "info" "let" "step-it" "get-name" "user-message" "when" "cancel-requested?" "and" "unless" "reporter" "factory" "constituent-test" "expression?" "ignore-case?" "whole-words?" "file" "targets")}
        {Lisp-Entry "search-in-zip" () 505 11 ("list" "put" "search-content" "info" "String" "read-content" "coerce" "content" "Zipped" "zipped" "let*" "step-it" "user-message" "cancel-requested?" "and" "unless" "ci=" "test:" "member?" "when" "extract-extension" "extension" "let" "size" "filename" "dynamic" "function" "iterate-files" "Unzip-File" "new" "unzip" "with-closed" "reporter" "factory" "constituent-test" "expression?" "ignore-case?" "whole-words?" "extensions" "file" "targets")}
        {Lisp-Entry "search-in-directories" () 522 21 ("search-in-directory" "directory" "dynamic" "function" "for-each" "reporter" "factory" "constituent-test" "expression?" "ignore-case?" "whole-words?" "extensions" "directories" "targets")}
        {Lisp-Entry "search-in-directory" () 528 21 ("ignored-directories:" "search-in-zip" "search-in-file" "get-size" "" "ci=" "test:" "member?" "not" "and" "cond" "get-extension" "ext" "file" "dynamic" "function" "iterate-directory" "equal?" "all-extensions?" "let" "reporter" "factory" "constituent-test" "expression?" "ignore-case?" "whole-words?" "extensions" "directory" "targets")}
        {Lisp-Entry "search-file" () 544 11 ("search-expressions" "quotation" "code" "get-extension" "ci=" "mode" "end:" "start:" "Jazz-Explorer" "expl" "text-beginning" "beginning" "let*" "set-moniker" "Jazz-Text-View" "text" "search-content" "read-string-content" "content" "let" "File-Reader" "new" "reader" "with-closed" "not" "if" "exists?" "when" "constituent-test" "expression?" "ignore-case?" "whole-words?" "targets" "file")}
        {Lisp-Entry "search-content" () 558 11 (":constituent-test" "self" ":self" ":ignore-case?" ":whole-words?" "multisearch-string" "constituent-test" "ignore-case?" "whole-words?" "targets" "content")}
        {Lisp-Entry "select-search" () 567 26 ("0" "Cell" "select-cell" "locate" "targets" "let")}
        {Lisp-Entry "current-history-item" () 577 11 ("get-selection" "get-content" "get-expression?" "get-play-recording?" "get-preserve-case?" "get-ignore-case?" "get-whole-words?" "get-search-targets" "get-search-domain" "get-results" "get-mode" "History-Search-Item" "new" "results" "locate" "tree" "let")}
        {Lisp-Entry "install-history-item" () 592 21 ("get-selection" "set-selection" "get-content" "set-content" "get-expression?" "set-expression?" "get-play-recording?" "set-play-recording?" "get-preserve-case?" "set-preserve-case?" "get-ignore-case?" "set-ignore-case?" "get-whole-words?" "set-whole-words?" "get-targets" "set-search-targets" "get-domain" "set-search-domain" "get-mode" "get-results" "set-mode" "results" "locate" "tree" "let" "item")}}
      {Lisp-Entry "Search-Targets" () 611 7 ("Code" "name:" "Font" "font:" "Tree-View")
        {Lisp-Entry "mouse-down" () 618 11 ("select-cell" "nextmethod" "not" "if" ":uniform-height?" "true" ":any?" "view->tree" "cell" "let" "pos")}
        {Lisp-Entry "tab-stop-enter" () 625 11 ("0" "Cell" "select-cell")}
        {Lisp-Entry "add-empty-row" () 629 11 ("children:" "add-row" "columns" "new-empty-cell" "column" "dynamic" "function" "map" "children" "root-row" "either" "let" "father" "father:")}
        {Lisp-Entry "select-cell" () 637 11 ("select-all" "acquire-focus" "layout-scrollee" "self" "set-tree" "set-client" "get-string-content" "set-title" "function" ":end-proc" ":editor" "edit-cell" "get-title" "set-string-content" "when" "font" "font:" "top-padding:" "left-padding:" "get-content" "Tree-Embedded-Search-Text-View" "text" "hscroll?:" "false" "vscroll?:" "parent:" "Scroller-View" "scroller" "Medium" "name:" "Color" "border-color:" "solid" "border-type:" "Border-View" "new" "editor" "3" "0" "get-col" "=" "if" "left" "get-cell-data" "data" "let*" "cell")}}}})
"Search-View-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Search-View-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.search.Search-View-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Search-View-Preferences" () 46 7 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "targets" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "whole-words?" () 50 12 ("generate" "accessors" "false")}
        {Lisp-Entry "ignore-case?" () 51 12 ("generate" "accessors" "false")}
        {Lisp-Entry "preserve-case?" () 52 12 ("generate" "accessors" "false")}
        {Lisp-Entry "play-recording?" () 53 12 ("generate" "accessors" "false")}
        {Lisp-Entry "expression?" () 54 12 ("generate" "accessors" "false")}
        {Lisp-Entry "get-domain" () 67 16 ("nextmethod" "else" "Boolean-Domain" "new" "expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "field-name" "case" "property")}
        {Lisp-Entry "property-presentation" () 79 16 ("nextmethod" "else" "expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "targets" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 90 11 ("nextmethod" "else" "Boolean-Row" "new" "expression?" "play-recording?" "preserve-case?" "ignore-case?" "whole-words?" "field-name" "case" "property")}}}})
"Section-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Section-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Section-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Section-Doc" () 45 7 ("Doc")
        {Lisp-Entry "sort?" () 48 12 ("set-sort?" "get-sort?" "false")}
        {Lisp-Entry "catalog" () 51 8 ()}
        {Lisp-Entry "get-catalog" () 59 11 ("catalog")}
        {Lisp-Entry "set-catalog" () 63 11 ("children" "set-catalog" "child" "dynamic" "function" "for-each" "catalog" "set!" "cat")}
        {Lisp-Entry "get-sort?" () 70 18 ("sort?")}
        {Lisp-Entry "set-sort?" () 74 18 ("designers" "descendants" "self" "process-refresh" "designer" "dynamic" "function" "for-each" "set!" "sort?" "/=" "when" "value")}
        {Lisp-Entry "html-output-file" () 87 11 ("name" "format" "Jazz" "list" "File" "new")}
        {Lisp-Entry "get-class-image" () 97 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 102 16 ("nextmethod" "else" "sort?" "field-name" "case" "property")}
        {Lisp-Entry "sort-components?" () 108 11 ("sort?")}
        {Lisp-Entry "get-row-instance" () 112 11 ("nextmethod" "else" "Boolean-Row" "new" "sort?" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 118 11 ("sort?")}}}})
"Selectable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Selectable.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Selectable" () 37 9 ("jazz")
      {Lisp-Entry "Selectable" () 45 11 ()
        {Lisp-Entry "get-selected?" () 48 35 ()}
        {Lisp-Entry "set-selected?" () 49 35 ("selected?")}
        {Lisp-Entry "unselect" () 50 35 ()}}}})
"Selected-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Selected-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.event.Selected-Event" () 37 9 ("jazz")
      {Lisp-Entry "Selected-Event" () 44 7 ("Event")
        {Lisp-Entry "owner" () 47 8 ()}
        {Lisp-Entry "old" () 48 8 ()}
        {Lisp-Entry "selected" () 49 8 ()}
        {Lisp-Entry "force?" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("force?~self" "selected~self" "old~self" "owner~self" "set!" "nextmethod" "user-origin?" "user-origin?:" "false" "force?" "force?:" "selected" "old" "owner" "sender" "kind")}
        {Lisp-Entry "get-owner" () 66 18 ("owner")}
        {Lisp-Entry "get-old" () 70 18 ("old")}
        {Lisp-Entry "get-selected" () 74 18 ("selected")}
        {Lisp-Entry "get-force?" () 78 18 ("force?")}}}})
"Selection-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Selection-Event.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.event.Selection-Event" () 37 9 ("jazz")
      {Lisp-Entry "Selection-Event" () 44 7 ("Event")
        {Lisp-Entry "old" () 47 8 ()}
        {Lisp-Entry "selection" () 48 8 ()}
        {Lisp-Entry "origin" () 49 8 ()}
        {Lisp-Entry "force-parent?" () 50 8 ()}
        {Lisp-Entry "force?" () 51 8 ()}
        {Lisp-Entry "user-origin?" () 52 8 ()}
        {Lisp-Entry "initialize" () 55 11 ("user-origin?~self" "force?~self" "force-parent?~self" "origin~self" "selection~self" "old~self" "set!" "nextmethod" "user-origin?" "user-origin?:" "force?" "force?:" "false" "force-parent?" "force-parent?:" "origin" "origin:" "selection" "old" "sender" "kind")}
        {Lisp-Entry "print" () 65 11 ("properties" "selection" "old" "kind" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-old" () 79 18 ("old")}
        {Lisp-Entry "get-selection" () 83 18 ("selection")}
        {Lisp-Entry "get-origin" () 87 18 ("origin")}
        {Lisp-Entry "get-force-parent?" () 91 18 ("force-parent?")}
        {Lisp-Entry "get-force?" () 95 18 ("force?")}
        {Lisp-Entry "get-user-origin?" () 99 18 ("user-origin?")}}}})
"Selection-Handler"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "handler" "Selection-Handler.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.handler.Selection-Handler" () 37 9 ("jazz")
      {Lisp-Entry "Selection-Handler" () 44 7 ("Event-Handler")
        {Lisp-Entry "force?" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("force?~self" "set!" "nextmethod" "apply" "others" "false" "force?" "bind-keywords" "rest")}
        {Lisp-Entry "get-force?" () 56 18 ("force?")}
        {Lisp-Entry "print" () 60 11 ("properties" "null?" "if" "force?" "method-name" "target-name" "target" "either" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Selection-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "selection" "Selection-Manager.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.selection.Selection-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Selection-Manager" () 46 7 ("Object")
        {Lisp-Entry "selection" () 49 15 ("generate" "accessors")}
        {Lisp-Entry "selection-anchor" () 50 15 ("generate" "accessors")}
        {Lisp-Entry "modifiers" () 51 12 ("generate" "0")}
        {Lisp-Entry "shift?" () 52 12 ("generate" "false")}
        {Lisp-Entry "control?" () 53 12 ("generate" "false")}
        {Lisp-Entry "alt?" () 54 12 ("generate" "false")}
        {Lisp-Entry "multiple-selection?" () 55 12 ("generate" "false")}
        {Lisp-Entry "mouse-down-part" () 56 12 ("generate")}
        {Lisp-Entry "mouse-down-view" () 57 12 ("generate")}
        {Lisp-Entry "provider" () 60 8 ()}
        {Lisp-Entry "current-operation" () 61 8 ()}
        {Lisp-Entry "delay-selection?" () 62 8 ("false")}
        {Lisp-Entry "initialize" () 65 11 ("provider" "set!" "nextmethod" "p")}
        {Lisp-Entry "debug-current-operation" () 75 18 ("current-operation")}
        {Lisp-Entry "mouse-down?" () 79 18 ("mouse-down" "current-operation" "=")}
        {Lisp-Entry "mouse-up?" () 83 18 ("mouse-up" "current-operation" "=")}
        {Lisp-Entry "mouse-double-down?" () 87 18 ("mouse-double-down" "current-operation" "=")}
        {Lisp-Entry "mouse-double-up?" () 91 18 ("mouse-double-up" "current-operation" "=")}
        {Lisp-Entry "keyboard?" () 95 18 ("keyboard" "current-operation" "=")}
        {Lisp-Entry "locked?" () 99 18 ("locked" "current-operation" "=")}
        {Lisp-Entry "set-modifiers" () 103 11 ("alt?" "control?" "shift?" "set!" "a?" "c?" "s?")}
        {Lisp-Entry "with-locked-operation" () 114 18 ("locked" "set!" "current-operation" "old-operation" "let" "unwind-protect" "proc")}
        {Lisp-Entry "collapse?" () 122 18 ("row")}
        {Lisp-Entry "expand?" () 126 18 ("row")}
        {Lisp-Entry "end-delayed?" () 130 18 ("mouse-up?" "content" "mouse-down-part" "eq?" "control?" "shift?" "not" "multiple-selection?" "and" "if")}
        {Lisp-Entry "allow-start-drag?" () 136 18 ("mouse-down?" "content" "mouse-down-part" "eq?" "and")}
        {Lisp-Entry "mouse-down-part-control?" () 141 18 ("control" "mouse-down-part" "eq?")}
        {Lisp-Entry "delay-selection" () 150 18 ("true" "delay-selection?" "set!")}
        {Lisp-Entry "change-selection?" () 154 18 ("true" "else" "mouse-up" "delay-selection?" "not" "mouse-down" "current-operation" "case")}
        {Lisp-Entry "mouse-down" () 161 18 ("multiple-selection?" "set-modifiers" "mouse-down-part" "mouse-down-view" "mouse-down" "current-operation" "set!" "ms?" "alt?" "control?" "shift?" "part" "view")}
        {Lisp-Entry "mouse-up" () 169 18 ("set-modifiers" "mouse-up" "mouse-double-up" "current-operation" "set!" "mouse-double-down?" "if" "alt?" "control?" "shift?")}
        {Lisp-Entry "double-click" () 176 18 ("set-modifiers" "mouse-double-down" "current-operation" "set!" "alt?" "control?" "shift?")}
        {Lisp-Entry "keyboard" () 181 18 ("set-modifiers" "keyboard" "current-operation" "set!" "alt?" "control?" "shift?")}
        {Lisp-Entry "reset" () 186 18 ("delay-selection?" "multiple-selection?" "false" "set-modifiers" "mouse-down-part" "current-operation" "set!")}}}})
"Selection-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "selection" "Selection-Provider.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.selection.Selection-Provider" () 37 9 ("jazz")
      {Lisp-Entry "Selection-Provider" () 45 11 ()}}})
"Self-Binding"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Self-Binding.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Self-Binding" () 37 9 ("jazz")
      {Lisp-Entry "Self-Binding" () 40 7 ("Lexical-Binding")}}})
"Semaphore"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "thread" "Semaphore.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.thread.Semaphore" () 37 9 ("jazz")
      {Lisp-Entry "Semaphore" () 44 7 ("WinKernel" "WinBase" "WinDef" "Synchronizer")
        {Lisp-Entry "create-synchronizer" () 47 11 ("NULL" "CreateSemaphore" "5" "maximum-count" "maximum-count:" "0" "initial-count" "initial-count:")}
        {Lisp-Entry "release-semaphore" () 51 18 ("handle" "ReleaseSemaphore")}}}})
"Separator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "layout" "Separator.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.layout.Separator" () 37 9 ("jazz")
      {Lisp-Entry "Separator" () 46 7 ("Figure")
        {Lisp-Entry "default-size" () 49 11 ("0" "8" "Dimension")}}}})
"Separator-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Separator-Item.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.Separator-Item" () 37 9 ("jazz")
      {Lisp-Entry "Separator-Item" () 46 7 ("Item")
        {Lisp-Entry "preferred-height" () 54 11 ("8")}
        {Lisp-Entry "draw" () 63 11 ("4" "Light" "3" "line" "Dark" "name:" "Pen" "set-pen" "get-width" "-" "right" "1" "left" "let" "lv" "lh" "update" "context" "dc")}}}})
"Separator-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Separator-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Separator-View" () 37 9 ("jazz")
      {Lisp-Entry "Separator-View" () 45 7 ("View")
        {Lisp-Entry "draw" () 53 11 ("Light" "0" "line" "Dark" "name:" "Pen" "set-pen" "1" "get-height" "-" "top" "get-size" "size" "let*" "lv" "lh" "update" "context" "dc")}}}})
"Sequence-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Sequence-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Sequence-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Sequence-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-sequence" "invoke")}
        {Lisp-Entry "aaa" () 61 14 ()}
        {Lisp-Entry "test-sequence" () 65 11 ("list" "aaa" "eq?" "replace-subseq!" "0" "insert!" "replace!" "fill!" ":sequence?" "substitute" "join" "split" "identity" "map-to" "map" "search" "prefix?" "null?" "mismatch" "String" "e" "d" "c" "b" "a" "subseq" "upper-case?" "collect-if" "every?" "not" "9" "some?" "start:" "true" "reversed?:" "numeric?" "cadr" "odd?" "find-if" "position" "return:" "car" "key:" "denise" "william" "mark" "find" "8" "7" "6" "even?" "count-if" "4" "5" "2" "1" "3" "count" "=" "rpt" "validate")}}}})
"Sequenced-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Sequenced-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.display.Sequenced-Column" () 37 9 ("jazz")
      {Lisp-Entry "Sequenced-Column" () 44 7 ("Display-Column")
        {Lisp-Entry "put-data" () 52 11 ("List-Factory" "new" "fact" "let" "factory" "get-last-element" "put" "displayer" "get-line" "line" ">" "if" "rest" "data")}
        {Lisp-Entry "increase-line" () 60 11 ("increase!" "displayer" "get-line" "line" "" "when")}
        {Lisp-Entry "print-to" () 70 11 ("border-after" "get-output" "display" "data" "dynamic" "function" "for-each" "border" "format" "printer" "previous-data" "previous-column" "fact")}}}})
"Sequenced-Column-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "display" "Sequenced-Column-Preferences.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.display.Sequenced-Column-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Sequenced-Column-Preferences" () 44 7 ("Column-Preferences")
        {Lisp-Entry "column-class" () 52 11 ("Sequenced-Column")}
        {Lisp-Entry "new-column" () 56 11 ("minimum" "minimum:" "border-after" "border-after:" "border" "border:" "Sequenced-Column" "new" "display")}}}})
"Service"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "service" "Service.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.service.Service" () 38 9 ("jazz")
      {Lisp-Entry "Service" () 45 7 ("Windows" "WinUser" "WinShell" "WinDef" "WinKernel" "WinError" "WinAdv" "COM" "System" "Utilities" "Process")
        {Lisp-Entry "mode" () 48 8 ()}
        {Lisp-Entry "cached-state" () 49 8 ()}
        {Lisp-Entry "taskicon-hwnd" () 50 8 ()}
        {Lisp-Entry "prepare-process" () 53 11 ("error" "else" "debug" "run" "mode" "set!" "unregister-service" "register-service" "EXIT_SUCCESS" "exit-process" "process-actions" "process-version" "process-name" "Command-Line" "command-help" "ci=" "null?" "or" "cond" "command-action" "action" "let" "nextmethod" "rest")}
        {Lisp-Entry "finalize-process" () 73 11 ("add-taskicon" "process-taskbar-message" "set-window-callback" "register-taskicon-class" "debug" "mode" "eq?" "when" "nextmethod" "rest")}
        {Lisp-Entry "close-environment" () 81 11 ("nextmethod" "remove-taskicon" "taskicon-hwnd" "debug" "mode" "eq?" "and" "when")}
        {Lisp-Entry "process-event-source" () 87 11 ("service-presentation" "EventSource" "argument/property" "either")}
        {Lisp-Entry "service-name" () 92 29 ()}
        {Lisp-Entry "service-presentation" () 96 29 ()}
        {Lisp-Entry "service-description" () 100 29 ()}
        {Lisp-Entry "service-messages" () 104 29 ()}
        {Lisp-Entry "service-icon" () 108 29 ()}
        {Lisp-Entry "register-service" () 117 11 (":presentation" "create-service" "handle" "path" "module-pathname" "module" "Service-Manager" "new" "manager" "parse" "application-key" "module-file" "message-file" "application-path" "service-presentation" "presentation" "let*" "service-messages" "messages" "set-value" "create-key" "service-key" "with-closed" "format" "service-path" "Registry" "Local-Machine" "local-machine-key" "when" "service-description" "description" "service-name" "name" "let")}
        {Lisp-Entry "unregister-service" () 144 11 ("delete-service" "open-service" "handle" "service-name" "name" "let" "Service-Manager" "new" "manager" "with-closed")}
        {Lisp-Entry "set-state" () 156 18 ("error" "else" "SERVICE_STOPPED" "stopped" "SERVICE_STOP_PENDING" "stop-pending" "SERVICE_PAUSED" "paused" "SERVICE_PAUSE_PENDING" "pause-pending" "SERVICE_RUNNING" "running" "SERVICE_CONTINUE_PENDING" "continue-pending" "SERVICE_START_PENDING" "start-pending" "case" "set-service-state" "cached-state" "set!" "state")}
        {Lisp-Entry "get-state" () 170 18 ("error" "else" "stopped" "SERVICE_STOPPED" "stop-pending" "SERVICE_STOP_PENDING" "paused" "SERVICE_PAUSED" "pause-pending" "SERVICE_PAUSE_PENDING" "running" "SERVICE_RUNNING" "continue-pending" "SERVICE_CONTINUE_PENDING" "start-pending" "SERVICE_START_PENDING" "get-service-state" "ecase")}
        {Lisp-Entry "process-service-control" () 183 18 ("stopped" "stop-service" "stop-pending" "paused" "pause-service" "pause-pending" "running" "continue-service" "continue-pending" "start-service" "start-pending" "case" "cached-state" "/=" "when" "get-state" "updated-state" "let")}
        {Lisp-Entry "start-service" () 196 29 ("running" "set-state" "log-success-event")}
        {Lisp-Entry "pause-service" () 201 29 ("paused" "set-state" "log-success-event")}
        {Lisp-Entry "continue-service" () 206 29 ("running" "set-state" "log-success-event")}
        {Lisp-Entry "stop-service" () 211 29 ("stopped" "set-state" "log-success-event")}
        {Lisp-Entry "run-loop" () 221 11 ("error" "0" "/=" "when" "start-service-dispatcher" "err" "let" "run" "nextmethod" "debug" "mode" "case")}
        {Lisp-Entry "service-main" () 229 11 ("run-service" "error" "/=" "0" "=" "or" "if" "get-service-error" "err" "get-service-handle" "handle" "let" "coinitialize")}
        {Lisp-Entry "setup-service" () 238 29 ()}
        {Lisp-Entry "process-service" () 242 29 ("process-service-control" "sleep" "stopped" "cached-state" "/=" "while")}
        {Lisp-Entry "run-service" () 248 11 ("process-service" "setup-service")}
        {Lisp-Entry "start-loop" () 258 11 ("EXIT_SUCCESS" "exit-process" "process-messages" "launch-service-thread")}
        {Lisp-Entry "launch-service-thread" () 264 11 ("NULL" "WM_QUIT" "taskicon-hwnd" "PostMessage" "run-service" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new")}
        {Lisp-Entry "process-messages" () 278 11 ("DispatchMessage" "TranslateMessage" "0" "NULL" "GetMessage" "while" "MSG" "new" "msg" "let")}
        {Lisp-Entry "process-taskbar-message" () 285 11 ("DefWindowProc" "else" "0" "taskbar-event" "JZ_TASKICON" "ecase" "lparam" "wparam" "msg" "hwnd")}
        {Lisp-Entry "debug-exception" () 299 11 ("EXIT_FAILURE" "exit-process" ":exception" "file:" "dump-stack" "distribution-build?" "not" "and" "when" "module-timestamped-file" "file" "let" "get-message" "log-error-event" "accountable" "frame" "exception")}
        {Lisp-Entry "process-alias" () 312 11 ("nextmethod" "else" "self" ":service" "case" "name")}
        {Lisp-Entry "taskbar-event" () 323 18 ("else" "taskbar-context-menu" "WM_RBUTTONDOWN" "taskbar-double-click" "WM_LBUTTONDBLCLK" "0" "taskbar-mouse-down" "WM_LBUTTONDOWN" "ecase" "lparam" "wparam")}
        {Lisp-Entry "taskbar-mouse-down" () 331 26 ()}
        {Lisp-Entry "taskbar-double-click" () 335 26 ()}
        {Lisp-Entry "taskbar-context-menu" () 339 26 ()}
        {Lisp-Entry "taskicon-class" () 348 11 ()}
        {Lisp-Entry "register-taskicon-class" () 352 11 ("RegisterClass" "lpszClassName" "lpszMenuName" "hbrBackground" "hCursor" "NULL" "hIcon" "hInstance" "cbWndExtra" "0" "cbClsExtra" "get-window-proc" "lpfnWndProc" "CS_DBLCLKS" "style" "set" "WNDCLASS" "new" "wc" "current-instance" "instance" "taskicon-class" "class" "let")}
        {Lisp-Entry "create-taskicon-hwnd" () 369 11 ("current-instance" "NULL" "taskicon-class" "0" "CreateWindowEx")}
        {Lisp-Entry "add-taskicon" () 382 11 ("NIM_ADD" "Shell_NotifyIcon" "hIcon" "JZ_TASKICON" "uCallbackMessage" "NIF_ICON" "NIF_MESSAGE" "bit-or" "uFlags" "uID" "hWnd" "size-of" "cbSize" "set" "LR_SHARED" "IMAGE_ICON" "int-resource" "LoadImage" "icon" "service-icon" "resource" "current-instance" "instance" "NOTIFYICONDATA" "new" "record" "let*" "create-taskicon-hwnd" "taskicon-hwnd" "set!")}
        {Lisp-Entry "remove-taskicon" () 397 11 ("NIM_DELETE" "Shell_NotifyIcon" "uID" "taskicon-hwnd" "hWnd" "size-of" "cbSize" "set" "NOTIFYICONDATA" "new" "record" "let")}
        {Lisp-Entry "track-menu" () 410 11 ("DestroyMenu" "invoke" ":action" "Event" "apply" "evt" "get-properties" "properties" "self" "sender" "action-handler:" "getf" "action-handler" "-" "element" "let*" "/=" "when" "NULL" "0" "y" "x" "get" "TPM_RETURNCMD" "TPM_RIGHTALIGN" "bit-or" "TrackPopupMenu" "taskicon-hwnd" "SetForegroundWindow" "increase!" "id:" "default?:" "separator?:" "title:" "insert-item" "others" "default?" "false" "separator?" "title" "bind-keywords" "dynamic" "function" "for-each" "1" "id" "CreatePopupMenu" "menu" "let" "GetCursorPos" "POINT" "new" "point" "with" "config")}
        {Lisp-Entry "insert-item" () 432 11 ("MF_SEPARATOR" "InsertMenuItem" "length" "cch" "dwTypeData" "wID" "0" "MFS_DEFAULT" "fState" "MFT_STRING" "MFT_SEPARATOR" "if" "fType" "MIIM_ID" "MIIM_STATE" "MIIM_TYPE" "bit-or" "fMask" "size-of" "cbSize" "set" "MENUITEMINFO" "new" "info" "with" "id" "id:" "default?" "default?:" "false" "separator?" "separator?:" "title" "title:" "menu")}}}})
"Service-Handle"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "service" "Service-Handle.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.service.Service-Handle" () 37 9 ("jazz")
      {Lisp-Entry "Service-Handle" () 44 7 ("WinAdv" "WinNT" "WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "handle" "set!" "nextmethod" "hnd")}
        {Lisp-Entry "destroy" () 56 11 ("nextmethod" "handle" "CloseServiceHandle")}
        {Lisp-Entry "delete-service" () 66 18 ("winerror" "error" "handle" "DeleteService" "not" "when")}}}})
"Service-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "service" "Service-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.service.Service-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Service-Manager" () 44 7 ("WinAdv" "WinNT" "WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "handle" "set!" "winerror" "error" "not" "if" "SC_MANAGER_ALL_ACCESS" "NULL" "OpenSCManager" "hnd" "let" "nextmethod")}
        {Lisp-Entry "destroy" () 59 11 ("nextmethod" "handle" "CloseServiceHandle")}
        {Lisp-Entry "create-service" () 69 18 ("Service-Handle" "new" "winerror" "error" "=" "if" "NULL" "SERVICE_ERROR_NORMAL" "SERVICE_DEMAND_START" "SERVICE_WIN32_OWN_PROCESS" "SERVICE_ALL_ACCESS" "either" "handle" "CreateService" "service-handle" "let" "presentation" "presentation:" "path" "name")}
        {Lisp-Entry "open-service" () 81 18 ("Service-Handle" "new" "winerror" "error" "not" "if" "SERVICE_ALL_ACCESS" "handle" "OpenService" "service-handle" "let" "name")}}}})
"Setup-Application"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "setup" "Setup-Application.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.setup.Setup-Application" () 37 9 ("jazz")
      {Lisp-Entry "Setup-Application" () 45 7 ("Application")
        {Lisp-Entry "process-name" () 48 11 ()}
        {Lisp-Entry "process-icon" () 52 11 ("Bitmap-Resource")}
        {Lisp-Entry "process-version" () 56 11 ("0" "1" "Version")}
        {Lisp-Entry "new-toplevel" () 60 11 ("Setup-Toplevel" "new")}
        {Lisp-Entry "get-installer" () 69 35 ()}}}})
"Setup-Installer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "setup" "Setup-Installer.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.setup.Setup-Installer" () 37 9 ("jazz")
      {Lisp-Entry "Setup-Installer" () 45 7 ("Object")
        {Lisp-Entry "preserved-users" () 48 8 ()}
        {Lisp-Entry "get-name" () 56 26 ()}
        {Lisp-Entry "get-version" () 60 26 ()}
        {Lisp-Entry "default-install-dir" () 64 26 ()}
        {Lisp-Entry "setup-toplevel" () 68 26 ("toplevel")}
        {Lisp-Entry "install-locales" () 77 26 ("toplevel")}
        {Lisp-Entry "setup-files" () 86 21 ("set-done" "get-version" "get-name" "format" "set-message" "migrate-files" "restore-users" "preserved-users" "if" "install-files" "reporter" "migrate" "install")}
        {Lisp-Entry "get-install-dir" () 100 18 ("true" ":overwrite-read-only?" "empty-directory" "preserve-users" "yes" "question" "type:" "get-version" "get-name" "format" "=" "when" "exists?" "not" "tokenise" "Directory" "new" "dir" "let" "message-box" "begin" "empty-string?" "if" "dirname")}
        {Lisp-Entry "install-files" () 114 29 ("copy-data" "create-directories" "reporter" "install")}
        {Lisp-Entry "copy-data" () 119 11 ("step-it" "copy-file" "src" "let" "parse" "user-message" "exists?" "not" "when" "directory?" "if" "append" "pathname" "directory" "File" "file" "case" "class" "kind" "list" "bind" "cancel-requested?" "unless" "info" "dynamic" "function" "for-each" "length" "0" "Range" "new" "set-range" "create" "collect-data" "data" "data-prefix" "Home" "Directory" "data-dir" "get-list" "prefix" "let*" "reporter" "install")}
        {Lisp-Entry "collect-data" () 142 11 ("get-output" "recursive?:" "directories?:" "true" "files?:" "false" ":full?" "cons" "put" "kind" "list" "dynamic" "function" "Home" "Directory" "iterate-directory" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "preserve-users" () 164 29 ("move-pathname" "get-tmp-directory" "dst" "src" "let" "user" "dynamic" "function" "for-each" "preserved-users" "set!" "collect-users" "users" "new-directory" "user-dir" "let*" "dir")}
        {Lisp-Entry "collect-users" () 175 29 ("recursive?:" "true" "directories?:" "false" "files?:" "get-name" "cons" "set!" "dir" "dynamic" "function" "iterate-directory" "users" "let" "user-dir")}
        {Lisp-Entry "restore-users" () 186 29 ("preserved-users" "move-pathname" "dst" "get-tmp-directory" "src" "user" "dynamic" "function" "for-each" "new-directory" "user-dir" "let" "dir")}
        {Lisp-Entry "get-migrate-dir" () 200 18 ("throw-cancel" "message-box" "exists?" "if" "tokenise" "Directory" "new" "dir" "let" "empty-string?" "unless" "dirname")}
        {Lisp-Entry "migrate-files" () 209 29 ("reporter" "migrate" "install")}
        {Lisp-Entry "migrate-file" () 213 11 ("copy-file" "create-directories" "parse" "user-message" "exists?" "when" "dst" "new-file" "src" "let" "dst-suffix" "src-suffix" "reporter" "migrate" "install")}
        {Lisp-Entry "read-version" () 222 11 ("minor" "major" "get-property" "file:" "Properties" "new" "properties" "exists?" "when" "list" "new-file" "file" "let" "dir")}
        {Lisp-Entry "for-each-user" () 230 18 ("recursive?:" "true" "directories?:" "false" "files?:" "iterate-directory" "new-directory" "users" "let" "proc" "migrate")}
        {Lisp-Entry "for-each-form" () 243 11 ("get-children" "for-each-form" "subform" "dynamic" "function" "for-each" "parent" "proc" "form")}}}})
"Setup-Project"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "setup" "Setup-Project.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.setup.Setup-Project" () 37 9 ("jazz")
      {Lisp-Entry "Setup-Project" () 47 7 ("uses-bin-directory?:" "Release" "anonymous-build:" "Setup-Application" "application-class:" "0" "1" "Version" "version:" "Bitmap-Resource" "icon:" "Project")
        {Lisp-Entry "project-binaries" () 54 11 ("project-distribution")}}}})
"Setup-Reporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "setup" "Setup-Reporter.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.setup.Setup-Reporter" () 37 9 ("jazz")
      {Lisp-Entry "Setup-Reporter" () 46 7 ("invite" "name:" "title:" "Progress-Reporter")
        {Lisp-Entry "dialog-title" () 59 16 ()}
        {Lisp-Entry "done-title" () 68 11 ()}
        {Lisp-Entry "done-action" () 72 11 ("exit")}}}})
"Setup-Toplevel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "setup" "Setup-Toplevel.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.setup.Setup-Toplevel" () 37 9 ("jazz")
      {Lisp-Entry "Setup-Toplevel" () 49 7 ("on-exit" "exit" "on-install" "form:" "Event-Handler" "action-handler:" "default?:" "install" "migrate-dir" "migrate-dir-label" "migrate-invite" "migrate-group" "display-logical?:" "dir" "protocol:" "install-dir" "install-dir-label" "install-invite" "Bitmap-Resource" "image-name:" ":large-icons" "portfolio:" "Point" "position:" "title:" "install-group" "layout-type:" "root" "name:" "caption-base:" "Dimension" "size:" "Toplevel")
        {Lisp-Entry "window-class" () 70 16 ()}
        {Lisp-Entry "initialize" () 75 16 ("Icon-Resource" "icon:" "register-toplevel" "nextmethod")}
        {Lisp-Entry "install" () 80 11 ("install-locales" "self" "setup-toplevel" "setup-install-dir" "get-installer" "installer" "get-application" "setup" "let*" "center-on-screen" "nextmethod" "rest")}
        {Lisp-Entry "new-workspace-splitter" () 90 11 ()}
        {Lisp-Entry "center-on-screen" () 94 11 ("get-v" "-" "get-h" "Point" "new" "set-position" "center" "pos" "inner" "get-desktop" "get-size" "outer" "let*")}
        {Lisp-Entry "setup-install-dir" () 101 11 ("install-dir" "locate" "set-moniker" "default-install-dir" "dir" "let" "installer")}
        {Lisp-Entry "on-browse-install" () 111 11 ("BrowseFolder-Dialog" "get-modal" "parse" "install-dir" "locate" "set-string-content" "evt")}
        {Lisp-Entry "on-browse-migrate" () 115 11 ("BrowseFolder-Dialog" "get-modal" "parse" "migrate-dir" "locate" "set-string-content" "evt")}
        {Lisp-Entry "on-return-press" () 119 18 ("on-install" "evt")}
        {Lisp-Entry "get-tab-stops" () 123 11 ("install-dir" "migrate-dir" "locate" "get-text" "list")}
        {Lisp-Entry "on-install" () 129 11 ("process-modal" "setup-files" "thread" "function" "execute:" "self" "context:" "Thread" "new" "get-guest" "reporter" "let" "Setup-Reporter" "new-dialog" "dialog" "process?" "receive" "acquire-focus" "null?" "if" "migrate-dir" "get-migrate-dir" "migrate" "install-dir" "locate" "get-text" "get-string-content" "get-install-dir" "install" "get-installer" "installer" "get-application" "setup" "let*" "Cancel-Signal" "catch" "evt")}
        {Lisp-Entry "on-exit" () 146 11 ("exit" "evt")}
        {Lisp-Entry "new-root" () 155 11 ("MetaModelerVisualUpdater-Toplevel-Root" "new")}}
      {Lisp-Entry "MetaModelerVisualUpdater-Toplevel-Root" () 159 7 ("Toplevel-Root")
        {Lisp-Entry "update-buttons" () 162 11 ("false" "maximize" "locate" "set-visible?" "nextmethod")}
        {Lisp-Entry "minimize-rect" () 167 11 ("0" "maximize-rect" "offset-rect" "right" "top")}
        {Lisp-Entry "resizeable?" () 171 11 ("false")}}}})
"Shell-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "syntax" "Shell-Syntax.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.syntax.Shell-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "Shell-Syntax" () 45 7 ("Text-Syntax")
        {Lisp-Entry "get-constituent-test" () 48 16 ("cpp/java-constituent?")}}}})
"Shell-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Shell-Text-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Shell-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Shell-Text-Preferences" () 48 7 ("Dark-Blue" "keyword-color:" "Purple" "comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "comment-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "keyword-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 69 11 ("keyword-color" "comment-color" "title-color")}
        {Lisp-Entry "get-row-instance" () 73 11 ("nextmethod" "else" "Color-Row" "new" "keyword-color" "comment-color" "title-color" "field-name" "case" "property")}}}})
"Shell-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Shell-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Shell-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Shell-Text-View" () 45 7 ("Code-Text-View")
        {Lisp-Entry "install" () 48 11 ("get-keyword-color" "Keyword" "get-comment-color" "Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "frame-icon" () 62 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-workspaces" () 66 11 ("text")}
        {Lisp-Entry "explorer-class" () 75 11 ("CppJava-Explorer")}
        {Lisp-Entry "get-context" () 84 11 ("cpp/java")}
        {Lisp-Entry "current-name" () 88 11 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" () 92 11 ("read-string-element" "0" "element" "=" "if" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" () 100 11 ("current-name")}
        {Lisp-Entry "current-expr-range" () 104 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 110 11 ("get-range" "outer-expr" "end:" "start:" "self" "CppJava-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" () 116 11 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" () 125 12 ("String" "coerce" "append" "list")}
        {Lisp-Entry "get-headers" () 131 11 ("headers")}
        {Lisp-Entry "get-first-special?" () 135 11 ("true")}
        {Lisp-Entry "get-first-chapter" () 139 11 ("get-name" "null?" "text-beginning" "list" "get-moniker" "file" "let" "car" "get-first-special?" "if" "lst")}
        {Lisp-Entry "get-remaining-chapters" () 150 11 ("cdr" "get-first-special?" "if" "lst")}
        {Lisp-Entry "Keywords" () 161 12 ()}
        {Lisp-Entry "get-keywords" () 179 11 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" () 188 14 ()}
        {Lisp-Entry "Syntax-Automata" () 191 14 ()}
        {Lisp-Entry "syntax-targets" () 195 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 201 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 207 11 ("get-keywords" "keyword" "str" "dynamic" "function" "map" "false" "comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" () 212 11 ("cpp/java-constituent?" "self" "false" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "preferences" () 221 11 ("shell-text" "documents" "get-preferences")}
        {Lisp-Entry "colorize-type" () 225 11 ("Keyword" "colorize-keyword" "keyword" "Title" "Comment" "colorize-line-comment" "comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}}})
"Shortcut"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "action" "Shortcut.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.action.Shortcut" () 37 9 ("jazz")
      {Lisp-Entry "Shortcut" () 44 7 ("Object")
        {Lisp-Entry "modifiers" () 47 8 ()}
        {Lisp-Entry "key" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("key~self" "standardize-modifiers" "modifiers~self" "set!" "nextmethod" "key" "modifiers")}
        {Lisp-Entry "standardize-modifiers" () 57 11 (":control" ":shift" ":alt" "cons" "set!" "memq?" "when" "modifier" "dynamic" "function" "try" "standard" "let" "modifiers")}
        {Lisp-Entry "hash-object" () 69 11 ("eqv-hash" "+" "modifiers" "key" "cons" "equal-hash")}
        {Lisp-Entry "compare-object" () 76 11 (":not-equal" "else" ":equal" "get-key" "key" "get-modifiers" "modifiers" "=" "and" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 86 11 ("key" "modifiers" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-modifiers" () 98 18 ("modifiers")}
        {Lisp-Entry "get-key" () 102 18 ("key")}
        {Lisp-Entry "present" () 111 18 ("key" "modifiers" "format")}
        {Lisp-Entry "present-shortcut" () 115 18 ("->string" "format" "key" "char?" "if" "localize-accelerator" ":shift" ":alt" "localize" "append" "set!" "modifiers" ":control" "memq?" "when" "str" "let")}
        {Lisp-Entry "Localized-Accelerators" () 126 14 ("Multiply" "Subtract" "Add" "Delete" "Insert" "Next" "Prior" "Down" "Right" "Up" "Left" "End" "Home" "Tab" "Space" "Return" "Backspace")}
        {Lisp-Entry "localize-accelerator" () 146 11 ("cdr" "localize" "not" "if" "Localized-Accelerators" "assq" "info" "let" "accelerator")}}}})
"Shortcut-Chooser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Shortcut-Chooser.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Shortcut-Chooser" () 37 9 ("jazz")
      {Lisp-Entry "Shortcut-Chooser" () 47 7 ("on-cancel" "cancel" "on-ok" ":host" "default?:" "accept" "on-choose" "action-handler:" "enabled?:" "7" "choose" "south" "on-escape-press" "escape-press-handler:" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "bindings" "fill" "content" "vscroll?:" "hscroll?:" "document" "entry" "style:" "edge" "border-type:" "bindings-border" "6" "center" "2" "0" "Default-GUI" "description" "Label-Bold" "Font" "font:" "9" "Point" "position:" "title:" "title" "name:" "north" "location:" "Dimension" "size:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "action-name" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "selected-shortcut" () 53 8 ()}
        {Lisp-Entry "finish" () 77 11 ("get-tree" "acquire-focus" "setup-chooser" "setup-description" "nextmethod" "rest")}
        {Lisp-Entry "dialog-title" () 90 16 ()}
        {Lisp-Entry "dialog-size" () 95 16 ("Dimension")}
        {Lisp-Entry "dialog-class" () 100 16 ("Shortcut-Chooser-Host-Dialog")}
        {Lisp-Entry "Shortcut-Chooser-Host-Dialog" () 105 14 ("Host-Dialog")
          {Lisp-Entry "destroy" () 108 13 ("nextmethod" "get-application" "set-accelerators-hook")}}
        {Lisp-Entry "setup-description" () 118 11 ("action-name" "format" "description" "locate" "set-title")}
        {Lisp-Entry "setup-chooser" () 123 11 ("choose" "shortcut" "function" "get-application" "set-accelerators-hook")}
        {Lisp-Entry "get-tree" () 135 11 ("bindings" "locate")}
        {Lisp-Entry "on-choose" () 144 11 ("setup-chooser" "accept" "false" "choose" "locate" "set-enabled?" "get-tree" "remove-every-row" "selected-shortcut" "set!" "evt")}
        {Lisp-Entry "on-return-press" () 152 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "accept" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "on-escape-press" () 158 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "get-modal-result" () 163 11 ("selected-shortcut")}
        {Lisp-Entry "choose" () 172 11 ("accept" "true" "choose" "locate" "set-enabled?" "user-data:" "present" "Tree-Label" "Bitmap-Resource" "image:" "get-parent" "get-name" "format" "title:" "Tree-Node" "new" "children:" "add-row" "action" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "list" "view-bindings" "get-tree" "tree" "get-application" "get-bindings-designer" "designer" "selected-shortcut" "set!" "get-host" "end-modal" "null?" "if" "gather-conflicts" "conflicts" "let" "shortcut")}
        {Lisp-Entry "gather-conflicts" () 191 11 ("get-output" "get-application" "get-bindings" "get-children" "put" "equal?" "when" "get-shortcut" "action-shortcut" "action" "actions" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let" "shortcut")}
        {Lisp-Entry "Header-View" () 208 9 ("View")
          {Lisp-Entry "Header-Color" () 211 16 ("blue:" "green:" "red:" "Color" "new")}
          {Lisp-Entry "draw" () 215 13 ("Header-Color" "White" "name:" "Color" "get-bounds" "gradient-fill" "lv" "lh" "update" "context" "dc")}}}}})
"Showcase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "showcase" "Showcase.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.showcase.Showcase" () 37 9 ("jazz")
      {Lisp-Entry "Showcase" () 46 7 ("threads" "threads-sheet" "text-sheet" "tree-sheet" "outline-sheet" "b" "Purple" "p" "vc" "vb" "va" "v2" "v1" "2" "branch:" "on-set-active-branch" "s2" "Dark-Gray" "branches-sheet" "Red" "wiped" "on-wipe" "form:" "Event-Handler" "action-handler:" "effects-sheet" "second" "first" "division:" "horz" "orientation:" "split" "state:" "splitter" "layout-b2" "Dark-Green" "center" "Dark-Blue" "5" "Dark-Red" "head" "location:" "flow" "layout" "solid" "layout-b1" "layout-sheet" "ss" "scaling-sheet" "0" "ds" "drawing-sheet" "selected?:" "8" "condensed?:" "content:" "choices:" "b9" "b8" "b7" "b6" "b5" "b4" "b3" "b2" "image-name:" "b1" "width:" "row" "selection-mode:" ":icons" "portfolio:" "tv" "fill" "layout-type:" "tree-border" "Blue" "dcs" "Green" "Color" "background:" "rs" "jt" "vscroll?:" "hscroll?:" "edge" "border-type:" "text-border" "t" "Bitmap-Resource" "icon:" "i" "content" "title:" "views-sheet" "6" "Point" "position:" "tab" "name:" "Dimension" "size:" "WinGDI" "WinUser" "WinKernel" "WinBase" "WinDef" "Windows" "System" "Utilities" "Development" "Language" "View")
        {Lisp-Entry "install" () 171 11 ("install-views" "nextmethod" "rest")}
        {Lisp-Entry "frame-icon" () 182 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 187 16 ()}
        {Lisp-Entry "frame-position" () 192 16 ("Point")}
        {Lisp-Entry "frame-size" () 197 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 201 11 ("home")}
        {Lisp-Entry "resize" () 210 11 ("layout-b2" "layout-b1" "locate-component" "tab" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-set-active-branch" () 217 11 ("set-active-branch" "2" "view" "branch:" "get-property" "child" "branch" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "get-stage" () 229 11 ("locate" "get-content" "name")}
        {Lisp-Entry "install-views" () 238 11 ("install-tree-view" "install-text")}
        {Lisp-Entry "install-text" () 243 11 ("jt" "locate" "get-controller" "set-moniker" "exists?" "when" "Jedi-Project" "File" "file" "let")}
        {Lisp-Entry "install-tree-view" () 249 11 ("0" "naturals" "5" "=" "when" "father:" "cell" "format" "title" "let*" "n" "dynamic" "function" "for-each" "node" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "tv" "locate" "tree" "let")}
        {Lisp-Entry "Region-Showcase" () 272 9 ("View")
          {Lisp-Entry "draw" () 275 13 ("8" "Bitmap-Resource" "get-application" "get-icons-cache" "draw-image" "Red" "Color" "fill-region" "or" "combine!" "sec" "Rect" "rect:" "frs" "Region" "new" "rgn" "with-closed" "draw-text" "Label-Bold" "name:" "Font" "set-font" ":transparent" "set-bk-mode" "lv" "lh" "update" "context" "dc")}}
        {Lisp-Entry "DC-Showcase" () 293 9 ("View")
          {Lisp-Entry "draw" () 296 13 ("Point" ":destination" "bit-blit" "Green" "name:" "Color" "0" "Rect" "fill-rect" "size:" "Memory-DC" "new" "memory-dc" "with-closed" "Dimension" "size" "let" "lv" "lh" "update" "context" "dc")}}
        {Lisp-Entry "Draw-Showcase" () 308 9 ("View")
          {Lisp-Entry "System-Colors" () 311 16 ("GRADIENTINACTIVECAPTION" "GRADIENTACTIVECAPTION" "HOTLIGHT" "INFOBK" "INFOTEXT" "3DLIGHT" "3DDKSHADOW" "BTNHIGHLIGHT" "INACTIVECAPTIONTEXT" "BTNTEXT" "GRAYTEXT" "BTNSHADOW" "BTNFACE" "HIGHLIGHTTEXT" "HIGHLIGHT" "APPWORKSPACE" "INACTIVEBORDER" "ACTIVEBORDER" "9" "CAPTIONTEXT" "8" "WINDOWTEXT" "7" "MENUTEXT" "6" "WINDOWFRAME" "5" "WINDOW" "4" "MENU" "3" "INACTIVECAPTION" "2" "ACTIVECAPTION" "1" "BACKGROUND" "0" "SCROLLBAR")}
          {Lisp-Entry "draw" () 342 13 ("false" "Code" "Label-Bold" "Default-GUI" "Ansi-Fixed" "System" "length" "naturals" "System-Colors" "blue-part" "green-part" "red-part" "format" "->string" "*" "+" "draw-text" "get-ref" "ref" ":system" "color" "no" "name" "bind" "n" "info" "dynamic" "function" "for-each" "point-size:" "font-name:" "frame-rect" "Dark" "Medium" "Light" "White" "Black" "set-text-color" "R2_WHITE" "R2_MERGEPEN" "R2_MERGEPENNOT" "R2_COPYPEN" "R2_MERGENOTPEN" "R2_NOP" "R2_NOTXORPEN" "R2_MASKPEN" "R2_NOTMASKPEN" "R2_XORPEN" "R2_NOT" "R2_MASKPENNOT" "R2_NOTCOPYPEN" "R2_MASKNOTPEN" "R2_NOTMERGEPEN" "R2_BLACK" "increase!" "draw-rop" "-" "v" "h" "i" "let*" "draw-info" "8" "BDR_SUNKENOUTER" "7" "BDR_RAISEDOUTER" "6" "BDR_SUNKENINNER" "5" "BDR_RAISEDINNER" "4" "EDGE_SUNKEN" "3" "EDGE_RAISED" "2" "EDGE_ETCHED" "1" "EDGE_BUMP" "draw-edge" "Ansi-Var" "Font" "set-font" "Green" "name:" "Color" "0" "fill-rect" "Rect" "new" "draw-gradient" "lv" "lh" "update" "context" "dc")}
          {Lisp-Entry "draw-gradient" () 410 13 ("Blue" "Red" "name:" "Color" "gradient-fill" "rect" "dc")}
          {Lisp-Entry "draw-edge" () 414 13 ("->string" "get-top" "get-left" "+" "draw-text" "BF_RECT" "draw-edge" "Label-Bold" "name:" "Font" "set-font" "no" "edge" "rect" "dc")}
          {Lisp-Entry "draw-info" () 420 13 ("format" "draw-text" "edge" "no" "top" "dc")}
          {Lisp-Entry "draw-rop" () 425 13 ("R2_COPYPEN" "fill-region" "rect:" "Region" "region" "with-closed" "set-rop" "Green" "White" "Blue" "1" "2" "draw-text" "Red" "set-text-color" "Black" "name:" "Color" "fill-rect" "+" "Rect" "new" "rect" "let" "rop" "v" "h" "dc")}}
        {Lisp-Entry "Scaling-Showcase" () 447 9 ("4" "client:" "0" "stage" "content" "vscroll?:" "hscroll?:" "scroller" "edge" "border-type:" "5" "border" "on-refresh" "refresh" "on-report" "form:" "Event-Handler" "action-handler:" "title:" "report" "drawing" "mapping" "scaling" "name:" "blue:" "green:" "red:" "Color" "border-color:" "Dimension" "size:" "8" "Point" "position:" "View")
          {Lisp-Entry "Scaling-Factors" () 466 16 ()}
          {Lisp-Entry "Mapping-Modes" () 476 16 ("MM_ANISOTROPIC" "MM_ISOTROPIC" "MM_TWIPS" "MM_HIENGLISH" "MM_LOENGLISH" "MM_HIMETRIC" "MM_LOMETRIC" "MM_TEXT" "list")}
          {Lisp-Entry "Drawing-Modes" () 488 16 ("handcoded" "view")}
          {Lisp-Entry "Transform-Info" () 493 16 ("eq?" "new-hashtable")}
          {Lisp-Entry "view-scaling" () 497 10 ()}
          {Lisp-Entry "view-mapping" () 498 10 ("MM_ISOTROPIC")}
          {Lisp-Entry "view-drawing" () 499 10 ("view")}
          {Lisp-Entry "install" () 502 13 ("stage" "update-scrollbars" "view" "Drawing-Modes" "drawing" "MM_ISOTROPIC" "Mapping-Modes" "mapping" "set-value" "Scaling-Factors" "scaling" "locate" "set-choices" "nextmethod" "rest")}
          {Lisp-Entry "register-info" () 513 23 ("list" "Transform-Info" "hash-set!" "clip" "vex" "wex" "vor" "wor" "size" "lie" "name")}
          {Lisp-Entry "on-report" () 517 13 ("get-application" "fresh-prompt" "green" "red" "blue" "stage" "report" "evt")}
          {Lisp-Entry "report" () 525 13 ("get-bottom" "get-right" "get-top" "get-left" "get-height" "get-width" "get-v" "get-h" ":console" "format" "Transform-Info" "hash-ref" "clip" "vex" "wex" "vor" "wor" "size" "lie" "bind" "name")}
          {Lisp-Entry "on-refresh" () 531 13 ("invalidate-view" "evt")}
          {Lisp-Entry "get-view-scaling" () 535 20 ("view-scaling")}
          {Lisp-Entry "set-view-scaling" () 539 20 ("/=" "set-scaled?" "/" "stage" "locate" "set-scaling" "view-scaling" "set!" "value")}
          {Lisp-Entry "get-view-mapping" () 545 20 ("view-mapping")}
          {Lisp-Entry "set-view-mapping" () 549 20 ("invalidate-view" "view-mapping" "set!" "value")}
          {Lisp-Entry "get-view-drawing" () 554 20 ("view-drawing")}
          {Lisp-Entry "set-view-drawing" () 558 20 ("invalidate-view" "view-drawing" "set!" "value")}
          {Lisp-Entry "Scaling-Combo" () 563 11 ("Combo-Box")
            {Lisp-Entry "combo-choice" () 566 15 ("get-value" "set-view-scaling")}}
          {Lisp-Entry "Mapping-Combo" () 570 11 ("Combo-Box")
            {Lisp-Entry "combo-choice" () 573 15 ("get-value" "set-view-mapping")}}
          {Lisp-Entry "Drawing-Combo" () 577 11 ("Combo-Box")
            {Lisp-Entry "combo-choice" () 580 15 ("get-value" "set-view-drawing")}}
          {Lisp-Entry "Scaled-Stage" () 584 11 ("Dark-Green" "green" "Orange" "7" "orange" "Dark-Red" "6" "red" "Dark-Blue" "Color" "background:" "5" "client:" "Dimension" "size:" "Point" "position:" "blue" "name:" "Scaled-View")
            {Lisp-Entry "draw" () 596 15 ("Blue" "Red" "gradient-fill" "draw-info" "1" "EDGE_BUMP" "draw-edge" "Ansi-Var" "Font" "set-font" "Green" "name:" "Color" "0" "Rect" "new" "fill-rect" "lv" "lh" "update" "context" "dc")}
            {Lisp-Entry "draw-edge" () 604 15 ("->string" "get-top" "get-left" "+" "draw-text" "BF_RECT" "draw-edge" "Label-Bold" "name:" "Font" "set-font" "no" "edge" "rect" "dc")}
            {Lisp-Entry "draw-info" () 610 15 ("format" "draw-text" "edge" "no" "top" "dc")}}}
        {Lisp-Entry "on-wipe" () 620 11 ("Blue" "Red" "name:" "Color" "get-background" "eq?" "if" "set-background" "delay:" "right" "direction:" "Wipe-Effect" "new" "get-root" "set-effect" "wiped" "locate" "canvas" "let" "evt")}}}})
"Signal"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "signal" "Signal.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.signal.Signal" () 37 9 ("jazz")
      {Lisp-Entry "Signal" () 44 7 ("Exception")
        {Lisp-Entry "forwardable?" () 47 26 ("false")}}}})
"Signature"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Signature.fusion"} {Time 128360604040000000L}
    {Lisp-Entry "jazz.language.walker.Signature" () 37 9 ("jazz")
      {Lisp-Entry "Signature" () 40 7 ("Object")
        {Lisp-Entry "parameters" () 43 8 ("generate")}
        {Lisp-Entry "mandatory" () 44 8 ("generate")}
        {Lisp-Entry "rest?" () 45 8 ("generate")}}}})
"Slide"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "slide" "Slide.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.slide.Slide" () 37 9 ("jazz")
      {Lisp-Entry "Slide" () 45 7 ("Branch")
        {Lisp-Entry "level" () 48 12 ("generate" "accessors")}}}})
"Slide-Conductor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "slide" "Slide-Conductor.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.slide.Slide-Conductor" () 37 9 ("jazz")
      {Lisp-Entry "Slide-Conductor" () 45 7 ("Component")
        {Lisp-Entry "step" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "default-name" () 51 11 ("conductor")}}}})
"Slot-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Slot-Declaration.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.declaration.Slot-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Slot-Declaration" () 40 7 ("Field-Declaration")
        {Lisp-Entry "initialize" () 43 8 ("generate")}
        {Lisp-Entry "getter-name" () 44 8 ("generate")}
        {Lisp-Entry "setter-name" () 45 8 ("generate")}}}})
"Slot-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Slot-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Slot-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Slot-Doc" () 45 7 ("Definition-Doc")
        {Lisp-Entry "construct-literal" () 48 16 (":doc" "name:" "self" "new" "doc" "name" "context")}
        {Lisp-Entry "get-class-image" () 58 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" () 62 11 ("package-name")}}}})
"Smoker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "smoker" "Smoker.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.smoker.Smoker" () 37 9 ("jazz")
      {Lisp-Entry "Smoker" () 44 7 ("Jedi")
        {Lisp-Entry "conclude-process" () 47 11 ("smoke" "Smoker-Suite" "new" "suite" "let" "rest")}}}})
"Smoker-Builder"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "smoker" "Smoker-Builder.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.smoker.Smoker-Builder" () 37 9 ("jazz")
      {Lisp-Entry "Smoker-Builder" () 44 7 ("Object")
        {Lisp-Entry "Smoker-Project" () 47 14 ()}
        {Lisp-Entry "build/run" () 51 18 ("set-done" "run" "step-it" "cancel-requested?" "unless" "build" "wait-for" "user-message" "2" "0" "Range" "set-range" "Smoker-Project" "Launcher-Project" "find-project" "project" "let" "activity" "function" "execute:" "self" "context:" "name:" "Activity" "new")}
        {Lisp-Entry "build" () 72 11 ("false" ":keep-reporter?" "true" "threaded?:" "build" "project")}
        {Lisp-Entry "run" () 76 11 ("false" ":wait?" "create-process" "format" "command" "outputed-file" "parse" "pathname" "let*" "project")}}}})
"Smoker-Suite"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "smoker" "Smoker-Suite.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.smoker.Smoker-Suite" () 37 9 ("jazz")
      {Lisp-Entry "Smoker-Suite" () 44 7 ("Object")
        {Lisp-Entry "smoke" () 47 18 ("run-builds" "run-searches" "run-showcase" "run-validations")}
        {Lisp-Entry "run-validations" () 69 11 ("set-done" "step-it" "sleep" "false" ":report-success?" "validate" "Validation-Suite" "suite" "let" "user-message" "1" "0" "Range" "set-range" "true" "while" "activity" "function" "execute:" "self" "context:" "name:" "Activity" "new")}
        {Lisp-Entry "run-showcase" () 92 11 ("5" "0" "naturals" "add-threaded-icon" "n" "dynamic" "function" "for-each" "threads" "let" "threads-sheet" "set-selection-name" "locate" "tab" "get-guest" "showcase" "Showcase" "new-frame" "frame" "let*")}
        {Lisp-Entry "run-searches" () 108 11 ("on-search" "set!" "sleep" "wait-for" "when" "while" "running" "let" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "set-search-targets" "end-edition" "true" "set-visible?" "targets" "locate" "tree" "get-search" "view" "get-guest" "manager" "get-search-manager" "frame" "get-application" "appl" "let*")}
        {Lisp-Entry "run-builds" () 136 11 ("Puzzle-Project" "Yoda-Project" "0" "Launcher-Project" "run-project-builds")}
        {Lisp-Entry "run-project-builds" () 142 11 ("false" ":keep-reporter?" "threaded?:" "build" "set!" "find-project" "project" "wait-for" "when" "true" "while" "running" "let" "sleep" "thread" "function" "execute:" "self" "context:" "format" "name:" "Thread" "new" "wait-beetween" "0" "wait-before" "project-title" "project-class" "title")}}}})
"Socket"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "network" "Socket.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.network.Socket" () 37 9 ("jazz")
      {Lisp-Entry "Socket" () 50 7 ("string" "socket-send-string" "socket-send-raw" "socket-receive-string" "socket-receive-raw" "socket-accept" "socket-listen" "get-socket-peer-port" "get-socket-peer-host" "get-socket-port" "get-socket-host" "bind-socket" "connect-socket" "int" "close-socket" "create-socket" "WinInet" "WinSock" "WinKernel" "WinBase" "WinDef" "System" "Utilities" "Object")
        {Lisp-Entry "Linger" () 53 14 ("5")}
        {Lisp-Entry "name" () 57 8 ()}
        {Lisp-Entry "handle" () 58 8 ()}
        {Lisp-Entry "initialize" () 61 11 ("destroy-mandatory" "Linger" "create-socket" "either" "handle~self" "name~self" "set!" "nextmethod" "handle" "handle:" "name" "name:")}
        {Lisp-Entry "destroy" () 68 11 ("nextmethod" "handle" "close-socket")}
        {Lisp-Entry "get-name" () 78 18 ("name")}
        {Lisp-Entry "set-name" () 82 18 ("name" "set!" "value")}
        {Lisp-Entry "get-handle" () 86 18 ("handle")}
        {Lisp-Entry "get-host" () 90 18 ("handle" "get-socket-host" ":ip" "Host" "new")}
        {Lisp-Entry "get-port" () 94 18 ("handle" "get-socket-port")}
        {Lisp-Entry "get-peer-host" () 98 18 ("handle" "get-socket-peer-host" ":ip" "Host" "new")}
        {Lisp-Entry "get-peer-port" () 102 18 ("handle" "get-socket-peer-port")}
        {Lisp-Entry "connect" () 111 18 ("get-port-number" "get-ip" "handle" "connect-socket" "port" "host")}
        {Lisp-Entry "listen" () 120 18 ("socket-listen" "get-port-number" "get-ip" "handle" "bind-socket" "name:" "Host" "either" "let" "any" "port" "port:" "host" "host:")}
        {Lisp-Entry "accept" () 126 18 ("handle" "socket-accept")}
        {Lisp-Entry "receive-raw" () 135 18 ("handle" "socket-receive-raw")}
        {Lisp-Entry "receive-string" () 139 18 ("handle" "socket-receive-string")}
        {Lisp-Entry "receive-object" () 143 18 ("receive-string" "read-string-element")}
        {Lisp-Entry "send-raw" () 147 18 ("handle" "socket-send-raw" "block")}
        {Lisp-Entry "send-string" () 151 18 ("handle" "socket-send-string" "string")}
        {Lisp-Entry "send-object" () 155 18 (":reader" "->string" "send-string" "object")}
        {Lisp-Entry "Port-Numbers" () 164 19 ("router-stub-listener" "http" "7" "echo" "0" "any")}
        {Lisp-Entry "get-port-number" () 171 23 ("Port-Numbers" "assq" "cdr" "integer?" "if" "name")}
        {Lisp-Entry "present-socket" () 182 26 ("get-peer-port" "get-peer-host" "get-port" "get-host" "name" "format")}
        {Lisp-Entry "int" () 196 17 ()}
        {Lisp-Entry "void" () 197 17 ()}
        {Lisp-Entry "void" () 198 17 ()}
        {Lisp-Entry "void" () 199 17 ()}
        {Lisp-Entry "int" () 200 17 ()}
        {Lisp-Entry "int" () 201 17 ()}
        {Lisp-Entry "int" () 202 17 ()}
        {Lisp-Entry "int" () 203 17 ()}
        {Lisp-Entry "void" () 204 17 ()}
        {Lisp-Entry "int" () 205 17 ()}
        {Lisp-Entry "Object" () 206 17 ()}
        {Lisp-Entry "Object" () 207 17 ()}
        {Lisp-Entry "int" () 208 17 ()}
        {Lisp-Entry "int" () 209 17 ()}}}})
"Socket-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "network" "Socket-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.network.Socket-Error" () 37 9 ("jazz")
      {Lisp-Entry "Socket-Error" () 44 7 ("Error")
        {Lisp-Entry "no" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("no~self" "set!" "set-message" "nextmethod" "no" "message")}
        {Lisp-Entry "get-no" () 56 18 ("no")}
        {Lisp-Entry "get-message" () 60 11 ("no" "message" "format")}}}})
"Socket-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "network" "Socket-Listener.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.network.Socket-Listener" () 37 9 ("jazz")
      {Lisp-Entry "Socket-Listener" () 44 7 ("Object")}}})
"Solution"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "solution" "Solution.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.solution.Solution" () 37 9 ("jazz")
      {Lisp-Entry "Solution" () 45 7 ("Component")}}})
"Sound-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "resource" "Sound-File.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.resource.Sound-File" () 37 9 ("jazz")
      {Lisp-Entry "Sound-File" () 45 7 ("Resource-File")
        {Lisp-Entry "resource-class" () 48 11 ("Sound-Resource")}}}})
"Sound-Resource"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "resource" "Sound-Resource.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.resource.Sound-Resource" () 37 9 ("jazz")
      {Lisp-Entry "Sound-Resource" () 44 7 ("Resource")
        {Lisp-Entry "resource-type" () 53 16 ("sound")}}}})
"SourceSafeTypeLib"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "com" "SourceSafeTypeLib.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "SourceSafeTypeLib" () 37 9 ("jazz")}})
"Special-Form"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Special-Form.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Special-Form" () 37 9 ("jazz")
      {Lisp-Entry "Special-Form" () 40 7 ("Form-Binding")
        {Lisp-Entry "walk" () 43 8 ("generate")}}}})
"Splash-Screen"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "tools" "Splash-Screen.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.tools.Splash-Screen" () 37 9 ("jazz")
      {Lisp-Entry "Splash-Screen" () 45 7 (":headers" "5" "threads" "List-Control" "on-update" "on-resume" "on-suspend" ":action-method" "parent:" "action-handler:" "6" "Push-Button" "size:" "Point" "position:" "text:" "Splash-Screen" "WinUser" "Language" "Palette")
        {Lisp-Entry "install" () 56 11 ("update-threads" "nextmethod" "rest")}
        {Lisp-Entry "on-update" () 61 11 ("length" "end:" "0" "start:" "Naturals" "new" "thread-state" "format" "2" "set-item-text" "n" "thread" "dynamic" "function" "for-each" "set-items" "child" "lv" "get-threads" "threads" "let" "evt")}
        {Lisp-Entry "on-suspend" () 71 11 ("thread" "suspend" "evt")}
        {Lisp-Entry "on-resume" () 75 11 ("thread" "resume" "evt")}}}})
"Split-Layout"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "layout" "Split-Layout.fusion"} {Time 128369339200000000L}
    {Lisp-Entry "jazz.ui.layout.Split-Layout" () 37 9 ("jazz")
      {Lisp-Entry "Split-Layout" () 45 7 ("Layout")
        {Lisp-Entry "layout" () 48 11 ("layout-split" "split" "layout-zoom" "zoom" "case" "layout-empty" "not" "if" "insets" "insets:" "division" "division:" "mode" "mode:" "orientation" "orientation:" "state" "state:" "separator" "separator:" "height" "width" "figures")}
        {Lisp-Entry "layout-empty" () 56 11 ("false" "set-visible?" "figure" "dynamic" "function" "for-each" "insets" "division" "mode" "orientation" "height" "width" "figures")}
        {Lisp-Entry "layout-zoom" () 63 11 ("get-bottom" "get-right" "-" "Dimension" "set-size" "get-top" "get-left" "Point" "new" "set-position" "get-visible?" "when" "figure" "dynamic" "function" "for-each" "insets" "division" "mode" "orientation" "separator" "height" "width" "figures")}
        {Lisp-Entry "layout-split" () 72 11 ("true" "set-visible?" "Rect" "get-right" "get-bottom" "Dimension" "set-size" "get-top" "get-left" "Point" "new" "set-position" "1" "line" "2" "edge" "4" "resize" "splitter-size" "-" "positive?" "if" "abs" "percent" "round" "pct" "relative" "+" "set!" "negative?" "absolute" "vert" "horz" "case" "size" "let" "error" "not" "unspecified" "bar" "second" "first" "get-location" "=" "figure" "find-if" "location" "dynamic" "function" "find" "let*" "when" "insets" "division" "mode" "orientation" "separator" "height" "width" "figures")}}}})
"Splitter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Splitter.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Splitter" () 37 9 ("jazz")
      {Lisp-Entry "Splitter" () 45 7 ("View")
        {Lisp-Entry "orientation" () 48 12 ("set-orientation" "get-orientation" "vert")}
        {Lisp-Entry "move-handler" () 49 12 ("set-move-handler" "get-move-handler")}
        {Lisp-Entry "dragging?" () 52 8 ("false")}
        {Lisp-Entry "base-position" () 53 8 ()}
        {Lisp-Entry "displacement" () 54 8 ()}
        {Lisp-Entry "get-orientation" () 62 18 ("orientation")}
        {Lisp-Entry "set-orientation" () 66 18 ("orientation" "set!" "or")}
        {Lisp-Entry "cursor-update" () 75 11 (":horizontal-splitter" "horz" ":vertical-splitter" "vert" "orientation" "case" "set-cursor" "pos")}
        {Lisp-Entry "mouse-down" () 87 11 ("acquire-capture" "0" "Point" "displacement" "base-position" "true" "dragging?" "set!" "pos")}
        {Lisp-Entry "drag-move" () 94 11 ("get-v" "horz" "self" "process-move" "0" "get-h" "move-figure" "vert" "orientation" "case" "+" "displacement" "set!" "base-position" "-" "delta" "let" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" () 107 11 ("false" "set!" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "get-move-handler" () 118 18 ("move-handler")}
        {Lisp-Entry "set-move-handler" () 122 18 ("move-handler" "set!" "value")}
        {Lisp-Entry "process-move" () 126 26 ("self" "invoke" ":delta" ":move" "Event" "new" "evt" "let" "move-handler" "when" "delta" "sender")}
        {Lisp-Entry "get-row-class" () 137 11 ("nextmethod" "else" "Handler-Row" "move-handler" "field-name" "case" "property")}}}})
"Splitter-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Splitter-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Splitter-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Splitter-Preferences-Class" () 46 7 ("Class")
        {Lisp-Entry "get-class-image" () 49 11 ("Bitmap-Resource")}}
      {Lisp-Entry "Splitter-Preferences" () 53 7 ("Bitmap-Resource" "icon:" "title:" "Figure-Preferences" "Splitter-Preferences-Class")
        {Lisp-Entry "separator" () 56 12 ("generate" "accessors" "resize")}
        {Lisp-Entry "state" () 57 12 ("generate" "accessors")}
        {Lisp-Entry "zoomed" () 58 12 ("generate" "accessors")}
        {Lisp-Entry "orientation" () 59 12 ("generate" "accessors" "horz")}
        {Lisp-Entry "mode" () 60 12 ("generate" "accessors" "absolute")}
        {Lisp-Entry "division" () 61 12 ("generate" "accessors")}
        {Lisp-Entry "insets" () 62 12 ("generate" "accessors" "0" "Rect")}
        {Lisp-Entry "apply-preferences" () 74 11 ("parent:" "Splitter-Window" "new" "apply-to" "assert" "parent")}
        {Lisp-Entry "apply-to" () 79 18 ("zoom" "find-child-located" "zoomed-child" "let" "zoomed" "layout-window" "get-children" "get-guest" "host-activate" "View-Host" "when" "child" "children" "apply-preferences" "pref" "dynamic" "function" "for-each" "location" "set-location" "Workspace-Splitter" "is?" "unless" "get-visible?" "set-visible?" "insets" "set-insets" "division" "set-division" "mode" "set-mode" "orientation" "set-orientation" "state" "set-state" "separator" "set-separator" "remove-children" "splitter")}
        {Lisp-Entry "get-categorized-properties" () 108 11 ("insets" "division" "mode" "orientation" "state" "location")}
        {Lisp-Entry "get-addable-classes" () 112 11 ("Stage-Preferences" "Docked-Preferences" "Pad-Preferences" "Splitter-Preferences" "list")}}}})
"Splitter-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Splitter-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Splitter-View" () 37 9 ("jazz")
      {Lisp-Entry "Splitter-View" () 47 7 ("Medium" "name:" "Color" "background:" "View")
        {Lisp-Entry "separator" () 50 12 ("set-separator" "get-separator" "resize")}
        {Lisp-Entry "state" () 51 12 ("set-state" "get-state")}
        {Lisp-Entry "orientation" () 52 12 ("set-orientation" "get-orientation" "horz")}
        {Lisp-Entry "mode" () 53 12 ("set-mode" "get-mode" "absolute")}
        {Lisp-Entry "division" () 54 12 ("set-division" "get-division")}
        {Lisp-Entry "insets" () 55 12 ("set-insets" "get-insets" "0" "Rect")}
        {Lisp-Entry "after-handler" () 56 12 ("set-after-handler" "get-after-handler")}
        {Lisp-Entry "split-layout" () 59 8 ("Split-Layout" "new")}
        {Lisp-Entry "bar-bounds" () 60 8 ()}
        {Lisp-Entry "dragging?" () 61 8 ("false")}
        {Lisp-Entry "previous" () 62 8 ()}
        {Lisp-Entry "get-separator" () 74 18 ("separator")}
        {Lisp-Entry "set-separator" () 78 18 ("separator" "set!" "value")}
        {Lisp-Entry "get-state" () 82 18 ("state")}
        {Lisp-Entry "set-state" () 86 18 ("layout-view" "state" "set!" "value")}
        {Lisp-Entry "get-orientation" () 91 18 ("orientation")}
        {Lisp-Entry "set-orientation" () 95 18 ("layout-view" "orientation" "set!" "value")}
        {Lisp-Entry "get-mode" () 100 18 ("mode")}
        {Lisp-Entry "set-mode" () 104 18 ("layout-view" "mode" "set!" "value")}
        {Lisp-Entry "get-division" () 109 18 ("division")}
        {Lisp-Entry "set-division" () 113 18 ("layout-view" "division" "set!" "value")}
        {Lisp-Entry "get-insets" () 118 18 ("insets")}
        {Lisp-Entry "set-insets" () 122 18 ("layout-view" "insets" "set!" "value")}
        {Lisp-Entry "get-after-handler" () 127 18 ("after-handler")}
        {Lisp-Entry "set-after-handler" () 131 18 ("after-handler" "set!" "value")}
        {Lisp-Entry "layout" () 140 11 ("insets" "insets:" "division:" "mode:" "orientation:" "state" "state:" "separator" "separator:" "children" "split-layout" "layout" "bar-bounds" "set!" "vert" "horz" "orientation" "case" "+" "0" "division" ">" "div" "get-height" "height" "get-width" "width" "absolute" "dragging?" "if" "mode" "get-size" "size" "let*")}
        {Lisp-Entry "zoom" () 154 18 ("layout-view" "children" "eq?" "set-visible?" "child" "dynamic" "function" "for-each" "zoom" "state" "set!" "target")}
        {Lisp-Entry "unzoom" () 162 18 ("layout-view" "children" "true" "set-visible?" "child" "dynamic" "function" "for-each" "split" "state" "set!")}
        {Lisp-Entry "get-zoomed" () 170 18 ("children" "get-visible?" "child" "dynamic" "function" "find-if" "zoom" "state" "eq?" "when")}
        {Lisp-Entry "cursor-update" () 182 11 (":horizontal-splitter" "vert" ":vertical-splitter" "set-cursor" "horz" "orientation" "case" "in-rect?" "bar-bounds" "and" "when" "pos")}
        {Lisp-Entry "draw" () 195 11 ("Light-Red" "name:" "Color" "fill-rect" "bar-bounds" "when" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "absolute->relative" () 205 11 ("percentage" "get-height" "vert" "get-width" "horz" "orientation" "case" "size" "let" "division")}
        {Lisp-Entry "relative->absolute" () 212 11 ("-" "set!" "positive?" "if" "abs" "percent" "round" "pct" "get-height" "vert" "get-width" "horz" "orientation" "case" "size" "let*" "division")}
        {Lisp-Entry "mouse-down" () 228 11 ("acquire-capture" "relative->absolute" "division" "relative" "mode" "=" "when" "get-v" "vert" "get-h" "horz" "orientation" "case" "previous" "true" "dragging?" "set!" "pos")}
        {Lisp-Entry "drag-move" () 236 11 ("call-after-handler" "update-view" "layout-view" "set!" "division" "increase!" "previous" "-" "delta" "get-v" "vert" "get-h" "horz" "orientation" "case" "n" "let*" "dragging?" "when" "pos")}
        {Lisp-Entry "drag-up" () 247 11 ("false" "absolute->relative" "division" "set!" "relative" "mode" "=" "release-capture" "dragging?" "when" "rest" "pos")}
        {Lisp-Entry "call-after-handler" () 260 11 ("after:" "Event" "new" "self" "invoke" "after-handler" "when")}
        {Lisp-Entry "get-class-image" () 271 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 276 16 ("nextmethod" "else" "after-handler" "insets" "division" "mode" "orientation" "state" "separator" "field-name" "case" "property")}}}})
"Splitter-Window"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Splitter-Window.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.window.Splitter-Window" () 37 9 ("jazz")
      {Lisp-Entry "Splitter-Window" () 49 7 ("View-Player" "View-Player-Class")
        {Lisp-Entry "separator" () 52 12 ("generate" "accessors" "resize")}
        {Lisp-Entry "state" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "orientation" () 54 12 ("generate" "accessors" "horz")}
        {Lisp-Entry "mode" () 55 12 ("generate" "accessors" "absolute")}
        {Lisp-Entry "division" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "insets" () 57 12 ("generate" "accessors" "0" "Rect")}
        {Lisp-Entry "full?" () 58 12 ("generate" "accessors" "false")}
        {Lisp-Entry "split-layout" () 61 8 ("Split-Layout" "new")}
        {Lisp-Entry "bar-bounds" () 62 8 ()}
        {Lisp-Entry "dragging?" () 63 8 ("false")}
        {Lisp-Entry "previous" () 64 8 ()}
        {Lisp-Entry "new-root" () 72 11 ("Splitter-Root" "new")}
        {Lisp-Entry "for-each-palette" () 81 18 ("children" "else" "get-children" "Pad-Window" "for-each-palette" "Splitter-Window" "is?" "cond" "child" "dynamic" "function" "for-each" "proc")}
        {Lisp-Entry "find-palette" () 92 18 ("get-guest" "view" "let" "View-Host" "is?" "when" "palette" "dynamic" "function" "for-each-palette" "return" "lambda" "call/ec" "type")}
        {Lisp-Entry "size-change" () 109 11 ("layout-window" "nextmethod" "size")}
        {Lisp-Entry "layout" () 114 11 ("insets:" "division" "division:" "mode:" "orientation" "orientation:" "state" "state:" "separator" "separator:" "get-height" "get-width" "children" "split-layout" "layout" "bar-bounds" "set!" "0" "Rect" "full?" "insets" "absolute" "dragging?" "if" "mode" "get-size" "size" "let")}
        {Lisp-Entry "remove-children" () 126 18 ("children" "get-guest" "host-deactivate" "View-Host" "get-toplevel" "set-parent" "false" "set-visible?" "close" "if" "Pad-Window" "remove-children" "Splitter-Window" "is?" "when" "child" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-brother" () 141 18 ("children" "neq?" "child" "dynamic" "function" "find-if" "window")}
        {Lisp-Entry "workspace-zoomable?" () 152 18 ("workspace-minimisable?" "get-guest" "guest" "View-Host" "is-not?" "or" "get-brother" "brother" "let" "window")}
        {Lisp-Entry "zoom" () 164 18 ("layout-window" "children" "eq?" "set-visible?" "child" "dynamic" "function" "for-each" "zoom" "state" "set!" "target")}
        {Lisp-Entry "unzoom" () 172 18 ("layout-window" "children" "true" "set-visible?" "child" "dynamic" "function" "for-each" "split" "state" "set!")}
        {Lisp-Entry "get-zoomed" () 180 18 ("children" "get-visible?" "child" "dynamic" "function" "find-if" "zoom" "state" "eq?" "when")}
        {Lisp-Entry "cursor-update" () 192 11 (":horizontal-splitter" "vert" ":vertical-splitter" "horz" "orientation" "case" "in-rect?" "when" "mouse-position" "pos" "let" "else" "unprocessed" "get-mouse-down?" "bar-bounds" "not" "or" ":arrow" "set-cursor" "resize" "separator" "neq?" "cond" "hit")}
        {Lisp-Entry "absolute->relative" () 210 11 ("percentage" "get-height" "vert" "get-width" "horz" "orientation" "case" "size" "let" "division")}
        {Lisp-Entry "relative->absolute" () 217 11 ("-" "set!" "positive?" "if" "abs" "percent" "round" "pct" "get-height" "vert" "get-width" "horz" "orientation" "case" "size" "let*" "division")}
        {Lisp-Entry "mouse-down" () 233 11 ("acquire-capture" "relative->absolute" "division" "relative" "mode" "=" "vert" "horz" "orientation" "case" "previous" "true" "dragging?" "set!" "Point" "new" "in-rect?" "bar-bounds" "resize" "separator" "eq?" "and" "when" "v" "h")}
        {Lisp-Entry "mouse-move" () 242 11 ("layout-window" "dynamic" "function" "with-locked-update" "set!" "division" "increase!" "previous" "-" "delta" "vert" "horz" "orientation" "case" "n" "let*" "dragging?" "when" "v" "h")}
        {Lisp-Entry "mouse-up" () 253 11 ("false" "absolute->relative" "division" "set!" "relative" "mode" "=" "release-capture" "dragging?" "when" "v" "h")}
        {Lisp-Entry "draw-root" () 266 11 ("line" "top" "vert" "left" "edges:" "sunken" "outer:" "raised" "inner:" "draw-edge" "horz" "orientation" "edge" "resize" "separator" "case" "bar-bounds" "split" "state" "eq?" "and" "when" "dc")}}
      {Lisp-Entry "Splitter-Root" () 285 7 ("Root-View")
        {Lisp-Entry "draw" () 288 11 ("get-player" "draw-root" "lv" "lh" "update" "context" "dc")}}}})
"Spy-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "spy" "Spy-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.spy.Spy-View" () 37 9 ("jazz")
      {Lisp-Entry "Spy-View" () 49 7 ("row" "selection-mode:" "tree" "tree-header" "fill" "layout-type:" "content" "vscroll?:" "tree-scroller" "edge" "border-type:" "0" "tree-border" "on-on/off" "on/off" "on-slowdown" "slowdown" "on-clear" "form:" "clear" "on-spy-family" "spy-family" "on-spy" "spy" "keyboard" "mouse" "paint" "selected?:" ":icons" "portfolio:" "on-category" "parent:" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "6" "4" "Point" "position:" "all" "name:" "east" "location:" "Dimension" "size:" "View")
        {Lisp-Entry "clients" () 52 12 ("set-clients" "get-clients")}
        {Lisp-Entry "active?" () 55 8 ("false")}
        {Lisp-Entry "slowdown?" () 56 8 ("false")}
        {Lisp-Entry "slowdown-quantum" () 57 8 ()}
        {Lisp-Entry "category" () 58 8 ("all")}
        {Lisp-Entry "old-consumer" () 59 8 ()}
        {Lisp-Entry "get-tree" () 86 18 ("tree" "locate")}
        {Lisp-Entry "get-clients" () 95 18 ("clients")}
        {Lisp-Entry "set-clients" () 99 18 ("activate" "set!" "clients" "unspy" "for-each" "active?" "when" "list")}
        {Lisp-Entry "activate" () 106 11 ("on/off" "locate" "set-selected?" "clients" "spy" "for-each" "true" "active?" "set!")}
        {Lisp-Entry "destroy" () 117 11 ("nextmethod" "set-clients")}
        {Lisp-Entry "resize" () 122 11 ("tree-border" "size-figure" "on/off" "slowdown" "0" "clear" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-category" () 130 11 ("get-sender" "get-name" "category" "set!" "evt")}
        {Lisp-Entry "on-spy" () 134 11 ("list" "set-clients" "views" "windows" "case" "figure" "spy-domain" "domain" "let*" "pos" "view" "position" "window" "dynamic" "function" "pick-figure" "unimplemented" "evt")}
        {Lisp-Entry "on-spy-family" () 144 11 ("collect-family" "set-clients" "views" "windows" "case" "figure" "spy-domain" "domain" "let*" "pos" "view" "position" "window" "dynamic" "function" "pick-figure" "unimplemented" "evt")}
        {Lisp-Entry "pick-figure" () 154 11 ("tooltips?:" "false" "report-figure?:" "views" "eq?" "feedback-figure?:" "feedback:" "true" "draw-overlays?:" "get-player" "list" "exclude:" "pick-figure" "spy-domain" "domain" "let" "unimplemented" "action")}
        {Lisp-Entry "on-clear" () 167 11 ("get-tree" "remove-every-row" "evt")}
        {Lisp-Entry "on-slowdown" () 171 11 ("not" "slowdown?" "set!" "evt")}
        {Lisp-Entry "on-on/off" () 175 11 ("unspy" "clients" "spy" "for-each" "if" "not" "active?" "set!" "evt")}
        {Lisp-Entry "spy-domain" () 187 29 ()}
        {Lisp-Entry "spy" () 191 29 ("client")}
        {Lisp-Entry "unspy" () 195 29 ("client")}}}})
"Stack-Presenter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "debuggee" "Stack-Presenter.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "Stack-Presenter" () 37 9 ("jazz")}})
"Stack-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Stack-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Stack-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Stack-Snapshot" () 47 7 ("Viewable" "Object")
        {Lisp-Entry "stack" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("runtime-stack" "collect-presented" "remove-frames" "present-stack" "stack" "set!" "nextmethod")}
        {Lisp-Entry "get-title" () 58 11 ()}
        {Lisp-Entry "get-viewer-class" () 62 11 ("Stack-Viewer")}
        {Lisp-Entry "get-stack" () 66 18 ("stack")}
        {Lisp-Entry "collect-presented" () 70 11 ("compiled-procedure" "external" "closure" "frame-type" "memq?" "frame" "dynamic" "function" "collect-if" "stack")}
        {Lisp-Entry "remove-frames" () 76 11 ("2" "tail" "stack")}
        {Lisp-Entry "present-stack" () 81 11 ("present-variables" "present-frame" "cons" "frame" "dynamic" "function" "map" "stack")}
        {Lisp-Entry "present-frame" () 88 11 ("present-unknown-frame" "else" "present-compiled-procedure-frame" "compiled-procedure" "present-external-frame" "external" "present-closure-frame" "closure" "present-lexical-frame" "lexical" "frame-type" "case" "frame")}
        {Lisp-Entry "present-frame-info" () 97 11 ("list" "info" "name" "class" "image" "frame")}
        {Lisp-Entry "present-lexical-frame" () 101 11 ("format" "if" "lexicon-forward-lexicon" "forward" "let" "Bitmap-Resource" "present-frame-info" "frame")}
        {Lisp-Entry "present-closure-frame" () 111 11 ("Bitmap-Resource" "present-frame-info" "function-method" "present-function" "present-method" "if" "info" "name" "class" "receive" "closure-function" "Interpreter" "function-method?" "method?" "frame-procedure" "procedure" "let*" "frame")}
        {Lisp-Entry "present-compiled-procedure-frame" () 122 11 ("frame-name" "Bitmap-Resource" "present-frame-info" "frame")}
        {Lisp-Entry "present-method" () 126 11 ("either" "format" "in-manifest?" "values" "object-name" "name" "field-creator" "type-name" "essay" "class" "object-definer" "definer" "let*" "method")}
        {Lisp-Entry "present-function" () 137 11 ("format" "values" "method")}
        {Lisp-Entry "function-method" () 141 11 ("procedure")}
        {Lisp-Entry "present-external-frame" () 145 11 ("frame-name" "Bitmap-Resource" "present-frame-info" "frame")}
        {Lisp-Entry "present-unknown-frame" () 149 11 ("else" "catch" "binding" "Bitmap-Resource" "present-frame-info" "stack" "frame-type" "case" "frame")}
        {Lisp-Entry "present-variables" () 157 11 ("local-variables" "frame-context" "self" "cons" "frame")}
        {Lisp-Entry "local-variables" () 161 11 ("frame-variables" "Interpreter" "variable-value" "cons" "variable" "dynamic" "function" "map" "frame")}
        {Lisp-Entry "Stack-Viewer" () 173 9 ("display-images?:" "toplevel-controls?:" "row" "selection-mode:" "variables" "hscroll?:" "second" "width:" "title:" "on-double-click" "double-click-handler:" "on-select-stack" "form:" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "stack" "shown?:" "header" "content" "flat?:" "vscroll?:" "center" "scroller" "name:" "entry" "style:" "edge" "border-type:" "first" "location:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "fill" "layout-type:" "Dimension" "size:" "Layout-View")
          {Lisp-Entry "client" () 196 14 ("set-client" "get-client")}
          {Lisp-Entry "effective-stack" () 200 13 ("client" "get-stack" "reverse" "tail")}
          {Lisp-Entry "get-client" () 206 20 ("client")}
          {Lisp-Entry "set-client" () 210 20 ("effective-stack" "stack" "locate" "insert-stack" "client" "set!" "clt")}
          {Lisp-Entry "on-select-stack" () 215 13 ("present-frame" "variables" "effective-stack" "element" "frame" "get-single-selection" "selection" "stack" "locate" "tree" "let*" "evt")}
          {Lisp-Entry "on-double-click" () 223 13 ("list" "Jazz-Code-Location" "new" "edit" "get-application" "edit-definition" "null?" "if" "name" "class" "bind" "get-user-data" "data" "get-row" "row" "when" "get-single-selection" "selection" "stack" "locate" "tree" "let*" "evt")}
          {Lisp-Entry "Stack-View" () 241 11 ("Tree-View")
            {Lisp-Entry "insert-stack" () 244 22 ("cons" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "variables" "info" "name" "class" "image" "bind" "frame" "dynamic" "function" "for-each" "remove-every-row" "stack")}}
          {Lisp-Entry "Variables-View" () 257 11 ("Tree-View")
            {Lisp-Entry "present-frame" () 260 22 (":reader" "cdr" "->string" "Tree-Label" "title:" "Tree-Node" "new" "list" "children:" "add-row" "value" "variable" "couple" "dynamic" "function" "for-each" "remove-every-row" "variables" "info" "name" "class" "image" "bind" "frame")}}}}}})
"Stage"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Stage.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.ui.window.Stage" () 37 9 ("jazz")
      {Lisp-Entry "Stage-Class" () 49 7 ("View-Player-Class")
        {Lisp-Entry "initialize" () 52 11 ("register-class" "nextmethod")}}
      {Lisp-Entry "Stage" () 57 7 ("View-Player" "View-Player-Class")
        {Lisp-Entry "maximized?" () 60 8 ("false")}
        {Lisp-Entry "fullscreen?" () 61 8 ("false")}
        {Lisp-Entry "new-root" () 64 11 ("Stage-Root" "new")}
        {Lisp-Entry "size-change" () 68 11 ("layout-frames" "nextmethod" "size")}
        {Lisp-Entry "get-border" () 78 18 ("parent")}
        {Lisp-Entry "stage-activate" () 87 26 ("client-deactivate" "view" "dynamic" "function" "for-each-docked" "get-toplevel" "set-caption" "maximized?" "when")}
        {Lisp-Entry "stage-deactivate" () 95 26 ()}
        {Lisp-Entry "get-maximized?" () 104 18 ("maximized?")}
        {Lisp-Entry "set-maximized?" () 108 18 ("restore" "maximize" "if" "maximized?" "/=" "true" "when" "value")}
        {Lisp-Entry "toggle-maximized" () 115 18 ("maximized?" "not" "set-maximized?")}
        {Lisp-Entry "maximize" () 119 18 ("get-window-title" "set-caption" "children" "get-guest" "get-root" "get-visible?" "frame" "for-each" "maximize" "set-maximized?" "when" "true" "set!" "selected-workspace" "workspace" "first-window" "current" "get-menubar" "menubar" "get-application" "appl" "get-toplevel" "toplevel" "get-border" "border" "let*" "dynamic" "function" "with-locked-update" "maximized?" "false" "unless")}
        {Lisp-Entry "restore" () 145 18 ("reactivate-active" "children" "get-guest" "get-root" "get-visible?" "frame" "for-each" "restore" "selected-workspace" "set-maximized?" "false" "set!" "get-menubar" "menubar" "get-application" "appl" "get-toplevel" "toplevel" "get-border" "border" "let*" "dynamic" "function" "with-locked-update" "maximized?" "true" "when")}
        {Lisp-Entry "get-fullscreen?" () 172 18 ("fullscreen?")}
        {Lisp-Entry "set-fullscreen?" () 176 18 ("set!" "fullscreen?" "/=" "when" "value")}
        {Lisp-Entry "install-wallpaper" () 186 18 ("get-root" "install-wallpaper")}
        {Lisp-Entry "layout-frames" () 195 11 ("children" "get-root" "maximize-bounds" "get-visible?" "frame" "dynamic" "function" "for-each" "maximized?" "when" "size")}
        {Lisp-Entry "key-down" () 208 11 ("acquire-focus" "quick-find" "toolbar" "get-toplevel" "locate-component" "view" "let" "=" "when" "char")}}}})
"Stage-Border"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Stage-Border.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.window.Stage-Border" () 37 9 ("jazz")
      {Lisp-Entry "Stage-Border" () 46 7 ("View-Player" "View-Player-Class")
        {Lisp-Entry "install" () 49 11 ("stage" "name:" "self" "parent:" "parent" "get-parent" "stage-class" "new" "nextmethod" "rest")}
        {Lisp-Entry "size-change" () 54 11 ("layout-stage" "nextmethod" "size")}
        {Lisp-Entry "new-root" () 64 11 ("Stage-Border-Root" "new")}
        {Lisp-Entry "get-stage" () 73 18 ("stage" "child")}
        {Lisp-Entry "maximize" () 82 18 ("get-size" "layout-stage")}
        {Lisp-Entry "restore" () 86 18 ("get-size" "layout-stage")}
        {Lisp-Entry "layout-stage" () 95 11 ("+" "Dimension" "-" "set-size" "Point" "new" "set-position" "2" "1" "0" "if" "width" "get-fullscreen?" "fullscreen?" "get-maximized?" "maximized?" "get-stage" "stage" "let*" "size")}}
      {Lisp-Entry "Stage-Border-Root" () 109 7 ("Root-View")
        {Lisp-Entry "Frame-Color" () 112 14 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "draw" () 116 11 ("White" "name:" "Color" "-" "1" "or" "unless" "get-fullscreen?" "fullscreen?" "get-maximized?" "maximized?" "player" "get-stage" "stage" "let*" "Frame-Color" "get-bottom" "get-right" "0" "Rect" "new" "frame-rect" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}}}})
"Stage-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Stage-Preferences.fusion"} {Time 128368663280000000L}
    {Lisp-Entry "jazz.ui.preferences.Stage-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Stage-Preferences" () 48 7 ("Bitmap-Resource" "icon:" "title:" "Figure-Preferences")
        {Lisp-Entry "apply-preferences" () 60 11 ("get-visible?" "set-visible?" "set-parent" "location" "set-location" "get-parent" "border" "get-stage" "stage" "let*" "assert" "parent")}
        {Lisp-Entry "get-class-image" () 75 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" () 79 11 ("location")}}}})
"Stage-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Stage-Root.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Stage-Root" () 37 9 ("jazz")
      {Lisp-Entry "Stage-Root" () 47 7 ("visible?:" "content" "Dark" "name:" "Color" "background:" "Root-View")
        {Lisp-Entry "size-change" () 60 11 ("2" "Rect" "insets:" "invalidate-border" "nextmethod" "size")}
        {Lisp-Entry "mouse-activate" () 65 11 ("acquire-focus")}
        {Lisp-Entry "layout" () 74 11 ("4" "-" "Dimension" "new" "set-size" "2" "Point" "set-position" "get-content" "content" "get-height" "height" "get-width" "width" "let")}
        {Lisp-Entry "install-wallpaper" () 87 26 ()}}}})
"Standard-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Standard-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Standard-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Standard-Workspace" () 46 7 (":status" "line" "status" ":toolbar" "second" "toolbar" ":menubar" "model-name:" "first" "location:" "vert" "orientation:" "split" "state:" "division:" "edge" "separator:" "menubar" "name:" "Workspace-Preferences")}}})
"State-Application"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "lib" "State" "Development" "Units" "State-Application.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "state" () 37 4 ()}
    {Lisp-Entry "State-Application" () 40 7 ("Application")
      {Lisp-Entry "process-name" () 43 11 ()}
      {Lisp-Entry "process-icon" () 47 11 ("Bitmap-Resource")}
      {Lisp-Entry "new-toplevel" () 51 11 ("State-Toplevel" "new")}
      {Lisp-Entry "use-user?" () 55 11 ("false")}
      {Lisp-Entry "workspace-installed" () 59 11 ("Bitmap-Resource" ":image-name" ":large-icons" ":portfolio" "State-View" "new-frame" "set-maximized?" "true" "stage" "set-fullscreen?" "false" "toplevel" "set-caption?")}}})
"State-Project"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "lib" "State" "State-Project.fusion"} {Time 128360671600000000L}
    {Lisp-Entry "?" () 37 4 ()}
    {Lisp-Entry "State-Project" () 40 7 ("State-View" "State-Toplevel" "State-Project" "File" "source:" "JML-Module" "Designer-Module" "Application-Module" "Process-Module" "UI-Module" "Library-Module" "reference" "Resources-Module" "DDE-Module" "Slayer-Module" "Kernel-Module" "include" "kind:" "Boot-Module" "dependencies" "name:" "Release" "anonymous-build:" "State-Application" "application-class:" "title:" "Project")
      {Lisp-Entry "project-binaries" () 64 11 ("project-distribution")}}})
"State-Toplevel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "lib" "State" "Development" "Units" "State-Toplevel.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "state" () 37 4 ()}
    {Lisp-Entry "State-Toplevel" () 40 7 ("Dimension" "size:" "Point" "position:" "caption-base:" "WinGDI" "WinUser" "System" "Utilities" "Language" "Toplevel")
      {Lisp-Entry "window-class" () 47 16 ()}
      {Lisp-Entry "initialize" () 51 16 ("Icon-Resource" "icon:" "register-toplevel" "nextmethod")}
      {Lisp-Entry "window-style" () 56 11 ("WS_CLIPCHILDREN" "WS_POPUP" "bit-or" "rest")}
      {Lisp-Entry "window-ex-style" () 60 11 ("WS_EX_TOOLWINDOW" "WS_EX_TOPMOST" "nextmethod" "bit-or" "rest")}
      {Lisp-Entry "install" () 66 11 ("true" "hwnd" "SetWindowRgn" "RGN_AND" "CombineRgn" "combined" "CreateEllipticRgn" "inner" "0" "CreateRectRgn" "outer" "get-size" "size" "let" "nextmethod" "rest")}}})
"State-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "lib" "State" "Development" "Units" "State-View.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "state" () 37 4 ()}
    {Lisp-Entry "State-View" () 40 7 (":toplevel" "client:" "name:" "on-double-click" "double-click-handler:" "on-drag-up" "drag-up-handler:" "on-drag-move" "drag-move-handler:" "on-mouse-down" "mover" "form:" "Event-Handler" "mouse-down-handler:" "Bitmap-Resource" "image-name:" ":large-icons" "portfolio:" "Dimension" "size:" "Image-View")
      {Lisp-Entry "Bitmaps" () 43 12 ("Bitmap-Resource")}
      {Lisp-Entry "Current-Bitmap" () 49 14 ("0")}
      {Lisp-Entry "changer" () 53 8 ()}
      {Lisp-Entry "slowdown" () 54 8 ()}
      {Lisp-Entry "done?" () 55 8 ("false")}
      {Lisp-Entry "install" () 63 11 ("install-changer" "nextmethod" "rest")}
      {Lisp-Entry "install-changer" () 68 11 ("element" "set-image-name" "Bitmaps" "length" "1" "+" "modulo" "Current-Bitmap" "slowdown" "sleep" "done?" "not" "while" "thread" "function" "execute:" "self" "context:" "Thread" "new" "changer" "set!")}
      {Lisp-Entry "on-double-click" () 84 11 ("get-process" "exit-process" "evt")}}})
"Static-Init-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Static-Init-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.entry.Static-Init-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Static-Init-Entry" () 45 7 ("Java-Entry")
        {Lisp-Entry "construct-literal" () 49 16 ("self" "new" "references" "column" "line" "name" "modifiers" "context")}
        {Lisp-Entry "present-name" () 53 11 ()}
        {Lisp-Entry "print-catalog" () 57 11 ("references" "column" "line" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 64 11 ("Bitmap-Resource")}
        {Lisp-Entry "update-indexes" () 73 11 ("references" "update-index" "key" "dynamic" "function" "for-each" "references-index" "definitions-index")}}}})
"Status-Break-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Status-Break-Listener.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Status-Break-Listener" () 37 9 ("jazz")
      {Lisp-Entry "Status-Break-Listener" () 46 7 ("Object")
        {Lisp-Entry "Break-Color" () 49 12 ("Orange" "name:" "Color")}
        {Lisp-Entry "Error-Color" () 50 12 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "initialize" () 53 11 ("get-application" "get-loop" "add-level-change-listener" "on-level-change" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "nextmethod")}
        {Lisp-Entry "destroy" () 59 11 ("nextmethod" "self" "get-application" "get-loop" "remove-level-change-listener")}
        {Lisp-Entry "on-level-change" () 64 11 ("get-children" "break-color" "set-background" "child" "dynamic" "function" "for-each" "when" "get-application" "get-status-bar" "status" "get-type" "type" "get-level" "level" "get-sender" "loop" "let*" "evt")}
        {Lisp-Entry "break-color" () 75 11 ("Error-Color" "else" "Break-Color" "break" "case" "Medium" "name:" "Color" "0" "=" "if" "type" "level")}}}})
"Status-Label"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Status-Label.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Status-Label" () 37 9 ("jazz")
      {Lisp-Entry "Status-Label" () 47 7 ("Medium" "name:" "Color" "background:" "View")
        {Lisp-Entry "icon" () 50 12 ("set-icon" "get-icon")}
        {Lisp-Entry "mouse-activate?" () 57 11 ("false")}
        {Lisp-Entry "set-title" () 66 11 ("update-view" "nextmethod" "title")}
        {Lisp-Entry "get-icon" () 71 18 ("icon")}
        {Lisp-Entry "set-icon" () 75 18 ("invalidate-view" "icon" "set!" "icn")}
        {Lisp-Entry "draw-background" () 85 11 ("fill-rect" "inflate-rect" "rect" "get-bounds" "bounds" "with" "background" "when" "context" "dc")}
        {Lisp-Entry "draw" () 92 11 ("draw-body" "draw-icon" "Black" "name:" "Color" "set-text-color" "rectangle" "edges:" "sunken" "outer:" "get-bounds" "draw-edge" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-icon" () 99 11 ("get-icons-cache" "draw-image" "top" "2" "left" "get-application" "appl" "let" "icon" "when" "context" "dc")}
        {Lisp-Entry "draw-body" () 107 11 ("draw-text" "Label-Bold" "name:" "Font" "set-font" "top" "3" "icon" "if" "left" "localize" "let" "title" "when" "dc")}}}})
"Status-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Status-Root.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Status-Root" () 37 9 ("jazz")
      {Lisp-Entry "Status-Root" () 45 7 ("Root-View")
        {Lisp-Entry "size-change" () 53 11 ("nextmethod" "size")}
        {Lisp-Entry "layout" () 62 11 ("2" "get-height" "-" "get-width" "Dimension" "new" "set-size" "3" "0" "Point" "set-position" "get-content" "content" "get-size" "size" "let")}
        {Lisp-Entry "draw" () 74 11 ("top" "edges:" "raised" "inner:" "draw-edge" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}}}})
"Status-Toolbar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Status-Toolbar.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Status-Toolbar" () 37 9 ("jazz")
      {Lisp-Entry "Status-Toolbar" () 48 7 ("Medium" "name:" "Color" "background:" "Toolbar")
        {Lisp-Entry "finish" () 55 11 ("update-status" "when" "selected-workspace" "workspace" "let" "nextmethod" "rest")}
        {Lisp-Entry "host-activate" () 62 11 ("self" "set-status-bar" "get-application" "appl" "let")}
        {Lisp-Entry "host-deactivate" () 67 11 ("set-status-bar" "get-application" "appl" "let")}
        {Lisp-Entry "layout" () 77 11 ("get-height" "get-width" "children" "layout" "padding:" "2" "0" "Rect" "insets:" "Flow-Layout" "new" "flow" "with")}}}})
"Stop-Signal"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "signal" "Stop-Signal.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.signal.Stop-Signal" () 37 9 ("jazz")
      {Lisp-Entry "Stop-Signal" () 44 7 ("Signal")
        {Lisp-Entry "forwardable?" () 47 11 ("true")}}}})
"String-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "String-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.String-Domain" () 37 9 ("jazz")
      {Lisp-Entry "String-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "string?" "not" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 62 11 ("value")}}}})
"String-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "String-Request.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.dialog.String-Request" () 37 9 ("jazz")
      {Lisp-Entry "String-Request" () 47 7 ("cancel" "default?:" "on-ok" "action-handler:" "ok" "Entry-Border" "Color" "color:" "message" "on-cancel" ":host" "escape-press-handler:" "on-return-press" "return-press-handler:" "on-content-change" "form:" "Event-Handler" "content-change-handler:" "top-padding:" "2" "left-padding:" "accepts-returns?:" "text" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "Default-GUI" "Font" "font:" "Point" "position:" "title:" "prefix" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "accepts-empty?" () 50 12 ("set-accepts-empty?" "get-accepts-empty?" "true")}
        {Lisp-Entry "unicity-domain" () 51 12 ("set-unicity-domain" "get-unicity-domain")}
        {Lisp-Entry "validator" () 52 12 ("set-validator" "get-validator")}
        {Lisp-Entry "get-accepts-empty?" () 72 18 ("accepts-empty?")}
        {Lisp-Entry "set-accepts-empty?" () 76 18 ("name-change" "accepts-empty?" "set!" "value")}
        {Lisp-Entry "get-unicity-domain" () 81 18 ("unicity-domain")}
        {Lisp-Entry "set-unicity-domain" () 85 18 ("name-change" "unicity-domain" "set!" "value")}
        {Lisp-Entry "get-validator" () 90 18 ("validator")}
        {Lisp-Entry "set-validator" () 94 18 ("name-change" "validator" "set!" "value")}
        {Lisp-Entry "on-content-change" () 104 11 ("name-change" "evt")}
        {Lisp-Entry "on-return-press" () 108 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "ok" "locate" "get-enabled?" "when" "evt")}
        {Lisp-Entry "name-change" () 114 11 ("null?" "let" "validator" "equal" "sort-predicate" "test:" "member?" "unicity-domain" "empty-string?" "accepts-empty?" "not" "if" "set-title" "ok" "set-enabled?" "message" "enabled?" "dynamic" "function" "proc" "get-string-content" "name" "locate" "text" "let*" "return" "lambda" "call/ec" "name-validated?" "when")}
        {Lisp-Entry "name-validated?" () 135 11 ("validator" "unicity-domain" "accepts-empty?" "not" "or")}
        {Lisp-Entry "dialog-class" () 145 16 ("String-Request-Dialog")}
        {Lisp-Entry "String-Request-Dialog" () 150 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")
          {Lisp-Entry "focus-gain" () 157 13 ("text" "guest" "locate" "acquire-focus" "nextmethod")}
          {Lisp-Entry "get-modal-result" () 162 13 ("text" "guest" "locate" "get-string-content")}}}
      {Lisp-Entry "Request-Text-View" () 171 7 ("Text-View")}}})
"String-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "String-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.String-Row" () 37 9 ("jazz")
      {Lisp-Entry "String-Row" () 45 7 ("Value-Row")
        {Lisp-Entry "present" () 53 11 ("format" "null?" "nullable?" "and" "if" "value")}
        {Lisp-Entry "get-edited-value" () 64 11 ("=" "empty-string?" "or" "nullable?" "and" "if" "editor" "get-string-content" "string" "let")}}}})
"String-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "String-Tester.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.suite.String-Tester" () 37 9 ("jazz")
      {Lisp-Entry "String-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-wi=" "test-string" "invoke")}
        {Lisp-Entry "string" () 63 14 ()}
        {Lisp-Entry "test-string" () 67 11 ("4" "set-element!" "1" "string" "element" "=" "rpt" "validate")}
        {Lisp-Entry "ansistring" () 79 14 ("Ansi-String" "coerce")}
        {Lisp-Entry "test-ansi-string" () 84 11 ("4" "set-element!" "1" "ansistring" "element" "=" "rpt" "validate")}
        {Lisp-Entry "test-wi=" () 95 11 ("not" "wi=" "rpt" "validate")}}}})
"Structure-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Structure-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Structure-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Structure-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-structure" "invoke")}
        {Lisp-Entry "test-structure" () 61 11 ()}}}})
"Stub-Listener"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "remote" "Stub-Listener.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.jrm.remote.Stub-Listener" () 37 9 ("jazz")
      {Lisp-Entry "Stub-Listener" () 45 7 ("Socket-Listener")}
      {Lisp-Entry "Stub-Listener" () 51 7 ("Socket-Listener")
        {Lisp-Entry "stub-alist" () 54 8 ()}
        {Lisp-Entry "connection-threads" () 55 8 ()}
        {Lisp-Entry "run" () 63 11 (":port" ":host" "start-listener" "any" "stub-listener-port" "port" "name:" "Host" "stub-listener-host" "either" "host" "get-process" "process" "let*" "set-name")}
        {Lisp-Entry "Connection-Threads-Timeout" () 76 14 ()}
        {Lisp-Entry "stop-listener" () 80 11 ("wait-connection-threads" "nextmethod")}
        {Lisp-Entry "wait-connection-threads" () 85 11 ("false" "error?:" "Connection-Threads-Timeout" ":timeout" "wait-for" "connection-threads" "when")}
        {Lisp-Entry "Liveliness-Test" () 95 14 ()}
        {Lisp-Entry "accept-connection" () 99 11 ("remove!" "marshal-object" "invoke" "result" "error" "null?" "send-object" "collect-error-info" "err" "Error" "catch" "stub-from-address" "stub" "unmarshal-object" "map" "arguments" "cons" "connection-threads" "set!" "begin" "unwind-protect" "thread" "function" "execute:" "self" "context:" "format" "name:" "Thread" "new" "marshalled-arguments" "method-name" "stub-address" "bind" "close" "Liveliness-Test" "eq?" "if" "receive-object" "info" "let" "socket")}
        {Lisp-Entry "collect-error-info" () 124 11 (":exception" ":string" "print-stack" "get-message" "list" "err")}
        {Lisp-Entry "stub-from-address" () 128 11 ("address-object" "get-process-stub" "null?" "if" "stub-address")}
        {Lisp-Entry "get-process-stub" () 134 11 ("find-stub" "marshal" "get-object" "object" "get-local-process-server" "local" "get-process" "process" "let*")}
        {Lisp-Entry "marshal-local-object" () 147 18 ("register-stub" "find-stub" "either" "make-ior" "remotable-class" "object")}
        {Lisp-Entry "find-stub" () 155 11 ("stub-alist" "assq" "cdr" "object")}
        {Lisp-Entry "register-stub" () 159 11 ("cons" "stub-alist" "set!" "new" "stub" "stub-class" "let*" "remotable-class" "object")}
        {Lisp-Entry "make-ior" () 166 11 ("IOR" "new" "object-address" "reference" "type-name" "remotable" "listening-port" "port" "listening-host" "host" "get-stub-listener" "stub-listener" "get-process" "process" "let*" "remotable-class" "object" "stub")}}}})
"Style"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Style.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Style" () 37 9 ("jazz")
      {Lisp-Entry "Style" () 44 7 ("bottom" "initialize" "alignment" "Exemplar")
        {Lisp-Entry "get-width" () 56 26 ()}
        {Lisp-Entry "get-height" () 60 26 ()}
        {Lisp-Entry "run-width" () 64 26 ("run")}
        {Lisp-Entry "justify-element" () 73 21 ("2" "/" "ceil" "center" "-" "0" "top" "bottom" "alignment" "either" "case" "height" "element-height")}
        {Lisp-Entry "propagate?" () 85 26 ("true")}
        {Lisp-Entry "scan" () 94 29 ("default-scan" "proc" "run" "tabs" "end" "start" "h")}
        {Lisp-Entry "default-scan" () 98 11 ("2" "/" "round" "0" "+" "right" "get-width" "width" "let*" "proc" "run" "tabs" "end" "start" "h")}
        {Lisp-Entry "wrap" () 109 29 ("else" "place-update" "" "cond" "get-width" "+" "right" "let" "run" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "place-update" () 122 29 ("v" "h")}
        {Lisp-Entry "height-update" () 126 29 ("height")}
        {Lisp-Entry "draw-style" () 135 29 ("get-width" "enabled?" "left" "tab-stops" "line-height" "v" "h" "string" "context" "dc")}}}})
"Subseq-Iterator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Subseq-Iterator.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.iterator.Subseq-Iterator" () 37 9 ("jazz")
      {Lisp-Entry "Subseq-Iterator" () 44 7 ("Iterator")
        {Lisp-Entry "iter" () 47 8 ()}
        {Lisp-Entry "start" () 48 8 ()}
        {Lisp-Entry "end" () 49 8 ()}
        {Lisp-Entry "current" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("naturals" "next" "n" "dynamic" "function" "for-each" "current" "end~self" "start~self" "iter~self" "set!" "nextmethod" "end" "end:" "0" "start" "start:" "iter")}
        {Lisp-Entry "peek" () 64 11 ("iter" "peek")}
        {Lisp-Entry "next" () 68 11 ("iter" "next" "current" "increase!")}
        {Lisp-Entry "done?" () 73 11 ("current" ">=" "iter" "done?" "end" "not" "if")}}}})
"Surface"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Surface.fusion"} {Time 128369450060000000L}
    {Lisp-Entry "jazz.ui.graphic.Surface" () 37 9 ("jazz")
      {Lisp-Entry "Surface" () 40 7 ("Object")}}})
"Surrogate-Handler"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "surrogate" "Surrogate-Handler.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.surrogate.Surrogate-Handler" () 37 9 ("jazz")
      {Lisp-Entry "Surrogate-Handler" () 45 7 ("Event-Handler")
        {Lisp-Entry "preserved" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("preserved~self" "set!" "nextmethod" "apply" "others" "preserved" "bind-keywords" "rest")}
        {Lisp-Entry "get-preserved" () 57 18 ("preserved")}}}})
"Sybase-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sybase" "Sybase-Data-Source.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sybase.Sybase-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "Sybase-Data-Source" () 45 7 ("Adox-Data-Source")
        {Lisp-Entry "external-name" () 49 16 ("sybase" "rest")}
        {Lisp-Entry "Patch-SQLAnywhere-Bug?" () 58 14 ("true")}
        {Lisp-Entry "get-connection-string" () 62 11 ("Patch-SQLAnywhere-Bug?" "password" "username" "if" "format" "dsn" "when")}
        {Lisp-Entry "present" () 76 11 ("dsn" "format")}
        {Lisp-Entry "get-class-presentation" () 86 16 ()}}}})
"Sybase-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sybase" "Sybase-Datatype.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sybase.Sybase-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "Sybase-Datatype" () 45 7 ("Adox-Datatype")}}})
"Sybase-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "sybase" "Sybase-Provider.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.sybase.Sybase-Provider" () 37 9 ("jazz")
      {Lisp-Entry "Sybase-Provider" () 45 7 ("Provider")
        {Lisp-Entry "external-name" () 48 11 ("sybase")}
        {Lisp-Entry "get-datatype" () 57 11 ("Sybase-Datatype")}
        {Lisp-Entry "present" () 66 11 ()}}}})
"Symbol-Binding"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Symbol-Binding.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Symbol-Binding" () 37 9 ("jazz")
      {Lisp-Entry "Symbol-Binding" () 40 7 ("Lexical-Binding")}}})
"Symbol-Completer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Symbol-Completer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Symbol-Completer" () 37 9 ("jazz")
      {Lisp-Entry "Symbol-Completer" () 45 7 ("Object")
        {Lisp-Entry "domain" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("domain~self" "set!" "nextmethod" "domain")}
        {Lisp-Entry "complete" () 61 26 ("get-output" "domain" "put" "compare-n" "when" "target" "dynamic" "function" "for-each" "List-Factory" "new" "result" "length" "let" "string")}}}})
"Symbol-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Symbol-Request.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.dialog.Symbol-Request" () 37 9 ("jazz")
      {Lisp-Entry "Symbol-Request" () 45 7 ("String-Request")
        {Lisp-Entry "form-model" () 48 11 ("nextmethod" "else" "IDE-Text-View" "text" "get-name" "case" "form")}}}})
"Symbol-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Symbol-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Symbol-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Symbol-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-symbol" "invoke")}
        {Lisp-Entry "test-symbol" () 61 11 ()}}}})
"Symbols-Iterator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Symbols-Iterator.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.iterator.Symbols-Iterator" () 37 9 ("jazz")
      {Lisp-Entry "Symbols-Iterator" () 44 7 ("Symbol" "JzNextSymbol" "JzFirstSymbol" "Iterator")
        {Lisp-Entry "current" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("peeked" "JzFirstSymbol" "current" "set!" "nextmethod")}
        {Lisp-Entry "get-next!" () 56 11 ("eof-object" "null?" "when" "JzNextSymbol" "current" "set!")}
        {Lisp-Entry "Symbol" () 68 17 ()}
        {Lisp-Entry "Symbol" () 69 17 ()}}}})
"Synchronize-Box"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Synchronize-Box.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.workbench.Synchronize-Box" () 37 9 ("jazz")
      {Lisp-Entry "Synchronize-Box" () 48 7 ("on-no-action" "no-action" "on-copy-left" "copy-left" "on-copy-right" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "Dimension" "size:" "9" "Point" "position:" "copy-right" "name:" "Message-Box")
        {Lisp-Entry "layout-box" () 63 11 ("get-height" "Dimension" "new" "set-size" "border" "locate" "border-view" "nextmethod" "size" "let" "default" "actions" "content" "icon" "title" "selection" "text")}}}})
"Synchronize-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Synchronize-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.builder.workbench.Synchronize-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Synchronize-Entry" () 45 7 ("Object")
        {Lisp-Entry "kind" () 48 18 ()}
        {Lisp-Entry "left" () 49 18 ()}
        {Lisp-Entry "right" () 50 18 ()}
        {Lisp-Entry "action" () 51 18 ()}
        {Lisp-Entry "initialize" () 54 11 ("action~self" "right~self" "left~self" "kind~self" "set!" "nextmethod" "right-value" "right" "left-value" "left" "kind")}
        {Lisp-Entry "print" () 62 11 ("action" "right" "left" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}}}})
"Synchronize-Repositories"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Synchronize-Repositories.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.compare.Synchronize-Repositories" () 37 9 ("jazz")
      {Lisp-Entry "Synchronize-Repositories" () 47 7 ("Dimension" "size:" "title:" "backup" "mode" "name:" "Compare-Directories")
        {Lisp-Entry "frame-title" () 62 16 ()}
        {Lisp-Entry "get-directories" () 71 11 ("get-pathname" "values" "require-right-moniker" "item" "let")}
        {Lisp-Entry "moniker->tree" () 76 11 ("nextmethod" "read-moniker" "Roaming-Repository" "is?" "if" "moniker")}
        {Lisp-Entry "new-comparer" () 82 11 ("Repository-Synchronizer" "new")}
        {Lisp-Entry "backup-action" () 92 11 ("read-only?" "copy-left" "null?" "if" "when" "item-date" "item" "file-date" "file" "date")}
        {Lisp-Entry "merge-action" () 100 11 ("read-only?" "checked-out-me" "eq?" "get-status" "status" "let" "copy-right" "null?" "if" "when" "item-date" "item" "file-date" "file" "base-date")}}}})
"Synchronize-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Synchronize-Tree.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.builder.workbench.Synchronize-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Synchronize-Tree" () 47 7 ("right" "action" "center" "justification:" "left" "toplevel-controls?:" "width:" "title:" "name:" "multiple-selection?:" "path" "filled-column:" "row" "selection-mode:" ":icons" "portfolio:" "Tree-View")}
      {Lisp-Entry "Item-Column" () 63 7 ("Tree-Column")
        {Lisp-Entry "draw-cell" () 66 11 ("0" "2" "-" "quotient" "get-application" "get-icons-cache" "draw-image" "present-image" "image" "present?" "not" "when" "get-right" "get-left" "node" "get-kind" "=" "and" "lvl?" "let" "draw-background" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "present?" () 75 38 ("cell")}
        {Lisp-Entry "present-image" () 79 38 ("cell")}}
      {Lisp-Entry "Left-Column" () 88 7 ("Item-Column")
        {Lisp-Entry "draw-cell" () 92 11 ("nextmethod" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "present?" () 96 11 ("get-left" "cell")}
        {Lisp-Entry "present-image" () 100 11 ("Bitmap-Resource" "cell")}}
      {Lisp-Entry "Action-Column" () 109 7 ("Tree-Column")
        {Lisp-Entry "draw-cell" () 112 11 ("0" "1" "2" "-" "quotient" "+" "get-icons-cache" "draw-image" "get-right" "get-left" "action-image" "image" "get-application" "appl" "when" "get-action" "action" "let" "draw-background" "height" "width" "cell" "row" "context" "dc")}}
      {Lisp-Entry "Right-Column" () 127 7 ("Item-Column")
        {Lisp-Entry "draw-cell" () 131 11 ("nextmethod" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "present?" () 135 11 ("get-right" "cell")}
        {Lisp-Entry "present-image" () 139 11 ("Bitmap-Resource" "cell")}}}})
"Synchronizer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "thread" "Synchronizer.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.thread.Synchronizer" () 37 9 ("jazz")
      {Lisp-Entry "Synchronizer" () 44 7 ("WinKernel" "WinBase" "WinDef" "Handle-Container" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "create-synchronizer" "apply" "handle" "set!" "nextmethod" "rest")}
        {Lisp-Entry "create-synchronizer" () 56 29 ("rest")}
        {Lisp-Entry "destroy" () 60 11 ("nextmethod" "handle" "CloseHandle")}
        {Lisp-Entry "get-handle" () 65 11 ("handle")}}}})
"Syntax-Declaration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "declaration" "Syntax-Declaration.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.declaration.Syntax-Declaration" () 37 9 ("jazz")
      {Lisp-Entry "Syntax-Declaration" () 40 7 ("Declaration")}}})
"Syntax-Doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "doc" "Syntax-Doc.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.doc.doc.Syntax-Doc" () 37 9 ("jazz")
      {Lisp-Entry "Syntax-Doc" () 45 7 ("Element-Doc")
        {Lisp-Entry "parameters" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-image" () 57 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-row-instance" () 61 11 ("nextmethod" "else" "String-Row" "new" "parameters" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 67 11 ("parameters")}}}})
"Syntax-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Syntax-Tester.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.validate.suite.Syntax-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Syntax-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-decrease!" "test-increase!" "test-set!" "test-either" "test-essay" "test-or" "test-and" "test-typecase" "test-ecase" "test-case" "test-cond" "test-prog1" "test-begin" "test-for" "test-until" "test-while" "test-unless" "test-when" "test-if" "test-quote" "invoke")}
        {Lisp-Entry "test-quote" () 80 11 ("self" "quote" "code-walk" "error?" "begin" "list" "c" "b" "a" "=" "rpt" "validate")}
        {Lisp-Entry "test-if" () 94 11 ("self" "if" "code-walk" "error?" "rpt" "validate" "begin")}
        {Lisp-Entry "test-when" () 106 11 ("self" "when" "code-walk" "error?" "rpt" "validate" "begin")}
        {Lisp-Entry "test-unless" () 117 11 ("false" "5" "2" "unless" "7" "3" "get-counter" "+" "set-counter" "X" "new" "x" "let" "foo" "=" "rpt" "validate")}
        {Lisp-Entry "test-while" () 133 11 ()}
        {Lisp-Entry "test-until" () 142 11 ()}
        {Lisp-Entry "test-for" () 151 11 ()}
        {Lisp-Entry "test-begin" () 160 11 ()}
        {Lisp-Entry "test-prog1" () 169 11 ()}
        {Lisp-Entry "test-cond" () 178 11 ("9" "else" "8" "7" "5" "=" "3" "y" "2" "x" "not" "rpt" "validate" "cond" "v" "let")}
        {Lisp-Entry "test-case" () 195 11 ("9" "else" "8" "7" "5" "3" "=" "not" "rpt" "validate" "2" "case" "v" "let")}
        {Lisp-Entry "test-ecase" () 211 11 ("9" "else" "8" "7" "=" "3" "y" "x" "not" "rpt" "validate" "2" "ecase" "v" "let")}
        {Lisp-Entry "test-typecase" () 229 11 ("9" "else" "8" "Number" "7" "Symbol" "3" "=" "not" "rpt" "validate" "2" "typecase" "v" "let")}
        {Lisp-Entry "test-and" () 245 11 ("5" "3" "2" "false" "true" "and" "=" "rpt" "validate")}
        {Lisp-Entry "test-or" () 258 11 ("3" "2" "+" "true" "false" "or" "=" "rpt" "validate")}
        {Lisp-Entry "test-essay" () 271 11 ("5" "3" "false" "2" "essay" "=" "rpt" "validate")}
        {Lisp-Entry "test-either" () 281 11 ("5" "3" "2" "+" "false" "either" "=" "rpt" "validate")}
        {Lisp-Entry "test-set!" () 292 11 ()}
        {Lisp-Entry "foo" () 301 11 ("5" "increase!" "below" "from" "for" "loop" "0" "total" "n" "let")}
        {Lisp-Entry "test-increase!" () 309 11 ("foo" "=" "rpt" "validate")}
        {Lisp-Entry "goo" () 318 11 ("5" "decrease!" "to" "1" "from" "i" "for" "loop" "total" "let" "n")}
        {Lisp-Entry "test-decrease!" () 325 11 ("5" "goo" "=" "rpt" "validate")}}
      {Lisp-Entry "X" () 334 7 ("Object")
        {Lisp-Entry "counter" () 337 15 ("4")}}}})
"Systype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "provider" "Systype.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.provider.Systype" () 37 9 ("jazz")
      {Lisp-Entry "Systype" () 44 7 ("Object")
        {Lisp-Entry "name" () 47 8 ()}
        {Lisp-Entry "size" () 48 8 ()}
        {Lisp-Entry "precision" () 49 8 ()}
        {Lisp-Entry "scale" () 50 8 ()}
        {Lisp-Entry "default-value" () 51 8 ()}
        {Lisp-Entry "construct-literal" () 55 16 ("self" "new" "read-only" "=" "String" "is?" "null?" "integer?" "or" "assert" "default-value" "scale" "precision" "size" "name" "context")}
        {Lisp-Entry "initialize" () 63 11 ("default-value~self" "scale~self" "precision~self" "size~self" "name~self" "set!" "nextmethod" "default-value" "scale" "precision" "size" "name")}
        {Lisp-Entry "compare-object" () 72 11 (":not-equal" "else" ":equal" "get-default-value" "default-value" "get-scale" "scale" "get-precision" "precision" "get-size" "size" "get-name" "name" "=" "and" ":incompatible" "Systype" "is-not?" "cond" "target")}
        {Lisp-Entry "foldable?" () 85 11 ("true")}
        {Lisp-Entry "fold-object" () 89 11 ("default-value" "scale" "precision" "size" "name" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 100 11 ("default-value" "scale" "precision" "size" "name" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-name" () 115 18 ("name")}
        {Lisp-Entry "get-size" () 119 18 ("size")}
        {Lisp-Entry "get-precision" () 123 18 ("precision")}
        {Lisp-Entry "get-scale" () 127 18 ("scale")}
        {Lisp-Entry "get-default-value" () 131 18 ("default-value")}
        {Lisp-Entry "get-sizeable?" () 135 18 ("size" "null?")}
        {Lisp-Entry "get-fixed?" () 139 18 ("size" "not-null?")}
        {Lisp-Entry "get-precisionable?" () 143 18 ("precision" "not-null?")}
        {Lisp-Entry "get-scalable?" () 147 18 ("scale" "not-null?")}
        {Lisp-Entry "get-defaultable?" () 151 18 ("default-value" "not-null?")}
        {Lisp-Entry "present" () 160 18 ("name" "format")}}}})
"Tab-Sheet"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Tab-Sheet.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Tab-Sheet" () 37 9 ("jazz")
      {Lisp-Entry "Tab-Sheet" () 45 7 ("Container")
        {Lisp-Entry "title-color" () 48 12 ("set-title-color" "get-title-color")}
        {Lisp-Entry "borders" () 51 18 ()}
        {Lisp-Entry "get-title-color" () 59 18 ("title-color")}
        {Lisp-Entry "set-title-color" () 63 18 ("parent" "invalidate-view" "title-color" "set!" "value")}
        {Lisp-Entry "get-transparent?" () 73 11 ("true")}
        {Lisp-Entry "layout" () 82 11 ("get-height" "2" "get-width" "-" "Dimension" "new" "set-size" "1" "Point" "set-position" "get-size" "size" "when" "find-child" "content" "let")}
        {Lisp-Entry "get-class-image" () 96 16 ("Bitmap-Resource")}}}})
"Tab-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Tab-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Tab-View" () 37 9 ("jazz")
      {Lisp-Entry "Tab-View" () 46 7 ("View")
        {Lisp-Entry "orientation" () 49 12 ("set-orientation" "get-orientation" "top")}
        {Lisp-Entry "padding" () 52 8 ()}
        {Lisp-Entry "headers-height" () 53 8 ()}
        {Lisp-Entry "selection" () 54 8 ("0")}
        {Lisp-Entry "add-child" () 62 11 ("layout-view" "update-borders" "false" "set-visible?" "not" "when" "nextmethod" "children" "null?" "first?" "let" "child")}
        {Lisp-Entry "get-orientation" () 76 18 ("orientation")}
        {Lisp-Entry "set-orientation" () 80 18 ("invalidate-view" "orientation" "set!" "o")}
        {Lisp-Entry "get-content" () 85 18 ("content" "locate")}
        {Lisp-Entry "mouse-down" () 94 11 ("set-selection" "when" "find-header" "header" "let" "pos")}
        {Lisp-Entry "update-borders" () 105 11 ("children" "set!" "increase!" "cons" "set-borders" "font" "text-extent" "get-width" "padding" "+" "next" "get-title" "localize" "title" "let*" "header" "dynamic" "function" "for-each" "2" "h" "0" "n" "let")}
        {Lisp-Entry "find-header" () 117 11 ("length" "0" "naturals" "children" ">=" "and" "get-borders" "right" "left" "bind" "n" "header" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "headers-height" "" "when" "get-v" "v" "get-h" "h" "let" "pt")}
        {Lisp-Entry "redraw-header" () 132 11 ("headers-height" "+" "0" "2" "-" "Rect" "new" "invalidate-rect" "child-ranked" "get-borders" "rg" "lf" "bind" "n")}
        {Lisp-Entry "get-selection" () 142 18 ("selection")}
        {Lisp-Entry "set-selection" () 146 18 ("call-selection-handler" "update-view" "redraw-header" "true" "set!" "child-ranked" "set-visible?" "old" "let" "selection" "/=" "when" "user-origin?" "user-origin?:" "false" "force?" "force?:" "sel")}
        {Lisp-Entry "get-selection-name" () 160 18 ("selected-sheet" "get-name")}
        {Lisp-Entry "set-selection-name" () 164 18 ("set-selection" "child-rank" "rank" "child" "sheet" "let*" "name")}
        {Lisp-Entry "selected-sheet" () 170 18 ("selection" "child-ranked")}
        {Lisp-Entry "all-sheets" () 179 18 ("get-children")}
        {Lisp-Entry "remove-every-sheet" () 183 18 ("close-children")}
        {Lisp-Entry "layout" () 192 11 ("children" "set-size" "0" "Point" "set-position" "Tab-Sheet" "is?" "when" "child" "dynamic" "function" "for-each" "get-size" "size" "let")}
        {Lisp-Entry "draw" () 206 11 ("draw-bottom" "bottom" "draw-top" "top" "orientation" "case" "get-size" "size" "let" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-top" () 213 11 ("last" "cdr" "h" "let" "line" "length" "naturals" "5" "draw-text" "Color" "either" "set-text-color" "line-to-preserve" "3" "-" "Black" "1" "unless" "increase!" "decrease!" "when" "get-borders" "rg" "lf" "bind" "2" "selection" "=" "selected?" "get-title-color" "title-color" "get-title" "localize" "title" "n" "header" "dynamic" "function" "for-each" "line-to" "move-to" "Light" "Pen" "set-pen" "edges:" "outer:" "raised" "inner:" "Rect" "new" "draw-edge" "Ansi-Var" "name:" "Font" "set-font" "headers-height" "+" "children" "null?" "if" "content" "get-height" "bottom" "get-width" "right" "top" "0" "left" "let*" "size" "dc")}
        {Lisp-Entry "draw-bottom" () 262 11 ("line-to" "move-to" "Ansi-Var" "Font" "set-font" "Light" "name:" "Pen" "set-pen" "headers-height" "content" "get-height" "bottom" "1" "get-width" "-" "right" "top" "0" "left" "let*" "size" "dc")}
        {Lisp-Entry "get-class-image" () 281 16 ("Bitmap-Resource")}}}})
"Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Table.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Table" () 37 9 ("jazz")
      {Lisp-Entry "Table" () 45 7 ("Object")
        {Lisp-Entry "rows" () 48 18 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" () 56 11 ("rows~self" "set!" "nextmethod" "rows" "rows:")}
        {Lisp-Entry "foldable?" () 61 11 ("true")}
        {Lisp-Entry "fold-object" () 65 11 ("rows" ":rows" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 73 11 ("rows" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-rows" () 84 18 ("rows")}}}})
"Table-Border"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Table-Border.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Table-Border" () 37 9 ("jazz")
      {Lisp-Entry "Table-Border" () 47 7 ("Ansi-Var" "Font" "font:" ":icons" "portfolio:" "row-spacing:" "1" "column-spacing:" "filled-column:" "Entry-Border" "Color" "background:" "tree" "header" "fill" "layout-type:" "content" "vscroll?:" "document" "scroller" "name:" "entry" "style:" "edge" "border-type:" "Border-View")}}})
"Table-Cell"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Table-Cell.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Table-Cell" () 37 9 ("jazz")
      {Lisp-Entry "Table-Cell" () 46 7 ("Ansi-Var" "Font" "font:" "text" "fill" "layout-type:" "content" "vscroll?:" "document" "scroller" "name:" "entry" "style:" "edge" "border-type:" "Border-View")}}})
"Table-Inspector"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "inspector" "Table-Inspector.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.schema.inspector.Table-Inspector" () 37 9 ("jazz")
      {Lisp-Entry "Table-Inspector" () 48 7 ("column-spacing:" "1" "row-spacing:" "cell" "selection-mode:" "filled-column:" "Dark" "Color" "background:" "tree" "header" "fill" "content" "hscroll?:" "vscroll?:" "center" "location:" "scroller" "name:" "border" "layout-type:" "Dimension" "size:" "Layout-View")
        {Lisp-Entry "table" () 51 8 ()}
        {Lisp-Entry "frame-title" () 69 16 ()}
        {Lisp-Entry "frame-position" () 74 16 ("Point")}
        {Lisp-Entry "frame-size" () 79 16 ("Dimension")}
        {Lisp-Entry "get-tree" () 88 18 ("tree" "locate")}
        {Lisp-Entry "inspect-table" () 97 18 ("set-filled-column" "display-table" "get-prefered-width" "+" "column" "dynamic" "function" "map" "widths" "length" "affected" "get-rows" "rows" "get-columns" "columns" "get-tree" "tree" "let*" "table~self" "set!" "filled-column" "filled-column:" "table")}
        {Lisp-Entry "display-table" () 108 11 ("Tree-Label" "value" "map" "present-value" "Tree-Node" "new" "cons" "children:" "add-row" "cdr" "rest" "first" "get-values" "values" "row" "set-display-images?" "when" "Tree-Label-Column" "width:" "get-name" "title:" "false" "toplevel-controls?:" "Tree-Node-Column" "class:" "add-column" "if" "eq?" "node?" "let*" "width" "column" "dynamic" "function" "for-each" "car" "first-column" "let" "remove-columns" "widths" "affected" "rows" "columns" "tree")}
        {Lisp-Entry "present-value" () 128 11 ("->string" "null?" "if" "value")}}}})
"Table-Inspector-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "inspector" "Table-Inspector-Tree.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.schema.inspector.Table-Inspector-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Table-Inspector-Tree" () 46 7 ("Tree-View")}}})
"Table-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Table-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Table-Row" () 37 9 ("jazz")
      {Lisp-Entry "Table-Row" () 45 7 ("Object")
        {Lisp-Entry "children" () 48 18 ()}
        {Lisp-Entry "sons" () 49 18 ()}
        {Lisp-Entry "construct-literal" () 53 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" () 57 11 ("sons~self" "children~self" "set!" "nextmethod" "sons" "children")}
        {Lisp-Entry "foldable?" () 63 11 ("true")}
        {Lisp-Entry "fold-object" () 67 11 ("rows" ":rows" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 75 11 ("rows" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-rows" () 86 18 ("rows")}}}})
"Table-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Table-Text-View.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Table-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Table-Text-View" () 46 7 ("2" "top-padding:" "4" "left-padding:" "Formatted-Text-View")}}})
"Table-Tree-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Table-Tree-View.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Table-Tree-View" () 37 9 ("jazz")
      {Lisp-Entry "Table-Tree-View" () 45 7 ("Tree-View")}}})
"Template-Expander"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "template" "Template-Expander.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.template.Template-Expander" () 37 9 ("jazz")
      {Lisp-Entry "Template-Expander" () 44 7 ("Object")
        {Lisp-Entry "delimiter-escape" () 47 8 ()}
        {Lisp-Entry "delimiter-start" () 48 8 ()}
        {Lisp-Entry "delimiter-end" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("delimiter-end~self" "delimiter-start~self" "delimiter-escape~self" "set!" "nextmethod" "delimiter-end" "delimiter-end:" "delimiter-start" "delimiter-start:" "delimiter-escape" "delimiter-escape:")}
        {Lisp-Entry "expand" () 59 18 ("process-variable" "format" "peek-char" "delimiter-start" "eqv?" "if" "read-char" "set!" "neq?" "while" "c" "let" "template-reader" "input" "with-closed" "output" "associations" "template")}
        {Lisp-Entry "template-reader" () 70 11 ("File-Reader" "String-Reader" "new" "sequence?" "if" "template")}
        {Lisp-Entry "process-variable" () 76 11 ("error" "cdr" "if" "assv" "info" "let" "format" "delimiter-end" "read-delimited" "name" "bind" "associations" "output" "input")}}}})
"Test-Architecture"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "support" "Test-Architecture.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.support.Test-Architecture" () 37 9 ("jazz")
      {Lisp-Entry "Test-Architecture" () 43 7 ("Component")
        {Lisp-Entry "author" () 46 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-image" () 54 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" () 58 16 ()}
        {Lisp-Entry "property-presentation" () 62 16 ("nextmethod" "else" "author" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 68 11 ("author" "name-info" "class-info")}
        {Lisp-Entry "get-addable-default-branch" () 72 11 ("Test-Model")}
        {Lisp-Entry "get-addable-classes" () 76 11 ("Test-Table" "list")}}}})
"Test-Architecture-Form"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "support" "Test-Architecture-Form.fusion"} {Time 128366795640000000L}})
"Test-Model"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "support" "Test-Model.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.support.Test-Model" () 37 9 ("jazz")
      {Lisp-Entry "Test-Model" () 43 7 ("Branch")
        {Lisp-Entry "get-class-image" () 51 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" () 55 16 ()}}}})
"Test-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "support" "Test-Table.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.support.Test-Table" () 37 9 ("jazz")
      {Lisp-Entry "Test-Table" () 43 7 ("Component")
        {Lisp-Entry "description" () 46 12 ("generate" "accessors")}
        {Lisp-Entry "no" () 47 12 ("generate" "accessors" "5")}
        {Lisp-Entry "get-class-image" () 55 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-class-presentation" () 59 16 ()}
        {Lisp-Entry "property-presentation" () 63 16 ("nextmethod" "else" "no" "description" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 70 11 ("no" "description" "name-info" "class-info")}
        {Lisp-Entry "get-row-instance" () 74 11 ("nextmethod" "else" "Integer-Row" "no" "true" "nullable?:" "String-Row" "new" "description" "field-name" "case" "property")}}}})
"Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "tester" "Tester.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "validate.Tester" () 37 9 ("jazz")
      {Lisp-Entry "Tester" () 40 7 ("Component")
        {Lisp-Entry "suite" () 43 12 ("generate" "accessors")}
        {Lisp-Entry "title" () 44 12 ("generate" "accessors")}
        {Lisp-Entry "test" () 52 26 ("tester")}
        {Lisp-Entry "invoke" () 56 21 ("get-message" "get-error" "title" "assertion-failed" "error" "Tester-Error" "catch" "suite" "null?" "if" "proc" "subtitle" "tester")}
        {Lisp-Entry "rpt" () 64 11 ("Tester-Error" "new" "signal" "get-message" "get-error" "subtitle" "title" "suite" "assertion-failed" "form" "tester")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "tester" "Tester.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.tester.Tester" () 37 9 ("jazz")
      {Lisp-Entry "Tester" () 44 7 ("Component")
        {Lisp-Entry "suite" () 47 12 ("generate" "accessors")}
        {Lisp-Entry "title" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "test" () 56 26 ()}
        {Lisp-Entry "invoke" () 60 21 ("get-message" "title" "assertion-failed" "error" "Tester-Error" "catch" "suite" "null?" "if" "proc" "subtitle")}
        {Lisp-Entry "rpt" () 68 11 ("form" "Tester-Error" "new" "signal" "title" "suite" "assertion-failed" "message")}}}})
"Tester-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "tester" "Tester-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "validate.Tester-Error" () 37 9 ("jazz")
      {Lisp-Entry "Tester-Error" () 40 7 ("Error")
        {Lisp-Entry "form" () 43 8 ("generate")}
        {Lisp-Entry "string?" () 44 8 ("generate")}
        {Lisp-Entry "initialize" () 47 11 ("string?~self" "form~self" "set!" "nextmethod" "string?" "form" "self")}
        {Lisp-Entry "get-form" () 58 18 ("form" "self")}
        {Lisp-Entry "get-message" () 67 11 ("->string" "form" "string?" "if" "self")}
        {Lisp-Entry "present-message" () 73 11 ("get-message" "format" "rest" "self")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "tester" "Tester-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.validate.tester.Tester-Error" () 37 9 ("jazz")
      {Lisp-Entry "Tester-Error" () 43 7 ("Error")
        {Lisp-Entry "form" () 46 8 ()}
        {Lisp-Entry "string?" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("string?~self" "form~self" "set!" "nextmethod" "false" "string?" "form")}
        {Lisp-Entry "get-form" () 61 18 ("form")}
        {Lisp-Entry "get-message" () 70 11 ("->string" "form" "string?" "if")}
        {Lisp-Entry "present-message" () 76 11 ("get-message" "format" "list" "rest")}}}})
"Text"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Text" () 37 9 ("jazz")
      {Lisp-Entry "Text" () 45 7 ("Object")
        {Lisp-Entry "paragraphs" () 48 18 ()}
        {Lisp-Entry "construct-literal" () 52 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" () 56 11 ("paragraphs~self" "set!" "nextmethod" "paragraphs" "paragraphs:")}
        {Lisp-Entry "foldable?" () 61 11 ("true")}
        {Lisp-Entry "fold-object" () 65 11 ("paragraphs" ":paragraphs" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 73 11 ("paragraphs" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-paragraphs" () 84 18 ("paragraphs")}}}})
"Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Text-Actions.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Text-Actions" () 46 7 ("one/none" "one/no-space" "one" "one-space" "none" "keep:" "on-remove-spaces" "no-space" "on-display-info" "display-info" "on-top-caret" "top-caret" "on-center-caret" "center-caret" "extend-mark" "on-jump-mark" "jump-mark" ":alt" "on-set-mark" "set-mark" "Space" "on-select-outer" "select-outer" "on-goto-line" "goto-line" "on-find-previous" "find-previous" "F3" "on-find-next" "find-next" "on-paste" "paste" "Insert" "on-copy" "copy" "on-cut" "cut" "delete-word" "Delete" "on-delete-press" "delete" "Backspace" "word?:" "on-backspace-press" "backspace-word" "shift-tab" "Tab" "on-tab-press" "tab" "extend-next" "Next" "on-next" "next" "extend-prior" "Prior" "on-prior" "prior" "extend-document-end" "document-end" "extend-end" "End" "on-end" "end" "extend-document-home" ":control" "document?:" "document-home" ":shift" "extend?:" "extend-home" "Home" "Shortcut" "shortcut:" "on-home" ":focus" "Event-Handler" "action-handler:" "home" "name:" "Actions")}}})
"Text-Color-Combo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Color-Combo.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.text.Text-Color-Combo" () 37 9 ("jazz")
      {Lisp-Entry "Text-Color-Combo" () 46 7 ("pick" "tooltip-text:" "tooltip?:" "body" "name:" "Push-Combo")
        {Lisp-Entry "form-model" () 55 11 ("nextmethod" "else" "Color-Button" "body" "get-name" "case" "form")}
        {Lisp-Entry "popup-colors" () 66 18 ("self" "initiator:" "action-handler" "action-handler:" "Color-Picker" "popup" "get-height" "get-width" "0" "Point" "new" "pos" "let" "geometry" "geometry:" "colors" "colors:")}}}})
"Text-Colorizer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Colorizer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Text-Colorizer" () 37 9 ("jazz")
      {Lisp-Entry "Text-Colorizer" () 45 7 ("Object")
        {Lisp-Entry "text" () 48 8 ()}
        {Lisp-Entry "row" () 49 8 ()}
        {Lisp-Entry "col" () 50 8 ()}
        {Lisp-Entry "runs" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("List-Factory" "new" "runs" "0" "col" "text" "set!" "nextmethod" "t")}
        {Lisp-Entry "apply-style" () 61 18 ("add-runs" "get-col" "add-run" "=" "if" "text" "get-style" "style" "er" "get-row" "sr" "let" "name/style" "end" "start")}
        {Lisp-Entry "add-run" () 70 11 ("get-runs" "get-style" "subseq!" "put-run" "put" "if" "" "and" "length" "+" "to" "str" "run" "dynamic" "function" "for-each" "from" "let" ">" "get-string" "string" "text" "get-paragraph" "paragraph" "let*" "runs" "reset" "0" "col" "set!" "finish-current" "/=" "row" "not" "or" "when" "style" "end" "start" "n")}
        {Lisp-Entry "add-runs" () 97 11 ("else" "0" "get-string" "length" "get-col" "add-run" "=" "cond" "text" "get-paragraph" "paragraph" "to" "from" "n" "for" "loop" "limit" "get-row" "beginning" "let" "style" "end" "start")}
        {Lisp-Entry "put-run" () 107 11 ("Run" "new" "runs" "put" "style" "string")}
        {Lisp-Entry "finish-current" () 111 18 ("wrap-paragraph" "set-runs" "get-output" "let" "Default" "get-style" "subseq!" "Run" "new" "put" "col" ">" "length" "len" "get-string" "string" "text" "get-paragraph" "paragraph" "let*" "runs" "row" "and" "when")}}}})
"Text-Combo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Combo.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Text-Combo" () 37 9 ("jazz")
      {Lisp-Entry "Text-Combo" () 45 7 ("Combo-Box")
        {Lisp-Entry "client" () 48 12 ("set-client" "get-client")}
        {Lisp-Entry "get-client" () 56 18 ("client")}
        {Lisp-Entry "set-client" () 60 18 ("client-update" "set!" "client" "/=" "when" "value")}
        {Lisp-Entry "client-update" () 66 29 ()}
        {Lisp-Entry "selection-change" () 75 26 ()}}}})
"Text-Comparer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Text-Comparer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Text-Comparer" () 38 9 ("jazz")
      {Lisp-Entry "Text-Comparer" () 46 7 ("Object")
        {Lisp-Entry "moniker1" () 49 8 ()}
        {Lisp-Entry "moniker2" () 50 8 ()}
        {Lisp-Entry "lines1" () 51 8 ()}
        {Lisp-Entry "lines2" () 52 8 ()}
        {Lisp-Entry "root" () 53 8 ()}
        {Lisp-Entry "matches" () 54 8 ()}
        {Lisp-Entry "compare-monikers" () 57 18 ("compare-line-sets" "lines2" "read-moniker" "lines1" "moniker2" "moniker1" "set!" "m2" "m1")}
        {Lisp-Entry "compare-line-sets" () 65 11 ("collect-lines" "1" "sames2" "element" "get-rank" "diff" "key:" "" "sort" "sames1" "moniker2" "moniker1" "extract-diff" "node" "map" "sames" "collect-matches" "append!" "matches" "cdr" "for-each" "0" "string-ref" "list" "Compare-Node" "new" "set!" "root" "insert-line" "dynamic" "function" "proc" "get-string" "string" "car" "line" "let*" "not-null?" "and" "if" "collect-commons" "set2" "set1" "commons" "receive" "initial-set2" "initial-set1")}
        {Lisp-Entry "collect-lines" () 87 11 ("get-output" "1" "+" "cdr" "when" "neq?" "essay" "color" "line" "lines2" "lines1" "subseq" "compare-line-sets" "put-sequence" "eq?" "cond" "second" "stop2" "stop1" "true" "set!" "not-null?" "and" "if" "next" "let" "not" "false" "done?" "increase!" "put" "" "while" "create" "end" "proc" "blue" "element" "list" "lines" "rank" "dynamic" "function" "green" "List-Factory" "new" "fact" "next2" "car" "next1" "end2" "last" "end1" "rank2" "first" "get-rank" "rank1" "let*" "set2" "set1" "sames2" "sames1")}
        {Lisp-Entry "collect-commons" () 134 11 ("reverse!" "append!" "reverse" "middle2" "middle1" "commons-bottom" "bottom2" "bottom1" "commons-top" "receive" "values" "cdr" "list" "Compare-Node" "new" "cons" "set!" "get-string" "=" "not-null?" "and" "while" "commons" "line2" "car" "line1" "dynamic" "function" "proc" "let" "set2" "set1")}
        {Lisp-Entry "string-ref" () 157 11 ("element" "length" "" "if" "n" "string")}
        {Lisp-Entry "insert-line" () 163 11 ("0" "1" "+" "list" "null?" "get-key" "key:" "get-children" "find" "matchnode" "c" "add-child" "set-lines" "Compare-Node" "new" "newnode" "string-ref" "key" "let*" "add-line" "=" "basestring" "not-null?" "if" "get-lines" "car" "baseline" "let" "n" "subnode" "dynamic" "function" "proc" "get-string" "string" "letrec" "line" "node")}
        {Lisp-Entry "collect-matches" () 185 11 ("null?" "collect-matches" "map" "apply" "second" "first" "get-moniker" "neq?" "2" "length" "=" "not-null?" "and" "get-lines" "lines" "subnode" "dynamic" "function" "collect-if" "append!" "get-children" "children" "let" "node")}
        {Lisp-Entry "load-moniker" () 204 29 ("load-lines" "moniker")}
        {Lisp-Entry "read-moniker" () 208 11 ("Compare-Line" "new" "collect" "0" "from" "n" "in" "string" "for" "loop" "load-moniker" "lines" "let" "moniker")}
        {Lisp-Entry "print-tree" () 220 18 ("0" "get-children" "1" "+" "subnode" "for-each" "2" "*" "format" "level" "dynamic" "function" "proc" "letrec" "printer" "node")}}}})
"Text-Context-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Context-Menu.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Text-Context-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Text-Context-Menu" () 46 7 ("select-all" "paste" "copy" "view" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "cut" "name:" "Context-Menu")}}})
"Text-Event"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "event" "Text-Event.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.event.Text-Event" () 37 9 ("jazz")
      {Lisp-Entry "Text-Event" () 44 7 ("Event")}}})
"Text-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Explorer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Text-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "Text-Explorer" () 45 7 ("Explorer")
        {Lisp-Entry "text" () 48 8 ()}
        {Lisp-Entry "paragraphs" () 49 8 ()}
        {Lisp-Entry "limit" () 50 8 ()}
        {Lisp-Entry "beginning" () 51 8 ()}
        {Lisp-Entry "ending" () 52 8 ()}
        {Lisp-Entry "start" () 53 8 ()}
        {Lisp-Entry "end" () 54 8 ()}
        {Lisp-Entry "kind" () 55 8 ()}
        {Lisp-Entry "initialize" () 58 11 ("set-kind" "set-range" "set-end" "set-start" "set-direction" "text-ending" "ending" "text-beginning" "beginning" "get-limit" "limit" "get-paragraphs" "paragraphs" "text" "set!" "nextmethod" "range" "range:" "end" "end:" "start" "start:" "forward" "direction" "direction:" "txt")}
        {Lisp-Entry "get-syntax" () 72 29 ()}
        {Lisp-Entry "goto-beginning" () 81 11 ("beginning" "set-start")}
        {Lisp-Entry "goto-ending" () 85 11 ("ending" "set-end")}
        {Lisp-Entry "at-beginning?" () 89 18 ("beginning" "start" "")}
        {Lisp-Entry "at-ending?" () 93 18 ("ending" "end" ">=")}
        {Lisp-Entry "get-start" () 97 18 ("start" "copy")}
        {Lisp-Entry "set-start" () 101 18 ("get-col" "set-col" "get-row" "set-row" "copy" "set!" "start" "not" "if" "when" "pos")}
        {Lisp-Entry "get-end" () 109 18 ("end" "copy")}
        {Lisp-Entry "set-end" () 113 18 ("get-col" "set-col" "get-row" "set-row" "copy" "set!" "end" "not" "if" "when" "pos")}
        {Lisp-Entry "get-range" () 121 18 ("end" "start" "copy" "Range" "new")}
        {Lisp-Entry "set-range" () 125 18 ("get-end" "set-end" "get-start" "set-start" "when" "range")}
        {Lisp-Entry "set-pos" () 131 18 ("set-end" "set-start" "pos")}
        {Lisp-Entry "get-kind" () 141 18 ("kind")}
        {Lisp-Entry "set-kind" () 145 21 ("kind" "set!" "knd")}
        {Lisp-Entry "get-range-string" () 149 18 ("Range" "new" "text" "get-string" "end" "start")}
        {Lisp-Entry "get-marked" () 153 18 ("end" "start" "get-range-string")}
        {Lisp-Entry "get-symbol-string" () 159 18 ("get-marked" "end" "1" "+" "get-range-string" "start" "get-char" "=" "if")}
        {Lisp-Entry "find-marked-symbol" () 165 18 ("get-marked" "find-symbol")}
        {Lisp-Entry "intern-marked-symbol" () 169 18 ("get-marked" "string->symbol")}
        {Lisp-Entry "get-range-symbol" () 173 18 ("get-range-string" "find-symbol" "end" "start")}
        {Lisp-Entry "get-mark" () 177 18 ("get-range" "get-kind" "Explorer-Mark" "new")}
        {Lisp-Entry "next!" () 186 11 ("false" "else" "0" "set-col" "increase-row" "limit" "true" "increase-col" "get-row" "paragraph-length" "get-col" "" "cond" "pos")}
        {Lisp-Entry "previous!" () 198 11 ("false" "else" "paragraph-length" "set-col" "increase-row" "get-row" "true" "increase-col" "0" "get-col" ">" "cond" "pos")}
        {Lisp-Entry "next-cell!" () 210 11 ("next!" "when" "pos")}
        {Lisp-Entry "previous-cell!" () 215 11 ("previous!" "when" "pos")}
        {Lisp-Entry "next-pos" () 220 11 ("text" "next" "offset" "pos")}
        {Lisp-Entry "previous-pos" () 224 11 ("text" "previous" "offset" "pos")}
        {Lisp-Entry "forward" () 228 11 ("end" "next!")}
        {Lisp-Entry "backward" () 232 11 ("start" "previous!")}
        {Lisp-Entry "char-forward" () 236 18 ("end" "next-char" "offset")}
        {Lisp-Entry "next-char" () 240 18 ("get-char" "next-in-text?" "and" "when" "next-pos" "let" "offset" "pos")}
        {Lisp-Entry "char-backward" () 246 18 ("start" "previous-char" "offset")}
        {Lisp-Entry "previous-char" () 250 18 ("get-char" "when" "1" "+" "previous-pos" "let" "offset" "pos")}
        {Lisp-Entry "in-text?" () 256 11 ("paragraph-length" "=" "limit" "" "or" "0" ">=" "and" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "next-in-text?" () 262 11 ("paragraph-length" "=" "and" "in-text?" "limit" "" "if" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "get-char" () 270 11 ("text" "get-char" "get-row" "paragraph-length" "get-col" "" "if" "in-text?" "when" "pos")}
        {Lisp-Entry "get-paragraph" () 277 11 ("paragraphs" "element" "n")}
        {Lisp-Entry "paragraph-string" () 281 11 ("get-paragraph" "get-string" "n")}
        {Lisp-Entry "paragraph-length" () 285 11 ("paragraph-string" "length" "n")}
        {Lisp-Entry "forward-while" () 289 18 ("forward" "unless" "false" "not" "if" "0" "char-forward" "c" "let" "true" "while" "return" "lambda" "call/ec" "predicate")}
        {Lisp-Entry "backward-while" () 302 18 ("backward" "unless" "false" "not" "if" "0" "char-backward" "c" "let" "true" "while" "return" "lambda" "call/ec" "predicate")}
        {Lisp-Entry "forward-until" () 315 18 ("not" "c" "dynamic" "function" "forward-while" "predicate")}
        {Lisp-Entry "backward-until" () 319 18 ("not" "c" "dynamic" "function" "backward-while" "predicate")}
        {Lisp-Entry "forward-to" () 323 18 ("=" "c" "dynamic" "function" "forward-until" "char")}
        {Lisp-Entry "backward-to" () 327 18 ("=" "c" "dynamic" "function" "backward-until" "char")}
        {Lisp-Entry "forward-whitespaces" () 331 18 ("whitespace?" "forward-while")}
        {Lisp-Entry "backward-whitespaces" () 335 18 ("whitespace?" "backward-while")}
        {Lisp-Entry "forward-word" () 344 18 ("false" "forward" "else" "word-constituent?" "not" "or" "cond" "0" "char-forward" "c" "let" "true" "while" "return" "lambda" "call/ec")}
        {Lisp-Entry "forward-non-word" () 356 18 ("false" "forward" "else" "word-constituent?" "not" "or" "cond" "0" "char-forward" "c" "let" "true" "while" "return" "lambda" "call/ec")}
        {Lisp-Entry "backward-word" () 368 18 ("false" "backward" "else" "word-constituent?" "not" "or" "cond" "0" "char-backward" "c" "let" "true" "while" "return" "lambda" "call/ec")}
        {Lisp-Entry "backward-non-word" () 380 18 ("false" "backward" "else" "word-constituent?" "not" "or" "cond" "0" "char-backward" "c" "let" "true" "while" "return" "lambda" "call/ec")}
        {Lisp-Entry "outer-expr" () 392 26 ("backward-word" "forward-word" "rest")}
        {Lisp-Entry "paragraph-start" () 402 18 ("0" "start" "set-col")}
        {Lisp-Entry "paragraph-end" () 406 18 ("get-row" "paragraph-length" "end" "set-col")}
        {Lisp-Entry "previous-paragraph" () 410 18 ("0" "set-col" "start" "increase-row")}
        {Lisp-Entry "next-paragraph" () 415 18 ("0" "set-col" "end" "increase-row")}
        {Lisp-Entry "paragraph-column" () 420 18 ("=" "c" "dynamic" "function" "forward-while")}}}})
"Text-Font-Combo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Font-Combo.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Text-Font-Combo" () 37 9 ("jazz")
      {Lisp-Entry "Text-Font-Combo" () 45 7 ("Text-Combo")
        {Lisp-Entry "client-update" () 53 11 ("Font" "font-list" "list" "name" "dynamic" "function" "map" "set-choices")}
        {Lisp-Entry "selection-change" () 64 11 ("get-font" "get-font-name" "set-content" "Text-Style" "is?" "if" "get-style-at" "style" "client" "get-end" "end" "let*")}
        {Lisp-Entry "combo-choice" () 77 11 ("selection-change" "get-value" "client" "set-selection-font-name")}}}})
"Text-Html-Printer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Html-Printer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Text-HTML-Printer" () 37 9 ("jazz")
      {Lisp-Entry "Text-HTML-Printer" () 45 7 ("HTML-Printer")
        {Lisp-Entry "text" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("text~self" "set!" "nextmethod" "printer" "text")}
        {Lisp-Entry "print-html" () 61 11 ("false" "header?:" "print-content" "dynamic" "function" "get-base" "if" "with-document" "text" "get-moniker" "moniker" "let")}
        {Lisp-Entry "print-content" () 69 11 ("get-bulleted?" "empty-string?" "if" "else" "eq?" "cond" "essay" "style" "get-string" "str" "first-run" "run" "get-format" "fmt" "let*" "paragraph" "row" "dynamic" "function" "for-each-paragraph" "Heading2" "heading2" "Heading1" "heading1" "false" "error?:" "Heading0" "text" "get-style" "heading0" "let" "printer" "format")}}}})
"Text-Palette"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Palette.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Text-Palette" () 37 9 ("jazz")
      {Lisp-Entry "Text-Palette" () 48 7 ("on-insert-table" "insert-table" "table-separator" "on-insert-image" "form:" "insert-image" "image-separator" "on-toggle-ruler" "toggle-ruler" "ruler-separator" "on-pick-highlight-color" "Dark-Red" "on-highlight-color" "highlight-color" "0" "4" "on-pick-text-color" "pick" "Dark-Blue" "color:" "body" "on-text-color" "text-color" "on-increase-indent" "increase-indent" "on-decrease-indent" "decrease-indent" "on-bulleted" "bulleted" "right" "justify-right" "centered" "justify-centered" "left" ":justification" "on-justify" "justification" "justify-left" "top" "selected?:" "alignment-top" "center" "alignment-center" "bottom" "alignment:" "on-alignment" "alignment" "group:" "alignment-bottom" "on-underline" "underline" "on-italic" "italic" "on-bold" ":focus" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "bold" "size" "size-border" "font" "font-border" "enabled?:" "style" "blue:" "green:" "red:" "Medium" "Color" "border-color:" "2" "Rect" "border-insets:" "Dimension" "size:" "style-border" "name:" "View")
        {Lisp-Entry "flow-layout" () 51 8 ()}
        {Lisp-Entry "client" () 52 8 ()}
        {Lisp-Entry "external-name" () 100 16 ("text-palette" "rest")}
        {Lisp-Entry "mouse-activate?" () 104 11 ("false")}
        {Lisp-Entry "palette-class" () 114 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 119 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 124 16 ()}
        {Lisp-Entry "host-activate" () 128 11 ("on-focus-change" "method-name:" "self" "target:" "Event-Handler" "new" "add-focus-listener" "get-application" "appl" "let")}
        {Lisp-Entry "host-deactivate" () 133 11 ("self" "remove-focus-listener" "get-application" "appl" "let")}
        {Lisp-Entry "finish" () 143 11 ("layout-view" "0" "5" "4" "Rect" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "layout" () 149 11 ("get-height" "get-width" "children" "flow-layout" "layout")}
        {Lisp-Entry "on-focus-change" () 158 11 ("get-guest" "eq?" "View-Host" "get-player" "player" "or" "enable-buttons" "activate-text" "on-text" "method-name:" "target:" "Event-Handler" "new" "add-text-listener" "not" "remove-text-listener" "self" "text-listener?" "Formatted-Text-View" "is?" "and" "when" "get-new" "new-focus" "get-old" "old-focus" "get-application" "appl" "let" "evt")}
        {Lisp-Entry "on-text" () 178 11 ("selection-change" ":selection-change" "get-kind" "case" "evt")}
        {Lisp-Entry "on-insert-image" () 183 11 ("insert-styled" "moniker:" "Image-Style" "new" "style" "OpenFile-Dialog" "get-modal" "moniker" "let*" "title:" "form>>" "client" "insert-view" "evt")}
        {Lisp-Entry "on-insert-table" () 191 11 ("2" ":row-count" "width:" ":columns" ":node-column?" "false" "header?:" "Dimension" "size:" "client" "insert-table" "evt")}
        {Lisp-Entry "enable-buttons" () 195 29 ("insert-table" "insert-image" "toggle-ruler" "highlight-color" "text-color" "increase-indent" "decrease-indent" "bulleted" "numbered" "justify-right" "justify-centered" "justify-left" "alignment-top" "alignment-center" "alignment-bottom" "underline" "italic" "bold" "size" "font" "style" "locate" "set-enabled?" "enabled?")}
        {Lisp-Entry "activate-text" () 225 11 ("selection-change" "size" "font" "style" "locate" "set-client" "set!" "client" "/=" "when" "text")}
        {Lisp-Entry "selection-change" () 239 11 ("let" "else" "list" "get-application" "set-selected" "reference:" "class-of" "type-name" "model-name:" "action:" "Form" "form:" "Designer" "new" "designer" "get-view" "view" "View-Style" "typecase" "get-bulleted?" "bulleted" "right" "justify-right" "centered" "justify-centered" "left" "get-justification" "justify-left" "top" "alignment-top" "center" "alignment-center" "eq?" "alignment-bottom" "get-underline?" "underline" "get-italic?" "italic" "get-bold?" "bold" "set-selected?" "get-font" "Text-Style" "is?" "essay" "bottom" "get-alignment" "either" "alignment" "get-style-at" "get-row" "get-paragraph" "get-format" "format" "client" "get-end" "end" "let*" "size" "font" "style" "locate" "selection-change")}}}})
"Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Text-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Text-Preferences" () 46 7 ("Bitmap-Resource" "icon:" "title:" "Document-Preferences")}}})
"Text-Printer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "printer" "Text-Printer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.printer.Text-Printer" () 37 9 ("jazz")
      {Lisp-Entry "Text-Printer" () 44 7 ("Line-Printer")
        {Lisp-Entry "text" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("text~self" "set!" "nextmethod" "text")}
        {Lisp-Entry "put-line" () 55 11 ("text" "insert-line" "proper?" "line")}
        {Lisp-Entry "fresh-line?" () 59 11 ("text" "at-line-start?")}}}})
"Text-Request"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "Text-Request.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.dialog.Text-Request" () 37 9 ("jazz")
      {Lisp-Entry "Text-Request" () 47 7 ("cancel" "default?:" "on-ok" "action-handler:" "title:" "ok" "on-cancel" "escape-press-handler:" "on-return" ":host" "Event-Handler" "return-press-handler:" "wrap?:" "top-padding:" "2" "left-padding:" "text" "fill" "layout-type:" "content" "name:" "vscroll?:" "hscroll?:" "edge" "border-type:" "7" "6" "Point" "position:" "Dimension" "size:" "View")
        {Lisp-Entry "dialog-class" () 66 16 ("Text-Request-Dialog")}
        {Lisp-Entry "Text-Request-Dialog" () 71 14 ("Host-Dialog")
          {Lisp-Entry "focus-gain" () 74 13 ("text" "guest" "locate" "acquire-focus" "nextmethod")}
          {Lisp-Entry "on-return" () 79 13 ("get-modal-result" "end-modal" "text" "guest" "locate" "insert-newline" "get-shift?" "if" "evt")}
          {Lisp-Entry "get-modal-result" () 85 13 ("text" "guest" "locate" "get-string-content")}}}}})
"Text-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Text-Row.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.row.Text-Row" () 37 9 ("jazz")
      {Lisp-Entry "Text-Row" () 46 7 ("Value-Row")
        {Lisp-Entry "present" () 54 11 ("format" "get-paragraphs" "car" "Text" "is?" "null?" "if" "value")}
        {Lisp-Entry "get-edited-value" () 67 11 ("editor" "get-content")}
        {Lisp-Entry "get-edited-modified?" () 71 11 ("editor" "get-controller" "get-modified?")}
        {Lisp-Entry "edit" () 80 11 ("true" "set-visible?" "value" "editor" "set-content" "edit-in-row")}
        {Lisp-Entry "close-editor" () 86 11 ("close-in-row-editor")}
        {Lisp-Entry "select-editor" () 90 11 ("focus-editor")}
        {Lisp-Entry "focus-editor" () 94 11 ("editor" "acquire-focus" "rest")}
        {Lisp-Entry "editor-height" () 98 11 ()}
        {Lisp-Entry "new-editor" () 102 11 ("0" "left-padding:" "editor-class" "new")}
        {Lisp-Entry "editor-class" () 107 11 ("Row-Text-View")}
        {Lisp-Entry "update" () 111 11 ("1" "self" "row-rank" "Cell" "new" "invalidate-cell" "present" "set-title" "true" "set-property-modified?" "get-children" "second" "data" "get-tree" "tree" "let" "set-value" "value")}
        {Lisp-Entry "in-edition?" () 120 11 ("get-sons")}}}})
"Text-Search"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Text-Search.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.search.Text-Search" () 37 9 ("jazz")
      {Lisp-Entry "Text-Search" () 48 7 ("cpp/java-files" "jazz-files" "Dimension" "size:" "Point" "position:" "active-window" "title:" "domain" "name:" "Search-View")
        {Lisp-Entry "get-search-domains" () 64 11 ("cpp/java-files" "jazz-files" "active-window")}
        {Lisp-Entry "get-active-window-domain" () 70 11 ("active-window")}
        {Lisp-Entry "search-targets" () 79 11 ("search-threaded" "thread" "function" "execute:" "self" "context:" "information:" "name:" "Thread" "new" "else" "search-active-window" "active-window" "get-search-domain" "case" "targets")}
        {Lisp-Entry "search-threaded" () 92 24 ("close-manager" "unregister-activity" "get-activity-manager" "manager" "when" "select-results" "get-search-targets" "add-results" "text" "set-mode" "get-results" "results" "let" "dynamic" "function" "execute-primary" "search" "found" "count-files" "get-search-reporter" "reporter" "let*" "targets")}
        {Lisp-Entry "search" () 107 11 ("search-cpp/java-files" "cpp/java-files" "search-jazz-files" "jazz-files" "get-search-domain" "case" "reporter" "targets")}
        {Lisp-Entry "set-session-properties" () 118 11 ("get-active-domain" "set-search-domain" "nextmethod" "config")}
        {Lisp-Entry "count-files" () 128 11 ("count-cpp/java-files" "cpp/java-files" "count-jazz-files" "jazz-files" "get-search-domain" "case")}
        {Lisp-Entry "Jazz-Count" () 134 14 ()}
        {Lisp-Entry "count-jazz-files" () 138 11 ("jazz-search-directory" "count-jazz-directory" "set!" "Jazz-Count" "unless")}
        {Lisp-Entry "count-jazz-directory" () 144 11 ("ignored-directories:" "increase!" "ci=" "test:" "get-extension" "member?" "when" "file" "dynamic" "function" "iterate-directory" "0" "count" "let" "directory")}
        {Lisp-Entry "jazz-search-directory" () 154 11 ("Home" "else" "Root" "Directory" "Jazz-Branch" "is-alias?" "cond")}
        {Lisp-Entry "Cpp/Java-Count" () 163 14 ()}
        {Lisp-Entry "count-cpp/java-files" () 167 11 ("set!" "Cpp/Java-Count" "unless" "search-manager" "tools" "get-preferences" "get-cpp/java-directories" "increase!" "get-extension" "member?" "when" "file" "iterate-directory" "directory" "for-each" "0" "dynamic" "function" "count" "let")}
        {Lisp-Entry "setup-search-reporter" () 183 11 ("set-step" "set-pos" "1" "Range" "new" "set-range" "count" "reporter")}
        {Lisp-Entry "search-active-window" () 194 11 ("acquire-focus" "bring-to-front" "false" "find-forward" "get-start" "set-caret" "Text-View" "get-guest" "guest" "Host-Frame" "is?" "car" "frame" "1" "length" ">=" "when" "get-stage" "get-windows" "frames" "let" "strings")}
        {Lisp-Entry "search-jazz-files" () 207 11 ("get-output" "jazz-constituent?" "jazz-search-directory" "list" "search-in-directories" "get-expression?" "expression?" "get-ignore-case?" "ignore-case?" "get-whole-words?" "whole-words?" "List-Factory" "new" "factory" "let" "reporter" "targets")}
        {Lisp-Entry "search-cpp/java-files" () 216 11 ("get-output" "cpp/java-constituent?" "search-in-directories" "search-manager" "tools" "get-preferences" "get-cpp/java-directories" "directories" "get-expression?" "expression?" "get-ignore-case?" "ignore-case?" "get-application" "get-whole-words?" "whole-words?" "List-Factory" "new" "factory" "let" "reporter" "targets")}}}})
"Text-Search-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "search" "Text-Search-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.search.Text-Search-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Text-Search-Preferences" () 46 7 ("title:" "Search-View-Preferences")
        {Lisp-Entry "active-domain" () 49 12 ("generate" "accessors")}}}})
"Text-Showcase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "showcase" "Text-Showcase.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.showcase.Text-Showcase" () 37 9 ("jazz")
      {Lisp-Entry "Text-Showcase" () 44 7 ("View")}}})
"Text-Size-Combo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Size-Combo.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Text-Size-Combo" () 37 9 ("jazz")
      {Lisp-Entry "Text-Size-Combo" () 45 7 ("Text-Combo")
        {Lisp-Entry "client-update" () 53 11 ("Font" "size-list" "->string" "list" "size" "dynamic" "function" "map" "set-choices")}
        {Lisp-Entry "selection-change" () 64 11 ("get-font" "get-point-size" "->string" "set-content" "Text-Style" "is?" "if" "get-style-at" "style" "client" "get-end" "end" "let*")}
        {Lisp-Entry "combo-choice" () 77 11 ("selection-change" "get-value" "client" "set-selection-point-size")}}}})
"Text-Slide-Conductor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "slide" "Text-Slide-Conductor.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.slide.Text-Slide-Conductor" () 37 9 ("jazz")
      {Lisp-Entry "Text-Slide-Conductor" () 45 7 ("Slide-Conductor")
        {Lisp-Entry "client" () 48 12 ("generate" "accessors")}}}})
"Text-Style"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Style.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Text-Style" () 37 9 ("jazz")
      {Lisp-Entry "Text-Style" () 45 7 ("frame" "highlight" "color" "font" "decoration" "font-style" "font-weight" "font-size" "initialize" "font-family" "alignment" "Style")
        {Lisp-Entry "get-height" () 65 11 ("font" "get-metrics" "get-height")}
        {Lisp-Entry "run-width" () 69 11 ("font" "text-width" "get-string" "string" "let" "run")}
        {Lisp-Entry "scan" () 79 11 ("increase!" "font" "get-char-width" "2" "/" "round" "+" "-" "width" "cdr" "set!" "car" "" "while" "begin" "=" "if" "element" "c" "min" "max" "below" "from" "n" "for" "loop" "length" "len" "right" "mid" "left" "get-string" "string" "let" "proc" "run" "tabs" "end" "start" "h")}
        {Lisp-Entry "Break-Characters" () 107 14 ()}
        {Lisp-Entry "wrap" () 111 11 ("=" ">=" "if" "self" "subseq!" "Run" "new" "either" "let" "not" "or" ">" "and" "+" "Break-Characters" "memq?" "when" "set!" "right" "mid" "left" "n" "c" "dynamic" "function" "scan" "rightmost" "brk-right" "brk" "0" "offset" "1" "-" "end" "length" "len" "get-string" "string" "start" "let*" "run" "break" "place" "tabs" "width" "v" "h" "margin" "context")}
        {Lisp-Entry "height-update" () 143 11 ("height")}
        {Lisp-Entry "draw-style" () 152 11 ("frame-rect" "Rect" "new" "rect" "with" "frame" "when" "draw-tabbed-text" "dynamic" "function" "highlight" "with-highlight-color" "width" "let" "0" "false" "draw-text" "begin" "not" "justify-element" "+" "get-metrics" "get-height" "font-height" "let*" "color" "either" "Black" "registered-color" "set-text-color" ":print-black/white?" "getf" "if" "font" "set-font" "enabled?" "left" "tab-stops" "line-height" "v" "h" "string" "context" "dc")}}}})
"Text-Style-Combo"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-Style-Combo.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.text.Text-Style-Combo" () 37 9 ("jazz")
      {Lisp-Entry "Text-Style-Combo" () 45 7 ("Text-Combo")
        {Lisp-Entry "client-update" () 53 11 ("set-choices" "get-all-styles" "->string" "list" "name" "dynamic" "function" "List" "map-to" "names" "let")}
        {Lisp-Entry "get-all-styles" () 61 11 ("union" "get-styles" "styles" "client" "get-formats" "exemplar-name" "map" "remove-nils" "formats" "let")}
        {Lisp-Entry "selection-change" () 72 11 ("get-base" "get-name" "either" "->string" "set-content" "get-style-at" "style" "client" "get-end" "end" "let*")}
        {Lisp-Entry "combo-choice" () 83 11 ("selection-change" "get-value" "client" "set-selection-style")}
        {Lisp-Entry "exemplar-name" () 93 11 ("get-name" "exemplar")}}}})
"Text-Surrogate"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "surrogate" "Text-Surrogate.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.surrogate.Text-Surrogate" () 37 9 ("jazz")
      {Lisp-Entry "Text-Surrogate" () 46 7 ("View-Surrogate")
        {Lisp-Entry "cursor-update" () 54 11 ("nextmethod" "else" "client" "cursor-update" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "mouse-down" () 65 11 ("nextmethod" "else" "client" "mouse-down" "select-in-editor" "select?" "when" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "drag-move" () 73 11 ("nextmethod" "else" "client" "drag-move" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "drag-up" () 79 11 ("nextmethod" "else" "client" "drag-up" "" "apply" "edit" "editor" "get-mode" "case" "rest" "pos")}
        {Lisp-Entry "double-click" () 85 11 ("nextmethod" "else" "client" "double-click" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "context-menu" () 91 11 ("nextmethod" "else" "client" "context-menu" "edit" "editor" "get-mode" "case" "pos")}
        {Lisp-Entry "key-press" () 102 11 ("nextmethod" "else" "client" "key-press" "edit" "editor" "get-mode" "case" "key")}}}})
"Text-Syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "syntax" "Text-Syntax.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.syntax.Text-Syntax" () 37 9 ("jazz")
      {Lisp-Entry "Text-Syntax" () 45 7 ("Object")
        {Lisp-Entry "comment-string" () 53 26 ()}
        {Lisp-Entry "title-comment-string" () 57 26 ()}
        {Lisp-Entry "get-constituent-test" () 66 26 ("word-constituent?")}
        {Lisp-Entry "text-constituent?" () 70 18 ("get-constituent-test" "proc" "let" "char")}
        {Lisp-Entry "get-catalog-context" () 80 11 ("get-application" "get-catalog-context")}
        {Lisp-Entry "translate-key" () 89 26 ("key")}}}})
"Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.Text-View" () 38 9 ("jazz")
      {Lisp-Entry "Text-View" () 63 7 ("left-padding:" "White" "name:" "Color" "background:" "Document" "Outline-View")
        {Lisp-Entry "Active-Selection-Color" () 66 21 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "Inactive-Selection-Color" () 69 21 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "Caret-Pen" () 73 14 ("Black" "name:" "Pen")}
        {Lisp-Entry "text" () 78 22 ("set-text" "get-text")}
        {Lisp-Entry "text-content" () 80 22 ("set-text-content" "get-text-content")}
        {Lisp-Entry "editable?" () 81 22 ("set-editable?" "get-editable?" "true")}
        {Lisp-Entry "selectable?" () 82 22 ("set-selectable?" "get-selectable?" "true")}
        {Lisp-Entry "wrap?" () 83 22 ("set-wrap?" "get-wrap?" "false")}
        {Lisp-Entry "default-format" () 84 22 ("set-default-format" "get-default-format" "new-default-format")}
        {Lisp-Entry "default-style" () 85 22 ("set-default-style" "get-default-style" "new-default-style")}
        {Lisp-Entry "paragraph-spacing" () 86 22 ("set-paragraph-spacing" "get-paragraph-spacing")}
        {Lisp-Entry "accepts-returns?" () 87 22 ("set-accepts-returns?" "get-accepts-returns?" "true")}
        {Lisp-Entry "focus-selects-all?" () 88 22 ("set-focus-selects-all?" "get-focus-selects-all?" "false")}
        {Lisp-Entry "show-unfocused-selection?" () 89 22 ("set-show-unfocused-selection?" "get-show-unfocused-selection?" "true")}
        {Lisp-Entry "active-selection-color" () 90 22 ("set-active-selection-color" "get-active-selection-color" "Active-Selection-Color")}
        {Lisp-Entry "inactive-selection-color" () 91 22 ("set-inactive-selection-color" "get-inactive-selection-color" "Inactive-Selection-Color")}
        {Lisp-Entry "caret-pen" () 92 22 ("set-caret-pen" "get-caret-pen" "Caret-Pen")}
        {Lisp-Entry "platform" () 93 22 ("set-platform" "get-platform")}
        {Lisp-Entry "colorize?" () 96 22 ("set-colorize?" "get-colorize?" "true")}
        {Lisp-Entry "syntax" () 99 18 ()}
        {Lisp-Entry "selection-anchor" () 100 18 ()}
        {Lisp-Entry "selecting?" () 101 18 ("false")}
        {Lisp-Entry "selection-mode" () 102 18 ("char")}
        {Lisp-Entry "virtual-h" () 103 18 ()}
        {Lisp-Entry "caret-visible?" () 104 18 ("false")}
        {Lisp-Entry "caret-position" () 105 18 ()}
        {Lisp-Entry "caret-pulse" () 106 18 ()}
        {Lisp-Entry "caret-pulsed?" () 107 18 ("false")}
        {Lisp-Entry "has-focus?" () 108 18 ("false")}
        {Lisp-Entry "text-listeners" () 109 18 ()}
        {Lisp-Entry "undoer" () 110 18 ("self" "Undoer" "new")}
        {Lisp-Entry "user-tabs" () 111 18 ()}
        {Lisp-Entry "tab-stops" () 112 18 ()}
        {Lisp-Entry "mark" () 113 18 ()}
        {Lisp-Entry "formats" () 114 18 ("Exemplar-Domain" "new")}
        {Lisp-Entry "styles" () 115 18 ("Exemplar-Domain" "new")}
        {Lisp-Entry "controller" () 116 18 ()}
        {Lisp-Entry "previous-pos" () 117 18 ()}
        {Lisp-Entry "autoscroll-pulse" () 118 18 ()}
        {Lisp-Entry "autoscroll-amount" () 119 18 ()}
        {Lisp-Entry "wrap-width" () 120 18 ()}
        {Lisp-Entry "wrap-patch" () 121 18 ()}
        {Lisp-Entry "contiguous-undo-range" () 122 18 ()}
        {Lisp-Entry "verify-reload" () 129 11 ()}
        {Lisp-Entry "current-history-item" () 130 11 ()}
        {Lisp-Entry "install" () 133 11 ("get-default-style" "add-style" "get-default-format" "add-format" "new-syntax" "syntax" "set!" "nextmethod" "rest")}
        {Lisp-Entry "install-child" () 140 11 ("nextmethod" "else" "form->node" "set-text" "text" "get-model-name" "case" "restore-form" "creator-branch" "creator" "form")}
        {Lisp-Entry "finish" () 147 11 ("make-tab-stops" "tab-stops" "pulse-caret" "evt" "dynamic" "function" "execute:" "Event-Handler" "pulse-handler:" "period:" "self" "owner:" "Pulse" "new" "caret-pulse" "set!" "editable?" "empty-content" "set-content" "text" "not" "when" "nextmethod" "rest")}
        {Lisp-Entry "destroy" () 156 11 ("nextmethod" "show-text-cursor" "close" "controller" "when")}
        {Lisp-Entry "new-syntax" () 163 29 ("Text-Syntax" "new")}
        {Lisp-Entry "get-syntax" () 167 18 ("syntax")}
        {Lisp-Entry "set-syntax" () 171 18 ("syntax~self" "set!" "syntax")}
        {Lisp-Entry "get-text-view" () 175 11 ("self")}
        {Lisp-Entry "new-default-format" () 179 11 ("Default" "name:" "Format" "new")}
        {Lisp-Entry "new-default-style" () 183 11 ("Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "new")}
        {Lisp-Entry "get-editable?" () 192 18 ("editable?")}
        {Lisp-Entry "set-editable?" () 196 18 ("editable?" "set!" "value")}
        {Lisp-Entry "get-selectable?" () 200 18 ("selectable?")}
        {Lisp-Entry "set-selectable?" () 204 18 ("selectable?" "set!" "value")}
        {Lisp-Entry "get-wrap?" () 208 18 ("wrap?")}
        {Lisp-Entry "set-wrap?" () 212 18 ("wrap?" "set!" "value")}
        {Lisp-Entry "get-accepts-returns?" () 216 18 ("accepts-returns?")}
        {Lisp-Entry "get-wrap-width" () 220 18 ("wrap-width")}
        {Lisp-Entry "set-wrap-width" () 224 18 ("wrap-width" "set!" "value")}
        {Lisp-Entry "set-accepts-returns?" () 228 18 ("accepts-returns?" "set!" "flag")}
        {Lisp-Entry "get-focus-selects-all?" () 232 18 ("focus-selects-all?")}
        {Lisp-Entry "set-focus-selects-all?" () 236 18 ("focus-selects-all?" "set!" "flag")}
        {Lisp-Entry "get-show-unfocused-selection?" () 240 18 ("show-unfocused-selection?")}
        {Lisp-Entry "set-show-unfocused-selection?" () 244 18 ("show-unfocused-selection?" "set!" "value")}
        {Lisp-Entry "get-active-selection-color" () 248 18 ("active-selection-color")}
        {Lisp-Entry "set-active-selection-color" () 252 18 ("invalidate-view" "active-selection-color" "set!" "value")}
        {Lisp-Entry "set-inactive-selection-color" () 257 18 ("invalidate-view" "inactive-selection-color" "set!" "value")}
        {Lisp-Entry "get-colorize?" () 262 18 ("colorize?")}
        {Lisp-Entry "set-colorize?" () 266 18 ("colorize?" "set!" "value")}
        {Lisp-Entry "get-paragraphs" () 270 21 ("root-row" "get-sons")}
        {Lisp-Entry "set-paragraphs" () 274 21 ("root-row" "set-sons" "lst")}
        {Lisp-Entry "get-undoer" () 278 18 ("undoer")}
        {Lisp-Entry "frame-workspaces" () 287 11 ("text")}
        {Lisp-Entry "install-in-host" () 296 11 ("get-controller" "install-in-host" "nextmethod" "host")}
        {Lisp-Entry "focus-actions" () 306 11 ("nextmethod" "text" "find-actions" "cons")}
        {Lisp-Entry "get-controller" () 316 11 ("new-controller" "set!" "controller" "unless")}
        {Lisp-Entry "new-controller" () 322 11 ("default-console?" "console?:" "default-tool?" "tool?:" "self" "Document-Controller" "new")}
        {Lisp-Entry "default-tool?" () 326 29 ("false")}
        {Lisp-Entry "default-console?" () 330 29 ("false")}
        {Lisp-Entry "save" () 334 11 ("get-controller" "save")}
        {Lisp-Entry "save-as" () 338 11 ("get-controller" "save-as")}
        {Lisp-Entry "save-all" () 342 26 ("get-controller" "save-all")}
        {Lisp-Entry "get-moniker" () 346 18 ("get-controller" "get-moniker")}
        {Lisp-Entry "set-moniker" () 350 18 ("get-controller" "set-moniker" "moniker")}
        {Lisp-Entry "get-modified?" () 354 11 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-modified?" () 358 11 ("get-controller" "set-modified?" "state")}
        {Lisp-Entry "get-read-only?" () 362 11 ("get-controller" "get-read-only?")}
        {Lisp-Entry "write-allowed?" () 366 11 ("get-controller" "write-allowed?" "editable?" "and")}
        {Lisp-Entry "update-status" () 370 11 ("get-controller" "update-status")}
        {Lisp-Entry "update-moniker-time" () 374 11 ("get-controller" "update-moniker-time" "moniker")}
        {Lisp-Entry "confirm-close" () 378 11 ("get-controller" "confirm-close" "rest")}
        {Lisp-Entry "tool-update" () 382 11 ("tool?")}
        {Lisp-Entry "console-update" () 386 11 ("console?")}
        {Lisp-Entry "new-explorer" () 396 16 ("Text-Explorer" "new" "apply" "rest" "object")}
        {Lisp-Entry "explorer-class" () 400 26 ("Text-Explorer")}
        {Lisp-Entry "on-select-outer" () 404 11 ("select-outer" "evt")}
        {Lisp-Entry "select-outer" () 408 29 ("get-range" "set-selection" "outer-expr" "when" "dynamic" "function" "with-safe-explore" "get-selection" "range:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "with-safe-explore" () 416 11 ("ignore" "throw-cancel" "get-range" "set-selection" "yes" "no:" "yes:" "question" "type:" "get-message" "message-box" "eq?" "when" "case" "err" "Explore-Error" "catch" "ask" "action" "action:" "proc")}
        {Lisp-Entry "focus-gain" () 434 11 ("selection" "invalidate-selection" "has-selection?" "select-all" "focus-selects-all?" "when" "update-caret" "true" "has-focus?" "set!" "show-text-cursor" "nextmethod")}
        {Lisp-Entry "focus-lose" () 445 11 ("selection" "invalidate-selection" "has-selection?" "when" "hide-caret" "false" "has-focus?" "set!" "show-text-cursor" "nextmethod" "view" "window")}
        {Lisp-Entry "focus-activate" () 454 11 ("focus-document")}
        {Lisp-Entry "focus-document" () 458 11 ("acquire-focus")}
        {Lisp-Entry "mouse-leave" () 462 11 ("show-text-cursor")}
        {Lisp-Entry "on-backspace-press" () 466 11 ("get-property" "word?:" "backspace-press" "evt")}
        {Lisp-Entry "on-delete-press" () 470 11 ("get-property" "word?:" "delete-press" "evt")}
        {Lisp-Entry "on-paragraph-style" () 474 11 ("style:" "get-property" "set-selection-style" "evt")}
        {Lisp-Entry "on-numbered" () 478 11 ("on-numbered" "unimplemented" "evt")}
        {Lisp-Entry "on-bulleted" () 482 11 ("toggle-bulleted" "paragraph" "row" "dynamic" "function" "for-each-selected-paragraph" "evt")}
        {Lisp-Entry "on-decrease-indent" () 488 11 ("indent-paragraph" "paragraph" "row" "dynamic" "function" "for-each-selected-paragraph" "evt")}
        {Lisp-Entry "on-increase-indent" () 494 11 ("indent-paragraph" "paragraph" "row" "dynamic" "function" "for-each-selected-paragraph" "evt")}
        {Lisp-Entry "on-justify" () 500 11 ("set-justification" "paragraph" "row" "dynamic" "function" "for-each-selected-paragraph" ":justification" "get-property" "justification" "let" "evt")}
        {Lisp-Entry "on-alignment" () 507 11 ("get-selection" "set-text-alignment" "alignment:" "get-property" "alignment" "let" "evt")}
        {Lisp-Entry "on-text-style" () 512 11 ("bell" "evt")}
        {Lisp-Entry "on-text-font" () 516 11 ("get-selection" "set-text-font" "close-popups" ":initial-font" "ChooseFont-Dialog" "get-modal" "font" "get-style" "get-font" "essay" "current" "get-col" "get-run" "run" "get-row" "get-paragraph" "par" "get-caret" "caret" "let*" "evt")}
        {Lisp-Entry "on-text-color" () 526 11 ("get-selection" "set-text-color" "Black" "name:" "Color" "either" "get-body" "set-color" "when" "close-popups" "get-sender" "popup-initiator" "combo" "color:" "get-property" "color" "let" "evt")}
        {Lisp-Entry "on-pick-text-color" () 535 11 ("get-sender" "pick-text-color" "evt")}
        {Lisp-Entry "on-highlight-color" () 539 11 ("get-selection" "set-highlight-color" "White" "name:" "Color" "either" "get-body" "set-color" "when" "close-popups" "get-sender" "popup-initiator" "combo" "color:" "get-property" "color" "let" "evt")}
        {Lisp-Entry "on-pick-highlight-color" () 548 11 ("get-sender" "pick-highlight-color" "evt")}
        {Lisp-Entry "add-text-listener" () 557 18 ("add-listener" "text-listeners" "set!" "listener")}
        {Lisp-Entry "remove-text-listener" () 561 18 ("remove-listener" "text-listeners" "set!" "listener")}
        {Lisp-Entry "text-listener?" () 565 18 ("text-listeners" "listener?" "object")}
        {Lisp-Entry "process-selection-change" () 569 18 ("invoke" "listener" "dynamic" "function" "for-each" "self" ":selection-change" "Text-Event" "new" "evt" "let" "text-listeners" "when")}
        {Lisp-Entry "on-get-latest" () 582 18 ("get-controller" "get-latest" "evt")}
        {Lisp-Entry "on-checkout" () 586 18 ("get-controller" "checkout" "evt")}
        {Lisp-Entry "on-checkin" () 590 18 ("get-controller" "checkin" "evt")}
        {Lisp-Entry "on-undo-checkout" () 594 18 ("get-controller" "undo-checkout" "evt")}
        {Lisp-Entry "on-show-history" () 598 11 ("get-controller" "show-history" "evt")}
        {Lisp-Entry "on-show-changes" () 602 11 ("get-controller" "show-changes" "evt")}
        {Lisp-Entry "key-press" () 611 11 ("record" "record-event?" "content:" "self" "key:" ":char" "if" "Event" "new" "event" "on-insert" ":focus" "Event-Handler" "handler" "get-recorder" "recorder" "get-application" "appl" "let*" "Non-Standard-Characters" "memq?" "macro-recording?" "and" "when" "char-press" "true" "set!" "syntax" "translate-key" "translated" "false" "char?" "let" "hide-text-cursor" "key")}
        {Lisp-Entry "backspace-press" () 627 11 ("backspace" "false" "word?" "word?:" "key")}
        {Lisp-Entry "delete-press" () 631 11 ("delete-action" "false" "word?" "word?:" "key")}
        {Lisp-Entry "return-press" () 635 11 ("insert-newline" "accepts-returns?" "when" "key")}
        {Lisp-Entry "tab-press" () 640 11 ("insert-char" "shift-key?" "navigate-view" "accepts-returns?" "not" "if" "modifiers" "key")}
        {Lisp-Entry "char-press" () 646 26 ("insert-char" "translated" "key")}
        {Lisp-Entry "reset-virtual" () 650 11 ("virtual-h" "set!")}
        {Lisp-Entry "on-insert" () 654 11 ("insert-string" ":string" "call-key-press" ":char" ":key" "case" "content:" "get-property" "content" "get-kind" "kind" "let" "evt")}
        {Lisp-Entry "install-scroller?" () 667 11 ("true")}
        {Lisp-Entry "default-extension" () 671 11 ()}
        {Lisp-Entry "extensions" () 675 11 ()}
        {Lisp-Entry "load-content" () 679 11 ("update-status" "read-content" "set-content" "not" "if" "moniker")}
        {Lisp-Entry "empty-content" () 686 29 ("list" "paragraphs:" "Text" "new")}
        {Lisp-Entry "get-content" () 690 11 ("get-paragraphs" "paragraph->string" "List" "map-to")}
        {Lisp-Entry "set-content" () 694 11 ("set-unformatted-content" "lst")}
        {Lisp-Entry "set-unformatted-content" () 698 11 ("complete-setup" "get-row-height" "increase!" "wrap-paragraph" "set!" "set-next" "set-previous" "make-string-paragraph" "paragraph" "let" "string" "dynamic" "function" "map" "rows" "root-row" "previous" "height" "0" "count" "get-paragraphs" "pair?" "null?" "or" "if" "empty-content" "either" "let*" "lst")}
        {Lisp-Entry "get-string-content" () 717 18 ("cn" "get-content" "join")}
        {Lisp-Entry "set-string-content" () 721 18 ("call-content-change" "colorize-syntax" "parse-string-content" "set-content" "string?" "assert" "content")}
        {Lisp-Entry "make-string-paragraph" () 728 11 ("Default" "get-style" "Run" "new" "list" "empty-string?" "if" "make-paragraph" "string" "format")}
        {Lisp-Entry "make-paragraph" () 737 11 ("fix-view-style-parent" "get-default-style" "get-font" "get-metrics" "get-height" "set-row-height" "0" "set-level" "root-row" "set-father" "set-runs" "set-string" "Default" "get-format" "either" "set-format" "self" "set-parent" "Paragraph" "new" "paragraph" "let" "runs" "string" "format")}
        {Lisp-Entry "read-content" () 750 26 ("colorize-syntax" "colorize?" "when" "update-moniker-time" "read-moniker" "set-content" "moniker")}
        {Lisp-Entry "read-moniker" () 757 29 ("load-lines" "moniker")}
        {Lisp-Entry "save-content" () 761 11 ("undoer" "reset-save-depth" "false" "set-modified?" "update-status" "get-modified?" "not" "if" "update-moniker-time" "save-to" "moniker")}
        {Lisp-Entry "save-to" () 770 11 ("use-utf8?:" "platform" "platform:" "save-lines" "determine-use-utf8?" "use-utf8?" "get-limit" "limit" "get-content" "content" "let*" "moniker")}
        {Lisp-Entry "determine-use-utf8?" () 777 11 ("char->integer" ">=" "char" "line" "dynamic" "function" "some?" "content")}
        {Lisp-Entry "reload-moniker" () 785 11 ("update-moniker-time" "read-moniker" "reload-content" "when" "moniker")}
        {Lisp-Entry "reload-content" () 791 18 ("update-status" "false" "set-modified?" "0" "get-paragraphs" "length" "min" "Cell" "new" "set-caret" "colorize-syntax" "set-content" "remove-every-row" "get-start" "get-row" "row" "let" "lst")}
        {Lisp-Entry "compare-moniker" () 801 11 ("true" "set-visible?" "Document-Moniker" "new" "get-guest" "compare-monikers" "false" "host-visible?:" "Compare-Files" "new-frame" "frame" "let" "when" "moniker")}
        {Lisp-Entry "on-export-html" () 814 11 ("user-message" "export-html" "self" "TextToHTML-Exporter" "convert" "let" "File-Printer" "new" "output" "with-closed" "extensions:" ":default-extension" ":initial-filename" "SaveFile-Dialog" "get-modal" "file" "get-base" "format" "essay" "initial-filename" "get-moniker" "moniker" "let*" "evt")}
        {Lisp-Entry "content-size-change" () 829 11 ("wrap-content" "wrap?" "when" "get-width" "visible-width" "set!" "size")}
        {Lisp-Entry "hide-text-cursor" () 840 18 ("hide-cursor" "mouse-over?" "selectable?" "editable?" "enabled?" "and" "when")}
        {Lisp-Entry "show-text-cursor" () 845 18 ("show-cursor" "selectable?" "editable?" "enabled?" "and" "when")}
        {Lisp-Entry "cursor-update" () 850 11 (":ibeam" ":left-arrow" "set-cursor" "paragraph-left" "get-h" "" "if" "get-row" "get-paragraph" "par" "view->text" "pos" "let*" "selectable?" "enabled?" "and" "when" "show-text-cursor" "view")}
        {Lisp-Entry "get-caret-pen" () 865 18 ("caret-pen")}
        {Lisp-Entry "set-caret-pen" () 869 18 ("caret-pen" "set!" "value")}
        {Lisp-Entry "pulse-caret" () 873 11 ("invalidate-caret" "not" "caret-pulsed?" "set!" "editable?" "when")}
        {Lisp-Entry "show-caret" () 879 11 ("invalidate-caret" "caret-pulse" "start" "false" "caret-pulsed?" "true" "set!" "caret-visible?" "editable?" "has-focus?" "not" "or" "unless")}
        {Lisp-Entry "hide-caret" () 887 11 ("invalidate-caret" "caret-pulse" "stop" "false" "set!" "caret-visible?" "editable?" "and" "when")}
        {Lisp-Entry "without-caret" () 894 11 ("update-caret" "when" "hide-caret" "begin" "unwind-protect" "visible?" "let" "caret-visible?" "caret-pulse" "editable?" "not" "or" "if" "proc")}
        {Lisp-Entry "update-caret" () 906 11 ("show-caret" "get-start" "set-caret-position" "hide-caret" "has-selection?" "if" "get-surrogate" "not" "has-focus?" "editable?" "player" "and" "when")}
        {Lisp-Entry "set-caret-position" () 914 11 ("set!" "dynamic" "function" "without-caret" "caret-position" "/=" "when" "pos")}
        {Lisp-Entry "invalidate-caret" () 921 11 ("invalidate-rect" "1" "caret-position" "caret-rect" "rect" "with" "editable?" "when")}
        {Lisp-Entry "caret-rect" () 928 11 ("get-h" "Rect" "new" "-" "get-v" "+" "top" "get-height" "if" "height" "get-run" "run" "get-col" "get-line-at" "lne" "get-row" "get-paragraph" "par" "text->view" "pos" "let*" "when" "width" "caret-pos")}
        {Lisp-Entry "get-platform" () 944 18 ("platform")}
        {Lisp-Entry "set-platform" () 948 18 ("platform" "set!" "value")}
        {Lisp-Entry "mouse-activate?" () 957 11 ("false")}
        {Lisp-Entry "mouse-down" () 961 11 ("previous-pos" "reset-virtual" "update-caret" "set-caret" "change-selection" "focus-selects-all?" "set-anchor?:" "selection-line" "set-selection" "paragraph-left" "get-h" "" "if" "get-row" "get-paragraph" "par" "reset-selection" "not" "shift-down?" "or" "unless" "char" "selection-mode" "true" "selecting?" "set!" "acquire-capture" "self" "set-focus" "view->text" "pos" "has-focus?" "focus?" "let" "selectable?" "enabled?" "and" "when" "view")}
        {Lisp-Entry "drag-move" () 984 11 ("drag-move-action" "selecting?" "when" "view")}
        {Lisp-Entry "drag-move-action" () 989 11 ("setup-autoscroll-pulse" "calculate-autoscroll-amount" "autoscroll-amount" "set!" "get-scroller" "when" "false" "drag-select" "view")}
        {Lisp-Entry "drag-up" () 996 11 ("update-focus-actions" "play-current-recording" "get-recorder" "recorder" "not" "and" "process-selection-change" "char" "selection-mode" "ensure-displayed" "empty-selection?" "update-caret" "previous-pos" "false" "set!" "true" "drag-select" "kill-autoscroll-pulse" "release-capture" "get-application" "appl" "shift-down?" "shift?" "control-down?" "control?" "alt-down?" "alt?" "let" "selecting?" "when" "rest" "view")}
        {Lisp-Entry "drag-select" () 1018 11 ("region:" "redraw-window" "true" "invalidate-region" "if" "multi-part-region" "region" "with-closed" "change-selection" "self" "get-delta" "sc" "dv" "dh" "receive" "get-root" "root" "get-player" "player" "selection" "range-difference" "parts" "selection-range" "range" "let*" "previous-pos" "/=" "selection-line" "set!" "selection-anchor" "get-end" ">=" "get-row" "get-paragraph" "paragraph-left" "get-h" "" "and" "when" "view->text" "pos" "let" "final?" "view")}
        {Lisp-Entry "double-click" () 1040 11 ("previous-pos" "reset-virtual" "word" "selection-mode" "selecting?" "set!" "true" "set-anchor?:" "get-range" "set-selection" "outer-expr" "dynamic" "function" "with-safe-explore" "end:" "start:" "self" "explorer-class" "new" "expl" "let" "select-paragraph" "paragraph-left" "get-h" "" "if" "get-row" "get-paragraph" "par" "view->text" "pos" "let*" "selectable?" "enabled?" "and" "when" "view")}
        {Lisp-Entry "context-menu-click" () 1057 21 ("update-caret" "set-caret" "get-end" ">=" "get-start" "" "always" "=" "or" "never" "/=" "view->text" "text" "let" "self" "set-focus" "selectable?" "enabled?" "and" "when" "move-caret" "move-caret:" "pos")}
        {Lisp-Entry "right-mouse-down" () 1067 11 ("context-menu-click" "pos")}
        {Lisp-Entry "context-menu" () 1071 11 ("track-popup-menu" "get-context-menu" "menu" "let" "selectable?" "enabled?" "and" "when" "pos")}
        {Lisp-Entry "get-context-menu" () 1078 11 ("self" "get-application" "text-menu")}
        {Lisp-Entry "new-text-context-menu" () 1082 18 ("layout-menu" "paste" "false" "cut" "locate" "set-visible?" "editable?" "not" "when" "Text-Context-Menu" "new" "menu" "let")}
        {Lisp-Entry "select-paragraph" () 1091 11 ("0" "Cell" "Range" "new" "set-selection" "get-length" "len" "get-paragraph" "par" "let*" "" "when" "get-limit" "limit" "let" "row")}
        {Lisp-Entry "selection-line" () 1099 11 ("1" "+" "paragraph-length" "0" "Cell" "Range" "new" "=" "if" "" "when" "get-limit" "limit" "let" "row")}
        {Lisp-Entry "selection-range" () 1107 11 ("generic-min" "else" "get-end" "generic-max" "get-start" "Range" "before?" "not" "cond" "get-range" "essay" "range" "false" ":outer-composite?" "outer-expr" "kind" "end:" "start:" "self" "explorer-class" "new" "expl" "let*" "selection-anchor" "inside?" "if" "word" "selection-range-from-anchor" "char" "selection-mode" "case" "pos")}
        {Lisp-Entry "selection-range-from-anchor" () 1127 11 ("else" "get-start" "after?" "get-end" "Range" "new" "selection-anchor" "before?" "cond" "pos")}
        {Lisp-Entry "range-difference" () 1137 11 ("get-output" "Range" "put" "List-Factory" "new" "parts" "else" ">" "" "list" "=" "cond" "/=" "or" "when" "ey" "sy" "get-end" "ex" "get-start" "sx" "let" "y" "x")}
        {Lisp-Entry "multi-part-region" () 1156 11 ("or" "combine!" "and" "when" "second" "union" "let" "first" "region" "with-closed" "2" "car" "range-region" "1" "0" "length" "case" "sc" "dv" "dh" "parts")}
        {Lisp-Entry "calculate-autoscroll-amount" () 1167 11 ("Point" "new" "-" "get-height" "av" "else" "get-width" ">" "8" "0" "" "cond" "ah" "get-default-height" "height" "get-v" "v" "get-h" "h" "get-display-size" "size" "view->display" "display" "let*" "view")}
        {Lisp-Entry "setup-autoscroll-pulse" () 1178 11 ("register-pulse" "set!" "autoscroll-pulse" "not" "when" "kill-autoscroll-pulse" "0" "Point" "autoscroll-amount" "=" "if")}
        {Lisp-Entry "kill-autoscroll-pulse" () 1185 11 ("set!" "unregister-pulse" "autoscroll-pulse" "when")}
        {Lisp-Entry "pulse" () 1191 11 ("update-view" "autoscroll-amount" "scroll" "mouse-position" "drag-move-action")}
        {Lisp-Entry "home-column" () 1202 29 ("get-column" "row")}
        {Lisp-Entry "on-home" () 1206 18 ("process-selection-change" "ensure-scrolled-left" "0" "get-col" "=" "Cell" "new" "start" "home-column" "col" "get-row" "row" "backward" "selection-tail" "pos" "let*" "set-caret" "text-beginning" "change-selection" "if" "reset-virtual" "extend?:" "extend?" "document?:" "get-property" "document?" "let" "evt")}
        {Lisp-Entry "on-end" () 1225 18 ("process-selection-change" ":extend-selection?" "goto-paragraph-end" "set-caret" "text-ending" "change-selection" "if" "reset-virtual" "extend?:" "extend?" "document?:" "get-property" "document?" "let" "evt")}
        {Lisp-Entry "goto-paragraph-end" () 1237 18 ("set-caret" "change-selection" "if" "paragraph-length" "get-row" "Cell" "new" "end" "forward" "selection-tail" "pos" "let*" "false" "extend-selection?" "extend-selection?:")}
        {Lisp-Entry "left-arrow-press" () 1245 11 ("process-selection-change" "get-start" "set-caret" "empty-selection?" "control-key?" "backward" "selection-tail" "move-backward" "change-selection" "shift-key?" "if" "reset-virtual" "modifiers")}
        {Lisp-Entry "up-arrow-press" () 1255 11 ("process-selection-change" "reset-selection" "unless" "move-verticaly" "0" ">" "get-col" "col" "get-row" "row" "get-start" "backward" "selection-tail" "if" "pos" "shift-key?" "shift?" "let*" "modifiers")}
        {Lisp-Entry "right-arrow-press" () 1266 11 ("process-selection-change" "get-end" "set-caret" "empty-selection?" "control-key?" "forward" "selection-tail" "move-forward" "change-selection" "shift-key?" "if" "reset-virtual" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 1276 11 ("process-selection-change" "reset-selection" "unless" "1" "move-verticaly" "get-limit" "" "get-col" "col" "get-row" "row" "get-end" "forward" "selection-tail" "if" "pos" "shift-key?" "shift?" "let*" "modifiers")}
        {Lisp-Entry "move-verticaly" () 1287 11 ("else" "set!" ">" "get-top" "Point" "view->text" "get-col" "min" "move-caret" "virtual-h" "cond" "new-end" "paragraph-length" "new-len" "new-par" "+" "new-row" "Cell" "new" "text->view" "get-h" "h" "get-paragraph" "par" "let*" "shift?" "direction" "inc" "col" "row")}
        {Lisp-Entry "move-caret" () 1303 29 ("set-caret" "change-selection" "if" "backward" "-" "forward" "case" "0" "Point" "new" "scroll" "get-default-height" "height" "let" "cell-displayed?" "unless" "shift?" "direction" "pos")}
        {Lisp-Entry "prior-page" () 1312 11 ("set-caret" "change-selection" "if" "Cell" "dest" "display-v->row" "row" "vert" "get-page-size" "0" "Point" "new" "scroll" "get-row" "row->display-v" "v" "get-start" "start" "let*" "shift?")}
        {Lisp-Entry "next-page" () 1323 11 ("set-caret" "change-selection" "if" "Cell" "dest" "display-v->row" "row" "vert" "get-page-size" "-" "0" "Point" "new" "scroll" "get-row" "row->display-v" "v" "get-start" "start" "let*" "shift?")}
        {Lisp-Entry "row->display-v" () 1334 11 ("row->view" "v" "position" "get-v" "-" "top" "let" "row")}
        {Lisp-Entry "display-v->row" () 1340 11 ("get-row" "view->text" "text" "+" "left-padding" "Point" "new" "pos" "position" "get-v" "-" "top" "let*" "v")}
        {Lisp-Entry "selection-tail" () 1347 11 ("forward" "backward" "case" "else" "get-start" "before?" "get-end" "selection-anchor" "after?" "cond" "direction")}
        {Lisp-Entry "on-remove-spaces" () 1360 18 ("get-property" "keep:" "selection" "remove-spaces" "bell" "empty-selection?" "not" "if" "evt")}
        {Lisp-Entry "remove-spaces" () 1366 18 ("if" "one" "list" "none" "case" "replace" "1" "get-col" "+" "get-row" "=" "and" "one-left?" "get-range" "range" "let*" "forward-whitespaces" "backward-whitespaces" "get-end" "end:" "get-start" "start:" "self" "explorer-class" "new" "expl" "let" "one/none" "keep" "keep:" "pos")}
        {Lisp-Entry "on-display-info" () 1379 18 ("get-col" "get-row" "user-message" "get-end" "end" "get-start" "start" "let" "evt")}
        {Lisp-Entry "on-user-code" () 1387 18 ("self" "text-macro" "get-user" "user" "get-application" "appl" "let*" "evt")}
        {Lisp-Entry "range-region" () 1398 11 ("for-each-range" "or" "combine!" "left-padding" "range-region" "sub" "with-closed" "end" "start" "paragraph" "dynamic" "function" "proc" "with" "Region" "new" "region" "let" "bottom" "bottom:" "top" "top:" "sc" "dv" "dh" "range")}
        {Lisp-Entry "row-range-rect" () 1408 11 ("get-default-height" "get-line-at" "get-height" "+" "get-width" "1" "max" "if" "row->view" "col->view" "get-h" "Rect" "new" "get-paragraph" "paragraph" "let" "end" "start" "row")}
        {Lisp-Entry "block-rect" () 1417 11 ("get-width" "row->view" "left-padding" "Rect" "new" "end" "start")}
        {Lisp-Entry "invalidate-row" () 1425 18 ("0" "row-range-rect" "invalidate-rect" "row")}
        {Lisp-Entry "invalidate-range" () 1429 11 ("true" "invalidate-region" "range-region" "region" "with-closed" "self" "get-delta" "sc" "dv" "dh" "receive" "get-root" "root" "when" "get-player" "player" "let" "range")}
        {Lisp-Entry "text-selection-region" () 1439 11 ("bottom:" "top:" "selection" "range-region" "bottom" "top" "sc" "dv" "dh")}
        {Lisp-Entry "selection-region-all" () 1443 11 ("get-display-height" "0" "text-selection-region" "sc" "dv" "dh")}
        {Lisp-Entry "get-selection-color" () 1447 29 ("active-selection-color")}
        {Lisp-Entry "get-inactive-selection-color" () 1451 29 ("inactive-selection-color")}
        {Lisp-Entry "for-each-range" () 1455 11 ("else" "cond" "paragraph" "to" "from" "n" "for" "loop" "limit" "beginning" "get-col" "get-paragraph" "get-row" "=" "if" "/=" "when" "get-end" "end" "get-start" "start" "let" "proc" "range")}
        {Lisp-Entry "make-tab-stops" () 1477 11 ("0" "make-tab-stops-from")}
        {Lisp-Entry "make-tab-stops-from" () 1481 18 ("0" "naturals" "increase!" "prog1" "n" "dynamic" "function" "map" "stop" "let" "number" "tab-size" "from")}
        {Lisp-Entry "set-tab-stops" () 1489 18 ("tab-stops" "set!" "lst")}
        {Lisp-Entry "can-undo?" () 1498 11 ("undoer" "can-undo?")}
        {Lisp-Entry "can-redo?" () 1502 11 ("undoer" "can-redo?")}
        {Lisp-Entry "can-cut?" () 1506 11 ("has-selection?")}
        {Lisp-Entry "can-copy?" () 1510 11 ("has-selection?")}
        {Lisp-Entry "can-paste?" () 1514 11 ("true")}
        {Lisp-Entry "can-delete?" () 1518 11 ("has-selection?")}
        {Lisp-Entry "can-select-all?" () 1522 11 ("true")}
        {Lisp-Entry "undo" () 1526 11 ("get-application" "update-focus-actions" "undoer" "undo")}
        {Lisp-Entry "redo" () 1531 11 ("get-application" "update-focus-actions" "undoer" "redo")}
        {Lisp-Entry "cut-selection" () 1536 11 ("delete-selection" "copy-selection")}
        {Lisp-Entry "copy-selection" () 1541 11 ("cn" "selection-lines" "join" "set-clipboard" "get-application" "add-clipboard" "bell" "empty-selection?" "if")}
        {Lisp-Entry "paste-clipboard" () 1548 11 ("get-clipboard" "paste-clipboard-string")}
        {Lisp-Entry "paste-clipboard-string" () 1552 18 ("cn" "split" "replace-selection" "string")}
        {Lisp-Entry "delete-selection" () 1556 11 ("list" "replace-selection")}
        {Lisp-Entry "select-all" () 1560 11 ("text-ending" "text-beginning" "Range" "new" "set-selection" "rest")}
        {Lisp-Entry "clear-all" () 1564 18 ("delete-selection" "select-all")}
        {Lisp-Entry "get-mark" () 1574 18 ("mark")}
        {Lisp-Entry "set-mark" () 1578 18 ("mark" "set!" "mrk")}
        {Lisp-Entry "on-set-mark" () 1582 18 ("user-message" "selection" "set-mark" "evt")}
        {Lisp-Entry "on-jump-mark" () 1587 18 ("get-selection" "set-mark" "new-mark" "let" "get-end" "maximum" "selection-anchor" "get-start" "list" "minimum" "Range" "new" "set-selection" "extend?:" "get-property" "if" "mark" "when" "evt")}
        {Lisp-Entry "empty-selection" () 1603 11 ("text-beginning" "Range" "new")}
        {Lisp-Entry "row-selected?" () 1607 11 ("false" "row")}
        {Lisp-Entry "text-beginning" () 1611 18 ("0" "Cell" "new")}
        {Lisp-Entry "text-ending" () 1615 18 ("paragraph-length" "Cell" "new" "get-limit" "limit" "let")}
        {Lisp-Entry "text-empty?" () 1620 18 ("text-ending" "text-beginning" "=")}
        {Lisp-Entry "get-start" () 1624 18 ("selection" "get-start")}
        {Lisp-Entry "get-end" () 1628 18 ("selection" "get-end")}
        {Lisp-Entry "get-selection" () 1632 18 ("selection")}
        {Lisp-Entry "set-selection" () 1636 18 ("get-application" "update-focus-actions" "self" "mouse-in" "eq?" "mouse-down?" "ensure-displayed" "selecting?" "unless" "update-caret" "update-selection" "set-selection-anchor" "selection-anchor" "not" "or" "selection" "/=" "and" "when" "validate-range" "set-anchor?" "set-anchor?:" "true" "ensure-displayed?" "ensure-displayed?:" "range")}
        {Lisp-Entry "update-selection" () 1651 18 ("when" "true" "invalidate-region" "xor" "combine!" "begin" "and" "new" "selection-region-all" "old" "with-closed" "self" "get-delta" "sc" "dv" "dh" "receive" "get-root" "root" "selection" "set!" "not" "if" "get-player" "player" "let" "range")}
        {Lisp-Entry "reset-selection" () 1670 18 ("true" "set-anchor?:" "set-selection" "Range" "new" "range" "let" "pos")}
        {Lisp-Entry "fit-range" () 1675 11 ("either" "Range" "new" "or" "e" ">" "when" "s" "get-end" "end" "get-start" "start" "text-ending" "ending" "let*" "range")}
        {Lisp-Entry "fit-selection" () 1685 11 ("selection" "set!" "when" "get-selection" "fit-range" "range" "let")}
        {Lisp-Entry "fit-anchor" () 1691 11 ("set!" "when" "selection-anchor" "fit-range" "range" "let")}
        {Lisp-Entry "get-selection-anchor" () 1697 18 ("selection-anchor")}
        {Lisp-Entry "set-selection-anchor" () 1701 18 ("copy" "selection-anchor" "set!" "range")}
        {Lisp-Entry "change-selection" () 1706 18 ("set-anchor?:" "selection-range" "set-selection" "apply" "when" "others" "false" "set-anchor?" "bind-keywords" "rest" "pos")}
        {Lisp-Entry "fit-caret" () 1711 11 (">" "paragraph-length" "len" "0" "1" "-" "Cell" "new" "set!" ">=" "if" "get-paragraphs" "length" "count" "get-col" "col" "get-row" "row" "let" "caret-position" "when")}
        {Lisp-Entry "get-caret" () 1723 18 ("get-start")}
        {Lisp-Entry "set-caret" () 1727 18 ("reset-selection" "Cell" "new" "=" "if" "get-limit" "0" "get-row" "max" "min" "row" "let*" "when" "pos")}
        {Lisp-Entry "has-selection?" () 1734 18 ("get-end" "get-start" "/=")}
        {Lisp-Entry "empty-selection?" () 1738 18 ("get-end" "get-start" "=")}
        {Lisp-Entry "at-beginning?" () 1742 18 ("text-beginning" "get-end" "get-start" "=")}
        {Lisp-Entry "at-end?" () 1746 18 ("text-ending" "get-end" "get-start" "=")}
        {Lisp-Entry "at-line-start?" () 1750 18 ("0" "get-start" "get-col" "=")}
        {Lisp-Entry "selected-lines" () 1754 18 ("+" "naturals" "1" "get-row" "-" "0" "get-col" "=" "if" "end-row" "get-end" "end" "get-start" "start" "let*")}
        {Lisp-Entry "invalidate-selection" () 1761 11 ("invalidate-range" "sel")}
        {Lisp-Entry "get-char" () 1765 18 ("get-string" "element" "get-length" "get-col" "" "if" "get-row" "get-paragraph" "par" "let" "pos")}
        {Lisp-Entry "get-string" () 1772 18 ("cn" "range-strings" "join" "range")}
        {Lisp-Entry "next!" () 1776 18 ("false" "else" "0" "set-col" "increase-row" "get-limit" "" "true" "increase-col" "get-row" "paragraph-length" "get-col" "/=" "cond" "pos")}
        {Lisp-Entry "previous!" () 1788 18 ("false" "else" "paragraph-length" "set-col" "increase-row" "get-row" ">" "true" "increase-col" "0" "get-col" "/=" "cond" "pos")}
        {Lisp-Entry "next-cell" () 1800 18 ("next!" "when" "copy" "cell" "let" "pos")}
        {Lisp-Entry "previous-cell" () 1806 18 ("previous!" "when" "copy" "cell" "let" "pos")}
        {Lisp-Entry "selection-lines" () 1812 11 ("selection" "range-strings")}
        {Lisp-Entry "get-selected-string" () 1816 18 ("get-selection" "get-string" "has-selection?" "when")}
        {Lisp-Entry "next" () 1821 18 ("when" "decrease!" "next!" "set!" "0" ">" "and" "while" "copy" "true" "ok?" "let" "offset" "pos")}
        {Lisp-Entry "previous" () 1831 18 ("when" "decrease!" "previous!" "set!" "0" ">" "and" "while" "copy" "true" "ok?" "let" "offset" "pos")}
        {Lisp-Entry "get-column" () 1841 18 ("get-col" "increase!" "get-char" "memq?" "while" "0" "Cell" "new" "pos" "let" "row")}
        {Lisp-Entry "current-name" () 1848 26 ("get-marked" "outer-expr" "when" "get-selection" "range:" "self" "explorer-class" "new" "expl" "let")}
        {Lisp-Entry "on-goto-line" () 1854 11 ("parse-integer" "-" "goto-line" "->string" "initial-value:" ":prefix" "title:" "request-string" "string" "1" "get-row" "+" "line" "get-start" "start" "let*" "evt")}
        {Lisp-Entry "goto-line" () 1861 18 ("+" "else" "paragraph-length" "let" "get-limit" ">=" "1" "Cell" "Range" "new" "set-selection" "0" "" "cond" "line")}
        {Lisp-Entry "added-update-selection" () 1871 11 ("count" "rank")}
        {Lisp-Entry "removed-update-selection" () 1875 11 ("false" "count" "rank")}
        {Lisp-Entry "layout-scrollee-patch" () 1885 11 ("update-displayed")}
        {Lisp-Entry "scrollee-width" () 1894 11 ("visible-width" "get-display-width" "max" "wrap-width" "either" "wrap?" "if")}
        {Lisp-Entry "invalidate-update" () 1905 11 ("wrap-content" "nextmethod")}
        {Lisp-Entry "get-paragraph-spacing" () 1915 18 ("paragraph-spacing")}
        {Lisp-Entry "set-paragraph-spacing" () 1919 18 ("paragraph-spacing" "set!" "value")}
        {Lisp-Entry "get-length" () 1923 18 ("get-paragraphs" "length")}
        {Lisp-Entry "get-limit" () 1927 18 ("1" "get-length" "-")}
        {Lisp-Entry "get-paragraph" () 1931 18 ("get-paragraphs" "element" "n")}
        {Lisp-Entry "paragraph-string" () 1935 18 ("get-paragraph" "get-string" "n")}
        {Lisp-Entry "paragraph-length" () 1939 18 ("paragraph-string" "length" "n")}
        {Lisp-Entry "paragraph->string" () 1943 11 ("get-string" "paragraph")}
        {Lisp-Entry "get-print-area" () 1952 11 ("scrollee-height" "0" "Rect" "new" "context")}
        {Lisp-Entry "paginate" () 1956 11 ("get-output" "get-keep-with-next?" "empty-string?" "not" "Rect" "put" "either" "effective-bottom" "let" "set!" "bot" "get-height" "height" "get-format" "format" "get-string" "string" "paragraph-top" "" ">=" "and" "when" "paragraph" "rank" "dynamic" "function" "for-each-paragraph" "together" "bottom" "top" "page" "List-Factory" "new" "pages" "1" "get-limit" "get-end" "+" "end" "0" "get-start" "get-row" "if" "start" "has-selection?" "false" "selected?" "let*" "page-height" "page-width")}
        {Lisp-Entry "setup-printing" () 1987 11 ("nextmethod" ":wrap-width" "cons" "wrap-content" "layout-scrollee" "wrap-patch" "set!" "wrap-width" "width" "let")}
        {Lisp-Entry "restore-printing" () 1998 11 ("wrap-content" "layout-scrollee" "wrap-patch" ":wrap-width" "getf" "wrap-width" "set!" "nextmethod" "preserved")}
        {Lisp-Entry "draw-enabled?" () 2011 29 ("enabled?")}
        {Lisp-Entry "get-drawing-background" () 2015 11 ("nextmethod" "Medium" "name:" "Color" "draw-enabled?" "not" "if" "context")}
        {Lisp-Entry "draw-outline" () 2021 11 ("draw-caret" "nextmethod" "draw-selection" "unless" ":printing?" "getf" "printing?" "bottom" "top" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "update-rect" "update" "context" "dc")}
        {Lisp-Entry "draw-selection" () 2032 11 ("get-inactive-selection-color" "get-selection-color" "if" "fill-region" "text-selection-region" "region" "with-closed" "show-unfocused-selection?" "has-focus?" "or" "when" "bottom" "top" "dc")}
        {Lisp-Entry "draw-caret" () 2039 11 ("*" "round" "Rect" "new" "scaled" "if" "0" "get-caret" "caret-rect" "with" "get-bottom" "get-right" "get-top" "get-left" "line" "caret-pen" "set-pen" "rect" "dynamic" "function" "proc" "let" "alt-down?" "mouse-down?" "or" "empty-selection?" "caret-pulsed?" "not" "caret-visible?" "and" "when" "sc?" "sc" "dc")}
        {Lisp-Entry "ensure-displayed" () 2062 11 ("ensure-range-displayed" "apply" "selection" "when" "rest")}
        {Lisp-Entry "ensure-cell-displayed" () 2067 18 ("get-scroll-context" "scroll-needed" "scroll" "get-height-at" "0" "Point" "new" "+" "end" "text->view" "start" "let*" "pos")}
        {Lisp-Entry "ensure-range-displayed" () 2073 18 ("get-scroll-context" "0" "Point" "new" "+" "text->view" "scroll-needed" "apply" "scroll" "get-height-at" "end-height" "get-end" "end" "get-start" "start" "let*" "player" "not" "update-locked?" "or" "unless" "rest" "range")}
        {Lisp-Entry "ensure-scrolled-left" () 2081 18 ("Point" "new" "scroll" "-" "" "get-end" "text->view" "end" "get-display-h" "+" "tail" "*" "round" "if" "get-scroll-context" "cdr" "context" "get-display-width" "size" "let*" "get-position" "get-h" "0" "/=" "when" "player" "not" "update-locked?" "or" "unless")}
        {Lisp-Entry "cell-displayed?" () 2093 18 ("scroll-needed" "=" "get-height-at" "0" "Point" "new" "+" "end" "text->view" "start" "let*" "pos")}
        {Lisp-Entry "on-center-caret" () 2099 11 ("center-caret" "evt")}
        {Lisp-Entry "on-top-caret" () 2103 11 ("top-caret" "evt")}
        {Lisp-Entry "center-caret" () 2107 18 ("0" "Point" "new" "scroll-to" "2" "/" "round" "half" "let" ">=" "if" "top" "get-display-height" "height" "-" "size" "get-end" "get-top" "end" "get-start" "get-row" "get-bottom" "start" "let*")}
        {Lisp-Entry "top-caret" () 2119 18 ("-" "0" "Point" "new" "scroll-to" "get-start" "get-row" "get-top" "start" "let")}
        {Lisp-Entry "next-word" () 2129 18 ("forward-non-word" "forward-word" "get-end" "get-char" "word-constituent?" "if" "forward-whitespaces" "end:" "start:" "self" "Text-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "previous-word" () 2138 18 ("backward-non-word" "backward-word" "1" "-" "get-char" "word-constituent?" "if" "0" "get-col" ">" "when" "get-start" "start" "backward-whitespaces" "end:" "start:" "self" "Text-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "move-forward" () 2154 18 ("next-cell" "next-word" "if" "when" "word?" "pos")}
        {Lisp-Entry "move-backward" () 2159 18 ("previous-cell" "previous-word" "if" "when" "word?" "pos")}
        {Lisp-Entry "insert-char" () 2169 18 ("String" "coerce" "insert-string" "c")}
        {Lisp-Entry "insert-string" () 2173 18 ("cn" "split" "replace-selection" "str")}
        {Lisp-Entry "insert-styled" () 2177 18 ("Range" "new" "set-style" "insert-string" "get-style" "else" "default-style" "not" "Style" "is?" "cond" "get-start" "start" "let" "style" "string")}
        {Lisp-Entry "insert-line" () 2184 18 ("list" "if" "replace-selection" "true" "proper?" "line")}
        {Lisp-Entry "insert-bulleted-line" () 2188 18 ("toggle-bulleted" "insert-line" "get-start" "get-row" "row" "let" "line")}
        {Lisp-Entry "insert-newline" () 2194 26 ("cn" "insert-string")}
        {Lisp-Entry "insert-hyperlink" () 2198 18 ("insert-styled" ":anchor" "Color" "color:" "Hyperlink-Style" "new" "style" "Hyperlink" "name:" "Font" "either" "let*" "action" "action:" "anchor" "anchor:" "font" "font:" "string")}
        {Lisp-Entry "insert-image" () 2204 18 ("insert-styled" "moniker:" "Image-Style" "new" "style" "let" "moniker")}
        {Lisp-Entry "insert-view" () 2209 18 ("insert-styled" "view:" "View-Style" "new" "style" "let" "set-parent" "get-row" "get-paragraph" "paragraph" "get-end" "end" "instantiate" "View" "is?" "if" "view" "let*" "view/form")}
        {Lisp-Entry "create-table" () 2223 18 ("setup-rows" "setup-columns" "header" "set-shown?" "not" "set-size" "when" "locate" "tree" "Table-Border" "new" "border" "let*" "row-count" "row-count:" "columns" "columns:" "false" "node-column?" "node-column?:" "true" "header?" "header?:" "size" "size:")}
        {Lisp-Entry "insert-table" () 2235 18 ("insert-view" "create-table" "apply" "table" "let" "rest")}
        {Lisp-Entry "setup-columns" () 2241 11 ("class:" "add-column" "" "apply" "set!" "false" ":display-images?" "list" "others" "width:" "width" "title:" "getf" "title" "Tree-Label-Column" "Tree-Node-Column" "if" "class" "and" "node?" "let*" "column" "dynamic" "function" "for-each" "true" "first?" "let" "columns" "node-column?" "tree")}
        {Lisp-Entry "setup-rows" () 2254 11 ("0" "naturals" "children:" ":row-height" "add-row" "Formatted-Text-View" "new" "column" "map" "children" "n" "dynamic" "function" "for-each" "/" "floor" "row-height" "increase!" "not" "get-height" "height" "let" "when" "row-count" "columns" "header?" "tree")}
        {Lisp-Entry "get-table-cell" () 2269 18 ("get-cell-data" "cell" "table")}
        {Lisp-Entry "insert-table-of-content" () 2278 26 ()}
        {Lisp-Entry "backspace" () 2287 18 ("replace" "get-end" "get-start" "move-backward" "Range" "new" "range" "let" "list" "replace-selection" "has-selection?" "if" "at-beginning?" "unless" "write-allowed?" "when" "word?")}
        {Lisp-Entry "delete-action" () 2296 18 ("replace" "get-end" "move-forward" "get-start" "Range" "new" "range" "let" "list" "replace-selection" "has-selection?" "if" "at-end?" "unless" "write-allowed?" "when" "word?")}
        {Lisp-Entry "replace-selection" () 2305 18 ("selection" "replace" "strings")}
        {Lisp-Entry "replace" () 2309 18 ("show-caret" "set-caret" "when" "replace-text" "caret" "let" "strings" "range")}
        {Lisp-Entry "replace-text" () 2316 21 ("update-focus-actions" "call-content-change" "set-selection" "set-end" "list" "replace" "undoer" "register-undo" "Range" "new" "let" "contiguous-undo-range" "not" "false" "if" "true" "set-modified?" "+" "-" "recolorize-text" "fit-caret" "fit-anchor" "fit-selection" "get-paragraph" "first-displayed" "set!" "update-displayed" "car" "1" "=" "and" "inserting-single-char?" "selection" "copy" "old-selection" "get-application" "appl" "replace-range" "caret" "first-displayed-rank" "get-row" "" "ufd?" "range-strings" "old" "length" "count" "get-end" "end" "get-start" "start" "let*" "dynamic" "function" "without-caret" "write-allowed?" "when" "strings" "range")}
        {Lisp-Entry "replace-range" () 2362 11 ("replace-paragraphs" "dynamic" "function" "with-update-locked" "-" "" "car" "get-col" "replace-paragraph" "1" "get-row" "=" "and" "if" "length" "count" "get-end" "end" "get-start" "start" "let" "strings" "range")}
        {Lisp-Entry "replace-paragraph" () 2375 11 ("+" "Cell" "new" "invalidate-replacement" "replace-range" "get-bottom" "top" "length" "inserted" "get-paragraph" "paragraph" "let*" "string" "end" "start" "row")}
        {Lisp-Entry "invalidate-replacement" () 2384 11 ("invalidate-paragraph" "scroll-view" "get-height" "get-width" "Rect" "new" "rect" "with" "get-size" "size" "0" "/=" "layout-scrollee" "wrap?" "when" "wrap-paragraph" "delta" "let" "top" "paragraph")}
        {Lisp-Entry "replace-paragraphs" () 2398 11 ("Cell" "new" "invalidate-replacements" "replace-ending" "replace-beginning" "get-next" "root-row" "replace-sons" "=" "if" "caret-col" "caret-row" "last" "last-length" "last-runs" "get-col" "0" "range-runs" "first-runs" "strings->paragraphs" "paragraphs" "get-bottom" "bottom" "last-par" "get-paragraph" "first-par" "range-height" "before" "length" "inserted" "1" "-" "+" "replaced" "er" "get-row" "sr" "get-end" "end" "get-start" "start" "let*" "strings" "range")}
        {Lisp-Entry "invalidate-replacements" () 2422 11 ("invalidate-paragraph" "scroll-view" "get-height" "get-width" "Rect" "new" "rect" "with" "get-size" "size" "let" "0" "/=" "when" "layout-scrollee" "visible-height" "visible-count" "increase!" "-" "delta" "paragraphs-height" "after" "let*" "wrap-paragraph-lowlevel" "paragraph" "dynamic" "function" "for-each" "before" "bottom" "inserted" "replaced" "paragraphs")}
        {Lisp-Entry "invalidate-paragraph" () 2438 11 ("invalidate-drawing" "paragraph")}
        {Lisp-Entry "paragraph-height" () 2442 11 ("get-row-height" "paragraph")}
        {Lisp-Entry "range-height" () 2446 11 ("get-next" "set!" "do" "paragraph-height" "sum" "to" "from" "n" "for" "get-row" "row" "with" "loop" "end" "start")}
        {Lisp-Entry "paragraphs-height" () 2453 11 ("paragraph-height" "map" "+" "apply" "paragraphs")}
        {Lisp-Entry "strings->paragraphs" () 2457 11 ("make-string-paragraph" "string" "dynamic" "function" "map" "get-format" "last-format" "let" "strings" "first-par")}
        {Lisp-Entry "colorize-syntax" () 2469 29 ("rest")}
        {Lisp-Entry "colorize-comments" () 2473 29 ("rest")}
        {Lisp-Entry "colorize-declarations" () 2477 29 ("rest")}
        {Lisp-Entry "recolorize-text" () 2481 29 ("end-row" "start")}
        {Lisp-Entry "get-text" () 2490 18 ("text")}
        {Lisp-Entry "set-text" () 2494 18 ("text" "set!" "parse-text-content" "set-content" "value")}
        {Lisp-Entry "parse-text-content" () 2499 11 ("class-of" "type-name" "error" "else" "parse-jml-content" "JML-Node" "parse-formatted-content" "Formatted-Text-View" "self" "is?" "pair?" "null?" "or" "and" "parse-string-content" "string?" "empty-content" "not" "cond" "content")}
        {Lisp-Entry "parse-string-content" () 2512 11 ("cn" "split" "paragraphs:" "Text" "new" "content")}
        {Lisp-Entry "parse-formatted-content" () 2516 11 ("paragraphs:" "styles:" "get-output" "formats:" "Formatted-Text" "parse-paragraph" "par" "map" "paragraphs" "style" "intern-style" "put" "when" "format" "dynamic" "function" "intern-format" "styles" "List-Factory" "new" "formats" "let*" "content")}
        {Lisp-Entry "parse-paragraph" () 2536 11 ("parse-runs" "parse-format" "format" "iterate" "scan" "let*" "list" "cons" "string?" "if" "intern-style" "intern-format" "par")}
        {Lisp-Entry "parse-format" () 2544 11 ("unget" "else" "*" "get-left-margin" "+" "n" ":indent" "set-left-margin" "true" "set-bulleted?" ":bulleted" "case" "get-next" "target" "let" "done?" "and" "while" "false" "out?" "Format" "new" "set!" "not" "when" "proc" "dynamic" "function" "add-formatting" "format" "let*" "scan")}
        {Lisp-Entry "parse-runs" () 2567 11 ("error" "else" "iterate" "parse-run" "pair?" "list" "string?" "cond" "run" "dynamic" "function" "map" "intern-style" "scan")}
        {Lisp-Entry "parse-run" () 2578 11 ("list" "error" "string?" "if" "else" ":scaled?" ":scaling" "eq?" "peek" "next" "scaling" "moniker" "moniker:" ":image-name" ":portfolio" "Image-Style" "get-application" "get-icons-cache" "portfolio" "image" "image:" "set-font" "Font" "font" "font:" "set-highlight" "highlight" "highlight:" "set-color" "Color" "eval-symbol" "symbol?" "color" "color:" "new-hyperlink-style" "action" ":hyperlink" "get-style" "name" "style:" "case" "get-next" "target" "let" "done?" "while" "Default" "base:" "Text-Style" "new" "set!" "not" "when" "proc" "dynamic" "function" "add-styling" "style" "string" "let*" "intern-style" "scan")}
        {Lisp-Entry "new-hyperlink-style" () 2631 29 ("action:" "Hyperlink" "Color" "color:" "Hyperlink-Small" "name:" "Font" "font:" "Hyperlink-Style" "new" "action")}
        {Lisp-Entry "parse-jml-content" () 2661 11 ("paragraphs:" "styles:" "get-output" "formats:" "Formatted-Text" "get-children" "parse-jml-paragraph" "par" "map" "paragraphs" "style" "intern-style" "put" "when" "format" "dynamic" "function" "intern-format" "styles" "List-Factory" "new" "formats" "let*" "node")}
        {Lisp-Entry "parse-jml-paragraph" () 2681 11 ("error" "else" "parse-p-tag" "p" "case" "get-tag" "tag" "let" "get-text" "list" "cons" "JML-Text" "is?" "if" "intern-style" "intern-format" "node")}
        {Lisp-Entry "parse-p-tag" () 2690 11 ("parse-p-runs" "cons" "parse-p-format" "format" "let" "intern-style" "intern-format" "node")}
        {Lisp-Entry "parse-p-format" () 2695 11 ("set-left-margin" "true" "set-bulleted?" "bulleted?" "get-property" "Format" "new" "set!" "not" "when" "proc" "dynamic" "function" "add-formatting" "format" "let*" "node")}
        {Lisp-Entry "parse-p-runs" () 2710 11 ("get-children" "parse-p-run" "dynamic" "function" "map" "intern-style" "node")}
        {Lisp-Entry "parse-p-run" () 2716 11 ("error" "else" "parse-style-tag" "style" "case" "get-tag" "tag" "let" "get-text" "list" "JML-Text" "is?" "if" "intern-style" "node")}
        {Lisp-Entry "parse-style-tag" () 2725 11 ("list" "get-properties" "error" "else" "parse-color" "set-color" "color" "set-font-weight" "font-weight" "case" "value" "property" "dynamic" "function" "for-each-property" "Default" "base:" "Text-Style" "new" "style" "first-child" "get-text" "string" "let" "intern-style" "node")}
        {Lisp-Entry "parse-color" () 2737 11 ("Color" "eval-symbol" "color")}
        {Lisp-Entry "get-text-content" () 2746 18 ("text-content")}
        {Lisp-Entry "set-text-content" () 2750 18 ("set-content" "text-content" "set!" "value")}
        {Lisp-Entry "patch-formatted-bug" () 2760 18 ("get-runs" "get-style" "intern-style" "set-style" "run" "for-each" "get-format" "intern-format" "set-format" "paragraph" "row" "dynamic" "function" "for-each-paragraph" "styles" "formats" "empty-content")}
        {Lisp-Entry "read-formatted" () 2771 21 ("read" "File-Reader" "new" "reader" "with-closed" "moniker")}
        {Lisp-Entry "save-formatted" () 2776 21 ("print-formatted" "File-Printer" "new" "printer" "with-closed" "moniker")}
        {Lisp-Entry "print-formatted" () 2781 21 ("range-paragraph-runs" "get-style" "style-reference" "get-string" "run" "get-format" "format-reference" "false" "set!" "paragraph" "dynamic" "function" "for-each" "range-paragraphs" "get-paragraphs" "not" "if" "paragraphs" "true" "first?" "print-styles" "print-formats" "format" "styles" "collect-persistent" "formats" "let" "range" "printer")}
        {Lisp-Entry "range-paragraph-runs" () 2808 11 ("range-runs" "get-length" "end" "0" "get-col" "either" "start" "and" "when" "get-end" "last?" "get-start" "get-row" "get-paragraph" "eq?" "first?" "let" "get-runs" "not" "if" "range" "paragraph")}
        {Lisp-Entry "print-formats" () 2820 11 ("false" "set!" "if" "fmt" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer" "formats")}
        {Lisp-Entry "print-styles" () 2832 11 ("false" "set!" "if" "style" "dynamic" "function" "for-each" "true" "first?" "let" "format" "printer" "styles")}
        {Lisp-Entry "get-formatted-content" () 2844 18 ("get-formatted-paragraphs" "paragraphs:" "styles:" "List" "coerce" "formats:" "Formatted-Text" "new" "styles" "collect-persistent" "formats" "let")}
        {Lisp-Entry "get-formatted-paragraphs" () 2853 11 ("get-output" "get-runs" "get-style" "style-reference" "get-string" "list" "run" "map" "get-format" "format-reference" "cons" "put" "paragraph" "row" "dynamic" "function" "for-each-paragraph" "List-Factory" "new" "fact" "let" "styles" "formats")}
        {Lisp-Entry "set-formatted-content" () 2864 18 ("error" "else" "set-unformatted-content" "Text" "complete-setup" "get-row-height" "increase!" "wrap-paragraph" "set!" "set-next" "set-previous" "make-paragraph" "paragraph" "make-runs" "run-infos->string" "string" "reference-format" "essay" "runs" "format" "bind" "info" "dynamic" "function" "rows" "root-row" "previous" "height" "0" "count" "setup-style" "setup-format" "map" "let*" "get-paragraphs" "paragraphs" "get-styles" "styles" "get-formats" "formats" "let" "Formatted-Text" "typecase" "text")}
        {Lisp-Entry "complete-setup" () 2896 11 ("invalidate-update" "selection-anchor" "empty-selection" "selection" "get-width" "visible-width" "visible-height" "visible-count" "set!" "Axis" "coerce" "set-paragraphs" "height" "count" "rows")}
        {Lisp-Entry "wrap-content" () 2906 18 ("invalidate-view" "layout-scrollee" "visible-height" "set!" "get-paragraphs" "get-row-height" "increase!" "wrap-paragraph" "paragraph" "dynamic" "function" "for-each" "0" "height" "let" "update-locked?" "unless" "context")}
        {Lisp-Entry "wrap-paragraph" () 2921 21 ("visible-height" "increase!" "-" "delta" "wrap-paragraph-lowlevel" "get-row-height" "before" "let" "paragraph" "context")}
        {Lisp-Entry "wrap-paragraph-lowlevel" () 2929 21 ("wrap" "get-paragraph-width" "width" "let" "flatten" "wrap?" "not" "if" "paragraph" "context")}
        {Lisp-Entry "get-paragraph-width" () 2936 11 ("0" "get-format" "get-left-margin" "either" "left-padding" "get-display-width" "wrap-patch" "wrap-width" "if" "-" "max" "paragraph")}
        {Lisp-Entry "range-paragraphs" () 2940 11 ("get-output" "set!" "eq?" "unless" "put" "not" "if" "get-paragraph" "paragraph" "get-end" "to" "get-start" "get-row" "from" "row" "for" "loop" "List-Factory" "new" "fact" "last" "let" "range")}
        {Lisp-Entry "copy-formatted-selection" () 2953 11 (":empty?" ":formatted-text" ":format" "set-clipboard-text" "dynamic" "function" "with-opened-clipboard" "get-output" "output" "get-selection" "print-formatted" "String-Printer" "new" "printer" "let" "bell" "empty-selection?" "if" "copy-formatted-selection" "unimplemented" "empty?")}
        {Lisp-Entry "paste-formatted-clipboard" () 2967 11 ("replace-selection" "cn" "get-clipboard" "split" "strings" "get-selection" "replace-formatted" "apply" "read-string-content" "info" ":format" "get-clipboard-text" "text" "let*" "member?" "if" "get-clipboard-formats" "formats" ":formatted-text" "get-clipboard-format" "format" "let" "dynamic" "function" "with-opened-clipboard")}
        {Lisp-Entry "replace-formatted" () 2980 18 ("set-caret" "when" "error" "else" "cn" "split" "replace-text" "Text" "replace-formatted-text" "run-infos->string" "runs" "format" "bind" "run-info" "dynamic" "function" "strings" "setup-style" "intern-style" "interned-styles" "setup-format" "intern-format" "map" "interned-formats" "get-paragraphs" "paragraphs" "get-styles" "styles" "get-formats" "formats" "let*" "Formatted-Text" "typecase" "caret" "let" "info" "range")}
        {Lisp-Entry "replace-formatted-text" () 3002 21 ("update-focus-actions" "call-content-change" "set-selection" "replace-formatted" "copy" "selection" "let" "undoer" "register-undo" "true" "set-modified?" "1" "+" "-" "recolorize-text" "fit-caret" "fit-anchor" "fit-selection" "get-paragraph" "first-displayed" "set!" "update-displayed" "Range" "new" "apply-formats/styles" "get-application" "appl" "replace-range" "caret" "first-displayed-rank" "get-row" "" "ufd?" "range-formatted-text" "old" "length" "count" "get-end" "end" "get-start" "start" "let*" "dynamic" "function" "without-caret" "write-allowed?" "when" "paragraphs" "styles" "formats" "strings" "range")}
        {Lisp-Entry "apply-formats/styles" () 3037 21 ("set-row" "fix-view-style-parent" "reference-format" "set-format" "0" "inside?" "and" "when" "1" "get-length" "-" "line-length" "get-paragraph" "full-paragraph" "Range" "set-style" "length" "+" "set-col" "car" "reference-style" "style" "let" "ref" "string" "run" "runs" "format" "bind" "paragraph" "dynamic" "function" "for-each" "end" "get-col" "get-start" "get-row" "Cell" "new" "start" "let*" "paragraphs" "styles" "formats" "range")}
        {Lisp-Entry "range-formatted-text" () 3061 21 ("get-output" "read-string-content" "car" "print-formatted" "String-Printer" "new" "printer" "let" "range-formatted-text" "unimplemented" "range")}
        {Lisp-Entry "toggle-bulleted" () 3074 18 ("if" "+" "set-left-margin" "not" "set-bulleted?" "get-bulleted?" "bulleted?" "0" "get-left-margin" "either" "left-margin" "let" "format" "dynamic" "function" "get-paragraph" "modify-format" "row")}
        {Lisp-Entry "indent-paragraph" () 3083 18 ("+" "set-left-margin" "0" "get-left-margin" "either" "left" "let" "format" "dynamic" "function" "modify-format" "delta" "paragraph" "row")}
        {Lisp-Entry "set-justification" () 3090 11 ("set-justification" "format" "dynamic" "function" "modify-format" "justification" "paragraph" "row")}
        {Lisp-Entry "modify-format" () 3096 11 ("set-paragraph-format" "get-format" "extend" "format" "let" "proc" "paragraph")}
        {Lisp-Entry "set-paragraph-format" () 3102 11 ("invalidate-view" "layout-scrollee" "true" "set-modified?" "wrap-paragraph" "intern-format" "set-format" "format" "paragraph")}
        {Lisp-Entry "apply-style" () 3110 18 ("get-style" "stylize" "end" "start" "name")}
        {Lisp-Entry "stylize" () 3114 18 ("get-style" "Range" "set-text-style" "paragraph-length" "get-row" "Cell" "new" "set!" "not" "when" "end" "start" "name/style")}
        {Lisp-Entry "set-style" () 3120 18 ("invalidate-view" "layout-scrollee" "true" "set-modified?" "wrap-paragraph" "set-style" "end" "start" "paragraph" "for-each-range" "intern-style" "similar" "styles" "get-content" "Info-Style" "collect-type" "debug" "get-properties" "get-value" "property" "map" "get-base" "get-name" "cons" "s" "dynamic" "function" "info" "let" "style" "range")}
        {Lisp-Entry "set-text-alignment" () 3142 18 ("invalidate-view" "layout-scrollee" "true" "set-modified?" "wrap-paragraph" "set-text-alignment" "end" "start" "paragraph" "dynamic" "function" "for-each-range" "alignment" "range")}
        {Lisp-Entry "set-text-font" () 3152 18 ("invalidate-view" "layout-scrollee" "true" "set-modified?" "wrap-paragraph" "set-text-font" "end" "start" "paragraph" "dynamic" "function" "for-each-range" "font" "range")}
        {Lisp-Entry "set-text-style" () 3162 18 ("true" "set-modified?" "invalidate-drawing" "wrap-paragraph" "set-style" "end" "start" "paragraph" "dynamic" "function" "for-each-range" "intern-style" "let" "style" "range")}
        {Lisp-Entry "set-text-color" () 3172 18 ("true" "set-modified?" "invalidate-drawing" "wrap-paragraph" "set-text-color" "end" "start" "paragraph" "dynamic" "function" "for-each-range" "color" "range")}
        {Lisp-Entry "set-highlight-color" () 3181 18 ("true" "set-modified?" "invalidate-drawing" "wrap-paragraph" "set-highlight-color" "end" "start" "paragraph" "dynamic" "function" "for-each-range" "color" "range")}
        {Lisp-Entry "toggle-bold" () 3190 18 ("invalidate-drawing" "wrap-paragraph" "toggle-bold" "end" "start" "paragraph" "dynamic" "function" "for-each-range" "range")}
        {Lisp-Entry "toggle-italic" () 3198 18 ("invalidate-drawing" "wrap-paragraph" "toggle-italic" "end" "start" "paragraph" "dynamic" "function" "for-each-range" "range")}
        {Lisp-Entry "toggle-underline" () 3206 18 ("invalidate-drawing" "wrap-paragraph" "toggle-underline" "end" "start" "paragraph" "dynamic" "function" "for-each-range" "range")}
        {Lisp-Entry "for-each-paragraph" () 3214 18 ("element" "below" "from" "row" "for" "loop" "get-paragraphs" "paragraphs" "let" "get-length" "end" "end:" "0" "start" "start:" "proc")}
        {Lisp-Entry "for-each-selected-paragraph" () 3220 18 ("1" "get-end" "+" "end:" "get-start" "get-row" "start:" "for-each-paragraph" "get-selection" "selection" "let" "proc")}
        {Lisp-Entry "get-default-format" () 3232 18 ("default-format")}
        {Lisp-Entry "set-default-format" () 3236 18 ("copy" "setup-format" "default-format" "set!" "value")}
        {Lisp-Entry "get-formats" () 3241 18 ("formats" "get-content")}
        {Lisp-Entry "get-named-formats" () 3245 18 ("get-formats" "get-name" "format" "dynamic" "function" "collect-if")}
        {Lisp-Entry "setup-format" () 3251 11 ("modify-from" "intern-format" "not" "if" "false" "error?:" "formats" "locate" "essay" "actual" "get-name" "name" "let*" "format")}
        {Lisp-Entry "add-format" () 3260 18 ("modify-from" "register" "set-persistent?" "set-domain" "copy" "let" "not" "if" "false" "error?:" "formats" "locate" "essay" "actual" "get-name" "name" "let*" "format")}
        {Lisp-Entry "get-format" () 3272 18 ("formats" "locate" "true" "error?" "error?:" "name")}
        {Lisp-Entry "intern-format" () 3276 18 ("register" "set-domain" "begin" "formats" "similar" "either" "format")}
        {Lisp-Entry "format-reference" () 3284 11 ("get-name" "get-rank" "either" "formats" "format")}
        {Lisp-Entry "reference-format" () 3289 11 ("element" "get-format" "symbol?" "if" "reference" "formats")}
        {Lisp-Entry "get-default-style" () 3300 18 ("default-style")}
        {Lisp-Entry "set-default-style" () 3304 18 ("copy" "setup-style" "default-style" "set!" "value")}
        {Lisp-Entry "get-styles" () 3309 18 ("styles" "get-content")}
        {Lisp-Entry "get-named-styles" () 3313 18 ("get-styles" "get-name" "style" "dynamic" "function" "collect-if")}
        {Lisp-Entry "setup-style" () 3319 11 ("modify-from" "intern-style" "not" "if" "false" "error?:" "styles" "locate" "essay" "actual" "get-name" "name" "let*" "style")}
        {Lisp-Entry "add-style" () 3328 18 ("modify-from" "register" "set-persistent?" "set-domain" "copy" "let" "not" "if" "false" "error?:" "styles" "locate" "essay" "actual" "get-name" "name" "let*" "style")}
        {Lisp-Entry "get-style" () 3340 18 ("styles" "locate" "Style" "is?" "if" "true" "error?" "error?:" "name/style")}
        {Lisp-Entry "intern-style" () 3346 18 ("register" "set-domain" "begin" "styles" "similar" "either" "style")}
        {Lisp-Entry "style-reference" () 3354 11 ("get-name" "get-rank" "either" "styles" "style")}
        {Lisp-Entry "reference-style" () 3359 11 ("element" "get-style" "symbol?" "if" "reference" "styles")}
        {Lisp-Entry "fix-view-style-parent" () 3365 11 ("set-parent" "get-view" "view" "View-Style" "is?" "when" "get-style" "style" "run" "dynamic" "function" "for-each" "get-runs" "runs" "let" "paragraph")}
        {Lisp-Entry "commented?" () 3375 26 ("false" "pos")}
        {Lisp-Entry "comment-style?" () 3379 26 ("false" "style")}
        {Lisp-Entry "string-style?" () 3383 26 ("false" "style")}
        {Lisp-Entry "textual-style?" () 3387 26 ("false" "style")}
        {Lisp-Entry "run-infos->string" () 3396 11 ("get-output" "format" "car" "string" "info" "dynamic" "function" "for-each" "String-Printer" "new" "printer" "let" "infos")}
        {Lisp-Entry "make-runs" () 3405 11 ("Run" "new" "set!" "reference-style" "Default" "get-style" "not" "if" "style" "subseq!" "subseq" "length" "+" "limit" "let*" "cdr" "rank" "bind-optionals" "car" "str" "info" "dynamic" "function" "map" "0" "offset" "let" "infos" "styles" "string")}
        {Lisp-Entry "get-default-height" () 3423 18 ("default-style" "get-height")}
        {Lisp-Entry "get-height-at" () 3427 18 ("get-col" "get-row" "get-paragraph" "get-line-at" "get-height" "pos")}
        {Lisp-Entry "compute-width" () 3436 18 ("set!" ">" "when" "compute-width" "w" "paragraph" "rank" "dynamic" "function" "for-each-paragraph" "0" "width" "let")}
        {Lisp-Entry "get-headers" () 3451 26 ()}
        {Lisp-Entry "get-chapters" () 3455 26 ("get-output" "length" "+" "subseq" "1" "list" "put" "paragraph-string" "string" "get-column" "=" "when" "get-col" "col" "get-row" "row" "let" "header" "pos" "bind" "info" "dynamic" "function" "for-each" "List-Factory" "new" "chapters" "multisearch-occurrences" "occurrences" "get-headers" "headers" "let*")}
        {Lisp-Entry "get-first-special?" () 3470 26 ("true")}
        {Lisp-Entry "get-first-chapter" () 3474 26 ("get-name" "not" "text-beginning" "0" "list" "get-moniker" "file" "let" "car" "null?" "get-first-special?" "if" "lst")}
        {Lisp-Entry "get-remaining-chapters" () 3486 26 ("cdr" "null?" "get-first-special?" "if" "lst")}
        {Lisp-Entry "current-expr" () 3497 26 ()}
        {Lisp-Entry "current-expr-range" () 3501 26 ()}
        {Lisp-Entry "current-expr-string" () 3505 18 ("get-string" "when" "current-expr-range" "range" "let")}
        {Lisp-Entry "mouse-insert" () 3516 11 ("insert-string" "dynamic" "function" "with-update-locked" "last" "text-ending" "append!" "set!" "memq?" "not" "0" "element" "syntax" "text-constituent?" "and" "previous-cell" "get-char" "sc" "text-beginning" "/=" "when" "get-end" "end" "get-start" "start" "let" "copy")}
        {Lisp-Entry "range-strings" () 3535 11 ("get-output" "0" "1" "+" "naturals" "map" "put-sequence" "put" "List-Factory" "new" "dest" "get-col" "paragraph-string" "subseq" "list" "get-row" "=" "if" "get-end" "end" "get-start" "start" "let" "range")}
        {Lisp-Entry "Marked-Column" () 3552 14 ()}
        {Lisp-Entry "on-mark-column" () 3556 11 ("mark-column" "evt")}
        {Lisp-Entry "on-fill-to-column" () 3560 11 ("fill-to-column" "evt")}
        {Lisp-Entry "mark-column" () 3564 11 ("user-message" "Marked-Column" "set!" "get-col" "col" "get-start" "start" "let*")}
        {Lisp-Entry "fill-to-column" () 3571 11 ("make-string" "insert-string" "1" "sign" "case" "-" "delta" "get-col" "col" "get-row" "row" "get-start" "start" "let*" "bell" "Marked-Column" "not" "has-selection?" "or" "if")}
        {Lisp-Entry "position-offset" () 3587 11 ("2" "paragraph-length" "+" "increase!" "below" "from" "n" "for" "loop" "0" "offset" "get-col" "col" "get-row" "row" "let" "pos")}
        {Lisp-Entry "offset-position" () 3596 11 ("set!" "-" "Cell" "new" ">" "if" "2" "get-string" "length" "+" "next" "paragraph" "rank" "dynamic" "function" "for-each-paragraph" "return" "lambda" "call/ec" "0" "scan" "let" "offset")}
        {Lisp-Entry "on-upcase-selection" () 3613 11 ("get-selected-string" "upcase" "insert-string" "dynamic" "function" "with-preserved-selection" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-downcase-selection" () 3621 11 ("get-selected-string" "downcase" "insert-string" "dynamic" "function" "with-preserved-selection" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-capitalize-selection" () 3629 11 ("get-selected-string" "capitalize" "insert-string" "dynamic" "function" "with-preserved-selection" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "with-preserved-selection" () 3637 11 ("set-selection" "get-selection" "selection" "let" "proc")}
        {Lisp-Entry "get-run-at" () 3648 18 ("get-col" "get-run" "get-row" "get-paragraph" "paragraph" "let" "pos")}
        {Lisp-Entry "get-style-at" () 3653 18 ("Default" "get-style" "not" "if" "get-run-at" "run" "let" "pos")}
        {Lisp-Entry "uncolorize-row" () 3660 18 ("invalidate-paragraph" "default-style" "remove-coloring" "when" "get-paragraph" "paragraph" "let" "row")}
        {Lisp-Entry "colorize" () 3666 18 ("Range" "set-text-color" "paragraph-length" "get-row" "Cell" "new" "set!" "not" "when" "end" "start" "color")}
        {Lisp-Entry "fill" () 3672 18 ("set-highlight-color" "1" "+" "Range" "new" "range" "let" "pos" "color")}
        {Lisp-Entry "unfill" () 3677 18 ("set-highlight-color" "1" "+" "Range" "new" "range" "let" "pos")}
        {Lisp-Entry "new-colorizer" () 3687 18 ("Text-Colorizer" "new" "text")}
        {Lisp-Entry "view->text" () 3696 18 ("get-position" "-" "view->col" "new" "get-paragraph" "par" "get-limit" "v->row" "visible-height" "row" "let*" "Cell" "0" "" "if" "get-v" "v" "let" "pos")}
        {Lisp-Entry "text->view" () 3705 18 ("get-v" "row->view" "+" "get-h" "Point" "new" "get-col" "col->view" "view" "get-row" "get-paragraph" "par" "let*" "pos")}
        {Lisp-Entry "row->view" () 3713 11 ("get-position" "get-v" "get-paragraph" "par" "let" "row")}
        {Lisp-Entry "string-width" () 3718 11 ("Code" "name:" "Font" "get-all-widths" "JzStringWidth" "string-width" "unimplemented" "end" "start" "string")}
        {Lisp-Entry "validate-range" () 3730 11 ("error" "get-end" "get-start" "get-row" ">" "or" "when" "get-limit" "limit" "let" "range")}
        {Lisp-Entry "set-selection-style" () 3742 18 ("invalidate-view" "layout-scrollee" "true" "set-modified?" "set-paragraph-format" "else" "1" "+" "end:" "start:" "get-length" "0" "Cell" "Range" "new" "set-text-style" "paragraph" "row" "dynamic" "function" "for-each-paragraph" "empty-selection?" "or" "cond" "when" "get-row" "get-paragraph" "neq?" "span?" "get-end" "end" "get-start" "start" "get-selection" "selection" "get-style" "style" "false" "error?:" "get-format" "format" "let*" "name")}
        {Lisp-Entry "on-bold" () 3769 11 ("get-selection" "toggle-bold" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-italic" () 3775 11 ("get-selection" "toggle-italic" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "on-underline" () 3781 11 ("get-selection" "toggle-underline" "bell" "empty-selection?" "if" "evt")}
        {Lisp-Entry "get-ruler" () 3792 26 ()}
        {Lisp-Entry "on-toggle-ruler" () 3796 11 ("get-shown?" "set-shown?" "bell" "not" "if" "get-ruler" "ruler" "let" "evt")}
        {Lisp-Entry "set-selection-font-name" () 3808 18 ("invalidate-view" "layout-scrollee" "true" "set-modified?" "wrap-paragraph" "set-font-name" "end" "start" "paragraph" "dynamic" "function" "get-selection" "for-each-range" "name")}
        {Lisp-Entry "set-selection-point-size" () 3818 18 ("invalidate-view" "layout-scrollee" "true" "set-modified?" "wrap-paragraph" "set-point-size" "end" "start" "paragraph" "dynamic" "function" "get-selection" "for-each-range" "size")}
        {Lisp-Entry "pick-text-color" () 3833 11 ("8" "3" "Cell" "geometry:" "get-parent" "popup-colors" "sender")}
        {Lisp-Entry "pick-highlight-color" () 3837 11 ("8" "3" "Cell" "geometry:" "get-parent" "popup-colors" "sender")}
        {Lisp-Entry "set-completion" () 3846 26 ("set-selection" "range")}
        {Lisp-Entry "on-find-next" () 3855 18 ("list" "select-next" "unless" "enter-search-text" "bell" "not" "if" "current-expr-string" "get-selected-string" "either" "string" "let" "evt")}
        {Lisp-Entry "on-find-previous" () 3865 18 ("list" "select-previous" "unless" "enter-search-text" "bell" "not" "if" "current-expr-string" "get-selected-string" "either" "string" "let" "evt")}
        {Lisp-Entry "enter-search-text" () 3875 11 ("list" "get-search" "set-search-targets" "text" "tab" "locate" "set-selection-name" "get-guest" "manager" "get-search-manager" "palette" "get-application" "appl" "let*" "string")}
        {Lisp-Entry "select-next" () 3883 26 ("true" "ensure-scrolled-left" "ensure-displayed" "set-completion" "set-selection" "when" "syntax" "get-constituent-test" ":constituent-test" "false" ":reverse?" "get-end" "position:" "multisearch-content" "found" "let" "rest" "strings")}
        {Lisp-Entry "select-previous" () 3894 26 ("ensure-scrolled-left" "ensure-displayed" "set-completion" "set-selection" "when" "syntax" "get-constituent-test" ":constituent-test" "true" ":reverse?" "get-start" "position:" "multisearch-content" "found" "let" "rest" "strings")}
        {Lisp-Entry "select-expr" () 3905 26 ("select-next" "text-beginning" "set-caret" "targets")}
        {Lisp-Entry "select-expr-backward" () 3910 26 ("select-previous" "text-ending" "set-caret" "targets")}
        {Lisp-Entry "search-string" () 3915 18 ("cdr" "car" "Cell" "new" "when" "self" "get-col" "get-row" "get-limit" "get-paragraphs" "JzTextSearch" "found" "text-beginning" "text-ending" "if" "either" "pos" "let*" "search-string" "unimplemented" "syntax" "get-constituent-test" "constituent-test" "constituent-test:" "get-ignore-case?" "ignore-case?" "ignore-case?:" "get-application" "get-whole-words?" "whole-words?" "whole-words?:" "false" "reverse?" "reverse?:" "position" "position:" "target")}
        {Lisp-Entry "multisearch-string" () 3924 18 ("Cell" "new" "cons" "target" "col" "row" "bind" "when" "self" "get-col" "get-row" "get-paragraphs" "JzTextMultiSearch" "found" "text-beginning" "text-ending" "if" "either" "pos" "let*" "multisearch-string" "unimplemented" "syntax" "get-constituent-test" "constituent-test" "constituent-test:" "get-ignore-case?" "ignore-case?" "ignore-case?:" "get-application" "get-whole-words?" "whole-words?" "whole-words?:" "reverse?" "reverse?:" "false" "extended?" "extended?:" "get-limit" "end" "end:" "position" "position:" "targets")}
        {Lisp-Entry "multisearch-content" () 3934 11 ("get-col" "get-row" "Cell" "cell" "else" "length" "+" "offset-position" "Range" "offset" "bind" ":constituent-test" ":ignore-case?" ":whole-words?" ":reverse?" "position-offset" "multisearch-string" "let" "get-string-content" "content" "with" "cn" "search" "string" "dynamic" "function" "some?" "car" "when" "search-expressions" "found" "quotation" "code" "get-extension" "ci=" "not" "or" "if" "mode" "get-moniker" "moniker" "text-beginning" "start:" "self" "Jazz-Explorer" "new" "expl" "let*" "cond" "syntax" "get-constituent-test" "constituent-test" "constituent-test:" "get-expression?" "expression?" "expression?:" "get-ignore-case?" "ignore-case?" "ignore-case?:" "get-application" "get-whole-words?" "whole-words?" "whole-words?:" "reverse?" "reverse?:" "false" "extended?" "extended?:" "get-limit" "end" "end:" "position" "position:" "strings")}
        {Lisp-Entry "search-occurrences" () 3958 18 ("queue-list" "all?:" "search" "Cell" "new" "enqueue" "col" "lambda" "for-each" "get-string" "line" "paragraph" "row" "dynamic" "function" "for-each-paragraph" "new-queue" "queue" "let" "syntax" "get-constituent-test" "constituent-test" "constituent-test:" "ignore-case?" "ignore-case?:" "false" "whole-words?" "whole-words?:" "string")}
        {Lisp-Entry "multisearch-occurrences" () 3969 18 ("self" "get-limit" "get-paragraphs" "JzTextMultiSearchOccurrences" "Cell" "new" "cons" "target" "col" "row" "bind" "info" "dynamic" "function" "map" "syntax" "get-constituent-test" "constituent-test" "constituent-test:" "ignore-case?" "ignore-case?:" "false" "whole-words?" "whole-words?:" "targets")}
        {Lisp-Entry "get-class-image" () 3984 16 ("Bitmap-Resource")}
        {Lisp-Entry "component-surrogate" () 3988 11 ("Text-Surrogate")}
        {Lisp-Entry "save-component-properties" () 3992 11 ("set-modified?" "false" "design-events?:" "get-content" "text-content" "self" "set-property" "get-modified?" "when" "designer")}
        {Lisp-Entry "property-presentation" () 3999 16 ("nextmethod" "else" "caret-pen" "inactive-selection-color" "active-selection-color" "default-style" "default-format" "focus-selects-all?" "accepts-returns?" "wrap?" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 4012 11 ("nextmethod" "else" "Boolean-Row" "focus-selects-all?" "accepts-returns?" "wrap?" "Color-Row" "inactive-selection-color" "active-selection-color" "Selection-Row" "new" "selection" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 4020 11 ("caret-pen" "inactive-selection-color" "active-selection-color" "background" "default-style" "default-format" "focus-selects-all?" "accepts-returns?" "wrap?" "name-info" "class-info")}
        {Lisp-Entry "debug-view" () 4033 11 ("get-controller" "set-%c" "get-moniker" "set-%k" "get-style-at" "set-%y" "get-col" "get-line-at" "set-%n" "get-format" "set-%f" "set-%p" "set-%e" "set-%s" "selection" "Development" "set-%r" "get-row" "get-paragraph" "paragraph" "get-end" "end" "get-start" "start" "let*" "nextmethod" "view")}
        {Lisp-Entry "describe-view" () 4050 11 ("get-end" "get-start" "format" "list" "nextmethod" "append" "pos")}}
      {Lisp-Entry "Selection-Row" () 4061 7 ("Range-Row")
        {Lisp-Entry "present" () 4064 11 ("get-end" "get-col" "get-start" "get-row" "format" "range")}}}})
"Text-Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Text-Workspace.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.workspace.Text-Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Text-Workspace" () 46 7 ("Favorites-Manager" "Workbench-Manager" "Hierarchy-Browser" "Chapters-Browser" "Jazz-Console-Manager" "selection" "Debugger-Console-Manager" "Properties-Manager" "Search-Results" "Output-Log" "Web-Servers-Manager" "model-name:" "second" "vert" "5" "Rect" "insets:" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "first" "location:" "status" "toolbar" "menubar" "name:" "Jazz-Text-View" "frame-model:" "maximized?:" "Bitmap-Resource" "icon:" "title:" "Standard-Workspace")
        {Lisp-Entry "default-name" () 74 11 ("text")}}}})
"TextToHtml-Exporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "TextToHtml-Exporter.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.TextToHTML-Exporter" () 37 9 ("jazz")
      {Lisp-Entry "TextToHTML-Exporter" () 45 7 ("Object")
        {Lisp-Entry "text" () 48 8 ()}
        {Lisp-Entry "printer" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("printer~self" "text~self" "set!" "nextmethod" "printer" "text")}
        {Lisp-Entry "export-html" () 58 18 ("print-footer" "false" "text" "to-html" "print-header")}
        {Lisp-Entry "to-html" () 64 11 ("error" "else" "text" "to-html" "Table-Cell" "header" "get-shown?" "tree" "locate" "Table-Border" "tree-column->html" "Tree-Label-Column" "tree-label->html" "Tree-Label" "row->html" "Tree-Row" "tree->html" "Tree-View" "paragraph->html" "Paragraph" "text->html" "Text-View" "typecase" "in-table?" "element")}
        {Lisp-Entry "paragraph->html" () 78 11 ("unless" "get-runs" "run->html" "run" "dynamic" "function" "for-each" "get-left-margin" "-" "/" "printer" "format" "when" "get-bulleted?" "bulleted?" "get-format" "fmt" "let*" "in-table?" "paragraph")}
        {Lisp-Entry "run->html" () 94 11 ("get-string" "printer" "format" "not-null?" "not" "when" "color:" "get-value" "color" "Default" "get-name" "eqv?" "default?" "get-style" "style" "let*" "in-table?" "run")}
        {Lisp-Entry "run->html" () 108 11 ("else" "Heading3" "Heading2" "Heading1" "Heading0" "case" "Text-Style" "printer" "format" "Hyperlink-Style" "typecase" "get-string" "string" "get-name" "name" "get-view" "to-html" "View-Style" "is?" "if" "get-style" "style" "let" "in-table?" "run")}
        {Lisp-Entry "text->html" () 126 11 ("get-paragraphs" "paragraph->html" "paragraph" "dynamic" "function" "for-each" "in-table?" "element")}
        {Lisp-Entry "tree->html" () 132 11 ("row->html" "for-each-row" "get-columns" "true" "to-html" "column" "dynamic" "function" "for-each" "when" "printer" "format" "header?" "tree")}
        {Lisp-Entry "row->html" () 148 11 ("get-children" "false" "set!" "to-html" "0" "get-level" "/=" "and" "when" "child" "dynamic" "function" "for-each" "first?" "true" "in-table?" "let" "printer" "format" "rank" "row")}
        {Lisp-Entry "tree-label->html" () 163 11 ("printer" "format" "empty-string?" "if" "get-title" "localize" "string" "let" "cell")}
        {Lisp-Entry "tree-column->html" () 170 11 ("get-title" "localize" "printer" "format" "column")}
        {Lisp-Entry "print-header" () 174 18 ("true" ":centered?" "print-title" "localize" "/=" "when" "printer" "format" "style-sheet" "style-sheet:" "2" "header-level" "header-level:" "false" "header?" "header?:" "name" "name:")}
        {Lisp-Entry "print-footer" () 191 18 ("printer" "format")}}}})
"Thread"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "thread" "Thread.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.kernel.runtime.Thread" () 37 9 ("jazz")
      {Lisp-Entry "Thread" () 44 7 ("Object")}
      {Lisp-Entry "Thread" () 50 7 ("Handle-Container" "Object")
        {Lisp-Entry "initialize" () 53 11 ("start" "set-thread-active-context" "set-thread-active-node" "set-thread-proc" "set-thread-context" "set-thread-information" "self" "set-thread-name" "nextmethod" "execute" "execute:" "context" "context:" "information" "information:" "name" "name:")}
        {Lisp-Entry "print" () 64 11 ("format" "thread-proc" "when" "null?" "if" "get-name" "name" "let" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "present" () 74 26 ("class-of" "thread-proc" "null?" "get-name" "name" "let" "primary-thread" "self" "eq?" "if")}
        {Lisp-Entry "start" () 90 11 ("self" "start-thread")}
        {Lisp-Entry "launch" () 99 11 ("run" "coinitialize" "Stop-Signal" "Cancel-Signal" "Toplevel-Signal" "catch")}
        {Lisp-Entry "run" () 107 29 ("self" "run-thread")}
        {Lisp-Entry "get-handle" () 116 11 ("self" "thread-handle")}
        {Lisp-Entry "get-state" () 120 18 ("self" "thread-state")}
        {Lisp-Entry "set-state" () 124 18 ("self" "set-thread-state" "state")}
        {Lisp-Entry "get-name" () 128 18 ("self" "thread-name")}
        {Lisp-Entry "set-name" () 132 18 ("self" "set-thread-name" "name")}
        {Lisp-Entry "get-active-node" () 136 18 ("self" "thread-active-node")}
        {Lisp-Entry "set-active-node" () 140 18 ("self" "set-thread-active-node" "node")}
        {Lisp-Entry "get-active-context" () 144 18 ("self" "thread-active-context")}
        {Lisp-Entry "set-active-context" () 148 18 ("self" "set-thread-active-context" "context")}
        {Lisp-Entry "get-information" () 152 18 ("self" "thread-information")}
        {Lisp-Entry "running?" () 161 18 ("suspended?" "not")}
        {Lisp-Entry "suspended?" () 165 18 ("0" "self" "thread-state" ">")}
        {Lisp-Entry "terminate" () 169 18 ("self" "terminate-thread")}
        {Lisp-Entry "suspend" () 173 18 ("self" "suspend-thread")}
        {Lisp-Entry "resume" () 177 18 ("self" "resume-thread")}
        {Lisp-Entry "alive?" () 181 18 ("get-handle")}}}})
"Thread-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Thread-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Thread-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Thread-Snapshot" () 45 7 ("Component")
        {Lisp-Entry "model" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "label" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "state" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "system-stack" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "data-stack" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "call-stack" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 56 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" () 60 11 ("call-stack" ":call-stack" "data-stack" ":data-stack" "system-stack" ":system-stack" "state" "state:" "label" ":label" "model" ":model" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"Thread-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Thread-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Thread-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Thread-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-thread" "invoke")}
        {Lisp-Entry "test-thread" () 61 11 ()}}}})
"Threads-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "tools" "Threads-Manager.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.tools.Threads-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Threads-Manager" () 48 7 ("state" "display-images?:" "toplevel-controls?:" "width:" "name" "row" "selection-mode:" "multiple-selection?:" "information" "filled-column:" "threads" "fill" "layout-type:" "content" "vscroll?:" "edge" "border-type:" "4" "threads-border" "on-update" "update" "on-resume" "resume" "on-suspend" "suspend" "on-terminate" "form:" "Event-Handler" "action-handler:" "6" "Point" "position:" "title:" "terminate" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "install" () 68 11 ("update-threads" "nextmethod" "rest")}
        {Lisp-Entry "palette-title" () 79 16 ()}
        {Lisp-Entry "palette-position" () 84 16 ("Point")}
        {Lisp-Entry "palette-size" () 89 16 ("Dimension")}
        {Lisp-Entry "install-in-host" () 93 11 ("threads" "locate" "acquire-focus" "nextmethod" "host")}
        {Lisp-Entry "resize" () 103 11 ("threads-border" "size-figure" "update" "resume" "suspend" "0" "terminate" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-update" () 112 11 ("update-threads" "evt")}
        {Lisp-Entry "update-threads" () 116 11 ("set-selection" "0" "get-visible-count" ">" "when" "user-data:" "list" "children:" "add-row" "suspended?" "if" "c2" "get-information" "either" "Tree-Label" "c1" "present" "title:" "Tree-Node" "new" "c0" "thread" "for-each" "remove-every-row" "dynamic" "function" "with-update-locked" "locate" "tree" "get-threads" "reverse" "threads" "let")}
        {Lisp-Entry "update-states" () 132 11 ("invalidate-cell" "0" "thread-state" ">" "if" "get-cell-data" "set-title" "2" "Cell" "new" "cell" "user-data-index" "n" "let*" "thread" "dynamic" "function" "for-each" "locate" "tree" "let" "threads")}
        {Lisp-Entry "selected-threads" () 142 11 ("get-row" "get-user-data" "item" "dynamic" "function" "map" "get-selection" "selection" "threads" "locate" "tree" "let*")}
        {Lisp-Entry "on-terminate" () 150 11 ("update-threads" "terminate" "thread" "dynamic" "function" "for-each" "selected-threads" "threads" "let" "evt")}
        {Lisp-Entry "on-suspend" () 158 11 ("update-states" "suspend" "thread" "dynamic" "function" "for-each" "selected-threads" "threads" "let" "evt")}
        {Lisp-Entry "on-resume" () 166 11 ("update-states" "resume" "thread" "dynamic" "function" "for-each" "selected-threads" "threads" "let" "evt")}}}})
"Threads-Showcase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "showcase" "Threads-Showcase.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.showcase.Threads-Showcase" () 37 9 ("jazz")
      {Lisp-Entry "Threads-Showcase" () 46 7 ("Bitmap-Resource" "icons:" "height:" "width:" "portfolio" "2" "area" "on-resume-threads" "resume-threads" "on-suspend-threads" "suspend-threads" "on-add-threads" "form:" "Event-Handler" "action-handler:" "Dimension" "size:" "4" "Point" "position:" "title:" "add-threads" "name:" "View")
        {Lisp-Entry "threads" () 49 8 ()}
        {Lisp-Entry "slowdown" () 50 8 ()}
        {Lisp-Entry "start" () 51 8 ()}
        {Lisp-Entry "count" () 52 8 ("0")}
        {Lisp-Entry "done?" () 53 8 ("false")}
        {Lisp-Entry "destroy-component" () 65 11 ("nextmethod" "stop-showcase")}
        {Lisp-Entry "start-showcase" () 70 11 ("add-threads" "false" "done?" "0" "count" "clock" "start" "set!")}
        {Lisp-Entry "stop-showcase" () 77 11 ("threads" "alive?" "running?" "and" "thread" "some?" "dynamic" "function" "wait-while" "true" "done?" "set!")}
        {Lisp-Entry "add-icon" () 88 11 ("Dimension" "size:" "get-height" "get-width" "-" "random" "Point" "position:" "parent:" "portfolio" ":portfolio" "0" ":image-name" "Showcase-Icon" "new" "get-size" "size" "locate" "area" "let*" "n")}
        {Lisp-Entry "add-threaded-icon" () 99 18 ("5" "Language" "category-compiled?" "if" "length" "*" "cons" "threads" "set!" "animate-icon" "dynamic" "execute-primary" "slowdown" "sleep" "done?" "not" "while" "function" "execute:" "self" "context:" "information:" "name:" "Thread" "new" "thread" "add-icon" "icon" "let*" "n")}
        {Lisp-Entry "on-add-threads" () 116 11 ("add-threads" "evt")}
        {Lisp-Entry "on-suspend-threads" () 120 11 ("threads" "suspend" "thread" "dynamic" "function" "for-each" "evt")}
        {Lisp-Entry "on-resume-threads" () 126 11 ("threads" "resume" "thread" "dynamic" "function" "for-each" "evt")}
        {Lisp-Entry "add-threads" () 132 11 ("5" "0" "naturals" "add-threaded-icon" "n" "dynamic" "function" "for-each")}
        {Lisp-Entry "report-timing" () 138 11 ("clocks/second" "start" "clock" "-" "/" "*" "user-message" "0" "modulo" "=" "when" "count" "increase!")}
        {Lisp-Entry "print" () 144 11 ("object-address" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "Showcase-Icon" () 156 9 ("Image-View")
          {Lisp-Entry "direction-h" () 159 10 ()}
          {Lisp-Entry "direction-v" () 160 10 ()}
          {Lisp-Entry "prepare" () 163 13 ("direction-v" "5" "random" "-" "direction-h" "set!" "nextmethod" "rest")}
          {Lisp-Entry "animate-icon" () 169 20 ("rebound-icon" "move-icon")}
          {Lisp-Entry "move-icon" () 174 13 ("direction-v" "get-v" "direction-h" "get-h" "+" "Point" "new" "set-position" "get-position" "pos" "let")}
          {Lisp-Entry "rebound-icon" () 179 13 ("direction-v" "get-height" "get-bottom" "get-top" "-" "direction-h" "set!" "get-width" "get-right" ">" "0" "get-left" "" "or" "when" "parent" "get-size" "area" "get-rect" "rect" "let")}}}}})
"Threeway-Checkbox"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Threeway-Checkbox.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Threeway-Checkbox" () 41 9 ("jazz")
      {Lisp-Entry "Threeway-Checkbox" () 50 7 ("Check-Box")
        {Lisp-Entry "type" () 53 12 ("set-type" "get-type")}
        {Lisp-Entry "property" () 54 12 ("set-property" "get-property")}
        {Lisp-Entry "state" () 55 12 ("set-state" "get-state" "none")}
        {Lisp-Entry "get-type" () 58 11 ("type")}
        {Lisp-Entry "set-type" () 62 11 ("type" "set!" "value")}
        {Lisp-Entry "get-property" () 66 11 ("property")}
        {Lisp-Entry "set-property" () 70 11 ("property" "set!" "value")}
        {Lisp-Entry "get-state" () 74 11 ("state")}
        {Lisp-Entry "set-state" () 78 11 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "change-state" () 83 11 ("invalidate-view" "next-state" "previous-state" "if" "state" "set!" "reverse?")}
        {Lisp-Entry "previous-state" () 88 11 ("displayed" "validated" "none" "case" "state")}
        {Lisp-Entry "next-state" () 95 11 ("validated" "displayed" "none" "case" "state")}
        {Lisp-Entry "Validated-Pen" () 102 14 ("Dark-Red" "name:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "Validated-Pen-Grayed" () 105 14 ("blue:" "green:" "red:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "draw-check" () 109 11 ("draw-check" "state-pen" "set-pen" "none" "state" "eq?" "unless" "grayed?" "v" "h" "dc")}
        {Lisp-Entry "state-pen" () 115 11 ("Validated-Pen" "Validated-Pen-Grayed" "validated" "Black" "Dark" "name:" "Pen" "if" "displayed" "state" "case" "grayed?")}}}})
"Time"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "time" "Time.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.time.Time" () 37 9 ("jazz")
      {Lisp-Entry "Time" () 44 7 ("WinKernel" "WinBase" "Windows" "Utilities" "Object")
        {Lisp-Entry "elapse" () 47 8 ()}
        {Lisp-Entry "local-time" () 55 23 ("local-date" "get-time")}
        {Lisp-Entry "universal-time" () 59 23 ("universal-date" "get-time")}
        {Lisp-Entry "construct-literal" () 64 16 ("self" "new" "elapse" "context")}
        {Lisp-Entry "from-filetime" () 68 23 ("dwHighDateTime" "dwLowDateTime" "get" "make-long" "self" "new" "filetime")}
        {Lisp-Entry "initialize" () 78 11 ("elapse" "set!" "nextmethod" "e")}
        {Lisp-Entry "compare-object" () 83 11 ("get-elapse" "elapse" "compare" ":incompatible" "Time" "is-not?" "if" "target")}
        {Lisp-Entry "print" () 89 11 ("elapse" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-elapse" () 100 18 ("elapse")}
        {Lisp-Entry "get-filetime" () 104 18 ("hilong" "dwHighDateTime" "elapse" "lolong" "dwLowDateTime" "set" "FILETIME" "new" "filetime" "let")}
        {Lisp-Entry "get-date" () 116 18 ("from-systemtime" "FileTimeToSystemTime" "SYSTEMTIME" "new" "systemtime" "get-filetime" "filetime" "let")}
        {Lisp-Entry "universal->local" () 123 18 ("from-filetime" "FileTimeToLocalFileTime" "FILETIME" "new" "local" "get-filetime" "filetime" "let")}
        {Lisp-Entry "local->universal" () 130 18 ("from-filetime" "LocalFileTimeToFileTime" "FILETIME" "new" "local" "get-filetime" "filetime" "let")}
        {Lisp-Entry "milli" () 142 14 ()}
        {Lisp-Entry "second" () 145 14 ("milli" "*")}
        {Lisp-Entry "minute" () 148 14 ("second" "*")}
        {Lisp-Entry "hour" () 151 14 ("minute" "*")}
        {Lisp-Entry "day" () 154 14 ("hour" "*")}
        {Lisp-Entry "add" () 158 18 ("get-units" "*" "+" "elapse" "set!" "value" "field")}
        {Lisp-Entry "get-duration" () 162 18 ("get-units" "elapse" "/" "field")}
        {Lisp-Entry "get-units" () 166 11 ("error" "else" "day" "hour" "minute" "second" "milli" "case" "field")}}}})
"Time-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Time-Domain.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.domain.Time-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Time-Domain" () 44 7 ("Domain")
        {Lisp-Entry "validate-value" () 52 11 ("property:" "format" "message:" "Integrity-Violation" "new" "add-violation" "Date" "is-not?" "when" "manager" "context" "client" "root" "component" "value" "property")}
        {Lisp-Entry "present" () 62 11 ("present-compact" "null?" "if" "value")}}}})
"Timer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Timer.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.utility.Timer" () 37 9 ("jazz")
      {Lisp-Entry "Timer" () 44 7 ("Object")}
      {Lisp-Entry "Timer" () 50 7 ("Object")
        {Lisp-Entry "start" () 53 8 ()}
        {Lisp-Entry "objects" () 54 8 ()}
        {Lisp-Entry "triggers" () 55 8 ()}
        {Lisp-Entry "initialize" () 58 11 ("reset" "nextmethod")}
        {Lisp-Entry "reset" () 63 18 ("reset-triggers" "reset-objects" "reset-clock")}
        {Lisp-Entry "reset-clock" () 69 18 ("clock" "start" "set!")}
        {Lisp-Entry "reset-objects" () 73 18 ("free-objects" "objects" "set!")}
        {Lisp-Entry "reset-triggers" () 77 18 ("gc-triggers" "triggers" "set!")}
        {Lisp-Entry "get-duration" () 81 18 ("reset-clock" "when" "start" "clock" "-" "prog1" "true" "reset?" "reset?:")}
        {Lisp-Entry "get-objects" () 87 18 ("reset-objects" "when" "free-objects" "objects" "-" "prog1" "true" "reset?" "reset?:")}
        {Lisp-Entry "get-triggers" () 93 18 ("reset-triggers" "when" "triggers" "length" "gc-triggers" "tail" "prog1" "true" "reset?" "reset?:")}
        {Lisp-Entry "get-duration-in-seconds" () 99 18 ("clocks/second" "get-duration" "/")}
        {Lisp-Entry "report-duration" () 103 18 ("get-duration-in-seconds" "user-message")}
        {Lisp-Entry "report-usage" () 108 18 ("get-triggers" "get-objects" "get-duration-in-seconds" "user-message")}}}})
"Toggle-Tool"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Toggle-Tool.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Toggle-Tool" () 37 9 ("jazz")
      {Lisp-Entry "Toggle-Tool" () 46 7 ("Image-Tool")
        {Lisp-Entry "selected?" () 49 12 ("set-selected?" "get-selected?" "false")}
        {Lisp-Entry "default-size" () 52 11 ("Dimension")}
        {Lisp-Entry "draw-frame" () 61 11 ("nextmethod" "draw-pushed" "out-pushed" "highlighted" "inactive" "get-state" "memq?" "selected?" "and" "if" "dc")}
        {Lisp-Entry "draw-tool" () 67 11 ("enabled?:" "image" "disabled-image" "draw" "get-disabled-image-name" "not" "and" "get-enabled?" "enabled?" "1" "2" "pushed" "get-state" "=" "selected?" "or" "if" "offset" "let" "context" "dc")}
        {Lisp-Entry "draw-background" () 75 11 ("nextmethod" "Light-Background" "name:" "Color" "fill-rect" "get-bounds" "bounds" "with" "selected?" "if" "get-state" "state" "let" "context" "dc")}
        {Lisp-Entry "up" () 88 11 ("self" "process-action" "toggle-selected?" "pushed" "get-state" "=" "when")}
        {Lisp-Entry "get-selected?" () 99 18 ("selected?")}
        {Lisp-Entry "set-selected?" () 103 18 ("invalidate-view" "set!" "selected?" "neq?" "when" "flag")}
        {Lisp-Entry "toggle-selected?" () 109 18 ("selected?" "not" "set-selected?")}}}})
"Tool-Button"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Tool-Button.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Tool-Button" () 37 9 ("jazz")
      {Lisp-Entry "Tool-Button" () 47 7 ("Layout-View")
        {Lisp-Entry "state" () 54 8 ("inactive")}
        {Lisp-Entry "default-size" () 57 11 ("Dimension")}
        {Lisp-Entry "mouse-activate?" () 61 11 ("false")}
        {Lisp-Entry "get-state" () 70 26 ("state")}
        {Lisp-Entry "set-state" () 74 26 ("invalidate-view" "state" "set!" "value")}
        {Lisp-Entry "set-enabled?" () 84 11 ("nextmethod" "inactive" "state" "set!" "not" "when" "flag")}
        {Lisp-Entry "draw" () 95 11 ("draw-tool" "draw-frame" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-frame" () 100 29 ("draw-out-pushed" "out-pushed" "draw-pushed" "pushed" "draw-highlighted" "highlighted" "draw-inactive" "inactive" "get-state" "case" "dc")}
        {Lisp-Entry "draw-inactive" () 108 29 ("dc")}
        {Lisp-Entry "draw-highlighted" () 112 29 ("dark-pen" "light-pen" "draw-border" "dc")}
        {Lisp-Entry "draw-pushed" () 116 29 ("light-pen" "dark-pen" "draw-border" "dc")}
        {Lisp-Entry "light-pen" () 120 29 ("Light" "name:" "Pen")}
        {Lisp-Entry "dark-pen" () 124 29 ("Dark" "name:" "Pen")}
        {Lisp-Entry "draw-out-pushed" () 128 29 ("dc")}
        {Lisp-Entry "draw-border" () 132 11 ("line-to-no-stroke" "line-to" "move-to" "set-pen" "get-bottom" "bottom" "1" "get-right" "-" "right" "top" "0" "left" "let" "get-bounds" "rect" "with" "lower" "upper" "dc")}
        {Lisp-Entry "draw-tool" () 148 29 ("context" "dc")}
        {Lisp-Entry "mouse-enter" () 157 11 ("pushed" "out-pushed" "highlighted" "set-state" "inactive" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "get-enabled?" "and" "when")}
        {Lisp-Entry "mouse-leave" () 164 11 ("out-pushed" "pushed" "inactive" "set-state" "highlighted" "get-state" "case" "self" "mouse-down-view" "eq?" "mouse-down?" "not" "or" "and" "when")}
        {Lisp-Entry "mouse-down" () 171 11 ("invalidate-view" "down" "pushed" "state" "set!" "get-enabled?" "when" "pos")}
        {Lisp-Entry "down" () 178 26 ()}
        {Lisp-Entry "drag-up" () 182 11 ("inactive" "out-pushed" "highlighted" "set-state" "pushed" "get-state" "case" "up" "unwind-protect" "get-enabled?" "when" "rest" "pos")}
        {Lisp-Entry "up" () 191 26 ()}}}})
"Tool-Palette"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tool" "Tool-Palette.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.tool.Tool-Palette" () 37 9 ("jazz")
      {Lisp-Entry "Tool-Palette" () 45 7 ("Host-Palette")
        {Lisp-Entry "preferences-path" () 53 11 ("guest" "class-of" "type-name" "palettes" "list")}}}})
"Tool-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tool" "Tool-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.tool.Tool-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Tool-Preferences" () 46 7 ("title:" "Frame-Preferences")
        {Lisp-Entry "can-rename-component?" () 58 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 62 11 ("false")}
        {Lisp-Entry "can-move-component?" () 66 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 70 11 ("false")}}}})
"Tool-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tool" "Tool-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.tool.Tool-View" () 37 9 ("jazz")
      {Lisp-Entry "Tool-View" () 45 7 ("Layout-View")
        {Lisp-Entry "install-in-host" () 53 11 ("get-process" "apply-preferences" "when" "tool-preferences" "preferences" "let" "nextmethod" "host")}
        {Lisp-Entry "confirm-close" () 65 11 ("save-session" "rest")}
        {Lisp-Entry "save-session" () 69 11 ("get-host" "save-preferences" "get-application" "get-preferences-designer" "designer" "when" "tool-preferences" "pref" "let")}}}})
"Toolbar"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Toolbar.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Toolbar" () 37 9 ("jazz")
      {Lisp-Entry "Toolbar" () 45 7 ("View")
        {Lisp-Entry "flow-layout" () 48 8 ()}
        {Lisp-Entry "install" () 51 11 ("layout-view" "layout-insets" "insets:" "Flow-Layout" "new" "flow-layout" "set!" "nextmethod" "rest")}
        {Lisp-Entry "mouse-activate?" () 57 11 ("false")}
        {Lisp-Entry "layout-insets" () 61 29 ("0" "3" "2" "Rect")}
        {Lisp-Entry "layout" () 65 11 ("get-height" "get-width" "children" "flow-layout" "layout")}}}})
"Toolbar-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Toolbar-Preferences.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.Toolbar-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Toolbar-Preferences" () 47 7 ("Bitmap-Resource" "icon:" "Figure-Preferences")
        {Lisp-Entry "model-name" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "presentation-property?" () 62 11 ("title" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 66 11 ("name" "format" "title" "either")}
        {Lisp-Entry "set-presentation" () 70 11 ("title:" "self" "set-property" "title" "designer")}
        {Lisp-Entry "apply-preferences" () 79 11 ("true" "set-visible?" "get-guest" "client-activate" "location" "set-location" "set-title" "title" "when" "set-parent" "name" "singleton-toolbar" "host" "get-class" "class" "let*" "assert" "parent")}
        {Lisp-Entry "get-class" () 91 11 ("either" "autoload" "model-name" "assq" "cdr" "name" "get-toolbar-classes" "classes" "workspaces" "get-preferences" "pref" "let*")}
        {Lisp-Entry "get-class-image" () 104 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-categorized-properties" () 108 11 ("model-name" "location")}}}})
"Toolbar-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Toolbar-Root.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Toolbar-Root" () 37 9 ("jazz")
      {Lisp-Entry "Toolbar-Root" () 50 7 ("Root-View")
        {Lisp-Entry "size-change" () 58 11 ("2" "Rect" "insets:" "invalidate-border" "invalidate-top" "nextmethod" "size")}
        {Lisp-Entry "on-close" () 64 11 ("selection" "first-child" "Pad-Window" "close" "get-location" "set-location" "layout-window" "zoom" "set-mode" "begin" "Workspace-Splitter" "if" "when" "first-window" "other" "let" "Splitter-Window" "is?" "cond" "get-toplevel" "set-parent" "false" "set-visible?" "dynamic" "function" "with-locked-update" "grand" "get-parent" "parent" "player" "host" "let*" "evt")}
        {Lisp-Entry "mouse-activate" () 95 11 ("get-player" "acquire-focus")}
        {Lisp-Entry "root-activate" () 99 11 ("invalidate-caption")}
        {Lisp-Entry "root-deactivate" () 103 11 ("invalidate-caption")}
        {Lisp-Entry "layout" () 112 11 ("Dimension" "new" "set-size" "0" "Point" "set-position" "get-content" "content" "get-height" "height" "get-width" "width" "let")}
        {Lisp-Entry "menu-rect" () 125 11 ("1" "Rect" "new")}
        {Lisp-Entry "caption-rect" () 129 11 ("2" "get-width" "-" "1" "Rect" "new")}
        {Lisp-Entry "top-rect" () 133 11 ("2" "get-width" "-" "1" "Rect" "new")}
        {Lisp-Entry "invalidate-top" () 142 11 ("top-rect" "invalidate-rect")}
        {Lisp-Entry "invalidate-caption" () 146 11 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "Active-Colors" () 155 14 ("blue:" "green:" "0" "red:" "Color" "list")}
        {Lisp-Entry "Frame-Dark-Color" () 159 14 ("blue:" "green:" "red:" "Color")}
        {Lisp-Entry "Frame-Medium-Pen" () 162 14 ("blue:" "green:" "red:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "Frame-Light-Pen" () 165 14 ("blue:" "green:" "red:" "Color" "color:" "Pen" "new")}
        {Lisp-Entry "draw" () 170 11 ("Frame-Light-Pen" "Frame-Medium-Pen" "Dark" "7" "draw-text" "Black" "White" "set-text-color" "Default-GUI" "Font" "set-font" "5" "4" "get-application" "get-icons-cache" "draw-image" "Medium" "Color" "fill-rect" "second" "Active-Colors" "first" "gradient-fill" "if" "3" "1" "line" "Light" "name:" "Pen" "set-pen" "Frame-Dark-Color" "get-bottom" "get-right" "-" "get-top" "get-left" "frame-rect" "get-focused-root" "self" "eq?" "focused?" "get-height" "height" "get-width" "width" "get-title" "title" "class-of" "palette-icon" "icon" "get-parent" "parent" "get-guest" "guest" "player" "host" "let*" "tools" "locate" "get-position" "get-h" "2" "Rect" "new" "caption" "get-bounds" "bounds" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "mouse-down" () 208 11 ("toggle-docked" "caption-rect" "select-menu" "menu-rect" "in-rect?" "cond" "pos")}
        {Lisp-Entry "toggle-docked" () 215 11 ("select-next" "dynamic" "function" "with-locked-update" "get-h" "" "text-width" "+" "h" "Default-GUI" "name:" "Font" "font" "get-title" "title" "Pad-Window" "is?" "when" "get-parent" "parent" "player" "host" "let*" "pos")}
        {Lisp-Entry "double-click" () 228 11 ("unzoom" "zoom" "split" "get-state" "=" "dynamic" "function" "with-locked-update" "Splitter-Window" "when" "splitter" "Pad-Window" "is?" "if" "target" "get-parent" "parent" "get-host" "host" "let*" "pos")}
        {Lisp-Entry "select-menu" () 246 11 ("2" "Point" "track-popup-menu" "layout-menu" ":host" "list" "properties:" "on-select" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "icon:" "title:" "parent:" "Label-Item" "class-of" "palette-icon" "icon" "get-title" "title" "get-guest" "guest" "docked" "dynamic" "function" "for-each" "Context-Menu" "new" "menu" "let" "when" "collect-others" "others" "player" "host" "let*")}
        {Lisp-Entry "collect-others" () 261 11 ("get-children" "/=" "hst" "dynamic" "function" "collect-if" "Pad-Window" "is?" "when" "player" "get-parent" "pad" "let" "host")}
        {Lisp-Entry "on-select" () 269 11 ("acquire-focus" "set-selection" "dynamic" "function" "with-locked-update" ":host" "get-property" "host" "player" "get-parent" "parent" "let" "evt")}}}})
"Toolbox"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "toolbox" "Toolbox.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.toolbox.Toolbox" () 37 9 ("jazz")
      {Lisp-Entry "Toolbox" () 46 7 ("Group")
        {Lisp-Entry "get-class-presentation" () 55 16 ()}
        {Lisp-Entry "get-class-image" () 60 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-presentation" () 64 11 ()}
        {Lisp-Entry "can-rename-component?" () 68 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 72 11 ("false")}
        {Lisp-Entry "can-move-component?" () 76 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 80 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 84 11 ()}}}})
"Toolbox-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "toolbox" "Toolbox-Editor.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Toolbox-Editor" () 45 7 ("Descendants-Editor")
        {Lisp-Entry "form-model" () 48 11 ("nextmethod" "else" "Toolbox-Tree" "tree" "get-name" "case" "form")}}}})
"Toolbox-Group"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "toolbox" "Toolbox-Group.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Group" () 37 9 ("jazz")
      {Lisp-Entry "Toolbox-Group" () 45 7 ("Component")
        {Lisp-Entry "title" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-presentation" () 57 16 ()}
        {Lisp-Entry "get-class-image" () 62 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-addable-classes" () 66 11 ("Toolbox-Model" "Toolbox-Group" "list")}}}})
"Toolbox-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "toolbox" "Toolbox-Manager.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Toolbox-Manager" () 50 7 ("width:" "title:" "descendant" "auto-expand/collapse?:" "highlight-edited?:" "tree" "flat?:" "scroller" "center" "descendants" "on-new" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "Dimension" "size:" "new" "tools" "name:" "border" "layout-type:" "Editor-View")
        {Lisp-Entry "external-name" () 64 16 ("toolbox-manager" "rest")}
        {Lisp-Entry "palette-class" () 74 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 79 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 84 16 ()}
        {Lisp-Entry "get-tools-view" () 93 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 97 11 ("acquire-focus" "descendants" "locate" "tree" "let")}
        {Lisp-Entry "read-toolbox" () 107 16 ("err" "continue-handler:" "install-context" "read-from-file" "instantiate" "toolbox" "get-process" "process" "exists?" "when" "User" "File" "file" "let" "dynamic" "function" "with-safe-execution")}
        {Lisp-Entry "install" () 126 11 ("read-toolbox" "set-client" "self" "locate" "set-editor" "false" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "document-status" () 138 11 ()}
        {Lisp-Entry "on-new" () 147 11 ("false" ":centered?" "0" "Point" "get-surrogate" "add-new" "car" "length" "1" "=" "client" "get-selection" "selection" "current-document" "editor" "let*" "Component" "subtype?" "autoload" "class" "error" "in-manifest?" "not" "or" "if" "Symbol-Request" "class:" "request-name" "name" "let" "evt")}}}})
"Toolbox-Model"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "toolbox" "Toolbox-Model.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Model" () 37 9 ("jazz")
      {Lisp-Entry "Toolbox-Model" () 45 7 ("Component")
        {Lisp-Entry "model" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "get-class-presentation" () 57 16 ()}
        {Lisp-Entry "get-class-image" () 62 16 ("Bitmap-Resource")}
        {Lisp-Entry "presentation-property?" () 66 11 ("model" "field-name" "memq?" "property")}
        {Lisp-Entry "get-presentation" () 70 11 ("model")}
        {Lisp-Entry "set-presentation" () 74 11 ("string->symbol" ":model" "self" "set-property" "model" "designer")}}}})
"Toolbox-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "toolbox" "Toolbox-Tree.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.toolbox.Toolbox-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Toolbox-Tree" () 46 7 ("row" "selection-mode:" "multiple-selection?:" "reorderable?:" "draggable?:" ":icons" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "addable-root-classes" () 53 11 ("Toolbox-Model" "Toolbox-Group" "list")}
        {Lisp-Entry "update-selection" () 60 11 ("selected-components" "expand-state")}
        {Lisp-Entry "row-state" () 64 11 ("collapsed" "expanded" "1" "" "if" "level" "update?" "component")}}}})
"Tools-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tool" "Tools-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.tool.Tools-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Tools-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "can-rename-component?" () 58 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 62 11 ("false")}
        {Lisp-Entry "can-move-component?" () 66 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 70 11 ("false")}}}})
"Tooltip"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Tooltip.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.window.Tooltip" () 37 9 ("jazz")
      {Lisp-Entry "Tooltip" () 46 7 ("Transient")
        {Lisp-Entry "with-passing-through" () 49 11 ("true" "set!" "begin" "unwind-protect" "Passing-Through?" "preserved" "let" "proc")}
        {Lisp-Entry "pass-through" () 58 11 ("get-v" "get-h" "dynamic" "function" "with-passing-through" "acquired" "let" "when" "self" "acquire" "owner" "find-child-window" "window" "Point" "new" "pos" "let*" "proc" "v" "h")}
        {Lisp-Entry "mouse-hover" () 68 11 ("mouse-hover" "window" "dynamic" "function" "pass-through" "v" "h")}
        {Lisp-Entry "mouse-down" () 74 11 ("mouse-down" "window" "dynamic" "function" "pass-through" "v" "h")}
        {Lisp-Entry "mouse-move" () 80 11 ("mouse-move" "window" "dynamic" "function" "pass-through" "v" "h")}
        {Lisp-Entry "mouse-up" () 86 11 ("mouse-up" "window" "dynamic" "function" "pass-through" "v" "h")}
        {Lisp-Entry "double-click" () 92 11 ("double-click" "window" "dynamic" "function" "pass-through" "v" "h")}
        {Lisp-Entry "context-menu" () 98 11 ("context-menu" "window" "dynamic" "function" "pass-through" "v" "h")}}}})
"Tooltip-Context"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Tooltip-Context.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Tooltip-Context" () 37 9 ("jazz")
      {Lisp-Entry "Tooltip-Context" () 45 7 ("Object")
        {Lisp-Entry "view" () 48 15 ()}
        {Lisp-Entry "text" () 49 15 ()}
        {Lisp-Entry "bounds" () 50 15 ()}
        {Lisp-Entry "position" () 51 15 ()}
        {Lisp-Entry "font" () 52 15 ()}
        {Lisp-Entry "tooltip" () 53 15 ()}
        {Lisp-Entry "initialize" () 56 11 ("font~self" "position~self" "bounds~self" "text~self" "view~self" "set!" "nextmethod" "font" "font:" "position" "position:" "bounds" "bounds:" "text" "text:" "view" "view:")}
        {Lisp-Entry "print" () 65 11 ("font" "position" "bounds" "text" "view" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-view" () 76 18 ("view")}
        {Lisp-Entry "get-text" () 80 18 ("text")}
        {Lisp-Entry "get-bounds" () 84 18 ("bounds")}
        {Lisp-Entry "get-position" () 88 18 ("position")}
        {Lisp-Entry "get-font" () 92 18 ("font")}
        {Lisp-Entry "get-tooltip" () 96 18 ("tooltip")}
        {Lisp-Entry "set-tooltip" () 100 18 ("tooltip" "set!" "tt")}}}})
"Tooltip-Label"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Tooltip-Label.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Tooltip-Label" () 37 9 ("jazz")
      {Lisp-Entry "Tooltip-Label" () 47 7 ("Label-Bold" "name:" "Font" "font:" "View")
        {Lisp-Entry "preferred-size" () 54 11 ("length" "*" "3" "get-width" "+" "Dimension" "new" "localize" "font" "text-extent" "str" "dynamic" "function" "map" "generic-max" "apply" "extent" "standard-title" "title" "let*")}
        {Lisp-Entry "standard-title" () 65 11 ("equal?" "test:" "list" "pair?" "title" "null?" "or" "if" "remove-trailing")}
        {Lisp-Entry "Background-Color" () 78 14 ("Tooltip" "name:" "Color")}
        {Lisp-Entry "draw" () 82 11 ("increase!" "localize" "draw-text" "str" "dynamic" "function" "for-each" "font" "set-font" "standard-title" "title" "1" "v" "2" "h" "let" "Black" "name:" "Color" "set-text-color" "Background-Color" "get-bounds" "fill-rect" "lv" "lh" "update" "context" "dc")}}}})
"Tooltip-Text"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Tooltip-Text.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.view.Tooltip-Text" () 37 9 ("jazz")
      {Lisp-Entry "Tooltip-Text" () 47 7 ("editable?:" "Tooltip" "Color" "background:" "text" "content" "name:" "flat?:" "vscroll?:" "hscroll?:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "get-text" () 62 18 ("text" "locate")}}}})
"Tooltip-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Tooltip-Text-View.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Tooltip-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Tooltip-Text-View" () 47 7 ("Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "4" "left-padding:" "Formatted-Text-View")
        {Lisp-Entry "install" () 54 11 ("Variable" "monospace?:" "Code" "Dark-Blue" "Hyperlink" "Reference" "Purple" "Comment" "Dark-Red" "Color" "color:" "Title" "italic?:" "point-size:" "font-name:" "Font" "font:" "Text-Style" "add-style" "Heading2" "Heading1" "Default" "base:" "Heading0" "name:" "Format" "add-format" "nextmethod" "rest")}
        {Lisp-Entry "get-context-menu" () 72 11 ("new-text-context-menu")}}}})
"Toplevel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Toplevel.fusion"} {Time 128368664680000000L}
    {Lisp-Entry "jazz.ui.window.Toplevel" () 37 9 ("jazz")
      {Lisp-Entry "Toplevel" () 50 7 ("visible?:" "Overlapped")
        {Lisp-Entry "fullscreen?" () 53 12 ("set-fullscreen?" "get-fullscreen?" "false")}
        {Lisp-Entry "caption?" () 54 12 ("set-caption?" "get-caption?" "true")}
        {Lisp-Entry "caption-base" () 55 12 ("set-caption-base" "get-caption-base")}
        {Lisp-Entry "caption" () 56 12 ("set-caption" "get-caption")}
        {Lisp-Entry "maximized?" () 59 8 ("false")}
        {Lisp-Entry "workspace-splitter" () 60 8 ()}
        {Lisp-Entry "site" () 61 8 ()}
        {Lisp-Entry "register-toplevel" () 74 26 ("RegisterClass" "window-class" "lpszClassName" "lpszMenuName" "hbrBackground" "NULL" "hCursor" "height:" "width:" "Image" "load-image" "hIcon" "hInstance" "cbWndExtra" "0" "cbClsExtra" "get-window-proc" "lpfnWndProc" "class-style" "style" "set" "WNDCLASS" "new" "wc" "current-instance" "instance" "let" "icon" "icon:")}
        {Lisp-Entry "window-style" () 91 11 ("WS_SYSMENU" "WS_MINIMIZEBOX" "WS_OVERLAPPED" "WS_POPUP" "WS_CLIPCHILDREN" "WS_CLIPSIBLINGS" "bit-or" "rest")}
        {Lisp-Entry "window-ex-style" () 101 11 ("WS_EX_APPWINDOW" "rest")}
        {Lisp-Entry "default-parent" () 105 11 ()}
        {Lisp-Entry "window-parent" () 109 11 ("NULL")}
        {Lisp-Entry "install" () 113 11 ("nextmethod" "setup-workspace-splitter" "rest")}
        {Lisp-Entry "size-change" () 123 11 ("get-height" "get-width" "-" "Dimension" "set-size" "+" "Point" "new" "set-position" "height" "4" "0" "root" "get-maximized?" "if" "border" "let" "workspace-splitter" "when" "nextmethod" "size")}
        {Lisp-Entry "on-activate" () 132 11 ("nextmethod" "toplevel-deactivate" "inactive" "eq?" "when" "kind")}
        {Lisp-Entry "setup-workspace-splitter" () 143 11 ("new-workspace-splitter" "workspace-splitter" "set!")}
        {Lisp-Entry "new-workspace-splitter" () 147 29 ("zoom" "state:" "self" "parent:" "Workspace-Splitter" "new")}
        {Lisp-Entry "stage-window" () 156 26 ("get-stage" "workspace-splitter" "when")}
        {Lisp-Entry "stage-border-class" () 161 26 ("Stage-Border")}
        {Lisp-Entry "stage-class" () 165 26 ("Stage")}
        {Lisp-Entry "new-root" () 174 11 ("Toplevel-Root" "new")}
        {Lisp-Entry "get-workspace-splitter" () 183 18 ("workspace-splitter")}
        {Lisp-Entry "focus-gain" () 195 11 ("processed" "reactivate-focus")}
        {Lisp-Entry "on-close" () 205 11 ("processed" "exit-process" "get-process" "stop-loop" "evt")}
        {Lisp-Entry "on-activate-app" () 214 11 ("processed" "activate" "root" "restore-minimized" "deactivate" "0" "=" "if" "get-application" "appl" "let" "Cancel-Signal" "catch" "status")}
        {Lisp-Entry "show" () 224 11 ("update-window" "workspace-installed" "show-undisplayed-message" "nextmethod" "child" "apply-preferences" "get-active" "active" "when" "false" "error?:" "workspaces" "get-preferences" "pref" "get-application" "appl" "let" "true" "set-visible-flag")}
        {Lisp-Entry "setting-change" () 242 11 ("update-bounds" "fullscreen?" "unless" "SPI_SETWORKAREA" "ecase" "wparam")}
        {Lisp-Entry "get-fullscreen?" () 254 18 ("fullscreen?")}
        {Lisp-Entry "set-fullscreen?" () 258 18 ("update-bounds" "set!" "fullscreen?" "/=" "when" "value")}
        {Lisp-Entry "update-bounds" () 264 18 ("8" "+" "4" "else" "-" "new" "rect-position" "rect-size" "get-work-area" "rect" "set-size" "0" "Point" "set-position" "when" "get-size" "size" "get-desktop" "desktop" "let*" "caption?" "not" "fullscreen?" "or" "cond" "caption-height" "root" "get-maximized?" "maximized?" "get-workspace-splitter" "splitter" "let" "dynamic" "function" "with-locked-update")}
        {Lisp-Entry "get-caption-base" () 300 18 ("caption-base")}
        {Lisp-Entry "set-caption-base" () 304 18 ("invalidate-title" "caption-base" "set!" "value")}
        {Lisp-Entry "get-caption?" () 314 18 ("caption?")}
        {Lisp-Entry "set-caption?" () 318 18 ("update-bounds" "set!" "caption?" "/=" "when" "value")}
        {Lisp-Entry "get-caption" () 324 18 ("caption")}
        {Lisp-Entry "set-caption" () 328 18 ("invalidate-title" "caption" "set!" "value")}
        {Lisp-Entry "refresh-caption" () 333 18 ("invalidate-title" "get-window-title" "if" "caption" "set!" "current-frame" "frame" "let")}
        {Lisp-Entry "invalidate-title" () 344 11 ("invalidate-caption" "root" "set-title" "effective-title" "title" "let")}
        {Lisp-Entry "effective-title" () 351 29 ("localize" "format" "caption-base" "maximized?" "caption" "not" "or" "if")}
        {Lisp-Entry "maximize" () 362 18 ("invalidate-title" "true" "maximized?" "set!")}
        {Lisp-Entry "restore" () 367 18 ("invalidate-title" "false" "maximized?" "set!")}
        {Lisp-Entry "get-palettes" () 377 18 ("children" "get-visible?" "Palette" "is?" "and" "window" "dynamic" "function" "collect-if")}
        {Lisp-Entry "insert-menus" () 389 18 ("menu-widths" "menu")}
        {Lisp-Entry "set-status-text" () 393 18 ("user-message" "text")}}}})
"Toplevel-Loop"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "loop" "Toplevel-Loop.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.loop.Toplevel-Loop" () 37 9 ("jazz")
      {Lisp-Entry "Toplevel-Loop" () 44 7 ("Break-Loop")
        {Lisp-Entry "toplevel-loop" () 47 18 ("get-process" "call-start-loop" "Stop-Signal" "Cancel-Signal" "Toplevel-Signal" "true" "while" "get-status" "exit" "signal" "Exit-Signal" "catch")}}}})
"Toplevel-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Toplevel-Root.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Toplevel-Root" () 37 9 ("jazz")
      {Lisp-Entry "Toplevel-Root" () 51 7 ("on-restore" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "type:" "restore" "name:" "Frame-Root")
        {Lisp-Entry "minimized?" () 54 8 ("false")}
        {Lisp-Entry "on-minimize" () 67 11 ("minimize" "evt")}
        {Lisp-Entry "on-maximize" () 71 11 ("maximize" "evt")}
        {Lisp-Entry "on-restore" () 75 11 ("restore" "evt")}
        {Lisp-Entry "set-state" () 84 18 ("restore" "restored" "minimize" "minimized" "maximize" "maximized" "case" "state")}
        {Lisp-Entry "caption-rect" () 96 11 ("+" "get-width" "-" "Rect" "new" "height" "4" "0" "maximized?" "if" "border" "let")}
        {Lisp-Entry "minimize-rect" () 102 11 ("+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "maximize-rect" () 106 11 ("+" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "close-rect" () 110 11 ("+" "0" "-" "Rect" "new" "right" "top")}
        {Lisp-Entry "maximize" () 119 11 ("player" "update-bounds" "nextmethod" "dynamic" "function" "with-locked-update")}
        {Lisp-Entry "toggle-minimized" () 131 18 ("minimize" "restore-minimized" "minimized?" "if")}
        {Lisp-Entry "minimize" () 137 18 ("true" "set!" "player" "minimize" "minimized?" "unless")}
        {Lisp-Entry "restore-minimized" () 143 18 ("false" "set!" "0" "Point" "player" "set-position" "minimized?" "when")}
        {Lisp-Entry "restore" () 154 11 ("player" "update-bounds" "nextmethod" "dynamic" "function" "with-locked-update")}
        {Lisp-Entry "layout-buttons" () 166 11 ("maximize-rect" "restore" "locate" "set-rect" "get-right" "-" "right" "get-bounds" "bounds" "top" "buttons-border" "border" "let*" "nextmethod")}
        {Lisp-Entry "buttons-border" () 175 11 ("4" "0" "maximized?" "if")}
        {Lisp-Entry "invalidate-caption" () 184 18 ("caption-rect" "invalidate-rect")}
        {Lisp-Entry "update-buttons" () 188 11 ("close" "restore" "maximized?" "not" "and" "maximize" "minimize" "locate" "set-visible?" "caption-visible?" "visible?" "let")}
        {Lisp-Entry "caption-icon" () 201 11 ("process-icon" "get-process" "process" "let")}
        {Lisp-Entry "caption-title" () 206 11 ("get-window-title" "get-toplevel" "toplevel" "let")}
        {Lisp-Entry "caption-font" () 211 11 ("Label-Bold" "name:" "Font")}
        {Lisp-Entry "caption-focused?" () 215 11 ("get-active?" "get-application" "appl" "let")}
        {Lisp-Entry "caption-visible?" () 220 11 ("get-fullscreen?" "get-caption?" "and" "player" "not" "or")}
        {Lisp-Entry "icon-offset" () 230 11 ("3" "2" "Point")}
        {Lisp-Entry "title-offset" () 234 11 ("5" "Point")}
        {Lisp-Entry "moveable?" () 243 11 ("get-maximized?" "not")}
        {Lisp-Entry "toggle-maximized" () 247 11 ("maximized?" "not" "set-maximized?")}
        {Lisp-Entry "send-host-to-back" () 251 11 ()}}}})
"Toplevel-Signal"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "signal" "Toplevel-Signal.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.signal.Toplevel-Signal" () 37 9 ("jazz")
      {Lisp-Entry "Toplevel-Signal" () 44 7 ("Signal")
        {Lisp-Entry "forwardable?" () 47 11 ("true")}}}})
"Transient"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Transient.fusion"} {Time 128360917440000000L}
    {Lisp-Entry "jazz.ui.window.Transient" () 37 9 ("jazz")
      {Lisp-Entry "Transient-Class" () 46 7 ("Popup-Class")
        {Lisp-Entry "window-class" () 49 11 ()}
        {Lisp-Entry "class-style" () 53 11 ("CS_SAVEBITS" "CS_DBLCLKS" "CS_OWNDC" "bit-or")}}
      {Lisp-Entry "Transient" () 57 7 ("Popup" "Transient-Class")
        {Lisp-Entry "window-ex-style" () 61 11 ("WS_EX_TOPMOST" "WS_EX_TOOLWINDOW" "bit-or" "rest")}}}})
"Tree-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Actions.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Actions" () 38 9 ("jazz")
      {Lisp-Entry "Tree-Actions" () 47 7 ("Return" ":alt" "on-properties" "properties" "Subtract" "on-collapse" "collapse" "Multiply" "on-expand-all" "expand-all" "Add" "on-expand" "expand" "Next" "on-next" "next" "Prior" "on-prior" "prior" "extend-end" "End" "on-end" "end" ":shift" "extend-home" "Home" "Shortcut" "shortcut:" "extend?:" "on-home" ":focus" "Event-Handler" "action-handler:" "home" "name:" "Actions")}}})
"Tree-Cell"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Cell.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Cell" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Cell" () 45 7 ("Object")
        {Lisp-Entry "background" () 48 18 ()}
        {Lisp-Entry "frame-color" () 49 18 ()}
        {Lisp-Entry "initialize" () 52 11 ("frame-color~self" "background~self" "set!" "nextmethod" "frame-color" "frame-color:" "background" "background:")}
        {Lisp-Entry "print" () 58 11 ("frame-color" "background" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-background" () 69 18 ("background")}
        {Lisp-Entry "set-background" () 73 18 ("background" "set!" "value")}
        {Lisp-Entry "get-frame-color" () 77 18 ("frame-color")}
        {Lisp-Entry "set-frame-color" () 81 18 ("frame-color" "set!" "color")}}}})
"Tree-Cell-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Cell-View.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Cell-View" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Cell-View" () 46 7 ("fill" "layout-type:" "Layout-View")
        {Lisp-Entry "draw-preserved?" () 49 12 ("set-draw-preserved?" "get-draw-preserved?" "false")}
        {Lisp-Entry "preserved-data" () 50 12 ("set-preserved-data" "get-preserved-data")}
        {Lisp-Entry "edition-end-proc" () 51 12 ("set-edition-end-proc" "get-edition-end-proc")}
        {Lisp-Entry "get-draw-preserved?" () 63 18 ("draw-preserved?")}
        {Lisp-Entry "set-draw-preserved?" () 67 18 ("draw-preserved?" "set!" "value")}
        {Lisp-Entry "get-preserved-data" () 71 18 ("preserved-data")}
        {Lisp-Entry "set-preserved-data" () 75 18 ("preserved-data" "set!" "value")}
        {Lisp-Entry "get-edition-end-proc" () 79 18 ("edition-end-proc")}
        {Lisp-Entry "set-edition-end-proc" () 83 18 ("edition-end-proc" "set!" "value")}
        {Lisp-Entry "get-editor" () 92 18 ("children" "car")}
        {Lisp-Entry "draw" () 101 11 ("lv" "lh" "update" "context" "dc")}}}})
"Tree-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Column" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Column" () 46 7 ("Component")
        {Lisp-Entry "title" () 49 22 ("set-title" "get-title")}
        {Lisp-Entry "width" () 50 22 ("set-width" "get-width" "0")}
        {Lisp-Entry "background" () 51 22 ("set-background" "get-background")}
        {Lisp-Entry "justification" () 52 22 ("set-justification" "get-justification" "head")}
        {Lisp-Entry "down?" () 55 18 ("false")}
        {Lisp-Entry "title-vertical-offset" () 56 18 ("2")}
        {Lisp-Entry "print" () 59 11 ("width" "title" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-title" () 72 18 ("title")}
        {Lisp-Entry "set-title" () 76 18 ("self" "invalidate-column-header" "get-header" "header" "let" "parent" "get-player" "when" "title" "set!" "value")}
        {Lisp-Entry "get-width" () 84 18 ("0" "width" "get-visible?" "if")}
        {Lisp-Entry "set-width" () 88 18 ("invalidate-view" "parent" "invalidate-columns" "width" "set!" "value")}
        {Lisp-Entry "get-background" () 94 18 ("background")}
        {Lisp-Entry "set-background" () 98 18 ("parent" "invalidate-view" "background" "set!" "value")}
        {Lisp-Entry "get-justification" () 103 18 ("justification")}
        {Lisp-Entry "set-justification" () 107 18 ("parent" "invalidate-view" "justification" "set!" "just")}
        {Lisp-Entry "set-visible?" () 112 18 ("invalidate-view" "parent" "invalidate-columns" "nextmethod" "flag")}
        {Lisp-Entry "set-title-vertical-offset" () 118 18 ("title-vertical-offset" "set!" "offset")}
        {Lisp-Entry "new-empty-cell" () 127 26 ()}
        {Lisp-Entry "find-part" () 136 26 ("content" "pos" "cell")}
        {Lisp-Entry "content-rect" () 145 29 ("0" "Rect" "new" "get-level" "content-h" "h" "let" "height" "width" "cell" "row")}
        {Lisp-Entry "content-h" () 150 29 ("0" "level")}
        {Lisp-Entry "text-h" () 154 29 ("0" "level")}
        {Lisp-Entry "sort-value" () 163 29 ("get-sort-value" "cell" "row")}
        {Lisp-Entry "get-header-tooltip" () 172 26 ("self" "parent" "get-column-tooltip")}
        {Lisp-Entry "get-cell-tooltip" () 176 26 ("cell")}
        {Lisp-Entry "header-down" () 185 26 ("self" "parent" "get-header" "invalidate-column-header" "true" "down?" "set!" "pos")}
        {Lisp-Entry "header-move" () 190 26 ("pos")}
        {Lisp-Entry "header-up" () 194 26 ("header-click" "self" "parent" "get-header" "invalidate-column-header" "false" "down?" "set!" "pos")}
        {Lisp-Entry "header-double-click" () 200 26 ("header-down" "pos")}
        {Lisp-Entry "mouse-down" () 204 26 ("complete-mouse-down" "parent" "acquire-focus" "control?" "shift?" "pos" "cell")}
        {Lisp-Entry "complete-mouse-down" () 209 26 ("parent" "process-selection" "control?" "shift?" "pos" "cell")}
        {Lisp-Entry "drag-move" () 213 26 ("pos" "cell")}
        {Lisp-Entry "drag-up" () 217 26 ("pos" "cell")}
        {Lisp-Entry "double-click" () 221 26 ("pos" "cell")}
        {Lisp-Entry "context-menu" () 225 26 ("parent" "call-context-menu" "pos" "cell")}
        {Lisp-Entry "layout-cell" () 234 26 ("Dimension" "set-size" "Point" "new" "set-position" "View" "is?" "when" "height" "width" "v" "h" "cell" "row")}
        {Lisp-Entry "Text-Color" () 245 14 ("Black" "name:" "Color")}
        {Lisp-Entry "paint-cell" () 249 18 ("draw-cell" "dynamic" "function" "parent" "with-transform" ":selected?" "getf" "selected?" "let" "sc?" "sc" "sv" "sh" "cell" "row" "height" "width" "v" "h" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-cell" () 256 26 ("0" "draw-at" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "draw-at" () 260 26 ("draw-background" "height" "width" "v" "h" "cell" "row" "context" "dc")}
        {Lisp-Entry "draw-background" () 264 26 ("frame-rect" "get-frame-color" "frame-color" "Tree-Cell" "is?" "when" "fill-rect" "background-color" "color" "let" "0" "Rect" "new" "rect" "with" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "background-color" () 274 11 ("White" "name:" "Color" "get-cell-background" "get-background" "Tree-Cell" "is?" "essay" "either" "parent" "selection-color" "cell-selected?" "and" "if" ":selected?" "getf" "selected?" "let" "context" "cell")}
        {Lisp-Entry "cell-selected?" () 283 21 ("true" "row" "0" "node" "get-selection" "get-col" "get-row" "=" "and" "dynamic" "function" "some?" "self" "column-rank" "col-rank" ":row-rank" "getf" "row-rank" "let" "cell" "parent" "get-selection-mode" "case" "context")}
        {Lisp-Entry "draw-header" () 296 26 ("down?" "title" "localize" "draw-header-at" "flat?" "spaced?" "sorted" "height" "width" "v" "h" "context" "dc")}
        {Lisp-Entry "draw-header-at" () 300 11 ("draw-raised-button" "draw-sunken-button" "if" "flat?" "spaced?" "sorted" "down?" "title" "height" "width" "v" "h" "dc")}
        {Lisp-Entry "draw-raised-button" () 306 11 ("draw-sorted" "header-title-h" "draw-text" "Black" "name:" "Color" "set-text-color" "parent" "header-color" "background" "either" "fill-rect" "rect" "bottom" "right" "outer:" "rectangle" "left" "top" "edges:" "raised" "inner:" "draw-edge" "smaller" "0" "1" "expand-rect" "inner" "+" "Rect" "new" "outer" "with" "if" "thick" "let" "flat?" "spaced?" "sorted" "title" "height" "width" "v" "h" "dc")}
        {Lisp-Entry "header-title-h" () 325 29 ("justification" "4" "-" "justify-title" "2" "+" "title" "width" "dc")}
        {Lisp-Entry "justify-title" () 329 21 ("get-width" "justify" "get-text-extent" "extent" "let" "justification" "title" "width" "dc")}
        {Lisp-Entry "draw-sorted" () 334 11 ("down" "descending" "up" "draw-arrow-tip" "ascending" "case" "4" "size" "6" "+" "get-text-width" "width" "let*" "Dark" "name:" "Pen" "set-pen" "when" "sorted" "title" "v" "h" "dc")}
        {Lisp-Entry "draw-sunken-button" () 346 11 ("draw-sorted" "2" "1" "header-title-h" "draw-text" "Black" "set-text-color" "parent" "header-color" "background" "either" "fill-rect" "Color" "frame-rect" "Dark" "name:" "Pen" "set-pen" "inflate-rect" "inner" "+" "Rect" "new" "outer" "with" "flat?" "spaced?" "sorted" "title" "height" "width" "v" "h" "dc")}
        {Lisp-Entry "get-class-image" () 363 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-debugged" () 372 26 ("values" "pos" "cell")}}}})
"Tree-Comparer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "compare" "Tree-Comparer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.groupware.compare.Tree-Comparer" () 38 9 ("jazz")
      {Lisp-Entry "Tree-Comparer" () 46 7 ("Object")
        {Lisp-Entry "compare-nodes" () 49 18 ("scanned-values" "car" "values" "create-item" "compare-node-contents" "entry" "false" "list" "has-differences?" "let*" "feedback" "feedback:" "check-algorithm" "check-algorithm:" "ignored-extensions" "ignored-extensions:" "ignored-leaves" "ignored-leaves:" "ignored-nodes" "ignored-nodes:" "right-content" "right-content:" "true" "left-content" "left-content:" "right-node" "left-node" "parent")}
        {Lisp-Entry "compare-node-contents" () 55 11 ("get-output" "set-children" "compare-nodes/leaves" "compare-leaf-values" "true" "leaf" "l" "compare-node-contents" "compare-items" "dynamic" "function" "n" "leaves2" "leaves" "leaves1" "nodes2" "nodes" "collect-items" "nodes1" "node" "new-entry" "entry" "List-Factory" "new" "fact" "let*" "node-feedback" "has-differences?" "feedback" "check-algorithm" "ignored-extensions" "ignored-leaves" "ignored-nodes" "content2" "node2" "content1" "node1" "parent")}
        {Lisp-Entry "compare-nodes/leaves" () 70 29 ("leaves" "nodes")}
        {Lisp-Entry "compare-leaf-values" () 75 29 ("leaf" "new-entry" "true" "set-car!" "different?" "and" "when" "value2" "get-value" "value1" "let" "leaf-feedback" "has-differences?" "feedback" "check-algorithm" "ignored-extensions" "ignored-leaves" "ignored-nodes" "content2" "leaf2" "content1" "leaf1" "parent")}
        {Lisp-Entry "compare-items" () 84 11 ("item-name" "key:" "content-find" "result" "let" ":same" ":right" "get-value" "leaf" "=" "new-entry" "put" "true" "set-car!" ":left" "case" "or" "when" "right" "left" "key" "what" "dynamic" "function" "merge-ordered" "has-differences?" "fact" "feedback" "check-algorithm" "proc" "ignored-extensions" "ignored-leaves" "ignored-nodes" "content2" "items2" "content1" "items1" "kind" "parent")}
        {Lisp-Entry "content-find" () 97 11 ("equal?" "test:" "key:" "item-name" "find" "cdr" "true" "eq?" "if" "content" "item")}
        {Lisp-Entry "node-feedback" () 108 29 ("get-moniker" "feedback" "node2" "node1")}
        {Lisp-Entry "leaf-feedback" () 112 29 ("feedback" "leaf2" "leaf1")}
        {Lisp-Entry "make-item" () 121 11 ("Compare-Item" "new" "value" "name" "moniker")}
        {Lisp-Entry "item-name" () 125 11 ("get-name" "item")}
        {Lisp-Entry "create-item" () 129 29 ("moniker")}
        {Lisp-Entry "get-item-type" () 133 29 ("item")}
        {Lisp-Entry "get-item-content" () 137 29 ("kind" "item")}
        {Lisp-Entry "different?" () 141 29 ("check-algorithm" "leaf2" "leaf1")}
        {Lisp-Entry "Not-Ignored-Leaves" () 151 14 ()}
        {Lisp-Entry "new-entry" () 155 29 ("get-moniker" "essay" "Compare-Entry" "new" "right-value" "right" "left-value" "left" "kind" "parent")}
        {Lisp-Entry "collect-items" () 159 11 ("item-name" "key:" "get-item-content" "" "sort" "collect-item?" "item" "dynamic" "function" "collect-if" "kind" "ignored-extensions" "ignored-leaves" "ignored-nodes" "content" "node")}
        {Lisp-Entry "collect-item?" () 165 29 ("get-moniker" "get-extension" "Not-Ignored-Leaves" "null?" "/=" "key:" "neq?" "member?" "not" "true" "eq?" "or" "and" "else" "leaf" "node" "case" "ignored" "get-item-type" "type" "item-name" "name" "let*" "ignored-extensions" "ignored-leaves" "ignored-nodes" "content" "item")}
        {Lisp-Entry "scanned-values" () 179 29 ("true")}}}})
"Tree-Criteria"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Criteria.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Criteria" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Criteria" () 45 7 ("View-Criteria")
        {Lisp-Entry "selected-data" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "properties" () 51 14 (":selected-data" ":data" "class:" "target:" "name:")}
        {Lisp-Entry "accepts?" () 60 11 ("check-selected-data?" "selected-data" "null?" "or" "nextmethod" "and" "view")}
        {Lisp-Entry "check-selected-data?" () 65 11 ("is?" "component" "dynamic" "function" "every?" "selected-data" "autoload" "class" "get-selected-data" "data" "let" "view")}}}})
"Tree-Drag-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Drag-Source.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Drag-Source" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Drag-Source" () 45 7 ("Drag-Source")
        {Lisp-Entry "row" () 48 8 ()}
        {Lisp-Entry "col" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("col~self" "row~self" "set!" "nextmethod" "apply" "others" "col" "row" "bind-keywords" "rest")}
        {Lisp-Entry "get-row" () 64 18 ("row")}
        {Lisp-Entry "get-col" () 68 18 ("col")}
        {Lisp-Entry "get-cell" () 72 18 ("col" "row" "view" "row-rank" "Cell" "new")}}}})
"Tree-Drop-Target"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Drop-Target.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Drop-Target" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Drop-Target" () 45 7 ("Drop-Target")
        {Lisp-Entry "row" () 48 8 ()}
        {Lisp-Entry "col" () 49 8 ()}
        {Lisp-Entry "quarter" () 50 8 ()}
        {Lisp-Entry "part" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("part~self" "quarter~self" "col~self" "row~self" "set!" "nextmethod" "apply" "others" "part" "quarter" "col" "row" "bind-keywords" "rest")}
        {Lisp-Entry "print" () 63 11 ("part" "quarter" "col" "row" "view" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-row" () 74 18 ("row")}
        {Lisp-Entry "get-col" () 78 18 ("col")}
        {Lisp-Entry "get-cell" () 82 18 ("col" "row" "view" "row-rank" "Cell" "new")}
        {Lisp-Entry "get-quarter" () 86 18 ("quarter")}
        {Lisp-Entry "get-part" () 90 18 ("part")}}}})
"Tree-Embedded-Presentation-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Embedded-Presentation-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Embedded-Presentation-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Embedded-Presentation-Text-View" () 46 7 ("Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Plain-Text-View")
        {Lisp-Entry "tree" () 49 8 ()}
        {Lisp-Entry "set-tree" () 61 18 ("tree" "set!" "t")}
        {Lisp-Entry "get-tree" () 70 11 ("tree")}
        {Lisp-Entry "get-cell" () 74 11 ("get-tree" "get-edited-cell")}
        {Lisp-Entry "get-cell-row" () 78 11 ("get-cell" "get-row")}
        {Lisp-Entry "get-cell-col" () 82 11 ("get-cell" "get-col")}
        {Lisp-Entry "return-press" () 91 11 ("end-edition" "key")}
        {Lisp-Entry "tab-press" () 95 11 ("modifiers" "key")}
        {Lisp-Entry "up-arrow-press" () 100 11 ("get-cell-col" "get-cell-row" "Cell" "new" "get-tree" "select-up" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 104 11 ("get-cell-col" "get-cell-row" "Cell" "new" "get-tree" "select-down" "modifiers")}
        {Lisp-Entry "end-edition" () 108 11 ("get-tree" "end-edition" "player" "when")}
        {Lisp-Entry "focus-validate" () 118 11 ("false" "select-all" "message-box" "true" "end-edition" "begin" "empty-string?" "not" "if" "get-string-content" "text" "let" "view")}}}})
"Tree-Embedded-Search-Text-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Embedded-Search-Text-Actions.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Embedded-Search-Text-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Embedded-Search-Text-Actions" () 46 7 ("Return" ":control" "Shortcut" "shortcut:" "on-end-edition" ":focus" "Event-Handler" "action-handler:" "end-edition" "name:" "Actions")}}})
"Tree-Embedded-Search-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Embedded-Search-Text-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Embedded-Search-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Embedded-Search-Text-View" () 46 7 ("IDE-Text-View")
        {Lisp-Entry "tree" () 49 8 ()}
        {Lisp-Entry "set-tree" () 57 18 ("tree" "set!" "t")}
        {Lisp-Entry "get-tree" () 66 11 ("tree")}
        {Lisp-Entry "get-cell" () 70 11 ("get-tree" "get-edited-cell")}
        {Lisp-Entry "get-cell-values" () 74 11 ("get-col" "get-row" "values" "get-cell" "cell" "let")}
        {Lisp-Entry "focus-actions" () 84 11 ("nextmethod" "tree-embedded-search-text" "find-actions" "cons")}
        {Lisp-Entry "focus-lose" () 94 11 ("end-edition" "nextmethod" "view" "window")}
        {Lisp-Entry "return-press" () 99 11 ("on-search" "bell" "get-find-targets" "null?" "if" "get-guest" "get-search" "search" "end-edition" "get-frame" "frame" "let" "evt")}
        {Lisp-Entry "on-end-edition" () 108 11 ("end-edition" "key")}
        {Lisp-Entry "tab-press" () 112 11 ("end-edition" "select-cell" "when" "Cell" "new" "cell" "+" "modulo" "else" "cond" "row-direction" "1" "-" "max-col" "navigate-tab" "0" "=" "get-cell-values" "col" "row" "receive" "get-visible-count" "height" "get-columns-count" "width" "neq?" "to-navigable?" "navigated-view" "to-view" "find-tab-manager" "tab-manager" "get-tree" "tree" "let*" "end-completion" "not" "has-completion?" "and" "if" "shift-key?" "shift?" "let" "modifiers" "key")}
        {Lisp-Entry "up-arrow-press" () 138 11 ("get-cell" "get-tree" "select-up" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 142 11 ("false" "get-cell" "get-tree" "select-down" "modifiers")}
        {Lisp-Entry "left-arrow-press" () 146 11 ("nextmethod" "get-cell" "get-tree" "select-left" "control-key?" "if" "modifiers")}
        {Lisp-Entry "right-arrow-press" () 152 11 ("nextmethod" "get-cell" "get-tree" "select-right" "control-key?" "if" "modifiers")}
        {Lisp-Entry "end-edition" () 158 11 ("get-tree" "end-edition" "player" "when")}}}})
"Tree-Header"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Header.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Header" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Header" () 52 7 ("Header-View")
        {Lisp-Entry "resizing?" () 55 18 ("false")}
        {Lisp-Entry "resize-last-h" () 56 18 ()}
        {Lisp-Entry "resized-column" () 57 18 ()}
        {Lisp-Entry "resized-column-ref" () 58 18 ("0")}
        {Lisp-Entry "finish" () 61 11 ("get-scroll-client" "client" "set!" "child" "content" "let" "invalidate-layout" "nextmethod" "rest")}
        {Lisp-Entry "get-column" () 73 18 ("get-columns" "element" "n")}
        {Lisp-Entry "column-rank" () 77 18 ("position" "return:" "get-columns" "find" "column")}
        {Lisp-Entry "borders-left" () 86 11 ("car" "borders")}
        {Lisp-Entry "borders-right" () 90 11 ("cdr" "borders")}
        {Lisp-Entry "get-borders" () 94 18 ("get-columns-borders" "element" "col")}
        {Lisp-Entry "column-width" () 98 18 ("-" "get-borders" "right" "left" "bind" "col")}
        {Lisp-Entry "get-columns" () 108 11 ("client" "get-columns")}
        {Lisp-Entry "get-columns-count" () 112 11 ("client" "get-columns-count")}
        {Lisp-Entry "get-columns-borders" () 116 11 ("client" "get-columns-borders")}
        {Lisp-Entry "invalidate-columns" () 120 11 ("client" "invalidate-columns")}
        {Lisp-Entry "invalidate-borders" () 124 11 ("client" "invalidate-borders")}
        {Lisp-Entry "layout-column" () 128 11 ("client" "layout-column" "column")}
        {Lisp-Entry "end-resizing" () 132 11 ("invalidate-view" "layout-scrollee" "client" "when")}
        {Lisp-Entry "size-change" () 143 11 ("layout-scrollee" "client" "when" "nextmethod" "size")}
        {Lisp-Entry "set-scroller" () 154 11 ("client" "set-scroller" "view")}
        {Lisp-Entry "get-scroll-client" () 158 11 ("client" "get-scroll-client")}
        {Lisp-Entry "get-hscroll-amount" () 162 11 ("0" "get-position" "get-h" "client" "essay" "either")}
        {Lisp-Entry "on-vscroll" () 167 11 ("on-vscroll" "client" "when" "orientation" "thumb-pos" "code")}
        {Lisp-Entry "on-hscroll" () 173 11 ("on-hscroll" "client" "when" "orientation" "thumb-pos" "code")}
        {Lisp-Entry "draw" () 183 11 ("get-columns" "+" "increase!" "draw-header" "descending" "ascending" "=" "and" "if" "sorted" "get-width" "width" "column" "dynamic" "function" "for-each" "rank" "flat-look?" "flat?" "0" "/=" "spaced?" "get-sort-ascending?" "sort-ascending?" "get-sorted-column" "sorted-column" "client" "get-column-spacing" "cs" "get-hscroll-amount" "h" "let*" "Dark" "name:" "Color" "fill-rect" "get-top" "" "not" "or" "when" "get-header-height" "height" "let" "get-update-rect" "update-rect" "with" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "cursor-update" () 209 11 (":arrow" ":west-east" "set-cursor" "get-hscroll-amount" "get-h" "-" "resized-col" "resizing?" "or" "if" "pos")}
        {Lisp-Entry "get-tooltip-context" () 220 11 ("bounds:" "text:" "self" "view:" "Tooltip-Context" "new" "0" "header-rect" "offset-rect" "rect" "get-header-tooltip" "text" "get-column" "column" "let" "when" "h->col" "col" "get-h" "-" "h" "get-hscroll-amount" "hscrolled" "let*" "client")}
        {Lisp-Entry "mouse-down" () 240 11 ("resized-column-ref" "resized-column" "resize-last-h" "true" "resizing?" "set!" "header-coordinates" "header-down" "get-column" "column" "when" "h->col" "not" "if" "resized-col" "col" "get-v" "v" "get-hscroll-amount" "get-h" "-" "h" "let" "acquire-capture" "client")}
        {Lisp-Entry "drag-move" () 256 11 ("update-view" "false" "erase?:" "get-height" "2" "Rect" "new" "scroll-view" "layout-column" "invalidate-borders" "invalidate-columns" "set-width" ">=" "resized-column" "get-width" "new-width" "set!" "0" "/=" "resized-column-ref" "get-borders" "borders-right" "+" "left" "resize-last-h" "delta" "header-coordinates" "header-move" "get-column" "column" "when" "h->col" "col" "resizing?" "not" "if" "get-v" "v" "get-hscroll-amount" "get-h" "-" "h" "let" "client")}
        {Lisp-Entry "drag-up" () 278 11 ("release-capture" "end-resizing" "get-client" "set-filled-column" "resized-column" "false" "set!" "header-coordinates" "header-up" "get-column" "column" "when" "h->col" "col" "resizing?" "not" "if" "get-v" "v" "get-hscroll-amount" "get-h" "-" "h" "let" "rest" "client")}
        {Lisp-Entry "double-click" () 293 11 ("header-coordinates" "header-double-click" "get-column" "column" "when" "h->col" "col" "get-v" "v" "get-hscroll-amount" "get-h" "-" "h" "let" "client")}
        {Lisp-Entry "header-coordinates" () 302 11 ("header-position" "-" "pos" "col")}
        {Lisp-Entry "resized-col" () 306 11 ("4" "near?" "when" "right" "left" "bind" "get-columns-count" "below" "0" "from" "col" "get-columns-borders" "in" "borders" "for" "loop" "return" "lambda" "call/ec" "h")}
        {Lisp-Entry "invalidate-column-header" () 322 18 ("invalidate-rect" "header-rect" "rect" "let" "get-finished?" "when" "column")}
        {Lisp-Entry "header-rect" () 328 18 ("get-height" "0" "Rect" "new" "column-rank" "get-borders" "right" "left" "bind" "column")}
        {Lisp-Entry "header-position" () 338 11 ("0" "get-borders" "borders-left" "Point" "new" "col")}
        {Lisp-Entry "h->col" () 342 11 ("" ">=" "and" "when" "right" "left" "bind" "get-columns-count" "below" "0" "from" "n" "get-columns-borders" "in" "borders" "for" "loop" "return" "lambda" "call/ec" "h")}
        {Lisp-Entry "get-class-image" () 359 16 ("Bitmap-Resource")}}}})
"Tree-Highlight"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Highlight.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Highlight" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Highlight" () 45 7 ("Object")
        {Lisp-Entry "row" () 48 8 ("generate")}
        {Lisp-Entry "col" () 49 8 ("generate")}
        {Lisp-Entry "insert" () 50 8 ("generate")}
        {Lisp-Entry "outer-color" () 51 8 ("generate")}
        {Lisp-Entry "inner-color" () 52 8 ("generate")}
        {Lisp-Entry "initialize" () 55 11 ("inner-color~self" "outer-color~self" "insert~self" "col~self" "row~self" "set!" "nextmethod" "inner-color" "inner-color:" "outer-color" "outer-color:" "insert" "insert:" "col" "row")}
        {Lisp-Entry "compare-object" () 64 11 (":not-equal" "else" ":equal" "get-insert" "insert" "get-col" "col" "=" "get-row" "row" "eq?" "and" ":incompatible" "Tree-Highlight" "is-not?" "cond" "target")}}}})
"Tree-Image"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Image.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Image" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Image" () 45 7 ("Tree-Label")
        {Lisp-Entry "image" () 48 18 ()}
        {Lisp-Entry "initialize" () 51 11 ("image~self" "set!" "nextmethod" "apply" "others" "image" "bind-keywords" "rest")}
        {Lisp-Entry "print" () 57 11 ("image" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-image" () 68 18 ("image")}
        {Lisp-Entry "set-image" () 72 18 ("image" "set!" "value")}
        {Lisp-Entry "get-sort-value" () 81 11 ("image")}}}})
"Tree-Image-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Image-Column.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Image-Column" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Image-Column" () 45 7 ("Tree-Label-Column")
        {Lisp-Entry "draw-cell" () 53 11 ("draw-title" "draw-image" "1" "2" "-" "quotient" "+" "0" "if" "h" "get-title" "title" "get-icons-cache" "icons" "get-application" "appl" "let*" "when" "get-image" "image" "let" "draw-background" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "title-h" () 66 11 ("title" "width" "dc")}
        {Lisp-Entry "sort-value" () 75 11 ("get-name" "null?" "if" "get-image" "image" "let" "get-title" "either" "cell" "row")}}}})
"Tree-Iterator"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "iterator" "Tree-Iterator.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.iterator.Tree-Iterator" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Iterator" () 44 7 ("Iterator")
        {Lisp-Entry "root" () 47 8 ()}
        {Lisp-Entry "spine" () 48 8 ()}
        {Lisp-Entry "current" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("iterate" "current" "list" "spine" "root" "set!" "nextmethod" "r")}
        {Lisp-Entry "get-next!" () 59 11 ()}
        {Lisp-Entry "leaf?" () 63 29 ("node")}
        {Lisp-Entry "iterate" () 67 29 ("node")}}}})
"Tree-Label"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Label.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Label" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Label" () 45 7 ("Tree-Cell")
        {Lisp-Entry "title" () 48 18 ()}
        {Lisp-Entry "font" () 49 18 ()}
        {Lisp-Entry "color" () 50 18 ()}
        {Lisp-Entry "initialize" () 53 11 ("color~self" "font~self" "set!" "set-title" "nextmethod" "apply" "others" "color" "font" "title" "bind-keywords" "rest")}
        {Lisp-Entry "print" () 61 11 ("title" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-title" () 72 18 ("title")}
        {Lisp-Entry "set-title" () 76 18 ("->string" "Locales" "is?" "if" "essay" "title" "set!" "value")}
        {Lisp-Entry "get-font" () 80 18 ("font")}
        {Lisp-Entry "set-font" () 84 18 ("font" "set!" "value")}
        {Lisp-Entry "get-color" () 88 18 ("color")}
        {Lisp-Entry "set-color" () 92 18 ("color" "set!" "c")}
        {Lisp-Entry "get-sort-value" () 101 11 ("title")}}}})
"Tree-Label-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Label-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Label-Column" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Label-Column" () 46 7 ("Tree-Column")
        {Lisp-Entry "padding" () 49 22 ("set-padding" "get-padding" "0")}
        {Lisp-Entry "new-empty-cell" () 57 11 ("title:" "Tree-Label" "new")}
        {Lisp-Entry "get-padding" () 66 18 ("padding")}
        {Lisp-Entry "set-padding" () 70 18 ("parent" "invalidate-view" "padding" "set!" "value")}
        {Lisp-Entry "get-cell-tooltip" () 80 11 ("get-title" "Tree-Label" "is?" "when" "cell")}
        {Lisp-Entry "Default-Color" () 90 14 ("Black" "name:" "Color")}
        {Lisp-Entry "draw-at" () 94 11 ("draw-title" "nextmethod" "height" "width" "v" "h" "cell" "row" "context" "dc")}
        {Lisp-Entry "draw-title" () 99 29 ("title-vertical-offset" "0" "else" "-" "tail" "padding" "1" "head" "justification" "case" "title-h" "+" "draw-text" "set-font" "when" "cell-color" "set-text-color" "get-color" "color" "get-font" "font" "get-title" "either" "localize" "title" "let" "height" "width" "v" "h" "cell" "row" "context" "dc")}
        {Lisp-Entry "title-h" () 109 29 ("justification" "justify-title" "title" "width" "dc")}
        {Lisp-Entry "cell-color" () 113 21 ("Default-Color" "parent" "selected-text-color" "if" "determine-color" "when" "either" "cell-selected?" ":selected?" "getf" "and" "selected?" "true" "enabled?" "let" "context" "color")}
        {Lisp-Entry "text-h" () 121 11 ("1" "level")}}}})
"Tree-Node"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Node.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Node" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Node" () 45 7 ("Tree-Label")
        {Lisp-Entry "image" () 48 18 ()}
        {Lisp-Entry "initialize" () 51 11 ("image~self" "set!" "break" "title:" "getf" "not" "when" "nextmethod" "apply" "others" "image" "bind-keywords" "rest")}
        {Lisp-Entry "get-image" () 65 18 ("image")}
        {Lisp-Entry "set-image" () 69 18 ("image" "set!" "img")}}}})
"Tree-Node-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Node-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Node-Column" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Node-Column" () 46 7 ("Tree-Label-Column")
        {Lisp-Entry "controls?" () 49 22 ("set-controls?" "get-controls?" "true")}
        {Lisp-Entry "toplevel-controls?" () 50 22 ("set-toplevel-controls?" "get-toplevel-controls?" "true")}
        {Lisp-Entry "display-images?" () 51 22 ("set-display-images?" "get-display-images?" "true")}
        {Lisp-Entry "image-offset" () 54 8 ("1")}
        {Lisp-Entry "get-controls?" () 62 18 ("controls?")}
        {Lisp-Entry "set-controls?" () 66 18 ("parent" "invalidate-view" "controls?" "set!" "flag")}
        {Lisp-Entry "get-toplevel-controls?" () 71 18 ("toplevel-controls?")}
        {Lisp-Entry "set-toplevel-controls?" () 75 18 ("parent" "invalidate-view" "toplevel-controls?" "set!" "flag")}
        {Lisp-Entry "get-display-images?" () 80 18 ("display-images?")}
        {Lisp-Entry "set-display-images?" () 84 18 ("parent" "invalidate-view" "display-images?" "set!" "flag")}
        {Lisp-Entry "set-image-offset" () 89 18 ("parent" "invalidate-view" "image-offset" "set!" "offset")}
        {Lisp-Entry "new-empty-cell" () 99 11 ("title:" "Tree-Node" "new")}
        {Lisp-Entry "complete-mouse-down" () 108 11 ("process-selection" "content" "expand/collapse" "control" "find-part" "case" "parent" "get-row" "row" "let" "control?" "shift?" "pos" "cell")}
        {Lisp-Entry "double-click" () 115 11 ("get-row" "parent" "expand/collapse" "pos" "cell")}
        {Lisp-Entry "find-part" () 124 11 ("content" "control" "" "4" "+" ">=" "toplevel-controls?" "controls?" "and" "if" "parent" "get-row" "get-level" "level-h" "base" "get-v" "v" "get-h" "h" "let" "pos" "cell")}
        {Lisp-Entry "row-text-left" () 138 21 ("1" "get-level" "text-h" "-" "row")}
        {Lisp-Entry "text-rect" () 142 21 ("4" "+" "0" "Rect" "new" "get-columns-count" "" "or" "if" "min" "get-width" "title-width" "text-extent" "extent" "with" "parent" "get-font" "either" "font" "2" "max" "1" "get-level" "text-h" "-" "h" "get-title" "localize" "title" "let*" "force-node?" "height" "width" "cell" "row")}
        {Lisp-Entry "control-rect" () 158 21 ("4" "+" "Rect" "new" "get-level" "control-h" "h" "let" "top" "row")}
        {Lisp-Entry "plus/minus-rect" () 163 21 ("5" "+" "Rect" "new" "get-level" "control-h" "h" "let" "top" "row")}
        {Lisp-Entry "image-rect" () 168 21 ("0" "+" "Rect" "new" "get-level" "image-h" "h" "let" "top" "row")}
        {Lisp-Entry "layout-cell" () 178 11 ("-" "Dimension" "set-size" "+" "Point" "new" "set-position" "get-level" "image-h" "offset" "let" "View" "is?" "when" "height" "width" "v" "h" "cell" "row")}
        {Lisp-Entry "Line-Color" () 190 14 ("Dark" "name:" "Color")}
        {Lisp-Entry "Alternate-Pen" () 193 14 ("Line-Color" "color:" "alternate" "style:" "Pen" "new")}
        {Lisp-Entry "draw-cell" () 197 11 ("0" "draw-title" "draw-image" "draw-control" "draw-level" "draw-background" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "draw-background" () 205 11 ("frame-rect" "true" "or" "get-frame-color" "frame-color" "selection-color" "get-left" "r" "when" "get-background" "background" "false" "text-rect" "cell-selected?" "and" "if" ":selected?" "getf" "selected?" "let" "White" "name:" "Color" "parent" "get-cell-background" "either" "fill-rect" "0" "Rect" "new" "rect" "with" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "draw-level" () 226 18 ("Black" "name:" "Pen" "true" "reversed?:" "end:" "start:" "Naturals" "new" "get-father" "set!" "horz-adjusted" "odd?" "and" "half-adjusted" "top-adjusted" "2" "/" "round" "half" "let*" "8" "+" "line" "1" "0" "even?" "adjust" "when" "/=" "if" "visible-sibling-follows?" "sf?" "level-h" "h" "n" "dynamic" "function" "for-each" "get-position" "get-v" "row-v" "get-level" "level" "let" "Alternate-Pen" "set-pen" "height" "width" "cell" "row" "dc")}
        {Lisp-Entry "draw-control" () 248 21 ("expanded" "get-state" "/=" "8" "6" "line" "Black" "Pen" "set-pen" "White" "name:" "Color" "fill-rect" "5" "parent" "get-background" "background" "Line-Color" "frame-rect" "4" "+" "Rect" "new" "rect" "with" "control-h" "h" "let" "toplevel-controls?" "not" "or" "controls?" "expandable?" "and" "when" "0" "=" "toplevel?" "get-level" "level" "let*" "height" "width" "cell" "row" "dc")}
        {Lisp-Entry "draw-image" () 265 11 ("0" "parent" "get-portfolio" "draw-image" "display-images?" "and" "when" "get-image" "image" "get-level" "image-h" "h" "let" "height" "width" "cell" "row" "context" "dc")}
        {Lisp-Entry "draw-title" () 272 11 ("title-vertical-offset" "draw-text" "set-font" "when" "get-color" "cell-color" "set-text-color" "get-font" "font" "get-level" "text-h" "get-title" "either" "localize" "title" "let" "height" "width" "v" "h" "cell" "row" "context" "dc")}
        {Lisp-Entry "level-h" () 282 11 ("toplevel-controls?" "0" "=" "or" "if" "parent" "get-indentation" "*" "-" "level")}
        {Lisp-Entry "control-h" () 287 11 ("level-h" "level")}
        {Lisp-Entry "image-h" () 291 18 ("image-offset" "display-images?" "toplevel-controls?" "0" "/=" "or" "if" "control-h" "+" "level")}
        {Lisp-Entry "content-h" () 295 11 ("0" "display-images?" "if" "image-h" "+" "level")}
        {Lisp-Entry "text-h" () 299 11 ("4" "3" "0" "display-images?" "if" "image-h" "+" "level")}
        {Lisp-Entry "get-debugged" () 308 11 ("find-part" "values" "pos" "cell")}}}})
"Tree-Path"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Path.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Path" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Path" () 45 7 ("Tree-Label")
        {Lisp-Entry "father-row" () 48 18 ()}
        {Lisp-Entry "initialize" () 51 11 ("update-path-title" "father-row~self" "set!" "nextmethod" "apply" "rest" "father-row")}
        {Lisp-Entry "get-father-row" () 62 18 ("father-row")}
        {Lisp-Entry "update-path-title" () 71 18 ("list" "join" "if" "set-title" "father-path" "get-title" "father-title" "get-path-child" "path-cell" "get-node-child" "title-cell" "let*" "0" "get-level" ">" "father-row" "when")}}}})
"Tree-Path-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Path-Column.fusion"} {Time 128366795440000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Path-Column" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Path-Column" () 45 7 ("Tree-Label-Column")}}})
"Tree-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Tree-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Tree-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Preferences" () 46 7 ("Bitmap-Resource" "icon:" "title:" "Preferences")
        {Lisp-Entry "sort-case-sensitive?" () 49 12 ("generate" "accessors" "false")}
        {Lisp-Entry "can-rename-component?" () 61 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 65 11 ("false")}
        {Lisp-Entry "can-move-component?" () 69 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 73 11 ("false")}
        {Lisp-Entry "get-categorized-properties" () 77 11 ("sort-case-sensitive?")}
        {Lisp-Entry "property-presentation" () 82 16 ("nextmethod" "else" "sort-case-sensitive?" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 88 11 ("nextmethod" "else" "Boolean-Row" "new" "sort-case-sensitive?" "field-name" "case" "property")}}}})
"Tree-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-Row" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Row" () 46 7 ("Outline-Row")
        {Lisp-Entry "user-data" () 49 22 ("set-user-data" "get-user-data")}
        {Lisp-Entry "node-width" () 52 18 ("generate")}
        {Lisp-Entry "print" () 55 11 ("children" "car" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "default-size" () 62 11 ("Dimension")}
        {Lisp-Entry "initialize" () 71 11 ("set-visible-flag" "set-finished?" "set-installed?" "user-data~self" "set-children" "row-height~self" "state~self" "level~self" "father~self" "parent~self" "set!" "nextmethod" "user-data" "user-data:" "true" "visible?" "visible?:" "children" "children:" "row-height" "row-height:" "collapsed" "state" "state:" "level" "level:" "father" "father:" "parent" "parent:")}
        {Lisp-Entry "get-tree" () 90 18 ("parent")}
        {Lisp-Entry "get-user-data" () 94 18 ("user-data")}
        {Lisp-Entry "set-user-data" () 98 18 ("user-data" "set!" "data")}
        {Lisp-Entry "set-children" () 107 11 ("add-child" "self" "set-parent" "View" "if" "child" "dynamic" "function" "for-each" "get-title" "localize" "parent" "get-font" "text-width" "node-width" "set!" "Tree-Node" "is?" "car" "node" "let" "not-null?" "when" "list")}
        {Lisp-Entry "replace-child" () 119 11 ("parent" "layout-scrollee" "insert!" "self" "begin" "remove!" "set!" "set-parent" "View" "is?" "if" "children" "element" "current" "let" "child" "rank")}
        {Lisp-Entry "get-node-child" () 132 18 ("children" "Tree-Node" "is?" "child" "dynamic" "function" "find-if")}
        {Lisp-Entry "get-path-child" () 138 18 ("children" "Tree-Path" "is?" "child" "dynamic" "function" "find-if")}
        {Lisp-Entry "flatten" () 149 18 ("sons" "flatten" "disconnect" "flatten-row?" "if" "son" "dynamic" "function" "for-each" "get-tree" "tree" "let" "root-row")}
        {Lisp-Entry "disconnect" () 158 18 ("0" "set-descendants-level" "position:" "change-father" "get-spine" "first" "son-rank" "position" "get-tree" "get-root-row" "root-row" "get-father-row" "essay" "father-row" "get-path-child" "path" "let*")}
        {Lisp-Entry "reconnect" () 167 18 ("change-father" "get-level" "1" "+" "set-descendants-level" "get-father-row" "father-row" "let")}
        {Lisp-Entry "disconnected?" () 173 26 ("father" "/=" "essay" "get-father-row" "father-row" "let")}
        {Lisp-Entry "get-father-row" () 178 26 ("get-father-row" "essay" "get-path-child" "path" "let")}
        {Lisp-Entry "auto-collapsable?" () 188 26 ("collapsable?")}
        {Lisp-Entry "layout" () 197 18 ("get-columns" "+" "increase!" "self" "layout-cell" "get-width" "width" "cell" "column" "dynamic" "function" "for-each" "get-effective-height" "height" "get-column-spacing" "cs" "0" "h" "children" "and" "when" "get-tree" "tree" "let")}
        {Lisp-Entry "get-effective-width" () 211 11 ("node-width")}
        {Lisp-Entry "context-menu" () 220 26 ("pos")}
        {Lisp-Entry "double-click" () 224 26 ("pos")}
        {Lisp-Entry "draw-children" () 233 11 ("children" "get-columns" "increase!" "get-v" "get-h" "paint-displayed" "get-position" "pos" "draw-control" "draw-level" "Tree-Node-Column" "get-preserved-data" "get-draw-preserved?" "Tree-Cell-View" "is?" "and" "self" "+" "paint-cell" "View" "is-not?" "if" "get-width" "width" "let" "get-visible?" "when" "cell" "column" "dynamic" "function" "for-each" "get-height" "height" "get-column-spacing" "cs" "get-tree" "tree" "v" "0" "h" "let*" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-selection" () 256 11 ("dc")}
        {Lisp-Entry "find-by-title" () 265 18 ("sons" "first-child" "get-title" "=" "row" "dynamic" "function" "find-if" "title")}
        {Lisp-Entry "auto-inplace?" () 276 26 ("false")}
        {Lisp-Entry "auto-expand" () 280 26 ("self" "parent" "expand/collapse" "expandable?" "when")}
        {Lisp-Entry "auto-select" () 285 26 ()}
        {Lisp-Entry "auto-collapse" () 289 26 ("self" "parent" "collapse" "collapsable?" "when")}}}})
"Tree-Showcase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "showcase" "Tree-Showcase.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jedi.showcase.Tree-Showcase" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Showcase" () 46 7 ("center" "justification:" "tree-info" "tree-info-border" "selection" "first-displayed-offset" "first-displayed-rank" "first-displayed" "visible-height" "visible-count" "on-update-information" "update-information" "on-show-hide" "show/hide" "on-remove-rows" "remove-rows" "on-add-row" "add-row" "display-images?" "toplevel-controls?" "row-spacing" "column-spacing" "on-setting" "form:" "Event-Handler" "action-handler:" "checked?:" "header?" "width:" "title:" ":icons" "portfolio:" "row" "selection-mode:" "multiple-selection?:" "row-spacing:" "0" "column-spacing:" "filled-column:" "tree" "fill" "layout-type:" "content" "vscroll?:" "edge" "border-type:" "6" "3" "Point" "position:" "tree-border" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "frame-title" () 96 16 ()}
        {Lisp-Entry "frame-position" () 101 16 ("Point")}
        {Lisp-Entry "frame-size" () 106 16 ("Dimension")}
        {Lisp-Entry "install" () 115 11 ("update-information" "setup-tree" "nextmethod" "rest")}
        {Lisp-Entry "setup-tree" () 126 11 ("0" "naturals" "3" "/=" "visible?:" "5" "=" "when" "cell" "format" "title" "let*" "n" "dynamic" "function" "for-each" "node" "Bitmap-Resource" "add-row" "locate" "tree" "let")}
        {Lisp-Entry "add-row" () 146 11 ("Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "random-height" ":row-height" "father:" "add-row" "true" "visible?" "visible?:" "right" "middle" "image" "title" "father" "tree")}
        {Lisp-Entry "random-height" () 150 11 ("random" "+")}
        {Lisp-Entry "guest-actions" () 159 11 ("nextmethod" "tree-showcase" "find-actions" "cons")}
        {Lisp-Entry "resize" () 169 11 ("tree-info-border" "0" "tree-border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-setting" () 175 11 ("set-display-images?" "display-images?" "get-node-column" "set-toplevel-controls?" "toplevel-controls?" "set-row-spacing" "row-spacing" "0" "1" "if" "set-column-spacing" "column-spacing" "get-checked?" "set-header?" "header?" "get-name" "case" "locate" "tree" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "Unique-Id" () 186 14 ("0")}
        {Lisp-Entry "Last-Added-Row" () 189 14 ()}
        {Lisp-Entry "on-add-row" () 193 11 ("update-information" "and" "Tree-Label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "children:" "random-height" ":row-height" "collapsed" "state:" "father:" "add-row" "Last-Added-Row" "set!" "increase!" "Unique-Id" "format" "title" "let" "row" "for-each" "get-shift?" "use-last-added?" "get-row" "n" "dynamic" "function" "map" "list" "null?" "if" "rows" "get-selection" "sel" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "on-remove-rows" () 206 11 ("update-information" "remove-row" "row" "for-each" "get-row" "n" "dynamic" "function" "map" "rows" "get-selection" "sel" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "on-show-hide" () 216 11 ("update-information" "not" "set-visible?" "get-visible-flag" "visible?" "get-user-data" "target" "row" "for-each" "get-row" "n" "dynamic" "function" "map" "rows" "get-selection" "sel" "tree-info" "locate" "tree" "let*" "evt")}
        {Lisp-Entry "on-update-information" () 228 11 ("update-information" "evt")}
        {Lisp-Entry "update-information" () 237 11 ("display-tree" "update-fields")}
        {Lisp-Entry "update-fields" () 242 11 ("get-selection" "selection" "get-children" "car" "get-title" "essay" "row" "format" "set-title" "internal-fields" "first-displayed-offset" "first-displayed-rank" "first-displayed" "visible-height" "visible-count" "receive" "locate" "tree" "let")}
        {Lisp-Entry "display-tree" () 253 11 ("get-root-row" "remove-every-row" "with-update-locked" "get-sons" "subrow" "for-each" "user-data:" "display-row" "children:" "expanded" "state:" "father:" "add-row" "subdest" "let" "dest" "row" "dynamic" "function" "proc" "tree-info" "info" "locate" "tree" "letrec")}
        {Lisp-Entry "display-row" () 270 11 ("list" "get-visible-flag" "c6" "c5" "c4" "color:" "c3" "c2" "Tree-Label" "c1" "get-image" "image:" "get-title" "title:" "Tree-Node" "new" "c0" "Dark-Blue" "Dark-Red" "name:" "Color" "if" "color" "get-visible?" "visible?" "row-rank" "essay" "dynamic" "function" "rank" "get-children" "car" "node" "let*" "internal-fields" "next" "previous" "state" "level" "receive" "row" "tree")}
        {Lisp-Entry "row-rank" () 286 11 ("error" "get-root-row" "get-sons" "for-each" "increase!" "eq?" "if" "subrow" "dynamic" "function" "proc" "rank" "letrec" "return" "lambda" "call/ec" "row" "tree")}
        {Lisp-Entry "Node-Column" () 305 9 ("Tree-Node-Column")
          {Lisp-Entry "draw-cell" () 308 13 ("0" "draw-title" "Dark-Red" "Red" "name:" "Color" "if" "fill-rect" ":selected?" "getf" "selected?" "false" "text-rect" "rect" "let" "nextmethod" "height" "width" "cell" "row" "context" "dc")}}
        {Lisp-Entry "Middle-Column" () 321 9 ("Tree-Column")
          {Lisp-Entry "draw-cell" () 324 13 ("Dark-Blue" "Blue" "name:" "Color" "if" "fill-rect" ":selected?" "getf" "selected?" "0" "Rect" "new" "rect" "let" "height" "width" "cell" "row" "context" "dc")}}
        {Lisp-Entry "Right-Column" () 335 9 ("Tree-Column")
          {Lisp-Entry "draw-cell" () 338 13 ("Dark-Green" "Green" "name:" "Color" "if" "fill-rect" ":selected?" "getf" "selected?" "0" "Rect" "new" "rect" "let" "height" "width" "cell" "row" "context" "dc")}}}}})
"Tree-Showcase-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "showcase" "Tree-Showcase-Actions.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.showcase.Tree-Showcase-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Showcase-Actions" () 46 7 ("F5" "Shortcut" "shortcut:" "on-update-information" ":document" "Event-Handler" "action-handler:" "update-information" "name:" "Actions")}}})
"Tree-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "tree" "Tree-View.fusion"} {Time 128369339200000000L}
    {Lisp-Entry "jazz.ui.tree.Tree-View" () 38 9 ("jazz")
      {Lisp-Entry "Tree-View" () 64 7 ("White" "name:" "Color" "background:" "Selection-Provider" "Outline-View")
        {Lisp-Entry "delayed-autorow" () 67 14 ()}
        {Lisp-Entry "portfolio" () 71 22 ("set-portfolio" "get-portfolio")}
        {Lisp-Entry "show-header?" () 72 22 ("set-show-header?" "get-show-header?" "true")}
        {Lisp-Entry "selection-mode" () 74 22 ("set-selection-mode" "get-selection-mode" "row")}
        {Lisp-Entry "multiple-selection?" () 75 22 ("set-multiple-selection?" "get-multiple-selection?" "false")}
        {Lisp-Entry "can-select-empty?" () 76 22 ("set-can-select-empty?" "get-can-select-empty?" "true")}
        {Lisp-Entry "show-unfocused-selection?" () 77 22 ("set-show-unfocused-selection?" "get-show-unfocused-selection?" "true")}
        {Lisp-Entry "auto-expand/collapse?" () 78 22 ("set-auto-expand/collapse?" "get-auto-expand/collapse?" "false")}
        {Lisp-Entry "cell-background" () 79 22 ("set-cell-background" "get-cell-background")}
        {Lisp-Entry "empty-background" () 80 22 ("set-empty-background" "get-empty-background")}
        {Lisp-Entry "filled-column" () 81 22 ("set-filled-column" "get-filled-column" "true")}
        {Lisp-Entry "column-spacing" () 82 22 ("set-column-spacing" "get-column-spacing" "0")}
        {Lisp-Entry "reorderable?" () 83 22 ("set-reorderable?" "get-reorderable?" "false")}
        {Lisp-Entry "content" () 84 22 ("set-content" "get-content")}
        {Lisp-Entry "columns" () 87 18 ()}
        {Lisp-Entry "node-column" () 88 18 ()}
        {Lisp-Entry "sorted-column" () 89 18 ("generate")}
        {Lisp-Entry "sort-ascending?" () 90 18 ("generate" "true")}
        {Lisp-Entry "selection-pivot" () 91 18 ()}
        {Lisp-Entry "highlighted" () 92 18 ()}
        {Lisp-Entry "indentation" () 93 18 ()}
        {Lisp-Entry "columns-borders" () 94 18 ("generate")}
        {Lisp-Entry "columns-right" () 95 18 ("generate" "0")}
        {Lisp-Entry "has-focus?" () 96 18 ("false")}
        {Lisp-Entry "edited-cell" () 97 18 ()}
        {Lisp-Entry "cell-editor" () 98 18 ()}
        {Lisp-Entry "close-cell-editor?" () 99 18 ("true")}
        {Lisp-Entry "auto-expanded-row" () 100 18 ()}
        {Lisp-Entry "locator" () 101 18 ("Tree-Locator" "new")}
        {Lisp-Entry "selection-manager" () 102 18 ("self" "Selection-Manager" "new")}
        {Lisp-Entry "finish" () 114 11 ("invalidate-columns" "nextmethod" "rest")}
        {Lisp-Entry "destroy-component" () 119 11 ("nextmethod" "end-edition")}
        {Lisp-Entry "add-child" () 129 11 ("list" "append!" "columns" "set!" "Tree-Column" "is?" "when" "nextmethod" "child")}
        {Lisp-Entry "remove-child" () 135 11 ("remove!" "columns" "set!" "Tree-Column" "is?" "when" "nextmethod" "child")}
        {Lisp-Entry "get-columns" () 146 18 ("columns")}
        {Lisp-Entry "get-portfolio" () 150 18 ("child" "set!" "Portfolio" "is?" "if" "portfolio" "when")}
        {Lisp-Entry "set-portfolio" () 158 18 ("invalidate-view" "portfolio" "set!" "object")}
        {Lisp-Entry "get-show-header?" () 163 18 ("show-header?")}
        {Lisp-Entry "set-show-header?" () 167 18 ("show-header?" "set!" "value")}
        {Lisp-Entry "get-multiple-selection?" () 171 18 ("multiple-selection?")}
        {Lisp-Entry "set-multiple-selection?" () 175 18 ("invalidate-view" "multiple-selection?" "set!" "flag")}
        {Lisp-Entry "get-can-select-empty?" () 180 18 ("can-select-empty?")}
        {Lisp-Entry "set-can-select-empty?" () 184 18 ("invalidate-view" "can-select-empty?" "set!" "flag")}
        {Lisp-Entry "get-show-unfocused-selection?" () 189 18 ("show-unfocused-selection?")}
        {Lisp-Entry "set-show-unfocused-selection?" () 193 18 ("invalidate-view" "show-unfocused-selection?" "set!" "flag")}
        {Lisp-Entry "get-selection-mode" () 198 18 ("selection-mode")}
        {Lisp-Entry "set-selection-mode" () 202 18 ("invalidate-view" "selection-mode" "set!" "value")}
        {Lisp-Entry "get-auto-expand/collapse?" () 207 18 ("auto-expand/collapse?")}
        {Lisp-Entry "set-auto-expand/collapse?" () 211 18 ("auto-expand/collapse?" "set!" "flag")}
        {Lisp-Entry "get-filled-column" () 215 18 ("filled-column")}
        {Lisp-Entry "set-filled-column" () 219 18 ("filled-column" "set!" "value")}
        {Lisp-Entry "get-cell-background" () 223 18 ("cell-background")}
        {Lisp-Entry "set-cell-background" () 227 18 ("invalidate-view" "cell-background" "set!" "color")}
        {Lisp-Entry "get-empty-background" () 232 18 ("empty-background")}
        {Lisp-Entry "set-empty-background" () 236 18 ("invalidate-view" "empty-background" "set!" "color")}
        {Lisp-Entry "get-column-spacing" () 241 18 ("column-spacing")}
        {Lisp-Entry "set-column-spacing" () 245 18 ("invalidate-view" "column-spacing" "set!" "spacing")}
        {Lisp-Entry "get-reorderable?" () 250 18 ("reorderable?")}
        {Lisp-Entry "set-reorderable?" () 254 18 ("reorderable?" "set!" "flag")}
        {Lisp-Entry "get-indentation" () 258 18 ("indentation")}
        {Lisp-Entry "get-cell-editor" () 262 18 ("cell-editor")}
        {Lisp-Entry "focus-gain" () 271 11 ("selection" "invalidate-selection" "true" "has-focus?" "set!" "nextmethod")}
        {Lisp-Entry "focus-lose" () 277 11 ("selection" "invalidate-selection" "false" "has-focus?" "set!" "nextmethod" "view" "window")}
        {Lisp-Entry "selection-color" () 283 18 ("unfocused-color" "focused-color" "focused?" "if")}
        {Lisp-Entry "focused-color" () 289 29 ("Focused-Selection" "name:" "Color")}
        {Lisp-Entry "unfocused-color" () 293 29 ("Unfocused-Selection" "name:" "Color")}
        {Lisp-Entry "selected-text-color" () 297 18 ("Unfocused-Selected-Text" "Focused-Selected-Text" "name:" "Color" "focused?" "if")}
        {Lisp-Entry "focused?" () 303 26 ("self" "has-parent?" "and" "get-focus" "focus" "let" "has-focus?" "or")}
        {Lisp-Entry "focus-and-select" () 309 18 ("set-single-selection" "0" "get-visible-count" ">" "when" "acquire-focus")}
        {Lisp-Entry "focus-actions" () 320 11 ("nextmethod" "tree" "find-actions" "cons")}
        {Lisp-Entry "on-expand" () 330 11 ("expand" "bell" "not" "if" "get-selected-row" "row" "let" "evt")}
        {Lisp-Entry "on-expand-all" () 337 11 ("expand-all" "bell" "not" "if" "get-selected-row" "row" "let" "evt")}
        {Lisp-Entry "on-collapse" () 344 11 ("collapse" "bell" "not" "if" "get-selected-row" "row" "let" "evt")}
        {Lisp-Entry "on-properties" () 351 29 ("evt")}
        {Lisp-Entry "get-header" () 360 18 ("Tree-Header" "is?" "when" "parent" "get-parent" "header" "let")}
        {Lisp-Entry "invalidate-header" () 366 18 ("invalidate-view" "when" "get-header" "header" "let")}
        {Lisp-Entry "layout-column" () 377 21 ("row-spacing" "increase!" "set!" "columns-right" "Dimension" "new" "set-size" "+" "rb" "get-effective-height" "height" "let*" "while" "0" "rt" "root-row" "get-next" "row" "let" "column")}
        {Lisp-Entry "layout-scrollee" () 394 11 ("get-display-size" "fill-column" "filled-column" "when" "nextmethod")}
        {Lisp-Entry "scrollee-width" () 400 11 ("column-spacing" "visible-width" "+" "columns-right" "show-header?" "if" "get-display-width" "max")}
        {Lisp-Entry "update-visible" () 411 11 ("update-visible-width" "update-visible-height")}
        {Lisp-Entry "update-visible-height" () 416 11 ("visible-height" "visible-count" "row-spacing" "false" "set!" "if" "get-effective-height" "increase!" "rank" "row" "dynamic" "function" "for-each-visible-row" "true" "first?" "height" "0" "count" "let")}
        {Lisp-Entry "update-visible-width" () 433 11 ("set-width" "cons" "list" "columns-borders" "columns-right" "visible-width" "set!" ">" "get-level" "text-h" "w" "get-node-width" "either" "+" "nw" "3" "highlight-border" "let*" "rank" "row" "dynamic" "function" "for-each-visible-row" "Tree-Node-Column" "node-column" "is?" "0" "width" "let" "show-header?" "not" "when")}
        {Lisp-Entry "scroll-invalidate" () 451 11 ("invalidate-header" "nextmethod" "dv" "dh")}
        {Lisp-Entry "Highlighted-Outer-Color" () 461 14 ("blue:" "green:" "0" "red:" "Color" "new")}
        {Lisp-Entry "Highlighted-Inner-Color" () 464 14 ("blue:" "green:" "red:" "Color" "new")}
        {Lisp-Entry "Highlighted-Insert-Color" () 467 14 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "draw-outline" () 471 11 ("draw-highlighted" "fill-rect" "0" "*" "round" "if" "Rect" "new" "rect" "with" "columns-right" "" "empty-background" "and" "when" "get-height" "height" "get-right" "right" "get-h" "get-left" "+" "left" "get-position" "pos" "let*" "nextmethod" "sc?" "sc" "sv" "sh" "lv" "lh" "update-rect" "update" "context" "dc")}
        {Lisp-Entry "draw-empty" () 485 11 ("fill-rect" "*" "if" "round" "0" "Rect" "new" "rect" "with" "" "empty-background" "and" "when" "width" "rt" "sc?" "sc" "sv" "sh" "bottom" "top" "dc")}
        {Lisp-Entry "draw-highlighted" () 491 11 ("highlighted" "Highlighted-Insert-Color" "fill-rect" "highlighted-insert-rect" "rect" "with" "draw-highlighted-cell" "not" "if" "get-insert" "insert" "get-col" "col" "get-row" "row" "let" "highlight" "dynamic" "function" "for-each-reversed" "dc")}
        {Lisp-Entry "draw-highlighted-cell" () 503 29 ("highlight-inner?" "when" "frame-rect" "highlighted-inner-color" "get-inner-color" "inner-color" "highlighted-outer-color" "get-outer-color" "either" "outer-color" "let" "1" "inflate-rect" "outer-rect" "highlighted-target-rect" "inner-rect" "with" "highlight" "col" "row" "dc")}
        {Lisp-Entry "highlighted-outer-color" () 513 29 ("Highlighted-Outer-Color")}
        {Lisp-Entry "highlighted-inner-color" () 517 29 ("Highlighted-Inner-Color")}
        {Lisp-Entry "highlight-inner?" () 521 29 ("true")}
        {Lisp-Entry "header-color" () 525 26 ("Medium" "name:" "Color")}
        {Lisp-Entry "get-highlighted" () 534 18 ("highlighted")}
        {Lisp-Entry "set-highlighted" () 538 18 ("invalidate-highlighted" "set!" "old" "let" "highlighted" "equal?" "not" "when" "Tree-Highlight" "is?" "object" "dynamic" "function" "every?" "assert" "value")}
        {Lisp-Entry "invalidate-highlighted" () 547 11 ("highlighted-insert-rect" "invalidate-rect" "invalidate-highlighted-cell" "not" "if" "get-insert" "insert" "get-col" "col" "get-row" "row" "let" "highlight" "dynamic" "function" "for-each" "highlighted")}
        {Lisp-Entry "invalidate-highlighted-cell" () 558 29 ("invalidate-region" "2" "Rect" "insets:" "frame-region" "region" "1" "inflate-rect" "outer" "highlighted-target-rect" "inner" "with-closed" "col" "row")}
        {Lisp-Entry "highlighted-target-rect" () 565 11 ("cell-rect" "0" "row-rank" "Cell" "new" "cell-text-rect" "not" "if" "col" "row")}
        {Lisp-Entry "highlighted-insert-rect" () 571 11 ("get-bottom" "get-top" "case" "get-right" "get-left" "Rect" "bottom" "+" "top" "v" "dynamic" "function" "proc" "else" "cond" "offset" "2" "row-spacing" "/" "round" "half-spacing" "after" "1" "visible-count" "-" "after-last?" "before" "eq?" "=" "and" "before-first?" "0" "Cell" "new" "cell-content-rect" "row-rect" "rect" "row-rank" "rank" "get-height" "height" "let*" "insert" "row")}
        {Lisp-Entry "update-visible-width-incremental" () 597 11 ("set!" "visible-width" ">" "when" "node-column" "text-h" "+" "let" "width" "level")}
        {Lisp-Entry "remove-row" () 604 11 ("nextmethod" "close-auto-expanded-row" "auto-expanded-row" "eq?" "attached?" "and" "when" "row")}
        {Lisp-Entry "remove-every-row" () 610 11 ("nextmethod" "highlighted" "set!" "true" "set-sorted" "close-auto-expanded-row")}
        {Lisp-Entry "allow-start-drag?" () 622 11 ("selection-manager" "allow-start-drag?" "nextmethod" "and" "pos")}
        {Lisp-Entry "mouse-down" () 627 11 ("column" "set-selection" "can-select-empty?" "when" "not" "if" "control?" "shift?" "let" "acquire-capture" "acquire-focus" "get-multiple-selection?" "alt-down?" "control-down?" "shift-down?" "selection-manager" "mouse-down" "get-col" "get-column" "find-part" "part" "cell-coordinates" "essay" "pos" "view->tree" "cell" "let*" "view")}
        {Lisp-Entry "drag-move" () 645 11 ("drag-move" "get-col" "get-column" "column" "cell-coordinates" "pos" "when" "view->tree" "cell" "let" "view")}
        {Lisp-Entry "drag-up" () 653 11 ("reset" "self" "process-action" "release-capture" "drag-up" "focus-delegate" "auto-select" "auto-expand/collapse?" "complete-mouse-down" "mouse-down-part-control?" "get-col" "get-column" "column" "get-row" "row" "cell-coordinates" "pos" "not" "and" "when" "set-selection" "or" "control?" "shift?" "get-mouse-down-view" "unless" "either" "view->tree" "cell" "let" "alt-down?" "control-down?" "shift-down?" "selection-manager" "mouse-up" "false" "dragging?" "view")}
        {Lisp-Entry "call-double-click" () 677 11 ("double-click" "else" "nextmethod" "content" "mouse-down" "control" "case" "find-part" "part" "get-col" "get-column" "column" "cell-coordinates" "pos" "let*" "when" "view->tree" "cell" "let" "view")}
        {Lisp-Entry "double-click" () 689 11 ("find-part" "part" "get-col" "get-column" "column" "cell-coordinates" "pos" "let*" "when" "view->tree" "cell" "let" "alt-down?" "control-down?" "shift-down?" "selection-manager" "double-click" "view")}
        {Lisp-Entry "context-menu" () 699 11 ("self" "acquire" "context-menu" "get-row" "row" "when" "view->tree" "cell" "let" "view")}
        {Lisp-Entry "cell-coordinates" () 706 11 ("cell-position" "-" "pos" "cell")}
        {Lisp-Entry "key-press" () 715 11 ("locator" "enter" "0" "visible-count" ">" "alphanumeric?" "and" "when" "key")}
        {Lisp-Entry "locate-prefix" () 725 18 ("locator" "locate" "prefix")}
        {Lisp-Entry "header-click" () 734 26 ("ensure-displayed" "column-rank" "sort-column" "column")}
        {Lisp-Entry "set-sorted" () 739 11 ("sort-ascending?" "set!" "get-column" "invalidate-column-header" "not" "when" "=" "sorted-column" "and" "same?" "get-header" "header" "let" "ascending?" "column")}
        {Lisp-Entry "sort-column" () 750 18 ("false" ":ensure-displayed?" "root-row" "with-update-locked" "with-preserved-selection" "for-each" "reorder-sons" "get-sons" "sort-rows" "sorted" "let" "row" "dynamic" "function" "proc" "if" "direction" "letrec" "sort-predicates" "greater" "smaller" "equal" "receive" "sort-ascending?" "/=" "sorted-column" "not" "or" "set-sorted" "column")}
        {Lisp-Entry "sort-rows" () 766 11 ("and" "or" "ny" "localize" "nx" "cy" "get-children" "cx" "let*" "ry" "rx" "sort" "get-column" "sort-value" "either" "element" "cell" "n" "children" "row" "dynamic" "function" "get-node" "0" "/=" "dual?" "let" "direction" "equal" "column" "rows")}
        {Lisp-Entry "get-content" () 789 18 ("content")}
        {Lisp-Entry "set-content" () 793 18 ("invalidate-cell" "set-title" "get-cell-data" "data" "Cell" "new" "cell" "let*" "do" "j" "info" "0" "from" "i" "in" "row" "for" "loop" "value")}
        {Lisp-Entry "with-context-click" () 809 11 ("update-view" "auto-select" "auto-expand/collapse?" "memq?" "else" "list" "get-selection" "member?" "unless" "selection-mode" "case" "get-row" "row" "set-selection" "can-select-empty?" "when" "not" "if" "view->tree" "cell" "let" "acquire-focus" "proc" "pos")}
        {Lisp-Entry "flattened?" () 834 18 ("get-visible?" "and" "get-path-column" "path-column" "let")}
        {Lisp-Entry "flatten/unflatten" () 839 18 ("flatten" "unflatten" "with-update-locked" "dynamic" "function" "with-preserved-selection" "get-display-size" "fill-column" "set-visible?" "error" "not" "if" "flattened?" "get-path-column" "path-column" "let*")}
        {Lisp-Entry "get-path-column" () 855 18 ("columns" "Tree-Path-Column" "is?" "column" "dynamic" "function" "find-if")}
        {Lisp-Entry "flatten-row?" () 861 26 ("true" "row")}
        {Lisp-Entry "flatten" () 865 18 ("false" "set-visible?" "disconnected?" "unless" "flatten" "disconnect" "flatten-row?" "if" "son" "dynamic" "function" "for-each" "root-row" "get-sons" "sons" "let")}
        {Lisp-Entry "unflatten" () 878 18 ("true" "set-visible?" "get-visible?" "unless" "root-row" "get-sons" "reconnect" "disconnected?" "when" "son" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-tooltip?" () 894 11 ("true")}
        {Lisp-Entry "get-tooltip-context" () 898 11 ("font:" "get-tooltip-position" "position:" "bounds:" "cn" "split" "text:" "self" "view:" "Tooltip-Context" "new" "2" "=" "get-level" "content-h" "h" "1" "cell-rect" "inflate-rect" "rect" "rect-width" ">" "cell-tooltips?" "or" "5" "font" "+" "0" "text-width" "get-formatted-tooltip?" "formatted?" "content-rect" "get-height" "height" "column-width" "width" "let*" "get-cell-tooltip" "localize" "text" "get-col" "get-column" "column" "get-row" "row" "when" "view->tree" "cell" "let" "nextmethod" "get-tooltip-text" "if" "pos")}
        {Lisp-Entry "cell-tooltips?" () 923 29 ("false")}
        {Lisp-Entry "get-cell-tooltip" () 927 29 ("get-cell-tooltip" "get-cell-data" "data" "get-col" "get-column" "column" "let" "cell")}
        {Lisp-Entry "get-tooltip-position" () 933 29 ("5" "rect-height" "-" "Point" "new" "rect-position" "+" "v" "h" "rect" "text")}
        {Lisp-Entry "get-column-tooltip" () 937 29 ("column")}
        {Lisp-Entry "get-drag-drop" () 946 11 ("nextmethod" "mouse-down-point" "view->tree" "when")}
        {Lisp-Entry "get-drag-source" () 956 11 ("get-drag-cell-source" "get-col" "col" "get-row" "row" "view->tree" "cell" "get-drag-position" "pos" "let*")}
        {Lisp-Entry "get-drag-cell-source" () 964 29 (":col" ":row" "get-drag-image" "image:" "position:" "self" "view:" "Tree-Drag-Source" "new" "col" "row" "pos")}
        {Lisp-Entry "get-drag-hotspot" () 968 11 ("Point" "new" "get-position" "get-v" "top" "get-level" "node-column" "image-h" "left" "get-row" "row" "mouse-down-point" "view->tree" "cell" "let*")}
        {Lisp-Entry "get-drag-image" () 976 11 ("get-node-image" "get-row" "row" "view->tree" "cell" "let*" "pos")}
        {Lisp-Entry "get-node-image" () 982 18 (":image-name" ":portfolio" "Image" "add-masked-bitmap" "no" ":masked?" "height:" "width:" "Portfolio" "get-bitmap" "set!" "2" "draw-text" "Black" "set-text-color" "font" "set-font" "draw-mask" "portfolio" "draw-image" "White" "name:" "Color" "Rect" "fill-rect" "maskdc" "true" ":keep-bitmap?" "Dimension" "size:" "Cairo-Memory-Surface" "memdc" "with-closed" "mask" "unspecified" "bitmap" "get-height" "height" "get-node-column-index" "column-width" "width" "get-title" "title" "get-image" "image" "0" "Cell" "get-cell-data" "cell" "get-row" "row" "player" "Cairo-Client-Surface" "new" "cdc" "let*" "n")}
        {Lisp-Entry "current-drop" () 1016 11 ("get-tree-target" "get-reorder-target" "get-source" "get-view" "self" "eq?" "reorderable?" "and" "nextmethod" "get-surrogate" "if" "pos" "drag-drop")}
        {Lisp-Entry "get-reorder-target" () 1024 11 ("get-row-reorder-target" "get-quarter" "=" "get-view" "self" "eq?" "and" "if" "row" "get-target" "current" "get-row-quarter" "quarter" "get-row" "rank" "let*" "height" "v" "cell" "receive" "when" "view->tree-extended" "info" "let" "pos" "drag-drop")}
        {Lisp-Entry "get-row-quarter" () 1038 11 ("else" "3" "-" "1" "" "cond" "2" "middle" "4" "/" "quarter" "let" "height" "v")}
        {Lisp-Entry "get-row-reorder-target" () 1047 29 (":part" ":row" "self" "view:" "Tree-Drop-Target" "new" "after" "before" "=" "part" "let" "when" "cdr" "/=" "and" "not" "or" "accept?" "+" "2" "1" "if" "current-rank" "dst-rank" "get-user-data" "dst" "contiguous-range" "src-range" "get-source" "get-view" "get-selection" "src-selection" "selection" "row-rank" "memq?" "same-row?" "let*" "quarter" "row" "drag-drop")}
        {Lisp-Entry "get-tree-target" () 1060 29 ("get-tree-row-target" "pos" "drag-drop")}
        {Lisp-Entry "get-tree-row-target" () 1064 21 ("get-row-target" "get-view" "self" "eq?" "and" "if" "get-target" "current" "get-row" "row" "height" "v" "cell" "receive" "when" "view->tree-extended" "info" "let" "pos" "drag-drop")}
        {Lisp-Entry "get-tree-cell-target" () 1076 18 ("get-cell-target" "=" "eq?" "and" "if" "/=" "self" "get-view" "neq?" "or" "get-target" "current" "get-source" "source" "get-col" "col" "get-row" "row" "height" "v" "cell" "receive" "when" "view->tree-extended" "info" "let" "pos" "drag-drop")}
        {Lisp-Entry "get-row-target" () 1091 29 ("row" "drag-drop")}
        {Lisp-Entry "get-cell-target" () 1095 29 ("col" "row" "drag-drop")}
        {Lisp-Entry "highlight-drop" () 1099 11 ("get-highlighted" "cons" "set-highlighted" "Highlighted-Inner-Color" ":inner-color" "Highlighted-Outer-Color" ":outer-color" ":insert" "Tree-Highlight" "new" "highlight" "after" "before" "case" "insert" "get-part" "part" "get-col" "col" "get-row" "row" "let*" "Tree-Drop-Target" "is?" "when" "get-target" "target" "let" "pos" "drag-drop")}
        {Lisp-Entry "unhighlight-drop" () 1115 11 ("get-highlighted" "cdr" "set-highlighted" "drag-drop")}
        {Lisp-Entry "tab-stop-enter" () 1124 11 ()}
        {Lisp-Entry "on-home" () 1133 18 ("home-action" "evt")}
        {Lisp-Entry "home-action" () 1137 18 ("else" "Cell" "new" "list" "set-selection" "get-col" "selection-pivot" "if" "col" "cell" "selection-mode" "case" "0" ">" "when" "get-visible-count" "count" "let")}
        {Lisp-Entry "on-end" () 1148 18 ("end-action" "evt")}
        {Lisp-Entry "end-action" () 1152 18 ("else" "1" "-" "Cell" "new" "list" "set-selection" "get-col" "selection-pivot" "if" "col" "cell" "selection-mode" "case" "0" ">" "when" "get-visible-count" "count" "let")}
        {Lisp-Entry "left-arrow-press" () 1163 11 ("true" "left-arrow-action" "modifiers")}
        {Lisp-Entry "left-arrow-action" () 1167 18 ("get-father" "row-rank" "list" "set-selection" "get-level" "expand/collapse" "expanded?" "bell" "not" "if" "get-selected-row" "row" "left" "1" "-" "get-row" "Cell" "new" "move-cell" "0" "get-col" ">" "selection-pivot" "let" "selection" "not-null?" "when" "cell" "selection-mode" "case" "user?" "modifiers")}
        {Lisp-Entry "up-arrow-press" () 1184 11 ("true" "up-arrow-action" "modifiers")}
        {Lisp-Entry "up-arrow-action" () 1188 18 ("car" "row" "backward" "move-selection" "null?" "if" "get-visible-count" "count" "else" "up" "get-col" "1" "-" "Cell" "new" "move-cell" "0" "get-row" ">" "selection-pivot" "let" "selection" "not-null?" "when" "cell" "selection-mode" "case" "user?" "modifiers")}
        {Lisp-Entry "right-arrow-press" () 1205 11 ("true" "right-arrow-action" "modifiers")}
        {Lisp-Entry "right-arrow-action" () 1209 18 ("expand/collapse" "expanded?" "unless" "bell" "not" "if" "get-selected-row" "row" "else" "right" "+" "get-row" "Cell" "new" "move-cell" "1" "get-columns-count" "-" "get-col" "" "selection-pivot" "let" "selection" "not-null?" "when" "cell" "selection-mode" "case" "user?" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 1224 11 ("true" "down-arrow-action" "modifiers")}
        {Lisp-Entry "down-arrow-action" () 1228 18 ("car" "row" "forward" "move-selection" "0" ">" "null?" "if" "else" "down" "get-col" "+" "Cell" "new" "move-cell" "get-row" "" "selection-pivot" "let" "selection" "not-null?" "when" "cell" "selection-mode" "case" "1" "-" "last" "get-visible-count" "count" "let*" "user?" "modifiers")}
        {Lisp-Entry "move-selection" () 1246 11 ("update-view" "auto-select" "auto-expand/collapse?" "true" "user-origin?:" "list" "set-selection" "get-row" "row" "let" "acquire-focus" "when" "user?" "direction" "n")}
        {Lisp-Entry "move-cell" () 1256 11 ("update-view" "get-bottom" "down" "forward" "get-right" "right" "get-top" "vertical-scroll-needed" "up" "0" "backward" "get-left" "horizontal-scroll-needed" "Point" "new" "scroll" "left" "case" "cell-rect" "rect" "let" "true" "user-origin?:" "false" ":ensure-displayed?" "list" "set-selection" "acquire-focus" "when" "user?" "direction" "cell")}
        {Lisp-Entry "row-displayed?" () 1269 11 ("get-v" "=" "0" "Point" "new" "scroll-needed" "needed" "get-bottom" "bottom" "get-top" "top" "get-row" "row" "let*" "n")}
        {Lisp-Entry "cell-displayed?" () 1277 11 ("get-v" "0" "get-h" "=" "and" "get-bottom" "get-right" "get-top" "get-left" "Point" "new" "scroll-needed" "needed" "cell-rect" "rect" "let*" "cell")}
        {Lisp-Entry "select-all" () 1284 11 ("visible-count" "0" "naturals" "set-selection" "multiple-selection?" "when" "false" "user-origin?" "user-origin?:")}
        {Lisp-Entry "fill-column" () 1294 18 ("invalidate-header" "invalidate-rect" "get-height" "2" "min" "Rect" "new" "rect" "with" "set-width" "columns-right" "increase!" "1" "tail" "set-cdr!" "car" "set-car!" "pair" "dynamic" "function" "for-each" "xxx" "format" "message:" "name:" "log-stack" "Development" "get-%" "self" "=" "false" "if" "0" "/=" "+" "new-right" "cdr" "old-right" "max" "delta" "borders-right" "space-after-column" "size-delta" "get-width" "-" "min-delta" "element" "filled-borders" "length" "" "column-rank" "rank" "find-filled-column" "column" "let*" "columns-borders" "not-null?" "filled-column" "and" "when" "size")}
        {Lisp-Entry "fill-column" () 1324 18 ("invalidate-header" "invalidate-rect" "get-height" "0" "2" "min" "Rect" "new" "rect" "with" "set-width" "columns-right" "increase!" "1" "tail" "set-cdr!" "car" "set-car!" "pair" "dynamic" "function" "for-each" "+" "new-right" "cdr" "old-right" "borders-right" "space-after-column" "get-width" "-" "delta" "element" "filled-borders" "length" "" "column-rank" "rank" "find-filled-column" "column" "let*" "columns-borders" "not-null?" "filled-column" "and" "when" "size")}
        {Lisp-Entry "find-filled-column" () 1347 11 ("get-name" "=" "column" "dynamic" "function" "find-if" "else" "last" "true" "eq?" "columns" "element" "integer?" "cond" "name")}
        {Lisp-Entry "space-after-column" () 1355 11 ("1" "+" "columns-borders" "tail" "borders-width" "increase!" "borders" "dynamic" "function" "for-each" "0" "total" "let" "rank")}
        {Lisp-Entry "add-column" () 1363 18 ("invalidate-header" "get-display-size" "fill-column" "set-title" "invalidate-columns" "set-width" "node-column" "set!" "Tree-Node-Column" "is?" "when" "parent:" "new-in" "apply" "column" "let" "others" "width" "title" "Tree-Column" "class" "self" "context" "bind-keywords" "rest")}
        {Lisp-Entry "remove-column" () 1378 18 ("invalidate-header" "get-display-size" "fill-column" "invalidate-columns" "node-column" "eq?" "when" "remove!" "columns" "set!" "column")}
        {Lisp-Entry "remove-columns" () 1387 18 ("remove-all-columns" "remove-columns-preserving" "or" "if" "preserve" "preserve:" "false" "preserve-node-column?" "preserve-node-column?:")}
        {Lisp-Entry "remove-all-columns" () 1393 11 ("invalidate-header" "node-column" "0" "columns-right" "columns-borders" "columns" "set!" "set-children" "remove-every-row")}
        {Lisp-Entry "remove-columns-preserving" () 1403 11 ("invalidate-header" "get-columns" "remove-column" "get-name" "memq?" "Tree-Node-Column" "is?" "and" "or" "unless" "column" "dynamic" "function" "for-each" "remove-every-row" "preserve" "preserve-node-column?")}
        {Lisp-Entry "invalidate-columns" () 1413 11 ("invalidate-borders" "invalidate-node-column" "columns" "not-null?" "when")}
        {Lisp-Entry "invalidate-node-column" () 1419 11 ("columns" "Tree-Node-Column" "is?" "column" "dynamic" "function" "find-if" "node-column" "set!")}
        {Lisp-Entry "invalidate-borders" () 1425 21 ("last" "borders-right" "columns-right" "columns" "map" "columns-borders" "column-spacing" "set!" "get-visible?" "when" "cons" "prog1" "+" "right" "get-width" "width" "let*" "column" "dynamic" "function" "proc" "with" "0" "left" "let")}
        {Lisp-Entry "get-columns-count" () 1438 18 ("columns" "length")}
        {Lisp-Entry "get-column" () 1442 18 ("columns" "element" "n")}
        {Lisp-Entry "get-node-column" () 1446 18 ("node-column")}
        {Lisp-Entry "find-column" () 1450 18 ("find-component" "name")}
        {Lisp-Entry "get-node-column-index" () 1454 18 ("node-column" "column-rank")}
        {Lisp-Entry "column-rank" () 1458 18 ("position" "return:" "columns" "find" "column")}
        {Lisp-Entry "row-class" () 1467 11 ("Tree-Row")}
        {Lisp-Entry "update-father-control" () 1471 11 ("image-rect" "node-column" "control-rect" "invalidate-rect" "get-height" "" "row-top" "top" "row-rank" "rank" "let*" "row-visible?" "root-row" "neq?" "update-locked?" "not" "and" "when" "father")}
        {Lisp-Entry "add-empty-row" () 1480 11 ("columns" "new-empty-cell" "column" "dynamic" "function" "map" "children:" "add-row" "root-row" "either" "let" "father" "father:")}
        {Lisp-Entry "row-selected?" () 1487 11 ("memq?" "else" "selection" "get-row" "=" "dynamic" "function" "some?" "cell" "selection-mode" "case" "row")}
        {Lisp-Entry "row-draw-selected?" () 1493 11 ("show-unfocused-selection?" "has-focus?" "or" "nextmethod" "and" "row")}
        {Lisp-Entry "row-index" () 1503 18 ("eq?" "when" "rank" "row" "dynamic" "function" "for-each-visible-row" "return" "lambda" "call/ec" "target")}
        {Lisp-Entry "user-data-row" () 1513 18 ("get-user-data" "when" "rank" "row" "dynamic" "function" "for-each-row" "for-each-visible-row" "if" "return" "lambda" "call/ec" "true" "visible?" "visible?:" "eqv?" "test" "test:" "data")}
        {Lisp-Entry "user-data-rows" () 1523 18 ("get-output" "put" "member?" "when" "get-user-data" "user-data" "rank" "row" "dynamic" "function" "for-each-row" "for-each-visible-row" "if" "List-Factory" "new" "fact" "let" "true" "visible?" "visible?:" "eqv?" "test" "test:" "data-list")}
        {Lisp-Entry "user-data-index" () 1534 18 ("get-user-data" "when" "rank" "row" "dynamic" "function" "for-each-visible-row" "return" "lambda" "call/ec" "eqv?" "test" "test:" "data")}
        {Lisp-Entry "user-data-indexes" () 1545 18 ("get-output" "put" "member?" "when" "get-user-data" "user-data" "rank" "row" "dynamic" "function" "for-each-visible-row" "List-Factory" "new" "fact" "let" "eqv?" "test" "test:" "data-list")}
        {Lisp-Entry "select-user-data-row" () 1555 18 ("row-rank" "set-single-selection" "error" "not" "if" "user-data-row" "row" "let" "data")}
        {Lisp-Entry "get-cell-data" () 1567 18 ("element" "error" "selection" "set!" "get-children" "length" "get-col" ">=" "when" "get-row" "row" "let" "cell")}
        {Lisp-Entry "set-cell-data" () 1576 18 ("get-col" "get-children" "set-element!" "get-row" "row" "let" "data" "cell")}
        {Lisp-Entry "invalidate-cell" () 1581 18 ("cell-rect" "invalidate-rect" "cell")}
        {Lisp-Entry "redraw-cell" () 1585 18 ("update-view" "cell-rect" "invalidate-rect" "cell")}
        {Lisp-Entry "expand/collapse" () 1595 11 ("nextmethod" "else" "dynamic-expand" "dynamic" "get-state" "case" "node-column" "control-rect" "invalidate-rect" "get-position" "get-v" "top" "let" "row")}
        {Lisp-Entry "dynamic-expand" () 1603 18 ("true" "expand" "update-row" "row")}
        {Lisp-Entry "invalidate-expand" () 1608 11 ("plus/minus-rect" "control-rect" "get-sons" "null?" "and" "if" "node-column" "image-rect" "invalidate-rect" "dynamic?" "top" "row")}
        {Lisp-Entry "invalidate-collapse" () 1615 11 ("plus/minus-rect" "row-rect" "if" "node-column" "image-rect" "invalidate-rect" "selected?" "top" "row" "rank")}
        {Lisp-Entry "collapse-selection" () 1622 11 ("row-selected?" "not" "and" "else" "cons" "set!" "selection" "member?" "unless" "get-col" "Cell" "new" "let" "when" "cell" "selection-mode" "case" "removed" "rank")}
        {Lisp-Entry "auto-expand/collapse" () 1634 18 ("rows->selection" "else" "not" "auto-collapse" "close-delayed-row" "if" "mouse-up?" "auto-toggle" "auto-inplace?" "delayed-autorow" "set!" "force?:" "get-spine" "essay" ":new-spine" "close-auto-expanded" "/=" "auto-expanded-row" "and" "when" "selection-manager" "mouse-down?" "cond" "selection" "selection->rows" "selected-rows" "let" "dynamic" "function" "with-update-locked" "false" "auto-toggle?" "auto-toggle?:" "true" "close-auto-expanded?" "close-auto-expanded?:" "row")}
        {Lisp-Entry "auto-toggle" () 1662 11 ("auto-expand" "auto-expanded-row" "set!" "auto-collapse" "when" "expanded?" "if" "auto-toggle?" "row")}
        {Lisp-Entry "close-delayed-row" () 1671 18 ("auto-collapse" "true" "memq?" "if" "unless" "row" "dynamic" "function" "for-each-reversed" "set!" "false" "done?" "get-spine" "old-spine" "let" "delayed-autorow" "when" "new-spine" "new-spine:")}
        {Lisp-Entry "close-auto-expanded" () 1684 18 ("auto-collapse" "auto-inplace?" "or" "memq?" "if" "unless" "row" "dynamic" "function" "for-each-reversed" "set!" "false" "done?" "get-spine" "old-spine" "let" "auto-expanded-row" "when" "true" "force?" "force?:" "new-spine" "new-spine:")}
        {Lisp-Entry "close-auto-expanded-row" () 1700 11 ("set!" "auto-collapse" "auto-expanded-row" "when")}
        {Lisp-Entry "set-auto-expanded-row" () 1707 18 ("auto-expanded-row" "set!" "row")}
        {Lisp-Entry "set-dynamic" () 1711 18 ("node-column" "control-rect" "invalidate-rect" "row-top" "top" "row-rank" "rank" "let*" "set-state" "dynamic" "get-state" "/=" "when" "row")}
        {Lisp-Entry "ensure-displayed" () 1724 11 ("selection-row" "ensure-row-displayed" "car" "ensure-cell-displayed" "cell" "selection-mode" "=" "if" "selection" "not-null?" "when" "rest")}
        {Lisp-Entry "ensure-cell-displayed" () 1731 11 ("get-scroll-context" "scroll-needed" "scroll" "rect-position" "pos" "cell-rect" "rect" "let*" "cell")}
        {Lisp-Entry "process-selection" () 1743 18 ("delay-selection" "selection-manager" "allow-start-drag?" "last" "car" "null?" "when" "cons" "equal?" "test:" "remove" "" "1" "+" "naturals" ">" "0" "either" "pivot" "=" "true" "user-origin?:" "false" "set-pivot?:" "list" "set-selection" "selection" "member?" "unless" "selection-pivot" "set!" "cond" "or" "multiple-selection?" "and" "if" "get-row" "else" "selection-mode" "case" "element" "let" "control?" "shift?" "cell")}
        {Lisp-Entry "get-selection" () 1770 18 ("selection")}
        {Lisp-Entry "get-ordered-selection" () 1774 18 ("selection" "" "sort")}
        {Lisp-Entry "set-selection" () 1778 18 ("ensure-displayed" "end-delayed?" "ensure-displayed?" "auto-select" "true" ":auto-toggle?" "auto-expand/collapse" "multiple-selection?" "auto-expand?" "auto-expand/collapse?" "and" "selection-row" "get-row" "essay" "auto-row" "user-origin?" "force?" "selection-change" "generate-event?" "invalidate-selection" "not-null?" "car" "null?" "if" "selection-pivot" "set-pivot?" "set!" "selection" "old-selection" "let" "change-selection?" "when" "locator" "reset" "selection-manager" "locked?" "unless" "sel")}
        {Lisp-Entry "selection-change" () 1808 29 ("selection" "call-selection-handler" "dynamic" "function" "selection-manager" "with-locked-operation" "user-origin?" "force?" "old-selection")}
        {Lisp-Entry "remember-selection" () 1814 11 ("else" "get-selection" "get-col" "cons" "map" "cell" "selection-mode" "get-user-data" "dynamic" "function" "data" "identity" "rank" "get-row" "row" "case" "proc" "let" "use")}
        {Lisp-Entry "restore-selection" () 1826 11 ("else" "Cell" "new" "when" "col" "bind" "pair" "map" "cell" "selection-mode" "remove-nils" "test:" "user-data-index" "dynamic" "function" "data" "identity" "rank" "row-rank" "row" "case" "proc" "let" "test" "saved-sel" "use")}
        {Lisp-Entry "with-preserved-selection" () 1842 18 (":auto-expand?" ":ensure-displayed?" "row-rank" "set-row" "edited-cell" "get-row" "neq?" "cell-editor" "get-parent" "edition-row" "in-edition?" "when" "restore-selection" "selection" "set-selection" "remember-selection" "saved-sel" "let" "false" "generate-event?" "generate-event?:" "true" "ensure-displayed?" "ensure-displayed?:" "eqv?" "test" "test:" "row" "use" "use:" "proc")}
        {Lisp-Entry "get-single-selection" () 1854 18 ("car" "selection" "null?" "if")}
        {Lisp-Entry "set-single-selection" () 1860 18 ("list" "set-selection" "apply" "Cell" "is?" "integer?" "or" "assert" "rest" "sel")}
        {Lisp-Entry "auto-select-first" () 1865 18 ("list" "set-selection" "0" "get-visible-count" ">" "selection" "null?" "and" "when")}
        {Lisp-Entry "selected-row-proc" () 1870 11 ("else" "get-row" "function" "cell" "selection-mode" "case")}
        {Lisp-Entry "get-selected-row" () 1877 18 ("selected-row-proc" "not-null?" "when" "get-single-selection" "selection" "let")}
        {Lisp-Entry "get-selected-rows" () 1883 18 ("selection" "selected-row-proc" "map")}
        {Lisp-Entry "get-selected-data" () 1887 18 ("get-selected-rows" "get-user-data" "row" "dynamic" "function" "map")}
        {Lisp-Entry "get-single-selected-data" () 1893 18 ("get-user-data" "when" "get-selected-row" "row" "let")}
        {Lisp-Entry "get-selection-data" () 1899 18 ("get-user-data" "get-row" "row" "let" "n" "dynamic" "function" "map" "selection")}
        {Lisp-Entry "with-deleted-selection" () 1906 18 ("set-single-selection" "1" "-" "previous" "0" ">" "when" "set-selection" "length" "=" "and" "if" "user-data-index" "map" "remove-nils" "sel" "generic-min" "apply" "smallest" "get-selection-data" "essay" "data" "let" "false" "can-survive?" "can-survive?:" "proc" "selection")}
        {Lisp-Entry "selection->rows" () 1918 11 ("else" "get-col" "get-row" "get-visible-row" "cons" "dynamic" "function" "map" "cell" "selection-mode" "case" "selection")}
        {Lisp-Entry "rows->selection" () 1928 11 ("else" "row-index" "Cell" "new" "col" "row" "bind" "pair" "dynamic" "function" "map" "remove-nils" "cell" "selection-mode" "case" "rows")}
        {Lisp-Entry "added-update-selection" () 1940 11 ("selection" "for-each-pair" "let" "else" "get-col" "Cell" "new" "set-car!" "r" "car" "let*" "pair" "dynamic" "function" "cell" "selection-mode" "case" "proc" "with" "+" "set-row" "get-row" ">=" "edited-cell" "and" "when" "count" "rank")}
        {Lisp-Entry "removed-update-selection" () 1958 11 ("false" "car" "essay" "either" "collect" "selection" "else" "cons" "set!" "get-col" "Cell" "new" "+" ">" "" "if" "r" "dynamic" "function" "cell" "selection-mode" "case" "proc" "with" "removed" "let" "-" "set-row" "get-row" ">=" "edited-cell" "and" "when" "count" "rank")}
        {Lisp-Entry "selection-region" () 1984 11 ("or" "combine!" "selection-element-region" "row-region" "with-closed" "in" "element" "for" "loop" "Region" "new" "region" "let" "sc" "dv" "dh" "sel")}
        {Lisp-Entry "selection-element-region" () 1992 11 ("selection-row-region" "else" "cell-rect" "acquire-delta" "rect:" "Region" "new" "cell" "selection-mode" "case" "sc" "dv" "dh" "element")}
        {Lisp-Entry "selection-row-rect" () 1998 11 ("get-height" "+" "3" "-" "Rect" "new" "columns-right" "right" "get-position" "get-v" "top" "node-column" "row-text-left" "left" "get-row" "row" "let*" "n")}
        {Lisp-Entry "selection-row" () 2006 11 ("else" "get-row" "cell" "selection-mode" "case" "element")}
        {Lisp-Entry "cell-visible?" () 2017 18 ("get-columns-count" "get-col" "visible-count" "get-row" "" "and" "cell")}
        {Lisp-Entry "borders-left" () 2027 11 ("car" "borders")}
        {Lisp-Entry "borders-right" () 2031 11 ("cdr" "borders")}
        {Lisp-Entry "borders-width" () 2035 11 ("borders-left" "borders-right" "-" "borders")}
        {Lisp-Entry "get-borders" () 2039 18 ("columns-borders" "element" "col")}
        {Lisp-Entry "column-width" () 2043 18 ("-" "get-borders" "right" "left" "bind" "col")}
        {Lisp-Entry "row-rect" () 2054 11 ("get-height" "+" "Rect" "new" "columns-right" "right" "get-position" "get-v" "top" "columns-borders" "car" "borders-left" "left" "get-row" "row" "let*" "n")}
        {Lisp-Entry "cell-position" () 2062 18 ("get-top" "get-left" "Point" "new" "cell-rect" "rect" "let" "cell")}
        {Lisp-Entry "cell-rect" () 2067 18 ("get-height" "+" "borders-right" "borders-left" "Rect" "new" "get-position" "get-v" "top" "get-row" "row" "get-col" "get-borders" "borders" "let*" "cell")}
        {Lisp-Entry "cell-region" () 2074 18 ("cell-rect" "rect:" "Region" "new" "cell")}
        {Lisp-Entry "cell-content-rect" () 2078 11 ("get-height" "get-column" "content-rect" "offset-rect" "borders-left" "left" "get-borders" "borders" "column-width" "width" "get-cell-data" "get-position" "get-v" "top" "row" "get-col" "col" "get-row" "n" "let*" "cell")}
        {Lisp-Entry "cell-text-rect" () 2090 11 ("0" "false" "get-height" "get-column" "text-rect" "offset-rect" "get-node-column-index" "column-width" "width" "get-cell-data" "get-position" "get-v" "top" "row" "get-col" "col" "get-row" "n" "let*" "cell")}
        {Lisp-Entry "view->tree" () 2100 18 ("cell-visible?" "Cell" "new" "cell" "0" ">=" "and" "when" "get-h" "h->col" "col" "v->row" "default-row-height" "get-v" "/" "floor" "if" "row" "let" "uniform-height?" "uniform-height?:" "false" "any?" "any?:" "pos")}
        {Lisp-Entry "view->tree-extended" () 2112 18 ("values" "cell-visible?" "Cell" "new" "cell" "0" ">=" "and" "get-h" "h->col" "col" "height" "v" "row" "receive" "when" "get-v" "v->row-extended" "info" "let" "pos")}
        {Lisp-Entry "tree->view" () 2123 18 ("get-row" "row->v" "get-col" "col->h" "Point" "new" "cell")}
        {Lisp-Entry "h->col" () 2129 18 ("/=" "" ">=" "and" "when" "right" "left" "bind" "get-columns-count" "below" "0" "from" "n" "columns-borders" "in" "borders" "for" "loop" "return" "lambda" "call/ec" "h")}
        {Lisp-Entry "col->h" () 2140 11 ("get-borders" "borders-left" "n")}
        {Lisp-Entry "in-edition?" () 2149 18 ("edited-cell")}
        {Lisp-Entry "get-edited-cell" () 2153 18 ("edited-cell")}
        {Lisp-Entry "edit-cell" () 2157 18 ("close-cell-editor?" "cell-editor" "edited-cell" "set!" "invalidate-rect" "get-top" "-" "offset-rect" "expand-rect" "set-bounds" "replace-cell" "list" "children:" ":edition-end-proc" "get-cell-data" ":preserved-data" ":draw-preserved?" "get-v" "get-h" "get-left" "+" ":location" "Tree-Cell-View" "new" "view" "cell-editor-rect" "bounds" "let" "layout-scrollee-content" "update-displayed" "update-locked?" "get-row" "ensure-row-exists" "end-edition" "get-columns-count" "get-col" "" "when" "end-proc" "end-proc:" "true" "close-editor?" "close-editor?:" "false" "draw-preserved?" "draw-preserved?:" "0" "Point" "location" "location:" "editor" "editor:" "cell")}
        {Lisp-Entry "end-edition" () 2181 18 ("invalidate-rect" "set!" "cell" "set-parent" "close" "close-cell-editor?" "if" "get-preserved-data" "replace-cell" "cell-editor" "get-edition-end-proc" "end-proc" "cell-editor-rect" "bounds" "let" "edited-cell" "when")}
        {Lisp-Entry "replace-cell" () 2197 18 ("get-col" "get-row" "replace-child" "child" "cell")}
        {Lisp-Entry "cell-editor-rect" () 2201 11 ("offset-rect" "get-height" "content-rect" "rect" "get-level" "text-h" "h" "borders-left" "left" "get-borders" "borders" "get-width" "column-width" "show-header?" "if" "width" "get-cell-data" "get-position" "get-v" "top" "get-column" "column" "row" "get-col" "col" "get-row" "n" "let*" "cell")}
        {Lisp-Entry "select-up" () 2216 26 ("Cell" "new" "select-cell" "end-edition" "0" ">=" "when" "get-col" "col" "1" "get-row" "-" "row" "let" "cell")}
        {Lisp-Entry "select-down" () 2224 26 ("Cell" "new" "select-cell" "end-edition" "get-visible-count" "" "not" "or" "when" "get-col" "col" "1" "get-row" "+" "row" "let" "true" "validate?" "cell")}
        {Lisp-Entry "select-left" () 2232 26 ("Cell" "new" "select-cell" "end-edition" "0" ">=" "when" "1" "get-col" "-" "col" "get-row" "row" "let" "cell")}
        {Lisp-Entry "select-right" () 2240 26 ("Cell" "new" "select-cell" "end-edition" "get-columns-count" "" "when" "1" "get-col" "+" "col" "get-row" "row" "let" "cell")}
        {Lisp-Entry "select-cell" () 2248 26 ("get-row" "set-single-selection" "cell")}
        {Lisp-Entry "get-class-image" () 2258 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 2263 16 ("nextmethod" "else" "reorderable?" "column-spacing" "filled-column" "cell-background" "auto-expand/collapse?" "show-unfocused-selection?" "can-select-empty?" "multiple-selection?" "selection-mode" "show-header?" "portfolio" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 2279 11 ("nextmethod" "else" "Boolean-Row" "new" "reorderable?" "auto-expand/collapse?" "show-unfocused-selection?" "can-select-empty?" "multiple-selection?" "show-header?" "field-name" "case" "property")}
        {Lisp-Entry "debug-view" () 2291 11 ("set-%u" "set-%r" "set-%p" "set-%o" "set-%n" "set-%d" "Development" "set-%c" "get-cell-data" "data" "get-debugged" "part" "receive" "get-user-data" "user-data" "get-children" "car" "node" "get-row" "row" "get-col" "get-column" "column" "cell-coordinates" "pos" "let*" "when" "view->tree" "cell" "let" "nextmethod" "view")}
        {Lisp-Entry "describe-view" () 2312 11 ("get-image" "columns-right" "columns-borders" "node-column" "list" "get-cell-data" "data" "get-debugged" "part" "receive" "get-user-data" "user-data" "get-children" "car" "node" "get-row" "row" "get-col" "get-column" "column" "cell-coordinates" "pos" "let*" "when" "view->tree" "cell" "let" "nextmethod" "append" "view")}}
      {Lisp-Entry "Tree-Locator" () 2336 7 ("Locator")}
      {Lisp-Entry "Tree-Locator" () 2342 7 ("Locator")
        {Lisp-Entry "column" () 2345 8 ()}
        {Lisp-Entry "iterate" () 2348 11 ("true" ":wrap?" "get-next" "prefix" "if" "when" "start:" "get-title" "title" "node" "let*" "rank" "dynamic" "function" "for-each-visible-row" "prepare-iterate" "proc2" "row" "bind" "proc")}
        {Lisp-Entry "select" () 2359 11 ("else" "column" "Cell" "new" "set-single-selection" "cell" "selection-mode" "case" "rank")}
        {Lisp-Entry "prepare-iterate" () 2365 11 ("car" "else" "get-children" "element" "row" "dynamic" "function" "get-row" "essay" "cons" "0" "get-col" "if" "column" "set!" "cell" "selection-mode" "case" "get-single-selection" "sel" "let")}}}})
"Tree-Widget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "widget" "Tree-Widget.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.widget.Tree-Widget" () 37 9 ("jazz")
      {Lisp-Entry "Tree-Widget" () 47 7 ("width:" "title:" ":icons" "portfolio:" "top-tree" "top-head" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "document" "top-scroll" "entry" "style:" "edge" "border-type:" "first" "location:" "Dimension" "size:" "descendants-border" "name:" "Outline-View")}}})
"Type-Extractor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "registry" "Type-Extractor.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.registry.Type-Extractor" () 42 9 ("jazz")
      {Lisp-Entry "Type-Extractor" () 50 7 ("WinIDL" "COM" "System" "Utilities" "Object")
        {Lisp-Entry "library" () 53 8 ()}
        {Lisp-Entry "name" () 54 8 ()}
        {Lisp-Entry "coclasses?" () 55 8 ()}
        {Lisp-Entry "pure-dispatch?" () 56 8 ()}
        {Lisp-Entry "to-emit" () 57 8 ()}
        {Lisp-Entry "emited" () 58 8 ()}
        {Lisp-Entry "waiting" () 59 8 ()}
        {Lisp-Entry "initialize" () 62 11 ("pure-dispatch?~self" "coclasses?~self" "name~self" "library~self" "set!" "nextmethod" "pure-dispatch?" "pure-dispatch?:" "false" "coclasses?" "coclasses?:" "default-name" "name" "name:" "library" "library:")}
        {Lisp-Entry "default-name" () 70 11 ("get-name" "lib")}
        {Lisp-Entry "extract" () 74 18 ("emit-package-footer" "emit-library-types" "emit-package-header" "format" "name" "output-header" "File-Printer" "new" "printer" "with-closed" "activity" "activity:" "file")}
        {Lisp-Entry "emit-package-header" () 88 11 ("name" "format" "printer")}
        {Lisp-Entry "emit-package-footer" () 92 11 ("format" "printer")}
        {Lisp-Entry "emit-section-header" () 96 11 ("format" "printer" "section-name")}
        {Lisp-Entry "emit-library-types" () 103 11 ("debug" "not-null?" "emit-type-information" "info" "dynamic" "function" "for-each" "length" "0" "Range" "new" "set-range" "when" "waiting" "emited" "info-name" "map" "to-emit" "set!" "library" "get-types" "types" "let" "activity" "printer")}
        {Lisp-Entry "emit-type-information" () 117 11 ("1" "delta-pos" "emit-waiting" "emited" "emit-type-info" "cons" "waiting" "set!" "waiting-implemented" "waiting-upon" "user-message" "when" "get-name" "name" "let" "throw-cancel" "cancel-requested?" "and" "if" "activity" "printer" "info")}
        {Lisp-Entry "emit-waiting" () 133 11 ("remove!" "waiting" "cons" "set!" "emit-type-information" "emited" "every?" "member?" "and" "when" "names" "info" "bind" "pair" "dynamic" "function" "for-each" "processed" "let" "activity" "printer" "name")}
        {Lisp-Entry "waiting-implemented" () 149 11 ("get-implemented-types" "emited" "not" "to-emit" "member?" "and" "when" "get-name" "name" "let" "dynamic" "function" "collect" "info")}
        {Lisp-Entry "emit-type-info" () 158 11 ("error" "else" "emit-max" "TKIND_MAX" "emit-union" "TKIND_UNION" "emit-alias" "TKIND_ALIAS" "emit-coclass" "TKIND_COCLASS" "emit-dispatch" "TKIND_DISPATCH" "emit-interface" "TKIND_INTERFACE" "emit-package" "TKIND_MODULE" "emit-record" "TKIND_RECORD" "emit-enum" "TKIND_ENUM" "ecase" "get-kind" "kind" "let" "printer" "info")}
        {Lisp-Entry "emit-enum" () 173 11 ("emit-variables" "null?" "if" "format" "emit-section-header" "get-variables" "variables" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-record" () 184 11 ("emit-variables" "null?" "if" "format" "emit-section-header" "get-variables" "variables" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-package" () 195 11 ("format" "emit-section-header" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-interface" () 201 11 ("coexternal" "emit-functions" "false" "intern-type" "type-name" "either" "final-typedesc" "TYPEDESC" "coerce" "essay" "ptr-typedesc" "VT_PTR" "=" "pointer?" "vt" "type" "tdesc" "elemdescVar" "get" "typedesc" "get-member-name" "desc" "dynamic" "function" "for-each" "or" "when" "pure-dispatch?" "if" "format" "emit-section-header" "car" "ascendant" "get-implemented-types" "interfaces" "get-functions" "functions" "get-variables" "variables" "get-guid" "guid" "get-name" "name" "let*" "printer" "info")}
        {Lisp-Entry "emit-dispatch" () 227 11 ("emit-interface" "printer" "info")}
        {Lisp-Entry "emit-coclass" () 231 11 ("essay" "comethod" "emit-functions" "set!" "get-functions" "functions" "tail" "interface" "bind" "pair" "dynamic" "function" "for-each-pair" "null?" "names" "let" "begin" "and" "else" "car" "1" "0" "length" "case" "coclasses?" "if" "format" "emit-section-header" "info-name" "map" "interface-names" "get-implemented-types" "interfaces" "get-guid" "guid" "get-name" "name" "let*" "printer" "info")}
        {Lisp-Entry "emit-alias" () 258 11 ("list" "cons" "waiting" "set!" "emit-alias-code" "emited" "member?" "if" "desc" "tdescAlias" "get-attr" "get" "get-referenced-type" "aliased" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-alias-code" () 266 11 ("format" "emit-section-header" "printer" "aliased" "name")}
        {Lisp-Entry "emit-union" () 273 11 ("format" "emit-section-header" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-max" () 281 11 ("format" "emit-section-header" "get-name" "name" "let" "printer" "info")}
        {Lisp-Entry "emit-functions" () 287 11 ("cons" "set!" "essay" "emit-function" "memq?" "not" "invkind" "get" "effective-name" "effective" "get-member-name" "name" "let*" "tail" "desc" "bind" "pair" "dynamic" "function" "for-each-pair" "format" "when" "null?" "if" "trailer" "printer" "modifiers" "header" "functions" "names" "info")}
        {Lisp-Entry "emit-function" () 302 11 ("reverse!" "VARENUM" "value->name" "item" "map" "cParams" "0" "naturals" "or" "eq?" "and" "parameter-direction" "param-direction" "param-type-name" "interface-kind?" "if" "param-pointer?" "get-referenced-type" "VT_USERDEFINED" "param-referenced" "param-typedesc" "param-type" "ptr-ptr-type" "ptr-ptr-typedesc" "ptr-pointer?" "ptr-type" "ptr-typedesc" "pointer?" "type" "typedesc" "array-ref" "param" "n" "dynamic" "function" "for-each" "get-function-parameters" "params" "let" "cons" "set!" "unpl" "when" "format" "intern-type" "return-type-name" "either" "final-return-typedesc" "TYPEDESC" "coerce" "essay" "ptr-return-typedesc" "VT_PTR" "=" "return-pointer?" "vt" "return-type" "tdesc" "elemdescFunc" "get" "return-typedesc" "unimplemented" "let*" "equal?" "test:" "member?" "unless" "trailer" "printer" "modifiers" "header" "desc" "effective" "info")}
        {Lisp-Entry "interface-kind?" () 355 11 ("TKIND_COCLASS" "TKIND_DISPATCH" "TKIND_INTERFACE" "=" "or" "get-kind" "kind" "let" "when" "info")}
        {Lisp-Entry "effective-name" () 363 11 ("putref-name" "INVOKE_PROPERTYPUTREF" "put-name" "INVOKE_PROPERTYPUT" "get-name" "INVOKE_PROPERTYGET" "INVOKE_FUNC" "ecase" "name" "kind")}
        {Lisp-Entry "get-name" () 371 11 ("append" "string->symbol" "name")}
        {Lisp-Entry "put-name" () 375 11 ("append" "string->symbol" "name")}
        {Lisp-Entry "putref-name" () 379 11 ("append" "string->symbol" "name")}
        {Lisp-Entry "parameter-direction" () 383 11 ("error" "else" "or" "cond" "not" "and" "unspecified?" "IDLFLAG_FOUT" "out?" "IDLFLAG_FIN" "mask-bit-set?" "in?" "wIDLFlags" "idldesc" "get" "flags" "let*" "param")}
        {Lisp-Entry "emit-variables" () 394 11 ("essay" "emit-variable" "tail" "desc" "bind" "pair" "dynamic" "function" "for-each-pair" "format" "when" "null?" "if" "trailer" "printer" "variables" "info")}
        {Lisp-Entry "emit-variable" () 404 11 ("VARENUM" "value->name" "unpl" "=" "and" "when" "TKIND_RECORD" "read-variant" "TKIND_ENUM" "ecase" "format" "false" "intern-type" "variable-type-name" "lpvarValue" "value" "vt" "basetype" "tdesc" "elemdescVar" "get" "typedesc" "get-member-name" "name" "get-kind" "kind" "let*" "trailer" "printer" "desc" "info")}
        {Lisp-Entry "info-name" () 421 11 ("get-name" "info")}
        {Lisp-Entry "intern-type" () 430 11 ("cdr" "format" "car" "pair?" "name" "idl-type-info" "let*" "get-name" "add-modifier" "get-referenced-type" "referenced" "VT_USERDEFINED" "=" "if" "vt" "get" "type" "true" "debug?" "let" "pointer?" "desc" "info")}
        {Lisp-Entry "idl-type-info" () 444 11 ("VARENUM" "value->name" "error" "else" "VT_LPWSTR" "VT_LPSTR" "VT_CY" "VT_SAFEARRAY" "VT_DISPATCH" "VT_UNKNOWN" "VT_USERDEFINED" "VT_DATE" "VT_VARIANT" "VT_BSTR" "VT_CARRAY" "cons" "VT_PTR" "VT_HRESULT" "VT_BOOL" "VT_INT" "VT_R8" "VT_R4" "VT_I4" "VT_I2" "VT_I1" "VT_UINT" "VT_UI4" "VT_UI2" "VT_UI1" "VT_VOID" "ecase" "type")}
        {Lisp-Entry "add-modifier" () 474 11 ("format" "if" "pointer?" "name")}}}})
"Type-Info"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "registry" "Type-Info.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.registry.Type-Info" () 37 9 ("jazz")
      {Lisp-Entry "Type-Info" () 44 7 ("WinIDL" "WinKernel" "System" "Utilities" "Object")
        {Lisp-Entry "handle" () 47 8 ()}
        {Lisp-Entry "attr" () 48 8 ()}
        {Lisp-Entry "functions" () 49 8 ()}
        {Lisp-Entry "variables" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("destroy-mandatory" "load-variables" "variables" "load-functions" "functions" "TYPEATTR" "get-type-attr" "coerce" "attr" "handle" "set!" "nextmethod" "h")}
        {Lisp-Entry "destroy" () 62 11 ("nextmethod" "release-type-info" "attr" "record-address" "handle" "release-type-attr" "release-variables" "release-functions")}
        {Lisp-Entry "load-functions" () 70 11 ("cFuncs" "attr" "get" "0" "naturals" "FUNCDESC" "handle" "get-type-info-func-desc" "coerce" "i" "dynamic" "function" "map")}
        {Lisp-Entry "load-variables" () 76 11 ("cVars" "attr" "get" "0" "naturals" "VARDESC" "handle" "get-type-info-var-desc" "coerce" "n" "dynamic" "function" "map")}
        {Lisp-Entry "release-functions" () 82 11 ("functions" "record-address" "handle" "release-func-desc" "desc" "dynamic" "function" "for-each")}
        {Lisp-Entry "release-variables" () 88 11 ("variables" "record-address" "handle" "release-var-desc" "desc" "dynamic" "function" "for-each")}
        {Lisp-Entry "get-handle" () 94 18 ("handle")}
        {Lisp-Entry "get-attr" () 98 18 ("attr")}
        {Lisp-Entry "get-name" () 102 18 ("handle" "get-type-info-name")}
        {Lisp-Entry "get-doc" () 106 18 ("handle" "get-type-info-doc")}
        {Lisp-Entry "get-kind" () 110 18 ("typekind" "attr" "get")}
        {Lisp-Entry "get-guid" () 114 18 ("guid" "attr" "get" "record-address" "GUID" "new")}
        {Lisp-Entry "get-functions" () 118 18 ("functions")}
        {Lisp-Entry "get-variables" () 122 18 ("variables")}
        {Lisp-Entry "get-referenced-type" () 126 18 ("Type-Info" "new" "0" "/=" "when" "handle" "get-type-info-referenced-type" "hnd" "let" "href")}
        {Lisp-Entry "get-implemented-type" () 132 18 ("Type-Info" "new" "0" "/=" "when" "handle" "get-type-info-implemented-type" "hnd" "let" "n")}
        {Lisp-Entry "get-nb-implemented-types" () 138 18 ("cImplTypes" "attr" "get")}
        {Lisp-Entry "get-implemented-types" () 142 18 ("get-nb-implemented-types" "0" "naturals" "get-implemented-type" "map")}
        {Lisp-Entry "get-member-name" () 146 18 ("memid" "get" "handle" "get-type-info-name" "desc")}
        {Lisp-Entry "get-member-doc" () 150 18 ("memid" "get" "handle" "get-type-info-doc" "desc")}
        {Lisp-Entry "get-function-parameters" () 154 18 ("lprgelemdescParam" "cParams" "get" "ELEMDESC" "new-array-from-memory" "desc")}}}})
"Type-Lib"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "registry" "Type-Lib.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.registry.Type-Lib" () 37 9 ("jazz")
      {Lisp-Entry "Type-Lib" () 44 7 ("WinIDL" "WinKernel" "WinNT" "System" "Utilities" "Object")
        {Lisp-Entry "file" () 47 8 ()}
        {Lisp-Entry "guid" () 48 8 ()}
        {Lisp-Entry "major-version" () 49 8 ()}
        {Lisp-Entry "minor-version" () 50 8 ()}
        {Lisp-Entry "language-id" () 51 8 ()}
        {Lisp-Entry "handle" () 52 8 ()}
        {Lisp-Entry "attr" () 53 8 ()}
        {Lisp-Entry "initialize" () 56 11 ("destroy-mandatory" "set-guid" "set-file" "cond" "nextmethod" "language-id" "language-id:" "minor-version" "minor-version:" "major-version" "major-version:" "guid" "guid:" "file" "file:")}
        {Lisp-Entry "destroy" () 63 11 ("nextmethod" "release-type-lib" "set!" "record-address" "handle" "release-lib-attr" "attr" "when")}
        {Lisp-Entry "register" () 73 18 ("handle" "register-type-lib" "error" "file" "null?" "if")}
        {Lisp-Entry "get-file" () 79 18 ("file")}
        {Lisp-Entry "set-file" () 83 18 ("TLIBATTR" "get-lib-attr" "coerce" "attr" "load-type-lib" "handle" "file" "set!" "f")}
        {Lisp-Entry "get-guid" () 89 18 ("guid")}
        {Lisp-Entry "set-guid" () 93 18 ("TLIBATTR" "get-lib-attr" "coerce" "attr" "load-reg-type-lib" "handle" "language-id" "minor-version" "major-version" "guid" "set!" "li" "mi" "ma" "g")}
        {Lisp-Entry "get-handle" () 102 18 ("handle")}
        {Lisp-Entry "get-attr" () 106 18 ("attr")}
        {Lisp-Entry "get-name" () 110 18 ("handle" "get-type-lib-name")}
        {Lisp-Entry "get-doc" () 114 18 ("handle" "get-type-lib-doc")}
        {Lisp-Entry "get-lib-guid" () 118 18 ("guid" "attr" "get" "record-address" "GUID" "new")}
        {Lisp-Entry "get-lib-file" () 122 18 ("error" "file" "either")}
        {Lisp-Entry "get-types" () 126 18 ("get-output" "get-type-info-count" "0" "naturals" "get-implemented-type" "either" "put" "TKIND_DISPATCH" "get-kind" "=" "if" "get-name" "member?" "not" "when" "handle" "get-type-info" "Type-Info" "info" "n" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let")}}}})
"Type-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "registry" "Type-Viewer.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.registry.Type-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "Type-Viewer" () 50 7 ("Code" "Font" "font:" "Default" "Text-Style" "default-style:" "descr" "second" "descr-border" "width:" "on-selection-change" "selection-handler:" "Axis" "sons-class:" "library" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "first" "library-border" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "center" "splitter" "on-browse" "tail" "title:" "browse" "on-generate" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "generate" "0" "6" "1" "Rect" "layout-insets:" "flow" "north" "location:" "toolbar" "name:" "border" "layout-type:" "Dimension" "size:" "WinIDL" "COM" "System" "Development" "Utilities" "Layout-View")
        {Lisp-Entry "library" () 53 8 ()}
        {Lisp-Entry "singleton" () 74 23 ("new-frame" "Type-Viewer" "get-stage" "find-host" "either")}
        {Lisp-Entry "destroy" () 79 11 ("nextmethod" "library" "set!")}
        {Lisp-Entry "frame-icon" () 90 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 95 16 ()}
        {Lisp-Entry "frame-position" () 100 16 ("Point")}
        {Lisp-Entry "frame-size" () 105 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 109 11 ("home")}
        {Lisp-Entry "on-generate" () 118 11 ("extract" ":pure-dispatch?" ":library" "Type-Extractor" "new" "extractor" "shift-down?" "pure-dispatch?" "extensions:" ":default-extension" ":initial-filename" "SaveFile-Dialog" "get-modal" "file" "get-name" "name" "let*" "bell" "library" "null?" "if" "evt")}
        {Lisp-Entry "on-browse" () 128 11 ("extensions:" "OpenFile-Dialog" "get-modal" "view-file" "evt")}
        {Lisp-Entry "on-selection-change" () 132 11 ("get-row" "get-user-data" "library" "describe-item" "null?" "if" "get-single-selection" "selection" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "view-file" () 140 18 ("file:" "Type-Lib" "new" "view-library" "file")}
        {Lisp-Entry "view-registered-library" () 144 18 (":language-id" ":minor-version" ":major-version" "guid:" "Type-Lib" "new" "view-library" "li" "mi" "ma" "g")}
        {Lisp-Entry "view-library" () 148 18 ("describe-item" "insert-library" "remove-every-row" "with-update-locked" "locate" "tree" "let" "library" "set!" "dynamic" "function" ":wait" "with-cursor" "lib")}
        {Lisp-Entry "insert-library" () 165 11 ("get-types" "insert-info" "info" "dynamic" "function" "for-each" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "add-row" "node" "library" "get-name" "title" "let*" "tree")}
        {Lisp-Entry "insert-info" () 173 11 ("user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "dynamic" "state:" "father:" "add-row" "else" "TKIND_UNION" "TKIND_ALIAS" "TKIND_DISPATCH" "TKIND_INTERFACE" "TKIND_COCLASS" "TKIND_RECORD" "Bitmap-Resource" "TKIND_ENUM" "ecase" "icon" "get-kind" "kind" "get-doc" "doc" "get-name" "name" "let*" "node" "tree" "info")}
        {Lisp-Entry "update-info-row" () 189 11 ("get-variables" "insert-variable" "get-functions" "insert-function" "desc" "dynamic" "function" "for-each" "get-user-data" "info" "get-parent" "tree" "let" "row")}
        {Lisp-Entry "insert-function" () 200 11 ("cons" "user-data:" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "father:" "add-row" "else" "INVOKE_PROPERTYPUTREF" "INVOKE_PROPERTYPUT" "INVOKE_PROPERTYGET" "Bitmap-Resource" "INVOKE_FUNC" "invkind" "get" "ecase" "icon" "get-member-name" "name" "let" "node" "tree" "desc" "info")}
        {Lisp-Entry "insert-variable" () 211 11 ("cons" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "state:" "father:" "add-row" "get-member-name" "name" "let" "node" "tree" "desc" "info")}
        {Lisp-Entry "describe-item" () 221 11 ("get-output" "set-content" "describe-member" "else" "describe-info" "Type-Info" "describe-lib" "Type-Lib" "typecase" "List-Factory" "new" "fact" "descr" "locate" "text" "let" "when" "item")}
        {Lisp-Entry "describe-lib" () 232 11 ("get-lib-file" "get-lib-guid" "get-doc" "get-name" "format" "put" "fact" "item")}
        {Lisp-Entry "describe-info" () 240 11 ("get-implemented-types" "info" "dynamic" "function" "map" "get-guid" "get-kind" "TYPEKIND" "value->name" "get-doc" "get-name" "format" "put" "fact" "item")}
        {Lisp-Entry "describe-member" () 248 11 ("describe-variable" "VARDESC" "describe-function" "FUNCDESC" "typecase" "desc" "info" "bind" "fact" "item")}
        {Lisp-Entry "describe-function" () 255 11 ("0" "naturals" "get-name" "get-referenced-type" "referenced" "ptr-ptr-type" "ptr-ptr-typedesc" "when" "make-string" "length" "-" "1" "max" "padding" "param-type-name" "ptr-type" "TYPEDESC" "coerce" "essay" "ptr-typedesc" "VT_USERDEFINED" "user?" "VT_PTR" "=" "pointer?" "parameter-direction" "direction" "vt" "type" "typedesc" "array-ref" "param" "let*" "n" "dynamic" "function" "for-each" "get-function-parameters" "params" "let" "tdesc" "elemdescFunc" "describe-type" "cParamsOpt" "cParams" "oVft" "callconv" "CALLCONV" "invkind" "INVOKEKIND" "funckind" "get" "FUNCKIND" "value->name" "format" "put" "fact" "desc" "info")}
        {Lisp-Entry "describe-type" () 289 11 ("VARENUM" "value->name" "get-name" "get-referenced-type" "referenced" "VT_USERDEFINED" "=" "if" "vt" "get" "type" "let" "desc" "info")}
        {Lisp-Entry "parameter-direction" () 297 11 ("error" "else" "or" "cond" "not" "and" "unspecified?" "IDLFLAG_FOUT" "out?" "IDLFLAG_FIN" "mask-bit-set?" "in?" "wIDLFlags" "idldesc" "get" "flags" "let*" "param")}
        {Lisp-Entry "describe-variable" () 308 11 ("TKIND_UNION" "else" "cElements" "rgbounds" "tdescElem" "ARRAYDESC" "coerce" "arraydesc" "let" "VT_CARRAY" "case" "TKIND_RECORD" "read-variant" "format" "put" "TKIND_ENUM" "ecase" "lpvarValue" "value" "describe-type" "type" "tdesc" "elemdescVar" "get" "typedesc" "get-kind" "kind" "let*" "fact" "desc" "info")}}
      {Lisp-Entry "Type-Tree" () 335 7 ("Tree-View")
        {Lisp-Entry "update-row" () 338 11 ("update-info-row" "row")}}}})
"URL"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "moniker" "URL.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.moniker.URL" () 37 9 ("jazz")
      {Lisp-Entry "extract-url-name" () 45 20 ("1" "+" "subseq" "null?" "if" "position" "return:" "true" "reversed?:" "find" "pos" "let" "url")}
      {Lisp-Entry "tokenise-url" () 52 13 ("split" "filename")}
      {Lisp-Entry "URL" () 56 7 ("Pathname")
        {Lisp-Entry "title" () 59 8 ()}
        {Lisp-Entry "initialize" () 62 11 ("title~self" "set!" "nextmethod" "title" "title:" "lst")}
        {Lisp-Entry "get-name" () 67 11 ("parse" "extract-url-name")}
        {Lisp-Entry "print" () 71 11 ("format" "dynamic" "function" "self" "print-unreadable" "nextmethod" "null?" "if" "get-title" "title" "let" "readably" "printer")}
        {Lisp-Entry "get-title" () 85 18 ("title")}
        {Lisp-Entry "split" () 95 18 ("1" "+" "values" "null?" "position" "return:" "find" "pos" "sub" "self" "error" "/=" "if" "7" "0" "subseq" "header" "parse" "url" "let*")}
        {Lisp-Entry "foldable?" () 112 11 ("true")}
        {Lisp-Entry "fold-object" () 116 11 ("get-list" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}}}})
"URL-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "URL-Row.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.row.URL-Row" () 37 9 ("jazz")
      {Lisp-Entry "URL-Row" () 46 7 ("String-Row")
        {Lisp-Entry "double-click" () 49 11 ("get-edited-value" ":url" "Explorer-View" "new-frame" "pos")}}}})
"URL-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "internet" "URL-Text-View.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.internet.URL-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "URL-Text-View" () 46 7 ("top-padding:" "2" "left-padding:" "Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "accepts-returns?:" "Plain-Text-View")
        {Lisp-Entry "default-tool?" () 53 11 ("true")}
        {Lisp-Entry "return-press" () 57 11 ("navigate" "Native" "list" "URL" "new" "url" "get-string-content" "content" "get-frame" "get-guest" "get-site" "site" "let*" "key")}}}})
"Undoer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Undoer.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.utility.Undoer" () 37 9 ("jazz")
      {Lisp-Entry "Undoer" () 44 7 ("Object")
        {Lisp-Entry "client" () 47 8 ()}
        {Lisp-Entry "undo-list" () 48 8 ()}
        {Lisp-Entry "redo-list" () 49 8 ()}
        {Lisp-Entry "undoing?" () 50 8 ("false")}
        {Lisp-Entry "redoing?" () 51 8 ("false")}
        {Lisp-Entry "atomic?" () 52 8 ("false")}
        {Lisp-Entry "atomic-actions" () 53 8 ()}
        {Lisp-Entry "save-depth" () 54 8 ("0")}
        {Lisp-Entry "initialize" () 57 11 ("client" "set!" "nextmethod" "clt")}
        {Lisp-Entry "get-client" () 67 18 ("client")}
        {Lisp-Entry "get-undo-list" () 71 18 ("undo-list")}
        {Lisp-Entry "reset-save-depth" () 75 18 ("0" "save-depth" "set!")}
        {Lisp-Entry "reset" () 79 18 ("atomic-actions" "atomic?" "redoing?" "false" "undoing?" "redo-list" "undo-list" "set!")}
        {Lisp-Entry "register-undo" () 93 18 ("false" "client" "get-controller" "set-modified?" "not" "0" "=" "and" "when" "redoing?" "unless" "increase!" "undo-list" "else" "save-depth" "decrease!" "redo-list" "undoing?" "cons" "atomic-actions" "set!" "atomic?" "cond" "action")}
        {Lisp-Entry "register-atomic-actions" () 108 11 ("play-action" "action" "for-each" "dynamic" "with-atomic-undo" "function" "register-undo" "when" "actions")}
        {Lisp-Entry "can-undo?" () 119 18 ("undo-list")}
        {Lisp-Entry "can-redo?" () 123 18 ("redo-list")}
        {Lisp-Entry "undo" () 127 18 ("cdr" "play-action" "true" "set!" "begin" "unwind-protect" "car" "action" "undoing?" "old" "let" "undo-list" "when")}
        {Lisp-Entry "redo" () 139 18 ("cdr" "play-action" "true" "set!" "begin" "unwind-protect" "car" "action" "redoing?" "old" "let" "redo-list" "when")}
        {Lisp-Entry "play-action" () 156 26 ("action")}
        {Lisp-Entry "with-atomic-undo" () 165 18 ("update-focus-actions" "get-application" "appl" "register-atomic-actions" "not" "and" "when" "actions" "atomic-actions" "true" "set!" "begin" "unwind-protect" "false" "completed?" "atomic?" "preserved" "let" "proc")}}}})
"Unknown-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "frame" "Unknown-Frame.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.debugger.frame.Unknown-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Unknown-Frame" () 45 7 ("Execution-Frame")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-image" () 57 11 ("Bitmap-Resource")}}}})
"Unresolved-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Unresolved-Error.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Unresolved-Error" () 37 9 ("jazz")
      {Lisp-Entry "Unresolved-Error" () 40 7 ("Walk-Error")
        {Lisp-Entry "symbol" () 43 8 ("generate")}}}})
"Unzip-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "compression" "Unzip-File.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.compression.Unzip-File" () 37 9 ("jazz")
      {Lisp-Entry "locate-entry" () 44 20 ("extract-name" "=" "when" "size" "entry" "dynamic" "function" "iterate-files" "return" "lambda" "call/ec" "Unzip-File" "new" "unzip" "with-closed" "jar" "name")}
      {Lisp-Entry "Unzip-File" () 55 7 ("Object")}
      {Lisp-Entry "Unzip-File" () 61 7 ("Object")
        {Lisp-Entry "handle" () 64 8 ()}
        {Lisp-Entry "initialize" () 72 11 ("destroy-mandatory" "Ansi-String" "parse" "coerce" "unzip-open" "handle" "set!" "initialize" "unimplemented" "nextmethod" "file")}
        {Lisp-Entry "destroy" () 80 11 ("nextmethod" "handle" "unzip-close")}
        {Lisp-Entry "iterate-files" () 90 18 ("goto-next-file" "while" "get-current-file-info" "size" "filename" "receive" "dynamic" "function" "let" "goto-first-file" "proc")}
        {Lisp-Entry "with-opened-current-file" () 101 18 ("close-current-file" "when" "true" "set!" "open-current-file" "begin" "unwind-protect" "false" "opened?" "let" "proc")}
        {Lisp-Entry "read-current-file-content" () 112 18 ("read-current-file" "dynamic" "function" "with-opened-current-file" "size:" "Ansi-String" "new" "string" "let" "get-current-file-info" "size" "filename" "receive" "read-current-file-content" "unimplemented")}
        {Lisp-Entry "read-current-file-block-content" () 123 18 ("read-current-file" "dynamic" "function" "with-opened-current-file" "size:" "Heap-Block" "new" "block" "let" "get-current-file-info" "size" "filename" "receive" "read-current-file-block-content" "unimplemented")}
        {Lisp-Entry "read-entry-block-content" () 134 18 ("read-current-file-block-content" "locate-file" "entry")}
        {Lisp-Entry "goto-first-file" () 144 18 ("handle" "unzip-go-to-first-file")}
        {Lisp-Entry "goto-next-file" () 148 18 ("handle" "unzip-go-to-next-file")}
        {Lisp-Entry "locate-file" () 152 18 ("error" "not" "Ansi-String" "coerce" "handle" "unzip-locate-file" "or" "unless" "locate-file" "unimplemented" "true" "error?" "error?:" "filename")}
        {Lisp-Entry "get-current-file-info" () 160 18 ("handle" "unzip-get-current-file-info")}
        {Lisp-Entry "open-current-file" () 164 18 ("handle" "unzip-open-current-file")}
        {Lisp-Entry "read-current-file" () 168 18 ("handle" "unzip-read-current-file" "size" "string")}
        {Lisp-Entry "close-current-file" () 172 18 ("handle" "unzip-close-current-file")}}}})
"Updater"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "compare" "Updater.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.compare.Updater" () 37 9 ("jazz")
      {Lisp-Entry "Updater" () 44 7 ("Object")}}})
"Updater-Builder"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "compare" "Updater-Builder.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.compare.Updater-Builder" () 37 9 ("jazz")
      {Lisp-Entry "Updater-Builder" () 44 7 ("Object")
        {Lisp-Entry "zip" () 47 8 ()}
        {Lisp-Entry "actions" () 48 8 ("List-Factory" "new")}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "Zip-File" "new" "zip" "set!" "nextmethod" "file")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "zip" "close" "write-manifest")}
        {Lisp-Entry "get-actions" () 68 18 ("actions" "get-output")}
        {Lisp-Entry "write-manifest" () 77 11 ("Ansi-String" "coerce" "zip" "write-file" "actions" "get-output" "->string" "string" "let" "write-manifest" "unimplemented")}
        {Lisp-Entry "add-copy" () 89 18 ("copy" "list" "actions" "put" "dst" "src")}
        {Lisp-Entry "add-delete" () 93 18 ("delete" "list" "actions" "put" "file")}}}})
"User"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "distribution" "defaults" "User.fusion"} {Time 128366795420000000L}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "user" "User.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.user.User" () 37 9 ("jazz")
      {Lisp-Entry "User" () 45 7 ("Object")
        {Lisp-Entry "init" () 54 26 ()}
        {Lisp-Entry "finalize" () 59 26 ()}
        {Lisp-Entry "privileged-test?" () 68 26 ("true")}
        {Lisp-Entry "test" () 72 26 ()}
        {Lisp-Entry "test-shift" () 76 26 ()}
        {Lisp-Entry "test-frame" () 80 26 ()}
        {Lisp-Entry "test0" () 84 26 ()}
        {Lisp-Entry "test1" () 88 26 ()}
        {Lisp-Entry "test2" () 92 26 ()}
        {Lisp-Entry "test3" () 96 26 ()}
        {Lisp-Entry "test4" () 100 26 ()}
        {Lisp-Entry "test5" () 104 26 ()}
        {Lisp-Entry "test6" () 108 26 ()}
        {Lisp-Entry "test7" () 112 26 ()}
        {Lisp-Entry "test8" () 116 26 ()}
        {Lisp-Entry "test9" () 120 26 ()}
        {Lisp-Entry "text-macro" () 129 26 ("text")}
        {Lisp-Entry "console-command" () 138 26 ("false" "arguments" "command")}
        {Lisp-Entry "user-packages" () 142 26 ()}
        {Lisp-Entry "play-recording" () 151 26 ("false")}
        {Lisp-Entry "jdbc-drivers" () 160 26 ()}
        {Lisp-Entry "java-apidocs" () 164 26 ()}
        {Lisp-Entry "get-connection" () 173 26 ()}
        {Lisp-Entry "process-sql" () 177 26 ("request" "connection")}
        {Lisp-Entry "expand-sql" () 181 26 ("request")}
        {Lisp-Entry "sql-output-action" () 185 26 ("cell" "tree")}
        {Lisp-Entry "sql-output-menu" () 189 26 ("cell" "tree")}
        {Lisp-Entry "sql-output-tooltip" () 193 26 ("data" "cell" "tree")}
        {Lisp-Entry "extension-frame-class" () 202 26 ("ext")}
        {Lisp-Entry "get-source" () 206 26 ("class-name")}}}})
"User-Log"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "log" "User-Log.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.log.User-Log" () 37 9 ("jazz")
      {Lisp-Entry "User-Log" () 49 7 ("Log-View")
        {Lisp-Entry "external-name" () 53 16 ("user-log" "rest")}
        {Lisp-Entry "finish" () 57 11 ("separator3" "0" "8" "Dimension" "separator2" "set-size" "separator1" "close" "none" "set-border-type" "log-border" "splitter" "locate" "zoom" "nextmethod" "initargs")}
        {Lisp-Entry "palette-icon" () 72 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 77 16 ()}
        {Lisp-Entry "get-tools-view" () 86 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 90 11 ("acquire-focus" "log-tree" "locate" "tree" "let")}
        {Lisp-Entry "view-entry" () 100 11 ("node")}
        {Lisp-Entry "edit-entry" () 109 11 ("bell" "user-message" "else" "output-table" "Data-Table" "typecase" "when" "get-entry" "entry" "let" "node")}
        {Lisp-Entry "output-tables" () 120 11 ("sql" "select-workspace" "get-application" "appl" "when" "output-tables" "get-sql-console-text" "text" "let" "true" "select?" "select?:" "name" "name:" "tables")}
        {Lisp-Entry "output-table" () 129 11 ("list" "output-tables" "true" "select?" "select?:" "name" "name:" "table")}}}})
"User-Reporter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "User-Reporter.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.dialog.User-Reporter" () 37 9 ("jazz")
      {Lisp-Entry "User-Reporter" () 45 7 ("Reporter" "Object")
        {Lisp-Entry "section-title" () 48 11 ("set-message" "title")}
        {Lisp-Entry "set-message" () 52 11 ("get-application" "set-status-message" "dynamic" "function" "execute-primary" "msg")}
        {Lisp-Entry "user-message" () 58 11 ("format" "apply" "set-message" "rest" "fmt")}
        {Lisp-Entry "set-range" () 62 11 ("range")}
        {Lisp-Entry "set-pos" () 66 11 ("pos")}
        {Lisp-Entry "delta-pos" () 70 11 ("increment")}
        {Lisp-Entry "set-step" () 74 11 ("increment")}
        {Lisp-Entry "step-it" () 78 11 ()}
        {Lisp-Entry "set-done" () 82 11 ()}
        {Lisp-Entry "disable-cancel" () 86 11 ()}
        {Lisp-Entry "cancel-requested?" () 90 11 ("false")}
        {Lisp-Entry "test-cancelled" () 94 11 ()}}}})
"VSS-Repository"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "providers" "vss" "VSS-Repository.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.providers.vss.VSS-Repository" () 37 9 ("jazz")
      {Lisp-Entry "VSS-Repository" () 46 7 ("SourceSafeTypeLib" "COM" "System" "Utilities" "Exit-Listener" "Repository")
        {Lisp-Entry "ini-file" () 49 8 ()}
        {Lisp-Entry "username" () 50 8 ()}
        {Lisp-Entry "password" () 51 8 ()}
        {Lisp-Entry "database" () 52 8 ()}
        {Lisp-Entry "set-ini-file" () 55 11 ("ini-file" "set!" "if")}
        {Lisp-Entry "preferences-class" () 64 16 ("VSS-Repository-Preferences")}
        {Lisp-Entry "new-repository" () 73 16 (":base-directory" ":base-project" ":ini-file" "name:" "self" "new" "get-base-directory" "base-directory" "get-base-project" "base-project" "get-password" "get-username" "either" "get-ini-file" "ini-file" "repository-preferences" "symbol?" "if" "let*" "password" "password:" "username" "username:" "name" "pref")}
        {Lisp-Entry "initialize" () 88 11 ("destroy-mandatory" "password~self" "username~self" "ini-file~self" "set!" "nextmethod" "apply" "others" "password" "username" "ini-file" "bind-keywords" "rest")}
        {Lisp-Entry "install-initargs" () 97 11 ("password:" "password" "username:" "username" ":ini-file" "getf" "ini-file" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "connected?" () 104 11 ("database" "not-null?")}
        {Lisp-Entry "get-base-project" () 113 11 ("base-project")}
        {Lisp-Entry "set-base-project" () 117 11 ("base-project" "set!" "value")}
        {Lisp-Entry "get-base-directory" () 121 11 ("base-directory")}
        {Lisp-Entry "set-base-directory" () 125 11 ("base-directory" "set!" "value")}
        {Lisp-Entry "get-ini-file" () 134 18 ("ini-file")}
        {Lisp-Entry "get-username" () 138 18 ("get-database-username" "username" "either")}
        {Lisp-Entry "get-password" () 142 18 ("password")}
        {Lisp-Entry "get-database" () 151 18 ("open-database" "set!" "database" "unless")}
        {Lisp-Entry "open-database" () 157 11 ("self" "get-application" "add-exit-listener" "password" "username" "either" "ini-file" "parse" "Open" "error" "null?" "if" "false" "error?:" "VSSDatabase" "cocreate" "db" "let")}
        {Lisp-Entry "get-database-name" () 166 18 ("ini-file" "get-parent" "get-name" "get-database" "get-DatabaseName")}
        {Lisp-Entry "get-database-username" () 172 11 ("database" "get-Username")}
        {Lisp-Entry "destroy" () 181 11 ("nextmethod" "self" "get-application" "remove-exit-listener" "set!" "corelease" "database" "when")}
        {Lisp-Entry "path->spec" () 194 18 ("base-project" "join" "append" "path")}
        {Lisp-Entry "spec->path" () 198 18 ("base-project" "length" "split" "tail" "cdr" "spec")}
        {Lisp-Entry "File-Or-Project-Not-Found" () 207 12 ()}
        {Lisp-Entry "Database-Locked" () 210 12 ()}
        {Lisp-Entry "Database-Inexistant" () 213 12 ()}
        {Lisp-Entry "get-item" () 217 11 ("else" "Database-Inexistant" "File-Or-Project-Not-Found" "error" "Database-Locked" "self" "VSS-Repository-Item" "new" "get-database" "get-VSSItem" "item" "cotry" "message-box" "get-debug-repository?" "and" "when" "debug" "get-preferences" "pref" "let" "path->spec" "spec" "file/path->path" "path" "let*" "false" "deleted?" "deleted?:" "true" "error?" "error?:" "file/path")}
        {Lisp-Entry "in-repository?" () 239 11 ("not-null?" "false" "error?:" "get-item" "item" "with-closed" "file")}
        {Lisp-Entry "current-project" () 249 18 ("get-database" "get-CurrentProject")}
        {Lisp-Entry "detach-file" () 258 11 ("detach-file" "unimplemented" "rest" "file")}
        {Lisp-Entry "reattach-file" () 262 11 ("reattach-file" "unimplemented" "rest" "file")}
        {Lisp-Entry "get-latest-action" () 266 11 ("get-local" "" "apply" "get-item" "item" "with-closed" "rest" "file")}
        {Lisp-Entry "checkout-action" () 271 11 ("checkout" "" "apply" "get-item" "item" "with-closed" "rest" "file")}
        {Lisp-Entry "checkin-action" () 276 11 ("checkin" "" "apply" "get-item" "item" "with-closed" "rest" "file")}
        {Lisp-Entry "undo-checkout-action" () 281 11 ("undo-checkout" "" "apply" "get-item" "item" "with-closed" "rest" "file")}
        {Lisp-Entry "checkin-needs-merge?" () 286 18 ("get-username" "checkin-needs-merge?" "get-item" "item" "with-closed" "file")}
        {Lisp-Entry "safe-checkin-file" () 291 18 ("self" ":item-status" "call-repository-event" "get-username" "safe-checkin" "get-item" "item" "with-closed" "file")}
        {Lisp-Entry "reintegrate-file" () 297 11 ("reintegrate-file" "unimplemented" "rest" "file")}
        {Lisp-Entry "get-file-status" () 306 11 ("get-status" "when" "get-item" "item" "with-closed" "true" "error?" "error?:" "file")}
        {Lisp-Entry "get-file-checkouts-usernames" () 312 11 ("get-file-checkouts-usernames" "unimplemented" "file")}}}})
"VSS-Repository-Checkout"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "providers" "vss" "VSS-Repository-Checkout.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.providers.vss.VSS-Repository-Checkout" () 37 9 ("jazz")
      {Lisp-Entry "VSS-Repository-Checkout" () 45 7 ("Repository-Checkout")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle" "set!" "nextmethod" "hnd" "repository")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "connected?" () 62 11 ("handle" "not-null?")}
        {Lisp-Entry "get-localspec" () 71 11 ("handle" "get-LocalSpec")}
        {Lisp-Entry "get-username" () 75 11 ("handle" "get-Username")}
        {Lisp-Entry "get-version-number" () 79 11 ("handle" "get-VersionNumber")}}}})
"VSS-Repository-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "providers" "vss" "VSS-Repository-Editor.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.providers.vss.VSS-Repository-Editor" () 37 9 ("jazz")
      {Lisp-Entry "VSS-Repository-Editor" () 48 7 ("on-cancel" "cancel" "default?:" "enabled?:" "on-ok" ":host" "action-handler:" "ok" "6" "local" "width:" "on-escape-press" "escape-press-handler:" "on-selection-change" "selection-handler:" ":icons" "portfolio:" "2" "top-padding:" "projects" "filled-column:" "projects-tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "edge" "border-type:" "projects-border" "on-return-press" "form:" "Event-Handler" "return-press-handler:" "extensions:" "parameters:" "file" "protocol:" "ini-file" "name:" "8" "9" "Point" "position:" "title:" "Dimension" "size:" "View")
        {Lisp-Entry "preferences" () 51 12 ("set-preferences" "get-preferences")}
        {Lisp-Entry "repository" () 54 8 ()}
        {Lisp-Entry "repository-base" () 55 8 ()}
        {Lisp-Entry "finish" () 78 11 ("setup-project" "setup-repository" "nextmethod" "rest")}
        {Lisp-Entry "destroy" () 84 11 ("nextmethod" "close-repository")}
        {Lisp-Entry "close-repository" () 89 11 ("set-repository")}
        {Lisp-Entry "get-preferences" () 98 18 ("preferences")}
        {Lisp-Entry "set-preferences" () 102 18 ("preferences" "set!" "value")}
        {Lisp-Entry "get-tree" () 106 11 ("projects-tree" "locate")}
        {Lisp-Entry "set-repository" () 115 11 ("get-base-project" "essay" "repository-base" "set!" "close" "repository" "when" "value")}
        {Lisp-Entry "set-concrete-repository" () 123 19 ("set-repository" "value")}
        {Lisp-Entry "dialog-class" () 133 16 ("Editor-Dialog")}
        {Lisp-Entry "Editor-Dialog" () 138 14 ("Dimension" "size:" "Point" "position:" "title:" "Host-Dialog")}
        {Lisp-Entry "on-selection-change" () 150 11 ("update-buttons" "selected-local" "local" "locate" "set-title" "get-sender" "tree" "let" "evt")}
        {Lisp-Entry "selected-moniker" () 156 11 ("Repository-Moniker" "is?" "get-user-data" "data" "get-row" "row" "let*" "when" "get-single-selection" "selection" "let" "tree")}
        {Lisp-Entry "selected-path" () 165 11 ("get-path" "when" "selected-moniker" "moniker" "let" "tree")}
        {Lisp-Entry "selected-local" () 171 11 ("parse" "get-pathname" "directory" "repository" "get-item" "item" "with-closed" "null?" "if" "selected-path" "base-project" "let" "tree")}
        {Lisp-Entry "on-return-press" () 181 11 ("get-modal-result" "end-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "on-escape-press" () 187 11 ("cancel-modal" "get-host" "dialog" "let" "evt")}
        {Lisp-Entry "setup-repository" () 197 19 ("false" "generate-event?:" "locate" "set-moniker" "get-concrete" "get-ini-file" "ini-file" "let" "set-base-project" "get-base-project" "repository-base" "Repository" "instantiate-preferences" "repository" "set!" "preferences" "when")}
        {Lisp-Entry "setup-project" () 207 11 ("synchronize-base-project" "expand/collapse" "repository-base" "null?" "if" "insert-project" "root-row" "Repository-Moniker" "new" "root" "let*" "repository" "when" "remove-every-row" "get-tree" "tree" "let")}
        {Lisp-Entry "synchronize-base-project" () 218 11 ("ensure-displayed" "row-rank" "set-single-selection" "expand/collapse" "null?" "if" "expand-spine" "row" "get-list" "cons" "spine" "repository" "Repository-Moniker" "new" "moniker" "get-tree" "let*" "root-row" "tree" "base-project")}
        {Lisp-Entry "update-tree-row" () 234 11 ("get-user-data" "insert-projects" "row" "tree")}
        {Lisp-Entry "insert-projects" () 238 11 ("insert-project" "project" "dynamic" "function" "for-each" "false" "leaves?:" "true" "nodes?:" "get-content" "projects" "let" "row" "tree" "moniker")}
        {Lisp-Entry "insert-project" () 245 11 ("user-data:" "title:" "Bitmap-Resource" "image:" "Tree-Node" "new" "list" "children:" "father:" "dynamic" "state:" "add-row" "empty-string?" "if" "effective-title" "get-name" "title" "let*" "row" "tree" "project")}
        {Lisp-Entry "update-buttons" () 251 11 ("not-null?" "and" "ok" "set-enabled?" "get-tree" "selected-path" "path" "locate" "get-moniker" "ini-file" "let")}
        {Lisp-Entry "ini-file-update" () 258 11 ("setup-project" "set-concrete-repository" "get-database-name" "set-name" ":ini-file" "VSS-Repository" "new" "repository" "locate" "get-moniker" "ini-file" "let*")}
        {Lisp-Entry "get-modal-result" () 271 11 (":base-directory" ":base-project" ":ini-file" "name:" "list" "get-pathname" "base-directory" "get-absolute-path" "base-project" "selected-moniker" "moniker" "get-parent" "get-name" "name" "locate" "get-moniker" "ini-file" "get-tree" "tree" "let*")}
        {Lisp-Entry "set-properties" () 285 31 ("password:" "password" "username:" "username" ":ini-file" "ini-file" ":base-directory" "base-directory" ":base-project" "getf" "base-project" "set-property" "initargs" "preferences" "designer")}
        {Lisp-Entry "IniFile-Widget" () 298 9 ("Moniker-Widget")
          {Lisp-Entry "moniker-update" () 301 13 ("ini-file-update")}}
        {Lisp-Entry "Projects-Tree" () 310 9 ("Tree-View")
          {Lisp-Entry "update-row" () 313 13 ("self" "update-tree-row" "row")}}}}})
"VSS-Repository-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "providers" "vss" "VSS-Repository-Item.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.providers.vss.VSS-Repository-Item" () 37 9 ("jazz")
      {Lisp-Entry "VSS-Repository-Item" () 45 7 ("SourceSafeTypeLib" "COM" "System" "Utilities" "Repository-Item")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle" "set!" "nextmethod" "hnd" "repository")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "connected?" () 62 11 ("handle" "not-null?")}
        {Lisp-Entry "get-name" () 71 11 ("handle" "get-Name")}
        {Lisp-Entry "get-version-number" () 75 11 ("handle" "get-VersionNumber")}
        {Lisp-Entry "get-type" () 79 11 ("handle" "get-Type")}
        {Lisp-Entry "get-file?" () 83 11 ("VSSITEM_FILE" "get-type" "=")}
        {Lisp-Entry "get-project?" () 87 11 ("VSSITEM_PROJECT" "get-type" "=")}
        {Lisp-Entry "get-binary?" () 91 11 ("handle" "get-Binary")}
        {Lisp-Entry "get-status" () 95 11 ("checked-out-me" "VSSFILE_CHECKEDOUT_ME" "checked-out" "VSSFILE_CHECKEDOUT" "checked-in" "VSSFILE_NOTCHECKEDOUT" "ecase" "handle" "get-IsCheckedOut" "value" "let")}
        {Lisp-Entry "get-spec" () 103 11 ("handle" "get-Spec")}
        {Lisp-Entry "get-path" () 107 11 ("get-spec" "repository" "spec->path")}
        {Lisp-Entry "get-pathname" () 111 11 ("Directory" "VSSITEM_PROJECT" "File" "new" "VSSITEM_FILE" "get-type" "ecase" "tokenise" "list" "get-localspec" "localspec" "let")}
        {Lisp-Entry "get-localspec" () 119 11 ("get-name" "error" "empty-string?" "if" "handle" "get-LocalSpec" "local" "let")}
        {Lisp-Entry "get-deleted?" () 126 11 ("handle" "get-Deleted")}
        {Lisp-Entry "get-items" () 130 11 ("+" "1" "naturals" "get-Item" "repository" "VSS-Repository-Item" "new" "n" "dynamic" "function" "map" "get-Count" "count" "let" "handle" "get-Items" "items" "with-closed" "false" "deleted?" "deleted?:")}
        {Lisp-Entry "get-checkouts" () 138 11 ("+" "1" "naturals" "get-Item" "repository" "VSS-Repository-Checkout" "new" "n" "dynamic" "function" "map" "get-Count" "count" "let" "handle" "get-Checkouts" "checkouts" "with-closed")}
        {Lisp-Entry "get-checkouts-usernames" () 146 11 ("get-username" "checkout" "dynamic" "function" "map" "get-checkouts" "checkouts" "with-closed")}
        {Lisp-Entry "get-user-checkout" () 153 11 ("close" "eq?" "unless" "for-each" "get-username" "=" "checkout" "dynamic" "function" "find-if" "user-checkout" "get-checkouts" "checkouts" "let" "user")}
        {Lisp-Entry "get-version" () 165 11 ("handle" "get-Version" "repository" "VSS-Repository-Item" "new" "n")}
        {Lisp-Entry "get-latest-version" () 169 11 ("get-versions" "car")}
        {Lisp-Entry "get-latest-info" () 173 11 ("values" "get-version-number" "no" "get-date" "date" "let" "get-latest-version" "version" "with-closed")}
        {Lisp-Entry "get-versions" () 180 11 ("get-output" "repository" "VSS-Repository-Version" "put" "IVSSVersion" "version" "array-ref" "dispatch" "let*" "true" "set!" "=" "if" "Next" "fetched" "not" "while" "false" "done?" "List-Factory" "new" "fact" "1" "variant" "new-array" "array" "let" "IEnumVARIANT" "coquery" "enumerator" "_NewEnum" "unknown" "0" "handle" "get-Versions" "versions" "with-closed")}
        {Lisp-Entry "get-unlabeled-versions" () 197 11 ("get-versions" "labeled?" "not" "version" "dynamic" "function" "collect-if")}
        {Lisp-Entry "get-parent" () 203 11 ("handle" "get-Parent" "repository" "VSS-Repository-Item" "new")}
        {Lisp-Entry "add-file" () 212 11 ("0" "parse" "handle" "Add" "repository" "VSS-Repository-Item" "new" "exists?" "assert" "local")}
        {Lisp-Entry "add-project" () 217 11 ("handle" "NewSubproject" "repository" "VSS-Repository-Item" "new" "name")}
        {Lisp-Entry "checkin" () 226 11 ("VSSFLAG_KEEPNO" "VSSFLAG_KEEPYES" "if" "parse" "handle" "Checkin" "false" "keep-checked-out?" "keep-checked-out?:" "local")}
        {Lisp-Entry "checkout" () 230 11 ("VSSFLAG_GETNO" "0" "if" "parse" "handle" "Checkout" "true" "get?" "get?:" "local")}
        {Lisp-Entry "undo-checkout" () 234 11 ("VSSFLAG_GETNO" "0" "if" "parse" "handle" "UndoCheckout" "true" "get?" "get?:" "local")}
        {Lisp-Entry "is-different?" () 238 11 ("parse" "handle" "get-IsDifferent" "local")}
        {Lisp-Entry "delete-item" () 247 11 ("true" "handle" "put-Deleted")}
        {Lisp-Entry "destroy-item" () 251 11 ("handle" "Destroy")}
        {Lisp-Entry "rename-item" () 260 11 ("handle" "put-Name" "new-name")}
        {Lisp-Entry "get-local" () 269 11 ("0" "parse" "handle" "Get" "local")}
        {Lisp-Entry "find-unique" () 273 11 ("increase!" "format" "new-file" "set!" "exists?" "while" "get-extension" "ext" "get-base" "name" "get-parent" "dir" "1" "n" "let" "file")}
        {Lisp-Entry "get-content" () 289 11 ("get-output" "close" "put" "VSSITEM_FILE" "VSSITEM_PROJECT" "=" "and" "or" "if" "get-type" "type" "item" "dynamic" "function" "for-each" "get-items" "items" "List-Factory" "new" "fact" "let" "leaves?" "leaves?:" "true" "nodes?" "nodes?:")}
        {Lisp-Entry "checkin-needs-merge?" () 309 18 ("get-version-number" "/=" "get-user-checkout" "checkout" "with-closed" "user")}
        {Lisp-Entry "safe-checkin" () 314 18 ("checkin" "else" "checkin-needs-merge?" "error" "checked-out-me" "get-status" "/=" "cond" "user" "local")}}}})
"VSS-Repository-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "providers" "vss" "VSS-Repository-Preferences.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.repository.providers.vss.VSS-Repository-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "VSS-Repository-Preferences" () 46 7 ("Repository-Preferences")
        {Lisp-Entry "ini-file" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "username" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "password" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "repository-class" () 59 11 ("VSS-Repository")}
        {Lisp-Entry "install-preferences" () 63 11 ("password:" "password" "username:" "username" ":ini-file" "getf" "ini-file" "self" "set-property" "nextmethod" "initargs" "designer")}
        {Lisp-Entry "install-concrete" () 70 11 ("gather-concrete-initargs" "concrete-initargs" "vss" "concrete-type" "set-property" "pref" "designer")}
        {Lisp-Entry "gather-concrete-initargs" () 75 11 ("password" "password:" "username" "username:" "ini-file" ":ini-file" "base-directory" ":base-directory" "base-project" ":base-project" "list")}
        {Lisp-Entry "editor-class" () 89 16 ("VSS-Repository-Editor")}
        {Lisp-Entry "get-class-presentation" () 99 16 ()}
        {Lisp-Entry "get-class-image" () 104 16 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 109 16 ("nextmethod" "else" "password" "username" "ini-file" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 117 11 ("nextmethod" "else" "Password-Row" "password" "false" "nullable?:" "String-Row" "username" "extensions:" "parameters:" "open" "mode:" "File-Row" "new" "ini-file" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 125 11 ("active?" "base-directory" "base-project" "password" "username" "ini-file")}}}})
"VSS-Repository-Version"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "providers" "vss" "VSS-Repository-Version.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.providers.vss.VSS-Repository-Version" () 37 9 ("jazz")
      {Lisp-Entry "VSS-Repository-Version" () 45 7 ("SourceSafeTypeLib" "COM" "System" "Utilities" "Repository-Version")
        {Lisp-Entry "handle" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle" "set!" "nextmethod" "hnd" "repository")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "connected?" () 62 11 ("handle" "not-null?")}
        {Lisp-Entry "get-username" () 71 11 ("handle" "get-Username")}
        {Lisp-Entry "get-version-number" () 75 11 ("handle" "get-VersionNumber")}
        {Lisp-Entry "labeled?" () 79 11 ("get-label" "/=")}
        {Lisp-Entry "get-label" () 83 11 ("handle" "get-Label")}
        {Lisp-Entry "get-action" () 87 11 ("handle" "get-Action")}
        {Lisp-Entry "get-date" () 91 11 ("handle" "get-Date")}
        {Lisp-Entry "get-item" () 95 11 ("handle" "get-VSSItem" "repository" "VSS-Repository-Item" "new")}}}})
"Validate"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "validate" "Validate.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.validate.Validate" () 37 9 ("jazz")
      {Lisp-Entry "Validate" () 43 7 ("Process")
        {Lisp-Entry "start-process" () 46 11 ("exit-process" "Validation-Suite" "new" "validate" "rest")}}}})
"Validation-Suite"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "validate" "Validation-Suite.fusion"} {Time 128363204920000000L}
    {Lisp-Entry "jazz.validate.validate.Validation-Suite" () 37 9 ("jazz")
      {Lisp-Entry "Validation-Suite" () 46 7 ("Object")
        {Lisp-Entry "Classes" () 49 14 ("Vector-Tester" "Variable-Tester" "Values-Tester" "Thread-Tester" "Syntax-Tester" "Symbol-Tester" "Structure-Tester" "String-Tester" "Sequence-Tester" "Scheme-Tester" "Reader-Tester" "Pathname-Tester" "Number-Tester" "Map-Tester" "List-Tester" "Iterator-Tester" "Hashtable-Tester" "Function-Tester" "Format-Tester" "Form-Tester" "Factory-Tester" "Explorer-Tester" "Error-Tester" "Enumeration-Tester" "Designer-Tester" "Debugger-Tester" "Control-Tester" "Component-Tester" "Collector-Tester" "Char-Tester" "Catalog-Tester" "Branch-Tester" "Boolean-Tester" "Binding-Tester" "Array-Tester")}
        {Lisp-Entry "failed-assertions" () 88 8 ()}
        {Lisp-Entry "validate" () 91 18 (":report-success?" "report-results" "validate-suite" "report-success?" "report-success?:" "true" "test" "test:")}
        {Lisp-Entry "validate-suite" () 96 11 ("user-message" "list" "pair?" "all-tester-classes" "true" "eq?" "if" "invoke-tester" "for-each" "List-Factory" "new" "failed-assertions" "set!" "test")}
        {Lisp-Entry "invoke-tester" () 102 11 ("test" "user-message" "self" ":suite" "new" "tester" "let" "class")}
        {Lisp-Entry "all-tester-classes" () 108 11 ("Classes" "autoreload" "map")}
        {Lisp-Entry "assertion-failed" () 112 18 ("list" "failed-assertions" "put" "form" "subtitle" "title")}
        {Lisp-Entry "report-results" () 116 11 ("message" "subtitle" "title" "bind" "info" "dynamic" "function" "for-each" "format" "String-Printer" "new" "printer" "message-box" "when" "null?" "if" "failed-assertions" "get-output" "failed" "let" "true" "report-success?" "report-success?:")}}}})
"Value-Domain"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "domain" "Value-Domain.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.domain.Value-Domain" () 37 9 ("jazz")
      {Lisp-Entry "Value-Domain" () 44 7 ("Domain")
        {Lisp-Entry "present" () 52 11 (":reader" "->string" "value")}}}})
"Value-Row"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "row" "Value-Row.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.row.Value-Row" () 37 9 ("jazz")
      {Lisp-Entry "Value-Row" () 50 7 ("Tree-Row")
        {Lisp-Entry "property_" () 54 12 ("set-property" "get-property")}
        {Lisp-Entry "value" () 55 12 ("set-value" "get-value")}
        {Lisp-Entry "nullable?" () 56 12 ("set-nullable?" "get-nullable?" "false")}
        {Lisp-Entry "modified?" () 57 12 ("set-modified?" "get-modified?" "false")}
        {Lisp-Entry "limit-to-list?" () 58 12 ("set-limit-to-list?" "get-limit-to-list?" "true")}
        {Lisp-Entry "domain" () 61 8 ()}
        {Lisp-Entry "editor" () 62 8 ()}
        {Lisp-Entry "edited?" () 63 8 ("false")}
        {Lisp-Entry "initialize" () 71 11 ("limit-to-list?~self" "nullable?~self" "value~self" "property_~self" "set!" "nextmethod" "apply" "others" "true" "limit-to-list?" "false" "nullable?" "value" "property" "bind-keywords" "rest")}
        {Lisp-Entry "get-filter-name" () 86 31 ("properties")}
        {Lisp-Entry "get-filter-rank" () 91 31 ("1")}
        {Lisp-Entry "get-filter-image" () 96 31 ("Bitmap-Resource")}
        {Lisp-Entry "get-property" () 105 18 ("property_")}
        {Lisp-Entry "set-property" () 109 18 ("property_" "set!" "prop")}
        {Lisp-Entry "get-title" () 113 18 ("get-title" "children" "car" "node" "let")}
        {Lisp-Entry "set-title" () 118 18 ("set-title" "children" "car" "node" "let" "title")}
        {Lisp-Entry "get-value" () 123 18 ("value")}
        {Lisp-Entry "set-value" () 127 18 ("value" "set!" "object")}
        {Lisp-Entry "get-nullable?" () 131 18 ("nullable?")}
        {Lisp-Entry "set-nullable?" () 135 18 ("nullable?" "set!" "value")}
        {Lisp-Entry "get-modified?" () 139 18 ("modified?")}
        {Lisp-Entry "set-modified?" () 143 18 ("modified?" "set!" "flag")}
        {Lisp-Entry "get-limit-to-list?" () 147 18 ("limit-to-list?")}
        {Lisp-Entry "set-limit-to-list?" () 151 18 ("limit-to-list?" "set!" "value")}
        {Lisp-Entry "get-editor" () 155 18 ("editor")}
        {Lisp-Entry "set-editor" () 159 18 ("editor" "set!" "edt")}
        {Lisp-Entry "get-client" () 163 18 ("get-tree" "get-client")}
        {Lisp-Entry "auto-inplace?" () 172 11 ("true")}
        {Lisp-Entry "auto-expand" () 176 11 ("edit-row" "dynamic" "function" "with-update-locked" "get-tree" "tree" "let" "nextmethod")}
        {Lisp-Entry "auto-select" () 184 11 ("select-editor" "nextmethod")}
        {Lisp-Entry "auto-collapse" () 189 11 ("end-row-edition" "in-edition?" "when" "nextmethod")}
        {Lisp-Entry "auto-collapsable?" () 195 11 ("in-edition?")}
        {Lisp-Entry "enter-value" () 204 26 ("get-tree" "get-card" "enter-value" "update" "property_" "null?" "if" "true" "set-modified?" "value" "set!" "v")}
        {Lisp-Entry "enter-edited-value" () 212 18 ("throw-cancel" "get-edited-value" "enter-value" "validate-value" "if")}
        {Lisp-Entry "default-value" () 218 26 ()}
        {Lisp-Entry "present" () 227 26 (":reader" "->string" "value")}
        {Lisp-Entry "get-edited-value" () 236 26 ("editor" "get-string-content" "read-string-element")}
        {Lisp-Entry "set-edited-value" () 240 26 ("present" "editor" "set-string-content" "value")}
        {Lisp-Entry "get-edited-modified?" () 244 26 ("editor" "get-controller" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" () 248 26 ("editor" "get-controller" "set-modified?" "flag")}
        {Lisp-Entry "show-cursor" () 252 26 ("editor" "show-text-cursor")}
        {Lisp-Entry "validate-value" () 256 18 ("get-edited-value" "revert-property" "no" "false" "get-end" "end:" "get-start" "start:" "focus-editor" "yes" "no:" "yes:" "question" "type:" "get-message" "message-box" "case" "err" "Parse-Error" "catch" "true")}
        {Lisp-Entry "edit-row" () 271 18 ("true" "edited?" "set!" "edit")}
        {Lisp-Entry "end-row-edition" () 276 18 ("false" "edited?" "set!" "end-edition")}
        {Lisp-Entry "in-edition?" () 281 26 ("edited?")}
        {Lisp-Entry "edit" () 285 26 ("edit-in-cell")}
        {Lisp-Entry "end-edition" () 289 26 ("close-editor" "save-edition")}
        {Lisp-Entry "save-edition" () 294 26 ("false" "set-edited-modified?" "enter-edited-value" "get-edited-modified?" "when")}
        {Lisp-Entry "close-editor" () 300 26 ("close-in-cell-editor")}
        {Lisp-Entry "close-editor?" () 304 26 ("true")}
        {Lisp-Entry "select-editor" () 308 26 ("focus-editor" "edit-in-cell" "in-cell-edition?" "not" "when" "get-tree" "tree" "let")}
        {Lisp-Entry "in-cell-edition?" () 315 18 ("1" "Cell" "new" "get-edited-cell" "=" "self" "row-rank" "row" "in-edition?" "and" "get-tree" "tree" "let")}
        {Lisp-Entry "editor-up-arrow" () 327 18 ("get-tree" "up-arrow-press" "modifiers")}
        {Lisp-Entry "editor-down-arrow" () 331 18 ("get-tree" "down-arrow-press" "modifiers")}
        {Lisp-Entry "editor-tab" () 335 18 ("down-arrow-press" "get-tree" "up-arrow-press" "shift-down?" "if" "NoModifiers" "modifiers" "let")}
        {Lisp-Entry "editor-return" () 342 18 (":duration" "save-edition" "true" "set-edited-modified?" "dynamic" "function" ":wait" "with-cursor" "show-cursor")}
        {Lisp-Entry "editor-focus-validate" () 351 18 ("true" "validate-value" "get-edited-modified?" "limit-to-list?" "if" "view")}
        {Lisp-Entry "editor-focus-delegate" () 359 18 ("invalidate-drawing" "false" ":select-all?" "focus-editor" "self" "get-tree" "auto-expand/collapse" "in-edition?" "not" "auto-inplace?" "and" "when")}
        {Lisp-Entry "editor-focus-lose" () 366 18 ("close-auto-expanded" "invalidate-drawing" "different-overlapped?" "editor" "and" "if" "get-tree" "eq?" "unless" "view" "window")}
        {Lisp-Entry "edit-in-cell" () 379 26 ("set-client" "focus-editor" "close-editor?" ":close-editor?" ":editor" "edit-cell" "value" "set-edited-value" "set-parent" "new-editor" "set!" "editor" "unless" "fill" "set-layout-type" "get-content" "content" "hscroll?:" "false" "vscroll?:" "parent:" "Scroller-View" "scroller" "Dark-Red" "name:" "Color" "border-color:" "solid" "border-type:" "Border-View" "border" "1" "self" "row-rank" "Cell" "new" "cell" "get-tree" "tree" "let*")}
        {Lisp-Entry "close-in-cell-editor" () 396 18 ("editor" "set!" "close-editor?" "when" "end-edition" "get-tree" "tree" "let")}
        {Lisp-Entry "focus-editor" () 403 26 ("Range" "new" "set-selection" "else" "set-caret" "select-all" "null?" "cond" "acquire-focus" "when" "focused-editor" "editor" "let" "true" "select-all?" "select-all?:" "end" "end:" "start" "start:")}
        {Lisp-Entry "focused-editor" () 412 26 ("editor")}
        {Lisp-Entry "edit-in-row" () 421 18 ("expand/collapse" "set-client" "set-editor" "get-content" "set-parent" "new-editor" "set!" "editor" "unless" "false" "hscroll?:" "true" "vscroll?:" "Scroller-View" "scroller" "Dark-Red" "name:" "Color" "border-color:" "solid" "border-type:" "parent:" "Border-View" "new" "border" "editor-height" ":row-height" "self" "father:" "Editor-Row" "class:" "add-row" "subrow" "get-tree" "tree" "let*")}
        {Lisp-Entry "install-container" () 434 29 ()}
        {Lisp-Entry "close-in-row-editor" () 438 18 ("set-parent" "close" "close-editor?" "if" "get-editor" "editor" "remove-row" "self" "expand/collapse" "when" "get-sons" "car" "editor-row" "get-tree" "tree" "let")}
        {Lisp-Entry "editor-height" () 450 29 ()}
        {Lisp-Entry "new-editor" () 454 29 ("top-padding:" "1" "left-padding:" "self" "value-row:" "editor-class" "new")}
        {Lisp-Entry "editor-class" () 461 29 ("Value-Text-View")}
        {Lisp-Entry "edit-in-list" () 470 11 ("self" "expand/collapse" "get-list-value" "get-subrow-class" "add-value" "subvalue" "dynamic" "function" "for-each" "get-tree" "tree" "let")}
        {Lisp-Entry "get-subrow-class" () 478 29 ("Value-Row")}
        {Lisp-Entry "close-in-list-editor" () 482 21 ("remove-every-son" "self" "expand/collapse" "get-tree" "tree" "let")}
        {Lisp-Entry "get-list-edited-value" () 488 11 ("get-sons" "get-subvalue" "subrow" "dynamic" "function" "map")}
        {Lisp-Entry "get-list-edited-modified?" () 494 21 ("get-sons" "get-modified?" "subrow" "dynamic" "function" "some?" "modified?" "or")}
        {Lisp-Entry "set-list-edited-modified?" () 501 21 ("get-sons" "set-modified?" "subrow" "dynamic" "function" "for-each" "modified?" "set!" "flag")}
        {Lisp-Entry "get-subvalue" () 508 26 ("get-value")}
        {Lisp-Entry "get-list-value" () 512 29 ("value")}
        {Lisp-Entry "add-value" () 516 29 ("class" "value")}
        {Lisp-Entry "add-row" () 520 18 (":row" "father:" "add-row" "set-title" "set-value" "present" "presented" "default-value" "unspecified" "=" "if" "list" "children:" ":row-height" "parent:" "row" "Tree-Label" "label" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "node" "get-tree" "tree" "let*" "user-data" "user-data:" "Value-Row" "class" "class:" "value" "title" "father")}
        {Lisp-Entry "Modified-Color" () 537 14 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "update" () 541 26 ("update-in-cell" "value")}
        {Lisp-Entry "update-in-cell" () 545 11 ("invalidate-cell" "set-edited-modified?" "set-title" "true" "set-property-modified?" "set-value" "get-cell-data" "get-preserved-data" "if" "data" "get-cell-editor" "editor" "in-edition?" "edited?" "1" "Cell" "new" "cell" "self" "row-rank" "rank" "present" "title" "get-tree" "tree" "let*" "value")}
        {Lisp-Entry "set-property-modified?" () 561 11 ("invalidate-cell" "set-color" "Modified-Color" "if" "color" "get-cell-data" "node" "0" "Cell" "new" "cell" "self" "row-rank" "rank" "get-tree" "tree" "let*" "property_" "when" "flag")}
        {Lisp-Entry "edit-definition" () 577 26 ("bell")}
        {Lisp-Entry "double-click" () 586 11 ("self" "auto-expand/collapse" "get-tree" "tree" "let" "pos")}
        {Lisp-Entry "context-menu" () 591 11 ("track-popup-menu" "update-menu" "self" "value-row:" "new" "menu" "bell" "null?" "if" "get-menu-class" "class" "dynamic" "function" "with-context-click" "position" "+" "get-tree" "tree" "let" "pos")}
        {Lisp-Entry "get-menu-class" () 604 29 ("Value-Menu")}
        {Lisp-Entry "update-menu" () 608 11 ("layout-menu" "Separator-Item" "F2" ":accelerator" "on-rename-item" "auto-number?" "unless" "on-remove-item" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "revert" "before:" "parent:" "Label-Item" "new" "List-Row" "father" "is?" "when" "menu")}
        {Lisp-Entry "on-remove-item" () 617 18 ("self" "father" "remove-item" "evt")}
        {Lisp-Entry "on-rename-item" () 621 18 ("self" "father" "rename-item" "evt")}
        {Lisp-Entry "show-property" () 625 18 ("property_" "field-name" "set-showed-property" "View-Editor" "is-not?" "get-editor" "editor" "let" "bell" "null?" "if" "get-surrogate" "surrogate" "get-client" "client" "let*")}
        {Lisp-Entry "revert-property" () 636 18 ("focus-editor" "set-modified?" "set-property-modified?" "false" "set-edited-modified?" "value" "set-edited-value")}
        {Lisp-Entry "draw-cell" () 649 26 ("0" "1" "draw-at" "height" "width" "cell" "row" "column" "value" "context" "dc")}}
      {Lisp-Entry "Value-Menu" () 658 7 ("Context-Menu")
        {Lisp-Entry "value-row" () 661 12 ("set-value-row" "get-value-row")}
        {Lisp-Entry "get-value-row" () 673 18 ("value-row")}
        {Lisp-Entry "set-value-row" () 677 18 ("value-row" "set!" "value")}
        {Lisp-Entry "on-show" () 687 11 ("value-row" "show-property" "evt")}
        {Lisp-Entry "on-revert" () 692 11 ("value-row" "revert-property" "evt")}}}})
"Value-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "Value-Text-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.editor.Value-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "Value-Text-View" () 47 7 ("top-padding:" "1" "left-padding:" "show-unfocused-selection?:" "accepts-returns?:" "Ansi-Var" "Font" "font:" "Default" "name:" "Text-Style" "default-style:" "Property-Editor" "IDE-Text-View")
        {Lisp-Entry "value-row" () 50 12 ("set-value-row" "get-value-row")}
        {Lisp-Entry "manager" () 53 8 ()}
        {Lisp-Entry "get-value-row" () 65 18 ("value-row")}
        {Lisp-Entry "set-value-row" () 69 18 ("value-row" "set!" "value")}
        {Lisp-Entry "get-manager" () 78 11 ("manager")}
        {Lisp-Entry "set-manager" () 82 11 ("manager" "set!" "value")}
        {Lisp-Entry "get-edited-value" () 86 11 ("get-string-content" "read-string-element")}
        {Lisp-Entry "set-edited-value" () 90 11 ("present-edited-value" "set-string-content" "value")}
        {Lisp-Entry "present-edited-value" () 94 11 (":reader" "->string" "value")}
        {Lisp-Entry "get-edited-modified?" () 98 11 ("get-controller" "get-modified?")}
        {Lisp-Entry "set-edited-modified?" () 102 11 ("get-controller" "set-modified?" "flag")}
        {Lisp-Entry "up-arrow-press" () 111 11 ("editor-up-arrow" "value-row" "manager" "either" "target" "let" "modifiers")}
        {Lisp-Entry "down-arrow-press" () 116 11 ("editor-down-arrow" "value-row" "manager" "either" "target" "let" "modifiers")}
        {Lisp-Entry "tab-press" () 121 11 ("value-row" "editor-tab" "manager" "end-completion" "has-completion?" "if" "modifiers" "key")}
        {Lisp-Entry "return-press" () 129 11 ("value-row" "editor-return" "manager" "if" "nextmethod" "key")}
        {Lisp-Entry "document-menu" () 136 11 ()}
        {Lisp-Entry "focus-validate" () 145 11 ("value-row" "editor-focus-validate" "view")}
        {Lisp-Entry "focus-lose" () 149 11 ("value-row" "editor-focus-lose" "manager" "if" "nextmethod" "view" "window")}
        {Lisp-Entry "focus-master" () 156 11 ("value-row" "get-tree")}}}})
"Values-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Values-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Values-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Values-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-values" "invoke")}
        {Lisp-Entry "test-values" () 61 11 ()}}}})
"Variable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Variable.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Variable" () 37 9 ("jazz")
      {Lisp-Entry "Variable" () 40 7 ("Symbol-Binding")}}})
"Variable-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Variable-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.entry.Variable-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Variable-Entry" () 45 7 ("Definition-Entry")
        {Lisp-Entry "construct-literal" () 49 16 ("false" "self" "new" "references" "column" "line" "type" "name" "modifiers" "context")}
        {Lisp-Entry "print-catalog" () 53 11 ("references" "column" "line" "type" "name" "modifiers" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-image" () 60 11 ("Bitmap-Resource")}}}})
"Variable-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Variable-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Variable-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Variable-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-free?" "invoke")}
        {Lisp-Entry "test-free?" () 61 11 ()}}}})
"Variables-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "debugger" "Variables-View.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.debugger.Variables-View" () 37 9 ("jazz")
      {Lisp-Entry "Variables-View" () 49 7 ("value" "width:" "name" "row" "selection-mode:" "multiple-selection?:" "variables" "content" "flat?:" "hscroll?:" "vscroll?:" "scroller" "name:" "fill" "layout-type:" "Layout-View")
        {Lisp-Entry "debuggee" () 52 12 ("set-debuggee" "get-debuggee")}
        {Lisp-Entry "frame" () 53 12 ("set-frame" "get-frame")}
        {Lisp-Entry "external-name" () 68 16 ("variables-view" "rest")}
        {Lisp-Entry "palette-class" () 78 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 83 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 88 16 ()}
        {Lisp-Entry "focus-default" () 97 11 ("acquire-focus" "variables" "locate" "tree" "let")}
        {Lisp-Entry "install" () 107 11 ("destroy-mandatory" "add-debugger-listener" "on-frame-change" "method-name:" "self" "target:" "Event-Handler" "new" "listener" "let" "nextmethod" "rest")}
        {Lisp-Entry "destroy" () 114 11 ("nextmethod" "self" "remove-debugger-listener")}
        {Lisp-Entry "get-debuggee" () 124 18 ("variables" "locate" "get-debuggee")}
        {Lisp-Entry "set-debuggee" () 128 18 ("variables" "locate" "set-debuggee" "debuggee")}
        {Lisp-Entry "get-frame" () 132 18 ("frame")}
        {Lisp-Entry "set-frame" () 136 18 (":frame" "cons" "essay" "variables" "locate" "set-client" "frame" "set!" "frm")}
        {Lisp-Entry "resize" () 146 11 ("scroller" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-frame-change" () 151 18 ("else" "Frame-Snapshot" "set-frame" "get-thread" "get-debuggee" "set-debuggee" "Execution-Frame" "typecase" ":frame" "get-property" "frame" "let" "evt")}}
      {Lisp-Entry "Variables-Inspector" () 170 7 ("Inspector")
        {Lisp-Entry "inspect" () 173 11 ("nextmethod" "else" "inspect-slots" "context:" "inspect-frame" "frame:" "case" "kind" "data")}
        {Lisp-Entry "inspect-frame" () 180 11 ("length" "naturals" "false" "0" "list" "value" "name" "bind" "pair?" "if" "rank" "parameter" "dynamic" "function" "map" "get-parameters" "parameters" "let" "Frame-Snapshot" "get-address" "get-thread" "inspect-frame" "Execution-Frame" "typecase" "frame")}}}})
"Vector-Tester"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "suite" "Vector-Tester.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validate.suite.Vector-Tester" () 37 9 ("jazz")
      {Lisp-Entry "Vector-Tester" () 45 7 ("title:" "Tester")
        {Lisp-Entry "test" () 52 11 ("test-vector" "invoke")}
        {Lisp-Entry "test-vector" () 61 11 ()}}}})
"Version"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "utility" "Version.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.utility.Version" () 37 9 ("jazz")
      {Lisp-Entry "Version" () 43 7 ("Object")
        {Lisp-Entry "major" () 46 8 ()}
        {Lisp-Entry "minor" () 47 8 ()}
        {Lisp-Entry "stage" () 48 8 ()}
        {Lisp-Entry "release" () 49 8 ()}
        {Lisp-Entry "revision" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("revision~self" "release~self" "stage~self" "minor~self" "major~self" "set!" "nextmethod" "revision" "release" "stage" "minor" "major")}
        {Lisp-Entry "compare-object" () 62 11 (":equal" "get-revision" "revision" "get-release" "release" "get-minor" "minor" "get-major" "major" "either" "else" ":greater" ">" ":less" "" "cond" "y" "x" "dynamic" "function" "try" "let" ":incompatible" "Version" "is-not?" "if" "target")}
        {Lisp-Entry "print" () 77 11 ("revision" "0" "release" "/=" "or" "stage" "minor" "major" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "present" () 87 18 ("else" "beta" "alpha" "stage" "case" "revision" "0" "release" "=" "and" "if" "minor" "major" "format")}
        {Lisp-Entry "get-major" () 109 18 ("major")}
        {Lisp-Entry "get-minor" () 113 18 ("minor")}
        {Lisp-Entry "get-stage" () 117 18 ("stage")}
        {Lisp-Entry "get-release" () 121 18 ("release")}
        {Lisp-Entry "get-revision" () 125 18 ("revision")}}}})
"Vertical-Line"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Vertical-Line.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Vertical-Line" () 37 9 ("jazz")
      {Lisp-Entry "Vertical-Line" () 46 7 ("View")
        {Lisp-Entry "default-size" () 49 11 ("8" "Dimension")}
        {Lisp-Entry "draw" () 58 11 ("left" "edges:" "sunken" "outer:" "raised" "inner:" "2" "0" "Rect" "new" "draw-edge" "Medium" "name:" "Color" "color" "get-height" "height" "let" "lv" "lh" "update" "context" "dc")}}}})
"Vertical-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "test" "Vertical-View.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jedi.test.Vertical-View" () 37 9 ("jazz")
      {Lisp-Entry "Vertical-View" () 45 7 ("View")
        {Lisp-Entry "Toto" () 48 9 ("Dimension" "size:" "0" "Point" "position:" "text" "content" "name:" "vscroll?:" "hscroll?:" "edge" "border-type:" "Border-View")}
        {Lisp-Entry "install" () 58 11 ("3" "0" "naturals" "->string" "title:" "Label-View" "else" "Horizontal-View" "2" "toto" "name:" "self" "parent:" "Toto" "new" "1" "case" "n" "dynamic" "function" "for-each" "nextmethod" "rest")}
        {Lisp-Entry "layout" () 73 11 ("increase!" "set-size" "Point" "set-position" "view" "dynamic" "function" "for-each-view" "0" "v" "Dimension" "new" "child-size" "get-height" "/" "floor" "height" "get-width" "width" "get-size" "size" "length" "let*" "children" "when")}
        {Lisp-Entry "draw" () 93 11 ("Dark-Red" "name:" "Color" "get-bounds" "fill-rect" "lv" "lh" "update" "context" "dc")}}}})
"View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "View.fusion"} {Time 128368664380000000L}
    {Lisp-Entry "jazz.ui.view.View" () 38 9 ("jazz")
      {Lisp-Entry "View-Class" () 60 7 ("Drawing-Class")
        {Lisp-Entry "palette-class" () 69 34 ("Host-Palette" "palette-class" "unimplemented")}
        {Lisp-Entry "palette-icon" () 76 31 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 81 34 ()}
        {Lisp-Entry "palette-position" () 86 34 ()}
        {Lisp-Entry "palette-size" () 91 34 ()}
        {Lisp-Entry "dialog-class" () 101 34 ("Host-Dialog")}
        {Lisp-Entry "dialog-title" () 106 34 ()}
        {Lisp-Entry "dialog-position" () 111 34 ()}
        {Lisp-Entry "dialog-size" () 116 34 ()}
        {Lisp-Entry "dialog-sizable?" () 121 34 ("false")}
        {Lisp-Entry "dialog-closable?" () 126 34 ("true")}
        {Lisp-Entry "center-dialog" () 131 34 ("get-v" "-" "get-h" "Point" "new" "center" "pos" "get-desktop" "get-size" "outer" "let*" "inner")}
        {Lisp-Entry "get-class-image" () 142 11 ("Bitmap-Resource")}
        {Lisp-Entry "property-presentation" () 146 11 ("nextmethod" "else" "user-data" "overlay" "outline" "action" "enabled?" "drag-tolerance" "draggable?" "tooltip-text" "tooltip?" "auto-size?" "background" "font" "title" "field-name" "case" "property")}}
      {Lisp-Entry "View" () 169 7 ("Drawing" "View-Class")
        {Lisp-Entry "title" () 176 12 ("set-title" "get-title")}
        {Lisp-Entry "font" () 177 12 ("set-font" "get-font" "Ansi-Var" "name:" "Font")}
        {Lisp-Entry "background" () 178 12 ("set-background" "get-background")}
        {Lisp-Entry "auto-size?" () 179 12 ("set-auto-size?" "get-auto-size?" "false")}
        {Lisp-Entry "tooltip?" () 180 12 ("set-tooltip?" "get-tooltip?" "false")}
        {Lisp-Entry "tooltip-text" () 181 12 ("set-tooltip-text" "get-tooltip-text")}
        {Lisp-Entry "draggable?" () 182 12 ("set-draggable?" "get-draggable?" "false")}
        {Lisp-Entry "drag-tolerance" () 183 12 ("set-drag-tolerance" "get-drag-tolerance" "5")}
        {Lisp-Entry "enabled?" () 184 12 ("set-enabled?" "get-enabled?" "true")}
        {Lisp-Entry "action" () 185 12 ("set-action" "get-action")}
        {Lisp-Entry "outline" () 186 12 ("set-outline" "get-outline")}
        {Lisp-Entry "offscreen?" () 187 12 ("set-offscreen?" "get-offscreen?" "false")}
        {Lisp-Entry "overlay" () 188 12 ("set-overlay" "get-overlay")}
        {Lisp-Entry "effect" () 189 12 ("set-effect" "get-effect")}
        {Lisp-Entry "user-data" () 190 12 ("set-user-data" "get-user-data")}
        {Lisp-Entry "cursor-update-handler" () 193 12 ("set-cursor-update-handler" "get-cursor-update-handler")}
        {Lisp-Entry "mouse-enter-handler" () 194 12 ("set-mouse-enter-handler" "get-mouse-enter-handler")}
        {Lisp-Entry "mouse-hover-handler" () 195 12 ("set-mouse-hover-handler" "get-mouse-hover-handler")}
        {Lisp-Entry "mouse-leave-handler" () 196 12 ("set-mouse-leave-handler" "get-mouse-leave-handler")}
        {Lisp-Entry "mouse-down-handler" () 197 12 ("set-mouse-down-handler" "get-mouse-down-handler")}
        {Lisp-Entry "mouse-move-handler" () 198 12 ("set-mouse-move-handler" "get-mouse-move-handler")}
        {Lisp-Entry "mouse-up-handler" () 199 12 ("set-mouse-up-handler" "get-mouse-up-handler")}
        {Lisp-Entry "drag-move-handler" () 200 12 ("set-drag-move-handler" "get-drag-move-handler")}
        {Lisp-Entry "drag-up-handler" () 201 12 ("set-drag-up-handler" "get-drag-up-handler")}
        {Lisp-Entry "double-click-handler" () 202 12 ("set-double-click-handler" "get-double-click-handler")}
        {Lisp-Entry "current-drop-handler" () 203 12 ("set-current-drop-handler" "get-current-drop-handler")}
        {Lisp-Entry "receive-drop-handler" () 204 12 ("set-receive-drop-handler" "get-receive-drop-handler")}
        {Lisp-Entry "receive-files-handler" () 205 12 ("set-receive-files-handler" "get-receive-files-handler")}
        {Lisp-Entry "context-menu-handler" () 206 12 ("set-context-menu-handler" "get-context-menu-handler")}
        {Lisp-Entry "lost-capture-handler" () 207 12 ("set-lost-capture-handler" "get-lost-capture-handler")}
        {Lisp-Entry "key-down-handler" () 208 12 ("set-key-down-handler" "get-key-down-handler")}
        {Lisp-Entry "key-up-handler" () 209 12 ("set-key-up-handler" "get-key-up-handler")}
        {Lisp-Entry "key-press-handler" () 210 12 ("set-key-press-handler" "get-key-press-handler")}
        {Lisp-Entry "arrow-press-handler" () 211 12 ("set-arrow-press-handler" "get-arrow-press-handler")}
        {Lisp-Entry "escape-press-handler" () 212 12 ("set-escape-press-handler" "get-escape-press-handler")}
        {Lisp-Entry "backspace-press-handler" () 213 12 ("set-backspace-press-handler" "get-backspace-press-handler")}
        {Lisp-Entry "return-press-handler" () 214 12 ("set-return-press-handler" "get-return-press-handler")}
        {Lisp-Entry "tab-press-handler" () 215 12 ("set-tab-press-handler" "get-tab-press-handler")}
        {Lisp-Entry "content-change-handler" () 216 12 ("set-content-change-handler" "get-content-change-handler")}
        {Lisp-Entry "selection-handler" () 217 12 ("set-selection-handler" "get-selection-handler")}
        {Lisp-Entry "action-handler" () 218 12 ("set-action-handler" "get-action-handler")}
        {Lisp-Entry "player" () 221 8 ()}
        {Lisp-Entry "scroller" () 222 8 ()}
        {Lisp-Entry "renderer" () 223 8 ()}
        {Lisp-Entry "scaled?" () 224 8 ("false")}
        {Lisp-Entry "scaling" () 225 8 ()}
        {Lisp-Entry "previous-size" () 226 8 ()}
        {Lisp-Entry "update-locked?" () 227 8 ("false")}
        {Lisp-Entry "scrollee-locked?" () 228 8 ("false")}
        {Lisp-Entry "modified?" () 229 8 ("false")}
        {Lisp-Entry "tools-info" () 230 8 ()}
        {Lisp-Entry "inhibit-context-menu?" () 232 14 ("false")}
        {Lisp-Entry "shortcut-update" () 235 11 ("action-item")}
        {Lisp-Entry "conclude" () 243 11 ("layout-scrollee" "layout" "nextmethod" "rest")}
        {Lisp-Entry "print" () 249 11 ("size" "position" "name" "title" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "destroy" () 260 11 ("set!" "self" "view-destroyed" "player" "invalidate-rect" "View" "is?" "when" "nextmethod" "get-rect" "rect" "parent" "let")}
        {Lisp-Entry "component-alias" () 276 11 ("nextmethod" "else" "popup-initiator" ":initiator" "get-root" ":root" "get-host" ":host" "case" "name")}
        {Lisp-Entry "get-player" () 289 11 ("get-player" "parent" "essay" "set!" "player" "unless")}
        {Lisp-Entry "set-player" () 295 18 ("for-each-view" "set-player" "view" "dynamic" "function" "proc" "with" "player" "set!" "plr")}
        {Lisp-Entry "in-player?" () 303 18 ("get-player" "boolean")}
        {Lisp-Entry "get-overlapped" () 307 18 ("get-overlapped" "when" "get-player" "player" "let")}
        {Lisp-Entry "different-overlapped?" () 313 18 ("get-overlapped" "neq?" "not" "or" "window")}
        {Lisp-Entry "add-to-favorites" () 322 26 ()}
        {Lisp-Entry "get-host" () 331 18 ("get-player")}
        {Lisp-Entry "get-guest" () 335 18 ("get-host" "get-guest")}
        {Lisp-Entry "install-in-host" () 339 26 ("host")}
        {Lisp-Entry "uninstall-from-host" () 343 26 ("host")}
        {Lisp-Entry "save-guest" () 347 26 ("session" "designer")}
        {Lisp-Entry "add-guest-preferences" () 351 18 ("select?:" "false" "design-events?:" "add-child" "cons" ":initargs" "self" "class-of" "type-name" "name:" "get-size" "size:" "get-position" "position:" "Guest-Preferences" "new" "pref" "get-host" "host" "let*" "add-guest-preferences" "unimplemented" "initargs" "session" "designer")}
        {Lisp-Entry "focus-default" () 365 26 ()}
        {Lisp-Entry "get-text-view" () 369 26 ()}
        {Lisp-Entry "frame-guest?" () 373 18 ("self" "get-guest" "eq?" "Host-Frame" "is?" "and" "get-host" "host" "let")}
        {Lisp-Entry "frame-activate" () 384 26 ()}
        {Lisp-Entry "frame-deactivate" () 388 26 ()}
        {Lisp-Entry "frame-workspaces" () 392 26 ()}
        {Lisp-Entry "effective-frame-workspaces" () 396 18 ("assq" "essay" "either" "filter-inexistant-workspaces" "false" "error?:" "external-name" "external" "get-associations" "associations" "workspaces" "get-preferences" "pref" "let*" "frame-workspaces")}
        {Lisp-Entry "filter-inexistant-workspaces" () 407 11 ("memq?" "name" "dynamic" "function" "collect-if" "get-children" "component-name" "map" "names" "let" "workspaces" "pref")}
        {Lisp-Entry "get-frame" () 414 11 ("player")}
        {Lisp-Entry "guest-icon" () 418 26 ("self" "class-of" "frame-icon" "Bitmap-Resource")}
        {Lisp-Entry "focus-activate" () 424 26 ()}
        {Lisp-Entry "focus-deactivate" () 428 26 ()}
        {Lisp-Entry "maximize" () 432 26 ()}
        {Lisp-Entry "restore" () 436 26 ()}
        {Lisp-Entry "tool-preferences" () 445 26 ()}
        {Lisp-Entry "get-tools-info" () 454 11 ("eq?" "new-hashtable" "set!" "tools-info" "unless")}
        {Lisp-Entry "get-tool-info" () 460 26 ("get-tools-info" "hash-ref" "tool-name")}
        {Lisp-Entry "set-tool-info" () 464 26 ("get-tools-info" "hash-set!" "info" "tool-name")}
        {Lisp-Entry "host-activate" () 473 26 ()}
        {Lisp-Entry "host-deactivate" () 477 26 ()}
        {Lisp-Entry "client-activate" () 481 26 ()}
        {Lisp-Entry "client-deactivate" () 485 26 ()}
        {Lisp-Entry "get-tools-view" () 494 26 ()}
        {Lisp-Entry "workspace-minimisable?" () 498 26 ("true")}
        {Lisp-Entry "validate-dialog" () 507 26 ()}
        {Lisp-Entry "get-modal-result" () 511 26 ()}
        {Lisp-Entry "has-dialog-result?" () 515 26 ("false")}
        {Lisp-Entry "get-editor-view" () 524 26 ()}
        {Lisp-Entry "content-valid?" () 533 26 ("true")}
        {Lisp-Entry "validate-content" () 537 26 ()}
        {Lisp-Entry "root-activated" () 546 26 ()}
        {Lisp-Entry "root-deactivated" () 550 26 ()}
        {Lisp-Entry "set-parent" () 559 11 ("get-player" "if" "set-player" "nextmethod" "parent")}
        {Lisp-Entry "outer-view" () 569 18 ("get-parent" "set!" "neq?" "inner?" "and" "while" "self" "view" "parent" "outer" "let" "limit")}
        {Lisp-Entry "inner?" () 578 26 ("false" "view")}
        {Lisp-Entry "get-title" () 587 26 ("title")}
        {Lisp-Entry "set-title" () 591 26 ("adjust-size" "title" "set!" "value")}
        {Lisp-Entry "show" () 601 11 ("invalidate-view" "nextmethod")}
        {Lisp-Entry "hide" () 606 11 ("invalidate-view" "nextmethod")}
        {Lisp-Entry "update-displayed" () 611 29 ()}
        {Lisp-Entry "get-enabled?" () 620 26 ("enabled?")}
        {Lisp-Entry "set-enabled?" () 624 26 ("invalidate-view" "enabled?" "set!" "flag")}
        {Lisp-Entry "get-scaled?" () 634 11 ("scaled?")}
        {Lisp-Entry "set-scaled?" () 638 11 ("invalidate-view" "parent" "if" "update-scrollbars" "update-displayed" "scaled?" "set!" "value")}
        {Lisp-Entry "get-scaling" () 649 11 ("scaling")}
        {Lisp-Entry "set-scaling" () 653 11 ("*" "round" "/" "scaling" "set!" "value")}
        {Lisp-Entry "get-action" () 662 18 ("action")}
        {Lisp-Entry "set-action" () 666 18 ("self" "register-actionable" "when" "require-action-item" "action-item" "let" "action" "set!" "value")}
        {Lisp-Entry "enabled-update" () 678 11 ("get-enabled?" "set-enabled?" "action-item")}
        {Lisp-Entry "get-outline" () 687 18 ("outline")}
        {Lisp-Entry "set-outline" () 691 18 ("outline" "set!" "value")}
        {Lisp-Entry "outline-select" () 695 18 ("list" "set-selection" "acquire-focus" "when" "0" "Cell" "new" "cell" "get-selection-mode" "eq?" "Tree-View" "is?" "and" "if" "elem" "outline" "row-rank" "rank" "outline-row" "row" "let*" "false" "focus?" "focus?:")}
        {Lisp-Entry "outline-row" () 704 18 ("Outline-Row" "find-ascendant")}
        {Lisp-Entry "get-offscreen?" () 713 11 ("offscreen?")}
        {Lisp-Entry "set-offscreen?" () 717 11 ("offscreen?" "set!" "flag")}
        {Lisp-Entry "get-overlay" () 726 11 ("overlay")}
        {Lisp-Entry "set-overlay" () 730 11 ("overlay" "set!" "value")}
        {Lisp-Entry "get-effect" () 739 11 ("effect")}
        {Lisp-Entry "set-effect" () 743 11 ("effect" "set!" "value")}
        {Lisp-Entry "get-user-data" () 752 18 ("user-data")}
        {Lisp-Entry "set-user-data" () 756 18 ("user-data" "set!" "value")}
        {Lisp-Entry "get-lie-parent" () 765 11 ("get-v" "scaling" "*" "position" "get-h" "+" "get-lie-parent" "nextmethod" "scaled?" "parent" "not" "or" "if" "sc" "v" "h")}
        {Lisp-Entry "get-global" () 776 18 ("get-lie" "player" "get-window-position" "+")}
        {Lisp-Entry "get-delta" () 785 11 ("nextmethod" "get-v" "get-h" "*" "values" "get-global" "-" "delta" "get-lie-parent" "sc" "v" "h" "receive" "neq?" "player" "and" "if" "get-player" "origin-player" "let" "origin")}
        {Lisp-Entry "default-position" () 799 11 ("0" "Point")}
        {Lisp-Entry "set-position" () 803 11 ("position-change" "invalidate-rect" "new" "set!" "self" "acquire" "old" "get-bounds" "essay" "bounds" "with" "View" "parent" "is?" "player" "and" "inval?" "let" "position" "/=" "when" "pos")}
        {Lisp-Entry "default-size" () 823 11 ("Dimension")}
        {Lisp-Entry "minimal-size" () 827 26 ()}
        {Lisp-Entry "preferred-size" () 831 26 ("get-size")}
        {Lisp-Entry "fit-size" () 835 26 ()}
        {Lisp-Entry "set-size" () 839 11 ("invalidate-rect" "content-size-change" "scroller" "unless" "size-change" "set!" "self" "acquire" "acquired" "rect-union" "rect" "size-rect" "new" "get-bounds" "essay" "old" "with" "View" "parent" "is?" "player" "and" "inval?" "let" "size" "/=" "when" "sz")}
        {Lisp-Entry "set-preferred-size" () 854 18 ("preferred-size" "set-size")}
        {Lisp-Entry "layout-view" () 863 18 ("layout-drawing")}
        {Lisp-Entry "front-view" () 872 18 ("children" "last")}
        {Lisp-Entry "back-view" () 876 18 ("children" "first")}
        {Lisp-Entry "send-before" () 880 11 ("invalidate-view" "nextmethod" "target")}
        {Lisp-Entry "bring-to-front" () 885 11 ("invalidate-view" "nextmethod")}
        {Lisp-Entry "send-to-back" () 890 11 ("invalidate-view" "nextmethod")}
        {Lisp-Entry "send-child-to-front" () 895 11 ("move-to-tail!" "children" "set!" "child")}
        {Lisp-Entry "send-child-to-back" () 899 11 ("move-to-head!" "children" "set!" "child")}
        {Lisp-Entry "scrollee-width" () 908 29 ("get-width")}
        {Lisp-Entry "scrollee-height" () 912 29 ("get-height")}
        {Lisp-Entry "get-update-locked?" () 921 18 ("update-locked?")}
        {Lisp-Entry "with-update-locked" () 925 18 ("invalidate-update" "false" "true" "set!" "begin" "unwind-protect" "update-locked?" "if" "proc")}
        {Lisp-Entry "invalidate-update" () 936 29 ("update-scrollbars" "invalidate-view")}
        {Lisp-Entry "get-renderer" () 946 18 ("renderer")}
        {Lisp-Entry "set-renderer" () 950 18 ("renderer" "set!" "value")}
        {Lisp-Entry "render" () 954 11 ("nextmethod" "self" "render" "renderer" "if" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "draw-background" () 965 11 ("fill-rect" "get-bounds" "bounds" "with" "when" "get-drawing-background" "background" "let" "context" "dc")}
        {Lisp-Entry "get-drawing-background" () 972 26 ("background" "context")}
        {Lisp-Entry "draw-content" () 976 11 ("draw" "font" "set-font" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "get-page-setup" () 986 26 ("get-application" "default-page-setup")}
        {Lisp-Entry "get-page-setup-designer" () 990 26 ("get-application" "default-page-setup-designer")}
        {Lisp-Entry "get-page-setup-for" () 994 18 ("set-active-branch" "when" "find-component" "branch" "get-page-setup" "page-setup" "let*" "name")}
        {Lisp-Entry "print-document" () 1007 26 ("print-job" ":nb-copies" ":to" "essay" ":from" ":selection?" "self" "Printer-Job" "job" "let" "0" "Rect" "setup-clipper" "LOGPIXELSX" "get-caps" "resolution" "printer" "get-page-setup-for" "page-setup" "DC" "new" "dc" "let*" "print-picture" "if" "Print-Dialog" "get-modal" "orientation" "nb-copies" "to" "from" "pages?" "selection?" "print-to-file?" "hdc" "receive" "print-document" "unimplemented")}
        {Lisp-Entry "print-picture" () 1021 26 ("message-box" "print-job" "self" "Picture-Job" "new" "job" "LOGPIXELSX" "desktop-dc" "get-caps" "resolution" "file" "get-page-setup-for" "page-setup" "let*" "delete-existing" "filename" "BrowseFolder-Dialog" "get-modal" "directory" "let" "print-picture" "unimplemented")}
        {Lisp-Entry "delete-existing" () 1034 11 ("false" "recursive?:" "delete-file" "get-name" "matches?" "when" "file" "dynamic" "function" "iterate-directory" "format" "Regular-Expression" "new" "regexp" "let" "filename" "directory")}
        {Lisp-Entry "print-layout" () 1043 26 ("acquire-focus" "get-guest" "pane" "client:" "host-title:" "Page-Editor" "new-frame" "frame" "layout-view" "not" "print-preview" "locate" "set-visible?" "Page-Toolbar" "get-workspace-splitter" "find-palette" "toolbar" "get-toplevel" "toplevel" "apply-preferences" ":previous" "page" "name:" "Page-Workspace" "new" "ws" "selected-workspace" "current" "current-document" "client" "let*" "dynamic" "function" "with-locked-update" "false" "from-preview?" "from-preview?:")}
        {Lisp-Entry "print-preview" () 1059 26 ("acquire-focus" "true" "layout-view" "not" "print-layout" "locate" "set-visible?" "Preview-Toolbar" "get-workspace-splitter" "find-palette" "toolbar" "get-toplevel" "toplevel" "apply-preferences" ":pane" ":previous" "preview" "name:" "Preview-Workspace" "new" "ws" "selected-workspace" "current" "get-guest" "pane" "self" "client:" "host-visible?:" "host-title:" "Preview-Pane" "new-frame" "frame" "let*" "dynamic" "function" "with-locked-update" "false" "from-layout?" "from-layout?:")}
        {Lisp-Entry "get-print-area" () 1075 26 ("scrollee-size" "0" "Point" "position/size->rect" "context")}
        {Lisp-Entry "paginate" () 1079 26 ("get-output" "0" "naturals" "put" "Rect" "page" "get-top" "v" "*" "get-left" "+" "h" "col" "row" "dynamic" "function" "for-each" "List-Factory" "new" "pages" "rows" "/" "ceil" "cols" "rect-height" "height" "rect-width" "width" "get-print-area" "area" "let*" "page-height" "page-width")}
        {Lisp-Entry "with-printing" () 1097 21 ("restore-printing" "when" "setup-printing" "set!" "begin" "unwind-protect" "preserved" "let" "proc")}
        {Lisp-Entry "setup-printing" () 1107 29 (":scaled?" "position:" "list" "update-displayed" "false" "0" "Point" "new" "set!" "scaled?" "sc?" "position" "pos" "let")}
        {Lisp-Entry "restore-printing" () 1116 29 ("update-displayed" ":scaled?" "scaled?" "position:" "getf" "position" "set!" "preserved")}
        {Lisp-Entry "export-picture" () 1128 18 ("move-pathname" "exists?" "when" "extensions:" ":default-extension" "SaveFile-Dialog" "get-modal" "either" "dest" "delete-file" "Cancel-Signal" "catch" "delete-metafile" ":empty?" "type:" "set-clipboard" "eq?" "if" "get-metafile" "set!" "false" "get-top" "get-left" "paint-drawing" "with-clipper" "offset-rect" "content" "with" "get-v" "lv" "get-h" "lh" "get-lie" "lie" "get-print-area" "area" "let*" "with-printing" "file:" "Picture" "new" "picture" "with-closed" "metafile" "dynamic" "function" ":wait" "with-cursor" "create-temporary-file" "clipboard" "case" "let" "true" "empty-clipboard?" "empty-clipboard?:" "destination" "destination:" "file" "where" "where:" "context" "context:")}
        {Lisp-Entry "get-scroller" () 1163 18 ("scroller")}
        {Lisp-Entry "set-scroller" () 1167 26 ("scroller" "set!" "view")}
        {Lisp-Entry "set-scroll-pos" () 1171 26 ("set-scroll-pos" "scroller" "when" "redraw?" "pos" "part")}
        {Lisp-Entry "set-scroll-info" () 1176 26 ("set-scroll-info" "scroller" "when" "page" "max" "min" "part")}
        {Lisp-Entry "update-scrollbars" () 1181 18 ("get-hscroll?" "set-hscroll-needed?" "horz" "if" "get-width" "-" "set-scroll-info" "get-vscroll?" ">" "set-vscroll-needed?" "vert" "get-page-size" "page" "get-height" "max" "0" "min" "let" "update-locked?" "not" "scroller" "and" "when")}
        {Lisp-Entry "vscroll-needed?" () 1197 18 ("vert" "get-page-size" "get-height" ">")}
        {Lisp-Entry "hscroll-needed?" () 1201 18 ("horz" "get-page-size" "0" "scroller" "get-vscroll?" "if" "get-width" "-" ">")}
        {Lisp-Entry "scroll" () 1205 18 ("get-scrolled-position" "+" "scroll-to" "0" "Point" "=" "unless" "delta")}
        {Lisp-Entry "scroll-to" () 1210 18 ("clip-rect:" "scroll-view" "self" "acquire" "clip-rect" "get-view-clipper" "clipper" "get-bounds" "rect" "with" "scroller" "invalidate-view" "scroll-invalidate" "dv" "dh" "update-scrollbars" "vert" "true" "horz" "set-scroll-pos" "scrolled" "set!" "position" "*" "Point" "new" "new-pos" "get-v" "v" "get-h" "max" "min" "round" "h" "max-v" "0" "max-h" "get-height" "min-v" "get-width" "/" "-" "min-h" "scaling" "scaled?" "if" "sc" "display-size" "get-display" "display" "get-size" "size" "let*" "/=" "when" "get-scrolled-position" "pos" "let" "dest")}
        {Lisp-Entry "redraw-scrollbars" () 1244 29 ()}
        {Lisp-Entry "scroll-invalidate" () 1248 29 ("dv" "dh")}
        {Lisp-Entry "scroll-view" () 1252 18 ("*" "round" "scroll-window" "get-lie-parent" "sc" "v" "h" "receive" "either" "get-display-rect" "display-rect" "self" "acquire" "acquired" "with" "fully-visible?" "and" "when" "get-display" "display" "get-root" "root" "get-player" "player" "let" "true" "erase?" "erase?:" "clip-rect" "clip-rect:" "rect" "dv" "dh")}
        {Lisp-Entry "get-scrolled-position" () 1264 18 ("get-display-position" "-")}
        {Lisp-Entry "get-scrolled-h" () 1268 18 ("get-scrolled-position" "get-h")}
        {Lisp-Entry "get-scrolled-v" () 1272 18 ("get-scrolled-position" "get-v")}
        {Lisp-Entry "set-scrolled-position" () 1276 18 ("set-position" "scroller" "when" "pos")}
        {Lisp-Entry "get-scroll-client" () 1281 26 ("self")}
        {Lisp-Entry "get-line-size" () 1285 26 ("8" "horz" "vert" "case" "orientation")}
        {Lisp-Entry "get-page-size" () 1291 26 ("scaling" "/" "round" "scaled?" "not" "if" "get-width" "horz" "parent" "get-height" "vert" "case" "size" "let" "orientation")}
        {Lisp-Entry "with-scrollee-locked" () 1301 18 ("false" "true" "set!" "begin" "unwind-protect" "scrollee-locked?" "if" "proc")}
        {Lisp-Entry "layout-scrollee" () 1311 26 ("layout-scrollee-content" "update-scrollbars" "dynamic" "function" "with-scrollee-locked" "scrollee-locked?" "unless" "fit-in-scroller" "set-size" "scrollee-size" "size" "let" "update-locked?" "not" "scroller" "and" "when")}
        {Lisp-Entry "layout-scrollee-patch" () 1329 26 ()}
        {Lisp-Entry "layout-scrollee-content" () 1333 26 ()}
        {Lisp-Entry "fit-in-scroller" () 1337 11 ("-" "0" "Point" "new" "scroll" "" "when" "get-display-height" "fit" "get-bottom" "bottom" "let")}
        {Lisp-Entry "scrollee-size" () 1344 26 ("get-size")}
        {Lisp-Entry "on-vscroll" () 1348 26 ("orientation" "thumb-pos" "code")}
        {Lisp-Entry "on-hscroll" () 1352 26 ("orientation" "thumb-pos" "code")}
        {Lisp-Entry "content-size-change" () 1364 26 ("size")}
        {Lisp-Entry "get-display" () 1368 18 ("self" "parent" "scroller" "if")}
        {Lisp-Entry "get-display-position" () 1374 18 ("0" "get-v" "scaling" "get-h" "/" "round" "Point" "new" "scaled?" "not" "get-position" "-" "pos" "let" "scroller" "if")}
        {Lisp-Entry "get-display-h" () 1385 18 ("get-display-position" "get-h")}
        {Lisp-Entry "get-display-v" () 1389 18 ("get-display-position" "get-v")}
        {Lisp-Entry "get-display-size" () 1393 18 ("get-height" "scaling" "get-width" "/" "round" "Dimension" "new" "scaled?" "not" "parent" "get-size" "size" "let" "scroller" "if")}
        {Lisp-Entry "get-display-width" () 1402 18 ("get-display-size" "get-width" "scroller" "if")}
        {Lisp-Entry "get-display-height" () 1408 18 ("get-display-size" "get-height" "scroller" "if")}
        {Lisp-Entry "get-display-rect" () 1414 18 ("parent" "get-bounds" "scroller" "if")}
        {Lisp-Entry "view->display" () 1420 18 ("get-v" "scaling" "/" "get-h" "round" "Point" "new" "position" "+" "scaled?" "not" "scroller" "if" "pos")}
        {Lisp-Entry "h-view->display" () 1428 18 ("get-scrolled-position" "get-h" "+" "scroller" "if" "h")}
        {Lisp-Entry "v-view->display" () 1434 18 ("get-scrolled-position" "get-v" "+" "scroller" "if" "v")}
        {Lisp-Entry "display->view" () 1440 18 ("get-scrolled-position" "-" "scroller" "if" "pos")}
        {Lisp-Entry "h-display->view" () 1446 18 ("get-scrolled-position" "get-h" "-" "scroller" "if" "h")}
        {Lisp-Entry "v-display->view" () 1452 18 ("get-scrolled-position" "get-v" "-" "scroller" "if" "v")}
        {Lisp-Entry "scroll-displayed" () 1458 18 ("get-display" "scroll-view" "true" "erase?" "erase?:" "clip-rect" "clip-rect:" "rect" "v" "h")}
        {Lisp-Entry "scroll-needed" () 1462 18 ("get-height" "cdr" "get-v" "get-width" "car" "essay" "get-h" "Point" "new" "else" "" "head" "eq?" "not" "and" "tail" "neq?" "cond" "0" "*" "round" "if" "use-head?" "proc" ">" "big-range?" "+" "end-offset" "-" "start-offset" "let*" "force-direction" "size" "pos" "dynamic" "function" "needed" "get-display-size" "display-size" "get-display-position" "display-pos" "let" "false" "reposition?" "reposition?:" "force-horizontal" "force-horizontal:" "force-vertical" "force-vertical:" "context" "end" "start")}
        {Lisp-Entry "horizontal-scroll-needed" () 1483 18 (">" "forward" "0" "-" "" "if" "backward" "case" "get-display-width" "+" "end" "get-display-h" "start" "let*" "direction" "target")}
        {Lisp-Entry "vertical-scroll-needed" () 1497 18 (">" "forward" "0" "-" "" "if" "backward" "case" "get-display-height" "+" "end" "get-display-v" "start" "let*" "direction" "target")}
        {Lisp-Entry "get-font" () 1516 18 ("font")}
        {Lisp-Entry "set-font" () 1520 26 ("adjust-size" "font" "set!" "fnt")}
        {Lisp-Entry "get-background" () 1530 18 ("background")}
        {Lisp-Entry "set-background" () 1534 18 ("invalidate-view" "background" "set!" "color")}
        {Lisp-Entry "get-auto-size?" () 1544 18 ("auto-size?")}
        {Lisp-Entry "set-auto-size?" () 1548 18 ("adjust-size" "auto-size?" "set!" "value")}
        {Lisp-Entry "adjust-size" () 1553 18 ("set-preferred-size" "invalidate-view" "auto-size?" "not" "if")}
        {Lisp-Entry "for-each-view" () 1564 18 ("get-visible?" "or" "View" "is?" "and" "when" "children" "in" "child" "for" "loop" "false" "include-invisibles?" "include-invisibles?:" "proc")}
        {Lisp-Entry "for-each-view-reversed" () 1571 18 ("children" "for-each-reversed" "get-visible?" "or" "View" "is?" "and" "when" "child" "dynamic" "function" "let" "false" "include-invisibles?" "include-invisibles?:" "proc")}
        {Lisp-Entry "find-mouse-view" () 1585 18 ("find-drawing" "get-captured-view" "either" "pos")}
        {Lisp-Entry "first-view" () 1595 18 ("get-views" "first")}
        {Lisp-Entry "last-view" () 1599 18 ("get-views" "last")}
        {Lisp-Entry "get-views" () 1603 18 ("get-children" "collect-if" "get-visible?" "or" "View" "is?" "and" "child" "dynamic" "function" "proc" "with" "false" "include-invisibles?" "include-invisibles?:")}
        {Lisp-Entry "front-view?" () 1611 18 ("parent" "first-view" "self" "eq?")}
        {Lisp-Entry "focus-actions" () 1620 11 ("nextmethod" "view" "find-actions" "cons")}
        {Lisp-Entry "guest-actions" () 1625 11 ("nextmethod" "guest" "find-actions" "cons")}
        {Lisp-Entry "get-content-change-handler" () 1635 18 ("content-change-handler")}
        {Lisp-Entry "set-content-change-handler" () 1639 18 ("content-change-handler" "set!" "value")}
        {Lisp-Entry "call-content-change" () 1643 11 ("invoke" "origin:" "list" "self" ":change" "Event" "new" "event" "let" "content-change" "content-change-handler" "not" "if" "origin")}
        {Lisp-Entry "content-change" () 1650 26 ("origin")}
        {Lisp-Entry "get-selection-handler" () 1659 18 ("selection-handler")}
        {Lisp-Entry "set-selection-handler" () 1663 18 ("selection-handler" "set!" "handler")}
        {Lisp-Entry "call-selection-handler" () 1667 18 ("user-origin?:" "force?:" ":selection-change" "Selection-Event" "new" "self" "invoke" "selection-handler" "when" "user-origin?" "force?" "selection" "old")}
        {Lisp-Entry "get-modified?" () 1678 26 ("modified?")}
        {Lisp-Entry "set-modified?" () 1682 26 ("set!" "modified?" "/=" "when" "state")}
        {Lisp-Entry "register-pulse" () 1691 18 ("NULL" "self" "object->serial-number" "get-handle" "SetTimer" "get-player" "player" "let" "period")}
        {Lisp-Entry "unregister-pulse" () 1696 18 ("get-handle" "KillTimer" "get-player" "player" "let" "identifier")}
        {Lisp-Entry "call-pulse" () 1701 11 ("pulse")}
        {Lisp-Entry "pulse" () 1705 11 ()}
        {Lisp-Entry "position-change" () 1714 26 ("position")}
        {Lisp-Entry "size-change" () 1718 26 ("call-layout" "get-finished?" "invalidate-layout" "resize" "0" "/=" "or" "dv" "-" "dh" "when" "set!" "height" "width" "get-height" "ph" "get-width" "previous-size" "essay" "pw" "let" "size")}
        {Lisp-Entry "resize" () 1734 29 ("dv" "dh")}
        {Lisp-Entry "acquire-focus" () 1743 18 ("self" "set-focus")}
        {Lisp-Entry "call-focus-gain" () 1747 18 ("focus-gain" "self" "get-focus-actions" "get-application" "set-focus-actions")}
        {Lisp-Entry "call-focus-lose" () 1752 18 ("throw-cancel" "self" "set-focus" "focus-lose" "get-application" "set-focus-actions" "begin" "focus-validate" "different-overlapped?" "or" "if" "view" "window")}
        {Lisp-Entry "focus-validate" () 1761 26 ("true" "view")}
        {Lisp-Entry "focus-lose" () 1765 26 ("view" "window")}
        {Lisp-Entry "focus-master" () 1769 26 ("self")}
        {Lisp-Entry "focus-gain" () 1773 26 ()}
        {Lisp-Entry "focus-delegate" () 1777 26 ()}
        {Lisp-Entry "focus-update-actions" () 1781 26 ()}
        {Lisp-Entry "get-action-handler" () 1790 18 ("action-handler")}
        {Lisp-Entry "set-action-handler" () 1794 26 ("action-handler" "set!" "x")}
        {Lisp-Entry "process-action" () 1798 26 ("notify-action" "action-properties" "properties" "sender")}
        {Lisp-Entry "action-properties" () 1802 29 ()}
        {Lisp-Entry "notify-action" () 1806 18 ("self" "invoke" ":action" "Action-Event" "new" "apply" "event" "get-properties" "either" "let*" "call-action" "action" "when" "action-handler" "not" "if" "properties" "sender")}
        {Lisp-Entry "get-receive-files-handler" () 1820 18 ("receive-files-handler")}
        {Lisp-Entry "set-receive-files-handler" () 1823 18 ("receive-files-handler" "set!" "handler")}
        {Lisp-Entry "dispatch-receive-files" () 1827 21 ("call-receive-files" "self" "acquire" "view-pos" "when" "find-mouse-view" "view" "let" "files" "pos")}
        {Lisp-Entry "call-receive-files" () 1834 18 ("receive-files" ":files" "position:" ":receive-files" "Event" "new" "self" "invoke" "receive-files-handler" "if" "files" "pos")}
        {Lisp-Entry "receive-files" () 1840 26 ("receive-files" "get-application" "appl" "let" "pathnames" "pos")}
        {Lisp-Entry "get-cursor-update-handler" () 1850 18 ("cursor-update-handler")}
        {Lisp-Entry "set-cursor-update-handler" () 1854 18 ("cursor-update-handler" "set!" "handler")}
        {Lisp-Entry "call-cursor-update" () 1858 18 ("invoke" "self" ":set-cursor" "Cursor-Event" "new" "event" "with" "cursor-update" "cursor-update-handler" "not" "if" "pos")}
        {Lisp-Entry "cursor-update" () 1865 26 (":arrow" "set-cursor" "Current-Drag-Drop" "unless" "pos")}
        {Lisp-Entry "mouse-pressed?" () 1870 18 ("mouse-down?")}
        {Lisp-Entry "mouse-right-pressed?" () 1874 18 ("mouse-right-down?")}
        {Lisp-Entry "mouse-in?" () 1878 18 ("mouse-in" "self" "eq?")}
        {Lisp-Entry "mouse-over?" () 1882 18 ("mouse-position" "over-view?")}
        {Lisp-Entry "over-view?" () 1886 18 ("in-rect?" "get-bounds" "bounds" "with" "point")}
        {Lisp-Entry "mouse-position" () 1891 18 ("mouse-position" "acquire" "get-root" "root" "get-player" "player" "let")}
        {Lisp-Entry "get-mouse-enter-handler" () 1902 18 ("mouse-enter-handler")}
        {Lisp-Entry "set-mouse-enter-handler" () 1905 18 ("mouse-enter-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-hover-handler" () 1909 18 ("mouse-hover-handler")}
        {Lisp-Entry "set-mouse-hover-handler" () 1912 18 ("mouse-hover-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-leave-handler" () 1916 18 ("mouse-leave-handler")}
        {Lisp-Entry "set-mouse-leave-handler" () 1919 18 ("mouse-leave-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-down-handler" () 1923 18 ("mouse-down-handler")}
        {Lisp-Entry "set-mouse-down-handler" () 1926 18 ("mouse-down-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-move-handler" () 1930 18 ("mouse-move-handler")}
        {Lisp-Entry "set-mouse-move-handler" () 1933 18 ("mouse-move-handler" "set!" "handler")}
        {Lisp-Entry "get-mouse-up-handler" () 1937 18 ("mouse-up-handler")}
        {Lisp-Entry "set-mouse-up-handler" () 1940 18 ("mouse-up-handler" "set!" "handler")}
        {Lisp-Entry "get-drag-move-handler" () 1944 18 ("drag-move-handler")}
        {Lisp-Entry "set-drag-move-handler" () 1947 18 ("drag-move-handler" "set!" "handler")}
        {Lisp-Entry "get-drag-up-handler" () 1951 18 ("drag-up-handler")}
        {Lisp-Entry "set-drag-up-handler" () 1954 18 ("drag-up-handler" "set!" "handler")}
        {Lisp-Entry "get-double-click-handler" () 1958 18 ("double-click-handler")}
        {Lisp-Entry "set-double-click-handler" () 1961 18 ("double-click-handler" "set!" "handler")}
        {Lisp-Entry "dispatch-mouse-hover" () 1965 21 ("popup-tooltip" "get-tooltip?" "call-mouse-hover" "self" "acquire" "view-pos" "let" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "call-mouse-hover" () 1976 11 ("mouse-hover" ":mouse-hover" "Mouse-Event" "new" "self" "invoke" "mouse-hover-handler" "if" "pos")}
        {Lisp-Entry "dispatch-mouse-wheel" () 1983 21 ("mouse-wheel" "when" "get-focus" "view" "let" "delta")}
        {Lisp-Entry "dispatch-mouse-down" () 1989 21 ("call-cursor-update" "call-mouse-down" "get-root" "mouse-activate" "mouse-activate?" "mouse-down-point" "mouse-down-view" "true" "mouse-down?" "set!" "self" "acquire" "acquired" "let" "mouse-down" "event:" "close-popups" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "call-mouse-down" () 2004 18 ("mouse-down" ":mouse-down" "Mouse-Event" "new" "self" "invoke" "mouse-down-handler" "if" "pos")}
        {Lisp-Entry "dispatch-mouse-move" () 2010 21 ("process-mouse-move" "process-drag-move" "call-cursor-update" "self" "mouse-down-view" "acquire" "acquired" "mouse-down?" "if" "call-mouse-enter" "track-tooltip" "Current-Drag-Drop" "set!" "cancel-tooltip-tracking" "in-tooltip?" "Tooltip" "get-player" "is?" "and" "or" "unless" "call-mouse-leave" "mouse-in" "neq?" "when" "find-mouse-view" "view" "let" "Point" "new" "pos" "with" "v" "h")}
        {Lisp-Entry "process-mouse-move" () 2033 11 ("call-mouse-move" "process-tooltip" "Current-Tooltip-Context" "if" "pos")}
        {Lisp-Entry "call-mouse-move" () 2039 11 ("mouse-move" "invoke" "self" ":mouse-move" "Mouse-Event" "new" "event" "with" "mouse-move-handler" "if" "pos")}
        {Lisp-Entry "dispatch-mouse-up" () 2046 21 ("set!" "action" "delayed-mouse-action" "process-mouse-up" "call-cursor-update" "acquired" "let" "self" "acquire" "mouse-down-view" "process-drag-up" "mouse-down?" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "process-mouse-up" () 2061 11 ("call-mouse-up" "drag-drop" "Current-Drag-Drop" "when" "pos")}
        {Lisp-Entry "call-mouse-up" () 2067 11 ("mouse-up" ":mouse-up" "Mouse-Event" "new" "self" "invoke" "mouse-up-handler" "if" "pos")}
        {Lisp-Entry "process-drag-move" () 2073 11 ("call-drag-move" "drag-follow" "get-drag-hotspot" "mouse-down-point" "-" "drag-start" "get-drag-drop" "drag-drop" "let" "allow-start-drag?" "when" "begin" "get-source" "get-view" "Current-Drag-Drop" "not" "or" "get-draggable?" "mouse-down-view" "self" "eq?" "and" "if" "pos")}
        {Lisp-Entry "allow-start-drag?" () 2085 29 ("drag-tolerance" "mouse-down-point" "near?" "Current-Drag-Drop" "not" "mouse-down?" "and" "pos")}
        {Lisp-Entry "call-drag-move" () 2089 11 ("drag-move" ":drag-move" "Mouse-Event" "new" "self" "invoke" "drag-move-handler" "if" "pos")}
        {Lisp-Entry "process-drag-up" () 2095 11 ("call-drag-up" "false" "mouse-down?" "set!" "Current-Drag-Drop" "dragging?" "pos")}
        {Lisp-Entry "call-drag-up" () 2100 11 ("drag-up" ":drag-up" "Mouse-Event" "new" "self" "invoke" "drag-up-handler" "if" "dragging?" "pos")}
        {Lisp-Entry "dispatch-double-click" () 2106 21 ("call-double-click" "get-root" "mouse-activate" "mouse-activate?" "mouse-down-point" "mouse-down-view" "true" "mouse-down?" "set!" "self" "acquire" "acquired" "let" "double-click" "event:" "close-popups" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "call-double-click" () 2120 26 ("double-click" ":double-click" "Mouse-Event" "new" "self" "invoke" "double-click-handler" "if" "pos")}
        {Lisp-Entry "dispatch-context-menu" () 2126 21 ("self" "acquire" "call-context-menu" "context-menu" "event:" "close-popups" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "false" "set!" "inhibit-context-menu?" "if" "v" "h")}
        {Lisp-Entry "call-context-menu" () 2136 18 ("context-menu" ":context-menu" "Mouse-Event" "new" "self" "invoke" "context-menu-handler" "if" "pos")}
        {Lisp-Entry "dispatch-middle-mouse-down" () 2142 21 ("self" "acquire" "middle-mouse-down" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "dispatch-middle-mouse-up" () 2149 21 ("self" "acquire" "middle-mouse-up" "when" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "dispatch-right-mouse-down" () 2156 21 ("self" "acquire" "right-mouse-down" "when" "true" "mouse-right-down?" "set!" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "dispatch-right-mouse-up" () 2164 21 ("self" "acquire" "right-mouse-up" "when" "false" "mouse-right-down?" "set!" "find-mouse-view" "view" "Point" "new" "pos" "let*" "v" "h")}
        {Lisp-Entry "call-mouse-enter" () 2172 11 ("mouse-enter" ":mouse-enter" "Mouse-Event" "new" "self" "invoke" "mouse-enter-handler" "if")}
        {Lisp-Entry "call-mouse-leave" () 2178 11 ("mouse-leave" ":mouse-leave" "Mouse-Event" "new" "self" "invoke" "mouse-leave-handler" "if")}
        {Lisp-Entry "mouse-hover" () 2184 26 ("pos")}
        {Lisp-Entry "mouse-wheel" () 2188 26 ("true" "inhibit-context-menu?" "set!" "when" "0" "3" "quotient" "Point" "new" "scroll" "begin" "mouse-right-down?" "shift-down?" "or" "if" "delta")}
        {Lisp-Entry "mouse-enter" () 2197 26 ()}
        {Lisp-Entry "mouse-leave" () 2201 26 ()}
        {Lisp-Entry "mouse-down" () 2205 26 ("pos")}
        {Lisp-Entry "mouse-move" () 2209 26 ("pos")}
        {Lisp-Entry "mouse-up" () 2213 26 ("pos")}
        {Lisp-Entry "drag-move" () 2217 26 ("pos")}
        {Lisp-Entry "drag-up" () 2221 26 ("rest" "pos")}
        {Lisp-Entry "double-click" () 2225 26 ("call-mouse-down" "pos")}
        {Lisp-Entry "with-context-click" () 2229 26 ("proc" "pos")}
        {Lisp-Entry "context-menu" () 2233 26 ("pos")}
        {Lisp-Entry "get-context-menu" () 2237 26 ()}
        {Lisp-Entry "middle-mouse-down" () 2241 26 ("mouse-down" "pos")}
        {Lisp-Entry "middle-mouse-up" () 2245 26 ("mouse-up" "pos")}
        {Lisp-Entry "right-mouse-down" () 2249 26 ("pos")}
        {Lisp-Entry "right-mouse-up" () 2253 26 ("pos")}
        {Lisp-Entry "mouse-activate?" () 2257 26 ("true")}
        {Lisp-Entry "mouse-view" () 2261 18 ("mouse-in" "Captured-View" "either")}
        {Lisp-Entry "track-hovering" () 2271 18 (":time" "TME_HOVER" "track-mouse-event" "when" "get-player" "player" "let" "HOVER_DEFAULT" "time" "time:")}
        {Lisp-Entry "cancel-hovering" () 2278 18 ("TME_HOVER" "TME_CANCEL" "bit-or" "track-mouse-event" "when" "get-player" "player" "let")}
        {Lisp-Entry "Current-Tooltip-Context" () 2290 14 ()}
        {Lisp-Entry "Last-Tooltip-Time" () 2293 14 ()}
        {Lisp-Entry "Last-Tooltip-Context-Pos" () 2296 14 ()}
        {Lisp-Entry "track-tooltip" () 2300 11 (":time" "track-hovering" "clock" "-" "" "Last-Tooltip-Time" "and" "if" "get-player" "player" "let" "get-tooltip?" "when")}
        {Lisp-Entry "cancel-tooltip-tracking" () 2310 11 ("close-tooltip" "cancel-hovering")}
        {Lisp-Entry "reset-tooltip" () 2316 18 ("track-tooltip" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "cancel-tooltip-tracking")}
        {Lisp-Entry "in-tooltip?" () 2327 11 ("self" "acquire" "in-rect?" "get-bounds" "rect" "get-view" "view" "let" "Current-Tooltip-Context" "when" "pos")}
        {Lisp-Entry "process-tooltip" () 2335 11 ("reset-tooltip" "self" "acquire" "in-rect?" "not" "and" "when" "get-bounds" "rect" "Current-Tooltip-Context" "get-view" "view" "let" "Tooltip" "get-overlapped" "is?" "unless" "pos")}
        {Lisp-Entry "popup-tooltip" () 2343 11 ("popup-text" "get-text" "text" "reset-tooltip" "begin" "not" "if" "Current-Tooltip-Context" "set!" "get-tooltip-context" "Last-Tooltip-Context-Pos" "/=" "essay" "context" "let" "close-tooltip" "in-tooltip?" "Current-Drag-Drop" "mouse-down?" "or" "unless" "pos")}
        {Lisp-Entry "popup-text" () 2356 11 ("Current-Tooltip-Context" "set-tooltip" "border:" "Tooltip" "class:" "0" "Dimension" "+" "get-position" "either" "popup" "tooltip" "get-cursor-height" "height" "let*" "set-preferred-size" "set-font" "when" "get-font" "font" "solid" "border-type:" "Border-View" "new" "border" "new-tooltip-view" "view" "let" "text" "context" "pos")}
        {Lisp-Entry "new-tooltip-view" () 2368 11 ("title:" "Tooltip-Label" "2" "get-size" "+" "set-size" "set-text" "get-text" "text-view" "Dimension" "size:" "Tooltip-Text" "new" "view" "let*" "pair?" "get-formatted-tooltip?" "and" "if" "text")}
        {Lisp-Entry "close-tooltip" () 2378 11 ("clock" "Last-Tooltip-Time" "set!" "get-tooltip" "View-Player" "close-popup" "Current-Tooltip-Context" "when")}
        {Lisp-Entry "get-cursor-height" () 2385 11 ("else" "9" ":ibeam" "case" "get-cursor" "cursor" "let")}
        {Lisp-Entry "get-lost-capture-handler" () 2397 18 ("lost-capture-handler")}
        {Lisp-Entry "set-lost-capture-handler" () 2400 18 ("lost-capture-handler" "set!" "handler")}
        {Lisp-Entry "call-lost-capture" () 2404 11 ("get-window" ":lost-capture" "Capture-Event" "new" "self" "invoke" "lost-capture-handler" "when" "hwnd")}
        {Lisp-Entry "get-selected-element" () 2415 18 ("get-name" "when" "children" "get-selected?" "get-group" "eq?" "not" "or" "is?" "and" "child" "dynamic" "function" "find-if" "element" "let" "group" "group:" "Radio-Button" "class" "class:")}
        {Lisp-Entry "set-selected-element" () 2426 18 ("error" "unless" "children" "true" "set!" "set-selected?" "get-name" "selected?" "get-group" "eq?" "not" "or" "is?" "and" "when" "child" "dynamic" "function" "for-each" "false" "found?" "let" "group" "group:" "Radio-Button" "class" "class:" "name")}
        {Lisp-Entry "unselect-elements" () 2440 18 ("children" "unselect" "get-group" "eq?" "not" "or" "is?" "and" "when" "child" "dynamic" "function" "for-each" "group" "group:" "Radio-Button" "class" "class:")}
        {Lisp-Entry "get-context-menu-handler" () 2453 18 ("context-menu-handler")}
        {Lisp-Entry "set-context-menu-handler" () 2456 18 ("context-menu-handler" "set!" "handler")}
        {Lisp-Entry "track-popup-menu" () 2460 18 ("Menu-Transient" "class:" "popup" "let" "all-invisible?" "unless" "error" "Context-Menu" "is-not?" "if" "self" "initiator" "initiator:" "alternate-position" "alternate-position:" "pos" "menu")}
        {Lisp-Entry "all-invisible?" () 2468 11 ("get-children" "get-visible?" "not" "item" "dynamic" "function" "every?" "menu")}
        {Lisp-Entry "get-context-text" () 2479 11 ()}
        {Lisp-Entry "mouse-copy" () 2488 26 ("false" "destination" "pos")}
        {Lisp-Entry "mouse-insert" () 2492 26 ("object")}
        {Lisp-Entry "to-desktop" () 2501 18 ("self" "acquire" "get-root" "root" "get-player" "player" "get-desktop" "desktop" "let" "shape")}
        {Lisp-Entry "from-desktop" () 2508 18 ("acquire" "get-root" "root" "get-player" "player" "get-desktop" "desktop" "let" "shape")}
        {Lisp-Entry "popup" () 2520 18 ("fade-in" "set-effect" "layout-view" "set-visible?" "set-size" "0" "Point" "set-position" "get-root" "set-parent" "set-initiator" "size:" "fit-point" "position:" "popup" "raised" "border-type:" "name:" "Border-View" "new" "4" "Dimension" "+" "size" "either" "to-desktop" "alternate" "get-size" "max" "get-player" "player" "get-desktop" "desktop" "get-toplevel" "toplevel" "let*" "true" "close-root?" "close-root?:" "effect" "effect:" "fade-speed" "fade-speed:" "border" "border:" "Popup" "class" "class:" "self" "initiator" "initiator:" "alternate-position" "alternate-position:" "position" "view")}
        {Lisp-Entry "close-popups" () 2542 26 ("player" "close-popups" "exclude" "exclude:" "false" "all?" "all?:" "event" "event:")}
        {Lisp-Entry "popup-destroy" () 2546 26 ("popup")}
        {Lisp-Entry "popup-initiator" () 2550 18 ("get-initiator" "Popup" "is?" "when" "get-overlapped" "overlapped" "let")}
        {Lisp-Entry "owned?" () 2556 18 ("get-overlapped" "get-owners" "memq?" "overlapped")}
        {Lisp-Entry "get-draggable?" () 2565 26 ("draggable?")}
        {Lisp-Entry "set-draggable?" () 2569 18 ("draggable?" "set!" "flag")}
        {Lisp-Entry "get-drag-tolerance" () 2573 18 ("drag-tolerance")}
        {Lisp-Entry "set-drag-tolerance" () 2577 18 ("drag-tolerance" "set!" "tolerance")}
        {Lisp-Entry "get-drag-drop" () 2581 26 (":source" "DnD" "new" "when" "get-drag-source" "source" "let")}
        {Lisp-Entry "get-drag-hotspot" () 2587 26 ("0" "Point")}
        {Lisp-Entry "get-drag-source" () 2591 26 ("get-drag-image" "image:" "position:" "self" "view:" "Drag-Source" "new" "get-drag-position" "pos" "let")}
        {Lisp-Entry "get-drag-position" () 2596 26 ("mouse-down-point")}
        {Lisp-Entry "get-drag-image" () 2600 26 ("pos")}
        {Lisp-Entry "drag-start" () 2604 11 ("process-drag-feedback" "hide-drag-image" "get-desktop" "ImageList_DragEnter" "to-desktop" "global" "get-v" "get-h" "get-handle" "ImageList_BeginDrag" "get-image-name" "image-name" "get-portfolio" "portfolio" "get-image" "image" "let*" "acquire-capture" "acquire-focus" ":no" "set-cursor" "get-source" "get-view" "view" "let" "Current-Drag-Drop" "set!" "drag-drop" "hotspot" "pos")}
        {Lisp-Entry "drag-follow" () 2621 11 ("process-drag-feedback" "get-v" "get-h" "ImageList_DragMove" "to-desktop" "global" "get-source" "get-view" "view" "drag-drop" "let*" "Current-Drag-Drop" "when" "pos")}
        {Lisp-Entry "drag-drop" () 2630 11 ("drop" "get-target" "when" "drag-end" "pos" "drag-drop")}
        {Lisp-Entry "drag-end" () 2636 11 ("set!" "get-source" "get-view" "release-capture" "get-desktop" "get-handle" "ImageList_DragLeave" "ImageList_EndDrag" "unhighlight-current" "hide-drag-image" "drag-drop" "let" "Current-Drag-Drop" "when")}
        {Lisp-Entry "process-drag-feedback" () 2647 11 ("show-drag-image" "highlight-current" "set-target" "unhighlight-current" "hide-drag-image" ":no" ":move" "if" "set-cursor" "get-target" "neq?" "call-current-drop" "target" "to-view" "local" "when" "set-view" "find-view" "view" "get-desktop" "desktop" "get-view" "current" "Current-Drag-Drop" "drag-drop" "let*" "global")}
        {Lisp-Entry "hide-drag-image" () 2667 11 ("false" "ImageList_DragShowNolock")}
        {Lisp-Entry "show-drag-image" () 2671 11 ("true" "ImageList_DragShowNolock")}
        {Lisp-Entry "highlight-current" () 2675 11 ("highlight-drop" "local" "view" "drag-drop")}
        {Lisp-Entry "unhighlight-current" () 2679 11 ("get-view" "unhighlight-drop" "when" "get-target" "current-target" "let" "drag-drop")}
        {Lisp-Entry "highlight-drop" () 2685 26 ("pos" "drag-drop")}
        {Lisp-Entry "unhighlight-drop" () 2689 26 ("drag-drop")}
        {Lisp-Entry "get-current-drop-handler" () 2698 18 ("current-drop-handler")}
        {Lisp-Entry "set-current-drop-handler" () 2701 18 ("current-drop-handler" "set!" "handler")}
        {Lisp-Entry "call-current-drop" () 2705 18 ("current-drop" ":drop-target" "Drop-Event" "new" "self" "invoke" "current-drop-handler" "if" "pos" "drag-drop")}
        {Lisp-Entry "current-drop" () 2711 26 ("pos" "drag-drop")}
        {Lisp-Entry "standard-current-drop" () 2715 18 ("current-drop" ":criteria" "position:" "view:" ":handler" "Drop-Target" "new" "accepts?" "dynamic" "function" "find-if" "criteria" "let" "neq?" "if" "cons" "drag-info" "drag-over" "get-source" "get-view" "drag-start" "get-target" "current" "get-drag-drop" "drag-drop" "get-position" "pos" "get-sender" "sender" "let*" "handler" "handler:" "acceptance" "evt")}
        {Lisp-Entry "get-receive-drop-handler" () 2731 18 ("receive-drop-handler")}
        {Lisp-Entry "set-receive-drop-handler" () 2734 18 ("receive-drop-handler" "set!" "handler")}
        {Lisp-Entry "drop" () 2738 26 ("acquire" "self" "call-receive-drop" "when" "get-handler" "either" "dst" "get-target" "trg" "get-source" "get-view" "src" "let*" "pos" "drag-drop")}
        {Lisp-Entry "call-receive-drop" () 2746 18 ("receive-drop" ":receive-drop" "Drop-Event" "new" "self" "invoke" "receive-drop-handler" "if" "drag-drop" "pos" "sender")}
        {Lisp-Entry "receive-drop" () 2752 26 ("drag-drop" "pos" "sender")}
        {Lisp-Entry "get-key-down-handler" () 2761 18 ("key-down-handler")}
        {Lisp-Entry "set-key-down-handler" () 2765 18 ("key-down-handler" "set!" "handler")}
        {Lisp-Entry "get-key-up-handler" () 2769 18 ("key-up-handler")}
        {Lisp-Entry "set-key-up-handler" () 2773 18 ("key-up-handler" "set!" "handler")}
        {Lisp-Entry "get-key-press-handler" () 2777 18 ("key-press-handler")}
        {Lisp-Entry "set-key-press-handler" () 2781 18 ("key-press-handler" "set!" "handler")}
        {Lisp-Entry "call-key-down" () 2785 11 ("key-down" ":key-down" "Keyboard-Event" "new" "self" "invoke" "key-down-handler" "if" "key")}
        {Lisp-Entry "call-key-up" () 2791 11 ("key-up" ":key-up" "Keyboard-Event" "new" "self" "invoke" "key-up-handler" "if" "key")}
        {Lisp-Entry "call-key-press" () 2797 21 ("record" "record-event?" "content:" "key:" "char?" "Event" "event" "on-insert" ":focus" "Event-Handler" "handler" "let" "get-recorder" "recorder" "get-application" "appl" "let*" "macro-recording?" "when" "key-press" ":char" "Keyboard-Event" "new" "self" "invoke" "key-press-handler" "if" "key")}
        {Lisp-Entry "get-arrow-press-handler" () 2812 18 ("arrow-press-handler")}
        {Lisp-Entry "set-arrow-press-handler" () 2816 18 ("arrow-press-handler" "set!" "handler")}
        {Lisp-Entry "get-escape-press-handler" () 2820 18 ("escape-press-handler")}
        {Lisp-Entry "set-escape-press-handler" () 2824 18 ("escape-press-handler" "set!" "handler")}
        {Lisp-Entry "get-backspace-press-handler" () 2828 18 ("backspace-press-handler")}
        {Lisp-Entry "set-backspace-press-handler" () 2832 18 ("backspace-press-handler" "set!" "handler")}
        {Lisp-Entry "get-return-press-handler" () 2836 18 ("return-press-handler")}
        {Lisp-Entry "set-return-press-handler" () 2840 18 ("return-press-handler" "set!" "handler")}
        {Lisp-Entry "get-tab-press-handler" () 2844 18 ("tab-press-handler")}
        {Lisp-Entry "set-tab-press-handler" () 2848 18 ("tab-press-handler" "set!" "handler")}
        {Lisp-Entry "on-arrow" () 2852 11 ("call-arrow-press" "evt")}
        {Lisp-Entry "call-arrow-press" () 2856 11 ("get-modifiers" ":direction" "get-property" "arrow-press" "self" "invoke" "arrow-press-handler" "if" "evt")}
        {Lisp-Entry "arrow-press" () 2862 26 ("down-arrow-press" "down" "right-arrow-press" "right" "up-arrow-press" "up" "left-arrow-press" "left" "case" "modifiers" "direction")}
        {Lisp-Entry "left-arrow-press" () 2870 26 ("modifiers")}
        {Lisp-Entry "up-arrow-press" () 2874 26 ("modifiers")}
        {Lisp-Entry "right-arrow-press" () 2878 26 ("modifiers")}
        {Lisp-Entry "down-arrow-press" () 2882 26 ("modifiers")}
        {Lisp-Entry "on-escape-press" () 2886 26 ("call-escape-press" "evt")}
        {Lisp-Entry "call-escape-press" () 2890 11 ("escape-press" ":char" "Keyboard-Event" "new" "self" "invoke" "escape-press-handler" "if" "key")}
        {Lisp-Entry "escape-press" () 2896 26 ("key")}
        {Lisp-Entry "on-backspace-press" () 2900 26 ("call-backspace-press" "evt")}
        {Lisp-Entry "call-backspace-press" () 2904 11 ("backspace-press" ":char" "Keyboard-Event" "new" "self" "invoke" "backspace-press-handler" "if" "key")}
        {Lisp-Entry "backspace-press" () 2910 26 ("rest" "key")}
        {Lisp-Entry "on-return-press" () 2914 26 ("call-return-press" "evt")}
        {Lisp-Entry "call-return-press" () 2918 11 ("return-press" ":char" "Keyboard-Event" "new" "self" "invoke" "return-press-handler" "if" "key")}
        {Lisp-Entry "return-press" () 2924 26 ("key")}
        {Lisp-Entry "on-tab-press" () 2928 26 ("call-tab-press" "evt")}
        {Lisp-Entry "call-tab-press" () 2932 11 ("modifiers-keys" "tab-press" ":char" "Keyboard-Event" "new" "self" "invoke" "tab-press-handler" "if" "key")}
        {Lisp-Entry "tab-press" () 2938 26 ("modifiers" "key")}
        {Lisp-Entry "key-down" () 2942 26 ("key")}
        {Lisp-Entry "key-up" () 2946 26 ("key")}
        {Lisp-Entry "on-key-press" () 2950 18 ("key:" "get-property" "key-press" "evt")}
        {Lisp-Entry "key-press" () 2954 26 ("key")}
        {Lisp-Entry "dispatch-key-down" () 2958 21 ("call-key-down" "when" "get-focus" "view" "let" "key")}
        {Lisp-Entry "dispatch-key-up" () 2964 21 ("call-key-up" "when" "get-focus" "view" "let" "key")}
        {Lisp-Entry "dispatch-key-press" () 2970 21 ("call-key-press" "when" "get-focus" "view" "let" "true" "complete-drag-up" "drag-end" "begin" "=" "Current-Drag-Drop" "and" "if" "key")}
        {Lisp-Entry "find-tab-manager" () 2986 18 ("find-tab-manager" "self" "parent" "not" "get-tab-stops" "or" "if")}
        {Lisp-Entry "navigate-tab" () 2992 18 ("tab-stop-enter" "acquire-focus" "tab-stop-exit" "neq?" "and" "when" "navigated-view" "to" "let" "backward?" "from")}
        {Lisp-Entry "navigated-view" () 3000 18 ("element" "+" "modulo" "1" "-" "0" "=" "if" "new-rank" "position" "return:" "find" "rank" "length" "count" "when" "get-tab-stops" "stops" "let" "backward?" "from")}
        {Lisp-Entry "on-next-view" () 3010 26 ("false" "self" "navigate-tab" "find-tab-manager" "manager" "let" "evt")}
        {Lisp-Entry "on-previous-view" () 3015 26 ("true" "self" "navigate-tab" "find-tab-manager" "manager" "let" "evt")}
        {Lisp-Entry "navigate-view" () 3020 21 ("self" "navigate-tab" "find-tab-manager" "manager" "let" "backward?")}
        {Lisp-Entry "get-tab-stops" () 3025 26 ()}
        {Lisp-Entry "tab-stop-enter" () 3029 26 ("select-all")}
        {Lisp-Entry "tab-stop-exit" () 3033 26 ()}
        {Lisp-Entry "on-undo" () 3042 11 ("undo" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-redo" () 3048 11 ("redo" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-cut" () 3054 11 ("cut-selection" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-copy" () 3060 11 ("copy-selection" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-paste" () 3066 11 ("paste-clipboard" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-paste-properties" () 3072 11 ("paste-properties" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-delete" () 3078 11 ("delete-selection" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-rename" () 3084 11 ("rename-selection" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-select-all" () 3090 11 ("select-all" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "can-undo?" () 3096 26 ("false" "can-undo?" "surrogate" "if")}
        {Lisp-Entry "can-redo?" () 3102 26 ("false" "can-redo?" "surrogate" "if")}
        {Lisp-Entry "can-cut?" () 3108 26 ("false" "can-cut?" "surrogate" "if")}
        {Lisp-Entry "can-copy?" () 3114 26 ("false" "can-copy?" "surrogate" "if")}
        {Lisp-Entry "can-paste?" () 3120 26 ("false" "can-paste?" "surrogate" "if")}
        {Lisp-Entry "can-paste-properties?" () 3126 26 ("false" "can-paste-properties?" "surrogate" "if")}
        {Lisp-Entry "can-delete?" () 3132 26 ("false" "can-delete?" "surrogate" "if")}
        {Lisp-Entry "can-rename?" () 3138 26 ("false" "can-rename?" "surrogate" "if")}
        {Lisp-Entry "can-select-all?" () 3144 26 ("false" "can-select-all?" "surrogate" "if")}
        {Lisp-Entry "undo" () 3150 26 ()}
        {Lisp-Entry "redo" () 3154 26 ()}
        {Lisp-Entry "cut-selection" () 3158 26 ()}
        {Lisp-Entry "copy-selection" () 3162 26 ()}
        {Lisp-Entry "paste-clipboard" () 3166 26 ()}
        {Lisp-Entry "paste-properties" () 3170 26 ()}
        {Lisp-Entry "delete-selection" () 3174 26 ()}
        {Lisp-Entry "rename-selection" () 3178 26 ()}
        {Lisp-Entry "select-all" () 3182 26 ("rest")}
        {Lisp-Entry "acquire-capture" () 3191 18 ("get-player" "acquire-capture" "self" "Captured-View" "set!")}
        {Lisp-Entry "release-capture" () 3196 18 ("get-player" "release-capture" "Captured-View" "set!")}
        {Lisp-Entry "get-tooltip?" () 3206 26 ("tooltip?")}
        {Lisp-Entry "set-tooltip?" () 3210 18 ("set!" "tooltip?" "/=" "when" "flag")}
        {Lisp-Entry "get-tooltip-text" () 3215 26 ("present-shortcut" "format" "require-action-item" "get-shortcut" "shortcut" "let" "action" "tooltip-text" "not" "or" "if")}
        {Lisp-Entry "set-tooltip-text" () 3224 18 ("tooltip-text" "set!" "text")}
        {Lisp-Entry "get-formatted-tooltip?" () 3229 26 ("false")}
        {Lisp-Entry "get-tooltip-context" () 3233 26 ("text:" "self" "view:" "Tooltip-Context" "new" "when" "get-tooltip-text" "text" "let" "pos")}
        {Lisp-Entry "get-translated-clipper" () 3244 11 ("rect-intersection" "get-bottom" "set-bottom" "get-right" "set-right" "get-top" "set-top" "get-left" "/" "set-left" "when" "get-v" "position" "get-h" "*" "-" "get-translated-clipper" "p" "scaling" "scaled?" "sc" "let" "copy" "parent" "not" "if" "round" "offset-rect" "r" "get-bounds" "b" "with" "v" "h")}
        {Lisp-Entry "invalidate-view" () 3264 18 ("invalidate-rect" "get-bounds" "bounds" "with")}
        {Lisp-Entry "invalidate-rect" () 3269 18 ("true" "invalidate-rect" "self" "acquire" "acquired" "with" "get-root" "root" "when" "get-player" "player" "let" "rect")}
        {Lisp-Entry "invalidate-region" () 3278 18 ("true" "invalidate-region" "get-v" "get-h" "offset!" "get-lie" "-" "delta" "get-root" "root" "let*" "when" "get-player" "player" "let" "region")}
        {Lisp-Entry "redraw-view" () 3287 18 ("get-bounds" "bounds" "else" "get-v" "get-h" "offset!" "get-lie" "-" "delta" "redraw-window" "self" "acquire" "acquired" "with" "cond" "get-root" "root" "when" "get-player" "player" "let" "region" "region:" "rect" "rect:")}
        {Lisp-Entry "redraw-view-only" () 3305 18 ("DeleteObject" "InvalidateRgn" "redraw-view" "NULL" "ValidateRect" "false" "GetUpdateRgn" "0" "CreateRectRgn" "hrgn" "with" "get-handle" "hwnd" "when" "get-player" "player" "let" "region" "region:" "rect" "rect:")}
        {Lisp-Entry "update-view" () 3317 18 ("update-window" "set-effect" "when" "get-player" "player" "let" "effect" "effect:")}
        {Lisp-Entry "invalidate-border" () 3329 18 ("invalidate-region" "border-region" "region" "with-closed" "get-finished?" "when" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "redraw-border" () 3335 18 ("region:" "redraw-view" "border-region" "region" "with-closed" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "border-region" () 3340 18 ("frame-region" "get-bounds" "bounds" "with" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "on-save" () 3350 18 ("save" "surrogate" "not" "if" "evt")}
        {Lisp-Entry "on-save-as" () 3356 18 ("save-as" "evt")}
        {Lisp-Entry "on-revert-saved" () 3360 18 ("revert-saved" "evt")}
        {Lisp-Entry "on-compare-saved" () 3364 18 ("compare-saved" "evt")}
        {Lisp-Entry "save" () 3368 26 ()}
        {Lisp-Entry "save-as" () 3372 26 ()}
        {Lisp-Entry "save-to" () 3376 26 ("moniker")}
        {Lisp-Entry "revert-saved" () 3380 26 ()}
        {Lisp-Entry "compare-saved" () 3384 26 ()}
        {Lisp-Entry "install-surrogate?" () 3393 11 ("true")}
        {Lisp-Entry "component-surrogate" () 3397 11 ("View-Surrogate")}
        {Lisp-Entry "addable-class?" () 3401 11 ("View" "subtype?" "class")}
        {Lisp-Entry "get-row-class" () 3405 11 ("nextmethod" "else" "action-handler" "selection-handler" "tab-press-handler" "return-press-handler" "backspace-press-handler" "escape-press-handler" "arrow-press-handler" "key-press-handler" "key-up-handler" "key-down-handler" "lost-capture-handler" "context-menu-handler" "receive-drop-handler" "current-drop-handler" "double-click-handler" "drag-up-handler" "drag-move-handler" "mouse-up-handler" "mouse-move-handler" "mouse-down-handler" "mouse-leave-handler" "mouse-hover-handler" "mouse-enter-handler" "Handler-Row" "cursor-update-handler" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 3434 11 ("nextmethod" "else" "enabled?" "draggable?" "tooltip?" "offscreen?" "transparent?" "String-Row" "tooltip-text" "Boolean-Row" "auto-size?" "Color-Row" "background" "Font-Row" "font" "Dimension-Row" "size" "Point-Row" "position" "Localized-Row" "new" "title" "field-name" "case" "property")}
        {Lisp-Entry "debug-view" () 3457 26 ("get-guest" "View-Host" "player" "is?" "when" "set-%g" "get-player" "set-%h" "get-root" "set-%r" "set-%m" "self" "Development" "set-%" "pos")}
        {Lisp-Entry "describe-view" () 3465 26 ("action-handler" "action" "get-size" "get-position" "get-name" "self" "class-of" "list" "pos")}
        {Lisp-Entry "describe-state" () 3478 26 ("pos")}
        {Lisp-Entry "outline-view" () 3482 18 (":console" "list" "print-to" "newline" "get-height" "get-width" "get-v" "get-h" "format" "output" "get-size" "size" "get-position" "position" "get-lie" "lie" "class-of" "type-name" "type" "let" "View" "is?" "when" "level" "view" "dynamic" "function" "for-each-descendant" "3" "border:" "Aligned-Column" "properties" "Indented-Column" "classes" "Columns-Display" "new" "display" "let*")}}}})
"View-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "View-Actions.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.preferences.View-Actions" () 37 9 ("jazz")
      {Lisp-Entry "View-Actions" () 46 7 ("extend-down" "Down" "down" "move-down" "extend-forward-word" "forward-word" "extend-forward-char" "Right" "right" "forward-char" "extend-up" "Up" "up" "move-up" "extend-backward-word" "backward-word" "extend-backward-char" "Left" "left" "direction:" "on-arrow" "backward-char" "on-select-all" "select-all" "Delete" "on-delete" "delete" "on-paste-properties" "paste-properties" "on-paste" "paste" "on-copy" "copy" "on-cut" "cut" "on-redo" "redo" ":control" "on-undo" "undo" "on-previous-view" "previous-view" "Tab" "on-next-view" "next-view" "shift-return" "Return" "on-return-press" "return" "shift-backspace" "Backspace" "on-backspace-press" "backspace" "shift-escape" "Escape" "on-escape-press" "escape" "shift-space" "Space" "space" "char-0" "char-9" "char-8" "char-7" "char-6" "char-5" "char-4" "char-3" "char-2" "char-1" "char-Z" "char-z" "char-Y" "char-y" "char-X" "char-x" "char-W" "char-w" "char-V" "char-v" "char-U" "char-u" "char-T" "char-t" "char-S" "char-s" "char-R" "char-r" "char-Q" "char-q" "char-P" "char-p" "char-O" "char-o" "char-N" "char-n" "char-M" "char-m" "char-L" "char-l" "char-K" "char-k" "char-J" "char-j" "char-I" "char-i" "char-H" "char-h" "char-G" "char-g" "char-F" "char-f" "char-E" "char-e" "char-D" "char-d" "char-C" "char-c" "char-B" "char-b" ":shift" "char-A" "Shortcut" "shortcut:" "key:" "on-key-press" ":focus" "Event-Handler" "action-handler:" "char-a" "name:" "Actions")}}})
"View-Criteria"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "View-Criteria.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.View-Criteria" () 37 9 ("jazz")
      {Lisp-Entry "View-Criteria" () 45 7 ("Criteria")
        {Lisp-Entry "target" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "class" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "data" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "properties" () 53 14 (":data" "class:" "target:" "name:")}
        {Lisp-Entry "accepts?" () 62 11 ("check-data?" "data" "check-class?" "class" "check-target?" "target" "null?" "or" "and" "view")}
        {Lisp-Entry "check-target?" () 68 11 ("target" "get-name" "eq?" "view")}
        {Lisp-Entry "check-class?" () 72 11 ("class" "autoload" "is?" "view")}
        {Lisp-Entry "check-data?" () 76 11 ("data" "get-name" "equal?" "Component" "is?" "and" "get-user-data" "user-data" "let" "view")}}}})
"View-DC"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "View-DC.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.graphic.View-DC" () 37 9 ("jazz")
      {Lisp-Entry "View-DC" () 45 7 ("Object")}
      {Lisp-Entry "View-DC" () 51 7 ("DC")
        {Lisp-Entry "view" () 54 8 ()}
        {Lisp-Entry "initialize" () 57 11 ("get-size" "h/v/size->rect" "set-clipper" "get-v" "get-h" "-" "SetWindowOrgEx" "get-client-rect" "setup-clipper" "get-handle" "GetDC" "hdc" "get-lie" "lie" "get-player" "player" "let" "view" "set!" "NULL" "nextmethod" "v")}
        {Lisp-Entry "destroy-dc" () 68 11 ("get-handle" "ReleaseDC" "view" "get-player" "get-client-rect" "set-clipper" "NULL" "0" "hdc" "SetWindowOrgEx")}}}})
"View-Debugger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "View-Debugger.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debuggee.View-Debugger" () 37 9 ("jazz")
      {Lisp-Entry "debug-view" () 49 20 ("true" "feedback:" "false" "draw-overlays?:" "new-debug-view-menu" "menu:" "debug-view-action" "pick-figure" "unimplemented")}
      {Lisp-Entry "explore-views" () 58 20 ("feedback:" "true" "draw-overlays?:" "new-debug-view-menu" "menu:" "debug-view-action" "pick-figure" "unimplemented")}
      {Lisp-Entry "new-debug-view-menu" () 67 13 ("layout-menu" ":symbol" "edit-action" "when" "object:" "edit" "action:" "list" "properties:" "on-debug-action" "method-name:" "self" "target:" "Event-Handler" "action-handler:" "title:" "Label-Item" "parent:" "Separator-Item" "get-method-name" "get-action-handler" "action-handler" "get-action" "action" "get-tree-user-data" "Tree-View" "user-data" "get-guest" "View-Host" "is?" "essay" "guest" "get-player" "player" "Debug-View-Menu" "new" "menu" "let*" "pos" "view" "position" "window")}
      {Lisp-Entry "get-tree-user-data" () 89 13 ("get-user-data" "user-data" "get-row" "row" "let*" "when" "view->tree" "cell" "let" "pos" "tree")}
      {Lisp-Entry "debug-view-action" () 97 13 ("debug-view" "pos" "view" "position" "window")}
      {Lisp-Entry "describe-view-action" () 101 13 ("fresh-prompt" "describe-view" "display-description" "show-console" "get-application" "appl" "let" "pos" "view" "position" "window")}
      {Lisp-Entry "describe-state-action" () 108 13 ("fresh-prompt" "describe-state" "list" "privileged-execute" "show-console" "get-guest" "guest" "View-Host" "is?" "when" "get-player" "player" "get-application" "appl" "let" "pos" "view" "position" "window")}
      {Lisp-Entry "display-description" () 123 13 ("-" "value" "name" "bind" "info" "dynamic" "function" "for-each" ":console" "format" "car" "length" "map" "generic-max" "apply" "max" "let" "description")}
      {Lisp-Entry "on-debug-action" () 140 20 ("class-of" "type-name" "either" ":symbol" "symbol" "object" "edit" "get-method-name" "edit-definition" "get-action-handler" "action-handler" "require-action-item" "action-item" "object:" "let*" "edit-action" "describe-state-action" "describe-state" "describe-view-action" "describe" "debug-view-action" "debug" "case" ":pos" "pos" "view:" "view" "position:" "position" ":window" "window" ":action" "get-property" "action" "get-application" "appl" "let" "evt")}
      {Lisp-Entry "View-Debugger" () 160 7 ("Object")}
      {Lisp-Entry "Debug-View-Menu" () 163 7 ("describe-state" "describe" "Bitmap-Resource" "icon:" "debug" "action:" "on-debug-action" ":view-debugger" "Event-Handler" "action-handler:" "default?:" "title:" "Context-Menu")}}})
"View-Descendants-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "View-Descendants-Editor.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.editor.View-Descendants-Editor" () 37 9 ("jazz")
      {Lisp-Entry "View-Descendants-Editor" () 48 7 ("on-toggle-contents" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "tail" "location:" "Dimension" "size:" "toggle-contents" "tools" "name:" "Descendants-Editor")
        {Lisp-Entry "form-model" () 57 11 ("nextmethod" "else" "View-Descendants-Tree" "tree" "get-name" "case" "form")}}}})
"View-Descendants-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "View-Descendants-Tree.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.editor.View-Descendants-Tree" () 37 9 ("jazz")
      {Lisp-Entry "View-Descendants-Tree" () 46 7 ("Descendants-Tree")
        {Lisp-Entry "show-contents?" () 49 12 ("set-show-contents?" "get-show-contents?" "false")}
        {Lisp-Entry "get-show-contents?" () 57 18 ("show-contents?")}
        {Lisp-Entry "set-show-contents?" () 61 18 ("preserving-update" "show-contents?" "set!" "value")}
        {Lisp-Entry "insert-component" () 71 11 ("insert-components" "nextmethod" "apply" "Content-View" "is-not?" "show-contents?" "or" "if" "rest" "level" "update?" "rights" "component" "row")}}}})
"View-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "View-Editor.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.editor.View-Editor" () 37 9 ("jazz")
      {Lisp-Entry "View-Editor" () 51 7 ("vscroll?:" "hscroll?:" "scroller" "edge" "border-type:" "fill" "center" "on-edit-form" "edit-form" "separator3" "on-toggle-try-out" "try-out" "separator2" "on-toggle-content" "content" "on-toggle-frames" "selected?:" "frames" "separator1" "on-save" "save" "on-open" "open" "on-new" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "new" "north" "location:" "6" "0" "Rect" "layout-insets:" "flow" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "Editor-View")
        {Lisp-Entry "mode" () 54 12 ("set-mode" "get-mode" "select")}
        {Lisp-Entry "showed-property" () 57 18 ()}
        {Lisp-Entry "rubber-band?" () 58 18 ("false")}
        {Lisp-Entry "base-view" () 59 18 ("false")}
        {Lisp-Entry "base-position" () 60 18 ()}
        {Lisp-Entry "old-position" () 61 18 ()}
        {Lisp-Entry "overlay" () 62 18 ()}
        {Lisp-Entry "preserved-client" () 63 18 ()}
        {Lisp-Entry "frame-position" () 89 16 ("Point")}
        {Lisp-Entry "frame-size" () 94 16 ("Dimension")}
        {Lisp-Entry "frame-workspaces" () 98 11 ("designer")}
        {Lisp-Entry "new-controller" () 108 11 ("self" "View-Editor-Controller" "new")}
        {Lisp-Entry "View-Editor-Controller" () 113 9 ("Editor-View-Controller")
          {Lisp-Entry "save" () 117 13 ("document" "save-content-patch")}}
        {Lisp-Entry "guest-actions" () 126 11 ("nextmethod" "view-editor" "find-actions" "cons")}
        {Lisp-Entry "get-mode" () 136 18 ("mode")}
        {Lisp-Entry "set-mode" () 140 18 ("mode" "set!" "value")}
        {Lisp-Entry "size-change" () 149 11 ("get-height" "get-width" "Dimension" "new" "set-size" "locate" "toolbar" "let" "nextmethod" "size")}
        {Lisp-Entry "on-new" () 155 11 ("evt")}
        {Lisp-Entry "on-open" () 159 11 ("open-form" "instantiate" "set-client" "evt")}
        {Lisp-Entry "on-edit-form" () 163 11 ("edit-form" "evt")}
        {Lisp-Entry "on-toggle-frames" () 167 11 ("invalidate-view" "when" "get-reference" "reference" "let" "evt")}
        {Lisp-Entry "on-toggle-content" () 173 11 ("invalidate-view" "when" "get-reference" "reference" "let" "evt")}
        {Lisp-Entry "on-toggle-try-out" () 179 11 ("list" "else" "set-client" "set-selection" "client" "set!" "preserved-client" "null?" "cond" "evt")}
        {Lisp-Entry "client-update" () 195 11 ("true" "set-visible?" "client" "when" "install-client" "nextmethod")}
        {Lisp-Entry "install-client-surrogate" () 202 11 ("self" "install-surrogate" "client" "when")}
        {Lisp-Entry "install-client" () 207 29 ("set-client" "set-parent" "client" "when" "get-content" "content" "locate" "scroller" "let*")}
        {Lisp-Entry "install-current-designer" () 220 11 ("get-surrogate" "redraw-border" "nextmethod" "form" "component")}
        {Lisp-Entry "get-showed-property" () 231 21 ("showed-property")}
        {Lisp-Entry "set-showed-property" () 235 21 ("client" "invalidate-view" "showed-property" "set!" "property")}
        {Lisp-Entry "show-frames?" () 245 21 ("frames" "locate" "get-selected?")}
        {Lisp-Entry "show-content?" () 249 21 ("content" "locate" "get-selected?")}
        {Lisp-Entry "render" () 258 11 ("length" "0" "naturals" "selection" "draw-selected" "outer-client" "outer" "get-surrogate" "surrogate" "let*" "View" "is?" "when" "rank" "view" "dynamic" "function" "for-each" "nextmethod" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "Live?" () 276 14 ("false")}
        {Lisp-Entry "RubberBand-Pen" () 280 14 ("White" "name:" "Color" "color:" "alternate" "style:" "Pen" "new")}
        {Lisp-Entry "rubber-band-base" () 284 29 ("selection" "car")}
        {Lisp-Entry "start-rubber-band" () 288 21 ("setup-overlay" "acquire-capture" "old-position" "base-position" "rubber-band-base" "base-view" "true" "rubber-band?" "set!" "pos")}
        {Lisp-Entry "process-rubber-band" () 297 21 ("set!" "R2_COPYPEN" "select-rubber-banded" "Live?" "RubberBand-Pen" "rectangle" "base-position" "corners->rect" "rect" "with" "old-position" "R2_XORPEN" "set-rop" "overlay" "View-DC" "new" "dc" "with-closed" "rubber-band?" "when" "pos")}
        {Lisp-Entry "select-rubber-banded" () 312 11 ("set-selection" "get-output" "lst" "let" "put" "rects-intersect?" "client" "acquire" "get-bounds" "b" "with" "overlay" "neq?" "view" "dynamic" "function" "base-view" "for-each-view" "List-Factory" "new" "selection" "rect-size" "s" "rect-position" "p" "normalize-rect" "r" "let*" "rubber-band?" "when" "rect")}
        {Lisp-Entry "end-rubber-band" () 329 21 ("false" "rubber-band?" "set!" "base-view" "release-capture" "remove-overlay" "base-position" "corners->rect" "select-rubber-banded" "Live?" "not" "when" "pos")}
        {Lisp-Entry "setup-overlay" () 342 11 ("get-size" "size:" "0" "Point" "position:" "client" "parent:" "View" "new" "overlay" "set!")}
        {Lisp-Entry "remove-overlay" () 346 11 ("set!" "overlay" "close")}
        {Lisp-Entry "align-left" () 356 18 ("cdr" "get-v" "Point" "new" "set-view-lie" "get-lie" "lie" "view" "dynamic" "function" "for-each" "lie-left" "h" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "align-top" () 368 18 ("cdr" "get-h" "Point" "new" "set-view-lie" "get-lie" "lie" "view" "dynamic" "function" "for-each" "lie-top" "v" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "align-right" () 380 18 ("cdr" "get-v" "Point" "new" "set-view-lie" "get-width" "-" "get-lie" "lie" "view" "dynamic" "function" "for-each" "lie-right" "h" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "align-bottom" () 393 18 ("cdr" "get-h" "Point" "new" "set-view-lie" "get-height" "-" "get-lie" "lie" "view" "dynamic" "function" "for-each" "lie-bottom" "v" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "center-horizontally" () 406 18 ("cdr" "get-v" "Point" "new" "set-view-lie" "-" "/" "round" "+" "get-lie" "lie" "view" "dynamic" "function" "for-each" "get-width" "width" "lie-left" "h" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "center-vertically" () 420 18 ("cdr" "get-h" "Point" "new" "set-view-lie" "-" "/" "round" "+" "get-lie" "lie" "view" "dynamic" "function" "for-each" "get-height" "height" "lie-top" "v" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "space-horizontally" () 434 18 ("cddr" "get-width" "increase!" "get-v" "Point" "new" "set-view-lie" "get-lie" "lie" "view" "dynamic" "function" "for-each" "+" "h" "lie-right" "lie-left" "-" "dh" "second" "get-surrogate" "outer-client" "first" "let*" "bell" "3" "selection" "length" "" "if")}
        {Lisp-Entry "space-vertically" () 449 18 ("cddr" "get-height" "increase!" "get-h" "Point" "new" "set-view-lie" "get-lie" "lie" "view" "dynamic" "function" "for-each" "+" "v" "lie-bottom" "lie-top" "-" "dv" "second" "get-surrogate" "outer-client" "first" "let*" "bell" "3" "selection" "length" "" "if")}
        {Lisp-Entry "resize-width" () 464 18 ("cdr" "get-height" "Dimension" "new" "designer" "set-property" "get-size" "size" "view" "dynamic" "function" "for-each" "get-width" "width" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "resize-height" () 476 18 ("cdr" "get-width" "Dimension" "new" "designer" "set-property" "get-size" "size" "view" "dynamic" "function" "for-each" "get-height" "height" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "resize-both" () 488 18 ("cdr" "designer" "set-property" "let" "view" "dynamic" "function" "for-each" "get-size" "size" "car" "get-surrogate" "outer-client" "reference" "let*" "bell" "2" "selection" "length" "" "if")}
        {Lisp-Entry "lie-left" () 499 11 ("get-lie" "get-h" "view")}
        {Lisp-Entry "lie-top" () 503 11 ("get-lie" "get-v" "view")}
        {Lisp-Entry "lie-right" () 507 11 ("get-width" "get-lie" "get-h" "+" "view")}
        {Lisp-Entry "lie-bottom" () 511 11 ("get-height" "get-lie" "get-v" "+" "view")}
        {Lisp-Entry "set-view-lie" () 515 11 ("get-position" "position" "designer" "set-property" "set-lie" "lie" "view")}}}})
"View-Editor-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "editor" "View-Editor-Actions.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.editor.View-Editor-Actions" () 37 9 ("jazz")
      {Lisp-Entry "View-Editor-Actions" () 47 7 ("on-save" "save" "on-open" "open" ":shift" "on-new" ":frame" "new" ":control" "Shortcut" "shortcut:" "on-edit-form" ":document" "Event-Handler" "action-handler:" "edit-form" "name:" "Actions")}}})
"View-Host"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "hosting" "View-Host.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.hosting.View-Host" () 37 9 ("jazz")
      {Lisp-Entry "View-Host" () 40 11 ()
        {Lisp-Entry "get-guest" () 43 35 ()}}}})
"View-Player"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "View-Player.fusion"} {Time 128368665200000000L}
    {Lisp-Entry "jazz.ui.window.View-Player" () 37 9 ("jazz")
      {Lisp-Entry "View-Player-Class" () 51 7 ("Window-Class")}
      {Lisp-Entry "View-Player" () 54 7 ("Window" "View-Player-Class")
        {Lisp-Entry "in-parent?" () 59 12 ("set-in-parent?" "get-in-parent?" "true")}
        {Lisp-Entry "close-root?" () 60 12 ("set-close-root?" "get-close-root?" "true")}
        {Lisp-Entry "root" () 63 8 ()}
        {Lisp-Entry "focused" () 64 8 ()}
        {Lisp-Entry "prepare" () 72 11 ("destroy-mandatory" "self" "set-player" "set-name" "new-root" "root" "set!" "nextmethod" "rest")}
        {Lisp-Entry "install-in-parent" () 80 11 ("nextmethod" "in-parent?" "when")}
        {Lisp-Entry "new-root" () 85 29 ("Root-View" "new")}
        {Lisp-Entry "find-to-modify" () 89 11 ("nextmethod" "get-root" "root" "eq?" "if" "test" "name")}
        {Lisp-Entry "get-components" () 95 11 ("get-children" "root" "cons")}
        {Lisp-Entry "destroy" () 104 11 ("nextmethod" "close-root")}
        {Lisp-Entry "close-root" () 109 29 ("root" "close" "close-root?" "when")}
        {Lisp-Entry "erase-background" () 119 11 ("nextmethod" "root" "get-offscreen?" "unless" "dc")}
        {Lisp-Entry "get-in-parent?" () 129 18 ("in-parent?")}
        {Lisp-Entry "set-in-parent?" () 133 18 ("in-parent?" "set!" "value")}
        {Lisp-Entry "get-close-root?" () 137 18 ("close-root?")}
        {Lisp-Entry "set-close-root?" () 141 18 ("close-root?" "set!" "value")}
        {Lisp-Entry "get-root" () 145 18 ("root")}
        {Lisp-Entry "size-change" () 154 11 ("set-size" "0" "Point" "set-position" "root" "when" "nextmethod" "size")}
        {Lisp-Entry "focus-gain" () 166 11 ("processed" "focus-default" "focus-delegate" "set-focus" "begin" "self" "get-player" "eq?" "focused" "and" "if" "root" "call-activate")}
        {Lisp-Entry "focus-lose" () 176 11 ("processed" "root" "call-deactivate" "focus-master" "essay" "focused" "set!" "get-focus" "focus" "let" "receiving")}
        {Lisp-Entry "call-focus-lose" () 183 11 ("processed" "get-window" "clear-focus" "self" "get-player" "eq?" "and" "when" "get-focus" "focus" "let" "nextmethod" "wparam")}
        {Lisp-Entry "focus-default" () 191 26 ()}
        {Lisp-Entry "view-destroyed" () 195 21 ("set!" "focused" "eq?" "when" "view")}
        {Lisp-Entry "in-error?" () 205 8 ("false")}
        {Lisp-Entry "get-in-error?" () 208 18 ("in-error?")}
        {Lisp-Entry "set-in-error?" () 212 18 ("invalidate-window" "in-error?" "set!" "flag")}
        {Lisp-Entry "Error-Color" () 217 14 ("Dark-Red" "name:" "Color")}
        {Lisp-Entry "paint-in-error" () 221 11 ("Error-Color" "fill-rect" "bounds" "dc")}
        {Lisp-Entry "paint" () 230 11 ("processed" "EndPaint" "close" "false" "root" "paint" "true" "set!" "paint-in-error" "in-error?" "if" "setup-clipper" "begin" "unwind-protect" "cairo_win32_surface_create" "Cairo-Win32-Surface" "dc" "get-client-rect" "clipper" "0" "Point" "new" "origin" "handle" "BeginPaint" "hdc" "let" "PAINTSTRUCT-make" "ps" "with" "get-update-region" "region" "with-closed")}
        {Lisp-Entry "receive-files" () 255 11 ("processed" "root" "dispatch-receive-files" "in-error?" "unless" "files" "pos")}
        {Lisp-Entry "mouse-hover" () 266 11 ("processed" "root" "dispatch-mouse-hover" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "mouse-wheel" () 272 11 ("processed" "root" "dispatch-mouse-wheel" "in-error?" "unless" "delta")}
        {Lisp-Entry "mouse-down" () 278 11 ("processed" "root" "dispatch-mouse-down" "bell" "in-error?" "if" "v" "h")}
        {Lisp-Entry "mouse-move" () 285 11 ("processed" "root" "dispatch-mouse-move" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "mouse-up" () 291 11 ("processed" "root" "dispatch-mouse-up" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "double-click" () 297 11 ("processed" "root" "dispatch-double-click" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "context-menu" () 303 11 ("processed" "root" "dispatch-context-menu" "false" "set-in-error?" "in-error?" "if" "v" "h")}
        {Lisp-Entry "middle-mouse-down" () 310 11 ("processed" "root" "dispatch-middle-mouse-down" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "middle-mouse-up" () 316 11 ("processed" "root" "dispatch-middle-mouse-up" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "right-mouse-down" () 322 11 ("processed" "root" "dispatch-right-mouse-down" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "right-mouse-up" () 328 11 ("unprocessed" "root" "dispatch-right-mouse-up" "in-error?" "unless" "v" "h")}
        {Lisp-Entry "popup" () 339 18 ("cons" "popups" "set!" "new-popup" "popup" "let" "initargs" "class")}
        {Lisp-Entry "new-popup" () 345 11 ("false" "visible?:" "get-overlapped" "owner:" "new" "apply" "initargs" "class")}
        {Lisp-Entry "close-popups" () 352 18 ("close-popup" "memq?" "or" "popup" "dynamic" "function" "for-each" "get-owners" "owners" "get-overlapped" "overlapped" "let*" "Passing-Through?" "not" "popups" "and" "when" "exclude" "exclude:" "false" "all?" "all?:")}
        {Lisp-Entry "key-down" () 367 11 ("processed" "root" "dispatch-key-down" "char")}
        {Lisp-Entry "key-up" () 372 11 ("processed" "root" "dispatch-key-up" "char")}
        {Lisp-Entry "key-press" () 377 11 ("processed" "close-popups" "car" "popup-key-press" "unless" "root" "dispatch-key-press" "popups" "null?" "Escape-Handler" "=" "and" "if" "char")}
        {Lisp-Entry "debug-window" () 393 11 ("acquire" "debug-view" "nextmethod" "not" "if" "root" "find-drawing" "view" "let" "pos")}
        {Lisp-Entry "describe-window" () 400 11 ("acquire" "describe-view" "when" "root" "find-drawing" "view" "let" "pos")}}}})
"View-Style"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "text" "View-Style.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.text.View-Style" () 37 9 ("jazz")
      {Lisp-Entry "View-Style" () 45 7 ("Style")
        {Lisp-Entry "properties" () 49 14 ("form:" "alignment:")}
        {Lisp-Entry "form" () 55 18 ()}
        {Lisp-Entry "view" () 56 18 ()}
        {Lisp-Entry "construct-literal" () 60 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "initialize" () 64 11 ("view~self" "set!" "nextmethod" "apply" "others" "view" "bind-keywords" "rest")}
        {Lisp-Entry "compare-object" () 70 11 ("else" ":not-equal" "get-view" "view" "eq?" "if" ":equal" "case" "nextmethod" "result" "let" "target")}
        {Lisp-Entry "print" () 81 11 ("view" "alignment" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-value" () 89 11 ("nextmethod" "else" "form" "form:" "case" "property")}
        {Lisp-Entry "set-value" () 96 11 ("nextmethod" "else" "form" "set!" "form:" "case" "value" "property")}
        {Lisp-Entry "get-form" () 108 18 ("form")}
        {Lisp-Entry "get-view" () 112 18 ("view")}
        {Lisp-Entry "set-view" () 117 18 ("view" "set!" "value")}
        {Lisp-Entry "get-width" () 126 11 ("view" "get-width")}
        {Lisp-Entry "get-height" () 130 11 ("view" "get-height")}
        {Lisp-Entry "run-width" () 134 11 ("get-width" "run")}
        {Lisp-Entry "propagate?" () 143 11 ("false")}
        {Lisp-Entry "place-update" () 152 11 ("Point" "new" "view" "set-position" "v" "h")}
        {Lisp-Entry "height-update" () 156 11 ("Point" "new" "set-position" "get-height" "justify-element" "get-v" "+" "v" "get-h" "h" "view" "get-position" "pos" "let*" "height")}}}})
"View-Surrogate"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "surrogate" "View-Surrogate.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.designer.surrogate.View-Surrogate" () 37 9 ("jazz")
      {Lisp-Entry "View-Surrogate" () 51 7 ("Renderer" "Component-Surrogate")
        {Lisp-Entry "client-renderer" () 54 18 ()}
        {Lisp-Entry "client-mouse-down-handler" () 55 18 ()}
        {Lisp-Entry "client-drag-move-handler" () 56 18 ()}
        {Lisp-Entry "client-drag-up-handler" () 57 18 ()}
        {Lisp-Entry "client-double-click-handler" () 58 18 ()}
        {Lisp-Entry "client-current-drop-handler" () 59 18 ()}
        {Lisp-Entry "client-receive-drop-handler" () 60 18 ()}
        {Lisp-Entry "client-context-menu-handler" () 61 18 ()}
        {Lisp-Entry "client-lost-capture-handler" () 62 18 ()}
        {Lisp-Entry "client-cursor-update-handler" () 63 18 ()}
        {Lisp-Entry "client-key-press-handler" () 64 18 ()}
        {Lisp-Entry "client-arrow-press-handler" () 65 18 ()}
        {Lisp-Entry "client-backspace-press-handler" () 66 18 ()}
        {Lisp-Entry "dragging?" () 69 8 ("false")}
        {Lisp-Entry "processing?" () 70 8 ("false")}
        {Lisp-Entry "current-part" () 71 8 ()}
        {Lisp-Entry "start-position" () 72 8 ()}
        {Lisp-Entry "old-position" () 73 8 ()}
        {Lisp-Entry "install-handlers" () 81 11 ("redraw-border" "on-backspace-press" "set-backspace-press-handler" "on-arrow-press" "set-arrow-press-handler" "on-key-press" "set-key-press-handler" "on-cursor-update" "set-cursor-update-handler" "on-lost-capture" "set-lost-capture-handler" "on-context-menu" "set-context-menu-handler" "on-receive-drop" "set-receive-drop-handler" "on-current-drop" "set-current-drop-handler" "on-double-click" "set-double-click-handler" "on-drag-up" "set-drag-up-handler" "on-drag-move" "set-drag-move-handler" ":preserved" "on-mouse-down" "method-name:" "target:" "Surrogate-Handler" "new" "set-mouse-down-handler" "self" "set-renderer" "get-backspace-press-handler" "client-backspace-press-handler" "get-arrow-press-handler" "client-arrow-press-handler" "get-key-press-handler" "client-key-press-handler" "get-cursor-update-handler" "client-cursor-update-handler" "get-lost-capture-handler" "client-lost-capture-handler" "get-context-menu-handler" "client-context-menu-handler" "get-receive-drop-handler" "client-receive-drop-handler" "get-current-drop-handler" "client-current-drop-handler" "get-double-click-handler" "client-double-click-handler" "get-drag-up-handler" "client-drag-up-handler" "get-drag-move-handler" "client-drag-move-handler" "get-mouse-down-handler" "client-mouse-down-handler" "client" "get-renderer" "client-renderer" "set!" "nextmethod")}
        {Lisp-Entry "remove-handlers" () 112 11 ("redraw-border" "client-backspace-press-handler" "set-backspace-press-handler" "client-arrow-press-handler" "set-arrow-press-handler" "client-key-press-handler" "set-key-press-handler" "client-cursor-update-handler" "set-cursor-update-handler" "client-lost-capture-handler" "set-lost-capture-handler" "client-context-menu-handler" "set-context-menu-handler" "client-receive-drop-handler" "set-receive-drop-handler" "client-current-drop-handler" "set-current-drop-handler" "client-double-click-handler" "set-double-click-handler" "client-drag-up-handler" "set-drag-up-handler" "client-drag-move-handler" "set-drag-move-handler" "client-mouse-down-handler" "set-mouse-down-handler" "client-renderer" "client" "set-renderer" "nextmethod")}
        {Lisp-Entry "on-save-form" () 135 11 ("save-form" "evt")}
        {Lisp-Entry "on-bring-to-front" () 139 11 ("bring-to-front" "component" "dynamic" "function" "for-each" "get-selection" "selection" "editor" "get-designer" "designer" "let" "evt")}
        {Lisp-Entry "on-send-to-back" () 147 11 ("send-to-back" "component" "dynamic" "function" "for-each" "get-selection" "selection" "editor" "get-designer" "designer" "let" "evt")}
        {Lisp-Entry "on-close-selection" () 155 11 ("close-selection" "evt")}
        {Lisp-Entry "on-rename-selected" () 159 11 ("get-name" ":initial-value" "Symbol-Request" "class:" "request-name" "set-name" "editor" "get-designer" "designer" "car" "component" "bell" "1" "length" "/=" "if" "get-selection" "selection" "let" "evt")}
        {Lisp-Entry "on-properties" () 168 11 ("true" "focus?:" "workspace:" "Properties-Manager" "select-palette" "evt")}
        {Lisp-Entry "Selected-Colors" () 177 14 ("Yellow" "Orange" "Red" "name:" "Color")}
        {Lisp-Entry "Selected-Pens" () 180 14 ()}
        {Lisp-Entry "Unselected-Color" () 184 14 ("Blue" "name:" "Color")}
        {Lisp-Entry "render" () 188 11 ("draw" "default-render" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc" "drawing")}
        {Lisp-Entry "default-render" () 193 11 ("draw-children" "Outline-View" "is-not?" "or" "draw-content" "draw-background" "when" "editor" "show-content?" "content?" "let" "sc?" "sc" "sv" "sh" "lv" "lh" "update" "context" "dc" "drawing")}
        {Lisp-Entry "draw" () 203 26 ("draw-surrogate-frame" "draw-showed-property" "dc")}
        {Lisp-Entry "draw-showed-property" () 208 18 ("2" "get-v" "3" "get-h" "draw-text" "White" "inflate-rect" "fill-rect" "Black" "frame-rect" "position/size->rect" "rect" "get-size" "center" "pos" "4" "7" "Dimension" "+" "size" "get-text-extent" "extent" ":reader" "->string" "string" "read-property" "value" "let*" "Dark-Red" "Color" "set-text-color" "Ansi-Var" "name:" "Font" "set-font" "client" "property-field" "and" "when" "editor" "get-showed-property" "property" "let" "dc")}
        {Lisp-Entry "draw-surrogate-frame" () 224 11 ("inflate-rect" "inside" "get-reference" "frame-rect" "get-bounds" "outside" "with" "Unselected-Color" "color" "let" "client" "outer-client" "eq?" "editor" "show-frames?" "and" "when" "dc")}
        {Lisp-Entry "draw-selected" () 234 26 ("inflate-rect" "inside" "get-reference" "self" "eq?" "when" "frame-rect" "selected-color" "color" "dynamic" "function" "with-clipper" "Black" "name:" "Pen" "line" "selected-pen" "set-pen" "get-bottom" "b" "1" "get-right" "-" "r" "get-top" "t" "get-left" "l" "let" "get-root" "acquired" "get-view-clipper" "clipper" "editor" "acquire" "outside" "client" "get-bounds" "bounds" "with" "rank" "dc")}
        {Lisp-Entry "border-region" () 258 11 ("2" "Rect" "insets:" "outer-client" "border-region")}
        {Lisp-Entry "redraw-border" () 262 11 ("2" "Rect" "insets:" "outer-client" "redraw-border")}
        {Lisp-Entry "get-selected-colors" () 266 11 ("Selected-Colors")}
        {Lisp-Entry "get-selected-pens" () 270 11 ("Selected-Colors" "color:" "alternate" "style:" "Pen" "new" "color" "dynamic" "function" "map" "set!" "Selected-Pens" "null?" "when")}
        {Lisp-Entry "selected-color" () 278 18 ("1" "length" "-" "min" "element" "get-selected-colors" "colors" "let" "rank")}
        {Lisp-Entry "selected-pen" () 283 18 ("1" "length" "-" "min" "element" "get-selected-pens" "pens" "let" "rank")}
        {Lisp-Entry "on-cursor-update" () 293 11 ("get-position" "cursor-update" "evt")}
        {Lisp-Entry "cursor-update" () 297 26 ("get-resize-cursor" ":all" "move-client?" ":opened-hand" "grab" ":arrow" "select" "case" ":cross" ":closed-hand" "set-cursor" "dragging?" "get-mouse-down?" "get-client" "eq?" "null?" "client" "get-size" "find-resize-part" "size-client?" "if" "part" "editor" "get-mode" "mode" "let" "pos")}
        {Lisp-Entry "Drag-Tolerance" () 320 14 ("3")}
        {Lisp-Entry "on-mouse-down" () 324 11 ("grab" "acquire" "start-rubber-band" "select-in-editor" "select?" "when" "mouse-down" "get-client" "client" "neq?" "if" "select" "case" "get-position" "pos" "editor" "get-mode" "mode" "let" "evt")}
        {Lisp-Entry "on-drag-move" () 338 11 ("drag-move" "client" "get-client" "acquire" "process-rubber-band" "editor" "get-rubber-band?" "if" "get-position" "pos" "let" "evt")}
        {Lisp-Entry "on-drag-up" () 345 11 ("drag-up" "client" "get-client" "acquire" "end-rubber-band" "editor" "get-rubber-band?" "if" "get-position" "pos" "let" "evt")}
        {Lisp-Entry "on-double-click" () 352 11 ("get-position" "double-click" "evt")}
        {Lisp-Entry "on-current-drop" () 356 11 ("get-drag-drop" "get-position" "current-drop" "evt")}
        {Lisp-Entry "on-receive-drop" () 360 11 ("get-drag-drop" "get-sender" "get-position" "receive-drop" "evt")}
        {Lisp-Entry "on-context-menu" () 364 11 ("get-position" "context-menu" "evt")}
        {Lisp-Entry "select?" () 368 29 ("true")}
        {Lisp-Entry "select-in-editor" () 372 26 ("client" "editor" "select")}
        {Lisp-Entry "move-client?" () 376 29 ("true")}
        {Lisp-Entry "size-client?" () 380 29 ("true")}
        {Lisp-Entry "some-movable?" () 384 11 ("get-surrogate" "move-client?" "client" "dynamic" "function" "some?" "selection")}
        {Lisp-Entry "mouse-down" () 390 26 ("acquire-focus" "old-position" "to-desktop" "get-size" "find-resize-part" "size-client?" "current-part" "processing?" "get-selection" "some-movable?" "move-client?" "and" "acquire-capture" "start-position" "true" "dragging?" "set!" "editor" "get-client" "client" "eq?" "edit-client" "begin" "alt-down?" "if" "select-in-editor" "select?" "when" "dynamic" "function" "select" "let" "pos")}
        {Lisp-Entry "drag-move" () 414 26 ("get-player" "update-window" "move-client" "dheight" "dwidth" "dynamic" "function" "size-client" "NoModifiers" "move-selection" "if" "get-v" "dv" "get-h" "dh" "old-position" "from-desktop" "old-pos" "let*" "set!" "Drag-Tolerance" "distance" ">=" "null?" "current-part" "or" "when" "to-desktop" "desktop-pos" "processing?" "client" "scroll" "start-position" "-" "delta" "let" "dragging?" "cond" "pos")}
        {Lisp-Entry "drag-up" () 437 26 ("verify-position/size" "processing?" "false" "set!" "client" "release-capture" "dragging?" "cond" "pos")}
        {Lisp-Entry "verify-position/size" () 449 11 ("position" "size" "set-property" ":minimum-size" "fit-within" "new-size" "new-position" "receive" "editor" "get-designer" "designer" "get-parent" "get-size" "outer" "get-rect" "rect" "when" "client" "minimal-size" "min-size" "let")}
        {Lisp-Entry "double-click" () 460 26 ("edit-client" "pos")}
        {Lisp-Entry "current-drop" () 464 26 ("client" "view:" "Drop-Target" "new" "drag-drop" "pos")}
        {Lisp-Entry "receive-drop" () 468 26 ("set-showed-property" "editor" "get-showed-property" "=" "if" "field-name" "name" "get-property" "property" "set-selection" "Value-Row" "is?" "when" "get-row" "row" "get-source" "source" "let*" "Properties-Tree" "add-new" "self" "selected-component" "get-model" "eval-symbol" "model" "let" "Toolbox-Tree" "typecase" "drag-drop" "sender" "pos")}
        {Lisp-Entry "add-new" () 485 18 ("list" "set-selection" ":centered?" "position:" "add-view" "editor" "get-designer" "designer" "false" "visible?:" "client" "parent:" "new" "child" "let" "true" "centered?" "centered?:" "pos" "model")}
        {Lisp-Entry "context-menu" () 492 26 ("track-popup-menu" "layout-menu" "update-context-menu" "get-context-menu" "menu" "let" "client" "acquire-focus" "select-in-editor" "select?" "when" "pos")}
        {Lisp-Entry "get-context-menu" () 504 26 ("context-menu-class" "new")}
        {Lisp-Entry "context-menu-class" () 508 26 ("Surrogate-Menu")}
        {Lisp-Entry "update-context-menu" () 512 26 ("menu")}
        {Lisp-Entry "outer-client" () 521 11 ("editor" "get-reference" "client" "outer-view")}
        {Lisp-Entry "move-client" () 525 11 ("get-v" "get-h" "+" "Point" "new" "position:" "set-property" "get-position" "pos" "move-client?" "client" "get-surrogate" "outer-client" "outer" "get-designer" "designer" "editor" "get-selection" "selection" "let" "0" "/=" "or" "when" "dv" "dh")}
        {Lisp-Entry "size-client" () 535 11 ("update-scrollbars" "get-reference" "client" "eq?" "invalidate-region" "size:" "editor" "get-designer" "set-property" "border-region" "region" "with-closed" "get-height" "get-width" "+" "Dimension" "new" "new-size" "get-size" "size" "outer-client" "outer" "let*" "0" "/=" "or" "when" "dheight" "dwidth")}
        {Lisp-Entry "edit-client" () 549 29 ("client" "editor" "edit-component")}
        {Lisp-Entry "on-key-press" () 558 11 ("get-key" "key-press" "evt")}
        {Lisp-Entry "key-press" () 562 26 ("key")}
        {Lisp-Entry "on-arrow-press" () 566 11 ("down" "1" "right" "up" "0" "move-selection" "left" ":direction" "get-property" "case" "get-modifiers" "modifiers" "let" "evt")}
        {Lisp-Entry "on-backspace-press" () 575 11 ("close-selection" "evt")}
        {Lisp-Entry "move-selection" () 584 11 ("car" "list" "if" "*" "get-surrogate" "move-client" "view" "dynamic" "function" "for-each" "get-selection" "selection" "move-quantum" "quantum" "and" "single?" "control-key?" "control?" "shift-key?" "shift?" "let*" "modifiers" "dv" "dh")}
        {Lisp-Entry "move-quantum" () 595 11 ("1" "8" "if" "shift?")}
        {Lisp-Entry "save-form" () 606 18 ("save" "when" "get-selection" "selection" "let")}
        {Lisp-Entry "can-undo?" () 617 26 ("true")}
        {Lisp-Entry "can-redo?" () 621 26 ("true")}
        {Lisp-Entry "can-cut?" () 625 26 ("true")}
        {Lisp-Entry "can-copy?" () 629 26 ("true")}
        {Lisp-Entry "can-paste?" () 633 26 (":jazz-parcels" "clipboard-format-available?")}
        {Lisp-Entry "can-paste-properties?" () 637 26 ("false")}
        {Lisp-Entry "can-delete?" () 641 26 ("true")}
        {Lisp-Entry "can-rename?" () 645 26 ("true")}
        {Lisp-Entry "can-select-all?" () 649 26 ("true")}
        {Lisp-Entry "undo" () 653 26 ()}
        {Lisp-Entry "redo" () 657 26 ()}
        {Lisp-Entry "cut-selection" () 661 26 ("set-selection" "cut-components" "editor" "get-designer" "designer" "get-selection" "selection" "let")}
        {Lisp-Entry "copy-selection" () 668 26 ("copy-components" "editor" "get-designer" "designer" "get-selection" "selection" "let")}
        {Lisp-Entry "paste-clipboard" () 674 26 ("set-selection" "0" "Point" "position" "set-property" "view" "dynamic" "function" "for-each" "paste-clipboard" "views" "car" "parent" "editor" "get-designer" "designer" "let*" "bell" "1" "length" "/=" "if" "get-selection" "selection" "let")}
        {Lisp-Entry "paste-properties" () 687 26 ()}
        {Lisp-Entry "delete-selection" () 691 26 ("close-selection")}
        {Lisp-Entry "rename-selection" () 695 26 ()}
        {Lisp-Entry "select-all" () 699 26 ("client" "get-children" "set-selection" "rest")}
        {Lisp-Entry "get-component-selection" () 708 11 ("get-selection" "get-surrogate" "outer-client" "View" "is?" "if" "component" "dynamic" "function" "map")}
        {Lisp-Entry "select" () 716 11 ("redraw-border" "acquire-focus" "client" "bring-to-front" "0" "=" "when" "focus?" "rank")}
        {Lisp-Entry "unselect" () 725 11 ("redraw-border")}}
      {Lisp-Entry "Surrogate-Menu" () 734 7 ("properties" "end-close/rename" "rename-selected" "close-selection" "end-layer" "send-to-back" "view-surrogate" "bring-to-front" "end-edition" "paste" "copy" "view" "Action" "action:" "Bitmap-Resource" "icon:" "title:" "cut" "name:" "Context-Menu")}}})
"View-Surrogate-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "surrogate" "View-Surrogate-Actions.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.designer.surrogate.View-Surrogate-Actions" () 37 9 ("jazz")
      {Lisp-Entry "View-Surrogate-Actions" () 47 7 ("on-properties" "properties" "F2" "Shortcut" "shortcut:" "on-rename-selected" "rename-selected" "on-close-selection" "close-selection" "on-send-to-back" "send-to-back" "on-bring-to-front" ":container" ":parent" "Event-Handler" "action-handler:" "bring-to-front" "name:" "Actions")}}})
"Viewable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Viewable.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.graphic.Viewable" () 37 9 ("jazz")
      {Lisp-Entry "Viewable" () 45 11 ()
        {Lisp-Entry "get-title" () 48 35 ()}
        {Lisp-Entry "get-viewer-class" () 49 35 ()}}}})
"Violations-Found"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "integrity" "Violations-Found.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.integrity.Violations-Found" () 37 9 ("jazz")
      {Lisp-Entry "Violations-Found" () 44 7 ("Signal")
        {Lisp-Entry "design-file" () 47 8 ()}
        {Lisp-Entry "architecture" () 48 8 ()}
        {Lisp-Entry "violations" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("violations~self" "architecture~self" "design-file~self" "set!" "nextmethod" "violations" "architecture" "design-file")}
        {Lisp-Entry "get-design-file" () 64 18 ("design-file")}
        {Lisp-Entry "get-architecture" () 68 18 ("architecture")}
        {Lisp-Entry "get-violations" () 72 18 ("violations")}
        {Lisp-Entry "forwardable?" () 81 11 ("true")}}}})
"Violations-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "integrity" "Violations-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.integrity.Violations-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Violations-Manager" () 46 7 ("location" "toplevel-controls?:" "width:" "title:" "violation" "results" "header" "content" "scroller" "name:" "Navigable-Results")
        {Lisp-Entry "editor" () 49 8 ()}
        {Lisp-Entry "external-name" () 64 16 ("violations-manager" "rest")}
        {Lisp-Entry "palette-icon" () 74 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 79 16 ()}
        {Lisp-Entry "client-activate" () 83 11 ("set-editor" "Canvas" "get-client" "is?" "and" "if" "get-editor-view" "essay" "editor" "current-document" "guest" "let*")}
        {Lisp-Entry "client-deactivate" () 91 11 ("set-editor")}
        {Lisp-Entry "get-client" () 100 26 ("get-client" "editor" "when")}
        {Lisp-Entry "get-editor" () 110 26 ("editor")}
        {Lisp-Entry "set-editor" () 114 26 ("update" "set!" "editor" "neq?" "true" "when" "value")}
        {Lisp-Entry "update" () 124 18 ("get-violations" "add-violation" "for-each" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "get-client" "client" "get-tree" "tree" "let")}
        {Lisp-Entry "add-violation" () 139 11 ("user-data:" "Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "add-row" "get-image" "image" "present-location" "location" "present-message" "title" "get-tree" "tree" "let" "violation")}
        {Lisp-Entry "edit-selection" () 152 11 ("select-property" "self" "origin:" "list" "set-selection" "get-message" "user-message" "get-path" "follow-component" "component" "error" "find-component" "effective" "let" "/=" "or" "process-branch-changed" "set-active-branch" "null?" "if" "get-active-branch-name" "active" "get-client" "client" "get-editor" "editor" "get-property" "property" "get-branch-presentation" "branch-presentation" "get-branch" "branch-name" "get-row" "get-user-data" "violation" "when" "get-single-selection" "selection" "get-tree" "tree" "let*" "forward?")}}}})
"Virtual-Repository"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Virtual-Repository.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.repository.Virtual-Repository" () 37 9 ("jazz")
      {Lisp-Entry "Virtual-Repository" () 45 7 ("Repository")
        {Lisp-Entry "concrete" () 48 8 ()}
        {Lisp-Entry "destroy" () 51 11 ("nextmethod" "set!" "close" "concrete" "when")}
        {Lisp-Entry "get-concrete" () 58 18 ("concrete")}
        {Lisp-Entry "set-concrete" () 62 18 ("concrete" "set!" "c")}
        {Lisp-Entry "new-repository" () 71 16 (":concrete" "name:" "self" "install-initargs" "new" "concrete" "get-concrete-initargs" "concrete-initargs" "get-concrete-type" "concrete-class" "let*" "name" "pref")}
        {Lisp-Entry "concrete-class" () 79 34 ("type")}
        {Lisp-Entry "initialize" () 88 11 ("concrete~self" "set!" "nextmethod" "apply" "others" "concrete" "bind-keywords" "rest")}
        {Lisp-Entry "repository-item-class" () 99 38 ()}
        {Lisp-Entry "repository-version-class" () 103 38 ()}
        {Lisp-Entry "repository-checkout-class" () 107 38 ()}
        {Lisp-Entry "get-base-project" () 116 11 ("concrete" "get-base-project")}
        {Lisp-Entry "set-base-project" () 120 11 ("concrete" "set-base-project" "value")}
        {Lisp-Entry "get-base-directory" () 124 11 ("concrete" "get-base-directory")}
        {Lisp-Entry "set-base-directory" () 128 11 ("concrete" "set-base-directory" "value")}
        {Lisp-Entry "get-item" () 137 11 ("self" "repository-item-class" "new" "when" "local->remote" "get-item" "" "apply" "concrete" "let" "rest" "file/path")}
        {Lisp-Entry "in-repository?" () 143 11 ("local->remote" "concrete" "in-repository?" "file")}
        {Lisp-Entry "detach-file" () 152 11 ("local->remote" "concrete" "detach-file" "" "apply" "rest" "file")}
        {Lisp-Entry "get-latest-action" () 156 11 ("local->remote" "concrete" "get-latest-action" "" "apply" "rest" "file")}
        {Lisp-Entry "checkout-action" () 160 11 ("local->remote" "concrete" "checkout-action" "" "apply" "rest" "file")}
        {Lisp-Entry "checkin-action" () 164 11 ("local->remote" "concrete" "checkin-action" "" "apply" "rest" "file")}
        {Lisp-Entry "reintegrate-file" () 168 26 ("local->remote" "concrete" "reintegrate-file" "" "apply" "rest" "file")}
        {Lisp-Entry "undo-checkout-action" () 172 11 ("local->remote" "concrete" "undo-checkout-action" "" "apply" "rest" "file")}
        {Lisp-Entry "get-file-status" () 181 11 ("local->remote" "concrete" "get-file-status" "" "apply" "rest" "file")}
        {Lisp-Entry "get-file-checkouts-usernames" () 185 11 ("local->remote" "concrete" "get-file-checkouts-usernames" "" "apply" "file")}}}})
"Virtual-Repository-Checkout"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Virtual-Repository-Checkout.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.repository.Virtual-Repository-Checkout" () 37 9 ("jazz")
      {Lisp-Entry "Virtual-Repository-Checkout" () 45 7 ("Repository-Checkout")
        {Lisp-Entry "concrete" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("concrete~self" "set!" "nextmethod" "concrete" "repository")}
        {Lisp-Entry "get-localspec" () 61 11 ("concrete" "get-localspec")}
        {Lisp-Entry "get-username" () 65 11 ("concrete" "get-username")}
        {Lisp-Entry "get-version-number" () 69 11 ("concrete" "get-version-number")}}}})
"Virtual-Repository-Item"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Virtual-Repository-Item.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.repository.Virtual-Repository-Item" () 37 9 ("jazz")
      {Lisp-Entry "Virtual-Repository-Item" () 45 7 ("Repository-Item")
        {Lisp-Entry "concrete" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("concrete~self" "set!" "nextmethod" "concrete" "repository")}
        {Lisp-Entry "get-name" () 61 11 ("concrete" "get-name")}
        {Lisp-Entry "get-version-number" () 65 11 ("concrete" "get-version-number")}
        {Lisp-Entry "get-type" () 69 11 ("concrete" "get-type")}
        {Lisp-Entry "get-file?" () 73 11 ("concrete" "get-file?")}
        {Lisp-Entry "get-project?" () 77 11 ("concrete" "get-project?")}
        {Lisp-Entry "get-binary?" () 81 11 ("concrete" "get-binary?")}
        {Lisp-Entry "get-status" () 85 11 ("concrete" "get-status")}
        {Lisp-Entry "get-path" () 89 11 ("concrete" "get-path")}
        {Lisp-Entry "get-pathname" () 93 11 ("concrete" "get-pathname")}
        {Lisp-Entry "get-deleted?" () 97 11 ("concrete" "get-deleted?")}
        {Lisp-Entry "get-items" () 101 11 ("concrete" "get-items" "" "apply" "rest")}
        {Lisp-Entry "get-checkouts" () 105 11 ("concrete" "get-checkouts")}
        {Lisp-Entry "get-checkouts-usernames" () 109 11 ("concrete" "get-checkouts-usernames")}
        {Lisp-Entry "get-user-checkout" () 113 11 ("concrete" "get-user-checkout" "user")}
        {Lisp-Entry "get-version" () 117 11 ("concrete" "get-version" "n")}
        {Lisp-Entry "get-latest-version" () 121 11 ("concrete" "get-latest-version")}
        {Lisp-Entry "get-latest-info" () 125 11 ("concrete" "get-latest-info")}
        {Lisp-Entry "get-versions" () 129 11 ("concrete" "get-versions")}
        {Lisp-Entry "get-unlabeled-versions" () 133 11 ("concrete" "get-unlabeled-versions")}
        {Lisp-Entry "get-parent" () 137 11 ("concrete" "get-parent")}
        {Lisp-Entry "local->remote" () 146 11 ("repository" "local->remote" "local")}
        {Lisp-Entry "remote->local" () 150 11 ("repository" "remote->local" "remote")}
        {Lisp-Entry "add-file" () 155 11 ("local->remote" "concrete" "add-file" "local")}
        {Lisp-Entry "add-project" () 160 11 ("concrete" "add-project" "name")}
        {Lisp-Entry "checkin" () 164 11 ("local->remote" "concrete" "checkin" "" "apply" "rest" "local")}
        {Lisp-Entry "checkout" () 168 11 ("local->remote" "concrete" "checkout" "" "apply" "rest" "local")}
        {Lisp-Entry "undo-checkout" () 172 11 ("local->remote" "concrete" "undo-checkout" "" "apply" "rest" "local")}
        {Lisp-Entry "is-different?" () 176 11 ("concrete" "is-different?" "local")}
        {Lisp-Entry "delete-item" () 180 11 ("concrete" "delete-item")}
        {Lisp-Entry "destroy-item" () 184 11 ("concrete" "destroy-item")}
        {Lisp-Entry "rename-item" () 193 11 ("local->remote" "concrete" "rename-item" "new-name")}
        {Lisp-Entry "get-local" () 202 11 ("local->remote" "concrete" "get-local" "local")}
        {Lisp-Entry "get-content" () 211 11 ("concrete" "get-content" "" "apply" "remote->local" "remote" "dynamic" "function" "map" "rest")}}}})
"Virtual-Repository-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "preferences" "Virtual-Repository-Preferences.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.preferences.Virtual-Repository-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Virtual-Repository-Preferences" () 45 7 ("Repository-Preferences")
        {Lisp-Entry "concrete-type" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "concrete-initargs" () 49 12 ("generate" "accessors")}}}})
"Virtual-Repository-Version"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "repository" "Virtual-Repository-Version.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.repository.repository.Virtual-Repository-Version" () 37 9 ("jazz")
      {Lisp-Entry "Virtual-Repository-Version" () 45 7 ("Repository-Version")
        {Lisp-Entry "concrete" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("concrete~self" "set!" "nextmethod" "concrete" "repository")}
        {Lisp-Entry "get-username" () 61 11 ("concrete" "get-username")}
        {Lisp-Entry "get-version-number" () 65 11 ("concrete" "get-version-number")}
        {Lisp-Entry "labeled?" () 69 11 ("concrete" "labeled?")}
        {Lisp-Entry "get-label" () 73 11 ("concrete" "get-label")}
        {Lisp-Entry "get-action" () 77 11 ("concrete" "get-action")}
        {Lisp-Entry "get-date" () 81 11 ("concrete" "get-date")}
        {Lisp-Entry "get-item" () 85 11 ("concrete" "get-item")}}}})
"W"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "W.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.W" () 37 9 ("jazz")
      {Lisp-Entry "W" () 40 7 ("Object")}}})
"Walk-Binding"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Walk-Binding.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Walk-Binding" () 37 9 ("jazz")
      {Lisp-Entry "Walk-Binding" () 40 7 ("Object")}}})
"Walk-Context"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Walk-Context.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Walk-Context" () 37 9 ("jazz")
      {Lisp-Entry "Walk-Context" () 40 7 ("Object")
        {Lisp-Entry "policy" () 43 8 ("generate")}
        {Lisp-Entry "locator" () 44 8 ("generate")}
        {Lisp-Entry "pathname" () 45 8 ("generate")}
        {Lisp-Entry "initialize" () 48 11 ("set-pathname" "set-locator" "set-policy" "pathname" "locator" "policy" "context")}}}})
"Walk-Error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "exception" "Walk-Error.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.exception.Walk-Error" () 37 9 ("jazz")
      {Lisp-Entry "Walk-Error" () 44 7 ("Error")
        {Lisp-Entry "category-name" () 47 8 ()}
        {Lisp-Entry "problems" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("problems~self" "category-name~self" "set!" "nextmethod" "apply" "others" "problems" "category-name" "bind-keywords" "rest")}
        {Lisp-Entry "get-category-name" () 63 18 ("category-name")}
        {Lisp-Entry "get-problems" () 67 18 ("problems")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Walk-Error.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Walk-Error" () 37 9 ("jazz")
      {Lisp-Entry "Walk-Error" () 40 7 ("Error")
        {Lisp-Entry "location" () 43 8 ("generate")}}}})
"Walk-Frame"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Walk-Frame.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Walk-Frame" () 37 9 ("jazz")
      {Lisp-Entry "Walk-Frame" () 40 7 ("Walk-Binding")
        {Lisp-Entry "bindings" () 43 8 ("generate")}}}})
"Walk-Location"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Walk-Location.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Walk-Location" () 37 9 ("jazz")
      {Lisp-Entry "Walk-Location" () 40 7 ("Object")
        {Lisp-Entry "module-locator" () 43 8 ("generate")}
        {Lisp-Entry "declaration-locator" () 44 8 ("generate")}}}})
"Walker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "walker" "Walker.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.walker.Walker" () 37 9 ("jazz")
      {Lisp-Entry "Walker" () 40 7 ("Object")
        {Lisp-Entry "warnings" () 43 8 ("generate")}
        {Lisp-Entry "errors" () 44 8 ("generate")}
        {Lisp-Entry "literals" () 45 8 ("generate")}}}})
"Wallpaper-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Wallpaper-Actions.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Wallpaper-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Wallpaper-Actions" () 46 7 ("on-display-info" "display-info" "on-previous" "previous" "on-change" "change" "on-paused" "paused" "on-random" "random" "on-delete-file" "delete-file" "on-add-to-favorite" "add-to-favorite" "stretched" "stretched-mode" "filled" "filled-mode" "tiled" "tiled-mode" ":alt" "centered" "mode:" "on-change-mode" "centered-mode" "Next" "on-next" "next" "Prior" "on-prior" "prior" "End" "on-end" "end" "Home" "on-home" "home" "Space" "Shortcut" "shortcut:" "on-empty" ":wallpaper" "Event-Handler" "action-handler:" "empty" "name:" "Actions")}}})
"Wallpaper-Configuration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Wallpaper-Configuration.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Wallpaper-Configuration" () 37 9 ("jazz")
      {Lisp-Entry "Wallpaper-Configuration" () 46 7 ("period:" "favorites:" "startup:" "Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "directory" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "mode" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "startup" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "favorites" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "period" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "recursive?" () 54 12 ("generate" "accessors" "false")}
        {Lisp-Entry "random?" () 55 12 ("generate" "accessors" "false")}
        {Lisp-Entry "active?" () 56 12 ("generate" "accessors" "true")}
        {Lisp-Entry "get-domain" () 69 16 ("nextmethod" "else" "Boolean-Domain" "new" "active?" "random?" "recursive?" "field-name" "case" "property")}
        {Lisp-Entry "get-class-presentation" () 81 16 ()}
        {Lisp-Entry "property-presentation" () 86 16 ("nextmethod" "else" "active?" "random?" "recursive?" "period" "favorites" "startup" "mode" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 99 11 ("nextmethod" "else" "Boolean-Row" "active?" "random?" "recursive?" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 106 11 ("active?" "random?" "recursive?" "period" "favorites" "startup" "mode" "directory")}}}})
"Wallpaper-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "preferences" "Wallpaper-Preferences.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.preferences.Wallpaper-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Wallpaper-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "active" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "can-rename-component?" () 61 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 65 11 ("false")}
        {Lisp-Entry "can-move-component?" () 69 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 73 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 77 11 ("Wallpaper-Configuration" "list")}
        {Lisp-Entry "get-addable-details" () 82 11 ("active?" "random?" "recursive?" "period" "favorites" "startup" "mode" "directory" "name-info")}}}})
"Wallpaper-Root"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Wallpaper-Root.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.view.Wallpaper-Root" () 37 9 ("jazz")
      {Lisp-Entry "Wallpaper-Root" () 48 7 ("tooltip?:" "Stage-Root")
        {Lisp-Entry "image" () 51 8 ()}
        {Lisp-Entry "previous" () 52 8 ()}
        {Lisp-Entry "wallpapers" () 53 8 ()}
        {Lisp-Entry "mode" () 54 8 ()}
        {Lisp-Entry "random?" () 55 8 ("false")}
        {Lisp-Entry "browse?" () 56 8 ("false")}
        {Lisp-Entry "configuration" () 57 8 ()}
        {Lisp-Entry "choices" () 58 8 ()}
        {Lisp-Entry "locator" () 59 8 ("max-delay:" "Wallpaper-Locator" "new")}
        {Lisp-Entry "changer" () 60 8 ()}
        {Lisp-Entry "threads" () 61 8 ()}
        {Lisp-Entry "paused?" () 62 8 ("false")}
        {Lisp-Entry "done?" () 63 8 ("false")}
        {Lisp-Entry "preferences" () 70 11 ("false" "error?:" "wallpaper" "get-preferences")}
        {Lisp-Entry "install-wallpaper" () 74 11 ("child" "install-configuration" "get-active" "active" "when" "preferences" "pref" "let")}
        {Lisp-Entry "install-configuration" () 82 11 ("get-period" "setup-changer" "changer" "and" "get-startup" "startup-file" "set-source" "get-favorites" "setup-favorites" "get-recursive?" "setup-wallpapers" "Directory" "is?" "dir?" "get-directory" "wallpaper" "let" "get-size" "set-view-size" "get-random?" "set-random?" "get-mode" "set-mode" "true" ":cache?" "Image" "new" "invalidate-view" "wallpapers" "image" "begin" "not" "if" "browse?" "set!" "configuration" "/=" "when" "false" "brws?" "config")}
        {Lisp-Entry "destroy" () 106 11 ("nextmethod" "show-cursor")}
        {Lisp-Entry "context-menu" () 111 11 ("new-stage-menu" "track-popup-menu" "show-cursor" "acquire-focus" "nextmethod" "preferences" "get-children" "null?" "if" "pos")}
        {Lisp-Entry "new-stage-menu" () 119 11 ("layout-menu" "if" "set-title" "member?" "favorite?" "get-favorites" "favorites" "get-name" "name" "configuration" "and" "when" "favorite-separator" "favorite" "set-visible?" "get-source" "source" "manage" "locate" "get-content" "manage-menu" "Stage-Menu" "new" "menu" "let*")}
        {Lisp-Entry "on-change" () 135 11 ("change-wallpaper" "evt")}
        {Lisp-Entry "on-previous" () 139 11 ("show-previous" "evt")}
        {Lisp-Entry "on-add-to-favorite" () 143 11 ("format" "flash-message" "set-preference" "cons" "remove!" "new-favorites" "member?" "favorite?" "get-favorites" "favorites" "get-name" "name" "let*" "bell" "configuration" "not" "or" "if" "get-source" "source" "let" "evt")}
        {Lisp-Entry "on-delete-file" () 155 11 ("change-wallpaper" "choices" "=" "test:" "remove!" "wallpapers" "set!" "get-name" "format" "flash-message" "delete-file" "get-source" "source" "let" "image" "when" "evt")}
        {Lisp-Entry "on-change-mode" () 166 11 ("mode:" "get-property" "set-mode" "evt")}
        {Lisp-Entry "size-change" () 170 11 ("update-image" "set-view-size" "image" "when" "nextmethod" "size")}
        {Lisp-Entry "update-image" () 177 11 ("invalidate-view" "image" "update-image")}
        {Lisp-Entry "get-tooltip-text" () 182 11 ("get-mode" "get-height" "get-width" "format" "list" "get-size" "image-size" "get-source" "source" "let" "alt-down?" "control-down?" "image" "and" "when")}
        {Lisp-Entry "get-source" () 195 11 ("get-source" "image" "when")}
        {Lisp-Entry "set-source" () 200 11 ("update-view" "invalidate-view" "format" "message-box" "else" "hide-cursor" "exists?" "image" "set-source" "not" "cond" "get-source" "previous" "set!" "file")}
        {Lisp-Entry "set-mode" () 214 11 ("invalidate-view" "set-mode" "image" "when" "mode~self" "set!" "mode")}
        {Lisp-Entry "set-random?" () 221 11 ("random?" "set!" "flag")}
        {Lisp-Entry "setup-wallpapers" () 225 11 ("get-name" "key:" "ci<" "sort" "wallpapers" "recursive?:" "cons" "set!" "image-file?" "when" "file" "dynamic" "function" "iterate-directory" "files" "let" "recursive?" "dir")}
        {Lisp-Entry "image-file?" () 235 11 ("ci=" "test:" "get-extension" "member?" "file")}
        {Lisp-Entry "setup-favorites" () 240 11 ("wallpaper-file" "favorite" "dynamic" "function" "map" "choices" "set!" "favorites" "dir")}
        {Lisp-Entry "startup-file" () 246 11 ("next-wallpaper" "else" "wallpaper-file" ":empty" "=" "if" "background" "not" "cond" "startup" "dir" "dir?")}
        {Lisp-Entry "setup-changer" () 252 11 ("change-wallpaper" "paused?" "unless" "sleep" "done?" "not" "while" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "changer" "set!" "period")}
        {Lisp-Entry "wallpaper-file" () 265 11 ("new-file" "name" "dir")}
        {Lisp-Entry "change-wallpaper" () 269 18 ("next-wallpaper" "set-source" "configuration" "when")}
        {Lisp-Entry "show-first" () 274 11 ("car" "set-source" "wallpapers" "when" "random?" "unless")}
        {Lisp-Entry "show-last" () 280 11 ("last" "set-source" "wallpapers" "when" "random?" "unless")}
        {Lisp-Entry "show-previous" () 286 11 ("previous" "set!" "set-source" "when" "previous-wallpaper" "wallpaper" "let")}
        {Lisp-Entry "next-wallpaper" () 293 11 ("remove!" "random-element" "wallpaper" "copy" "set!" "choices" "null?" "when" "length" "1" "wallpaper-rank" "+" "modulo" "element" "wallpapers" "car" "get-source" "source" "let" "random?" "not" "if")}
        {Lisp-Entry "previous-wallpaper" () 307 11 ("previous" "1" "-" "element" "0" "=" "wallpaper-rank" "rank" "length" "count" "last" "wallpapers" "essay" "get-source" "source" "let" "random?" "not" "if")}
        {Lisp-Entry "wallpaper-rank" () 320 11 ("position" "return:" "=" "test:" "wallpapers" "find" "wallpaper")}
        {Lisp-Entry "focus-actions" () 329 11 ("nextmethod" "wallpaper" "find-actions" "cons")}
        {Lisp-Entry "on-empty" () 339 11 ("install-configuration" "evt")}
        {Lisp-Entry "on-home" () 343 11 ("show-first" "evt")}
        {Lisp-Entry "on-end" () 347 11 ("show-last" "evt")}
        {Lisp-Entry "on-prior" () 351 11 ("show-previous" "evt")}
        {Lisp-Entry "on-next" () 355 11 ("change-wallpaper" "evt")}
        {Lisp-Entry "on-random" () 359 11 ("if" "flash-message" "change-wallpaper" "when" "not" "random?" "set!" "evt")}
        {Lisp-Entry "on-paused" () 366 11 ("if" "flash-message" "not" "paused?" "set!" "evt")}
        {Lisp-Entry "on-display-info" () 371 11 ("delay:" "format" "member?" "favorite?" "configuration" "get-favorites" "favorites" "get-name" "name" "let*" "Bitmap-Resource" "not" "if" "flash-message" "get-source" "source" "let" "evt")}
        {Lisp-Entry "flash-message" () 383 11 ("clear-user-message" "sleep" "user-message" "thread" "synchronized" "function" "execute:" "self" "context:" "name:" "Thread" "new" "delay" "delay:" "message")}
        {Lisp-Entry "focus-gain" () 399 11 ("hide-cursor")}
        {Lisp-Entry "focus-lose" () 403 11 ("show-cursor" "view" "window")}
        {Lisp-Entry "cursor-update" () 412 11 ("show-cursor" "nextmethod" "view")}
        {Lisp-Entry "mouse-leave" () 422 11 ("show-cursor")}
        {Lisp-Entry "key-press" () 431 11 ("locator" "enter" "wallpapers" "alphanumeric?" "and" "when" "key")}
        {Lisp-Entry "draw" () 441 11 ("size:" "0" "draw" "image" "when" "get-size" "size" "let" "nextmethod" "lv" "lh" "update" "context" "dc")}
        {Lisp-Entry "on-configure" () 453 18 ("install-configuration" "browse-configuration" "true" "eq?" "if" ":configuration" "get-property" "configuration" "let" "evt")}
        {Lisp-Entry "browse-configuration" () 460 11 ("true" "get-mode" "mode:" "get-period" "configuration" "essay" "period:" "BrowseFolder-Dialog" "get-modal" "directory:" "Wallpaper-Configuration" "new" "install-configuration")}}
      {Lisp-Entry "Wallpaper-Locator" () 474 7 ("Locator")
        {Lisp-Entry "iterate" () 478 11 ("length" "0" "naturals" "wallpapers" "get-name" "title" "let" "rank" "wallpaper" "dynamic" "function" "for-each" "proc")}
        {Lisp-Entry "select" () 487 11 ("wallpapers" "element" "set-source" "rank")}}
      {Lisp-Entry "Stage-Menu" () 496 7 ("manage" "manage-separator" "previous" "change" "paused" "slide-separator" "random" "random-separator" "stretched-mode" "stretched" "filled-mode" "filled" "tiled-mode" "tiled" "centered-mode" "wallpaper" "Action" "action:" "centered" "Bitmap-Resource" "icon:" "title:" "configure" "name:" "Context-Menu")
        {Lisp-Entry "finish" () 520 11 ("get-name" "set-title" "or" "paused?" "random?" "set-checked?" "manage" "manage-separator" "previous" "change" "paused" "slide-separator" "random" "false" "random-separator" "set-visible?" "begin" "not" "if" "get-source" "source" "let" "true" "locate" "set-selected?" "mode" "when" "nextmethod" "rest")}}
      {Lisp-Entry "Configure-Menu" () 546 7 ("Context-Menu")
        {Lisp-Entry "finish" () 550 11 ("update-menu" "nextmethod" "rest")}
        {Lisp-Entry "update-menu" () 556 18 ("true" "get-presentation" "get-active?" "config" "dynamic" "function" "for-each" "self" "parent:" "Separator-Item" "new" "when" "preferences" "get-children" "children" "let" "false" "Bitmap-Resource" "insert-item")}
        {Lisp-Entry "insert-item" () 570 11 (":configuration" "list" "properties:" "on-configure" "method-name:" ":wallpaper" "target-name:" "Event-Handler" "action-handler:" "icon:" ":selected?" "title:" "self" "parent:" "Radio-Item" "new" "configuration" "eq?" "browse?" "if" "selected?" "let" "browse-item?" "config" "icon" "title")}}
      {Lisp-Entry "Manage-Menu" () 582 7 ("title:" "delete-file" "favorite-separator" "add-to-favorite" "wallpaper" "Action" "action:" "Bitmap-Resource" "icon:" "favorite" "name:" "Context-Menu")}}})
"Wallpaper-Stage"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Wallpaper-Stage.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.window.Wallpaper-Stage" () 37 9 ("jazz")
      {Lisp-Entry "Wallpaper-Stage" () 45 7 ("Stage")
        {Lisp-Entry "new-root" () 48 11 ("Wallpaper-Root" "new")}}}})
"Web-Context"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "Web-Context.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.http.Web-Context" () 37 9 ("jazz")
      {Lisp-Entry "Web-Context" () 44 7 ("Object")
        {Lisp-Entry "get-servlet-associations" () 47 26 ()}}}})
"Web-Page"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "Web-Page.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.Web-Page" () 37 9 ("jazz")
      {Lisp-Entry "Web-Page" () 44 7 ("Object")
        {Lisp-Entry "input" () 47 8 ()}
        {Lisp-Entry "output" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("output~self" "input~self" "set!" "nextmethod" "output" "input")}
        {Lisp-Entry "print" () 57 11 ("output" "input" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "get-input" () 68 18 ("input")}
        {Lisp-Entry "set-input" () 72 18 ("input" "set!" "value")}
        {Lisp-Entry "get-output" () 76 18 ("output")}
        {Lisp-Entry "set-output" () 80 18 ("output" "set!" "value")}}}})
"Web-Server"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "Web-Server.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.library.http.Web-Server" () 37 9 ("jazz")
      {Lisp-Entry "Web-Server" () 44 7 ("HTTP-Server")
        {Lisp-Entry "root-directory" () 47 8 ()}
        {Lisp-Entry "default-resource" () 48 8 ()}
        {Lisp-Entry "unauthentified-resource" () 49 8 ()}
        {Lisp-Entry "html-generator" () 50 8 ()}
        {Lisp-Entry "initialize" () 53 11 ("html-generator~self" "unauthentified-resource~self" "default-resource~self" "root-directory~self" "set!" "nextmethod" "apply" "others" "unauthentified-resource" "default-resource" "root-directory" "bind-keywords" "rest")}
        {Lisp-Entry "get-root-directory" () 67 18 ("root-directory")}
        {Lisp-Entry "get-default-resource" () 71 18 ("default-resource")}
        {Lisp-Entry "get-unauthentified-resource" () 75 18 ("unauthentified-resource")}
        {Lisp-Entry "get-html-generator" () 79 18 ("html-generator")}
        {Lisp-Entry "set-html-generator" () 83 18 ("html-generator" "set!" "value")}
        {Lisp-Entry "server-name" () 92 11 ()}
        {Lisp-Entry "find-file-resource" () 101 11 ("exists?" "tokenise" "new-file" "file" "let" "empty-string?" "not" "root-directory" "and" "when" "resource")}
        {Lisp-Entry "generate-response" () 113 11 ("process-unknown-file" "else" "process-resource-file" "test:" "member?" "process-html-file" "process-jml-file" "ci=" "cond" "get-extension" "ext" "nextmethod" "null?" "find-file-resource" "file" "process-servlet" "false" "needs-authentification?" "bind-optionals" "rest" "servlet-class" "bind" "find-servlet-info" "servlet-info" "find-generator" "generator" "redirect-response" "default-resource" "empty-string?" "and" "if" "get-resource" "resource" "let" "request")}
        {Lisp-Entry "find-generator" () 135 11 ("assoc" "cdr" "get-associations" "associations" "let" "resource" "request")}
        {Lisp-Entry "get-associations" () 140 29 ()}
        {Lisp-Entry "find-servlet-info" () 149 11 ("assoc" "get-servlet-associations" "associations" "let" "resource")}
        {Lisp-Entry "get-servlet-associations" () 154 29 ()}
        {Lisp-Entry "process-servlet" () 158 11 ("generate-servlet" "validate-authentification" "get-resource" "redirect-response" "redirect" "HTTP-Redirect" "catch" "needs-authentification?" "servlet-class" "resource" "request")}
        {Lisp-Entry "validate-authentification" () 165 11 ("unauthentified-resource" "redirect-servlet" "get-session" "null?" "and" "when" "needs-authentification?" "request")}
        {Lisp-Entry "generate-servlet" () 170 11 ("get-output" "render" "String-Printer" "printer" "process-request" "jml" "jml-renderer" "renderer" "self" "autoload" "new" "servlet" "jml-preferences" "pref" "let*" "call-listeners-receive-servlet-request" "generate-static-page" "html-generator" "when" "servlet-class" "resource" "request")}
        {Lisp-Entry "generate-static-page" () 183 11 ("render" "File-Printer" "printer" "with-closed" "create-directories" "root-directory" "generated-page" "static-file" "process-request" "jml" "jml-renderer" "renderer" "let" "setup-directory" "generate-page?" "when" "self" "autoload" "new" "servlet" "jml-preferences" "pref" "let*" "html-generator" "servlet-class" "resource" "request")}
        {Lisp-Entry "redirect-servlet" () 201 18 ("HTTP-Redirect" "new" "throw" "resource")}
        {Lisp-Entry "redirect-response" () 205 11 ("add-session-cookie" "format" "add-location" "add-content-type" "add-connection-close" "see-other" ":code" "HTTP-Response" "new" "response" "get-session" "session" "get-header" "host" "let" "resource" "request")}
        {Lisp-Entry "process-jml-file" () 221 11 ("process-jml" "read" "jml" "let" "File-Reader" "new" "reader" "with-closed" "file" "request")}
        {Lisp-Entry "process-html-file" () 232 11 ("add-content-length" "add-content-type" "add-connection-close" "get-content" "content" "file:" "HTTP-File-Response" "new" "response" "let*" "file" "request")}
        {Lisp-Entry "process-resource-file" () 246 11 ("add-content-length" "add-content-type" "add-connection-close" "get-content" "content" "file:" "HTTP-File-Response" "new" "response" "let*" "file" "request")}
        {Lisp-Entry "process-unknown-file" () 260 11 ("request-content" "parse" "format" "file" "request")}}
      {Lisp-Entry "HTTP-Redirect" () 276 7 ("Exception")
        {Lisp-Entry "resource" () 279 8 ()}
        {Lisp-Entry "initialize" () 282 11 ("resource" "set!" "nextmethod" "res")}}}})
"Web-Server-Configuration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "Web-Server-Configuration.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.http.Web-Server-Configuration" () 37 9 ("jazz")
      {Lisp-Entry "Web-Server-Configuration" () 44 7 ("Component")
        {Lisp-Entry "class" () 47 12 ("generate" "accessors")}
        {Lisp-Entry "host" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "port" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "root-directory" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "default-resource" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "unauthentified-resource" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "description" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "debug?" () 54 12 ("generate" "accessors" "false")}
        {Lisp-Entry "toggle-debug?" () 62 18 ("not" "debug?" "set!")}}}})
"Web-Server-Configurations"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "Web-Server-Configurations.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.http.Web-Server-Configurations" () 37 9 ("jazz")
      {Lisp-Entry "Web-Server-Configurations" () 44 7 ("Component")}}})
"Web-Servers-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "http" "Web-Servers-Manager.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.http.Web-Servers-Manager" () 37 9 ("jazz")
      {Lisp-Entry "Web-Servers-Manager" () 49 7 ("debugged" "hits" "port" "host" "state" "toplevel-controls?:" "width:" "title:" "name" "on-context-menu" "context-menu-handler:" "on-double-click" "double-click-handler:" "on-selection-change" "selection-handler:" "multiple-selection?:" "row" "selection-mode:" "description" "filled-column:" "servers" "shown?:" "header" "fill" "content" "flat?:" "hscroll?:" "vscroll?:" "center" "scroller" "on-refresh" "refresh" "on-debug-server" "debug" "on-restart-server" "restart" "on-stop-server" "stop" "on-start-server" "start" "edit-separator" "on-edit-server" "form:" "Event-Handler" "action-handler:" ":icons" "portfolio:" "Bitmap-Resource" "image-name:" "tooltip-text:" "tooltip?:" "enabled?:" "edit" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "Dimension" "size:" "tools" "name:" "border" "layout-type:" "Layout-View")
        {Lisp-Entry "configurations" () 52 8 ()}
        {Lisp-Entry "servers" () 53 8 ("eq?" "new-hashtable")}
        {Lisp-Entry "external-name" () 83 16 ("web-servers-manager" "rest")}
        {Lisp-Entry "palette-class" () 93 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 98 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 103 16 ()}
        {Lisp-Entry "get-tools-view" () 112 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 116 11 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "install" () 126 11 ("update-servers" "setup-configurations" "setup-tools" "nextmethod" "rest")}
        {Lisp-Entry "setup-tools" () 133 11 ("edit-separator" "false" "edit" "locate" "set-visible?" "IDE" "typed?" "not" "when" "get-application" "appl" "let")}
        {Lisp-Entry "get-tree" () 145 11 ("servers" "locate")}
        {Lisp-Entry "on-edit-server" () 154 11 ("selected-configuration" "edit-server" "evt")}
        {Lisp-Entry "on-start-server" () 158 11 ("update-states" "update-tools" "selected-configuration" "start-server" "evt")}
        {Lisp-Entry "on-stop-server" () 164 11 ("update-states" "update-tools" "selected-configuration" "stop-server" "evt")}
        {Lisp-Entry "on-restart-server" () 170 11 ("update-states" "update-tools" "selected-configuration" "restart-server" "evt")}
        {Lisp-Entry "on-debug-server" () 176 11 ("update-states" "update-tools" "selected-configuration" "debug-server" "evt")}
        {Lisp-Entry "on-selection-change" () 182 11 ("update-tools" "servers" "get-name" "case" "get-sender" "sender" "let" "evt")}
        {Lisp-Entry "on-refresh" () 189 11 ("update-servers" "evt")}
        {Lisp-Entry "update-tools" () 193 11 ("get-debug?" "set-selected?" "restart" "started" "stop" "stopped" "get-server-state" "eq?" "not" "or" "and" "start" "edit" "set-enabled?" "get-name" "find-server" "essay" "server" "selected-configuration" "config" "debug" "locate" "tool" "let*")}
        {Lisp-Entry "on-double-click" () 205 11 ("update-states" "update-tools" "selected-configuration" "start/stop-server" "evt")}
        {Lisp-Entry "on-context-menu" () 211 11 ("track-popup-menu" "new-servers-menu" "menu" "when" "selected-configuration" "config" "let" "dynamic" "function" "with-context-click" "acquire" "acquired" "get-position" "pos" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "new-servers-menu" () 223 11 ("layout-menu" "cleanup-separators" "debug" "restart" "started" "and" "stop" "stopped" "get-server-state" "eq?" "not" "or" "start" "edit-separator" "edit" "locate" "set-visible?" "IDE" "typed?" "ide?" "get-application" "appl" "find-server" "server" "get-name" "name" "Server-Menu" "new" "menu" "let*" "config")}
        {Lisp-Entry "setup-configurations" () 245 11 ("read-configurations" "configurations" "set!")}
        {Lisp-Entry "read-configurations" () 249 11 ("read-from-file" "instantiate" "exists?" "when" "User" "File" "file" "let")}
        {Lisp-Entry "update-servers" () 260 11 ("get-children" "user-data:" "present-compact" "Tree-Label" "image:" "title:" "Tree-Node" "new" "list" "children:" "state:" "add-row" "get-debug?" "debug?" "get-hits" "0" "hits" "get-description" "description" "state-text" "->string" "title" "stopping" "started" "starting" "Bitmap-Resource" "case" "image" "get-port" "port" "get-host" "host" "get-server-state" "stopped" "not" "if" "state" "find-server" "server" "get-name" "name" "let*" "config" "for-each" "configurations" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "get-tree" "tree" "let")}
        {Lisp-Entry "update-states" () 282 11 ("invalidate-cell" "set-title" "get-cell-data" "set-image" "get-debug?" "debug?" "state-text" "stopping" "started" "starting" "Bitmap-Resource" "case" "image" "get-server-state" "stopped" "not" "if" "state" "find-server" "server" "get-name" "name" "get-user-data" "config" "6" "c6" "1" "c1" "0" "Cell" "new" "c0" "let*" "rank" "row" "dynamic" "function" "for-each-visible-row" "get-tree" "tree" "let")}
        {Lisp-Entry "start-server" () 309 11 ("servers" "hash-set!" "error" "false" "error?:" "wait-started" "not" "if" ":debug?" ":unauthentified-resource" ":default-resource" ":root-directory" ":port" ":host" "autoload" "new" "server" "get-debug?" "debug?" "get-unauthentified-resource" "unauthentified-resource" "get-default-resource" "default-resource" "get-root-directory" "root-directory" "get-port" "port" "get-host" "host" "get-class" "class" "get-name" "name" "let*" "stop-server" "config")}
        {Lisp-Entry "stop-server" () 325 11 ("servers" "hash-set!" "stop-listener" "when" "find-server" "server" "get-name" "name" "let*" "config")}
        {Lisp-Entry "restart-server" () 333 11 ("start-server" "stop-server" "config")}
        {Lisp-Entry "start/stop-server" () 338 11 ("stop-server" "started" "start-server" "case" "get-server-state" "stopped" "not" "if" "state" "find-server" "server" "get-name" "name" "let*" "config")}
        {Lisp-Entry "debug-server" () 347 11 ("get-debug?" "set-debug?" "when" "find-server" "server" "get-name" "name" "let*" "toggle-debug?" "config")}
        {Lisp-Entry "ping-server" () 356 11 ("get-duration-in-seconds" "user-message" "receive-raw" "data" "let" "send-string" "connect" "Socket" "socket" "with-closed" "Timer" "new" "timer" "get-port" "port" "name:" "Host" "host" "find-server" "server" "get-name" "name" "let*" "config")}
        {Lisp-Entry "edit-server" () 372 11 ("jazz" "context:" "edit-definition" "get-class" "class" "get-application" "appl" "let" "config")}
        {Lisp-Entry "find-server" () 378 18 ("servers" "hash-ref" "name")}
        {Lisp-Entry "selected-object" () 387 11 ("get-row" "get-user-data" "when" "get-single-selection" "rank" "get-tree" "tree" "let*")}
        {Lisp-Entry "selected-configuration" () 394 11 ("Web-Server-Configuration" "is?" "and" "when" "selected-object" "object" "let")}}
      {Lisp-Entry "Server-Menu" () 405 7 ("on-debug-server" "debug" "on-restart-server" "restart" "on-stop-server" "stop" "on-start-server" "start" "edit-separator" "on-edit-server" ":container" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "icon:" "title:" "edit" "name:" "Context-Menu")}}})
"WinAdv"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinAdv.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinAdv" () 37 9 ("jazz")}})
"WinBase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinBase.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.windows.WinBase" () 37 9 ("LPCWSTR" "jazz")
      {Lisp-Entry "INVALID_HANDLE_VALUE" () 52 10 ()}
      {Lisp-Entry "INVALID_FILE_SIZE" () 53 10 ()}
      {Lisp-Entry "FILE_BEGIN" () 55 10 ("0")}
      {Lisp-Entry "FILE_CURRENT" () 56 10 ("1")}
      {Lisp-Entry "FILE_END" () 57 10 ("2")}
      {Lisp-Entry "FILE_FLAG_WRITE_THROUGH" () 59 10 ()}
      {Lisp-Entry "FILE_FLAG_OVERLAPPED" () 60 10 ()}
      {Lisp-Entry "FILE_FLAG_NO_BUFFERING" () 61 10 ()}
      {Lisp-Entry "FILE_FLAG_RANDOM_ACCESS" () 62 10 ()}
      {Lisp-Entry "FILE_FLAG_SEQUENTIAL_SCAN" () 63 10 ()}
      {Lisp-Entry "FILE_FLAG_DELETE_ON_CLOSE" () 64 10 ()}
      {Lisp-Entry "FILE_FLAG_BACKUP_SEMANTICS" () 65 10 ()}
      {Lisp-Entry "FILE_FLAG_POSIX_SEMANTICS" () 66 10 ()}
      {Lisp-Entry "FILE_FLAG_OPEN_REPARSE_POINT" () 67 10 ()}
      {Lisp-Entry "FILE_FLAG_OPEN_NO_RECALL" () 68 10 ()}
      {Lisp-Entry "CREATE_NEW" () 70 10 ("1")}
      {Lisp-Entry "CREATE_ALWAYS" () 71 10 ("2")}
      {Lisp-Entry "OPEN_EXISTING" () 72 10 ("3")}
      {Lisp-Entry "OPEN_ALWAYS" () 73 10 ("4")}
      {Lisp-Entry "TRUNCATE_EXISTING" () 74 10 ("5")}
      {Lisp-Entry "FORMAT_MESSAGE_ALLOCATE_BUFFER" () 76 10 ()}
      {Lisp-Entry "FORMAT_MESSAGE_IGNORE_INSERTS" () 77 10 ()}
      {Lisp-Entry "FORMAT_MESSAGE_FROM_STRING" () 78 10 ()}
      {Lisp-Entry "FORMAT_MESSAGE_FROM_HMODULE" () 79 10 ()}
      {Lisp-Entry "FORMAT_MESSAGE_FROM_SYSTEM" () 80 10 ()}
      {Lisp-Entry "FORMAT_MESSAGE_ARGUMENT_ARRAY" () 81 10 ()}
      {Lisp-Entry "FORMAT_MESSAGE_MAX_WIDTH_MASK" () 82 10 ()}
      {Lisp-Entry "IGNORE" () 84 10 ("0")}
      {Lisp-Entry "INFINITE" () 85 10 ()}
      {Lisp-Entry "STARTF_USESHOWWINDOW" () 87 10 ()}
      {Lisp-Entry "STARTF_USESIZE" () 88 10 ()}
      {Lisp-Entry "STARTF_USEPOSITION" () 89 10 ()}
      {Lisp-Entry "STARTF_USECOUNTCHARS" () 90 10 ()}
      {Lisp-Entry "STARTF_USEFILLATTRIBUTE" () 91 10 ()}
      {Lisp-Entry "STARTF_RUNFULLSCREEN" () 92 10 ()}
      {Lisp-Entry "STARTF_FORCEONFEEDBACK" () 93 10 ()}
      {Lisp-Entry "STARTF_FORCEOFFFEEDBACK" () 94 10 ()}
      {Lisp-Entry "STARTF_USESTDHANDLES" () 95 10 ()}
      {Lisp-Entry "STARTF_USEHOTKEY" () 96 10 ()}
      {Lisp-Entry "DEBUG_PROCESS" () 98 10 ()}
      {Lisp-Entry "DEBUG_ONLY_THIS_PROCESS" () 99 10 ()}
      {Lisp-Entry "CREATE_SUSPENDED" () 100 10 ()}
      {Lisp-Entry "DETACHED_PROCESS" () 101 10 ()}
      {Lisp-Entry "CREATE_NEW_CONSOLE" () 102 10 ()}
      {Lisp-Entry "NORMAL_PRIORITY_CLASS" () 103 10 ()}
      {Lisp-Entry "IDLE_PRIORITY_CLASS" () 104 10 ()}
      {Lisp-Entry "HIGH_PRIORITY_CLASS" () 105 10 ()}
      {Lisp-Entry "REALTIME_PRIORITY_CLASS" () 106 10 ()}
      {Lisp-Entry "CREATE_NEW_PROCESS_GROUP" () 107 10 ()}
      {Lisp-Entry "CREATE_UNICODE_ENVIRONMENT" () 108 10 ()}
      {Lisp-Entry "CREATE_SEPARATE_WOW_VDM" () 109 10 ()}
      {Lisp-Entry "CREATE_SHARED_WOW_VDM" () 110 10 ()}
      {Lisp-Entry "CREATE_FORCEDOS" () 111 10 ()}
      {Lisp-Entry "CREATE_DEFAULT_ERROR_MODE" () 112 10 ()}
      {Lisp-Entry "CREATE_NO_WINDOW" () 113 10 ()}
      {Lisp-Entry "MAX_COMPUTERNAME_LENGTH" () 115 10 ()}
      {Lisp-Entry "GetFileExInfoStandard" () 117 10 ("0")}
      {Lisp-Entry "GetFileExMaxInfoLevel" () 118 10 ("1")}
      {Lisp-Entry "STD_INPUT_HANDLE" () 120 10 ()}
      {Lisp-Entry "STD_OUTPUT_HANDLE" () 121 10 ()}
      {Lisp-Entry "STD_ERROR_HANDLE" () 122 10 ()}
      {Lisp-Entry "STATUS_WAIT_0" () 124 10 ()}
      {Lisp-Entry "STATUS_ABANDONED_WAIT_0" () 125 10 ()}
      {Lisp-Entry "STATUS_TIMEOUT" () 126 10 ()}
      {Lisp-Entry "WAIT_FAILED" () 128 10 ()}
      {Lisp-Entry "WAIT_OBJECT_0" () 129 10 ("0" "STATUS_WAIT_0" "+")}
      {Lisp-Entry "WAIT_ABANDONED" () 130 10 ("0" "STATUS_ABANDONED_WAIT_0" "+")}
      {Lisp-Entry "WAIT_TIMEOUT" () 131 10 ("STATUS_TIMEOUT")}
      {Lisp-Entry "LOCALE_SYSTEM_DEFAULT" () 133 10 ()}
      {Lisp-Entry "LOCALE_USER_DEFAULT" () 134 10 ()}
      {Lisp-Entry "CLOCKS_PER_SEC" () 142 10 ()}
      {Lisp-Entry "clock_t" () 145 8 ("LONG")}
      {Lisp-Entry "system-clock" () 148 21 ()}
      {Lisp-Entry "system-clocks/second" () 151 20 ("CLOCKS_PER_SEC")}
      {Lisp-Entry "REGCLS" () 159 13 ("8" "REGCLS_SURROGATE" "4" "REGCLS_SUSPENDED" "2" "REGCLS_MULTI_SEPARATE" "1" "REGCLS_MULTIPLEUSE" "0" "REGCLS_SINGLEUSE")}
      {Lisp-Entry "OSVERSIONINFO" () 172 14 ()}
      {Lisp-Entry "OSVERSIONINFOEX" () 173 14 ("wServicePackMinor" "wServicePackMajor" "WORD" "szCSDVersion" "WCHAR" "dwPlatformId" "dwBuildNumber" "dwMinorVersion" "dwMajorVersion" "dwOSVersionInfoSize" "DWORD")}
      {Lisp-Entry "sizeof-OSVERSIONINFOEX" () 184 12 ("INT" "c-function")}
      {Lisp-Entry "STARTUPINFO" () 187 13 ("hStdError" "hStdOutput" "hStdInput" "HANDLE" "wShowWindow" "WORD" "dwFlags" "dwFillAttribute" "dwYCountChars" "dwXCountChars" "dwYSize" "dwXSize" "dwY" "dwX" "lpTitle" "lpDesktop" "CWSTR" "cb" "DWORD")}
      {Lisp-Entry "PROCESS_INFORMATION" () 205 13 ("dwThreadId" "dwProcessId" "DWORD" "hThread" "hProcess" "HANDLE")}
      {Lisp-Entry "SECURITY_ATTRIBUTES" () 212 13 ("bInheritHandle" "BOOL" "lpSecurityDescriptor" "VOID*" "nLength" "DWORD")}
      {Lisp-Entry "FILETIME" () 218 13 ("dwHighDateTime" "dwLowDateTime" "DWORD")}
      {Lisp-Entry "SYSTEMTIME" () 223 13 ("wMilliseconds" "wSecond" "wMinute" "wHour" "wDay" "wDayOfWeek" "wMonth" "wYear" "WORD")}
      {Lisp-Entry "WIN32_FILE_ATTRIBUTE_DATA" () 234 13 ("nFileSizeLow" "nFileSizeHigh" "ftLastWriteTime" "ftLastAccessTime" "embed" "ftCreationTime" "FILETIME" "dwFileAttributes" "DWORD")}
      {Lisp-Entry "WIN32_FIND_DATA" () 243 13 ("cAlternateFileName" "MAX_PATH" "cFileName" "WCHAR" "nFileSizeLow" "nFileSizeHigh" "ftLastWriteTime" "ftLastAccessTime" "embed" "ftCreationTime" "FILETIME" "dwFileAttributes" "DWORD")}
      {Lisp-Entry "OVERLAPPED" () 254 13 ("hEvent" "HANDLE" "OffsetHigh" "Offset" "InternalHigh" "Internal" "DWORD")}
      {Lisp-Entry "LPOVERLAPPED" () 261 8 ("OVERLAPPED*")}
      {Lisp-Entry "GetFileAttributes" () 263 19 ()}}})
"WinCtrl"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinCtrl.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.windows.WinCtrl" () 37 9 ("jazz")
      {Lisp-Entry "TME_HOVER" () 45 12 ()}
      {Lisp-Entry "TME_LEAVE" () 46 12 ()}
      {Lisp-Entry "TME_QUERY" () 47 12 ()}
      {Lisp-Entry "TME_CANCEL" () 48 12 ()}
      {Lisp-Entry "HOVER_DEFAULT" () 50 12 ()}
      {Lisp-Entry "CLR_NONE" () 52 12 ()}
      {Lisp-Entry "CLR_DEFAULT" () 53 12 ()}
      {Lisp-Entry "ILC_MASK" () 55 12 ()}
      {Lisp-Entry "ILC_COLOR" () 56 12 ()}
      {Lisp-Entry "ILC_COLORDDB" () 57 12 ()}
      {Lisp-Entry "ILC_COLOR4" () 58 12 ()}
      {Lisp-Entry "ILC_COLOR8" () 59 12 ()}
      {Lisp-Entry "ILC_COLOR16" () 60 12 ()}
      {Lisp-Entry "ILC_COLOR24" () 61 12 ()}
      {Lisp-Entry "ILC_COLOR32" () 62 12 ()}
      {Lisp-Entry "ILD_NORMAL" () 64 12 ()}
      {Lisp-Entry "ILD_TRANSPARENT" () 65 12 ()}
      {Lisp-Entry "ILD_MASK" () 66 12 ()}
      {Lisp-Entry "ILD_IMAGE" () 67 12 ()}
      {Lisp-Entry "ILD_ROP" () 68 12 ()}
      {Lisp-Entry "ILD_BLEND25" () 69 12 ()}
      {Lisp-Entry "ILD_BLEND50" () 70 12 ()}
      {Lisp-Entry "ILD_OVERLAYMASK" () 71 12 ()}
      {Lisp-Entry "ILD_SELECTED" () 72 12 ("ILD_BLEND50")}
      {Lisp-Entry "ILD_FOCUS" () 73 12 ("ILD_BLEND25")}
      {Lisp-Entry "ILD_BLEND" () 74 12 ("ILD_BLEND50")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinCtrl.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinCtrl" () 37 9 ("jazz")}})
"WinDDE"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinDDE.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinDDE" () 37 9 ("jazz")}})
"WinDef"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinDef.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.windows.WinDef" () 37 9 ("jazz")
      {Lisp-Entry "NULL" () 49 10 ()}
      {Lisp-Entry "FALSE" () 50 10 ("0")}
      {Lisp-Entry "TRUE" () 51 10 ("1")}
      {Lisp-Entry "MAX_PATH" () 52 10 ()}
      {Lisp-Entry "EXIT_SUCCESS" () 55 10 ("0")}
      {Lisp-Entry "EXIT_FAILURE" () 56 10 ("1")}
      {Lisp-Entry "POINT" () 64 13 ("y" "x" "INT")}
      {Lisp-Entry "LPPOINT" () 69 8 ("POINT*")}
      {Lisp-Entry "POINTS" () 72 13 ("y" "x" "SHORT")}
      {Lisp-Entry "SIZE" () 77 13 ("cy" "cx" "LONG")}
      {Lisp-Entry "SIZEL" () 82 8 ("SIZE")}
      {Lisp-Entry "SIZEL*" () 83 8 ("SIZEL" "pointer")}
      {Lisp-Entry "RECT" () 86 13 ("bottom" "right" "top" "left" "INT")}
      {Lisp-Entry "LPRECT" () 93 8 ("RECT*")}
      {Lisp-Entry "LPCRECT" () 94 8 ("RECT*")}
      {Lisp-Entry "RECT->POINTS" () 97 12 ("LPPOINT" "LPRECT" "c-function")}
      {Lisp-Entry "RECTL" () 100 13 ("bottom" "top" "right" "left" "LONG")}
      {Lisp-Entry "COLORREF" () 107 8 ("DWORD")}}})
"WinDlg"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinDlg.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinDlg" () 37 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinDlg.fusion"} {Time 128360604040000000L}
    {Lisp-Entry "jazz.platform.windows.WinDlg" () 37 9 ("OPENFILENAME*" "jazz")
      {Lisp-Entry "OFN_READONLY" () 51 10 ()}
      {Lisp-Entry "OFN_OVERWRITEPROMPT" () 52 10 ()}
      {Lisp-Entry "OFN_HIDEREADONLY" () 53 10 ()}
      {Lisp-Entry "OFN_NOCHANGEDIR" () 54 10 ()}
      {Lisp-Entry "OFN_SHOWHELP" () 55 10 ()}
      {Lisp-Entry "OFN_ENABLEHOOK" () 56 10 ()}
      {Lisp-Entry "OFN_ENABLETEMPLATE" () 57 10 ()}
      {Lisp-Entry "OFN_ENABLETEMPLATEHANDLE" () 58 10 ()}
      {Lisp-Entry "OFN_NOVALIDATE" () 59 10 ()}
      {Lisp-Entry "OFN_ALLOWMULTISELECT" () 60 10 ()}
      {Lisp-Entry "OFN_EXTENSIONDIFFERENT" () 61 10 ()}
      {Lisp-Entry "OFN_PATHMUSTEXIST" () 62 10 ()}
      {Lisp-Entry "OFN_FILEMUSTEXIST" () 63 10 ()}
      {Lisp-Entry "OFN_CREATEPROMPT" () 64 10 ()}
      {Lisp-Entry "OFN_SHAREAWARE" () 65 10 ()}
      {Lisp-Entry "OFN_NOREADONLYRETURN" () 66 10 ()}
      {Lisp-Entry "OFN_NOTESTFILECREATE" () 67 10 ()}
      {Lisp-Entry "OFN_NONETWORKBUTTON" () 68 10 ()}
      {Lisp-Entry "OFN_NOLONGNAMES" () 69 10 ()}
      {Lisp-Entry "OFN_EXPLORER" () 70 10 ()}
      {Lisp-Entry "OFN_NODEREFERENCELINKS" () 71 10 ()}
      {Lisp-Entry "OFN_LONGNAMES" () 72 10 ()}
      {Lisp-Entry "OFN_ENABLEINCLUDENOTIFY" () 73 10 ()}
      {Lisp-Entry "OFN_ENABLESIZING" () 74 10 ()}
      {Lisp-Entry "PD_ALLPAGES" () 76 10 ()}
      {Lisp-Entry "PD_SELECTION" () 77 10 ()}
      {Lisp-Entry "PD_PAGENUMS" () 78 10 ()}
      {Lisp-Entry "PD_NOSELECTION" () 79 10 ()}
      {Lisp-Entry "PD_NOPAGENUMS" () 80 10 ()}
      {Lisp-Entry "PD_COLLATE" () 81 10 ()}
      {Lisp-Entry "PD_PRINTTOFILE" () 82 10 ()}
      {Lisp-Entry "PD_PRINTSETUP" () 83 10 ()}
      {Lisp-Entry "PD_NOWARNING" () 84 10 ()}
      {Lisp-Entry "PD_RETURNDC" () 85 10 ()}
      {Lisp-Entry "PD_RETURNIC" () 86 10 ()}
      {Lisp-Entry "PD_RETURNDEFAULT" () 87 10 ()}
      {Lisp-Entry "PD_SHOWHELP" () 88 10 ()}
      {Lisp-Entry "PD_ENABLEPRINTHOOK" () 89 10 ()}
      {Lisp-Entry "PD_ENABLESETUPHOOK" () 90 10 ()}
      {Lisp-Entry "PD_ENABLEPRINTTEMPLATE" () 91 10 ()}
      {Lisp-Entry "PD_ENABLESETUPTEMPLATE" () 92 10 ()}
      {Lisp-Entry "PD_ENABLEPRINTTEMPLATEHANDLE" () 93 10 ()}
      {Lisp-Entry "PD_ENABLESETUPTEMPLATEHANDLE" () 94 10 ()}
      {Lisp-Entry "PD_USEDEVMODECOPIES" () 95 10 ()}
      {Lisp-Entry "PD_USEDEVMODECOPIESANDCOLLATE" () 96 10 ()}
      {Lisp-Entry "PD_DISABLEPRINTTOFILE" () 97 10 ()}
      {Lisp-Entry "PD_HIDEPRINTTOFILE" () 98 10 ()}
      {Lisp-Entry "PD_NONETWORKBUTTON" () 99 10 ()}
      {Lisp-Entry "PSD_MINMARGINS" () 101 10 ()}
      {Lisp-Entry "PSD_MARGINS" () 102 10 ()}
      {Lisp-Entry "PSD_INTHOUSANDTHSOFINCHES" () 103 10 ()}
      {Lisp-Entry "PSD_INHUNDREDTHSOFMILLIMETERS" () 104 10 ()}
      {Lisp-Entry "PSD_DISABLEMARGINS" () 105 10 ()}
      {Lisp-Entry "PSD_DISABLEPRINTER" () 106 10 ()}
      {Lisp-Entry "PSD_NOWARNING" () 107 10 ()}
      {Lisp-Entry "PSD_DISABLEORIENTATION" () 108 10 ()}
      {Lisp-Entry "PSD_RETURNDEFAULT" () 109 10 ()}
      {Lisp-Entry "PSD_DISABLEPAPER" () 110 10 ()}
      {Lisp-Entry "PSD_SHOWHELP" () 111 10 ()}
      {Lisp-Entry "PSD_ENABLEPAGESETUPHOOK" () 112 10 ()}
      {Lisp-Entry "PSD_ENABLEPAGESETUPTEMPLATE" () 113 10 ()}
      {Lisp-Entry "PSD_ENABLEPAGESETUPTEMPLATEHANDLE" () 114 10 ()}
      {Lisp-Entry "PSD_ENABLEPAGEPAINTHOOK" () 115 10 ()}
      {Lisp-Entry "PSD_DISABLEPAGEPAINTING" () 116 10 ()}
      {Lisp-Entry "PSD_NONETWORKBUTTON" () 117 10 ()}
      {Lisp-Entry "CC_RGBINIT" () 119 10 ()}
      {Lisp-Entry "CC_FULLOPEN" () 120 10 ()}
      {Lisp-Entry "CC_PREVENTFULLOPEN" () 121 10 ()}
      {Lisp-Entry "CC_SHOWHELP" () 122 10 ()}
      {Lisp-Entry "CC_ENABLEHOOK" () 123 10 ()}
      {Lisp-Entry "CC_ENABLETEMPLATE" () 124 10 ()}
      {Lisp-Entry "CC_ENABLETEMPLATEHANDLE" () 125 10 ()}
      {Lisp-Entry "CC_SOLIDCOLOR" () 126 10 ()}
      {Lisp-Entry "CC_ANYCOLOR" () 127 10 ()}
      {Lisp-Entry "CF_SCREENFONTS" () 129 10 ()}
      {Lisp-Entry "CF_PRINTERFONTS" () 130 10 ()}
      {Lisp-Entry "CF_BOTH" () 131 10 ("CF_PRINTERFONTS" "CF_SCREENFONTS" "bit-or")}
      {Lisp-Entry "CF_SHOWHELP" () 132 10 ()}
      {Lisp-Entry "CF_ENABLEHOOK" () 133 10 ()}
      {Lisp-Entry "CF_ENABLETEMPLATE" () 134 10 ()}
      {Lisp-Entry "CF_ENABLETEMPLATEHANDLE" () 135 10 ()}
      {Lisp-Entry "CF_INITTOLOGFONTSTRUCT" () 136 10 ()}
      {Lisp-Entry "CF_USESTYLE" () 137 10 ()}
      {Lisp-Entry "CF_EFFECTS" () 138 10 ()}
      {Lisp-Entry "CF_APPLY" () 139 10 ()}
      {Lisp-Entry "CF_ANSIONLY" () 140 10 ()}
      {Lisp-Entry "CF_SCRIPTSONLY" () 141 10 ("CF_ANSIONLY")}
      {Lisp-Entry "CF_NOVECTORFONTS" () 142 10 ()}
      {Lisp-Entry "CF_NOOEMFONTS" () 143 10 ("CF_NOVECTORFONTS")}
      {Lisp-Entry "CF_NOSIMULATIONS" () 144 10 ()}
      {Lisp-Entry "CF_LIMITSIZE" () 145 10 ()}
      {Lisp-Entry "CF_FIXEDPITCHONLY" () 146 10 ()}
      {Lisp-Entry "CF_WYSIWYG" () 147 10 ()}
      {Lisp-Entry "CF_FORCEFONTEXIST" () 148 10 ()}
      {Lisp-Entry "CF_SCALABLEONLY" () 149 10 ()}
      {Lisp-Entry "CF_TTONLY" () 150 10 ()}
      {Lisp-Entry "CF_NOFACESEL" () 151 10 ()}
      {Lisp-Entry "CF_NOSTYLESEL" () 152 10 ()}
      {Lisp-Entry "CF_NOSIZESEL" () 153 10 ()}
      {Lisp-Entry "CF_SELECTSCRIPT" () 154 10 ()}
      {Lisp-Entry "CF_NOSCRIPTSEL" () 155 10 ()}
      {Lisp-Entry "CF_NOVERTFONTS" () 156 10 ()}
      {Lisp-Entry "OPENFILENAME" () 164 14 ("lpTemplateName" "lpfnHook" "VOID*" "lCustData" "LPARAM" "lpstrDefExt" "nFileExtension" "nFileOffset" "WORD" "Flags" "lpstrTitle" "lpstrInitialDir" "nMaxFileTitle" "lpstrFileTitle" "nMaxFile" "WCHAR*" "lpstrFile" "nFilterIndex" "nMaxCustFilter" "lpstrCustomFilter" "LPWSTR" "lpstrFilter" "LPCWSTR" "hInstance" "HINSTANCE" "hwndOwner" "HWND" "lStructSize" "DWORD")}
      {Lisp-Entry "CommDlgExtendedError" () 268 21 ()}
      {Lisp-Entry "GetOpenFileName" () 269 21 ()}
      {Lisp-Entry "GetSaveFileName" () 270 21 ()}}})
"WinEnv"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinEnv.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinEnv" () 37 9 ("jazz")}})
"WinError"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinError.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinError" () 37 9 ("jazz")}})
"WinGDI"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinGDI.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.windows.WinGDI" () 37 9 ("PVOID" "LOGFONTW*" "LPRECT" "HRGN" "LPCRECT" "HGDIOBJ" "DWORD" "LPCWSTR" "POINT*" "INT" "HDC" "jazz")
      {Lisp-Entry "ANSI_CHARSET" () 51 10 ("0")}
      {Lisp-Entry "DEFAULT_CHARSET" () 52 10 ("1")}
      {Lisp-Entry "SYMBOL_CHARSET" () 53 10 ("2")}
      {Lisp-Entry "TRANSPARENT" () 55 10 ("1")}
      {Lisp-Entry "OPAQUE" () 56 10 ("2")}
      {Lisp-Entry "RGN_AND" () 58 10 ("1")}
      {Lisp-Entry "RGN_OR" () 59 10 ("2")}
      {Lisp-Entry "RGN_XOR" () 60 10 ("3")}
      {Lisp-Entry "RGN_DIFF" () 61 10 ("4")}
      {Lisp-Entry "RGN_COPY" () 62 10 ("5")}
      {Lisp-Entry "RGN_MIN" () 63 10 ("RGN_AND")}
      {Lisp-Entry "RGN_MAX" () 64 10 ("RGN_COPY")}
      {Lisp-Entry "OUT_DEFAULT_PRECIS" () 66 10 ("0")}
      {Lisp-Entry "OUT_STRING_PRECIS" () 67 10 ("1")}
      {Lisp-Entry "OUT_CHARACTER_PRECIS" () 68 10 ("2")}
      {Lisp-Entry "OUT_STROKE_PRECIS" () 69 10 ("3")}
      {Lisp-Entry "OUT_TT_PRECIS" () 70 10 ("4")}
      {Lisp-Entry "OUT_DEVICE_PRECIS" () 71 10 ("5")}
      {Lisp-Entry "OUT_RASTER_PRECIS" () 72 10 ("6")}
      {Lisp-Entry "OUT_TT_ONLY_PRECIS" () 73 10 ("7")}
      {Lisp-Entry "OUT_OUTLINE_PRECIS" () 74 10 ("8")}
      {Lisp-Entry "OUT_SCREEN_OUTLINE_PRECIS" () 75 10 ("9")}
      {Lisp-Entry "CLIP_DEFAULT_PRECIS" () 77 10 ("0")}
      {Lisp-Entry "CLIP_CHARACTER_PRECIS" () 78 10 ("1")}
      {Lisp-Entry "CLIP_STROKE_PRECIS" () 79 10 ("2")}
      {Lisp-Entry "DEFAULT_QUALITY" () 81 10 ("0")}
      {Lisp-Entry "DRAFT_QUALITY" () 82 10 ("1")}
      {Lisp-Entry "PROOF_QUALITY" () 83 10 ("2")}
      {Lisp-Entry "NONANTIALIASED_QUALITY" () 84 10 ("3")}
      {Lisp-Entry "ANTIALIASED_QUALITY" () 85 10 ("4")}
      {Lisp-Entry "DEFAULT_PITCH" () 87 10 ("0")}
      {Lisp-Entry "FIXED_PITCH" () 88 10 ("1")}
      {Lisp-Entry "VARIABLE_PITCH" () 89 10 ("2")}
      {Lisp-Entry "MONO_FONT" () 90 10 ("8")}
      {Lisp-Entry "GM_COMPATIBLE" () 92 10 ("1")}
      {Lisp-Entry "GM_ADVANCED" () 93 10 ("2")}
      {Lisp-Entry "MM_TEXT" () 95 10 ("1")}
      {Lisp-Entry "MM_LOMETRIC" () 96 10 ("2")}
      {Lisp-Entry "MM_HIMETRIC" () 97 10 ("3")}
      {Lisp-Entry "MM_LOENGLISH" () 98 10 ("4")}
      {Lisp-Entry "MM_HIENGLISH" () 99 10 ("5")}
      {Lisp-Entry "MM_TWIPS" () 100 10 ("6")}
      {Lisp-Entry "MM_ISOTROPIC" () 101 10 ("7")}
      {Lisp-Entry "MM_ANISOTROPIC" () 102 10 ("8")}
      {Lisp-Entry "BS_SOLID" () 104 10 ("0")}
      {Lisp-Entry "BS_NULL" () 105 10 ("1")}
      {Lisp-Entry "BS_HOLLOW" () 106 10 ("BS_NULL")}
      {Lisp-Entry "BS_HATCHED" () 107 10 ("2")}
      {Lisp-Entry "BS_PATTERN" () 108 10 ("3")}
      {Lisp-Entry "BS_INDEXED" () 109 10 ("4")}
      {Lisp-Entry "BS_DIBPATTERN" () 110 10 ("5")}
      {Lisp-Entry "BS_DIBPATTERNPT" () 111 10 ("6")}
      {Lisp-Entry "BS_PATTERN8X8" () 112 10 ("7")}
      {Lisp-Entry "BS_DIBPATTERN8X8" () 113 10 ("8")}
      {Lisp-Entry "BS_MONOPATTERN" () 114 10 ("9")}
      {Lisp-Entry "HS_HORIZONTAL" () 116 10 ("0")}
      {Lisp-Entry "HS_VERTICAL" () 117 10 ("1")}
      {Lisp-Entry "HS_FDIAGONAL" () 118 10 ("2")}
      {Lisp-Entry "HS_BDIAGONAL" () 119 10 ("3")}
      {Lisp-Entry "HS_CROSS" () 120 10 ("4")}
      {Lisp-Entry "HS_DIAGCROSS" () 121 10 ("5")}
      {Lisp-Entry "PS_SOLID" () 123 10 ("0")}
      {Lisp-Entry "PS_DASH" () 124 10 ("1")}
      {Lisp-Entry "PS_DOT" () 125 10 ("2")}
      {Lisp-Entry "PS_DASHDOT" () 126 10 ("3")}
      {Lisp-Entry "PS_DASHDOTDOT" () 127 10 ("4")}
      {Lisp-Entry "PS_NULL" () 128 10 ("5")}
      {Lisp-Entry "PS_INSIDEFRAME" () 129 10 ("6")}
      {Lisp-Entry "PS_USERSTYLE" () 130 10 ("7")}
      {Lisp-Entry "PS_ALTERNATE" () 131 10 ("8")}
      {Lisp-Entry "PS_COSMETIC" () 133 10 ()}
      {Lisp-Entry "PS_GEOMETRIC" () 134 10 ()}
      {Lisp-Entry "WHITE_BRUSH" () 136 10 ("0")}
      {Lisp-Entry "LTGRAY_BRUSH" () 137 10 ("1")}
      {Lisp-Entry "GRAY_BRUSH" () 138 10 ("2")}
      {Lisp-Entry "DKGRAY_BRUSH" () 139 10 ("3")}
      {Lisp-Entry "BLACK_BRUSH" () 140 10 ("4")}
      {Lisp-Entry "NULL_BRUSH" () 141 10 ("5")}
      {Lisp-Entry "HOLLOW_BRUSH" () 142 10 ("NULL_BRUSH")}
      {Lisp-Entry "WHITE_PEN" () 143 10 ("6")}
      {Lisp-Entry "BLACK_PEN" () 144 10 ("7")}
      {Lisp-Entry "NULL_PEN" () 145 10 ("8")}
      {Lisp-Entry "OEM_FIXED_FONT" () 146 10 ()}
      {Lisp-Entry "ANSI_FIXED_FONT" () 147 10 ()}
      {Lisp-Entry "ANSI_VAR_FONT" () 148 10 ()}
      {Lisp-Entry "SYSTEM_FONT" () 149 10 ()}
      {Lisp-Entry "DEVICE_DEFAULT_FONT" () 150 10 ()}
      {Lisp-Entry "DEFAULT_PALETTE" () 151 10 ()}
      {Lisp-Entry "SYSTEM_FIXED_FONT" () 152 10 ()}
      {Lisp-Entry "DEFAULT_GUI_FONT" () 153 10 ()}
      {Lisp-Entry "FW_DONTCARE" () 155 10 ("0")}
      {Lisp-Entry "FW_THIN" () 156 10 ()}
      {Lisp-Entry "FW_EXTRALIGHT" () 157 10 ()}
      {Lisp-Entry "FW_LIGHT" () 158 10 ()}
      {Lisp-Entry "FW_NORMAL" () 159 10 ()}
      {Lisp-Entry "FW_MEDIUM" () 160 10 ()}
      {Lisp-Entry "FW_SEMIBOLD" () 161 10 ()}
      {Lisp-Entry "FW_BOLD" () 162 10 ()}
      {Lisp-Entry "FW_EXTRABOLD" () 163 10 ()}
      {Lisp-Entry "FW_HEAVY" () 164 10 ()}
      {Lisp-Entry "FW_ULTRALIGHT" () 165 10 ("FW_EXTRALIGHT")}
      {Lisp-Entry "FW_REGULAR" () 166 10 ("FW_NORMAL")}
      {Lisp-Entry "FW_DEMIBOLD" () 167 10 ("FW_SEMIBOLD")}
      {Lisp-Entry "FW_ULTRABOLD" () 168 10 ("FW_EXTRABOLD")}
      {Lisp-Entry "FW_BLACK" () 169 10 ("FW_HEAVY")}
      {Lisp-Entry "SRCCOPY" () 171 10 ()}
      {Lisp-Entry "SRCPAINT" () 172 10 ()}
      {Lisp-Entry "SRCAND" () 173 10 ()}
      {Lisp-Entry "SRCINVERT" () 174 10 ()}
      {Lisp-Entry "SRCERASE" () 175 10 ()}
      {Lisp-Entry "NOTSRCCOPY" () 176 10 ()}
      {Lisp-Entry "NOTSRCERASE" () 177 10 ()}
      {Lisp-Entry "MERGECOPY" () 178 10 ()}
      {Lisp-Entry "MERGEPAINT" () 179 10 ()}
      {Lisp-Entry "PATCOPY" () 180 10 ()}
      {Lisp-Entry "PATPAINT" () 181 10 ()}
      {Lisp-Entry "PATINVERT" () 182 10 ()}
      {Lisp-Entry "DSTINVERT" () 183 10 ()}
      {Lisp-Entry "BLACKNESS" () 184 10 ()}
      {Lisp-Entry "WHITENESS" () 185 10 ()}
      {Lisp-Entry "OBJ_PEN" () 187 10 ("1")}
      {Lisp-Entry "OBJ_BRUSH" () 188 10 ("2")}
      {Lisp-Entry "OBJ_DC" () 189 10 ("3")}
      {Lisp-Entry "OBJ_METADC" () 190 10 ("4")}
      {Lisp-Entry "OBJ_PAL" () 191 10 ("5")}
      {Lisp-Entry "OBJ_FONT" () 192 10 ("6")}
      {Lisp-Entry "OBJ_BITMAP" () 193 10 ("7")}
      {Lisp-Entry "OBJ_REGION" () 194 10 ("8")}
      {Lisp-Entry "OBJ_METAFILE" () 195 10 ("9")}
      {Lisp-Entry "OBJ_MEMDC" () 196 10 ()}
      {Lisp-Entry "OBJ_EXTPEN" () 197 10 ()}
      {Lisp-Entry "OBJ_ENHMETADC" () 198 10 ()}
      {Lisp-Entry "OBJ_ENHMETAFILE" () 199 10 ()}
      {Lisp-Entry "R2_BLACK" () 201 10 ("1")}
      {Lisp-Entry "R2_NOTMERGEPEN" () 202 10 ("2")}
      {Lisp-Entry "R2_MASKNOTPEN" () 203 10 ("3")}
      {Lisp-Entry "R2_NOTCOPYPEN" () 204 10 ("4")}
      {Lisp-Entry "R2_MASKPENNOT" () 205 10 ("5")}
      {Lisp-Entry "R2_NOT" () 206 10 ("6")}
      {Lisp-Entry "R2_XORPEN" () 207 10 ("7")}
      {Lisp-Entry "R2_NOTMASKPEN" () 208 10 ("8")}
      {Lisp-Entry "R2_MASKPEN" () 209 10 ("9")}
      {Lisp-Entry "R2_NOTXORPEN" () 210 10 ()}
      {Lisp-Entry "R2_NOP" () 211 10 ()}
      {Lisp-Entry "R2_MERGENOTPEN" () 212 10 ()}
      {Lisp-Entry "R2_COPYPEN" () 213 10 ()}
      {Lisp-Entry "R2_MERGEPENNOT" () 214 10 ()}
      {Lisp-Entry "R2_MERGEPEN" () 215 10 ()}
      {Lisp-Entry "R2_WHITE" () 216 10 ()}
      {Lisp-Entry "R2_LAST" () 217 10 ()}
      {Lisp-Entry "ETO_OPAQUE" () 219 10 ()}
      {Lisp-Entry "ETO_CLIPPED" () 220 10 ()}
      {Lisp-Entry "ETO_GLYPH_INDEX" () 221 10 ()}
      {Lisp-Entry "ETO_RTLREADING" () 222 10 ()}
      {Lisp-Entry "ETO_NUMERICSLOCAL" () 223 10 ()}
      {Lisp-Entry "ETO_NUMERICSLATIN" () 224 10 ()}
      {Lisp-Entry "ETO_IGNORELANGUAGE" () 225 10 ()}
      {Lisp-Entry "DRIVERVERSION" () 227 10 ("0")}
      {Lisp-Entry "TECHNOLOGY" () 228 10 ("2")}
      {Lisp-Entry "HORZSIZE" () 229 10 ("4")}
      {Lisp-Entry "VERTSIZE" () 230 10 ("6")}
      {Lisp-Entry "HORZRES" () 231 10 ("8")}
      {Lisp-Entry "VERTRES" () 232 10 ()}
      {Lisp-Entry "BITSPIXEL" () 233 10 ()}
      {Lisp-Entry "PLANES" () 234 10 ()}
      {Lisp-Entry "NUMBRUSHES" () 235 10 ()}
      {Lisp-Entry "NUMPENS" () 236 10 ()}
      {Lisp-Entry "NUMMARKERS" () 237 10 ()}
      {Lisp-Entry "NUMFONTS" () 238 10 ()}
      {Lisp-Entry "NUMCOLORS" () 239 10 ()}
      {Lisp-Entry "PDEVICESIZE" () 240 10 ()}
      {Lisp-Entry "CURVECAPS" () 241 10 ()}
      {Lisp-Entry "LINECAPS" () 242 10 ()}
      {Lisp-Entry "POLYGONALCAPS" () 243 10 ()}
      {Lisp-Entry "TEXTCAPS" () 244 10 ()}
      {Lisp-Entry "CLIPCAPS" () 245 10 ()}
      {Lisp-Entry "RASTERCAPS" () 246 10 ()}
      {Lisp-Entry "ASPECTX" () 247 10 ()}
      {Lisp-Entry "ASPECTY" () 248 10 ()}
      {Lisp-Entry "ASPECTXY" () 249 10 ()}
      {Lisp-Entry "SHADEBLENDCAPS" () 250 10 ()}
      {Lisp-Entry "LOGPIXELSX" () 251 10 ()}
      {Lisp-Entry "LOGPIXELSY" () 252 10 ()}
      {Lisp-Entry "SIZEPALETTE" () 253 10 ()}
      {Lisp-Entry "NUMRESERVED" () 254 10 ()}
      {Lisp-Entry "COLORRES" () 255 10 ()}
      {Lisp-Entry "PHYSICALWIDTH" () 256 10 ()}
      {Lisp-Entry "PHYSICALHEIGHT" () 257 10 ()}
      {Lisp-Entry "PHYSICALOFFSETX" () 258 10 ()}
      {Lisp-Entry "PHYSICALOFFSETY" () 259 10 ()}
      {Lisp-Entry "SCALINGFACTORX" () 260 10 ()}
      {Lisp-Entry "SCALINGFACTORY" () 261 10 ()}
      {Lisp-Entry "VREFRESH" () 262 10 ()}
      {Lisp-Entry "DESKTOPVERTRES" () 263 10 ()}
      {Lisp-Entry "DESKTOPHORZRES" () 264 10 ()}
      {Lisp-Entry "BLTALIGNMENT" () 265 10 ()}
      {Lisp-Entry "LF_FACESIZE" () 268 10 ()}
      {Lisp-Entry "DM_ORIENTATION" () 271 10 ()}
      {Lisp-Entry "DM_PAPERSIZE" () 272 10 ()}
      {Lisp-Entry "DM_PAPERLENGTH" () 273 10 ()}
      {Lisp-Entry "DM_PAPERWIDTH" () 274 10 ()}
      {Lisp-Entry "DM_SCALE" () 275 10 ()}
      {Lisp-Entry "DM_POSITION" () 276 10 ()}
      {Lisp-Entry "DM_COPIES" () 277 10 ()}
      {Lisp-Entry "DM_DEFAULTSOURCE" () 278 10 ()}
      {Lisp-Entry "DM_PRINTQUALITY" () 279 10 ()}
      {Lisp-Entry "DM_COLOR" () 280 10 ()}
      {Lisp-Entry "DM_DUPLEX" () 281 10 ()}
      {Lisp-Entry "DM_YRESOLUTION" () 282 10 ()}
      {Lisp-Entry "DM_TTOPTION" () 283 10 ()}
      {Lisp-Entry "DM_COLLATE" () 284 10 ()}
      {Lisp-Entry "DM_FORMNAME" () 285 10 ()}
      {Lisp-Entry "DM_LOGPIXELS" () 286 10 ()}
      {Lisp-Entry "DM_BITSPERPEL" () 287 10 ()}
      {Lisp-Entry "DM_PELSWIDTH" () 288 10 ()}
      {Lisp-Entry "DM_PELSHEIGHT" () 289 10 ()}
      {Lisp-Entry "DM_DISPLAYFLAGS" () 290 10 ()}
      {Lisp-Entry "DM_DISPLAYFREQUENCY" () 291 10 ()}
      {Lisp-Entry "DM_ICMMETHOD" () 292 10 ()}
      {Lisp-Entry "DM_ICMINTENT" () 293 10 ()}
      {Lisp-Entry "DM_MEDIATYPE" () 294 10 ()}
      {Lisp-Entry "DM_DITHERTYPE" () 295 10 ()}
      {Lisp-Entry "DM_PANNINGWIDTH" () 296 10 ()}
      {Lisp-Entry "DM_PANNINGHEIGHT" () 297 10 ()}
      {Lisp-Entry "DMORIENT_PORTRAIT" () 300 10 ("1")}
      {Lisp-Entry "DMORIENT_LANDSCAPE" () 301 10 ("2")}
      {Lisp-Entry "DMPAPER_LETTER" () 304 10 ("1")}
      {Lisp-Entry "DMPAPER_LETTERSMALL" () 305 10 ("2")}
      {Lisp-Entry "DMPAPER_TABLOID" () 306 10 ("3")}
      {Lisp-Entry "DMPAPER_LEDGER" () 307 10 ("4")}
      {Lisp-Entry "DMPAPER_LEGAL" () 308 10 ("5")}
      {Lisp-Entry "DMPAPER_STATEMENT" () 309 10 ("6")}
      {Lisp-Entry "DMPAPER_EXECUTIVE" () 310 10 ("7")}
      {Lisp-Entry "DMPAPER_A3" () 311 10 ("8")}
      {Lisp-Entry "DMPAPER_A4" () 312 10 ("9")}
      {Lisp-Entry "DMPAPER_A4SMALL" () 313 10 ()}
      {Lisp-Entry "DMPAPER_A5" () 314 10 ()}
      {Lisp-Entry "DMPAPER_B4" () 315 10 ()}
      {Lisp-Entry "DMPAPER_B5" () 316 10 ()}
      {Lisp-Entry "DMPAPER_FOLIO" () 317 10 ()}
      {Lisp-Entry "DMPAPER_QUARTO" () 318 10 ()}
      {Lisp-Entry "DMPAPER_10X14" () 319 10 ()}
      {Lisp-Entry "DMPAPER_11X17" () 320 10 ()}
      {Lisp-Entry "DMPAPER_NOTE" () 321 10 ()}
      {Lisp-Entry "DMPAPER_ENV_9" () 322 10 ()}
      {Lisp-Entry "DMPAPER_ENV_10" () 323 10 ()}
      {Lisp-Entry "DMPAPER_ENV_11" () 324 10 ()}
      {Lisp-Entry "DMPAPER_ENV_12" () 325 10 ()}
      {Lisp-Entry "DMPAPER_ENV_14" () 326 10 ()}
      {Lisp-Entry "DMPAPER_CSHEET" () 327 10 ()}
      {Lisp-Entry "DMPAPER_DSHEET" () 328 10 ()}
      {Lisp-Entry "DMPAPER_ESHEET" () 329 10 ()}
      {Lisp-Entry "DMPAPER_ENV_DL" () 330 10 ()}
      {Lisp-Entry "DMPAPER_ENV_C5" () 331 10 ()}
      {Lisp-Entry "DMPAPER_ENV_C3" () 332 10 ()}
      {Lisp-Entry "DMPAPER_ENV_C4" () 333 10 ()}
      {Lisp-Entry "DMPAPER_ENV_C6" () 334 10 ()}
      {Lisp-Entry "DMPAPER_ENV_C65" () 335 10 ()}
      {Lisp-Entry "DMPAPER_ENV_B4" () 336 10 ()}
      {Lisp-Entry "DMPAPER_ENV_B5" () 337 10 ()}
      {Lisp-Entry "DMPAPER_ENV_B6" () 338 10 ()}
      {Lisp-Entry "DMPAPER_ENV_ITALY" () 339 10 ()}
      {Lisp-Entry "DMPAPER_ENV_MONARCH" () 340 10 ()}
      {Lisp-Entry "DMPAPER_ENV_PERSONAL" () 341 10 ()}
      {Lisp-Entry "DMPAPER_FANFOLD_US" () 342 10 ()}
      {Lisp-Entry "DMPAPER_FANFOLD_STD_GERMAN" () 343 10 ()}
      {Lisp-Entry "DMPAPER_FANFOLD_LGL_GERMAN" () 344 10 ()}
      {Lisp-Entry "DMBIN_ONLYONE" () 347 10 ("1")}
      {Lisp-Entry "DMBIN_LOWER" () 348 10 ("2")}
      {Lisp-Entry "DMBIN_MIDDLE" () 349 10 ("3")}
      {Lisp-Entry "DMBIN_MANUAL" () 350 10 ("4")}
      {Lisp-Entry "DMBIN_ENVELOPE" () 351 10 ("5")}
      {Lisp-Entry "DMBIN_ENVMANUAL" () 352 10 ("6")}
      {Lisp-Entry "DMBIN_AUTO" () 353 10 ("7")}
      {Lisp-Entry "DMBIN_TRACTOR" () 354 10 ("8")}
      {Lisp-Entry "DMBIN_SMALLFMT" () 355 10 ("9")}
      {Lisp-Entry "DMBIN_LARGEFMT" () 356 10 ()}
      {Lisp-Entry "DMBIN_LARGECAPACITY" () 357 10 ()}
      {Lisp-Entry "DMBIN_CASSETTE" () 358 10 ()}
      {Lisp-Entry "DMBIN_FORMSOURCE" () 359 10 ()}
      {Lisp-Entry "GRADIENT_FILL_RECT_H" () 362 10 ()}
      {Lisp-Entry "GRADIENT_FILL_RECT_V" () 363 10 ()}
      {Lisp-Entry "GRADIENT_FILL_TRIANGLE" () 364 10 ()}
      {Lisp-Entry "GRADIENT_FILL_OP_FLAG" () 365 10 ()}
      {Lisp-Entry "AC_SRC_OVER" () 368 10 ()}
      {Lisp-Entry "AC_SRC_ALPHA" () 369 10 ()}
      {Lisp-Entry "BITMAP" () 377 13 ("bmBits" "LPVOID" "bmBitsPixel" "bmPlanes" "bmWidthBytes" "bmHeight" "bmWidth" "bmType" "INT")}
      {Lisp-Entry "size-of-BITMAP" () 387 12 ("INT" "c-function")}
      {Lisp-Entry "LOGBRUSH" () 390 13 ("lbHatch" "lbColor" "lbStyle" "INT")}
      {Lisp-Entry "LOGFONTW" () 396 13 ("LF_FACESIZE" "lfFaceName" "SHORT" "lfPitchAndFamily" "lfQuality" "lfClipPrecision" "lfOutPrecision" "lfCharSet" "lfStrikeOut" "lfUnderline" "lfItalic" "BYTE" "lfWeight" "lfOrientation" "lfEscapement" "lfWidth" "lfHeight" "LONG")}
      {Lisp-Entry "size-of-LOGFONTW" () 413 12 ("INT" "c-function")}
      {Lisp-Entry "LOGFONTW*->PVOID" () 414 12 ("PVOID" "LOGFONTW*" "c-function")}
      {Lisp-Entry "DEVMODE" () 417 13 ("dmPanningHeight" "dmPanningWidth" "dmReserved2" "dmReserved1" "dmDitherType" "dmMediaType" "dmICMIntent" "dmICMMethod" "dmDisplayFrequency" "dmDisplayFlags" "dmPelsHeight" "dmPelsWidth" "dmBitsPerPel" "dmLogPixels" "CCHFORMNAME" "dmFormName" "dmCollate" "dmTTOption" "dmYResolution" "dmDuplex" "dmColor" "dmPrintQuality" "dmDefaultSource" "dmCopies" "dmScale" "dmPaperWidth" "dmPaperLength" "dmPaperSize" "dmOrientation" "dmFields" "INT" "dmDriverExtra" "dmSize" "dmDriverVersion" "dmSpecVersion" "CCHDEVICENAME" "dmDeviceName" "SHORT")}
      {Lisp-Entry "DEVNAMES" () 454 13 ("wDefault" "wOutputOffset" "wDeviceOffset" "wDriverOffset" "SHORT")}
      {Lisp-Entry "DOCINFO" () 461 13 ("fwType" "DWORD" "lpszDatatype" "lpszOutput" "lpszDocName" "LPCWSTR" "cbSize" "INT")}
      {Lisp-Entry "TEXTMETRIC" () 469 13 ("tmCharSet" "tmPitchAndFamily" "tmStruckOut" "tmUnderlined" "tmItalic" "BYTE" "tmBreakChar" "tmDefaultChar" "tmLastChar" "tmFirstChar" "SHORT" "tmDigitizedAspectY" "tmDigitizedAspectX" "tmOverhang" "tmWeight" "tmMaxCharWidth" "tmAveCharWidth" "tmExternalLeading" "tmInternalLeading" "tmDescent" "tmAscent" "tmHeight" "INT")}
      {Lisp-Entry "TRIVERTEX" () 492 13 ("Alpha" "Blue" "Green" "Red" "SHORT" "y" "x" "INT")}
      {Lisp-Entry "GRADIENT_RECT" () 501 13 ("LowerRight" "UpperLeft" "INT")}
      {Lisp-Entry "BLENDFUNCTION" () 506 13 ("AlphaFormat" "SourceConstantAlpha" "BlendFlags" "BlendOp" "BYTE")}
      {Lisp-Entry "ENHMETAHEADER" () 513 13 ("bOpenGL" "offPixelFormat" "cbPixelFormat" "szlMillimeters" "szlDevice" "SIZEL" "nPalEntries" "offDescription" "nDescription" "sReserved" "nHandles" "WORD" "nRecords" "nBytes" "nVersion" "dSignature" "rclFrame" "embed" "rclBounds" "RECTL" "nSize" "iType" "DWORD")}
      {Lisp-Entry "XFORM" () 534 13 ("eDy" "eDx" "eM22" "eM21" "eM12" "eM11" "FLOAT")}
      {Lisp-Entry "MoveToEx" () 547 29 ()}
      {Lisp-Entry "LineTo" () 548 29 ()}
      {Lisp-Entry "TextOut" () 549 29 ()}
      {Lisp-Entry "BitBlt" () 550 29 ()}
      {Lisp-Entry "DeleteObject" () 553 29 ()}
      {Lisp-Entry "GetStockObject" () 556 29 ()}
      {Lisp-Entry "CreateRectRgn" () 561 30 ()}
      {Lisp-Entry "CreateRectRgnIndirect" () 562 30 ()}
      {Lisp-Entry "CombineRgn" () 564 29 ()}
      {Lisp-Entry "OffsetRgn" () 565 29 ()}
      {Lisp-Entry "GetRgnBox" () 566 29 ()}
      {Lisp-Entry "CreateCompatibleBitmap" () 571 29 ()}
      {Lisp-Entry "CreateFont" () 578 29 ()}
      {Lisp-Entry "CreateFontIndirect" () 579 29 ()}
      {Lisp-Entry "GetObject" () 582 29 ()}}})
"WinHelp"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinHelp.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinHelp" () 37 9 ("jazz")}})
"WinIDL"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinIDL.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinIDL" () 37 9 ("jazz")}})
"WinImg"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinImg.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinImg" () 37 9 ("jazz")}})
"WinInet"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinInet.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinInet" () 37 9 ("jazz")}})
"WinKernel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinKernel.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.windows.WinKernel" () 37 9 ("PROCESSENTRY32*" "WIN32_FIND_DATA*" "HRSRC" "WORD" "LONG&" "LPOVERLAPPED" "GET_FILEEX_INFO_LEVELS" "INT" "LCID" "SYSTEMTIME*" "FILETIME*" "UINT" "LPWSTR" "STR" "HINSTANCE" "LONG*" "LONG" "PVOID" "HANDLE*" "PDWORD" "PROCESS_INFORMATION*" "BOOL" "SECURITY_ATTRIBUTES*" "CWSTR" "PSIZE_T" "STARTUPINFO*" "WCHAR*" "VOID*" "DWORD" "HANDLE" "OSVERSIONINFO*" "jazz")
      {Lisp-Entry "TH32CS_SNAPHEAPLIST" () 54 10 ()}
      {Lisp-Entry "TH32CS_SNAPPROCESS" () 55 10 ()}
      {Lisp-Entry "TH32CS_SNAPTHREAD" () 56 10 ()}
      {Lisp-Entry "TH32CS_SNAPMODULE" () 57 10 ()}
      {Lisp-Entry "TH32CS_SNAPMODULE32" () 58 10 ()}
      {Lisp-Entry "TH32CS_SNAPALL" () 59 10 ("TH32CS_SNAPMODULE" "TH32CS_SNAPTHREAD" "TH32CS_SNAPPROCESS" "TH32CS_SNAPHEAPLIST" "bit-or")}
      {Lisp-Entry "TH32CS_INHERIT" () 60 10 ()}
      {Lisp-Entry "PROCESSENTRY32" () 68 13 ("szExeFile" "WCHAR" "dwFlags" "pcPriClassBase" "LONG" "th32ParentProcessID" "cntThreads" "th32ModuleID" "th32DefaultHeapID" "th32ProcessID" "cntUsage" "dwSize" "DWORD")}
      {Lisp-Entry "GetLastError" () 86 29 ()}
      {Lisp-Entry "GetVersionEx" () 87 29 ()}
      {Lisp-Entry "GlobalSize" () 88 29 ()}
      {Lisp-Entry "GlobalLock" () 89 29 ()}
      {Lisp-Entry "GlobalUnlock" () 90 29 ()}
      {Lisp-Entry "FormatMessage" () 91 29 ()}
      {Lisp-Entry "Sleep" () 92 29 ()}
      {Lisp-Entry "GetStartupInfo" () 93 29 ()}
      {Lisp-Entry "GetCurrentThreadId" () 94 29 ()}
      {Lisp-Entry "GetCurrentProcess" () 95 29 ()}
      {Lisp-Entry "GetCurrentProcessId" () 96 29 ()}
      {Lisp-Entry "GetProcessWorkingSetSize" () 97 29 ()}
      {Lisp-Entry "CreateProcess" () 98 29 ()}
      {Lisp-Entry "GetExitCodeProcess" () 99 29 ()}
      {Lisp-Entry "SuspendThread" () 100 29 ()}
      {Lisp-Entry "ResumeThread" () 101 29 ()}
      {Lisp-Entry "CreatePipe" () 102 29 ()}
      {Lisp-Entry "PeekNamedPipe" () 104 29 ()}
      {Lisp-Entry "CreateEvent" () 105 29 ()}
      {Lisp-Entry "CreateSemaphore" () 106 29 ()}
      {Lisp-Entry "ReleaseSemaphore" () 107 29 ()}
      {Lisp-Entry "CreateMutex" () 108 29 ()}
      {Lisp-Entry "ReleaseMutex" () 109 29 ()}
      {Lisp-Entry "WaitForSingleObject" () 110 29 ()}
      {Lisp-Entry "WaitForMultipleObjects" () 111 29 ()}
      {Lisp-Entry "SetEvent" () 112 29 ()}
      {Lisp-Entry "ResetEvent" () 113 29 ()}
      {Lisp-Entry "PulseEvent" () 114 29 ()}
      {Lisp-Entry "GetStdHandle" () 115 29 ()}
      {Lisp-Entry "AllocConsole" () 116 29 ()}
      {Lisp-Entry "FreeConsole" () 117 29 ()}
      {Lisp-Entry "SetConsoleTitle" () 118 29 ()}
      {Lisp-Entry "FlushFileBuffers" () 119 29 ()}
      {Lisp-Entry "LoadLibrary" () 120 29 ()}
      {Lisp-Entry "FreeLibrary" () 121 29 ()}
      {Lisp-Entry "GetModuleFileName" () 122 29 ()}
      {Lisp-Entry "GetModuleHandle" () 123 29 ()}
      {Lisp-Entry "GetProcAddress" () 124 29 ()}
      {Lisp-Entry "GetComputerName" () 126 29 ()}
      {Lisp-Entry "GetTempPath" () 127 29 ()}
      {Lisp-Entry "GetTempFileName" () 128 29 ()}
      {Lisp-Entry "FileTimeToSystemTime" () 129 29 ()}
      {Lisp-Entry "FileTimeToLocalFileTime" () 130 29 ()}
      {Lisp-Entry "LocalFileTimeToFileTime" () 131 29 ()}
      {Lisp-Entry "SystemTimeToFileTime" () 132 29 ()}
      {Lisp-Entry "GetDateFormat" () 133 29 ()}
      {Lisp-Entry "GetLocalTime" () 134 29 ()}
      {Lisp-Entry "GetSystemTime" () 135 29 ()}
      {Lisp-Entry "GetCurrentDirectory" () 136 29 ()}
      {Lisp-Entry "SetCurrentDirectory" () 137 29 ()}
      {Lisp-Entry "GetWindowsDirectory" () 138 29 ()}
      {Lisp-Entry "GetSystemDirectory" () 139 29 ()}
      {Lisp-Entry "CreateFile" () 140 29 ()}
      {Lisp-Entry "GetFileSize" () 142 29 ()}
      {Lisp-Entry "GetFileTime" () 143 29 ()}
      {Lisp-Entry "GetFileAttributes" () 144 29 ()}
      {Lisp-Entry "GetFileAttributesEx" () 145 29 ()}
      {Lisp-Entry "SetFileTime" () 146 29 ()}
      {Lisp-Entry "SetFileAttributes" () 147 29 ()}
      {Lisp-Entry "ReadFile" () 149 29 ()}
      {Lisp-Entry "WriteFile" () 150 29 ()}
      {Lisp-Entry "MoveFile" () 151 29 ()}
      {Lisp-Entry "CopyFile" () 152 29 ()}
      {Lisp-Entry "DeleteFile" () 153 29 ()}
      {Lisp-Entry "RemoveDirectory" () 154 29 ()}
      {Lisp-Entry "SetFilePointer" () 155 29 ()}
      {Lisp-Entry "SetEndOfFile" () 156 29 ()}
      {Lisp-Entry "CreateDirectory" () 157 29 ()}
      {Lisp-Entry "CloseHandle" () 158 29 ()}
      {Lisp-Entry "FindResource" () 159 29 ()}
      {Lisp-Entry "FindResourceEx" () 160 29 ()}
      {Lisp-Entry "SizeofResource" () 161 29 ()}
      {Lisp-Entry "LoadResource" () 162 29 ()}
      {Lisp-Entry "LockResource" () 163 29 ()}
      {Lisp-Entry "BeginUpdateResource" () 164 29 ()}
      {Lisp-Entry "UpdateResource" () 165 29 ()}
      {Lisp-Entry "EndUpdateResource" () 166 29 ()}
      {Lisp-Entry "FindFirstFile" () 167 29 ()}
      {Lisp-Entry "FindNextFile" () 168 29 ()}
      {Lisp-Entry "FindClose" () 169 29 ()}
      {Lisp-Entry "MulDiv" () 170 29 ()}
      {Lisp-Entry "CreateToolhelp32Snapshot" () 171 29 ()}
      {Lisp-Entry "Process32First" () 172 29 ()}}})
"WinMM"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinMM.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinMM" () 37 9 ("jazz")}})
"WinNLS"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinNLS.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinNLS" () 37 9 ("jazz")}})
"WinNT"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinNT.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinNT" () 37 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinNT.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.windows.WinNT" () 37 9 ("jazz")
      {Lisp-Entry "FILE_ATTRIBUTE_READONLY" () 40 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_HIDDEN" () 41 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_SYSTEM" () 42 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_DIRECTORY" () 43 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_ARCHIVE" () 44 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_ENCRYPTED" () 45 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_NORMAL" () 46 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_TEMPORARY" () 47 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_SPARSE_FILE" () 48 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_REPARSE_POINT" () 49 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_COMPRESSED" () 50 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_OFFLINE" () 51 10 ()}
      {Lisp-Entry "FILE_ATTRIBUTE_NOT_CONTENT_INDEXED" () 52 10 ()}}})
"WinOLE"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinOLE.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinOLE" () 37 9 ("jazz")}})
"WinPerf"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinPerf.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinPerf" () 37 9 ("jazz")}})
"WinShell"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinShell.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.windows.WinShell" () 37 9 ("LPWSTR" "UINT" "LPPOINT" "HDROP" "BOOL" "HWND" "jazz")
      {Lisp-Entry "HDROP" () 45 8 ("struct" "pointer")}
      {Lisp-Entry "DragAcceptFiles" () 48 29 ()}
      {Lisp-Entry "DragQueryPoint" () 49 29 ()}
      {Lisp-Entry "DragFinish" () 50 29 ()}
      {Lisp-Entry "DragQueryFile" () 51 29 ()}}})
"WinShlw"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinShlw.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinShlw" () 37 9 ("jazz")}})
"WinSock"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinSock.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinSock" () 37 9 ("jazz")}})
"WinStatus"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "WinStatus.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "WinStatus" () 37 9 ("jazz")}})
"WinTypes"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinTypes.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.windows.WinTypes" () 37 9 ("jazz")
      {Lisp-Entry "VOID" () 43 8 ("void" "native")}
      {Lisp-Entry "SHORT" () 44 8 ("short" "native")}
      {Lisp-Entry "SHORT*" () 45 8 ("SHORT*" "SHORT" "pointer")}
      {Lisp-Entry "INT" () 46 8 ("int" "native")}
      {Lisp-Entry "FLOAT" () 47 8 ("float" "native")}
      {Lisp-Entry "LONG" () 48 8 ("long" "native")}
      {Lisp-Entry "UINT" () 49 8 ("unsigned-int" "native")}
      {Lisp-Entry "ULONG" () 50 8 ("unsigned-long" "native")}
      {Lisp-Entry "ULONG*" () 51 8 ("ULONG*" "ULONG" "pointer")}
      {Lisp-Entry "ULONG_PTR" () 52 8 ("ULONG")}
      {Lisp-Entry "BOOL" () 54 8 ("bool" "native")}
      {Lisp-Entry "BYTE" () 55 8 ("unsigned-int8" "native")}
      {Lisp-Entry "BYTE*" () 56 8 ("BYTE*" "BYTE" "pointer")}
      {Lisp-Entry "WORD" () 57 8 ("unsigned-int16" "native")}
      {Lisp-Entry "WORD*" () 58 8 ("WORD*" "WORD" "pointer")}
      {Lisp-Entry "DWORD" () 59 8 ("ULONG")}
      {Lisp-Entry "DWORD*" () 60 8 ("DWORD" "pointer")}
      {Lisp-Entry "PDWORD" () 61 8 ("DWORD*")}
      {Lisp-Entry "CHAR" () 63 8 ("char" "native")}
      {Lisp-Entry "CHAR*" () 64 8 ("CHAR" "pointer")}
      {Lisp-Entry "WCHAR" () 66 8 ("wchar_t" "native")}
      {Lisp-Entry "WCHAR*" () 67 8 ("WCHAR*" "WCHAR" "pointer")}
      {Lisp-Entry "CWSTR" () 68 8 ("wchar_t-string" "native")}
      {Lisp-Entry "CWSTR*" () 69 8 ("CWSTR" "pointer")}
      {Lisp-Entry "LPWSTR" () 70 8 ("WCHAR*")}
      {Lisp-Entry "LPCWSTR" () 71 8 ("CWSTR")}
      {Lisp-Entry "STR" () 72 8 ("char-string" "native")}
      {Lisp-Entry "STR*" () 73 8 ("STR" "pointer")}
      {Lisp-Entry "TCHAR" () 74 8 ("WCHAR")}
      {Lisp-Entry "TCHAR*" () 75 8 ("TCHAR*" "TCHAR" "pointer")}
      {Lisp-Entry "LPTSTR" () 76 8 ("CWSTR")}
      {Lisp-Entry "LPCTSTR" () 77 8 ("CWSTR")}
      {Lisp-Entry "LONG*" () 79 8 ("LONG*" "LONG" "pointer")}
      {Lisp-Entry "LONG&" () 80 8 ("LONG*" "LONG" "pointer")}
      {Lisp-Entry "SIZE_T" () 81 8 ("ULONG_PTR")}
      {Lisp-Entry "SIZE_T*" () 82 8 ("SIZE_T" "pointer")}
      {Lisp-Entry "PSIZE_T" () 83 8 ("SIZE_T*")}
      {Lisp-Entry "LCID" () 84 8 ("unsigned-int32" "native")}
      {Lisp-Entry "GET_FILEEX_INFO_LEVELS" () 85 8 ("unsigned-int32" "native")}
      {Lisp-Entry "VOID*" () 87 8 ("void*" "VOID" "pointer")}
      {Lisp-Entry "HANDLE" () 88 8 ("handle" "VOID" "pointer")}
      {Lisp-Entry "HANDLE*" () 89 8 ("HANDLE" "pointer")}
      {Lisp-Entry "HACCEL" () 90 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HINSTANCE" () 91 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HMODULE" () 92 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HRSRC" () 93 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HGLOBAL" () 94 8 ("HANDLE")}
      {Lisp-Entry "HICON" () 95 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HCURSOR" () 96 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HBRUSH" () 97 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HRGN" () 98 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HFONT" () 99 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HWND" () 100 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HMENU" () 101 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HDC" () 102 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HBITMAP" () 103 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "HGDIOBJ" () 105 8 ("handle" "VOID" "pointer")}
      {Lisp-Entry "LONG_PTR" () 107 8 ("LONG")}
      {Lisp-Entry "ULONG_PTR" () 108 8 ("ULONG")}
      {Lisp-Entry "UINT_PTR" () 109 8 ("UINT")}
      {Lisp-Entry "LRESULT" () 110 8 ("LONG_PTR")}
      {Lisp-Entry "WPARAM" () 111 8 ("UINT_PTR")}
      {Lisp-Entry "LPARAM" () 112 8 ("ULONG_PTR")}
      {Lisp-Entry "PVOID" () 114 8 ("VOID" "pointer")}
      {Lisp-Entry "LPVOID" () 115 8 ("VOID" "pointer")}
      {Lisp-Entry "ATOM" () 117 8 ("UINT")}
      {Lisp-Entry "COLORREF" () 118 8 ("DWORD")}
      {Lisp-Entry "WNDPROC" () 120 8 ("LRESULT" "LPARAM" "WPARAM" "UINT" "HWND" "function")}
      {Lisp-Entry "TIMERPROC" () 121 8 ("VOID" "DWORD" "UINT" "HWND" "function")}
      {Lisp-Entry "WCHAR-array-make" () 129 12 ("WCHAR*" "INT" "c-function")}
      {Lisp-Entry "WCHAR-array-ref" () 130 12 ("WCHAR" "INT" "WCHAR*" "c-function")}
      {Lisp-Entry "WCHAR-array-set!" () 131 12 ("VOID" "WCHAR" "INT" "WCHAR*" "c-function")}
      {Lisp-Entry "WCHAR-subarray" () 132 12 ("INT" "WCHAR*" "c-function")}
      {Lisp-Entry "WCHAR-string" () 133 12 ("CWSTR" "WCHAR*" "c-function")}
      {Lisp-Entry "WCHAR-copy" () 134 12 ("VOID" "INT" "CWSTR" "WCHAR*" "c-function")}
      {Lisp-Entry "WCHAR-ref" () 135 12 ("ULONG" "WCHAR*" "c-function")}}})
"WinUser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "WinUser.fusion"} {Time 128361467240000000L}
    {Lisp-Entry "jazz.platform.windows.WinUser" () 37 9 ("process-hwnd-message" "set!" "HCURSOR" "TIMERPROC" "WCHAR*" "GetWindowText" "1" "c-external-so" "BYTE" "COLORREF" "LPMSG" "LPACCEL" "HACCEL" "LPTRACKMOUSEEVENT" "POINT" "LONG" "HRGN" "BOOL" "LPCRECT" "LPRECT" "LPPOINT" "LPCWSTR" "HINSTANCE" "PAINTSTRUCT*" "MSG*" "LPARAM" "WPARAM" "UINT" "LPVOID" "HMENU" "HWND" "CWSTR" "INT" "DWORD" "WNDCLASS*" "jazz")
      {Lisp-Entry "LWA_COLORKEY" () 54 10 ()}
      {Lisp-Entry "LWA_ALPHA" () 55 10 ()}
      {Lisp-Entry "ULW_COLORKEY" () 56 10 ()}
      {Lisp-Entry "ULW_ALPHA" () 57 10 ()}
      {Lisp-Entry "ULW_OPAQUE" () 58 10 ()}
      {Lisp-Entry "GWL_EXSTYLE" () 60 10 ()}
      {Lisp-Entry "GWL_STYLE" () 61 10 ()}
      {Lisp-Entry "IMAGE_BITMAP" () 63 10 ("0")}
      {Lisp-Entry "IMAGE_ICON" () 64 10 ("1")}
      {Lisp-Entry "IMAGE_CURSOR" () 65 10 ("2")}
      {Lisp-Entry "IMAGE_ENHMETAFILE" () 66 10 ("3")}
      {Lisp-Entry "LR_DEFAULTCOLOR" () 68 10 ()}
      {Lisp-Entry "LR_MONOCHROME" () 69 10 ()}
      {Lisp-Entry "LR_COLOR" () 70 10 ()}
      {Lisp-Entry "LR_COPYRETURNORG" () 71 10 ()}
      {Lisp-Entry "LR_COPYDELETEORG" () 72 10 ()}
      {Lisp-Entry "LR_LOADFROMFILE" () 73 10 ()}
      {Lisp-Entry "LR_LOADTRANSPARENT" () 74 10 ()}
      {Lisp-Entry "LR_DEFAULTSIZE" () 75 10 ()}
      {Lisp-Entry "LR_VGACOLOR" () 76 10 ()}
      {Lisp-Entry "LR_LOADMAP3DCOLORS" () 77 10 ()}
      {Lisp-Entry "LR_CREATEDIBSECTION" () 78 10 ()}
      {Lisp-Entry "LR_COPYFROMRESOURCE" () 79 10 ()}
      {Lisp-Entry "LR_SHARED" () 80 10 ()}
      {Lisp-Entry "CS_VREDRAW" () 83 10 ()}
      {Lisp-Entry "CS_HREDRAW" () 84 10 ()}
      {Lisp-Entry "CS_KEYCVTWINDOW" () 85 10 ()}
      {Lisp-Entry "CS_DBLCLKS" () 86 10 ()}
      {Lisp-Entry "CS_OWNDC" () 87 10 ()}
      {Lisp-Entry "CS_CLASSDC" () 88 10 ()}
      {Lisp-Entry "CS_PARENTDC" () 89 10 ()}
      {Lisp-Entry "CS_NOKEYCVT" () 90 10 ()}
      {Lisp-Entry "CS_NOCLOSE" () 91 10 ()}
      {Lisp-Entry "CS_SAVEBITS" () 92 10 ()}
      {Lisp-Entry "CS_BYTEALIGNCLIENT" () 93 10 ()}
      {Lisp-Entry "CS_BYTEALIGNWINDOW" () 94 10 ()}
      {Lisp-Entry "CS_GLOBALCLASS" () 95 10 ()}
      {Lisp-Entry "COLOR_SCROLLBAR" () 98 10 ("0")}
      {Lisp-Entry "COLOR_BACKGROUND" () 99 10 ("1")}
      {Lisp-Entry "COLOR_ACTIVECAPTION" () 100 10 ("2")}
      {Lisp-Entry "COLOR_INACTIVECAPTION" () 101 10 ("3")}
      {Lisp-Entry "COLOR_MENU" () 102 10 ("4")}
      {Lisp-Entry "COLOR_WINDOW" () 103 10 ("5")}
      {Lisp-Entry "COLOR_WINDOWFRAME" () 104 10 ("6")}
      {Lisp-Entry "COLOR_MENUTEXT" () 105 10 ("7")}
      {Lisp-Entry "COLOR_WINDOWTEXT" () 106 10 ("8")}
      {Lisp-Entry "COLOR_CAPTIONTEXT" () 107 10 ("9")}
      {Lisp-Entry "COLOR_ACTIVEBORDER" () 108 10 ()}
      {Lisp-Entry "COLOR_INACTIVEBORDER" () 109 10 ()}
      {Lisp-Entry "COLOR_APPWORKSPACE" () 110 10 ()}
      {Lisp-Entry "COLOR_HIGHLIGHT" () 111 10 ()}
      {Lisp-Entry "COLOR_HIGHLIGHTTEXT" () 112 10 ()}
      {Lisp-Entry "COLOR_BTNFACE" () 113 10 ()}
      {Lisp-Entry "COLOR_BTNSHADOW" () 114 10 ()}
      {Lisp-Entry "COLOR_GRAYTEXT" () 115 10 ()}
      {Lisp-Entry "COLOR_BTNTEXT" () 116 10 ()}
      {Lisp-Entry "COLOR_INACTIVECAPTIONTEXT" () 117 10 ()}
      {Lisp-Entry "COLOR_BTNHIGHLIGHT" () 118 10 ()}
      {Lisp-Entry "COLOR_3DDKSHADOW" () 119 10 ()}
      {Lisp-Entry "COLOR_3DLIGHT" () 120 10 ()}
      {Lisp-Entry "COLOR_INFOTEXT" () 121 10 ()}
      {Lisp-Entry "COLOR_INFOBK" () 122 10 ()}
      {Lisp-Entry "COLOR_HOTLIGHT" () 123 10 ()}
      {Lisp-Entry "COLOR_GRADIENTACTIVECAPTION" () 124 10 ()}
      {Lisp-Entry "COLOR_GRADIENTINACTIVECAPTION" () 125 10 ()}
      {Lisp-Entry "COLOR_DESKTOP" () 126 10 ("COLOR_BACKGROUND")}
      {Lisp-Entry "COLOR_3DFACE" () 127 10 ("COLOR_BTNFACE")}
      {Lisp-Entry "COLOR_3DSHADOW" () 128 10 ("COLOR_BTNSHADOW")}
      {Lisp-Entry "COLOR_3DHIGHLIGHT" () 129 10 ("COLOR_BTNHIGHLIGHT")}
      {Lisp-Entry "COLOR_3DHILIGHT" () 130 10 ("COLOR_BTNHIGHLIGHT")}
      {Lisp-Entry "COLOR_BTNHILIGHT" () 131 10 ("COLOR_BTNHIGHLIGHT")}
      {Lisp-Entry "CWP_ALL" () 134 10 ("0")}
      {Lisp-Entry "CWP_SKIPINVISIBLE" () 135 10 ("1")}
      {Lisp-Entry "CWP_SKIPDISABLED" () 136 10 ("2")}
      {Lisp-Entry "CWP_SKIPTRANSPARENT" () 137 10 ("4")}
      {Lisp-Entry "IDC_ARROW" () 139 10 ()}
      {Lisp-Entry "IDC_IBEAM" () 140 10 ()}
      {Lisp-Entry "IDC_WAIT" () 141 10 ()}
      {Lisp-Entry "IDC_CROSS" () 142 10 ()}
      {Lisp-Entry "IDC_UPARROW" () 144 10 ()}
      {Lisp-Entry "IDC_SIZENWSE" () 145 10 ()}
      {Lisp-Entry "IDC_SIZENESW" () 146 10 ()}
      {Lisp-Entry "IDC_SIZEWE" () 147 10 ()}
      {Lisp-Entry "IDC_SIZENS" () 148 10 ()}
      {Lisp-Entry "IDC_SIZEALL" () 149 10 ()}
      {Lisp-Entry "IDC_NO" () 150 10 ()}
      {Lisp-Entry "IDC_HAND" () 151 10 ()}
      {Lisp-Entry "IDC_APPSTARTING" () 152 10 ()}
      {Lisp-Entry "IDC_HELP" () 153 10 ()}
      {Lisp-Entry "GCL_HBRBACKGROUND" () 155 10 ()}
      {Lisp-Entry "HWND_BOTTOM" () 158 12 ("HWND" "c-function")}
      {Lisp-Entry "HWND_TOP" () 159 12 ("HWND" "c-function")}
      {Lisp-Entry "RDW_ERASE" () 162 10 ("4")}
      {Lisp-Entry "RDW_FRAME" () 163 10 ()}
      {Lisp-Entry "RDW_INTERNALPAINT" () 164 10 ("2")}
      {Lisp-Entry "RDW_INVALIDATE" () 165 10 ("1")}
      {Lisp-Entry "RDW_NOERASE" () 166 10 ()}
      {Lisp-Entry "RDW_NOFRAME" () 167 10 ()}
      {Lisp-Entry "RDW_NOINTERNALPAINT" () 168 10 ()}
      {Lisp-Entry "RDW_VALIDATE" () 169 10 ("8")}
      {Lisp-Entry "RDW_ERASENOW" () 170 10 ()}
      {Lisp-Entry "RDW_UPDATENOW" () 171 10 ()}
      {Lisp-Entry "RDW_ALLCHILDREN" () 172 10 ()}
      {Lisp-Entry "RDW_NOCHILDREN" () 173 10 ()}
      {Lisp-Entry "GW_HWNDFIRST" () 175 10 ("0")}
      {Lisp-Entry "GW_HWNDLAST" () 176 10 ("1")}
      {Lisp-Entry "GW_HWNDNEXT" () 177 10 ("2")}
      {Lisp-Entry "GW_HWNDPREV" () 178 10 ("3")}
      {Lisp-Entry "GW_OWNER" () 179 10 ("4")}
      {Lisp-Entry "GW_CHILD" () 180 10 ("5")}
      {Lisp-Entry "GW_ENABLEDPOPUP" () 181 10 ("6")}
      {Lisp-Entry "GW_MAX" () 182 10 ("6")}
      {Lisp-Entry "HOVER_DEFAULT" () 184 10 ()}
      {Lisp-Entry "SPI_SETWORKAREA" () 186 10 ()}
      {Lisp-Entry "GW_OWNER" () 188 10 ("4")}
      {Lisp-Entry "SW_SCROLLCHILDREN" () 190 10 ("1")}
      {Lisp-Entry "SW_INVALIDATE" () 191 10 ("2")}
      {Lisp-Entry "SW_ERASE" () 192 10 ("4")}
      {Lisp-Entry "SW_HIDE" () 195 10 ("0")}
      {Lisp-Entry "SW_SHOWNORMAL" () 196 10 ("1")}
      {Lisp-Entry "SW_NORMAL" () 197 10 ("1")}
      {Lisp-Entry "SW_SHOWMINIMIZED" () 198 10 ("2")}
      {Lisp-Entry "SW_SHOWMAXIMIZED" () 199 10 ("3")}
      {Lisp-Entry "SW_MAXIMIZE" () 200 10 ("3")}
      {Lisp-Entry "SW_SHOWNOACTIVATE" () 201 10 ("4")}
      {Lisp-Entry "SW_SHOW" () 202 10 ("5")}
      {Lisp-Entry "SW_MINIMIZE" () 203 10 ("6")}
      {Lisp-Entry "SW_SHOWMINNOACTIVE" () 204 10 ("7")}
      {Lisp-Entry "SW_SHOWNA" () 205 10 ("8")}
      {Lisp-Entry "SW_RESTORE" () 206 10 ("9")}
      {Lisp-Entry "SW_SHOWDEFAULT" () 207 10 ()}
      {Lisp-Entry "SW_MAX" () 208 10 ()}
      {Lisp-Entry "IDI_APPLICATION" () 210 10 ()}
      {Lisp-Entry "IDI_HAND" () 211 10 ()}
      {Lisp-Entry "IDI_QUESTION" () 212 10 ()}
      {Lisp-Entry "IDI_EXCLAMATION" () 213 10 ()}
      {Lisp-Entry "IDI_ASTERISK" () 214 10 ()}
      {Lisp-Entry "IDI_WINLOGO" () 215 10 ()}
      {Lisp-Entry "IDI_WARNING" () 216 10 ("IDI_EXCLAMATION")}
      {Lisp-Entry "IDI_ERROR" () 217 10 ("IDI_HAND")}
      {Lisp-Entry "IDI_INFORMATION" () 218 10 ("IDI_ASTERISK")}
      {Lisp-Entry "SWP_DRAWFRAME" () 221 10 ()}
      {Lisp-Entry "SWP_FRAMECHANGED" () 222 10 ()}
      {Lisp-Entry "SWP_HIDEWINDOW" () 223 10 ()}
      {Lisp-Entry "SWP_NOACTIVATE" () 224 10 ()}
      {Lisp-Entry "SWP_NOCOPYBITS" () 225 10 ()}
      {Lisp-Entry "SWP_NOMOVE" () 226 10 ()}
      {Lisp-Entry "SWP_NOSIZE" () 227 10 ()}
      {Lisp-Entry "SWP_NOREDRAW" () 228 10 ()}
      {Lisp-Entry "SWP_NOZORDER" () 229 10 ()}
      {Lisp-Entry "SWP_SHOWWINDOW" () 230 10 ()}
      {Lisp-Entry "SWP_NOOWNERZORDER" () 231 10 ()}
      {Lisp-Entry "SWP_NOREPOSITION" () 232 10 ("SWP_NOOWNERZORDER")}
      {Lisp-Entry "SWP_NOSENDCHANGING" () 233 10 ()}
      {Lisp-Entry "SWP_DEFERERASE" () 234 10 ()}
      {Lisp-Entry "SWP_ASYNCWINDOWPOS" () 235 10 ()}
      {Lisp-Entry "FVIRTKEY" () 238 10 ("TRUE")}
      {Lisp-Entry "FNOINVERT" () 239 10 ()}
      {Lisp-Entry "FSHIFT" () 240 10 ()}
      {Lisp-Entry "FCONTROL" () 241 10 ()}
      {Lisp-Entry "FALT" () 242 10 ()}
      {Lisp-Entry "MB_ICONHAND" () 244 10 ()}
      {Lisp-Entry "MB_ICONQUESTION" () 245 10 ()}
      {Lisp-Entry "MB_ICONEXCLAMATION" () 246 10 ()}
      {Lisp-Entry "MB_ICONASTERISK" () 247 10 ()}
      {Lisp-Entry "MB_APPLMODAL" () 248 10 ()}
      {Lisp-Entry "MB_SYSTEMMODAL" () 249 10 ()}
      {Lisp-Entry "MB_TASKMODAL" () 250 10 ()}
      {Lisp-Entry "WA_INACTIVE" () 252 10 ("0")}
      {Lisp-Entry "WA_ACTIVE" () 253 10 ("1")}
      {Lisp-Entry "WA_CLICKACTIVE" () 254 10 ("2")}
      {Lisp-Entry "WM_NULL" () 256 10 ()}
      {Lisp-Entry "WM_CREATE" () 257 10 ()}
      {Lisp-Entry "WM_DESTROY" () 258 10 ()}
      {Lisp-Entry "WM_MOVE" () 259 10 ()}
      {Lisp-Entry "WM_SIZE" () 260 10 ()}
      {Lisp-Entry "WM_ACTIVATE" () 261 10 ()}
      {Lisp-Entry "WM_SETFOCUS" () 262 10 ()}
      {Lisp-Entry "WM_KILLFOCUS" () 263 10 ()}
      {Lisp-Entry "WM_ENABLE" () 264 10 ()}
      {Lisp-Entry "WM_SETREDRAW" () 265 10 ()}
      {Lisp-Entry "WM_SETTEXT" () 266 10 ()}
      {Lisp-Entry "WM_GETTEXT" () 267 10 ()}
      {Lisp-Entry "WM_GETTEXTLENGTH" () 268 10 ()}
      {Lisp-Entry "WM_PAINT" () 269 10 ()}
      {Lisp-Entry "WM_CLOSE" () 270 10 ()}
      {Lisp-Entry "WM_QUERYENDSESSION" () 271 10 ()}
      {Lisp-Entry "WM_QUIT" () 272 10 ()}
      {Lisp-Entry "WM_QUERYOPEN" () 273 10 ()}
      {Lisp-Entry "WM_ERASEBKGND" () 274 10 ()}
      {Lisp-Entry "WM_SYSCOLORCHANGE" () 275 10 ()}
      {Lisp-Entry "WM_ENDSESSION" () 276 10 ()}
      {Lisp-Entry "WM_SHOWWINDOW" () 277 10 ()}
      {Lisp-Entry "WM_WININICHANGE" () 278 10 ()}
      {Lisp-Entry "WM_SETTINGCHANGE" () 279 10 ("WM_WININICHANGE")}
      {Lisp-Entry "WM_DEVMODECHANGE" () 281 10 ()}
      {Lisp-Entry "WM_ACTIVATEAPP" () 282 10 ()}
      {Lisp-Entry "WM_FONTCHANGE" () 283 10 ()}
      {Lisp-Entry "WM_TIMECHANGE" () 284 10 ()}
      {Lisp-Entry "WM_CANCELMODE" () 285 10 ()}
      {Lisp-Entry "WM_SETCURSOR" () 286 10 ()}
      {Lisp-Entry "WM_MOUSEACTIVATE" () 287 10 ()}
      {Lisp-Entry "WM_CHILDACTIVATE" () 288 10 ()}
      {Lisp-Entry "WM_QUEUESYNC" () 289 10 ()}
      {Lisp-Entry "WM_GETMINMAXINFO" () 290 10 ()}
      {Lisp-Entry "WM_PAINTICON" () 292 10 ()}
      {Lisp-Entry "WM_ICONERASEBKGND" () 293 10 ()}
      {Lisp-Entry "WM_NEXTDLGCTL" () 294 10 ()}
      {Lisp-Entry "WM_SPOOLERSTATUS" () 295 10 ()}
      {Lisp-Entry "WM_DRAWITEM" () 296 10 ()}
      {Lisp-Entry "WM_MEASUREITEM" () 297 10 ()}
      {Lisp-Entry "WM_DELETEITEM" () 298 10 ()}
      {Lisp-Entry "WM_VKEYTOITEM" () 299 10 ()}
      {Lisp-Entry "WM_CHARTOITEM" () 300 10 ()}
      {Lisp-Entry "WM_SETFONT" () 301 10 ()}
      {Lisp-Entry "WM_GETFONT" () 302 10 ()}
      {Lisp-Entry "WM_SETHOTKEY" () 303 10 ()}
      {Lisp-Entry "WM_GETHOTKEY" () 304 10 ()}
      {Lisp-Entry "WM_QUERYDRAGICON" () 305 10 ()}
      {Lisp-Entry "WM_COMPAREITEM" () 306 10 ()}
      {Lisp-Entry "WM_GETOBJECT" () 307 10 ()}
      {Lisp-Entry "WM_COMPACTING" () 308 10 ()}
      {Lisp-Entry "WM_COMMNOTIFY" () 309 10 ()}
      {Lisp-Entry "WM_WINDOWPOSCHANGING" () 310 10 ()}
      {Lisp-Entry "WM_WINDOWPOSCHANGED" () 311 10 ()}
      {Lisp-Entry "WM_POWER" () 312 10 ()}
      {Lisp-Entry "WM_COPYDATA" () 313 10 ()}
      {Lisp-Entry "WM_CANCELJOURNAL" () 314 10 ()}
      {Lisp-Entry "WM_NOTIFY" () 316 10 ()}
      {Lisp-Entry "WM_INPUTLANGCHANGEREQUEST" () 317 10 ()}
      {Lisp-Entry "WM_INPUTLANGCHANGE" () 318 10 ()}
      {Lisp-Entry "WM_TCARD" () 319 10 ()}
      {Lisp-Entry "WM_HELP" () 320 10 ()}
      {Lisp-Entry "WM_USERCHANGED" () 321 10 ()}
      {Lisp-Entry "WM_NOTIFYFORMAT" () 322 10 ()}
      {Lisp-Entry "WM_CONTEXTMENU" () 324 10 ()}
      {Lisp-Entry "WM_STYLECHANGING" () 325 10 ()}
      {Lisp-Entry "WM_STYLECHANGED" () 326 10 ()}
      {Lisp-Entry "WM_DISPLAYCHANGE" () 327 10 ()}
      {Lisp-Entry "WM_GETICON" () 328 10 ()}
      {Lisp-Entry "WM_SETICON" () 329 10 ()}
      {Lisp-Entry "WM_NCCREATE" () 331 10 ()}
      {Lisp-Entry "WM_NCDESTROY" () 332 10 ()}
      {Lisp-Entry "WM_NCCALCSIZE" () 333 10 ()}
      {Lisp-Entry "WM_NCHITTEST" () 334 10 ()}
      {Lisp-Entry "WM_NCPAINT" () 335 10 ()}
      {Lisp-Entry "WM_NCACTIVATE" () 336 10 ()}
      {Lisp-Entry "WM_GETDLGCODE" () 337 10 ()}
      {Lisp-Entry "WM_SYNCPAINT" () 338 10 ()}
      {Lisp-Entry "WM_NCMOUSEMOVE" () 339 10 ()}
      {Lisp-Entry "WM_NCLBUTTONDOWN" () 340 10 ()}
      {Lisp-Entry "WM_NCLBUTTONUP" () 341 10 ()}
      {Lisp-Entry "WM_NCLBUTTONDBLCLK" () 342 10 ()}
      {Lisp-Entry "WM_NCRBUTTONDOWN" () 343 10 ()}
      {Lisp-Entry "WM_NCRBUTTONUP" () 344 10 ()}
      {Lisp-Entry "WM_NCRBUTTONDBLCLK" () 345 10 ()}
      {Lisp-Entry "WM_NCMBUTTONDOWN" () 346 10 ()}
      {Lisp-Entry "WM_NCMBUTTONUP" () 347 10 ()}
      {Lisp-Entry "WM_NCMBUTTONDBLCLK" () 348 10 ()}
      {Lisp-Entry "WM_KEYFIRST" () 350 10 ()}
      {Lisp-Entry "WM_KEYDOWN" () 351 10 ()}
      {Lisp-Entry "WM_KEYUP" () 352 10 ()}
      {Lisp-Entry "WM_CHAR" () 353 10 ()}
      {Lisp-Entry "WM_DEADCHAR" () 354 10 ()}
      {Lisp-Entry "WM_SYSKEYDOWN" () 355 10 ()}
      {Lisp-Entry "WM_SYSKEYUP" () 356 10 ()}
      {Lisp-Entry "WM_SYSCHAR" () 357 10 ()}
      {Lisp-Entry "WM_SYSDEADCHAR" () 358 10 ()}
      {Lisp-Entry "WM_KEYLAST" () 359 10 ()}
      {Lisp-Entry "WM_IME_STARTCOMPOSITION" () 360 10 ()}
      {Lisp-Entry "WM_IME_ENDCOMPOSITION" () 361 10 ()}
      {Lisp-Entry "WM_IME_COMPOSITION" () 362 10 ()}
      {Lisp-Entry "WM_IME_KEYLAST" () 363 10 ()}
      {Lisp-Entry "WM_INITDIALOG" () 365 10 ()}
      {Lisp-Entry "WM_COMMAND" () 366 10 ()}
      {Lisp-Entry "WM_SYSCOMMAND" () 367 10 ()}
      {Lisp-Entry "WM_TIMER" () 368 10 ()}
      {Lisp-Entry "WM_HSCROLL" () 369 10 ()}
      {Lisp-Entry "WM_VSCROLL" () 370 10 ()}
      {Lisp-Entry "WM_INITMENU" () 371 10 ()}
      {Lisp-Entry "WM_INITMENUPOPUP" () 372 10 ()}
      {Lisp-Entry "WM_MENUSELECT" () 373 10 ()}
      {Lisp-Entry "WM_MENUCHAR" () 374 10 ()}
      {Lisp-Entry "WM_ENTERIDLE" () 375 10 ()}
      {Lisp-Entry "WM_CTLCOLORMSGBOX" () 376 10 ()}
      {Lisp-Entry "WM_CTLCOLOREDIT" () 377 10 ()}
      {Lisp-Entry "WM_CTLCOLORLISTBOX" () 378 10 ()}
      {Lisp-Entry "WM_CTLCOLORBTN" () 379 10 ()}
      {Lisp-Entry "WM_CTLCOLORDLG" () 380 10 ()}
      {Lisp-Entry "WM_CTLCOLORSCROLLBAR" () 381 10 ()}
      {Lisp-Entry "WM_CTLCOLORSTATIC" () 382 10 ()}
      {Lisp-Entry "WM_MOUSEFIRST" () 384 10 ()}
      {Lisp-Entry "WM_MOUSEMOVE" () 385 10 ()}
      {Lisp-Entry "WM_LBUTTONDOWN" () 386 10 ()}
      {Lisp-Entry "WM_LBUTTONUP" () 387 10 ()}
      {Lisp-Entry "WM_LBUTTONDBLCLK" () 388 10 ()}
      {Lisp-Entry "WM_RBUTTONDOWN" () 389 10 ()}
      {Lisp-Entry "WM_RBUTTONUP" () 390 10 ()}
      {Lisp-Entry "WM_RBUTTONDBLCLK" () 391 10 ()}
      {Lisp-Entry "WM_MBUTTONDOWN" () 392 10 ()}
      {Lisp-Entry "WM_MBUTTONUP" () 393 10 ()}
      {Lisp-Entry "WM_MBUTTONDBLCLK" () 394 10 ()}
      {Lisp-Entry "WM_MOUSEWHEEL" () 395 10 ()}
      {Lisp-Entry "WM_MOUSELAST" () 396 10 ()}
      {Lisp-Entry "WM_PARENTNOTIFY" () 397 10 ()}
      {Lisp-Entry "WM_ENTERMENULOOP" () 398 10 ()}
      {Lisp-Entry "WM_EXITMENULOOP" () 399 10 ()}
      {Lisp-Entry "WM_NEXTMENU" () 400 10 ()}
      {Lisp-Entry "WM_SIZING" () 401 10 ()}
      {Lisp-Entry "WM_CAPTURECHANGED" () 402 10 ()}
      {Lisp-Entry "WM_MOVING" () 403 10 ()}
      {Lisp-Entry "WM_POWERBROADCAST" () 404 10 ()}
      {Lisp-Entry "WM_DEVICECHANGE" () 405 10 ()}
      {Lisp-Entry "WM_MDICREATE" () 407 10 ()}
      {Lisp-Entry "WM_MDIDESTROY" () 408 10 ()}
      {Lisp-Entry "WM_MDIACTIVATE" () 409 10 ()}
      {Lisp-Entry "WM_MDIRESTORE" () 410 10 ()}
      {Lisp-Entry "WM_MDINEXT" () 411 10 ()}
      {Lisp-Entry "WM_MDIMAXIMIZE" () 412 10 ()}
      {Lisp-Entry "WM_MDITILE" () 413 10 ()}
      {Lisp-Entry "WM_MDICASCADE" () 414 10 ()}
      {Lisp-Entry "WM_MDIICONARRANGE" () 415 10 ()}
      {Lisp-Entry "WM_MDIGETACTIVE" () 416 10 ()}
      {Lisp-Entry "WM_MDISETMENU" () 417 10 ()}
      {Lisp-Entry "WM_ENTERSIZEMOVE" () 418 10 ()}
      {Lisp-Entry "WM_EXITSIZEMOVE" () 419 10 ()}
      {Lisp-Entry "WM_DROPFILES" () 420 10 ()}
      {Lisp-Entry "WM_MDIREFRESHMENU" () 421 10 ()}
      {Lisp-Entry "WM_IME_SETCONTEXT" () 423 10 ()}
      {Lisp-Entry "WM_IME_NOTIFY" () 424 10 ()}
      {Lisp-Entry "WM_IME_CONTROL" () 425 10 ()}
      {Lisp-Entry "WM_IME_COMPOSITIONFULL" () 426 10 ()}
      {Lisp-Entry "WM_IME_SELECT" () 427 10 ()}
      {Lisp-Entry "WM_IME_CHAR" () 428 10 ()}
      {Lisp-Entry "WM_IME_KEYDOWN" () 429 10 ()}
      {Lisp-Entry "WM_IME_KEYUP" () 430 10 ()}
      {Lisp-Entry "WM_MOUSEHOVER" () 431 10 ()}
      {Lisp-Entry "WM_MOUSELEAVE" () 432 10 ()}
      {Lisp-Entry "WM_CUT" () 434 10 ()}
      {Lisp-Entry "WM_COPY" () 435 10 ()}
      {Lisp-Entry "WM_PASTE" () 436 10 ()}
      {Lisp-Entry "WM_CLEAR" () 437 10 ()}
      {Lisp-Entry "WM_UNDO" () 438 10 ()}
      {Lisp-Entry "WM_RENDERFORMAT" () 439 10 ()}
      {Lisp-Entry "WM_RENDERALLFORMATS" () 440 10 ()}
      {Lisp-Entry "WM_DESTROYCLIPBOARD" () 441 10 ()}
      {Lisp-Entry "WM_DRAWCLIPBOARD" () 442 10 ()}
      {Lisp-Entry "WM_PAINTCLIPBOARD" () 443 10 ()}
      {Lisp-Entry "WM_VSCROLLCLIPBOARD" () 444 10 ()}
      {Lisp-Entry "WM_SIZECLIPBOARD" () 445 10 ()}
      {Lisp-Entry "WM_ASKCBFORMATNAME" () 446 10 ()}
      {Lisp-Entry "WM_CHANGECBCHAIN" () 447 10 ()}
      {Lisp-Entry "WM_HSCROLLCLIPBOARD" () 448 10 ()}
      {Lisp-Entry "WM_QUERYNEWPALETTE" () 449 10 ()}
      {Lisp-Entry "WM_PALETTEISCHANGING" () 450 10 ()}
      {Lisp-Entry "WM_PALETTECHANGED" () 451 10 ()}
      {Lisp-Entry "WM_HOTKEY" () 452 10 ()}
      {Lisp-Entry "WM_PRINT" () 454 10 ()}
      {Lisp-Entry "WM_PRINTCLIENT" () 455 10 ()}
      {Lisp-Entry "WM_HANDHELDFIRST" () 457 10 ()}
      {Lisp-Entry "WM_HANDHELDLAST" () 458 10 ()}
      {Lisp-Entry "WM_AFXFIRST" () 460 10 ()}
      {Lisp-Entry "WM_AFXLAST" () 461 10 ()}
      {Lisp-Entry "WM_PENWINFIRST" () 463 10 ()}
      {Lisp-Entry "WM_PENWINLAST" () 464 10 ()}
      {Lisp-Entry "WM_USER" () 466 10 ()}
      {Lisp-Entry "WM_APP" () 467 10 ()}
      {Lisp-Entry "HTERROR" () 470 10 ()}
      {Lisp-Entry "HTTRANSPARENT" () 471 10 ()}
      {Lisp-Entry "HTNOWHERE" () 472 10 ("0")}
      {Lisp-Entry "HTCLIENT" () 473 10 ("1")}
      {Lisp-Entry "HTCAPTION" () 474 10 ("2")}
      {Lisp-Entry "HTSYSMENU" () 475 10 ("3")}
      {Lisp-Entry "HTGROWBOX" () 476 10 ("4")}
      {Lisp-Entry "HTSIZE" () 477 10 ("HTGROWBOX")}
      {Lisp-Entry "HTMENU" () 478 10 ("5")}
      {Lisp-Entry "HTHSCROLL" () 479 10 ("6")}
      {Lisp-Entry "HTVSCROLL" () 480 10 ("7")}
      {Lisp-Entry "HTMINBUTTON" () 481 10 ("8")}
      {Lisp-Entry "HTMAXBUTTON" () 482 10 ("9")}
      {Lisp-Entry "HTLEFT" () 483 10 ()}
      {Lisp-Entry "HTRIGHT" () 484 10 ()}
      {Lisp-Entry "HTTOP" () 485 10 ()}
      {Lisp-Entry "HTTOPLEFT" () 486 10 ()}
      {Lisp-Entry "HTTOPRIGHT" () 487 10 ()}
      {Lisp-Entry "HTBOTTOM" () 488 10 ()}
      {Lisp-Entry "HTBOTTOMLEFT" () 489 10 ()}
      {Lisp-Entry "HTBOTTOMRIGHT" () 490 10 ()}
      {Lisp-Entry "HTBORDER" () 491 10 ()}
      {Lisp-Entry "HTREDUCE" () 492 10 ("HTMINBUTTON")}
      {Lisp-Entry "HTZOOM" () 493 10 ("HTMAXBUTTON")}
      {Lisp-Entry "HTSIZEFIRST" () 494 10 ("HTLEFT")}
      {Lisp-Entry "HTSIZELAST" () 495 10 ("HTBOTTOMRIGHT")}
      {Lisp-Entry "HTOBJECT" () 496 10 ()}
      {Lisp-Entry "HTCLOSE" () 497 10 ()}
      {Lisp-Entry "HTHELP" () 498 10 ()}
      {Lisp-Entry "MA_ACTIVATE" () 500 10 ("1")}
      {Lisp-Entry "MA_ACTIVATEANDEAT" () 501 10 ("2")}
      {Lisp-Entry "MA_NOACTIVATE" () 502 10 ("3")}
      {Lisp-Entry "MA_NOACTIVATEANDEAT" () 503 10 ("4")}
      {Lisp-Entry "CLIPBOARD_FORMAT" () 511 13 ("CF_MAX" "CF_LOCALE" "CF_HDROP" "CF_ENHMETAFILE" "CF_UNICODETEXT" "CF_WAVE" "CF_RIFF" "CF_PENDATA" "9" "CF_PALETTE" "8" "CF_DIB" "7" "CF_OEMTEXT" "6" "CF_TIFF" "5" "CF_DIF" "4" "CF_SYLK" "3" "CF_METAFILEPICT" "2" "CF_BITMAP" "1" "CF_TEXT")}
      {Lisp-Entry "VIRTUAL_KEYS" () 531 13 ("VK_OEM_8" "VK_OEM_7" "VK_OEM_6" "VK_OEM_5" "VK_OEM_4" "VK_OEM_3" "VK_OEM_2" "VK_OEM_PERIOD" "VK_OEM_MINUS" "VK_OEM_COMMA" "VK_OEM_PLUS" "VK_OEM_1" "VK_LAUNCH_APP2" "VK_LAUNCH_APP1" "VK_LAUNCH_MEDIA_SELECT" "VK_LAUNCH_MAIL" "VK_MEDIA_PLAY_PAUSE" "VK_MEDIA_STOP" "VK_MEDIA_PREV_TRACK" "VK_MEDIA_NEXT_TRACK" "VK_VOLUME_UP" "VK_VOLUME_DOWN" "VK_VOLUME_MUTE" "VK_BROWSER_HOME" "VK_BROWSER_FAVORITES" "VK_BROWSER_SEARCH" "VK_BROWSER_STOP" "VK_BROWSER_REFRESH" "VK_BROWSER_FORWARD" "VK_BROWSER_BACK" "VK_RMENU" "VK_LMENU" "VK_RCONTROL" "VK_LCONTROL" "VK_RSHIFT" "VK_LSHIFT" "VK_OEM_NEC_EQUAL" "VK_SCROLL" "VK_NUMLOCK" "VK_F24" "VK_F23" "VK_F22" "VK_F21" "VK_F20" "VK_F19" "VK_F18" "VK_F17" "VK_F16" "VK_F15" "VK_F14" "VK_F13" "VK_F12" "VK_F11" "VK_F10" "VK_F9" "VK_F8" "VK_F7" "VK_F6" "VK_F5" "VK_F4" "VK_F3" "VK_F2" "VK_F1" "VK_DIVIDE" "VK_DECIMAL" "VK_SUBTRACT" "VK_SEPARATOR" "VK_ADD" "VK_MULTIPLY" "VK_NUMPAD9" "VK_NUMPAD8" "VK_NUMPAD7" "VK_NUMPAD6" "VK_NUMPAD5" "VK_NUMPAD4" "VK_NUMPAD3" "VK_NUMPAD2" "VK_NUMPAD1" "VK_NUMPAD0" "VK_APPS" "VK_RWIN" "VK_LWIN" "VK_HELP" "VK_DELETE" "VK_INSERT" "VK_SNAPSHOT" "VK_EXECUTE" "VK_PRINT" "VK_SELECT" "VK_DOWN" "VK_RIGHT" "VK_UP" "VK_LEFT" "VK_HOME" "VK_END" "VK_NEXT" "VK_PRIOR" "VK_SPACE" "VK_ESCAPE" "VK_CAPITAL" "VK_PAUSE" "VK_MENU" "VK_CONTROL" "VK_SHIFT" "VK_RETURN" "VK_CLEAR" "VK_TAB" "VK_BACK" "VK_MBUTTON" "VK_CANCEL" "VK_RBUTTON" "VK_LBUTTON")}
      {Lisp-Entry "WINSTYLE" () 657 13 ("WS_TABSTOP" "WS_GROUP" "WS_THICKFRAME" "WS_SYSMENU" "WS_HSCROLL" "WS_VSCROLL" "WS_DLGFRAME" "WS_BORDER" "WS_CAPTION" "WS_MAXIMIZE" "WS_CLIPCHILDREN" "WS_CLIPSIBLINGS" "WS_DISABLED" "WS_VISIBLE" "WS_MINIMIZE" "WS_CHILD" "WS_POPUP" "WS_OVERLAPPED")}
      {Lisp-Entry "WINEXSTYLE" () 678 13 ("WS_EX_LAYERED" "WS_EX_APPWINDOW" "WS_EX_STATICEDGE" "WS_EX_CONTROLPARENT" "WS_EX_RIGHTSCROLLBAR" "WS_EX_LEFTSCROLLBAR" "WS_EX_LTRREADING" "WS_EX_RTLREADING" "WS_EX_LEFT" "WS_EX_RIGHT" "WS_EX_CONTEXTHELP" "WS_EX_CLIENTEDGE" "WS_EX_WINDOWEDGE" "WS_EX_TOOLWINDOW" "WS_EX_MDICHILD" "WS_EX_TRANSPARENT" "WS_EX_ACCEPTFILES" "WS_EX_TOPMOST" "WS_EX_NOPARENTNOTIFY" "WS_EX_DLGMODALFRAME")}
      {Lisp-Entry "WS_MINIMIZEBOX" () 701 10 ()}
      {Lisp-Entry "WS_MAXIMIZEBOX" () 702 10 ()}
      {Lisp-Entry "WS_OVERLAPPEDWINDOW" () 704 10 ("WS_MAXIMIZEBOX" "WS_MINIMIZEBOX" "WS_THICKFRAME" "WS_SYSMENU" "WS_CAPTION" "bit-or")}
      {Lisp-Entry "WS_POPUPWINDOW" () 711 10 ("WS_SYSMENU" "WS_BORDER" "WS_POPUP" "bit-or")}
      {Lisp-Entry "WS_TILED" () 716 10 ("WS_OVERLAPPED")}
      {Lisp-Entry "WS_ICONIC" () 717 10 ("WS_MINIMIZE")}
      {Lisp-Entry "WS_SIZEBOX" () 718 10 ("WS_THICKFRAME")}
      {Lisp-Entry "WS_TILEDWINDOW" () 719 10 ("WS_OVERLAPPEDWINDOW")}
      {Lisp-Entry "WS_EX_OVERLAPPEDWINDOW" () 721 10 ("WS_EX_CLIENTEDGE" "WS_EX_WINDOWEDGE" "bit-or")}
      {Lisp-Entry "WS_EX_PALETTEWINDOW" () 722 10 ("WS_EX_TOPMOST" "WS_EX_TOOLWINDOW" "WS_EX_WINDOWEDGE" "bit-or")}
      {Lisp-Entry "ACCEL" () 725 13 ("cmd" "key" "WORD" "fVirt" "BYTE")}
      {Lisp-Entry "LPACCEL" () 730 8 ("ACCEL*")}
      {Lisp-Entry "make-ACCEL-array" () 732 12 ("ACCEL*" "INT" "c-function")}
      {Lisp-Entry "ACCEL-array-ref" () 733 12 ("INT" "ACCEL*" "c-function")}
      {Lisp-Entry "TRACKMOUSEEVENT" () 735 13 ("dwHoverTime" "pointer" "hwndTrack" "HWND" "dwFlags" "cbSize" "DWORD")}
      {Lisp-Entry "LPTRACKMOUSEEVENT" () 742 8 ("TRACKMOUSEEVENT*")}
      {Lisp-Entry "size-of-TRACKMOUSEEVENT" () 745 12 ("INT" "c-function")}
      {Lisp-Entry "MSG" () 748 13 ("time" "DWORD" "lParam" "LPARAM" "wParam" "WPARAM" "message" "UINT" "pointer" "hwnd" "HWND")}
      {Lisp-Entry "LPMSG" () 756 8 ("MSG*")}
      {Lisp-Entry "PAINTSTRUCT" () 759 13 ("rgbReserved" "BYTE" "fIncUpdate" "fRestore" "embed" "rcPaint" "RECT" "fErase" "BOOL" "pointer" "hdc" "HDC")}
      {Lisp-Entry "WNDCLASS" () 769 14 ("lpszClassName" "lpszMenuName" "LPCTSTR" "hbrBackground" "HBRUSH" "hCursor" "HCURSOR" "hIcon" "HICON" "hInstance" "cbWndExtra" "cbClsExtra" "INT" "pointer" "lpfnWndProc" "WNDPROC" "style" "UINT")}
      {Lisp-Entry "make-WNDCLASS" () 782 12 ("WNDCLASS*" "c-function")}
      {Lisp-Entry "RegisterClass" () 785 21 ()}
      {Lisp-Entry "CreateWindowEx" () 787 21 ()}
      {Lisp-Entry "DefWindowProc" () 788 21 ()}
      {Lisp-Entry "GetMessage" () 789 21 ()}
      {Lisp-Entry "TranslateMessage" () 790 21 ()}
      {Lisp-Entry "DispatchMessage" () 791 21 ()}
      {Lisp-Entry "LockWindowUpdate" () 792 21 ()}
      {Lisp-Entry "DestroyWindow" () 793 21 ()}
      {Lisp-Entry "BeginPaint" () 794 21 ()}
      {Lisp-Entry "EndPaint" () 795 21 ()}
      {Lisp-Entry "SetCapture" () 796 21 ()}
      {Lisp-Entry "ReleaseCapture" () 797 21 ()}
      {Lisp-Entry "ShowWindow" () 798 21 ()}
      {Lisp-Entry "GetLastError" () 799 21 ()}
      {Lisp-Entry "LoadImage" () 800 21 ()}
      {Lisp-Entry "MapWindowPoints" () 801 21 ()}
      {Lisp-Entry "GetWindowRect" () 802 21 ()}
      {Lisp-Entry "GetClientRect" () 803 21 ()}
      {Lisp-Entry "ValidateRect" () 804 21 ()}
      {Lisp-Entry "InvalidateRect" () 805 21 ()}
      {Lisp-Entry "InvalidateRgn" () 806 21 ()}
      {Lisp-Entry "BringWindowToTop" () 807 21 ()}
      {Lisp-Entry "SetWindowPos" () 808 21 ()}
      {Lisp-Entry "SetFocus" () 809 21 ()}
      {Lisp-Entry "MoveWindow" () 810 21 ()}
      {Lisp-Entry "IsWindowEnabled" () 811 21 ()}
      {Lisp-Entry "GetFocus" () 812 21 ()}
      {Lisp-Entry "EnableWindow" () 813 21 ()}
      {Lisp-Entry "ScrollWindowEx" () 814 21 ()}
      {Lisp-Entry "SetForegroundWindow" () 815 21 ()}
      {Lisp-Entry "GetWindowLong" () 816 21 ()}
      {Lisp-Entry "SetWindowLong" () 817 21 ()}
      {Lisp-Entry "RedrawWindow" () 818 21 ()}
      {Lisp-Entry "SendMessage" () 819 21 ()}
      {Lisp-Entry "PostMessage" () 820 21 ()}
      {Lisp-Entry "SetParent" () 821 21 ()}
      {Lisp-Entry "GetWindow" () 822 21 ()}
      {Lisp-Entry "GetTopWindow" () 823 21 ()}
      {Lisp-Entry "IsWindowVisible" () 824 21 ()}
      {Lisp-Entry "SetWindowText" () 825 21 ()}
      {Lisp-Entry "GetCursorPos" () 826 21 ()}
      {Lisp-Entry "WindowFromPoint" () 827 21 ()}
      {Lisp-Entry "ChildWindowFromPointEx" () 828 21 ()}
      {Lisp-Entry "GetUpdateRect" () 829 21 ()}
      {Lisp-Entry "GetUpdateRgn" () 830 21 ()}
      {Lisp-Entry "GetClassLong" () 831 21 ()}
      {Lisp-Entry "UpdateWindow" () 832 21 ()}
      {Lisp-Entry "TrackMouseEvent" () 833 21 ()}
      {Lisp-Entry "GetDesktopWindow" () 834 21 ()}
      {Lisp-Entry "GetSysColorBrush" () 835 21 ()}
      {Lisp-Entry "DestroyAcceleratorTable" () 836 21 ()}
      {Lisp-Entry "CreateAcceleratorTable" () 837 21 ()}
      {Lisp-Entry "TranslateAccelerator" () 838 21 ()}
      {Lisp-Entry "GetAsyncKeyState" () 839 21 ()}
      {Lisp-Entry "SetLayeredWindowAttributes" () 840 21 ()}
      {Lisp-Entry "GetWindowTextLength" () 841 21 ()}
      {Lisp-Entry "SetTimer" () 843 21 ()}
      {Lisp-Entry "KillTimer" () 844 21 ()}
      {Lisp-Entry "SetCursor" () 845 21 ()}
      {Lisp-Entry "ShowCursor" () 846 21 ()}
      {Lisp-Entry "MessageBeep" () 847 21 ()}
      {Lisp-Entry "MessageBox" () 848 21 ()}
      {Lisp-Entry "EmptyClipboard" () 849 21 ()}
      {Lisp-Entry "OpenClipboard" () 850 21 ()}
      {Lisp-Entry "CloseClipboard" () 851 21 ()}
      {Lisp-Entry "LoadCursorInt" () 854 19 ("HCURSOR" "WORD" "c-function")}
      {Lisp-Entry "convert-HINSTANCE" () 864 12 ("HINSTANCE" "UINT" "c-function")}
      {Lisp-Entry "process-hwnd-message" () 867 12 ()}
      {Lisp-Entry "call-process-hwnd-message" () 872 15 ("lParam" "wParam" "uMsg" "hWnd" "process-hwnd-message" "LRESULT" "LPARAM" "WPARAM" "UINT" "HWND")}}})
"Window"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "Window.fusion"} {Time 128369430400000000L}
    {Lisp-Entry "jazz.ui.window.Window" () 38 9 ("jazz")
      {Lisp-Entry "Orphanage" () 54 12 ()}
      {Lisp-Entry "get-orphanage" () 58 20 ("Orphanage-Window" "new" "set!" "Orphanage" "unless")}
      {Lisp-Entry "Window-Class" () 64 7 ("Figure-Class")
        {Lisp-Entry "registered?" () 67 14 ("false")}
        {Lisp-Entry "initialize" () 71 11 ("true" "set!" "register-class" "registered?" "unless" "nextmethod")}
        {Lisp-Entry "window-class" () 79 29 ()}
        {Lisp-Entry "class-style" () 84 29 ("CS_DBLCLKS" "CS_OWNDC" "bit-or")}
        {Lisp-Entry "class-background" () 89 29 ("COLOR_BTNFACE")}
        {Lisp-Entry "register-class" () 93 18 ("RegisterClass" "CLASS_ATOM" "set!" "WNDCLASS-lpszClassName-set!" "WNDCLASS-lpszMenuName-set!" "WNDCLASS-hbrBackground-set!" "WNDCLASS-hCursor-set!" "NULL" "WNDCLASS-hIcon-set!" "WNDCLASS-hInstance-set!" "WNDCLASS-cbWndExtra-set!" "0" "WNDCLASS-cbClsExtra-set!" "call-process-handle-message" "WNDCLASS-lpfnWndProc-set!" "class-style" "WNDCLASS-style-set!" "make-WNDCLASS" "wc" "class-background" "background" "current-instance" "instance" "let" "icon" "icon:" "window-class" "class" "class:")}}
      {Lisp-Entry "Window" () 112 7 ("Message-Consumer" "Figure" "Window-Class")
        {Lisp-Entry "title" () 115 12 ("set-title" "get-title")}
        {Lisp-Entry "surface-class" () 116 12 ("generate" "accessors")}
        {Lisp-Entry "handle" () 119 8 ()}
        {Lisp-Entry "previous-size" () 120 8 ()}
        {Lisp-Entry "subclassed-proc" () 121 8 ()}
        {Lisp-Entry "message-consumer" () 122 8 ()}
        {Lisp-Entry "handle-class" () 130 8 ()}
        {Lisp-Entry "initialize" () 133 11 ("nextmethod" "apply" "self" "message-consumer" "handle-class" "set!" "error" "primary-thread?" "not" "if" "others" "window-class" "bind-keywords" "rest")}
        {Lisp-Entry "initially-visible?" () 142 11 ("false")}
        {Lisp-Entry "setup-handle" () 146 11 ("set-handle" "self" "set-window" "handle")}
        {Lisp-Entry "default-parent" () 151 11 ("get-orphanage")}
        {Lisp-Entry "prepare" () 155 11 ("parent" "self" "prepare-handle" "setup-handle" "nextmethod" "rest")}
        {Lisp-Entry "conclude" () 160 11 ("get-size" "size-change" "nextmethod" "rest")}
        {Lisp-Entry "open?" () 165 18 ("handle" "boolean")}
        {Lisp-Entry "show" () 169 11 ("handle" "show-window" "nextmethod")}
        {Lisp-Entry "hide" () 174 11 ("hide-window" "handle" "when" "nextmethod")}
        {Lisp-Entry "minimize" () 180 18 ("handle" "minimize-window")}
        {Lisp-Entry "close" () 184 11 ("handle" "destroy-window")}
        {Lisp-Entry "print" () 188 11 ("empty-string?" "title" "or" "get-size" "size" "get-position" "position" "let" "format" "handle" "not" "if" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "add-child" () 205 11 ("cons" "children" "set!" "child")}
        {Lisp-Entry "add-form" () 209 11 ("add-child" "child-form" "parent-form")}
        {Lisp-Entry "call-dispatch-message" () 218 18 ("message-consumer" "dispatch-message" "lparam" "wparam" "msg")}
        {Lisp-Entry "get-message-consumer" () 222 18 ("message-consumer")}
        {Lisp-Entry "set-message-consumer" () 226 18 ("message-consumer" "set!" "consumer")}
        {Lisp-Entry "erase-background" () 235 29 ("unprocessed" "processed" "class-background" "not" "if" "hdc")}
        {Lisp-Entry "paint" () 241 29 ("self" "paint-window")}
        {Lisp-Entry "*colors*" () 245 14 ("Dark-Purple" "Dark-Blue" "Dark-Green" "Dark-Yellow" "Dark-Orange" "Dark-Red" "name:" "Color")}
        {Lisp-Entry "*nb-colors*" () 253 14 ("*colors*" "length")}
        {Lisp-Entry "*current-color*" () 256 14 ("0")}
        {Lisp-Entry "draw-placeholder" () 260 11 ("*nb-colors*" "1" "+" "modulo" "set!" "*current-color*" "*colors*" "element" "get-bounds" "fill-rect" "paint" "White" "name:" "Color" "set-color" "dc")}
        {Lisp-Entry "draw" () 267 29 ("ps" "dc")}
        {Lisp-Entry "mouse-hover" () 276 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "mouse-wheel" () 280 29 ("unprocessed" "delta")}
        {Lisp-Entry "mouse-down" () 284 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "mouse-move" () 288 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "mouse-up" () 292 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "double-click" () 296 29 ("mouse-down" "v" "h")}
        {Lisp-Entry "middle-mouse-down" () 300 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "middle-mouse-up" () 304 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "right-mouse-down" () 308 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "right-mouse-up" () 312 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "call-context-menu" () 317 11 ("get-v" "get-h" "context-menu" "Point" "new" "get-desktop" "acquire" "pos" "let" "v" "h")}
        {Lisp-Entry "context-menu" () 322 29 ("unprocessed" "v" "h")}
        {Lisp-Entry "call-lost-capture" () 331 11 ("unprocessed" "handle")}
        {Lisp-Entry "on-lost-capture" () 335 26 ("unprocessed" "evt")}
        {Lisp-Entry "acquire-capture" () 339 18 ("handle" "set-capture")}
        {Lisp-Entry "release-capture" () 343 18 ("unset-capture")}
        {Lisp-Entry "cursor-update" () 352 29 ("unprocessed" "processed" "if" "hit")}
        {Lisp-Entry "system-key-down" () 363 11 ("processed" "view-update-cursor")}
        {Lisp-Entry "system-key-up" () 368 11 ("processed" "view-update-cursor")}
        {Lisp-Entry "modifier-changed" () 373 11 ("view-update-cursor" "memq?" "when" "wparam")}
        {Lisp-Entry "call-key-down" () 378 11 ("integer->char" "key-down" "modifier-changed" "wparam")}
        {Lisp-Entry "call-key-up" () 383 11 ("integer->char" "key-up" "modifier-changed" "wparam")}
        {Lisp-Entry "call-key-press" () 388 11 ("integer->char" "key-press" "wparam")}
        {Lisp-Entry "key-down" () 392 26 ("unprocessed" "char")}
        {Lisp-Entry "key-up" () 396 26 ("unprocessed" "char")}
        {Lisp-Entry "key-press" () 400 26 ("unprocessed" "char")}
        {Lisp-Entry "call-position-change" () 409 18 ("Point" "new" "position-change" "v" "h")}
        {Lisp-Entry "position-change" () 413 29 ("unprocessed" "position")}
        {Lisp-Entry "call-size-change" () 417 18 ("previous-size" "set!" "size-change" "Dimension" "new" "size" "let" "get-installed?" "when" "height" "width")}
        {Lisp-Entry "size-change" () 424 29 ("unprocessed" "size")}
        {Lisp-Entry "on-command" () 433 29 ("process-action" "get-window" "object" "processed" "self" "invoke" "get-application" "dispatch-shortcut" "Shortcut" "is?" "unprocessed" "not" "loword" "get-id-cookie" "action-item/shortcut" "let" "0" "=" "if" "wparam" "lparam")}
        {Lisp-Entry "on-system-command" () 449 29 ("unprocessed" "type")}
        {Lisp-Entry "on-mouse-activate" () 453 29 ("unprocessed")}
        {Lisp-Entry "on-activate" () 458 29 ("unprocessed" "on-activate-palette" "on-deactivate-palette" "inactive" "eq?" "if" "kind")}
        {Lisp-Entry "on-activate-palette" () 465 29 ()}
        {Lisp-Entry "on-deactivate-palette" () 469 29 ()}
        {Lisp-Entry "on-activate-app" () 475 29 ("unprocessed" "status")}
        {Lisp-Entry "on-close" () 479 29 ("unprocessed" "evt")}
        {Lisp-Entry "window-destroy" () 483 11 ("unprocessed" "destroy-component")}
        {Lisp-Entry "on-nc-destroy" () 488 11 ("unprocessed" "set-handle" "handle" "set-window" "evt")}
        {Lisp-Entry "call-focus-gain" () 494 11 ("focus-gain")}
        {Lisp-Entry "call-focus-lose" () 498 29 ("get-window" "focus-lose" "wparam")}
        {Lisp-Entry "focus-gain" () 502 29 ("unprocessed")}
        {Lisp-Entry "focus-lose" () 506 29 ("unprocessed" "receiving")}
        {Lisp-Entry "drop-files" () 517 11 ("get-toplevel-handle" "SetForegroundWindow" "receive-files" "POINT->point" "pos" "DragFinish" "DragQueryPoint" "POINT-make" "pt" "received-files" "files" "let" "drop-files" "unimplemented" "wparam")}
        {Lisp-Entry "received-files" () 531 11 ("naturals" "anchorize" "tokenise" "File" "Directory" "if" "new" "pathname" "FILE_ATTRIBUTE_DIRECTORY" "mask-bit-set?" "directory?" "GetFileAttributes" "attributes" "adjust-string" "WCHAR-string" "WCHAR-array-set!" "WCHAR-array-make" "filename" "MAX_PATH" "size" "let*" "n" "dynamic" "function" "map" "0" "NULL" "DragQueryFile" "count" "let" "received-files" "unimplemented" "wparam")}
        {Lisp-Entry "receive-files" () 549 29 ("files" "pos")}
        {Lisp-Entry "setting-change" () 558 29 ("wparam")}
        {Lisp-Entry "on-timer" () 567 11 ("call-pulse" "serial-number->object" "object" "let" "serial-number")}
        {Lisp-Entry "fade-in" () 577 18 ("false" "set-layered?" "set!" "/" "-" "*" "ceil" "+" "" "while" "start" "current-time" "time->seconds" "now" "delay" "max" "let*" "update-window" "true" "set-visible?" "0" "handle" "set-alpha-blending" "fade-speed" "fade-speed:")}
        {Lisp-Entry "fade-out" () 592 18 ("=" "unless" "set!" "handle" "set-alpha-blending" "by" "from" "n" "for" "loop" "alpha" "let" "5" "step" "step:" "0" "to" "to:")}
        {Lisp-Entry "find-host" () 607 18 ("children" "find-if" "get-guest" "View-Host" "is?" "and" "window" "dynamic" "function" "proc" "with" "guest-type")}
        {Lisp-Entry "find-guest" () 615 18 ("get-guest" "when" "find-host" "host" "let" "guest-type")}
        {Lisp-Entry "collect-guest" () 621 18 ("children" "get-guest" "guest" "let" "View-Host" "is?" "when" "window" "dynamic" "function" "collect" "guest-type")}
        {Lisp-Entry "send-message" () 635 18 ("handle" "platform-send-message" "lparam" "wparam" "msg")}
        {Lisp-Entry "post-message" () 639 18 ("handle" "platform-post-message" "lparam" "wparam" "msg")}
        {Lisp-Entry "get-handle" () 643 18 ("handle")}
        {Lisp-Entry "set-handle" () 647 18 ("handle" "set!" "hw")}
        {Lisp-Entry "set-parent" () 651 18 ("handle" "platform-set-parent" "nextmethod" "parent")}
        {Lisp-Entry "get-frame" () 656 11 ("get-frame" "parent" "when" "Frame" "self" "is?" "if")}
        {Lisp-Entry "get-overlapped" () 663 18 ("parent" "get-overlapped" "Overlapped" "self" "is?" "if")}
        {Lisp-Entry "get-root-owner" () 669 18 ("true" "set!" "if" "get-handle" "owner" "not" "while" "false" "done?" "when" "handle" "get-window-owner-handle" "get-window" "root" "let")}
        {Lisp-Entry "get-top-window" () 681 18 ("handle" "get-top-window-handle" "get-window")}
        {Lisp-Entry "get-title" () 685 26 ("title")}
        {Lisp-Entry "set-title" () 689 26 ("localize" "handle" "set-window-title" "title" "set!" "value")}
        {Lisp-Entry "get-window-title" () 694 18 ("handle" "get-hwnd-title")}
        {Lisp-Entry "acquire" () 698 18 ("error" "else" "acquire-rect" "Rect" "handle" "acquire-point" "Point" "typecase" "shape" "window")}
        {Lisp-Entry "get-window-position" () 708 18 ("handle" "platform-get-window-position")}
        {Lisp-Entry "get-position" () 712 11 ("get-handle" "get-parent" "if" "handle" "platform-get-position")}
        {Lisp-Entry "set-position" () 716 11 ("handle" "platform-set-position" "pos")}
        {Lisp-Entry "move-window" () 720 18 ("get-v" "get-h" "+" "Point" "new" "set-position" "get-position" "pos" "let" "dv" "dh")}
        {Lisp-Entry "get-size" () 725 11 ("handle" "platform-get-size")}
        {Lisp-Entry "set-size" () 729 11 ("get-window-size" "+" "set-window-size" "get-size" "-" "delta" "let" "size")}
        {Lisp-Entry "size-window" () 734 18 ("get-height" "get-width" "+" "Dimension" "new" "set-size" "get-size" "size" "let" "dheight" "dwidth")}
        {Lisp-Entry "get-window-size" () 739 18 ("handle" "platform-get-window-size")}
        {Lisp-Entry "set-window-size" () 743 18 ("handle" "platform-set-window-size" "size")}
        {Lisp-Entry "set-bounds" () 747 18 ("handle" "platform-set-bounds" "rect")}
        {Lisp-Entry "grow-bounds" () 751 18 ("set-position" "set-window-size" "Dimension" "get-window-size" "size" "Point" "new" "get-position" "+" "pos" "let" "dheight" "dwidth" "dv" "dh")}
        {Lisp-Entry "get-width" () 758 18 ("get-size" "get-width")}
        {Lisp-Entry "get-height" () 762 18 ("get-size" "get-height")}
        {Lisp-Entry "get-rect" () 766 18 ("get-handle" "get-parent" "if" "handle" "platform-get-rect")}
        {Lisp-Entry "get-bounds" () 770 18 ("handle" "platform-get-bounds")}
        {Lisp-Entry "ensure-displayed" () 774 18 ("set-position" "set-size" "8" "padding:" "fit-within" "new-size" "new-position" "receive" "get-rect" "rect" "get-desktop" "get-size" "parent" "not" "if" "outer" "let")}
        {Lisp-Entry "mouse-position" () 782 18 ("platform-mouse-position" "get-desktop" "acquire")}
        {Lisp-Entry "mouse-window" () 786 18 ("mouse-position" "find-window")}
        {Lisp-Entry "mouse-in-window?" () 790 18 ("mouse-position" "point-in-window?")}
        {Lisp-Entry "point-in-window?" () 794 18 ("get-height" "get-v" "get-width" "0" "get-h" "in-interval?" "and" "get-window-size" "size" "let" "point")}
        {Lisp-Entry "find-window" () 800 18 ("platform-window-from-point" "get-window" "point")}
        {Lisp-Entry "find-child-window" () 804 18 ("acquire" "find-child-window" "self" "eq?" "not" "or" "if" "handle" "platform-child-window-from-point" "get-window" "window" "let" "point")}
        {Lisp-Entry "flash-window" () 811 18 ("false" "sleep" "true" "handle" "FlashWindow" "3" "repeat" "loop" "flash-window" "unimplemented")}
        {Lisp-Entry "move" () 821 18 ("true" "handle" "platform-move-window" "cy" "cx" "y" "x")}
        {Lisp-Entry "acquire-focus" () 825 18 ("self" "set-window-focus")}
        {Lisp-Entry "get-enabled?" () 829 18 ("handle" "platform-window-enabled?")}
        {Lisp-Entry "enable-window" () 833 18 ("handle" "platform-enable-window")}
        {Lisp-Entry "disable-window" () 837 18 ("handle" "platform-disable-window")}
        {Lisp-Entry "get-client-rect" () 841 18 ("handle" "platform-get-client-rect")}
        {Lisp-Entry "scroll-window" () 845 18 ("handle" "platform-scroll-window" "true" "erase?" "erase?:" "clip-rect" "clip-rect:" "rect" "dv" "dh")}
        {Lisp-Entry "invalidate-rect" () 849 18 ("handle" "platform-invalidate-rect" "false" "erase?" "rect")}
        {Lisp-Entry "invalidate-region" () 853 18 ("handle" "platform-invalidate-region" "false" "erase?" "region")}
        {Lisp-Entry "invalidate-window" () 857 18 ("handle" "platform-invalidate-window" "false" "erase?")}
        {Lisp-Entry "redraw-window" () 861 18 ("handle" "platform-redraw-window" "region" "region:" "rect" "rect:")}
        {Lisp-Entry "invalidate-border" () 865 18 ("invalidate-region" "border-region" "region" "with-closed" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "redraw-border" () 870 18 ("region:" "redraw-window" "border-region" "region" "with-closed" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "border-region" () 875 18 ("get-client-rect" "frame-region" "1" "Rect" "insets" "insets:")}
        {Lisp-Entry "get-update-rect" () 879 18 ("handle" "platform-get-update-rect")}
        {Lisp-Entry "get-update-region" () 883 18 ("handle" "platform-get-update-region")}
        {Lisp-Entry "get-class-background" () 887 18 ("GCL_HBRBACKGROUND" "handle" "GetClassLong")}
        {Lisp-Entry "update-window" () 891 18 ("handle" "platform-update-window")}
        {Lisp-Entry "show-noactivate" () 895 18 ("handle" "platform-show-noactivate")}
        {Lisp-Entry "hide-noactivate" () 899 18 ("handle" "platform-hide-noactivate")}
        {Lisp-Entry "first-window" () 908 18 ("first" "null?" "if" "get-windows" "windows" "let")}
        {Lisp-Entry "second-window" () 915 18 ("second" "2" "length" ">=" "if" "get-windows" "windows" "let")}
        {Lisp-Entry "last-window" () 922 18 ("get-windows" "last")}
        {Lisp-Entry "get-windows" () 926 18 ("get-children" "collect-if" "get-visible?" "or" "Window" "is?" "and" "child" "dynamic" "function" "proc" "with" "false" "include-invisibles?" "include-invisibles?:")}
        {Lisp-Entry "front-window?" () 934 18 ("parent" "first-window" "self" "eq?")}
        {Lisp-Entry "bring-to-front" () 943 11 ("handle" "platform-bring-window-to-front" "nextmethod")}
        {Lisp-Entry "send-to-back" () 948 11 ("handle" "platform-send-window-to-back" "nextmethod")}
        {Lisp-Entry "get-location" () 958 11 ("location")}
        {Lisp-Entry "set-location" () 962 11 ("location" "set!" "loc")}
        {Lisp-Entry "layout-window" () 966 18 ("layout")}
        {Lisp-Entry "layout" () 970 26 ()}
        {Lisp-Entry "mouse-view" () 979 18 ("mouse-position" "find-view")}
        {Lisp-Entry "find-view" () 983 18 ("self" "acquire" "find-drawing" "get-root" "root" "View-Player" "is?" "when" "find-window" "window" "let" "pos")}
        {Lisp-Entry "to-view" () 990 18 ("get-root" "self" "acquire" "acquired" "get-player" "player" "let*" "view" "shape")}
        {Lisp-Entry "debug-window" () 1001 26 ("self" "Development" "set-%" "debug-window" "unimplemented" "pos")}
        {Lisp-Entry "describe-window" () 1007 26 ("WINEXSTYLE" "get-ex-style" "WINSTYLE" "bits->symbolic" "get-client-rect" "get-bounds" "get-size" "get-position" "WS_CLIPSIBLINGS" "WS_CLIPCHILDREN" "get-style" "mask-bit-set?" "get-class-background" "get-name" "self" "class-of" ":console" "format" "describe-window" "unimplemented" "pos")}}}})
"Window-Advanced-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Window-Advanced-Menu.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.Window-Advanced-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Window-Advanced-Menu" () 46 7 ("application" "Action" "action:" "Bitmap-Resource" "icon:" "cascade-separator" "before:" "title:" "toggle-window" "name:" "Window-Menu")}}})
"Window-DC"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "graphic" "Window-DC.fusion"} {Time 128360915200000000L}
    {Lisp-Entry "jazz.ui.graphic.Window-DC" () 37 9 ("jazz")
      {Lisp-Entry "Window-DC" () 45 7 ("DC")
        {Lisp-Entry "window" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "get-handle" "GetWindowDC" "hdc" "window" "set!" "NULL" "nextmethod" "wnd")}
        {Lisp-Entry "destroy" () 58 11 ("nextmethod" "hdc" "window" "get-handle" "ReleaseDC")}}}})
"Window-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Window-Menu.fusion"} {Time 128368663240000000L}
    {Lisp-Entry "jazz.ui.menu.Window-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Window-Menu" () 48 7 ("restore-all" "minimize-all" "tile-vertically" "tile-horizontally" "cascade-separator" "current-window" "current" "previous-window" "previous" "next-window" "application" "Action" "action:" "disabled-icon:" "Bitmap-Resource" "icon:" "next" "name:" "title:" "Menu")
        {Lisp-Entry "base-items" () 51 8 ()}
        {Lisp-Entry "finish" () 67 11 ("get-children" "length" "base-items" "set!" "nextmethod" "rest")}
        {Lisp-Entry "collect-palettes" () 72 11 ("get-windows" "Palette" "is?" "window" "dynamic" "function" "collect-if" "get-toplevel" "toplevel" "let")}
        {Lisp-Entry "collect-windows" () 79 11 ("get-windows" "get-controller" "get-tool?" "not" "Document" "get-guest" "guest" "Host-Frame" "is-not?" "or" "frame" "dynamic" "function" "collect-if" "get-stage" "stage" "let")}
        {Lisp-Entry "update" () 89 11 ("layout-menu" "Palette" "palette" ":window" "list" "properties:" "on-select-window" "method-name:" ":application" "target-name:" "Event-Handler" "action-handler:" "icon:" "get-title" "present-title" "title:" "Label-Item" "get-guest" "guest-icon" "Host-Frame" "is?" "if" "icon" "window" "self" "parent:" "Separator-Item" "new" "not-null?" "when" "base-items" "get-children" "tail" "close" "item" "dynamic" "function" "for-each" "collect-windows" "windows" "collect-palettes" "palettes" "let")}
        {Lisp-Entry "present-title" () 110 11 ("empty-string?" "null?" "or" "if" "title")}}}})
"Window-Player"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "Window-Player.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.view.Window-Player" () 37 9 ("jazz")
      {Lisp-Entry "Window-Player" () 45 7 ("View")
        {Lisp-Entry "window-class" () 48 12 ("set-window-class" "get-window-class")}
        {Lisp-Entry "window-initargs" () 49 12 ("set-window-initargs" "get-window-initargs")}
        {Lisp-Entry "window" () 52 8 ()}
        {Lisp-Entry "conclude" () 55 11 ("destroy-mandatory" "nextmethod" "rest")}
        {Lisp-Entry "destroy" () 60 11 ("nextmethod" "set!" "close" "window" "when")}
        {Lisp-Entry "setup-window" () 67 18 ("window-initargs" "false" "visible?:" "size:" "position:" "parent:" "new-in" "apply" "window" "set!" "get-size" "size" "0" "Point" "self" "get-root" "acquire" "position" "creator" "window-class" "eval-symbol" "class" "get-player" "player" "let")}
        {Lisp-Entry "get-window-class" () 80 18 ("window-class")}
        {Lisp-Entry "set-window-class" () 84 18 ("window-class" "set!" "class")}
        {Lisp-Entry "get-window-initargs" () 88 18 ("window-initargs")}
        {Lisp-Entry "set-window-initargs" () 92 18 ("window-initargs" "set!" "initargs")}
        {Lisp-Entry "get-window" () 96 18 ("window")}
        {Lisp-Entry "position-change" () 105 11 ("update-window" "nextmethod" "position")}
        {Lisp-Entry "size-change" () 110 11 ("set-size" "window" "when" "nextmethod" "size")}
        {Lisp-Entry "show" () 116 11 ("true" "set-visible?" "window" "when" "nextmethod")}
        {Lisp-Entry "hide" () 122 11 ("false" "set-visible?" "window" "when" "nextmethod")}
        {Lisp-Entry "update-window" () 133 18 ("0" "Point" "self" "get-root" "acquire" "set-position" "window" "when")}}}})
"Windows"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "toconvert" "Windows.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "Windows" () 37 9 ("jazz")}})
"Windows-Inspector"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "debuggee" "Windows-Inspector.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz.debuggee.Windows-Inspector" () 37 9 ("jazz")
      {Lisp-Entry "Windows-Inspector" () 48 7 ("hwnd" "process" "extended-style" "style" "class" "window" "width:" "title" "tree" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "center" "on-filter-applications" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" ":icons" "portfolio:" "tooltip-text:" "tooltip?:" "selected?:" "filter-applications" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "title:" "WinUser" "WinGDI" "System" "Utilities" "Layout-View")
        {Lisp-Entry "filter-applications?" () 51 8 ("true")}
        {Lisp-Entry "finish" () 73 11 ("refresh" "nextmethod" "initargs")}
        {Lisp-Entry "palette-icon" () 84 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 89 16 ()}
        {Lisp-Entry "palette-position" () 94 16 ("Point")}
        {Lisp-Entry "palette-size" () 99 16 ("Point")}
        {Lisp-Entry "resize" () 108 11 ("border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-filter-applications" () 113 11 ("refresh" "not" "filter-applications?" "set!" "evt")}
        {Lisp-Entry "refresh" () 123 11 ("filtered-toplevel-windows" "insert-windows" "remove-every-row" "dynamic" "function" "with-update-locked" "locate" "tree" "let")}
        {Lisp-Entry "filtered-toplevel-windows" () 131 11 ("WS_SYSMENU" "WS_VISIBLE" "mask-bit-set?" "and" "GWL_STYLE" "GetWindowLong" "style" "hwnd" "dynamic" "function" "collect-if" "filter-applications?" "not" "if" "toplevel-windows" "windows" "let")}
        {Lisp-Entry "insert-windows" () 142 11 ("second" "key:" "" "sort" "insert-window" "info" "for-each" "child-windows" "get-hwnd-title" "list" "hwnd" "dynamic" "function" "map" "infos" "let" "lst" "father" "tree")}
        {Lisp-Entry "insert-window" () 151 11 ("user-data:" "format" "Tree-Label" "Bitmap-Resource" "image:" ":background" "color:" "title:" "Tree-Node" "new" "list" "children:" "expanded" "dynamic" "state:" "father:" "add-row" "Light-Yellow" "View-Player" "is?" "and" "background" "Dark-Red" "name:" "Color" "color" "->string" "process" "WINEXSTYLE" "GWL_EXSTYLE" "exstyle" "WINSTYLE" "GWL_STYLE" "GetWindowLong" "bits->symbolic" "style" "Window" "get-class-name" "either" "class" "get-window" "window" "empty-string?" "if" "let*" "get-thread/process-id" "process-id" "thread-id" "receive" "children" "title" "hwnd" "bind" "info" "father" "tree")}}
      {Lisp-Entry "Windows-Tree" () 179 7 ("Tree-View")
        {Lisp-Entry "update-row" () 182 11 ("self" "insert-windows" "children" "title" "hwnd" "bind" "get-user-data" "info" "let" "row")}}}})
"Windows-Look"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "look" "Windows-Look.fusion"} {Time 128366795460000000L}
    {Lisp-Entry "jazz.ui.look.Windows-Look" () 37 9 ("jazz")
      {Lisp-Entry "Windows-Look" () 45 7 ("Look")
        {Lisp-Entry "present" () 53 11 ()}
        {Lisp-Entry "get-element" () 62 11 ("document/scrollbar/flat?" "document/header/flat?" "tool/scrollbar/flat?" "true" "tool/header/flat?" "group/border/flat?" "outline/edge/flat?" "false" "entry/edge/flat?" "case" "name")}}}})
"Wipe-Effect"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "effect" "Wipe-Effect.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.effect.Wipe-Effect" () 37 9 ("jazz")
      {Lisp-Entry "Wipe-Effect" () 45 7 ("Effect")
        {Lisp-Entry "direction" () 48 8 ()}
        {Lisp-Entry "delay" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("delay~self" "direction~self" "set!" "nextmethod" "delay" "delay:" "direction" "direction:")}
        {Lisp-Entry "animate" () 58 11 ("up" "v" "get-height" "down" "left" "get-v" "get-h" "-" "Point" "new" "1" "*" "h" "let*" "get-width" "below" "0" "from" "n" "for" "loop" "right" "direction" "case" ":destination" "size:" "position:" "bit-blit" "wait" "delay" "when" "p" "dynamic" "function" "blit" "let" "size" "pos" "dst" "src")}}}})
"Wizard"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "wizard" "Wizard.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.wizard.Wizard" () 37 9 ("jazz")
      {Lisp-Entry "Wizard" () 47 7 ("on-cancel" "cancel" "next" "on-ok" "form:" "Event-Handler" "action-handler:" "title:" "back" "panes" "fill" "layout-type:" "content" "Default-GUI" "description" "Label-Bold" "Font" "font:" "9" "Point" "position:" "title" "name:" "Dimension" "size:" "View")
        {Lisp-Entry "finish" () 61 11 ("car" "select-pane" "when" "get-panes" "panes" "let" "nextmethod" "rest")}
        {Lisp-Entry "frame-title" () 74 16 ("wizard-title")}
        {Lisp-Entry "dialog-title" () 84 16 ("wizard-title")}
        {Lisp-Entry "dialog-class" () 89 16 ("Wizard-Dialog")}
        {Lisp-Entry "Wizard-Dialog" () 94 14 ("Dimension" "size:" "Point" "position:" "Host-Dialog")
          {Lisp-Entry "focus-gain" () 101 13 ("guest" "focus-acquired" "nextmethod")}
          {Lisp-Entry "get-modal-result" () 106 13 ("guest" "wizard-result")}}
        {Lisp-Entry "wizard-title" () 116 31 ()}
        {Lisp-Entry "wizard-result" () 121 26 ()}
        {Lisp-Entry "focus-acquired" () 130 29 ("focus-acquired" "when" "selected-pane" "pane" "let")}
        {Lisp-Entry "resize" () 141 11 ("cancel" "next" "back" "move-figure" "content" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-ok" () 149 11 ("get-host" "on-ok" "evt")}
        {Lisp-Entry "on-cancel" () 153 11 ("get-host" "on-cancel" "evt")}
        {Lisp-Entry "get-panes" () 162 18 ("get-children" "panes" "locate" "pad" "let")}
        {Lisp-Entry "select-pane" () 167 11 ("if" "next" "set-title" "not" "set-default?" "neq?" "back" "set-enabled?" "pane-terminal?" "terminal?" "let" "car" "set-selection" "get-children" "panes" "locate" "pad" "let*" "pane")}
        {Lisp-Entry "selected-pane" () 178 11 ("get-selection" "panes" "locate" "pad" "let")}
        {Lisp-Entry "pane-terminal?" () 183 29 ("get-panes" "last" "eq?" "pane")}
        {Lisp-Entry "Header-Color" () 192 14 ("blue:" "green:" "red:" "Color" "new")}
        {Lisp-Entry "draw" () 196 11 ("Header-Color" "White" "name:" "Color" "get-width" "0" "Rect" "new" "gradient-fill" "get-size" "size" "let" "lv" "lh" "update" "context" "dc")}}}})
"Wizard-Pane"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "wizard" "Wizard-Pane.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui.wizard.Wizard-Pane" () 37 9 ("jazz")
      {Lisp-Entry "Wizard-Pane" () 45 7 ("Layout-View")
        {Lisp-Entry "focus-acquired" () 54 26 ()}}}})
"Word-Site"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "Word-Site.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.Word-Site" () 37 9 ("jazz")
      {Lisp-Entry "Word-Site" () 45 7 ("GUID" "guid:" "Site-Window")
        {Lisp-Entry "install" () 57 11 ("ui-activate-verb" "run" "nextmethod" "rest")}}}})
"Word-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "external" "Word-View.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.external.Word-View" () 37 9 ("jazz")
      {Lisp-Entry "Word-View" () 45 7 ("Window-Player")
        {Lisp-Entry "install-in-host" () 48 11 ("setup" "nextmethod" "host")}
        {Lisp-Entry "setup" () 53 18 ("setup-window" "Word-Site" "set-window-class")}
        {Lisp-Entry "get-site" () 63 18 ("window")}}}})
"Workbench"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Workbench.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.builder.workbench.Workbench" () 37 9 ("jazz")
      {Lisp-Entry "Workbench" () 48 7 ("Product")
        {Lisp-Entry "products-hashtable" () 51 8 ("eq?" "new-hashtable")}
        {Lisp-Entry "categories-hashtable" () 52 8 ("eq?" "new-hashtable")}
        {Lisp-Entry "resources-hashtable" () 53 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "sources-hashtable" () 55 8 ("equal?" "new-hashtable")}
        {Lisp-Entry "require-form-model" () 63 11 ("nextmethod" "dynamic" "function" "with-continue" "get-execution-context" "if" "form")}
        {Lisp-Entry "get-products-hashtable" () 76 18 ("products-hashtable")}
        {Lisp-Entry "find-product" () 80 18 ("products-hashtable" "hash-ref" "type-name")}
        {Lisp-Entry "find-project" () 84 18 ("Project" "is?" "if" "find-product" "product" "let" "type-name")}
        {Lisp-Entry "require-project" () 93 18 ("error" "find-project" "either" "type-name")}
        {Lisp-Entry "find-source" () 103 18 ("get-source-entry" "source")}
        {Lisp-Entry "find-filename" () 107 18 ("get-effective-source" "get-name" "ci=" "when" "descendant" "dynamic" "function" "for-each-product-file" "return" "lambda" "call/ec" "filename")}
        {Lisp-Entry "catalog-output" () 122 11 ("User" "File")}
        {Lisp-Entry "load-catalogs" () 126 18 ("true" "include-self?:" "require-catalog" "load-content" "get-catalog?" "when" "product" "for-each-product" "user-message" "dynamic" "function" ":wait" "with-cursor")}
        {Lisp-Entry "get-effective-editable?" () 143 11 ("true")}
        {Lisp-Entry "add-to-product" () 152 21 ("add-entry" "Jazz-File" "add-resource" "resource-class" "resource-type" "type" "Resource-File" "add-source" "get-source" "source" "let" "set-product" "class-of" "type-name" "products-hashtable" "hash-set!" "set-parent-product" "self" "set-workbench" "Product" "is?" "when" "Product-File" "typecase" "component" "name" "product")}
        {Lisp-Entry "remove-from-product" () 170 21 ("remove-entry" "Jazz-File" "remove-resource" "resource-class" "resource-type" "type" "Resource-File" "remove-source" "get-source" "source" "let" "class-of" "type-name" "products-hashtable" "hash-clear" "Product" "is?" "when" "Product-File" "typecase" "component" "name" "product")}
        {Lisp-Entry "for-each-product" () 190 18 ("Product" "is?" "when" "level" "descendant" "dynamic" "function" "for-each-descendant" "false" "include-self?" "include-self?:" "proc")}
        {Lisp-Entry "for-each-product-file" () 198 18 ("Product-File" "is?" "when" "level" "descendant" "dynamic" "function" "for-each-descendant" "false" "include-self?" "include-self?:" "proc")}
        {Lisp-Entry "for-each-jazz-file" () 206 18 ("Jazz-File" "is?" "when" "level" "descendant" "dynamic" "function" "for-each-descendant" "false" "include-self?" "include-self?:" "proc")}
        {Lisp-Entry "add-entry" () 214 18 ("categories-hashtable" "hash-set!" "entry" "category-name")}
        {Lisp-Entry "remove-entry" () 218 18 ("categories-hashtable" "hash-clear" "category-name")}
        {Lisp-Entry "get-entry" () 222 18 ("categories-hashtable" "hash-ref" "category-name")}
        {Lisp-Entry "get-entry-source" () 226 18 ("get-source" "when" "get-entry" "file" "let" "category-name")}
        {Lisp-Entry "add-resource" () 232 11 ("resources-hashtable" "hash-set!" "cons" "key" "get-base" "name" "let*" "source" "type")}
        {Lisp-Entry "remove-resource" () 238 11 ("resources-hashtable" "hash-clear" "cons" "key" "get-base" "name" "let*" "source" "type")}
        {Lisp-Entry "get-resource" () 244 18 ("resources-hashtable" "hash-ref" "cons" "key" "let" "name" "type")}
        {Lisp-Entry "get-bitmap" () 249 18 ("get-name" "bitmap" "get-resource" "resource")}
        {Lisp-Entry "get-icon" () 253 18 ("icon" "get-resource" "name")}
        {Lisp-Entry "add-source" () 257 18 ("hash-ref" "cons" "sources-hashtable" "hash-set!" "get-name" "name" "let" "when" "entry" "source")}
        {Lisp-Entry "remove-source" () 263 18 ("hash-ref" "remove!" "sources-hashtable" "hash-set!" "get-name" "name" "let" "when" "entry" "source")}
        {Lisp-Entry "get-source-entry" () 269 18 ("get-effective-source" "pathname=" "entry" "dynamic" "function" "find-if" "sources-hashtable" "hash-ref" "entries" "get-name" "name" "let*" "source")}
        {Lisp-Entry "find-workbench" () 282 11 ("self")}
        {Lisp-Entry "update" () 291 18 ("resources-hashtable" "categories-hashtable" "sources-hashtable" "products-hashtable" "empty-hashtable")}
        {Lisp-Entry "get-class-image" () 304 16 ("Bitmap-Resource")}
        {Lisp-Entry "get-presentation" () 309 11 ("Current-Policy" "format")}
        {Lisp-Entry "can-cut-component?" () 315 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 320 11 ("false")}
        {Lisp-Entry "can-rename-component?" () 325 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 330 11 ("false")}
        {Lisp-Entry "can-move-component?" () 335 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 340 11 ("Product-Group" "list")}}}})
"Workbench-Designer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Workbench-Designer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.builder.workbench.Workbench-Designer" () 37 9 ("jazz")
      {Lisp-Entry "Workbench-Designer" () 46 7 ("Designer")
        {Lisp-Entry "product-designers" () 49 8 ()}
        {Lisp-Entry "initialize" () 57 11 ("install-products-designers" "nextmethod" "apply" "rest")}
        {Lisp-Entry "install-products-designers" () 62 11 ("add-designer" "reference" "for-each-product")}
        {Lisp-Entry "cleanup-product-designers" () 67 11 ("get-output" "product-designers" "set!" "save" "get-modified?" "when" "cons" "put" "class-of" "type-name" "reference" "find-product" "if" "designer" "product" "dynamic" "function" "for-each-designer" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "set-name" () 83 11 ("set-name" "" "get-product-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "true" "use-owner?" "bind-keywords" "rest" "name" "component")}
        {Lisp-Entry "set-property" () 92 11 ("set-property" "" "get-product-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "true" "use-owner?" "bind-keywords" "rest" "value" "property" "component")}
        {Lisp-Entry "add-child" () 101 11 ("add-child" "" "get-product-designer" "designer" "nextmethod" "apply" "reference" "eq?" "not" "or" "if" "find-modification-owner" "owner" "let" "others" "true" "use-owner?" "bind-keywords" "rest" "parent" "child")}
        {Lisp-Entry "remove-child" () 110 11 ("remove-child" "" "get-product-designer" "designer" "let" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parent" "parent" "let*" "rest" "child")}
        {Lisp-Entry "move-components" () 119 11 ("move-components" "unimplemented" "rest" "destination" "components")}
        {Lisp-Entry "cut-components" () 128 11 ("cut-components" "get-product-designer" "designer" "let" "nextmethod" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parents" "parents" "let*" "components")}
        {Lisp-Entry "copy-components" () 137 11 ("copy-components" "get-product-designer" "designer" "let" "nextmethod" "reference" "eq?" "if" "find-modification-owner" "owner" "get-parents" "parents" "let*" "components")}
        {Lisp-Entry "paste-clipboard" () 146 11 ("paste-clipboard" "" "get-product-designer" "designer" "nextmethod" "apply" "reference" "eq?" "if" "find-modification-owner" "owner" "let" "rest" "parent")}
        {Lisp-Entry "get-parents" () 154 11 ("get-parent" "component" "dynamic" "function" "map" "components")}
        {Lisp-Entry "find-modification-owner" () 165 11 ("get-presentation" "error" "get-effective-editable?" "not" "if" "find-components-owner" "owner" "let" "components")}
        {Lisp-Entry "find-components-owner" () 172 11 ("car" "error" "1" "length" ">" "map" "remove-duplicates" "owners" "let" "pair?" "get-parent" "Product" "is?" "reference" "eq?" "or" "if" "component" "dynamic" "function" "find-owner-product" "letrec" "components")}
        {Lisp-Entry "add-designer" () 191 11 ("add-product-designer" "reference:" "form:" "Product-Designer" "new" "designer" "get-self-form" "form" "class-of" "class" "let*" "product")}
        {Lisp-Entry "add-product-designer" () 198 11 ("cons" "product-designers" "set!" "designer" "product")}
        {Lisp-Entry "remove-designer" () 202 11 ("assq" "remove!" "product-designers" "set!" "product")}
        {Lisp-Entry "get-product-designer" () 206 21 ("product-designers" "assq" "cdr" "product")}
        {Lisp-Entry "for-each-designer" () 210 11 ("product-designers" "designer" "product" "bind" "pair" "dynamic" "function" "for-each" "proc")}
        {Lisp-Entry "product-add" () 217 21 ("add-designer" "Product" "is?" "when" "level" "descendant" "dynamic" "function" "for-each-descendant" "product")}
        {Lisp-Entry "product-remove" () 224 21 ("cleanup-product-designers" "product")}
        {Lisp-Entry "save-designer" () 236 21 ("designer" "product" "dynamic" "function" "for-each-designer" "save" "true" "set!" "get-modified?" "when" "false" "some-modified?" "let")}}}})
"Workbench-Editor"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Workbench-Editor.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.workbench.Workbench-Editor" () 37 9 ("jazz")
      {Lisp-Entry "Workbench-Editor" () 46 7 ("Descendants-Editor")
        {Lisp-Entry "form-model" () 49 11 ("nextmethod" "else" "Workbench-Tree" "tree" "get-name" "case" "form")}}}})
"Workbench-Manager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Workbench-Manager.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.builder.workbench.Workbench-Manager" () 37 9 ("jazz")
      {Lisp-Entry "active-project" () 53 12 ()}
      {Lisp-Entry "get-active-project" () 57 20 ("active-project")}
      {Lisp-Entry "Current-Policy" () 66 19 ("Distribution")}
      {Lisp-Entry "get-current-policy" () 70 20 ("Current-Policy")}
      {Lisp-Entry "set-current-policy" () 74 20 ("Current-Policy" "set!" "policy")}
      {Lisp-Entry "current-policy" () 78 20 ("Current-Policy" "policies" "build" "list" "get-preferences")}
      {Lisp-Entry "Workbench-Manager" () 82 7 ("Dark-Blue" "Color" "highlight-color:" "width:" "title:" "descendant" "highlight-edited?:" "show-header?:" "tree" "flat?:" "scroller" "center" "location:" "descendants" "on-highlight-document" "highlight-document" "on-policies-menu" "pick" "on-build-current" "form:" "Event-Handler" "action-handler:" "tooltip-text:" "tooltip?:" "Bitmap-Resource" "image-name:" ":icons" "portfolio:" "body" "build" "tools" "name:" "border" "layout-type:" "Dimension" "size:" "Exit-Listener" "Editor-View")
        {Lisp-Entry "external-name" () 100 16 ("workbench-manager" "rest")}
        {Lisp-Entry "palette-class" () 110 16 ("Tool-Palette")}
        {Lisp-Entry "palette-icon" () 115 16 ("Bitmap-Resource")}
        {Lisp-Entry "palette-title" () 120 16 ()}
        {Lisp-Entry "get-tools-view" () 129 11 ("tools" "locate")}
        {Lisp-Entry "focus-default" () 133 11 ("acquire-focus" "get-tree" "tree" "let")}
        {Lisp-Entry "get-tree" () 143 11 ("tree" "descendants" "locate")}
        {Lisp-Entry "Workbench-Manager-Controller" () 153 9 ("Editor-View-Controller")
          {Lisp-Entry "document-status" () 156 13 ()}}
        {Lisp-Entry "new-controller" () 161 11 ("self" "Workbench-Manager-Controller" "new")}
        {Lisp-Entry "install" () 170 11 ("get-workbench" "set-client" "setup-active-policy" "get-application" "add-exit-listener" "self" "locate" "set-editor" "false" "header" "descendants" "locate-component" "set-shown?" "nextmethod" "rest")}
        {Lisp-Entry "conclude" () 179 11 ("setup-active-project" "nextmethod" "rest")}
        {Lisp-Entry "setup-active-policy" () 184 11 ("set-current-policy" "when" "get-active-policy" "policy" "build" "get-preferences" "pref" "let*")}
        {Lisp-Entry "setup-active-project" () 191 11 ("find-project" "activate-project" "and" "when" "get-workbench" "workbench" "get-active-project" "project" "build" "get-preferences" "pref" "let*")}
        {Lisp-Entry "get-designer-class" () 199 11 ("Workbench-Designer")}
        {Lisp-Entry "prepare-exit" () 203 11 ("save-designer" "designer" "when")}
        {Lisp-Entry "on-designer" () 213 11 ("child-remove" ":child-remove" "parent:" "child:" "get-property" "child-add" ":child-add" "get-kind" "case" "nextmethod" "evt")}
        {Lisp-Entry "child-add" () 220 11 ("class-of" "type-name" "get-manifest-source" "set-tag-source" "get-product-designer" "eq?" "parent-designer" "find-ascendant" "if" "parent-product" "get-workbench" "workbench" "let*" "designer" "product-add" "Product" "is?" "when" "child-add" "unimplemented" "parent" "child")}
        {Lisp-Entry "child-remove" () 231 11 ("designer" "product-remove" "Product" "is?" "when" "child")}
        {Lisp-Entry "key-press" () 241 11 ("launch-selection" "case" "key")}
        {Lisp-Entry "on-policies-menu" () 246 11 ("initiator:" "Policies-Menu" "track-popup-menu" "get-size" "get-height" "0" "Point" "new" "pos" "get-combo" "combo" "get-sender" "sender" "let*" "evt")}
        {Lisp-Entry "on-highlight-document" () 253 11 ("highlight-document" "evt")}
        {Lisp-Entry "on-add-file" () 257 11 ("add-file" "evt")}
        {Lisp-Entry "on-add-group" () 261 11 ("add-group" "evt")}
        {Lisp-Entry "on-add-dependency" () 265 11 ("add-dependency" "evt")}
        {Lisp-Entry "on-install-product" () 269 11 ("false" "install-product" "directory:" "extensions:" "OpenFile-Dialog" "get-modal" "directory" "dynamic" "function" "with-import-directory" "file" "selected-object" "parent" "get-shift?" "default-directory?" "let*" "evt")}
        {Lisp-Entry "on-import-files" () 278 11 ("get-shift?" "import-files" "evt")}
        {Lisp-Entry "on-import-directory" () 282 11 ("get-shift?" "import-directory" "evt")}
        {Lisp-Entry "on-synchronize-content" () 286 11 ("synchronize-content" "evt")}
        {Lisp-Entry "on-update-catalog" () 290 11 ("update-catalog" "evt")}
        {Lisp-Entry "on-edit" () 294 11 ("edit-selection" "evt")}
        {Lisp-Entry "on-activate" () 298 11 ("activate-selection" "evt")}
        {Lisp-Entry "on-launch" () 302 11 ("launch-selection" "evt")}
        {Lisp-Entry "on-execute" () 306 11 ("execute-selection" "evt")}
        {Lisp-Entry "on-distribute" () 310 11 ("distribute-selection" "evt")}
        {Lisp-Entry "on-properties" () 314 11 ("show-properties" "evt")}
        {Lisp-Entry "highlight-document" () 323 11 ("highlight-component" "find-source" "product-file" "get-workbench" "workbench" "not" "get-moniker" "moniker" "get-controller" "controller" "let*" "bell" "Document" "is-not?" "if" "current-document" "guest" "let")}
        {Lisp-Entry "highlight-component" () 338 11 ("row-rank" "set-single-selection" "ensure-expanded" "bell" "not" "if" "component-row" "row" "get-tree" "tree" "let*" "component")}
        {Lisp-Entry "edit-current" () 352 18 ("current-project" "edit-product")}
        {Lisp-Entry "edit-selection" () 356 11 ("edit-product" "Product" "edit-workbench" "Workbench" "typecase" "object" "dynamic" "function" "for-each" "selected-objects" "objects" "let")}
        {Lisp-Entry "edit-workbench" () 365 11 ("edit-document" "User" "File" "file" "get-application" "appl" "let")}
        {Lisp-Entry "edit-product" () 371 11 ("class-of" "type-name" "get-application" "edit-definition" "bell" "Product" "is-not?" "if" "product")}
        {Lisp-Entry "Template-Directory" () 382 14 ("Home" "Directory")}
        {Lisp-Entry "add-file" () 386 21 ("ascendant-product" "import-pathname" "get-tree" "select-component" "expand" "File-Printer" "printer" "with-closed" "destination" "get-extension" "extension" "Template-Directory" "new-file" "cons" "list" "associations" "Template-Expander" "new" "expander" "let*" "create" "new-directory" "set!" "project" "module" "product" "memq?" "directory:" "Add-File-Dialog" "get-modal" "name" "directory" "template" "kind" "receive" "create-directories" "yes" "question" "type:" "get-list" "format" "message-box" "=" "exists?" "User" "Directory" "false" ":must-exist?" "default-import-directory" "default-directory" "Product" "Product-Group" "is?" "or" "when" "get-workbench" "selected-object" "either" "parent" "let")}
        {Lisp-Entry "add-group" () 408 21 ("parent:" "get-tree" "add-component-class" "Product" "Product-Group" "is?" "or" "when" "get-workbench" "selected-object" "either" "parent" "let")}
        {Lisp-Entry "add-dependency" () 415 21 ("parent:" "Project-Dependency" "get-tree" "add-component-class" "selected-object" "parent" "let")}
        {Lisp-Entry "install-product" () 426 11 ("get-presentation" "user-message" "get-tree" "reorder-component" "designer" "add-child" "parent:" ":workbench" "new" "product" "get-name" "error" "Product" "subtype?" "not" "if" "get-workbench" "workbench" "load-source" "class" "string->symbol" "class-name" "get-base" "base" "get-parent" "dir" "let*" "list" "validate-pathnames" "when" "ascendant-product" "parent-product" "let" "descendant?" "parent" "file")}
        {Lisp-Entry "MaxFiles-Warning" () 448 14 ()}
        {Lisp-Entry "import-filter?" () 452 11 ("get-application" "known-extension-frame-class" "ci=" "test:" "member?" "if" "get-include-extensions" "extensions" "get-extension" "ext" "let" "file" "product")}
        {Lisp-Entry "import-directory" () 460 11 ("parse" "user-message" "descendants" "designer" "process-refresh" "false" "import-pathname" "component" "let" "list" "validate-pathnames" "yes" "question" "type:" "format" "message-box" "eq?" "or" "when" "MaxFiles-Warning" ":max-count" "import-filter?" "file" ":filter" "count-files" "count" "directory:" "BrowseFolder-Dialog" "get-modal" "dynamic" "function" "with-import-directory" "directory" "ascendant-product" "product" "selected-object" "parent" "let*" "default-directory?")}
        {Lisp-Entry "import-files" () 475 11 ("import-pathnames" "directory:" "true" "multiple-selection?:" "OpenFile-Dialog" "get-modal" "directory" "dynamic" "function" "with-import-directory" "files" "ascendant-product" "product" "selected-object" "parent" "let*" "default-directory?")}
        {Lisp-Entry "import-pathnames" () 484 21 ("format-plural" "format-cardinality" "user-message" "length" "count" "let" "get-name" "key:" "" "sort" "false" "import-pathname" "pathname" "dynamic" "function" "for-each" "validate-pathnames" "when" "parent" "pathnames" "product")}
        {Lisp-Entry "import-pathname" () 495 11 ("import-file" "import-filter?" "when" "File" "false" "recursive?:" "sort?:" "directories?:" "files?:" "import-pathname" "dynamic" "function" "iterate-directory" "set-name" "descendant?:" "not" "design-events?:" "designer" "add-child" "name:" "Product-Group" "new" "subgroup" "true" "install-product" "determine-product-file?" "exists?" "and" "if" "format" "new-file" "product-file" "Directory" "typecase" "get-name" "name" "let" "descendant?" "parent" "pathname" "product")}
        {Lisp-Entry "import-file" () 520 11 ("add-entry" "set-name" "when" "source" "set-property" "descendant?:" "not" "design-events?:" "designer" "add-child" "get-workbench" "workbench" ":source" "name:" "new" "product-file" "get-base" "string->symbol" "Jazz-File" "eq?" "if" "name" "get-extension" "extension-model" "model" "let*" "descendant?" "parent" "file")}
        {Lisp-Entry "determine-product-file?" () 533 11 ("Product" "autoload" "subtype?" "in-manifest?" "extends" "name" "type" "package" "receive" "extract-jazz-file-category" "info" "ci=" "when" "get-extension" "ext" "let" "determine-product-file?" "unimplemented" "file")}
        {Lisp-Entry "default-import-directory" () 545 11 ("anchorize" "exists?" "not" "or" "if" "get-name" "list" "get-list" "append" "new" "dir" "when" "parent-dir" "else" "get-directory" "Product-Group" "get-parent" "class-of" "type-name" "get-manifest-source" "source" "let" "Product" "Root" "Directory" "Workbench" "typecase" "dynamic" "function" "default" "letrec" "default-import-directory" "unimplemented" "true" "must-exist?" "must-exist?:" "object")}
        {Lisp-Entry "with-import-directory" () 570 11 ("dynamic" "function" "with-preserved-current-directory" "exists?" "and" "if" "default-import-directory" "essay" "default-directory" "let" "proc" "object" "default-directory?")}
        {Lisp-Entry "extension-model" () 579 11 ("Product-File" "else" "Sound-File" "Icon-File" "Cursor-File" "Bitmap-File" "Cpp-File" "Java-File" "Jazz-File" "ci=" "test:" "member?" "cond" "ext")}
        {Lisp-Entry "ascendant-product" () 590 21 ("get-parent" "ascendant-product" "Product" "is?" "if" "component")}
        {Lisp-Entry "synchronize-content" () 601 11 ("content:" "confirmation" "type:" "Synchronize-Box" "class:" "reverse" "bind" "info" "for-each" "children:" "add-row" "Bitmap-Resource" "image:" "join" "title:" "Tree-Node" "c0" "add" "locate" "tree" "Dimension" "size:" "Synchronize-Border" "border" "message-box" "null?" "get-output" "out-of-synch" "true" ":case-insensitive?" ":right-key" ":left-key" "key:" "ci<" "sort" "directory?" "when" ":same" ":right" "list" "put" ":left" "case" "cons" "right" "left" "key" "what" "merge-ordered" "get-content" "content" "get-children" "Project-Dependencies" "is-not?" "child" "collect-if" "children" "path" "fold" "letrec" "pathname" "pathname-name" "class-of" "type-name" "get-manifest-source" "get-name" "Product-Group" "is?" "component" "dynamic" "function" "component-name" "List-Factory" "new" "fact" "let" "error" "exists?" "not" "if" "false" ":must-exist?" "default-import-directory" "directory" "ascendant-product" "product" "selected-object" "object" "let*" "synchronize-content" "unimplemented")}
        {Lisp-Entry "validate-pathnames" () 659 11 ("for-each" "get-entry" "jazz-file" "get-base" "string->symbol" "name" "let*" "Jazz-File" "eq?" "get-extension" "extension-model" "model" "let" "import-filter?" "when" "File" "false" "recursive?:" "sort?:" "directories?:" "true" "files?:" "iterate-directory" "Directory" "typecase" "pathname" "iterate" "get-workbench" "workbench" "letrec" "report" "dynamic" "function" "validate" "pathnames" "product")}
        {Lisp-Entry "validate" () 683 11 ("false" "message-box" "when" "0" "subseq" "get-presentation" "get-name" ":hyperlink" ":bulleted" "list" "highlight-component" "close-modal-dialog" "action" "get-product" "product" "map" "text" "format-is/are" "format-plural" "format" "header" ">" "too-many?" "max-displayed" "length" "count" "let*" "true" "null?" "if" "get-output" "put" "jazz-file" "dynamic" "function" "List-Factory" "new" "already-defined" "get-workbench" "workbench" "let" "iterate")}
        {Lisp-Entry "activate-selection" () 727 18 ("selected-object" "activate-object")}
        {Lisp-Entry "activate-object" () 731 11 ("activate-project" "bell" "Project" "is-not?" "if" "object")}
        {Lisp-Entry "activate-project" () 738 11 ("update-project-actions" "update-project-titles" "get-application" "appl" "highlight-component" "ensure-expanded" "false" "visible?:" "user-data-row" "row" "set!" "unhighlight-component" "when" "get-tree" "tree" "let" "active-project" "eq?" "unless" "project")}
        {Lisp-Entry "update-catalog" () 759 11 ("update" "load-content" "selected-product" "require-catalog" "catalog" "let" "dynamic" "function" ":wait" "with-cursor")}
        {Lisp-Entry "launch-current" () 772 18 ("current-project" "launch-project")}
        {Lisp-Entry "launch-selection" () 776 18 ("selected-components" "edit-document" "play-sound" "=" "if" "get-extension" "ext" "get-effective-source" "file" "let*" "Product-File" "launch-project" "Project" "typecase" "component" "dynamic" "function" "for-each" "get-tree" "tree" "get-application" "appl" "let")}
        {Lisp-Entry "launch-project" () 793 11 ("get-application" "launch" "project")}
        {Lisp-Entry "execute-current" () 802 18 ("execute-project" "current-project" "project" "let")}
        {Lisp-Entry "execute-selection" () 807 18 ()}
        {Lisp-Entry "execute-project" () 811 11 ("get-application" "execute" "project")}
        {Lisp-Entry "compile-current" () 820 18 ("compile-moniker" "get-controller" "get-moniker" "moniker" "save" "get-modified?" "Document" "is?" "and" "when" "current-document" "guest" "let")}
        {Lisp-Entry "compile-moniker" () 829 18 ("compile-file" "error" "not" "if" "find-source" "project-file" "get-workbench" "workbench" "let*" "moniker")}
        {Lisp-Entry "compile-file" () 837 11 ("execute:" "self" "context:" "file" "information:" "name:" "Thread" "get-duration-in-seconds" "true" "force?:" "build" "Output-Log" "select-palette" "select-results" "clear-results" "Timer" "new" "timer" "get-output-log" "output" "user-message" "prepare-directories" "prepare-maps" "get-product" "project" "thread" "function" "proc" "let" "project-file" "moniker")}
        {Lisp-Entry "preprocess-current" () 865 18 ("preprocess-file" "error" "not" "if" "find-source" "file" "get-workbench" "workbench" "get-controller" "get-moniker" "moniker" "let*" "save" "get-modified?" "Document" "is?" "and" "when" "current-document" "guest" "let")}
        {Lisp-Entry "preprocess-file" () 878 11 ("get-duration-in-seconds" "true" "force?:" "preprocess" "Output-Log" "select-palette" "select-results" "clear-results" "Timer" "new" "timer" "get-output-log" "output" "user-message" "prepare-directories" "prepare-maps" "get-product" "project" "thread" "function" "proc" "let" "file" "moniker")}
        {Lisp-Entry "on-build-current" () 900 11 ("build-project" "bell" "not" "if" "current-project" "project" "let" "evt")}
        {Lisp-Entry "build-current" () 907 18 ("build-project" "current-project" "project" "let" "get-application" "save-all")}
        {Lisp-Entry "build-project" () 914 11 (":force-link?" ":log?" "build" "false" "force-link?" "locate" "get-selected?" "true" "log?" "let" "bell" "Project" "is-not?" "if" "project")}
        {Lisp-Entry "clean-current" () 928 18 ("clean-project" "current-project" "project" "let")}
        {Lisp-Entry "clean-project" () 933 11 ("bell" "Project" "is-not?" "if" "project")}
        {Lisp-Entry "options-current" () 946 18 ("options-project" "current-project" "project" "let")}
        {Lisp-Entry "options-project" () 951 11 ("bell" "Project" "is-not?" "if" "project")}
        {Lisp-Entry "references-current" () 964 18 ("references-project" "current-project" "project" "let")}
        {Lisp-Entry "references-project" () 969 11 ("class-of" "type-name" ":project" "Reference-Finder" "new-frame" "bell" "Project" "is-not?" "if" "project")}
        {Lisp-Entry "view-log" () 981 18 ("view-project-log" "current-project" "project" "let")}
        {Lisp-Entry "view-project-log" () 986 11 ("true" ":wrap?" "edit-document" "bell" "not" "if" "log-file" "file" "get-application" "appl" "let" "project")}
        {Lisp-Entry "on-distribute-current" () 999 11 ("distribute-project" "bell" "not" "if" "selected-project" "project" "let" "evt")}
        {Lisp-Entry "distribute-current" () 1006 18 ("distribute-project" "current-project" "project" "let")}
        {Lisp-Entry "distribute-selection" () 1011 11 ("selected-project" "distribute-project")}
        {Lisp-Entry "distribute-project" () 1015 11 ("true" "set-visible?" "bring-to-front" "get-guest" "compare-trees" "dynamic" "function" ":wait" "with-cursor" "false" "host-visible?:" "ignored-extensions:" "ignored-leaves:" "ignored-nodes:" "left-content:" "right-moniker:" "left-moniker:" "Compare-Directories" "new-frame" "frame" "extensions" "files" "list" "ignored-dirs" "project-distribution-list" "content" "project-distribution-directory" "right" "project-distribution" "left" "backup" "mode" "let*" "project")}
        {Lisp-Entry "selected-object" () 1036 11 ("selected-component" "get-tree" "tree" "let")}
        {Lisp-Entry "selected-objects" () 1041 11 ("selected-components" "get-tree" "tree" "let")}
        {Lisp-Entry "selected-product" () 1046 11 ("Product" "is?" "when" "selected-object" "object" "let")}
        {Lisp-Entry "selected-project" () 1052 11 ("Project" "is?" "when" "selected-object" "object" "let")}
        {Lisp-Entry "current-project" () 1059 11 ("error" "active-project" "not" "if")}
        {Lisp-Entry "new-menu" () 1070 18 ("get-tree" "client:" "Element-Menu" "new" "else" "new-dependencies-menu" "Project-Dependencies" "new-product-menu" "Product" "new-project-menu" "Project" "new-group-menu" "Product-Group" "typecase" "when" "selected-object" "object" "let")}
        {Lisp-Entry "new-group-menu" () 1082 11 ("layout-menu" "cleanup-separators" "update-group/product-menu" "get-tree" "client:" "Group-Menu" "new" "menu" "let" "object")}
        {Lisp-Entry "new-project-menu" () 1090 11 ("layout-menu" "cleanup-separators" "update-group/product-menu" "get-tree" "client:" "Project-Menu" "new" "menu" "let" "object")}
        {Lisp-Entry "new-product-menu" () 1098 11 ("layout-menu" "cleanup-separators" "update-group/product-menu" "false" "synchronize-content" "locate" "set-visible?" "Workbench" "is?" "when" "get-tree" "client:" "Product-Menu" "new" "menu" "let" "object")}
        {Lisp-Entry "new-dependencies-menu" () 1108 11 ("get-tree" "client:" "Dependencies-Menu" "new" "menu" "let" "object")}
        {Lisp-Entry "update-group/product-menu" () 1113 11 ("import-directory" "import-files" "false" "install-product" "locate" "set-visible?" "1" "get-selection" "length" ">" "when" "get-tree" "tree" "let" "menu")}
        {Lisp-Entry "install-policy" () 1121 11 ("invalidate-cell" "format" "set-title" "get-cell-data" "node" "0" "Cell" "cell" "get-tree" "tree" "let*" "Current-Policy" "set!" "policy")}
        {Lisp-Entry "describe-state" () 1136 11 ("resource" "get-resources-hashtable" "category" "get-categories-hashtable" "name" "get-products-hashtable" "gather-keys/values" "when" "0" "subseq" "if" "product" "bind" "for-each" "5" "length" ">" "more?" "car" "class-of" "type-name" "pair" "dynamic" "function" "key:" "designer" "get-product-designers" "" "sort" "pairs" "let*" "active-project" ":console" "format" "get-workbench" "workbench" "let" "pos")}}
      {Lisp-Entry "Synchronize-Border" () 1182 7 ("tree" "fill" "layout-type:" "content" "vscroll?:" "hscroll?:" "flat?:" "Outline-Border" "name:" "Color" "border-color:" "solid" "border-type:" "Border-View")}
      {Lisp-Entry "Policies-Menu" () 1199 7 ("Context-Menu")
        {Lisp-Entry "finish" () 1202 11 (":policy" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "title:" "Current-Policy" "eq?" "checked?:" "self" "parent:" "Check-Item" "new" "get-title" "title" "get-name" "name" "let" "policy" "dynamic" "function" "for-each" "get-children" "policies" "build" "get-preferences" "pref" "let*" "nextmethod" "rest")}
        {Lisp-Entry "on-action" () 1213 11 ("install-policy" ":policy" "get-property" "policy" "get-application" "appl" "let" "evt")}}
      {Lisp-Entry "Group-Menu" () 1225 7 ("synchronize-content" "import-directory" "import-files" "cut" "install-product" "add-group" "workbench-manager" "Action" "action:" "Bitmap-Resource" "icon:" "add-item" "before:" "title:" "add-file" "name:" "Component-Menu")}
      {Lisp-Entry "Product-Menu" () 1244 7 ("update-catalog" "synchronize-content" "import-directory" "import-files" "cut" "install-product" "add-group" "add-file" "workbench-manager" "Action" "action:" "Bitmap-Resource" "icon:" "add-item" "before:" "title:" "edit" "name:" "Component-Menu")}
      {Lisp-Entry "Project-Menu" () 1267 7 ("workbench-manager" "Action" "action:" "default?:" "cut" "before:" "title:" "activate" "name:" "Product-Menu")}
      {Lisp-Entry "Dependencies-Menu" () 1281 7 ("cut" "workbench-manager" "Action" "action:" "Bitmap-Resource" "icon:" "add-item" "before:" "title:" "add-dependency" "name:" "Component-Menu")}
      {Lisp-Entry "Element-Menu" () 1295 7 ("launch" "workbench-manager" "Action" "action:" "Bitmap-Resource" "icon:" "default?:" "cut" "before:" "title:" "edit" "name:" "Component-Menu")
        {Lisp-Entry "on-properties" () 1304 11 ("show-properties" "evt")}}}})
"Workbench-Manager-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Workbench-Manager-Actions.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.workbench.Workbench-Manager-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Workbench-Manager-Actions" () 47 7 ("on-launch" "launch" "on-add-dependency" "add-dependency" "on-activate" "activate" "on-update-catalog" "update-catalog" "on-edit" "edit" "on-synchronize-content" "synchronize-content" "on-import-directory" "import-directory" "on-import-files" "import-files" "on-install-product" "install-product" "on-add-group" "add-group" ":control" "Shortcut" "shortcut:" "on-add-file" ":container" "form:" "Event-Handler" "action-handler:" "add-file" "name:" "Actions")}}})
"Workbench-Tree"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Workbench-Tree.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.builder.workbench.Workbench-Tree" () 37 9 ("jazz")
      {Lisp-Entry "Workbench-Tree" () 48 7 ("show-branches?:" "reorderable?:" "editable?:" "draggable?:" ":icons" "portfolio:" "Descendants-Tree")
        {Lisp-Entry "focus-actions" () 55 11 ("nextmethod" "workbench-tree" "find-actions" "cons")}
        {Lisp-Entry "on-add-file" () 60 11 ("get-manager" "add-file" "evt")}
        {Lisp-Entry "on-add-group" () 64 11 ("get-manager" "add-group" "evt")}
        {Lisp-Entry "get-manager" () 68 11 ("player" "get-guest")}
        {Lisp-Entry "context-menu" () 72 11 ("track-popup-menu" "when" "new-menu" "menu" "dynamic" "function" "with-context-click" "get-manager" "manager" "let" "pos")}
        {Lisp-Entry "can-copy?" () 84 11 ("false")}
        {Lisp-Entry "can-paste-properties?" () 88 11 ("false")}
        {Lisp-Entry "get-draggable?" () 92 11 ("false")}
        {Lisp-Entry "update-selection" () 97 11 ("selected-components" "expand-state")}
        {Lisp-Entry "use-add-menu?" () 101 11 ("false")}
        {Lisp-Entry "row-state" () 105 11 ("collapsed" "expanded" "1" "" "if" "level" "update?" "component")}
        {Lisp-Entry "double-click" () 111 11 ("launch-selection" "Group" "Product" "or" "unless" "nextmethod" "activate-selection" "Project" "is?" "if" "selected-component" "component" "get-manager" "manager" "let" "pos")}
        {Lisp-Entry "return-press" () 122 11 ("launch-selection" "Group" "unless" "activate-selection" "Project" "is?" "if" "selected-component" "component" "get-manager" "manager" "let" "key")}
        {Lisp-Entry "receive-files" () 132 11 ("bell" "ascendant-product" "import-pathnames" "Product-Group" "Product" "is?" "or" "get-manager" "manager" "get-row" "get-user-data" "get-workbench" "not" "if" "data" "view->tree" "cell" "let*" "pathnames" "pos")}
        {Lisp-Entry "addable-root-classes" () 143 11 ("Module" "Project" "Group" "list")}}}})
"Workbench-Tree-Actions"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "workbench" "Workbench-Tree-Actions.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder.workbench.Workbench-Tree-Actions" () 37 9 ("jazz")
      {Lisp-Entry "Workbench-Tree-Actions" () 47 7 ("on-add-group" "add-group" ":control" "Shortcut" "shortcut:" "on-add-file" ":focus" "Event-Handler" "action-handler:" "add-file" "name:" "Actions")}}})
"Workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "Workspace.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao.Workspace" () 37 9 ("jazz")
      {Lisp-Entry "Workspace" () 40 20 ("Connections&" "int&" "Connection&" "Group&" "User&" "Database&" "variant" "int" "Groups&" "Users&" "Databases&" "short" "short&" "string" "string&" "_DAO")
        {Lisp-Entry "get-Name" () 43 47 ()}
        {Lisp-Entry "put-Name" () 44 47 ()}
        {Lisp-Entry "get-UserName" () 45 47 ()}
        {Lisp-Entry "put-_30_UserName" () 46 47 ()}
        {Lisp-Entry "put-_30_Password" () 47 47 ()}
        {Lisp-Entry "get-IsolateODBCTrans" () 48 47 ()}
        {Lisp-Entry "put-IsolateODBCTrans" () 49 47 ()}
        {Lisp-Entry "get-Databases" () 50 47 ()}
        {Lisp-Entry "get-Users" () 51 47 ()}
        {Lisp-Entry "get-Groups" () 52 47 ()}
        {Lisp-Entry "BeginTrans" () 53 47 ()}
        {Lisp-Entry "CommitTrans" () 54 47 ()}
        {Lisp-Entry "Close" () 55 47 ()}
        {Lisp-Entry "Rollback" () 56 47 ()}
        {Lisp-Entry "OpenDatabase" () 57 47 ()}
        {Lisp-Entry "CreateDatabase" () 58 47 ()}
        {Lisp-Entry "CreateUser" () 59 47 ()}
        {Lisp-Entry "CreateGroup" () 60 47 ()}
        {Lisp-Entry "OpenConnection" () 61 47 ()}
        {Lisp-Entry "get-LoginTimeout" () 62 47 ()}
        {Lisp-Entry "put-LoginTimeout" () 63 47 ()}
        {Lisp-Entry "get-DefaultCursorDriver" () 64 47 ()}
        {Lisp-Entry "put-DefaultCursorDriver" () 65 47 ()}
        {Lisp-Entry "get-hEnv" () 66 47 ()}
        {Lisp-Entry "get-Type" () 67 47 ()}
        {Lisp-Entry "get-Connections" () 68 47 ()}}}})
"Workspace-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Workspace-Menu.fusion"} {Time 128366795480000000L}
    {Lisp-Entry "jazz.ui.menu.Workspace-Menu" () 37 9 ("jazz")
      {Lisp-Entry "Workspace-Menu" () 46 7 ("previous-workspace" "previous" "next-workspace" "next" "next-separator" "full-screen" "maximize/restore" "zoom-vertically" "application" "zoom-horizontally" "zoom-separator" "select-sql" "sql" "select-groupware" "groupware" "select-debugger" "debuger" "select-text" "text" "select-home" "jedi" "Action" "action:" "Bitmap-Resource" "icon:" "home" "select" "name:" "title:" "Menu")}}})
"Workspace-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Workspace-Preferences.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.ui.workspace.Workspace-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Workspace-Preferences" () 50 7 ("Bitmap-Resource" "icon:" "Preferences")
        {Lisp-Entry "accelerator" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "frame-model" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "fullscreen?" () 55 12 ("generate" "accessors" "false")}
        {Lisp-Entry "maximized?" () 56 12 ("generate" "accessors" "false")}
        {Lisp-Entry "preserve-visibility?" () 57 12 ("generate" "accessors" "false")}
        {Lisp-Entry "to-restore" () 60 8 ()}
        {Lisp-Entry "apply-preferences" () 72 11 ("false" "activate" "true" "Locked-Activations?" "begin" "unwind-protect" "deactivate" "get-host" "get-guest" "set!" "Docked-Root" "is?" "get-focused-root" "root" "Selected-Workspace" "when" "palette" "let" "validate-focus" "rest")}
        {Lisp-Entry "activate" () 92 11 ("fullscreen?" "acquire-focus" "when" "first-child" "first" "focus?:" "class-of" "select-palette" "workspace:" "activate" "workspace" "process-application-event" "update-status" "set-visible?" "update-menubar-buttons" "process-activation" "true" "maximized?" "set-maximized?" "Selected-Workspace" "children" "cons" "set!" "apply-preferences" "singleton-palette" "autoload" "class" "get-name" "name" "let*" "self" "set-preferences" "apply-to" "begin" "Splitter-Preferences" "is?" "if" "preferences" "for-each" "process-frames" "collect-visibility" "visibility" "false" "full-screen-stage" "close-palettes" "dynamic" "function" "with-locked-update" "palettes" "get-workspace-splitter" "splitter" "get-toplevel" "toplevel" "get-stage" "stage" "get-application" "appl" "let" "palette")}
        {Lisp-Entry "update-status" () 133 18 ("get-icon" "set-icon" "get-title" "set-title" "when" "workspace" "find-component" "essay" "label" "get-status-bar" "status" "get-application" "appl" "let*")}
        {Lisp-Entry "collect-visibility" () 142 11 ("false" "true" "cons" "null?" "to-restore" "preserve-visibility?" "not" "name" "memq?" "and" "or" "effective-frame-workspaces" "list" "if" "lst" "get-workspace" "ws" "when" "get-guest" "guest" "get-visible?" "visible?" "let" "frame" "dynamic" "function" "map" "get-children" "frames" "get-stage" "stage" "let*")}
        {Lisp-Entry "process-frames" () 158 11 ("ensure-displayed" "maximized?" "unless" "set-visible?" "eq?" "when" "visible?" "frame" "bind" "info" "dynamic" "function" "for-each" "flag" "visibility")}
        {Lisp-Entry "process-activation" () 168 11 ("client-activate" "view" "dynamic" "function" "for-each-docked" "stage-activate" "null?" "if" "get-windows" "frames" "get-stage" "stage" "let*")}
        {Lisp-Entry "deactivate" () 178 11 ("get-visible?" "frame" "dynamic" "function" "collect-if" "to-restore" "set!" "get-children" "frames" "get-stage" "stage" "let*" "preserve-visibility?" "when")}
        {Lisp-Entry "get-domain" () 193 11 ("nextmethod" "else" "Boolean-Domain" "new" "preserve-visibility?" "maximized?" "fullscreen?" "field-name" "case" "property")}
        {Lisp-Entry "property-presentation" () 200 11 ("nextmethod" "else" "preserve-visibility?" "frame-model" "accelerator" "maximized?" "fullscreen?" "field-name" "case" "property")}
        {Lisp-Entry "get-addable-classes" () 211 11 ("Stage-Preferences" "Docked-Preferences" "Pad-Preferences" "Splitter-Preferences" "list")}
        {Lisp-Entry "get-categorized-properties" () 221 11 ("preserve-visibility?" "frame-model" "accelerator" "maximized?" "fullscreen?" "icon" "title")}
        {Lisp-Entry "get-row-instance" () 226 11 ("nextmethod" "else" "Boolean-Row" "new" "preserve-visibility?" "maximized?" "fullscreen?" "field-name" "case" "property")}}}})
"Workspace-Splitter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Workspace-Splitter.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.ui.workspace.Workspace-Splitter" () 37 9 ("jazz")
      {Lisp-Entry "Workspace-Splitter" () 46 7 ("center" "location:" "Splitter-Window" "View-Player-Class")
        {Lisp-Entry "preferences" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "install" () 56 11 ("stage-border" "name:" "self" "parent:" "parent" "stage-border-class" "new" "nextmethod" "rest")}
        {Lisp-Entry "get-stage-border" () 66 18 ("stage-border" "child")}
        {Lisp-Entry "get-stage" () 70 18 ("get-stage-border" "get-stage")}
        {Lisp-Entry "draw" () 79 11 ("top" "edges:" "sunken" "outer:" "raised" "inner:" "draw-edge" "get-client-rect" "bounds" "with" "nextmethod" "paint" "dc")}}}})
"Workspaces"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "Workspaces.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao.Workspaces" () 37 9 ("jazz")
      {Lisp-Entry "Workspaces" () 40 20 ("Workspace&" "variant" "_DynaCollection")
        {Lisp-Entry "get-Item" () 43 47 ()}}}})
"Workspaces-Menu"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "menu" "Workspaces-Menu.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.menu.Workspaces-Menu" () 37 9 ("jazz")
      {Lisp-Entry "popup-workspaces-menu" () 46 20 ("Workspaces-Menu" "new" "track-popup-menu" "2" "length" ">=" "get-children" "when" "false" "error?:" "workspaces" "get-preferences" "preferences" "let" "pos" "view")}
      {Lisp-Entry "Workspaces-Menu" () 54 7 ("Context-Menu")
        {Lisp-Entry "install" () 57 11 ("insert-workspaces" "nextmethod" "rest")}
        {Lisp-Entry "insert-workspaces" () 62 11 ("Separator" "is?" "if" "eq?" "unless" "workspace" "dynamic" "function" "for-each" "self" "parent:" "Separator-Item" "new" "=" "insert-workspace" "when" "find-component" "default" "get-children" "workspaces" "get-preferences" "preferences" "selected-workspace" "selected" "let*")}
        {Lisp-Entry "insert-workspace" () 78 11 ("true" "set-selected?" "when" "workspace:" "list" "properties:" "on-action" "method-name:" "target:" "Event-Handler" "action-handler:" "icon:" "title:" "self" "parent:" "Radio-Item" "new" "item" "Bitmap-Resource" "get-icon" "icon" "get-presentation" "if" "title" "let*" "selected?" "workspace")}
        {Lisp-Entry "on-action" () 86 11 ("apply-preferences" "workspace:" "get-property" "workspace" "let" "evt")}}}})
"Workspaces-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "Workspaces-Preferences.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.ui.workspace.Workspaces-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "Workspaces-Preferences" () 46 7 ("title:" "Preferences")
        {Lisp-Entry "active" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "toolbar-classes" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "associations" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "walk-form" () 64 16 ("push-reference" "in-manifest?" "when" "cdr" "toolbar-class" "info" "dynamic" "function" "for-each" "get-property" "toolbar-classes" "let" "form" "analyser")}
        {Lisp-Entry "can-rename-component?" () 78 11 ("false")}
        {Lisp-Entry "can-delete-component?" () 82 11 ("false")}
        {Lisp-Entry "can-move-component?" () 86 11 ("false")}
        {Lisp-Entry "can-copy-component?" () 90 11 ("false")}
        {Lisp-Entry "get-addable-classes" () 94 11 ("Workspace-Preferences" "list")}
        {Lisp-Entry "get-addable-details" () 99 11 ("preserve-visibility?" "maximized?" "fullscreen?" "frame-model" "accelerator" "name-info")}
        {Lisp-Entry "get-row-instance" () 103 11 ("nextmethod" "else" "Association-List-Row" "associations" "Toolbar-Class-List-Row" "new" "toolbar-classes" "field-name" "case" "property")}}
      {Lisp-Entry "Toolbar-Class-List-Row" () 115 7 ("List-Row")
        {Lisp-Entry "get-subrow-class" () 118 11 ("Toolbar-Class-Row")}
        {Lisp-Entry "add-value" () 122 11 ("class:" "cdr" "car" "self" "add-row" "class" "value")}
        {Lisp-Entry "new-value" () 126 11 ()}}
      {Lisp-Entry "Toolbar-Class-Row" () 135 7 ("Value-Row")
        {Lisp-Entry "present" () 143 11 ("format" "model")}}
      {Lisp-Entry "Association-List-Row" () 152 7 ("List-Row")
        {Lisp-Entry "get-subrow-class" () 155 11 ("Association-Row")}
        {Lisp-Entry "add-value" () 159 11 ("class:" "cdr" "car" "self" "add-row" "class" "value")}
        {Lisp-Entry "new-value" () 163 11 ()}}
      {Lisp-Entry "Association-Row" () 172 7 ("Value-Row")
        {Lisp-Entry "present" () 180 11 ("format" "model")}}}})
"World"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "lib" "World" "Development" "Units" "World.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "?" () 37 4 ()}
    {Lisp-Entry "World" () 40 7 ("WinKernel" "WinBase" "System" "Utilities" "Language" "Process")
      {Lisp-Entry "start-process" () 43 11 ("exit-process" "format" "message-box" "clocks/second" "clock" "-" "/" "seconds" "launch-time:" "getf" "launch-time" "let" "rest")}}})
"World-Project"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "lib" "World" "World-Project.fusion"} {Time 128360671600000000L}
    {Lisp-Entry "world" () 37 4 ()}
    {Lisp-Entry "World-Project" () 40 7 ("World-Project" "File" "source:" "Process-Module" "reference" "Library-Module" "Slayer-Module" "Kernel-Module" "include" "kind:" "Boot-Module" "dependencies" "name:" "Release" "anonymous-build:" "console" "output-type:" "World" "application-class:" "title:" "Project")
      {Lisp-Entry "project-binaries" () 56 11 ("project-distribution")}}})
"X"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "X.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "test.X" () 0 9 ("jazz")
      {Lisp-Entry "X" () 6 7 ("Object")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "modules" "X.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.modules.X" () 37 9 ("jazz")
      {Lisp-Entry "X" () 45 7 ("Object")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "X.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.X" () 37 9 ("jazz")
      {Lisp-Entry "X" () 45 7 ("Object")
        {Lisp-Entry "a" () 48 8 ("generate")}
        {Lisp-Entry "b" () 49 8 ("generate" "2")}
        {Lisp-Entry "test" () 52 11 ("g" "f" "x")}
        {Lisp-Entry "access" () 57 11 ("get-b" "get-a" "list" "x")}
        {Lisp-Entry "f" () 61 11 ("f" "x")}}
      {Lisp-Entry "g" () 65 26 ("X.g" "x")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "suite" "X.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.validation.suite.X" () 37 9 ("jazz")
      {Lisp-Entry "X" () 45 7 ("Object")
        {Lisp-Entry "a" () 48 8 ("generate")}
        {Lisp-Entry "b" () 49 8 ("generate" "2")}
        {Lisp-Entry "print" () 52 11 ("format" "+" "j" "1" "i" "let*" "function" "print-unreadable" "b" "a" "with-slots" "detail" "output" "x")}
        {Lisp-Entry "f" () 69 11 ("f" "x")}
        {Lisp-Entry "g" () 73 26 ("X.g" "x")}
        {Lisp-Entry "foo" () 77 18 ("x:" ":x" "g" "f" "list" "b" "a" "with-slots" "x")}}}})
"X11-Window"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "x11" "X11-Window.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.x11.X11-Window" () 0 9 ("jazz")
      {Lisp-Entry "X11-Window" () 11 7 ("Object")
        {Lisp-Entry "display" () 13 8 ("generate")}
        {Lisp-Entry "window" () 14 8 ("generate")}
        {Lisp-Entry "visual" () 15 8 ("generate")}
        {Lisp-Entry "width" () 17 8 ("generate")}
        {Lisp-Entry "height" () 18 8 ("generate")}
        {Lisp-Entry "position-x" () 19 8 ("generate")}
        {Lisp-Entry "position-y" () 20 8 ("generate")}
        {Lisp-Entry "border-width" () 21 8 ("generate")}
        {Lisp-Entry "surface" () 25 8 ("generate")}
        {Lisp-Entry "mem-surface" () 26 8 ("generate")}
        {Lisp-Entry "initialize" () 28 18 ("init-all" "set-display" "set-border-width" "set-position-y" "set-position-x" "set-height" "set-width" "display" "border-width" "y" "x" "height" "width" "self")}
        {Lisp-Entry "init-all" () 37 11 ("create-mem-surface" "create-surface" "default-mask" "select-mask" "create-window" "self")}
        {Lisp-Entry "create-window" () 43 11 ("0" "get-visual" "InputOutput" "CopyFromParent" "get-border-width" "get-height" "get-width" "get-position-y" "get-position-x" "XCreateWindow" "set-window" "XDefaultVisual" "set-visual" "XSetWindowAttributes-make" "attr" "XRootWindow" "root" "XScreenOfDisplay" "screen" "get-display" "XDefaultScreen" "screen-no" "let*" "self")}
        {Lisp-Entry "select-mask" () 62 11 ("get-window" "get-display" "XSelectInput" "mask" "self")}
        {Lisp-Entry "create-surface" () 65 11 ("get-visual" "x11-visual:" "get-window" "x11-window:" "get-display" "x11-display:" "get-height" "get-width" "Cairo-X11-Surface" "new" "set-surface" "self")}
        {Lisp-Entry "create-mem-surface" () 68 11 ("get-surface" "get-height" "get-width" "Cairo-Memory-Surface" "new" "set-mem-surface" "self")}
        {Lisp-Entry "event-handler" () 72 18 ("unprocessed" "else" "XEvent-xclient-ref" "client-message" "ClientMessage" "XEvent-xdestroywindow-ref" "destroy-notify" "DestroyNotify" "XEvent-xconfigure-ref" "configure-notify" "ConfigureNotify" "XEvent-xexpose-ref" "expose" "Expose" "focus-out" "FocusOut" "XEvent-xfocus-ref" "focus-in" "FocusIn" "leave-notify" "LeaveNotify" "XEvent-xcrossing-ref" "enter-notify" "EnterNotify" "XEvent-xmotion-ref" "motion-notify" "MotionNotify" "button-release" "ButtonRelease" "XEvent-xbutton-ref" "button-press" "ButtonPress" "key-release" "KeyRelease" "XEvent-xkey-ref" "key-press" "KeyPress" "=" "cond" "XEvent-type-ref" "type" "let" "ev" "self")}
        {Lisp-Entry "draw" () 91 11 ("close" "draw-caption" "rect-intersect?" "if" "Rect" "new" "rect" "let" "paint" "White" "set-color" "inval" "surface" "self")}
        {Lisp-Entry "show-window" () 103 18 ("XFlush" "get-window" "get-display" "XMapWindow" "window")}
        {Lisp-Entry "hide-window" () 107 18 ("XFlush" "get-window" "get-display" "XUnmapWindow" "window")}
        {Lisp-Entry "destroy-window" () 111 18 ("XFlush" "get-window" "get-display" "XDestroyWindow" "self")}
        {Lisp-Entry "key-press" () 121 11 ("exit" "ev" "self")}
        {Lisp-Entry "key-release" () 125 11 ("processed" "ev" "self")}
        {Lisp-Entry "button-press" () 129 11 ("mouse-wheel-down" "Button5" "mouse-wheel-up" "Button4" "right-button-press" "Button3" "middle-button-press" "Button2" "left-button-press" "Button1" "=" "cond" "XButtonEvent-button-ref" "button" "let" "ev" "self")}
        {Lisp-Entry "left-button-press" () 144 11 ("processed" "ev" "self")}
        {Lisp-Entry "right-button-press" () 148 11 ("processed" "ev" "self")}
        {Lisp-Entry "middle-button-press" () 152 11 ("processed" "ev" "self")}
        {Lisp-Entry "mouse-wheel-up" () 156 11 ("processed" "ev" "self")}
        {Lisp-Entry "mouse-wheel-down" () 160 11 ("processed" "ev" "self")}
        {Lisp-Entry "button-release" () 164 11 ("processed" "else" "right-button-release" "Button3" "middle-button-release" "Button2" "left-button-release" "Button1" "=" "cond" "XButtonEvent-button-ref" "button" "let" "ev" "self")}
        {Lisp-Entry "left-button-release" () 177 11 ("processed" "ev" "self")}
        {Lisp-Entry "middle-button-release" () 181 11 ("processed" "ev" "self")}
        {Lisp-Entry "right-button-release" () 185 11 ("processed" "ev" "self")}
        {Lisp-Entry "motion-notify" () 189 11 ("processed" "ev" "self")}
        {Lisp-Entry "enter-notify" () 193 11 ("processed" "ev" "self")}
        {Lisp-Entry "leave-notify" () 197 11 ("processed" "ev" "self")}
        {Lisp-Entry "focus-in" () 201 11 ("processed" "ev" "self")}
        {Lisp-Entry "focus-out" () 205 11 ("processed" "ev" "self")}
        {Lisp-Entry "expose" () 209 11 ("processed" "get-surface" "bit-blit" "draw" "Rect" "new" "inval" "get-mem-surface" "mem-surface" "XExposeEvent-height-ref" "height" "XExposeEvent-width-ref" "width" "XExposeEvent-y-ref" "y" "XExposeEvent-x-ref" "exact->inexact" "x" "let*" "ev" "self")}
        {Lisp-Entry "configure-notify" () 221 11 ("processed" "set-height" "set-width" "get-surface" "change-size" "begin" "get-height" "get-width" "=" "and" "not" "if" "XConfigureEvent-height-ref" "new-height" "XConfigureEvent-width-ref" "new-width" "let" "ev" "self")}
        {Lisp-Entry "destroy-notify" () 233 11 ("processed" "ev" "self")}
        {Lisp-Entry "client-message" () 237 11 ("processed" "ev" "self")}}
      {Lisp-Entry "unprocessed" () 242 12 ("unprocessed")}
      {Lisp-Entry "processed" () 243 12 ("processed")}
      {Lisp-Entry "exit" () 244 12 ("exit")}
      {Lisp-Entry "default-mask" () 246 12 ("StructureNotifyMask" "ExposureMask" "FocusChangeMask" "LeaveWindowMask" "EnterWindowMask" "PointerMotionMask" "ButtonReleaseMask" "ButtonPressMask" "KeyReleaseMask" "KeyPressMask" "+")}}})
"XHTML-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "xhtml" "XHTML-Parser.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jazz.jml.xhtml.XHTML-Parser" () 37 9 ("jazz")
      {Lisp-Entry "XHTML-Parser" () 45 7 ("JML-Parser")
        {Lisp-Entry "Valid-Tags" () 53 14 ("var" "ul" "u" "tt" "tr" "title" "thead" "th" "tfoot" "textarea" "td" "tbody" "table" "sup" "sub" "style" "strong" "strike" "span" "small" "select" "script" "samp" "s" "q" "pre" "param" "p" "option" "optgroup" "ol" "object" "noscript" "noframes" "meta" "menu" "map" "link" "li" "legend" "label" "kbd" "isindex" "ins" "input" "img" "iframe" "i" "html" "hr" "head" "h6" "h5" "h4" "h3" "h2" "h1" "frameset" "frame" "form" "font" "fieldset" "em" "dt" "dl" "div" "dir" "dfn" "del" "dd" "colgroup" "col" "code" "cite" "center" "caption" "button" "br" "body" "blockquote" "big" "bdo" "basefont" "base" "b" "area" "applet" "address" "acronym" "abbr" "a")}
        {Lisp-Entry "tag-valid?" () 147 11 ("Valid-Tags" "memq?" "tag")}}}})
"XHTML-Renderer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "xhtml" "XHTML-Renderer.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.jml.xhtml.XHTML-Renderer" () 40 9 ("jazz")
      {Lisp-Entry "XHTML-Renderer" () 48 7 ("JML-Renderer")
        {Lisp-Entry "Empty-Tags" () 56 14 ("param" "meta" "link" "input" "img" "hr" "frame" "col" "br" "basefont" "base" "area")}
        {Lisp-Entry "Mix-Tags" () 59 14 ("td" "p")}
        {Lisp-Entry "Pre-Tags" () 62 14 ("pre")}
        {Lisp-Entry "Separated-Tags" () 65 14 ("frameset" "body" "head")}
        {Lisp-Entry "Separated2-Tags" () 68 14 ("html")}
        {Lisp-Entry "render" () 77 11 ("0" "false" "render-jml" "printer" "jml")}
        {Lisp-Entry "render-jml" () 81 11 ("render-node" "else" "render-text" "JML-Text" "typecase" "printer" "level" "inside-pre?" "mix?" "simple?" "jml" "context")}
        {Lisp-Entry "render-text" () 89 19 ("format" ">" "if" "char->integer" "n" "c" "dynamic" "function" "for-each" "get-text" "text" "let" "printer" "jml" "context")}
        {Lisp-Entry "render-node" () 99 11 ("render-tag" "get-tag" "tag" "let" "self" "render" "JML-Node" "is-not?" "if" "printer" "level" "inside-pre?" "mix?" "simple?" "jml" "context")}
        {Lisp-Entry "render-tag" () 106 11 ("end-tag" "Separated2-Tags" "render-children" "1" "+" "else" "body" "html" "case" "new-level" "let" "Empty-Tags" "get-properties" "render-value" "render-string" ":string" "car" "eq?" "pair?" "null?" "if" "value" "property" "dynamic" "function" "for-each-property" "*" "unless" "output" "not" "Separated-Tags" "and" "when" "or" "Pre-Tags" "pre?" "Mix-Tags" "memq?" "mix?" "composite?" "preferences" "get-tab-size" "tab" "let*" "printer" "level" "inside-pre?" "parent-mix?" "simple?" "tag" "jml" "context")}
        {Lisp-Entry "render-string" () 143 19 ("cdr" "string" "dynamic" "function" "for-each" "output" "value" "property" "printer" "context")}
        {Lisp-Entry "render-value" () 151 19 ("output" "value" "property" "printer" "context")}
        {Lisp-Entry "render-children" () 155 11 ("get-children" "render-jml" "sub" "dynamic" "function" "for-each" "printer" "level" "inside-pre?" "mix?" "simple?" "jml" "context")}
        {Lisp-Entry "output" () 161 11 ("output-text" "format" "apply" "text" "let" "parameters" "format-string" "printer" "context")}
        {Lisp-Entry "output-text" () 166 19 ("output-to" "text" "printer" "context")}
        {Lisp-Entry "output-to" () 170 11 ("format" "when" "text" "printer")}
        {Lisp-Entry "end-tag" () 175 11 ("format" "tag")}}}})
"XML"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "samples" "XML.fusion"} {Time 128355726660000000L}})
"XML-Attribute"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "model" "XML-Attribute.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.xml.model.XML-Attribute" () 37 9 ("jazz")
      {Lisp-Entry "XML-Attribute" () 45 7 ("XML-Node")
        {Lisp-Entry "namespace" () 48 8 ()}
        {Lisp-Entry "value" () 49 8 ()}
        {Lisp-Entry "initialize" () 52 11 ("value~self" "set!" "nextmethod" "value")}
        {Lisp-Entry "get-namespace" () 62 18 ("namespace")}
        {Lisp-Entry "set-namespace" () 66 18 ("namespace" "set!" "value")}
        {Lisp-Entry "get-value" () 70 18 ("value")}
        {Lisp-Entry "set-value" () 74 18 ("set!" "value")}}}})
"XML-Comment"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "model" "XML-Comment.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.xml.model.XML-Comment" () 37 9 ("jazz")
      {Lisp-Entry "XML-Comment" () 45 7 ("XML-Node")
        {Lisp-Entry "text" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("text~self" "set!" "nextmethod" "text")}
        {Lisp-Entry "get-text" () 61 18 ("text")}
        {Lisp-Entry "set-text" () 65 18 ("text" "set!" "value")}}}})
"XML-Consumer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "transform" "XML-Consumer.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.xml.transform.XML-Consumer" () 37 9 ("jazz")
      {Lisp-Entry "XML-Consumer" () 45 16 ("Object")
        {Lisp-Entry "get-document" () 48 29 ()}
        {Lisp-Entry "begin-document" () 52 29 ()}
        {Lisp-Entry "end-document" () 56 29 ()}
        {Lisp-Entry "begin-element" () 60 29 ("name")}
        {Lisp-Entry "end-element" () 64 29 ("name")}
        {Lisp-Entry "add-attribute" () 68 29 ("value" "name")}
        {Lisp-Entry "text" () 72 29 ("cdata")}
        {Lisp-Entry "comment" () 76 29 ("content")}
        {Lisp-Entry "processing-instruction" () 80 29 ("content")}}}})
"XML-Data"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "model" "XML-Data.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.xml.model.XML-Data" () 37 9 ("jazz")
      {Lisp-Entry "XML-Data" () 45 7 ("XML-Text")}}})
"XML-Document"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "model" "XML-Document.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.xml.model.XML-Document" () 37 9 ("jazz")
      {Lisp-Entry "XML-Document" () 45 7 ("Object")
        {Lisp-Entry "root" () 48 8 ()}
        {Lisp-Entry "get-root" () 56 18 ("root")}
        {Lisp-Entry "load" () 65 18 ("process" "set!" "get-documentElement" "doc-element" "self" "XML-Element" "new" "root" "let" "parse" "load" "put-resolveExternals" "put-validateOnParse" "false" "put-async" "MSXML2.DOMDocument40" "cocreate" "doc" "with-closed" "file")}
        {Lisp-Entry "process" () 76 11 ("MSXML2.NODE_NOTATION" "MSXML2.NODE_DOCUMENT_FRAGMENT" "MSXML2.NODE_DOCUMENT_TYPE" "MSXML2.NODE_DOCUMENT" "process-comment" "MSXML2.NODE_COMMENT" "MSXML2.NODE_PROCESSING_INSTRUCTION" "MSXML2.NODE_ENTITY" "MSXML2.NODE_ENTITY_REFERENCE" "process-cdata" "MSXML2.NODE_CDATA_SECTION" "process-text" "MSXML2.NODE_TEXT" "process-attribute" "MSXML2.NODE_ATTRIBUTE" "process-element" "MSXML2.NODE_ELEMENT" "process-unimplement" "MSXML2.NODE_INVALID" "get-nodeType" "ecase" "parent" "document" "node")}
        {Lisp-Entry "process-children" () 93 11 ("process" "get-item" "child" "do" "get-length" "below" "0" "from" "n" "for" "loop" "get-childNodes" "lst" "with-closed" "hasChildNodes" "when" "parent" "document" "node")}
        {Lisp-Entry "process-element" () 101 11 ("get-nodeName" "name:" "XML-Element" "new" "parent" "document" "node")}
        {Lisp-Entry "process-attribute" () 105 11 ("XML-Attribute" "new" "parent" "document" "node")}
        {Lisp-Entry "process-text" () 109 11 ("XML-Text" "new" "parent" "document" "node")}
        {Lisp-Entry "process-cdata" () 113 11 ("XML-Data" "new" "parent" "document" "node")}
        {Lisp-Entry "process-comment" () 117 11 ("XML-Comment" "new" "parent" "document" "node")}
        {Lisp-Entry "process-unimplement" () 121 11 ("process-unimplement" "unimplemented" "parent" "document" "node")}}}})
"XML-Element"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "model" "XML-Element.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.xml.model.XML-Element" () 37 9 ("jazz")
      {Lisp-Entry "XML-Element" () 45 7 ("XML-Node")}}})
"XML-Explorer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "text" "XML-Explorer.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.xml.text.XML-Explorer" () 37 9 ("jazz")
      {Lisp-Entry "XML-Explorer" () 45 7 ("CppJava-Explorer")}}})
"XML-Formatter"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "transform" "XML-Formatter.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.xml.transform.XML-Formatter" () 37 9 ("jazz")
      {Lisp-Entry "XML-Formatter" () 50 7 ("XML-Handler" "Object")
        {Lisp-Entry "pretty-print?" () 53 8 ("false")}
        {Lisp-Entry "level" () 54 8 ()}
        {Lisp-Entry "indentation-width" () 55 8 ()}
        {Lisp-Entry "ostream" () 56 8 ()}
        {Lisp-Entry "printing-element?" () 57 8 ()}
        {Lisp-Entry "initialize" () 60 11 ("printing-element?" "0" "level" "indentation-width~self" "ostream~self" "pretty-print?~self" "set!" "nextmethod" "2" "indentation" "indentation:" ":console" "stream" "stream:" "false" "pretty" "pretty:")}
        {Lisp-Entry "close-start-tag" () 69 19 ("false" "set!" "ostream" "format" "printing-element?" "when")}
        {Lisp-Entry "increment-level" () 75 19 ("level" "increase!")}
        {Lisp-Entry "decrease-level" () 79 19 ("level" "decrease!")}
        {Lisp-Entry "get-document" () 83 11 ()}
        {Lisp-Entry "begin-document" () 87 11 ()}
        {Lisp-Entry "end-document" () 91 11 ()}
        {Lisp-Entry "begin-element" () 95 11 ("true" "printing-element?" "set!" "increment-level" "level" "ostream" "format" "pretty-print?" "when" "close-start-tag" "name")}
        {Lisp-Entry "end-element" () 104 11 ("false" "set!" "level" "pretty-print?" "when" "ostream" "format" "printing-element?" "if" "decrease-level" "name")}
        {Lisp-Entry "add-attribute" () 114 11 ("ostream" "format" "value" "name")}
        {Lisp-Entry "text" () 118 11 ("level" "ostream" "format" "pretty-print?" "when" "close-start-tag" "cdata")}
        {Lisp-Entry "comment" () 125 11 ("comment" "unimplemented" "content")}
        {Lisp-Entry "processing-instruction" () 129 11 ("processing-instruction" "unimplemented" "content")}}}})
"XML-Handler"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "transform" "XML-Handler.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.xml.transform.XML-Handler" () 37 9 ("jazz")
      {Lisp-Entry "XML-Handler" () 45 11 ()
        {Lisp-Entry "get-document" () 48 35 ()}
        {Lisp-Entry "begin-document" () 49 35 ()}
        {Lisp-Entry "end-document" () 50 35 ()}
        {Lisp-Entry "begin-element" () 51 35 ("name")}
        {Lisp-Entry "end-element" () 52 35 ("name")}
        {Lisp-Entry "add-attribute" () 53 35 ("value" "name")}
        {Lisp-Entry "text" () 54 35 ("cdata")}
        {Lisp-Entry "comment" () 55 35 ("content")}
        {Lisp-Entry "processing-instruction" () 56 35 ("content")}}}})
"XML-Node"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "model" "XML-Node.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.xml.model.XML-Node" () 37 9 ("jazz")
      {Lisp-Entry "XML-Node" () 45 7 ("Object")
        {Lisp-Entry "name" () 48 8 ()}
        {Lisp-Entry "document" () 49 8 ()}
        {Lisp-Entry "parent" () 50 8 ()}
        {Lisp-Entry "children" () 51 8 ()}
        {Lisp-Entry "initialize" () 54 11 ("parent~self" "document~self" "name~self" "set!" "nextmethod" "name" "name:" "parent" "document")}
        {Lisp-Entry "get-name" () 66 18 ("name")}
        {Lisp-Entry "get-document" () 70 18 ("document")}
        {Lisp-Entry "get-parent" () 74 18 ("parent")}
        {Lisp-Entry "set-parent" () 78 18 ("parent" "set!" "value")}
        {Lisp-Entry "get-children" () 82 18 ("children")}
        {Lisp-Entry "set-children" () 86 18 ("self" "set-parent" "child" "dynamic" "function" "for-each" "children" "set!" "value")}}}})
"XML-Parser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "parser" "XML-Parser.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.xml.parser.XML-Parser" () 37 9 ("jazz")
      {Lisp-Entry "XML-Parser" () 52 7 ("Object")
        {Lisp-Entry "Start-Marker" () 55 14 ()}
        {Lisp-Entry "End-Marker" () 58 14 ()}
        {Lisp-Entry "Closing-Marker" () 61 14 ()}
        {Lisp-Entry "Property-Separator" () 64 14 ()}
        {Lisp-Entry "reader" () 68 8 ()}
        {Lisp-Entry "initialize" () 71 11 ("setup-reader" "nextmethod" "text" "text:")}
        {Lisp-Entry "setup-reader" () 76 11 ("create-reader" "reader" "set!" "text")}
        {Lisp-Entry "create-reader" () 80 11 ("set-readtable" "End-Marker" "TTerminator" "Property-Separator" "set-syntax" "Readtable" "readtable" "String-Reader" "new" "reader" "let" "text")}
        {Lisp-Entry "parse-text" () 89 18 ("read-children")}
        {Lisp-Entry "read-tag" () 93 11 ("read-partial-tag" "Start-Marker" "validate-char")}
        {Lisp-Entry "read-partial-tag" () 98 11 ("list" "read-closing-tag" "read-children" "children" "End-Marker" "validate-char" "read-properties" "properties" "reader" "read" "tag" "let")}
        {Lisp-Entry "read-closing-tag" () 107 11 ("End-Marker" "validate-read" "Closing-Marker" "validate-char" "tag")}
        {Lisp-Entry "read-properties" () 113 11 ("get-output" "put" "value" "Property-Separator" "validate-char" "read" "property" "End-Marker" "peek-char" "/=" "while" "reader" "skip-whites" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "read-children" () 126 11 ("read-partial-tag" "Closing-Marker" "validate-eof" "peek-char" "next" "false" "set!" "Start-Marker" "not" "begin" "eqv?" "if" "reader" "read-char" "c" "let" "while" "return" "lambda" "call/ec" "reset" "get-output" "put" "unless" "dynamic" "function" "add" "true" "empty?" "String-Printer" "printer" "List-Factory" "new" "fact" "let*")}
        {Lisp-Entry "validate-char" () 155 11 ("String" "coerce" "error" "eqv?" "if" "reader" "read-char" "char" "let" "c")}
        {Lisp-Entry "validate-read" () 162 11 ("error" "eqv?" "if" "reader" "read" "expr" "let" "symbol")}
        {Lisp-Entry "validate-eof" () 169 11 ("error" "eof-object?" "when" "c")}}}})
"XML-Text"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "model" "XML-Text.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.xml.model.XML-Text" () 37 9 ("jazz")
      {Lisp-Entry "XML-Text" () 45 7 ("XML-Node")
        {Lisp-Entry "text" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("text~self" "set!" "nextmethod" "text")}
        {Lisp-Entry "get-text" () 61 18 ("text")}
        {Lisp-Entry "set-text" () 65 18 ("text" "set!" "value")}}}})
"XML-Text-Preferences"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "text" "XML-Text-Preferences.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.xml.text.XML-Text-Preferences" () 37 9 ("jazz")
      {Lisp-Entry "XML-Text-Preferences" () 49 7 ("specifier-color:" "Dark-Blue" "keyword-color:" "definition-color:" "Purple" "line-comment-color:" "Dark-Red" "name:" "Color" "title-color:" "title:" "Code-Text-Preferences")
        {Lisp-Entry "title-color" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "line-comment-color" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "definition-color" () 54 12 ("generate" "accessors")}
        {Lisp-Entry "keyword-color" () 55 12 ("generate" "accessors")}
        {Lisp-Entry "specifier-color" () 56 12 ("generate" "accessors")}
        {Lisp-Entry "keywords" () 57 12 ("generate" "accessors")}
        {Lisp-Entry "completions" () 58 12 ("generate" "accessors")}
        {Lisp-Entry "get-categorized-properties" () 77 11 ("specifier-color" "keyword-color" "definition-color" "line-comment-color" "title-color" "completions" "keywords")}
        {Lisp-Entry "get-row-instance" () 83 11 ("nextmethod" "else" "Completion-List-Row" "completions" "Color-Row" "new" "specifier-color" "keyword-color" "definition-color" "line-comment-color" "title-color" "field-name" "case" "property")}}}})
"XML-Text-View"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "text" "XML-Text-View.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.xml.text.XML-Text-View" () 37 9 ("jazz")
      {Lisp-Entry "XML-Text-View" () 46 7 ("Code-Text-View")
        {Lisp-Entry "install" () 49 11 ("get-specifier-color" "Specifier" "get-keyword-color" "Keyword" "get-definition-color" "Definition" "get-line-comment-color" "Line-Comment" "get-title-color" "color:" "Default" "base:" "Title" "name:" "Text-Style" "new" "add-style" "preferences" "pref" "let" "nextmethod" "rest")}
        {Lisp-Entry "external-name" () 60 16 ("xml-text" "rest")}
        {Lisp-Entry "preferences" () 64 11 ("xml-text" "documents" "get-preferences")}
        {Lisp-Entry "get-constituent-test" () 68 16 ("cpp/java-constituent?")}
        {Lisp-Entry "frame-workspaces" () 77 11 ("text")}
        {Lisp-Entry "favorite-completions" () 86 11 ("xml-text" "documents" "get-preferences" "get-completions")}
        {Lisp-Entry "commented?" () 90 11 ("Line-Comment" "Title" "inherits?" "or" "and" "get-style-at" "style" "let" "pos")}
        {Lisp-Entry "explorer-class" () 102 11 ("XML-Explorer")}
        {Lisp-Entry "get-context" () 111 11 ("xml")}
        {Lisp-Entry "current-name" () 115 11 ("current-expr-range" "name-at")}
        {Lisp-Entry "name-at" () 119 11 ("read-string-element" "element" "=" "if" "0" "length" ">" "get-string" "name" "let" "when" "range")}
        {Lisp-Entry "current-expr" () 128 11 ("current-name")}
        {Lisp-Entry "current-expr-range" () 132 11 ("get-end" "expr-range" "get-selection" "has-selection?" "completion-active?" "not" "and" "if")}
        {Lisp-Entry "expr-range" () 138 11 ("get-range" "outer-expr" "end:" "start:" "self" "XML-Explorer" "new" "expl" "let" "pos")}
        {Lisp-Entry "expr-at" () 144 11 ("expr-range" "name-at" "pos")}
        {Lisp-Entry "headers" () 153 12 ("list")}
        {Lisp-Entry "get-headers" () 158 11 ("headers")}
        {Lisp-Entry "get-first-special?" () 162 11 ("false")}
        {Lisp-Entry "Definitions" () 171 12 ()}
        {Lisp-Entry "get-definitions" () 175 11 ("Definitions")}
        {Lisp-Entry "Keywords" () 184 12 ()}
        {Lisp-Entry "get-keywords" () 188 29 ("Keywords")}
        {Lisp-Entry "Syntax-Targets" () 197 14 ()}
        {Lisp-Entry "Syntax-Automata" () 200 14 ()}
        {Lisp-Entry "syntax-targets" () 204 11 ("compute-syntax-targets" "set!" "Syntax-Targets" "unless")}
        {Lisp-Entry "syntax-automata" () 210 11 ("compute-syntax-automata" "set!" "Syntax-Automata" "unless")}
        {Lisp-Entry "compute-syntax-targets" () 216 11 ("get-keywords" "keyword" "get-definitions" "definition" "str" "dynamic" "function" "map" "false" "line-comment" "list" "append")}
        {Lisp-Entry "compute-syntax-automata" () 222 11 ("cpp/java-constituent?" "self" "true" "syntax-targets" "build-search-automata")}
        {Lisp-Entry "colorize-syntax" () 226 11 ("colorize-comments" "colorize-declarations" "dynamic" "function" "with-safe-explore" "rest")}
        {Lisp-Entry "colorize-type" () 233 11 ("Keyword" "keyword" "Definition" "colorize-keyword" "definition" "Title" "Line-Comment" "colorize-line-comment" "line-comment" "case" "recolorize?" "colorizer" "end" "start" "type" "found")}}}})
"XML-Transformer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "transform" "XML-Transformer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.xml.transform.XML-Transformer" () 44 9 ("jazz")
      {Lisp-Entry "XML-Transformer" () 52 7 ("SXML" "System" "Utilities" "XML-Handler" "Object")
        {Lisp-Entry "handler" () 55 8 ()}
        {Lisp-Entry "initialize" () 58 11 ("handler~self" "set!" "nextmethod" ":console" "handler" "handler:")}
        {Lisp-Entry "get-handler" () 63 29 ("handler")}
        {Lisp-Entry "apply-transformation" () 67 18 ("apply" "rest" "document" "ruleset")}
        {Lisp-Entry "element?" () 76 26 ("sxml-element?" "node")}
        {Lisp-Entry "element-tag" () 80 26 ("sxml-element-tag" "node")}
        {Lisp-Entry "node-children" () 84 26 ("sxml-element-children" "node")}
        {Lisp-Entry "node-attribute" () 88 26 ("sxml-attribute-value" "sxml-attribute?" "if" "assq" "attribute" "sxml-element-attributes" "attributes" "let*" "attribute-name" "node")}
        {Lisp-Entry "get-text" () 96 26 ("sxml-text-data" "node")}
        {Lisp-Entry "get-document" () 105 18 ("get-handler" "get-document")}
        {Lisp-Entry "begin-document" () 109 18 ("get-handler" "begin-document")}
        {Lisp-Entry "end-document" () 113 18 ("get-handler" "end-document")}
        {Lisp-Entry "begin-element" () 117 18 ("get-handler" "begin-element" "tag")}
        {Lisp-Entry "end-element" () 121 18 ("get-handler" "end-element" "tag")}
        {Lisp-Entry "add-attribute" () 125 18 ("get-handler" "add-attribute" "value" "name")}
        {Lisp-Entry "text" () 129 18 ("get-handler" "text" "content")}
        {Lisp-Entry "comment" () 133 18 ("get-handler" "comment" "content")}
        {Lisp-Entry "processing-instruction" () 137 18 ("get-handler" "processing-instruction" "content")}}}})
"XML-Tree-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "transform" "XML-Tree-Viewer.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.xml.transform.XML-Tree-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "XML-Tree-Viewer" () 48 7 ("entries" "notes" "width:" "on-selection-change" "parent:" "selection-handler:" "log-tree" "fill" "layout-type:" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "0" "on-on/off" "selected?:" "on/off" "on-refresh" "refresh" "on-clear" "form:" "Event-Handler" "action-handler:" "Bitmap-Resource" "image-name:" ":icons" "portfolio:" "5" "clear" "name:" "Dimension" "size:" "Point" "position:" "title:" "View")
        {Lisp-Entry "log-tree" () 51 8 ()}
        {Lisp-Entry "viewer" () 52 8 ()}
        {Lisp-Entry "finish" () 72 11 ("refresh" "locate" "log-tree" "set!" "nextmethod" "initargs")}
        {Lisp-Entry "resize" () 78 11 ("entries" "notes" "log-tree" "size-figure" "on/off" "refresh" "0" "clear" "locate" "move-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "on-refresh" () 88 18 ("refresh" "evt")}
        {Lisp-Entry "delete-selection" () 92 11 ("on-refresh")}
        {Lisp-Entry "refresh" () 96 18 ("Log" "root-node" "view-log")}
        {Lisp-Entry "view-log" () 100 11 ("get-children" "insert-log" "sub" "for-each" "remove-every-row" "dynamic" "function" "log-tree" "with-update-locked" "log")}
        {Lisp-Entry "insert-log" () 109 11 ("get-children" "insert-log" "sub" "dynamic" "function" "for-each" "user-data:" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "log-tree" "add-row" "subfather" "present" "either" "->string" "title" "let*" "father" "log")}
        {Lisp-Entry "describe-log" () 117 11 ("true" "false" "call-selection-handler" "user-data:" "get-title" "add-header" "entry" "dynamic" "function" "for-each" "when" "get-entries" "close-viewer" "remove-every-header" "invalidate-view" "get-notes" "set-content" "entries" "tab" "notes" "locate" "text" "let" "log")}
        {Lisp-Entry "view-entry" () 132 11 ("entries" "locate" "parent:" "container:" "new" "viewer" "set!" "when" "get-viewer-class" "class" "let" "close-viewer" "entry")}
        {Lisp-Entry "close-viewer" () 142 11 ("set!" "close" "viewer" "when")}
        {Lisp-Entry "on-selection-change" () 148 11 ("view-entry" "get-selection" "entries" "describe-log" "get-row" "get-user-data" "log" "when" "get-single-selection" "selection" "log-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}}}})
"XML-Viewer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "viewer" "XML-Viewer.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "jazz.xml.viewer.XML-Viewer" () 37 9 ("jazz")
      {Lisp-Entry "XML-Viewer" () 48 7 ("notes" "notes-border" "monospace?:" "underline?:" "italic?:" "bold?:" "color:" "point-size:" "font-name:" "Font" "font:" "Default" "Text-Style" "default-style:" "text" "text-border" "vert" "second" "width:" "on-selection-change" "form:" "Event-Handler" "selection-handler:" ":icons" "portfolio:" "xml-tree" "fill" "content" "vscroll?:" "document" "entry" "style:" "edge" "border-type:" "first" "xml-border" "division:" "relative" "mode:" "horz" "orientation:" "split" "state:" "center" "6" "0" "Rect" "layout-insets:" "flow" "north" "location:" "Dimension" "size:" "toolbar" "name:" "border" "layout-type:" "title:" "Layout-View")
        {Lisp-Entry "document" () 51 12 ("set-document" "get-document")}
        {Lisp-Entry "finish" () 76 11 ("refresh" "nextmethod" "initargs")}
        {Lisp-Entry "frame-icon" () 87 16 ("Bitmap-Resource")}
        {Lisp-Entry "frame-title" () 92 16 ()}
        {Lisp-Entry "frame-position" () 97 16 ("Point")}
        {Lisp-Entry "frame-size" () 102 16 ("Point")}
        {Lisp-Entry "frame-workspaces" () 106 11 ("home")}
        {Lisp-Entry "get-document" () 115 18 ("document")}
        {Lisp-Entry "set-document" () 119 18 ("refresh" "document" "set!" "value")}
        {Lisp-Entry "resize" () 129 11 ("notes-border" "text-border" "0" "xml-border" "locate" "size-figure" "nextmethod" "dv" "dh")}
        {Lisp-Entry "refresh" () 136 18 ("view-text" "document" "view-tree" "clear-node")}
        {Lisp-Entry "clear-node" () 142 11 ("clear-all" "notes" "locate" "text" "let")}
        {Lisp-Entry "view-tree" () 154 11 ("insert-node" "node" "for-each" "collect-children" "child-nodes" "get-childNodes" "lst" "with-closed" "hasChildNodes" "and" "when" "remove-every-row" "dynamic" "function" "with-update-locked" "xml-tree" "locate" "tree" "let" "document")}
        {Lisp-Entry "insert-node" () 167 11 ("insert-node" "subnode" "dynamic" "function" "for-each" "collect-children" "child-nodes" "get-childNodes" "lst" "with-closed" "hasChildNodes" "when" "Bitmap-Resource" "image:" "title:" "Tree-Node" "new" "list" "children:" "father:" "add-row" "subfather" "get-nodeName" "title" "xml-tree" "locate" "tree" "let*" "father" "node")}
        {Lisp-Entry "collect-children" () 179 11 ("get-item" "collect" "get-length" "below" "0" "from" "n" "for" "loop" "lst")}
        {Lisp-Entry "view-text" () 184 11 ("get-xml" "set-string-content" "clear-all" "null?" "if" "locate" "text" "let" "document")}
        {Lisp-Entry "describe-node" () 191 11 ("get-nodeType" "get-nodeValue" "get-nodeName" "insert-bulleted-line" "locate" "notes" "let" "node")}
        {Lisp-Entry "on-selection-change" () 203 11 ("describe-node" "get-row" "get-user-data" "node" "when" "get-single-selection" "selection" "xml-tree" "get-name" "case" "get-sender" "sender" "let" "evt")}}}})
"XSLT"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "transform" "XSLT.fusion"} {Time 128363204920000000L}
    {Lisp-Entry "XSLT" () 42 9 ("jazz")}})
"Y"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "Y.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "test.Y" () 0 9 ("jazz")
      {Lisp-Entry "Y" () 6 7 ("X")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "suite" "Y.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.suite.Y" () 37 9 ("jazz")
      {Lisp-Entry "Y" () 40 7 ("X")
        {Lisp-Entry "c" () 43 8 ("generate" "5")}
        {Lisp-Entry "d" () 44 8 ("generate" "7")}
        {Lisp-Entry "g" () 47 11 ("nextmethod" "Y.g" "cons" "y")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "modules" "Y.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.modules.Y" () 37 9 ("jazz")
      {Lisp-Entry "Y" () 45 7 ("X")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "Y.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.Y" () 37 9 ("jazz")
      {Lisp-Entry "Y" () 45 7 ("X")
        {Lisp-Entry "g" () 53 11 ("nextmethod" "Y.g" "cons" "y")}}}})
"Z"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "Z.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.Z" () 37 9 ("jazz")
      {Lisp-Entry "Z" () 45 7 ("Y")
        {Lisp-Entry "g" () 48 11 ("nextmethod" "Z.g" "cons" "x")}}}})
"Zip-File"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "compression" "Zip-File.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.library.compression.Zip-File" () 37 9 ("jazz")
      {Lisp-Entry "Zip-File" () 44 7 ("Object")}
      {Lisp-Entry "Zip-File" () 50 7 ("Object")
        {Lisp-Entry "handle" () 53 8 ()}
        {Lisp-Entry "initialize" () 56 11 ("destroy-mandatory" "Ansi-String" "parse" "coerce" "zip-open" "handle" "set!" "initialize" "unimplemented" "nextmethod" "file")}
        {Lisp-Entry "destroy" () 64 11 ("nextmethod" "handle" "zip-close")}
        {Lisp-Entry "with-new-file-in-zip" () 74 18 ("close-file-in-zip" "when" "true" "set!" "open-new-file-in-zip" "begin" "unwind-protect" "false" "created?" "let" "proc" "filename")}
        {Lisp-Entry "write-file" () 85 18 ("write-in-file-in-zip" "dynamic" "function" "with-new-file-in-zip" "block/string" "filename")}
        {Lisp-Entry "open-new-file-in-zip" () 96 18 ("Ansi-String" "coerce" "handle" "zip-open-new-file-in-zip" "open-new-file-in-zip" "unimplemented" "filename")}
        {Lisp-Entry "write-in-file-in-zip" () 102 18 ("handle" "zip-write-in-file-in-zip" "block/string")}
        {Lisp-Entry "close-file-in-zip" () 106 18 ("handle" "zip-close-file-in-zip")}}}})
"Zip-File-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Zip-File-Entry.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.catalog.entry.Zip-File-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Zip-File-Entry" () 45 7 ("File-Entry")
        {Lisp-Entry "print-catalog" () 48 11 ("definitions" "print-catalog" "definition" "dynamic" "function" "for-each" "time" "file" "self" "class-of" "type-name" "identifier-name" "2" "format" "not" "when" "printer" "first?")}
        {Lisp-Entry "update-indexes" () 66 11 ("definitions" "update-indexes" "definition" "dynamic" "function" "for-each" "references-index" "definitions-index")}}}})
"Zipped"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "compression" "Zipped.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.compression.Zipped" () 37 9 ("jazz")
      {Lisp-Entry "Zipped" () 45 7 ("Moniker")
        {Lisp-Entry "get-protocol" () 54 16 ("zip")}
        {Lisp-Entry "construct-literal" () 59 16 ("self" "new" "entry" "file" "context")}
        {Lisp-Entry "extract-name" () 64 23 ("1" "+" "subseq" "null?" "if" "position" "return:" "true" "reversed?:" "find" "pos" "let" "filename")}
        {Lisp-Entry "extract-base" () 72 23 ("extract-name" "extract-base" "filename")}
        {Lisp-Entry "extract-extension" () 77 23 ("1" "+" "subseq" "when" "position" "return:" "true" "reversed?:" "find" "pos" "let" "filename")}
        {Lisp-Entry "compare-object" () 83 11 (":not-equal" "else" ":equal" "get-entry" "get-file" "=" "and" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "compare-pathname" () 93 11 ("get-entry" "ci=" "get-file" "pathname=" "Zipped" "is?" "and" "object")}
        {Lisp-Entry "print" () 99 11 ("get-entry" "get-file" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}
        {Lisp-Entry "get-file" () 111 11 ("self" "JzZippedFile" "get-file" "unimplemented")}
        {Lisp-Entry "get-entry" () 117 18 ("self" "JzZippedEntry" "get-entry" "unimplemented")}
        {Lisp-Entry "exists?" () 128 11 ("get-file" "exists?")}
        {Lisp-Entry "get-writable?" () 132 11 ("get-file" "get-writable?")}
        {Lisp-Entry "set-writable?" () 136 11 ("get-file" "set-writable?" "flag")}
        {Lisp-Entry "writable?" () 140 11 ("get-file" "writable?")}
        {Lisp-Entry "get-modification-time" () 144 11 ("get-file" "get-modification-time")}
        {Lisp-Entry "get-name" () 148 11 ("get-entry" "extract-name" "get-name" "unimplemented")}
        {Lisp-Entry "get-base" () 154 11 ("get-entry" "extract-base" "get-base" "unimplemented")}
        {Lisp-Entry "get-extension" () 160 11 ("get-entry" "extract-extension" "get-extension" "unimplemented")}
        {Lisp-Entry "get-parent" () 166 11 ("get-file")}
        {Lisp-Entry "read-content" () 175 18 ("read-current-file-content" "get-entry" "locate-file" "get-file" "Unzip-File" "new" "unzip" "with-closed")}
        {Lisp-Entry "load-lines" () 181 11 ("read-content" "JzLoadLines" "load-lines" "unimplemented")}
        {Lisp-Entry "save-lines" () 192 11 ("not" "when" "write-file" "read-current-file-content" "content" "true" "set!" "save-lines-to" "begin" "=" "if" "size" "filename" "iterate-files" "Unzip-File" "unzip" "Zip-File" "new" "zip" "with-closed" "dest" "dynamic" "function" "fail-safe-save" "false" "saved?" "get-entry" "entry" "get-file" "file" "let" "rest" "lines")}
        {Lisp-Entry "save-lines-to" () 212 11 ("1" "+" "0" "naturals" "2" "crlf" "limit" "/=" "when" "Ansi-String" "coerce" "write-in-file-in-zip" "n" "line" "for-each" "dynamic" "function" "with-new-file-in-zip" "save-lines-to" "unimplemented" "entry" "zip" "lines")}
        {Lisp-Entry "foldable?" () 231 11 ("true")}
        {Lisp-Entry "fold-object" () 235 11 ("get-entry" "get-file" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}}}})
"Zipped-Entry"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "entry" "Zipped-Entry.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.catalog.entry.Zipped-Entry" () 37 9 ("jazz")
      {Lisp-Entry "Zipped-Entry" () 45 7 ("Catalog-Entry")
        {Lisp-Entry "zipped" () 48 8 ()}
        {Lisp-Entry "definitions" () 49 8 ()}
        {Lisp-Entry "category-name" () 50 8 ()}
        {Lisp-Entry "construct-literal" () 54 16 ("self" "new" "definitions" "zipped" "context")}
        {Lisp-Entry "initialize" () 58 11 ("set-root-definition" "self" "set-parent" "definition" "dynamic" "function" "for-each" "get-entry" "extract-base" "category-name~self" "definitions~self" "zipped~self" "set!" "nextmethod" "definitions" "zipped")}
        {Lisp-Entry "set-file-definition" () 69 11 ("definitions" "set-file-definition" "definition" "dynamic" "function" "for-each" "nextmethod" "def")}
        {Lisp-Entry "print-catalog" () 76 18 ("definitions" "1" "+" "print-catalog" "definition" "dynamic" "function" "for-each" "zipped" "self" "class-of" "type-name" "identifier-name" "2" "*" "format" "printer" "level")}
        {Lisp-Entry "get-moniker" () 92 11 ("zipped")}
        {Lisp-Entry "get-category-name" () 96 11 ("category-name")}
        {Lisp-Entry "update-indexes" () 105 11 ("definitions" "update-indexes" "definition" "dynamic" "function" "for-each" "references-index" "definitions-index")}
        {Lisp-Entry "edit" () 116 11 ("zipped" "edit-document" "get-application" "appl" "let" "rest")}}}})
"Zone-Snapshot"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "snapshot" "Zone-Snapshot.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.debugger.snapshot.Zone-Snapshot" () 37 9 ("jazz")
      {Lisp-Entry "Zone-Snapshot" () 45 7 ("Component")
        {Lisp-Entry "size" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "bags" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "reserved" () 50 12 ("generate" "accessors")}
        {Lisp-Entry "allocated" () 51 12 ("generate" "accessors")}
        {Lisp-Entry "free" () 52 12 ("generate" "accessors")}
        {Lisp-Entry "triggers" () 53 12 ("generate" "accessors")}
        {Lisp-Entry "construct-literal" () 56 16 ("self" "new" "apply" "rest" "context")}
        {Lisp-Entry "print" () 60 11 ("free" ":free" "allocated" ":allocated" "reserved" ":reserved" "bags" ":bags" "size" "size:" "list" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"_Collection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "_Collection.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao" () 37 9 ("jazz")
      {Lisp-Entry "_Collection" () 40 20 ("IUnknown&" "short&" "IDispatch" "CoInterface")
        {Lisp-Entry "get-Count" () 43 47 ()}
        {Lisp-Entry "_NewEnum" () 44 47 ()}
        {Lisp-Entry "Refresh" () 45 47 ()}}}})
"_CollectionNew"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "_CollectionNew.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao" () 37 9 ("jazz")
      {Lisp-Entry "_Collection" () 40 12 ("Refresh" "IUnknown" "_NewEnum" "short" ":type:" "get-Count" ":name:" "Parameter" ":parameters:" "hresult" ":result-type:" "abstract" ":implementation:" "virtual" ":propagation:" "External" ":fields:" "GUID" "guid:" "list" ":attributes:" "IDispatch" ":ascendant:" "public" ":access:" "Interface" "new")}}})
"_DAO"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "_DAO.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao" () 37 9 ("jazz")
      {Lisp-Entry "_DAO" () 40 20 ("Properties&" "IDispatch")
        {Lisp-Entry "get-Properties" () 43 47 ()}}}})
"_DBEngine"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "_DBEngine.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao" () 37 9 ("jazz")
      {Lisp-Entry "_DBEngine" () 40 20 ("Connection&" "int&" "int" "Database&" "Workspace&" "vtbool" "variant" "Errors&" "Workspaces&" "short" "short&" "string" "string&" "_DAO")
        {Lisp-Entry "get-Version" () 43 47 ()}
        {Lisp-Entry "get-IniPath" () 44 47 ()}
        {Lisp-Entry "put-IniPath" () 45 47 ()}
        {Lisp-Entry "put-DefaultUser" () 46 47 ()}
        {Lisp-Entry "put-DefaultPassword" () 47 47 ()}
        {Lisp-Entry "get-LoginTimeout" () 48 47 ()}
        {Lisp-Entry "put-LoginTimeout" () 49 47 ()}
        {Lisp-Entry "get-Workspaces" () 50 47 ()}
        {Lisp-Entry "get-Errors" () 51 47 ()}
        {Lisp-Entry "Idle" () 52 47 ()}
        {Lisp-Entry "CompactDatabase" () 53 47 ()}
        {Lisp-Entry "RepairDatabase" () 54 47 ()}
        {Lisp-Entry "RegisterDatabase" () 55 47 ()}
        {Lisp-Entry "_30_CreateWorkspace" () 56 47 ()}
        {Lisp-Entry "OpenDatabase" () 57 47 ()}
        {Lisp-Entry "CreateDatabase" () 58 47 ()}
        {Lisp-Entry "FreeLocks" () 59 47 ()}
        {Lisp-Entry "BeginTrans" () 60 47 ()}
        {Lisp-Entry "CommitTrans" () 61 47 ()}
        {Lisp-Entry "Rollback" () 62 47 ()}
        {Lisp-Entry "SetDefaultWorkspace" () 63 47 ()}
        {Lisp-Entry "SetDataAccessOption" () 64 47 ()}
        {Lisp-Entry "ISAMStats" () 65 47 ()}
        {Lisp-Entry "get-SystemDB" () 66 47 ()}
        {Lisp-Entry "put-SystemDB" () 67 47 ()}
        {Lisp-Entry "CreateWorkspace" () 68 47 ()}
        {Lisp-Entry "OpenConnection" () 69 47 ()}
        {Lisp-Entry "get-DefaultType" () 70 47 ()}
        {Lisp-Entry "put-DefaultType" () 71 47 ()}
        {Lisp-Entry "SetOption" () 72 47 ()}}}})
"_DynaCollection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "com" "dao" "_DynaCollection.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.com.dao" () 37 9 ("jazz")
      {Lisp-Entry "_DynaCollection" () 40 20 ("string" "IDispatch" "_Collection")
        {Lisp-Entry "Append" () 43 47 ()}
        {Lisp-Entry "Delete" () 44 47 ()}}}})
"_access"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "_access.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access" () 0 9 ("jazz")}})
"_activity"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "activity" "_activity.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.activity" () 37 9 ("jazz")
      {Lisp-Entry "Manager" () 48 12 ()}
      {Lisp-Entry "get-activity-manager" () 52 20 ("new-manager" "set!" "Manager" "unless" "false" "visible?" "visible?:")}
      {Lisp-Entry "new-manager" () 58 13 ("visible?:" "manager-position" "position:" "Activity-Manager" "new" "dynamic" "function" "receive-primary" "visible?")}
      {Lisp-Entry "manager-position" () 65 13 ("acquire" "get-height" "get-width" "-" "Point" "new" "pos" "get-size" "size" "get-toplevel" "toplevel" "get-desktop" "desktop" "let*")}
      {Lisp-Entry "destroy-manager" () 73 13 ("Manager" "set!")}}})
"_application"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "application" "_application.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.application" () 0 9 ("jazz")}})
"_base"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "_base.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.base" () 37 8 ()}})
"_builder"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "_builder.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.builder" () 0 9 ("jazz")}})
"_catalog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "_catalog.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.catalog" () 0 9 ("jazz")}})
"_class"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "_class.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.class" () 37 8 ()}})
"_clipboard"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "clipboard" "_clipboard.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.clipboard" () 37 9 ("jazz")
      {Lisp-Entry "*super-quicky-clipboard*" () 43 12 ()}
      {Lisp-Entry "get-clipboard" () 47 20 ("false" ":unicode?" "CF_TEXT" ":format" "get-clipboard-text" "get-clipboard-metafile" "dynamic" "function" "with-opened-clipboard" "metafile" "case" "*super-quicky-clipboard*" "text" "type" "type:")}
      {Lisp-Entry "set-clipboard" () 63 20 ("set-clipboard" "unimplemented" "set-clipboard-metafile" "metafile" "case" "else" ":empty?" "set-clipboard-text" "dynamic" "function" "with-opened-clipboard" "String" "typecase" "*super-quicky-clipboard*" "set!" "true" "empty?" "empty?:" "type" "type:" "object")}
      {Lisp-Entry "get-clipboard-formats" () 83 20 ("get-output" "put" "EnumClipboardFormats" "set!" "/=" "while" "0" "fmt" "List-Factory" "new" "formats" "let" "get-clipboard-formats" "unimplemented")}
      {Lisp-Entry "with-opened-clipboard" () 93 20 ("CloseClipboard" "EmptyClipboard" "when" "true" "set!" "NULL" "OpenClipboard" "begin" "unwind-protect" "opened?" "let" "with-opened-clipboard" "unimplemented" "false" "empty?" "empty?:" "proc")}
      {Lisp-Entry "clipboard-format-available?" () 108 20 ("member?" "get-clipboard-formats" "formats" "get-format" "let" "dynamic" "function" "with-opened-clipboard" "format-available?" "unimplemented" "format")}
      {Lisp-Entry "formatted-text" () 123 12 ()}
      {Lisp-Entry "jazz-parcels" () 126 12 ()}
      {Lisp-Entry "prefixed-format" () 130 13 ("get-application" "clipboard-prefix" "append" "prefixed-format" "unimplemented" "format")}
      {Lisp-Entry "register-jazz-clipboard-formats" () 136 20 ("jazz-parcels" ":jazz-parcels" "formatted-text" "prefixed-format" ":formatted-text" "register-clipboard-format" "register-jazz-clipboard-formats" "unimplemented")}
      {Lisp-Entry "get-jazz-clipboard" () 143 20 (":format" "get-clipboard-text" "dynamic" "function" "with-opened-clipboard" "get-jazz-clipboard" "unimplemented" "format")}
      {Lisp-Entry "set-jazz-clipboard" () 151 20 ("true" ":empty?" ":format" "set-clipboard-text" "dynamic" "function" "with-opened-clipboard" "set-jazz-clipboard" "unimplemented" "text" "format")}
      {Lisp-Entry "get-jazz-parcels" () 160 20 ("get-jazz-clipboard" "read-string-element" ":jazz-parcels" "clipboard-format-available?" "when" "get-jazz-parcels" "unimplemented")}
      {Lisp-Entry "get-clipboard-text" () 172 20 ("get-format" "JzGetClipboardText" "get-clipboard-text" "unimplemented" "true" "unicode?" "unicode?:" "CF_UNICODETEXT" "format" "format:")}
      {Lisp-Entry "set-clipboard-text" () 178 20 ("get-format" "JzSetClipboardText" "set-clipboard-text" "unimplemented" "true" "unicode?" "unicode?:" "CF_UNICODETEXT" "format" "format:" "text")}
      {Lisp-Entry "set-clipboard-metafile" () 184 20 ("CF_ENHMETAFILE" "SetClipboardData" "set-clipboard-metafile" "unimplemented" "metafile")}
      {Lisp-Entry "get-clipboard-metafile" () 190 20 ("CF_ENHMETAFILE" "GetClipboardData" "get-clipboard-metafile" "unimplemented")}
      {Lisp-Entry "get-clipboard-data" () 196 20 ("JzGetClipboardData" "get-clipboard-data" "unimplemented" "type")}
      {Lisp-Entry "set-clipboard-data" () 202 20 ("JzSetClipboardData" "set-clipboard-data" "unimplemented" "data" "type")}
      {Lisp-Entry "Formats" () 213 12 ()}
      {Lisp-Entry "register-clipboard-format" () 217 20 ("cons" "Formats" "set!" "RegisterClipboardFormat" "id" "let" "register-clipboard-format" "unimplemented" "format" "name")}
      {Lisp-Entry "get-clipboard-format" () 224 20 ("error" "cdr" "Formats" "assoc" "info" "let" "integer?" "if" "get-format" "unimplemented" "format")}
      {Lisp-Entry "JzGetClipboardData" () 240 13 ("JzGetClipboardData" "unimplemented" "i")}
      {Lisp-Entry "JzSetClipboardData" () 241 13 ("JzSetClipboardData" "unimplemented" "o" "i")}
      {Lisp-Entry "JzGetClipboardText" () 242 13 ("JzGetClipboardText" "unimplemented" "b" "i")}
      {Lisp-Entry "JzSetClipboardText" () 243 13 ("JzSetClipboardText" "unimplemented" "b" "i" "o")}
      {Lisp-Entry "Clipboard-Parcel" () 251 7 ("Object")
        {Lisp-Entry "process-id" () 254 8 ()}
        {Lisp-Entry "object-id" () 255 8 ()}
        {Lisp-Entry "content" () 256 8 ()}
        {Lisp-Entry "construct-literal" () 260 16 ("self" "new" "content" "object-id" "process-id" "context")}
        {Lisp-Entry "initialize" () 264 11 ("content~self" "object-id~self" "process-id~self" "set!" "nextmethod" "content" "object-id" "process-id")}
        {Lisp-Entry "get-process-id" () 276 18 ("process-id")}
        {Lisp-Entry "get-object-id" () 280 18 ("object-id")}
        {Lisp-Entry "get-content" () 284 18 ("content")}}}})
"_com"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "_com.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.windows.com" () 37 9 ("jazz")
      {Lisp-Entry "cocreate" () 40 20 ("coclass")}}})
"_component"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "component" "_component.fusion"} {Time 128363204920000000L}
    {Lisp-Entry "jazz.library.component" () 37 9 ("jazz")
      {Lisp-Entry "open-form" () 50 20 ("false" "multiple-selection?:" "OpenFile-Dialog" "get-modal" "read-from-file")}
      {Lisp-Entry "read-from-file" () 54 20 ("set-origin" "Form" "is?" "assert" "jml->form" "set!" "pair?" "when" "read" "form" "let" "File-Reader" "new" "reader" "with-closed" "file")}
      {Lisp-Entry "determine-unique-paster" () 69 20 ("false" "car" "parent" "=" "when" "get-parent" "component" "dynamic" "function" "map" "remove-duplicates" "parents" "let" "else" "first" "determine-paster" "1" "0" "length" "case" "components")}}})
"_console"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "_console.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.console" () 0 9 ("jazz")
      {Lisp-Entry "Banner-Color" () 8 19 ("Dark-Green" "name:" "Color")}
      {Lisp-Entry "Prompt-Color" () 9 19 ("Dark-Blue" "name:" "Color")}
      {Lisp-Entry "Expression-Color" () 10 19 ("Black" "name:" "Color")}
      {Lisp-Entry "Eval-Color" () 11 19 ("Dark-Red" "name:" "Color")}}})
"_core"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "_core.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.core" () 37 9 ("scheme")}})
"_dde"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dde" "_dde.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.dde" () 0 9 ("jazz")}})
"_debuggee"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "debuggee" "_debuggee.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jazz.debuggee" () 37 9 ("jazz")
      {Lisp-Entry "In-Pick?" () 50 12 ("false")}
      {Lisp-Entry "Draw-Overlays?" () 53 12 ("false")}
      {Lisp-Entry "Feedback-Figure?" () 56 12 ("false")}
      {Lisp-Entry "Report-Figure?" () 59 12 ("false")}
      {Lisp-Entry "All-Pickers" () 62 12 ()}
      {Lisp-Entry "pick-figure" () 66 20 ("true" "simulate-mouse-move" "cons" "invalidate-window" "bring-to-front" "tooltips?" "tooltips?:" "feedback" "feedback:" ":excluded?" "menu" "menu:" ":window" "action:" "size:" "position:" "parent:" "Figure-Picker" "new" "picker" "neq?" "include" "=" "and" "exclude" "memq?" "or" "excluded?" "get-size" "size" "0" "Point" "position" "let*" "install-overlays" "window" "for-each" "report-figure?" "Report-Figure?" "feedback-figure?" "Feedback-Figure?" "draw-overlays?" "Draw-Overlays?" "All-Pickers" "set!" "setup-pick" "when" "get-toplevel" "toplevel" "process-windows" "windows" "let" "dynamic" "function" "with-locked-update" "In-Pick?" "unless" "action")}
      {Lisp-Entry "setup-pick" () 100 13 ("end-pick" "View-Player" "set-escape-handler" "true" "inhibit-view-cursor")}
      {Lisp-Entry "install-overlays" () 105 13 ("set-overlay" "get-root" "root" "get-visible?" "View-Player" "is?" "and" "when" "level" "dynamic" "function" "for-each-descendant" "Picker-Overlay" "new" "overlay" "let" "window")}
      {Lisp-Entry "remove-overlays" () 114 13 ("set-overlay" "get-root" "root" "let" "get-visible?" "View-Player" "is?" "and" "when" "level" "dynamic" "function" "for-each-descendant" "window")}
      {Lisp-Entry "simulate-mouse-move" () 122 13 ("Feedback-Row-Rect" "Feedback-View-Rect" "Feedback-Root-Rect" "Feedback-View" "Feedback-Player" "set!" "feedback-info" "row-rect" "view-rect" "root-rect" "receive" "mouse-position" "pos" "find-picker" "picker" "get-overlapped" "overlapped" "get-root" "root" "get-display" "display" "get-player" "player" "let*" "when" "mouse-view" "view" "let")}
      {Lisp-Entry "find-picker" () 139 13 ("All-Pickers" "get-window" "eq?" "picker" "dynamic" "function" "find-if" "window")}
      {Lisp-Entry "end-pick" () 145 13 ("close-pickers" "close-all-popups" "View-Player" "set-escape-handler" "setup-feedback" "inhibit-view-cursor" "false" "In-Pick?" "set!")}
      {Lisp-Entry "close-pickers" () 154 13 ("set!" "All-Pickers" "close" "get-parent" "remove-overlays" "window" "dynamic" "function" "for-each")}
      {Lisp-Entry "Feedback-Player" () 167 12 ()}
      {Lisp-Entry "Feedback-View" () 170 12 ()}
      {Lisp-Entry "Feedback-Root-Rect" () 173 12 ()}
      {Lisp-Entry "Feedback-View-Rect" () 176 12 ()}
      {Lisp-Entry "Feedback-Row-Rect" () 179 12 ()}
      {Lisp-Entry "setup-feedback" () 183 13 ("redraw-window" "eq?" "and" "if" "Feedback-Root-Rect" "set!" "old-player" "let" "Feedback-Row-Rect" "Feedback-View-Rect" "/=" "Feedback-View" "Feedback-Player" "neq?" "or" "when" "feedback-info" "row-rect" "view-rect" "root-rect" "player" "receive" "pos" "view" "position" "window" "picker")}
      {Lisp-Entry "feedback-info" () 203 13 ("determine-row-rect" "row-rect" "acquire" "view-rect" "get-bounds" "root-rect" "get-root" "root" "get-display" "display" "get-player" "player" "let*" "values" "not" "if" "pos" "view" "position" "window" "picker")}
      {Lisp-Entry "determine-row-rect" () 215 13 ("cell-rect" "acquire" "view->tree" "cell" "let" "Tree-View" "is?" "when" "pos" "view" "root")}
      {Lisp-Entry "Overlay-Color" () 227 12 ("Black" "name:" "Color")}
      {Lisp-Entry "Overlay-Transparency" () 230 12 ()}
      {Lisp-Entry "Highlight-Color" () 234 12 ("blue:" "green:" "red:" "Color")}
      {Lisp-Entry "Highlight-Pen" () 237 12 ("Highlight-Color" "color:" "2" "width:" "solid" "style:" "Pen" "new")}
      {Lisp-Entry "Picker-Overlay" () 241 7 ("Overlay")
        {Lisp-Entry "draw-overlay" () 244 11 ("/=" "Feedback-View-Rect" "and" "Feedback-Row-Rect" "Highlight-Pen" "Feedback-Root-Rect" "rectangle" "Feedback-Figure?" "Overlay-Transparency" "Overlay-Color" "draw-colored-overlay" "Draw-Overlays?" "when" "get-root" "neq?" "Feedback-Player" "not" "or" "if" "height" "width" "dc" "view")}}
      {Lisp-Entry "Figure-Picker" () 261 7 ("Picker")
        {Lisp-Entry "action" () 264 12 ("generate" "accessors")}
        {Lisp-Entry "window" () 265 12 ("generate" "accessors")}
        {Lisp-Entry "menu" () 266 12 ("generate" "accessors")}
        {Lisp-Entry "excluded?" () 267 12 ("generate" "accessors")}
        {Lisp-Entry "feedback" () 268 12 ("generate" "accessors")}
        {Lisp-Entry "tooltips?" () 269 12 ("generate" "accessors")}
        {Lisp-Entry "erase-background" () 277 11 ("hdc")}
        {Lisp-Entry "determine-row-rect-aux" () 286 11 ("cell-rect" "view->tree" "cell" "let" "Tree-View" "is?" "when" "pos" "view" "root")}
        {Lisp-Entry "new-root" () 299 11 ("Figure-Picker-Root" "new")}
        {Lisp-Entry "Figure-Picker-Root" () 304 9 ("view" "fill" "layout-type:" "content" "name:" "Root-View")
          {Lisp-Entry "Figure-Picker-View" () 313 11 ("View")
            {Lisp-Entry "cursor-update" () 316 15 (":spy" ":no" "excluded?" "if" "set-cursor" "pos")}
            {Lisp-Entry "get-tooltip?" () 325 15 ("tooltips?")}
            {Lisp-Entry "get-formatted-tooltip?" () 329 15 ("true")}
            {Lisp-Entry "get-tooltip-context" () 333 15 ("Ansi-Var" "name:" "Font" "font:" "bounds:" "describe-view" "display-description" "text:" "self" "view:" "Tooltip-Context" "new" "player" "bounds" "either" "acquire" "rect" "determine-row-rect-aux" "row-rect" "root" "get-bounds" "view-bounds" "get-root" "view-root" "get-player" "view-player" "let*" "when" "get-v" "get-h" "mouse-figure" "view" "position" "window" "receive" "pos")}
            {Lisp-Entry "display-description" () 350 15 ("format" ":bulleted" "list" "value" "name" "bind" "info" "dynamic" "function" "map" "cons" "description")}}}
        {Lisp-Entry "mouse-move" () 363 11 ("user-message" "not" "self" "setup-feedback" "true" "eq?" "proc" "let" "feedback" "mouse-figure" "pos" "view" "position" "window" "receive" "clear-user-message" "Report-Figure?" "when" "excluded?" "if" "nextmethod" "v" "h")}
        {Lisp-Entry "mouse-up" () 380 11 ("action" "end-pick" "dynamic" "function" "with-locked-update" "mouse-figure" "pos" "view" "position" "window" "receive" "excluded?" "unless" "nextmethod" "v" "h")}
        {Lisp-Entry "mouse-figure" () 390 11 ("find-drawing" "view" "get-root" "root" "values" "View-Player" "is-not?" "if" "position" "find-child-window" "window" "Point" "new" "self" "parent" "acquire" "pos" "let*" "v" "h")}
        {Lisp-Entry "context-menu" () 407 11 ("processed" "Point" "new" "get-root" "track-popup-menu" "setup-actions" "let" "mouse-figure" "pos" "view" "position" "window" "receive" "close-popups" "bell" "View-Player" "parent" "is-not?" "nextmethod" "menu" "not" "excluded?" "or" "if" "v" "h")}
        {Lisp-Entry "setup-actions" () 420 11 ("get-children" "execute:" "Event-Handler" "set-action-handler" "invoke" "self" ":action" "Action-Event" "new" "apply" "get-properties" ":pos" "view:" "position:" ":window" "augment" "properties" "when" "end-pick" "event" "execute" "get-action-handler" "action-handler" "let*" "item" "dynamic" "function" "for-each" "pos" "view" "position" "window" "menu")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "_debuggee.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.debuggee" () 0 9 ("jazz")}})
"_debugger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "_debugger.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger" () 0 9 ("jazz")
      {Lisp-Entry "debuggers" () 14 12 ()}
      {Lisp-Entry "get-debuggers" () 18 20 ("debuggers")}
      {Lisp-Entry "register-debugger" () 22 20 ("list" "append!" "debuggers" "set!" "debugger")}
      {Lisp-Entry "unregister-debugger" () 26 20 ("remove!" "debuggers" "set!" "debugger")}
      {Lisp-Entry "find-debugger" () 31 20 ("debuggers" "is?" "debugger" "dynamic" "function" "find-if" "type")}
      {Lisp-Entry "Once-Breaks" () 42 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "add-break-once" () 46 20 ("true" "Once-Breaks" "hash-set!" "name")}
      {Lisp-Entry "break-once" () 50 20 ("break" "hash-set!" "Once-Breaks" "hash-ref" "when" "name")}
      {Lisp-Entry "Once-Executes" () 56 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "add-execute-once" () 60 20 ("true" "Once-Executes" "hash-set!" "name")}
      {Lisp-Entry "execute-once" () 64 20 ("hash-set!" "Once-Executes" "hash-ref" "when" "proc" "name")}
      {Lisp-Entry "break-exception" () 75 20 ("frame:" ":location" "message:" "error" "type:" "break-action" "select-foreground-hwnd" "select-debuggee" "get-toplevel-hwnd" "controller-toplevel-hwnd" "get-controller-debugger-server" "controller-debugger" "get-process" "process" "closure-function" "object-location" "location" "frame-procedure" "closure" "frame-toplevel-closure-frame" "essay" "closure-frame" "get-message" "message" "let*" "accountable" "frame" "exception" "debuggee")}
      {Lisp-Entry "on-call-step-over" () 94 20 ("on-step-over" "evt")}
      {Lisp-Entry "on-call-step-into" () 98 20 ("on-step-into" "on-step-into-function" "get-shift?" "if" "evt")}
      {Lisp-Entry "on-call-step-out" () 104 20 ("on-step-out" "on-step-outside-function" "get-shift?" "if" "evt")}
      {Lisp-Entry "on-call-run-to" () 110 20 ("on-run-to-cursor" "on-run-to-result" "get-shift?" "if" "evt")}
      {Lisp-Entry "on-break" () 121 20 ("break-next" "evt")}
      {Lisp-Entry "on-stop" () 126 20 ("stop" "evt")}
      {Lisp-Entry "on-toplevel" () 130 20 ("toplevel" "evt")}
      {Lisp-Entry "on-continue" () 134 20 ("continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-over" () 140 20 ("step-over" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-into" () 148 20 ("step-into" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-into-function" () 156 20 ("step-into-function" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-out" () 164 20 ("step-out" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-step-outside-function" () 172 20 ("step-outside-function" "continue" "bell" "debugging?" "not" "if" "evt")}
      {Lisp-Entry "on-run-to-cursor" () 180 20 ("evt")}
      {Lisp-Entry "on-run-to-result" () 184 20 ("evt")}
      {Lisp-Entry "on-debuggers" () 188 20 ("true" "focus?:" "debugger" "workspace:" "Debuggers-View" "select-palette" "evt")}
      {Lisp-Entry "on-variables" () 192 20 ("true" "focus?:" "debugger" "workspace:" "Variables-View" "select-palette" "evt")}
      {Lisp-Entry "stop" () 196 20 ("get-application" "get-loop" "stop")}
      {Lisp-Entry "toplevel" () 200 20 ("get-application" "get-loop" "toplevel")}
      {Lisp-Entry "continue" () 204 20 ("get-application" "get-loop" "continue")}
      {Lisp-Entry "debugging?" () 208 20 ("0" "get-application" "get-loop" "get-level" "/=")}
      {Lisp-Entry "on-next-debuggee" () 217 20 ("get-application" "get-local-debugger-server" "select-next" "evt")}
      {Lisp-Entry "active-frame" () 226 20 ("get-loop" "get-frame" "selected-frame" "essay" "either" "Debuggers-View" "find-palette" "view" "get-application" "appl" "let")}
      {Lisp-Entry "break-indicator" () 238 12 ()}
      {Lisp-Entry "Break-Color" () 242 12 ("Yellow" "name:" "Color")}
      {Lisp-Entry "call-break" () 246 20 ("frame:" ":location" ":edit?" "message:" "break-action" "frame" "location" "edit?" "message")}
      {Lisp-Entry "break-action" () 250 20 ("uninstall-break" "when" "install-break" "dynamic" "function" ":proc" "unwind-protect" "Jazz-Code-Location" "new" "code-location" "let" "get-loop" "break-loop" "Remote-Proxy" "is?" "if" "essay" "get-controller-debugger-server" "debugger" "get-application" "appl" "let*" "frame" "frame:" "location" "location:" "true" "edit?" "edit?:" "message" "message:" "break" "type" "type:")}
      {Lisp-Entry "install-break" () 264 13 ("select-first-frame" "debugger" "workspace:" "Debuggers-View" "select-palette" "view" "dynamic" "function" "with-locked-update" "break-indicator" "set!" "get-start" "Break-Color" "fill" "range" "text" "receive" "find-location" "location" "let" "when" "get-message" "message-box" "err" "Location-Error" "catch" "code-location" "frame" "edit?")}
      {Lisp-Entry "uninstall-break" () 280 13 ("set!" "get-start" "unfill" "range" "text" "frame" "receive" "get-message" "message-box" "err" "Location-Error" "catch" "break-indicator" "when")}
      {Lisp-Entry "listeners" () 294 12 ()}
      {Lisp-Entry "add-debugger-listener" () 298 20 ("add-listener" "listeners" "set!" "listener")}
      {Lisp-Entry "remove-debugger-listener" () 302 20 ("remove-listener" "listeners" "set!" "listener")}
      {Lisp-Entry "process-frame-change" () 306 20 ("invoke" "listener" "dynamic" "function" "for-each" "frame:" "self" ":frame-change" "Event" "new" "evt" "let" "listeners" "when" "frame")}}})
"_designer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "_designer.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer" () 0 9 ("jazz")}})
"_dev"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "development" "_dev.fusion"} {Time 128369339200000000L}
    {Lisp-Entry "jazz.dev" () 37 9 ("jazz")
      {Lisp-Entry "t" () 51 13 ("Component" "jlu")}
      {Lisp-Entry "jt" () 55 13 ("FZ" "FY" "FX" "new" "FX.g" "debug")}
      {Lisp-Entry "jt1" () 59 13 ("FZ" "FY" "FX" "new" "g" "debug")}
      {Lisp-Entry "jt2" () 63 13 ("JY" "JX" "new" "JX.g" "debug")}
      {Lisp-Entry "jt3" () 67 13 ("unspecified")}
      {Lisp-Entry "%" () 76 12 ("unspecified")}
      {Lisp-Entry "%x" () 80 12 ("unspecified")}
      {Lisp-Entry "%y" () 83 12 ("unspecified")}
      {Lisp-Entry "%i" () 86 12 ("unspecified")}
      {Lisp-Entry "%j" () 89 12 ("unspecified")}
      {Lisp-Entry "JML-Expr" () 93 12 ("b:" "1" "a:")}
      {Lisp-Entry "jcm" () 99 13 ("resolve-unique-name" "build.compile-module" "module-name")}
      {Lisp-Entry "tcx11" () 103 13 ("jazz.platform.x11.x11" "build.compile-module")}
      {Lisp-Entry "tcw" () 107 13 ("jazz.platform.windows.Windows" "build.compile-module")}
      {Lisp-Entry "tct" () 111 13 ("jazz.platform.windows.WinTypes" "build.compile-module")}
      {Lisp-Entry "tcb" () 115 13 ("jazz.platform.windows.WinBase" "build.compile-module")}
      {Lisp-Entry "tck" () 119 13 ("jazz.platform.windows.WinKernel" "build.compile-module")}
      {Lisp-Entry "tcu" () 123 13 ("jazz.platform.windows.WinUser" "build.compile-module")}
      {Lisp-Entry "tca" () 127 13 ("tcu" "tck" "tcb" "tct" "tcw")}
      {Lisp-Entry "tla" () 135 13 ("jazz.platform.windows.WinTypes" "jazz.platform.windows.WinBase" "jazz.platform.windows.WinKernel" "jazz.platform.windows.WinUser" "jazz.platform.windows.Windows" "load-module")}
      {Lisp-Entry "tex" () 143 13 ("jazz.dev.test.X" "expand-module-to-file")}
      {Lisp-Entry "expand-module" () 152 13 ("debug.expand-module*" "module-name")}
      {Lisp-Entry "expand-module-to-file" () 156 13 ("debug.expand-module-to-file*" "module-name")}
      {Lisp-Entry "expand-module-to-port" () 160 13 ("debug.expand-module-to-port*" "port" "module-name")}
      {Lisp-Entry "tr" () 169 13 ("scheme.validation.test-reader" "scheme.validation" "load-module")}
      {Lisp-Entry "joc" () 180 13 ("object-content" "object")}
      {Lisp-Entry "jco" () 184 13 ("class-of" "Category.get-name" "else" "jco" "map" "pair?" "not" "cond" "object")}
      {Lisp-Entry "jlm" () 191 13 ("resolve-unique-name" "load-module" "module-name")}
      {Lisp-Entry "jrlm" () 195 13 ("resolve-unique-name" "reload-module" "module-name")}
      {Lisp-Entry "jn" () 199 13 ("resolve-unique-name" "load-category" "symbol?" "if" "new" "apply" "rest" "class")}
      {Lisp-Entry "jpa" () 203 13 ("debug.present-aliases*")}
      {Lisp-Entry "jpe" () 207 13 ("debug.present-environment*")}
      {Lisp-Entry "jpm" () 211 13 ("debug.present-manifest*")}
      {Lisp-Entry "jpo" () 216 13 ("debug.present-object*" "object")}
      {Lisp-Entry "jpu" () 220 13 ("debug.present-category*" "class")}
      {Lisp-Entry "jpv" () 225 13 ("validation.present-validations*")}
      {Lisp-Entry "jts" () 229 13 ("->string" "value")}
      {Lisp-Entry "jet" () 233 13 ("resolve-unique-name" "expand-module-to-file" "module-name")}
      {Lisp-Entry "jr" () 237 13 ("resolve-unique-name" "module-name")}
      {Lisp-Entry "resolve-unique-name" () 241 13 ("else" "car" "1" "error" "0" "length" "case" "cons" "set!" "identifier-name" "eqv?" "value" "key" "lambda" "get-manifest" "Toplevel-Manifest.get-entries" "iterate-hashtable" "module-names" "let" "jazz" "eq?" "composite-name?" "category?" "or" "if" "name")}
      {Lisp-Entry "wsig" () 261 13 ("Category.get-name" "map" "signature")}
      {Lisp-Entry "dgrs" () 266 13 ("get-specific-previous-specifics" "map" "get-specific-signature" "wsig" "list" "get-generic-root-specific" "specific" "iterate" "let" "generic")}
      {Lisp-Entry "mca" () 274 13 ("resolve-unique-name" "Category.get-ancestors" "Category.get-name" "map" "class")}
      {Lisp-Entry "mda" () 280 13 ("resolve-unique-name" "Category.get-ancestors" "table->list" "car" "if" "Category.get-name" "list" "get-class-dispatch-table" "dispatch-table" "let" "category" "lambda" "map" "class")}
      {Lisp-Entry "tdis" () 292 13 ("need-specific" "get-specific-implementation" "object" "name")}
      {Lisp-Entry "xx" () 296 12 ()}
      {Lisp-Entry "zz" () 297 12 ()}
      {Lisp-Entry "test-user" () 305 13 ("jazz.dev.user.Guillaume" "load-category" "new")}
      {Lisp-Entry "user-test" () 309 13 ("eval" "test-user" "user" "let" "test-name")}
      {Lisp-Entry "test" () 319 13 ("jazz.application.user.User.test" "user-test")}
      {Lisp-Entry "test1" () 323 13 ("jazz.application.user.User.test1" "user-test")}
      {Lisp-Entry "test2" () 327 13 ("jazz.application.user.User.test2" "user-test")}
      {Lisp-Entry "test3" () 331 13 ("jazz.application.user.User.test3" "user-test")}
      {Lisp-Entry "test4" () 335 13 ("jazz.application.user.User.test4" "user-test")}
      {Lisp-Entry "test5" () 339 13 ("jazz.application.user.User.test5" "user-test")}
      {Lisp-Entry "test6" () 343 13 ("jazz.application.user.User.test6" "user-test")}
      {Lisp-Entry "test7" () 347 13 ("jazz.application.user.User.test7" "user-test")}
      {Lisp-Entry "test8" () 351 13 ("jazz.application.user.User.test8" "user-test")}
      {Lisp-Entry "test9" () 355 13 ("jazz.application.user.User.test9" "user-test")}
      {Lisp-Entry "testbug" () 360 13 ("1" "car" "lambda" "with-bootstrap-debug")}
      {Lisp-Entry "rc" () 386 13 ("windows.RegisterClass" "windows.WNDCLASS-lpszClassName-set!" "windows.WNDCLASS-lpszMenuName-set!" "windows.WNDCLASS-hbrBackground-set!" "windows.WNDCLASS-hCursor-set!" "windows.WNDCLASS-hIcon-set!" "windows.NULL" "windows.WNDCLASS-hInstance-set!" "windows.WNDCLASS-cbWndExtra-set!" "0" "windows.WNDCLASS-cbClsExtra-set!" "windows.call-process-hwnd-message" "windows.WNDCLASS-lpfnWndProc-set!" "windows.CS_DBLCLKS" "windows.CS_OWNDC" "bit-or" "windows.WNDCLASS-style-set!" "windows.WNDCLASS-make" "wc" "classname" "let")}
      {Lisp-Entry "cw" () 402 13 ("sl" "thread" "function" "execute:" "name:" "Thread" "new-thread" "windows.NULL" "windows.WS_VISIBLE" "windows.WS_CLIPSIBLINGS" "windows.WS_CLIPCHILDREN" "bit-or" "0" "windows.CreateWindowEx")}
      {Lisp-Entry "sl" () 421 13 ("process-messages" "iterate" "let")}
      {Lisp-Entry "process-messages" () 427 13 ("windows.DispatchMessage" "windows.TranslateMessage" "newline" "write" "0" "windows.NULL" "windows.GetMessage" "flag" "iterate" "windows.MSG-make" "msg" "let")}
      {Lisp-Entry "Log?" () 442 12 ()}
      {Lisp-Entry "Log" () 445 12 ()}
      {Lisp-Entry "log" () 449 13 ("force-output" "newline" "display" "open-log" "log" "let" "Log?" "if" "line")}
      {Lisp-Entry "open-log" () 457 13 ("append:" "string-append" "path:" "list" "open-output-file" "set!" "current-time" "time->seconds" "floor" "inexact->exact" "number->string" "time" "let" "Log" "not" "if")}
      {Lisp-Entry "close-log" () 464 13 ("close-output-port" "Log" "if")}
      {Lisp-Entry "Process-Name" () 474 12 ()}
      {Lisp-Entry "Process-Console?" () 477 12 ()}
      {Lisp-Entry "launch-debugger" () 487 13 ("start-console-debugger-process" "Process-Console?" "Process-Name" "set!")}
      {Lisp-Entry "launch-test" () 494 13 ("start-test-process" "Process-Console?" "Process-Name" "set!")}
      {Lisp-Entry "dbg" () 505 13 ("Process.get-debugger" "get-process" "process" "let")}
      {Lisp-Entry "dbe" () 510 13 ("Process.get-local-debuggee" "get-process" "process" "let")}
      {Lisp-Entry "sd" () 516 13 ("start-console-debugger-process")}
      {Lisp-Entry "r" () 521 13 ("dbg" "debug.Debugger.read-eval-print-loop")}
      {Lisp-Entry "tdbe" () 526 13 ("car" "%" "set!" "debug.Debuggee.get-stops" "stops" "dbe" "debuggee" "let*")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "dev" "_dev.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "dev" () 37 9 ("jazz")
      {Lisp-Entry "?" () 44 19 ()}
      {Lisp-Entry "%" () 48 19 ()}
      {Lisp-Entry "%a" () 51 19 ()}
      {Lisp-Entry "%b" () 52 19 ()}
      {Lisp-Entry "%c" () 53 19 ()}
      {Lisp-Entry "%d" () 54 19 ()}
      {Lisp-Entry "%e" () 55 19 ()}
      {Lisp-Entry "%f" () 56 19 ()}
      {Lisp-Entry "%g" () 57 19 ()}
      {Lisp-Entry "%h" () 58 19 ()}
      {Lisp-Entry "%i" () 59 19 ()}
      {Lisp-Entry "%j" () 60 19 ()}
      {Lisp-Entry "%k" () 61 19 ()}
      {Lisp-Entry "%l" () 62 19 ()}
      {Lisp-Entry "%m" () 63 19 ()}
      {Lisp-Entry "%n" () 64 19 ()}
      {Lisp-Entry "%o" () 65 19 ()}
      {Lisp-Entry "%p" () 66 19 ()}
      {Lisp-Entry "%q" () 67 19 ()}
      {Lisp-Entry "%r" () 68 19 ()}
      {Lisp-Entry "%s" () 69 19 ()}
      {Lisp-Entry "%t" () 70 19 ()}
      {Lisp-Entry "%u" () 71 19 ()}
      {Lisp-Entry "%v" () 72 19 ()}
      {Lisp-Entry "%w" () 73 19 ()}
      {Lisp-Entry "%x" () 74 19 ()}
      {Lisp-Entry "%y" () 75 19 ()}
      {Lisp-Entry "%z" () 76 19 ()}}})
"_development"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "development" "_development.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.development" () 37 9 ("jazz")
      {Lisp-Entry "?" () 51 19 ()}
      {Lisp-Entry "%" () 52 19 ()}
      {Lisp-Entry "$" () 53 19 ()}
      {Lisp-Entry "%free" () 61 19 ()}
      {Lisp-Entry "Interactive-Object" () 69 19 ()}
      {Lisp-Entry "in" () 73 20 ("Interactive-Object" "set!" "object")}
      {Lisp-Entry "hex" () 77 20 ("format" "n")}
      {Lisp-Entry "inspect" () 86 20 ("cons" "client:" "get-local-debuggee" ":debuggee" "host-title:" "Inspector-View" "new-frame" "format" "title" "get-application" "appl" "let" ":value" "kind" "object")}
      {Lisp-Entry "inspect-form" () 92 20 ("0" "print-form" "Form-Printer" "new" "printer" "get-form" "Form" "is?" "if" "form" "let" "output" "dynamic" "function" "with-text-inspector" "form/component")}
      {Lisp-Entry "inspect-branches" () 101 20 ("0" "print-form" "Form-Printer" "new" "printer" "not" "get-restore-form" "form" "get-name" "format" "false" "set!" "if" "branch" "for-each-branch" "true" "first?" "let" "output" "dynamic" "function" "with-text-inspector" "component")}
      {Lisp-Entry "with-text-inspector" () 119 13 ("true" "set-visible?" "bring-to-front" "set-modified?" "text-beginning" "set-caret" "get-controller" "set-moniker" "get-guest" "text" "host-workspace:" "false" "host-visible?:" "Jazz-Text-View" "new-frame" "frame" "selected-workspace" "get-name" "workspace" "let*" "File-Printer" "new" "output" "with-closed" "create-temporary-file" "file" "let" "proc")}
      {Lisp-Entry "with-text-inspector" () 134 13 ("true" "set-visible?" "bring-to-front" "set-modified?" "text-beginning" "set-caret" "Text-Printer" "new" "output" "get-guest" "text" "host-workspace:" "false" "host-visible?:" "Jazz-Text-View" "new-frame" "frame" "selected-workspace" "get-name" "workspace" "let*" "proc")}
      {Lisp-Entry "edit-component" () 151 20 ("client:" "Manager-View" "autoload" "new-frame" "new" "class?" "if" "component" "let" "class/component")}
      {Lisp-Entry "edit-view" () 156 20 ("client:" "View-Editor" "autoload" "new-frame" "Medium" "name:" "Color" ":background" "new" "class?" "if" "view" "let" "class/view")}
      {Lisp-Entry "rsw" () 166 20 ("name")}
      {Lisp-Entry "rsp" () 170 20 ("Palettes" "hash-set!" "name")}
      {Lisp-Entry "cc" () 179 20 (":initial-color" "ChooseColor-Dialog" "get-modal" "eval-symbol" "Color" "is?" "not" "or" "if" "color" "let" "color-or-name")}
      {Lisp-Entry "cf" () 184 20 ("OpenFile-Dialog" "get-modal")}
      {Lisp-Entry "cmf" () 188 20 ("true" "multiple-selection?:" "OpenFile-Dialog" "get-modal")}
      {Lisp-Entry "csf" () 192 20 ("SaveFile-Dialog" "get-modal")}
      {Lisp-Entry "cd" () 196 20 ("BrowseFolder-Dialog" "get-modal")}
      {Lisp-Entry "cp" () 200 20 ("user-message" "set-clipboard" "cd" "get-list" "format" "path" "let")}
      {Lisp-Entry "md" () 207 20 ("get-modal" "class")}
      {Lisp-Entry "touch-launcher" () 216 20 ("autoload" "subtype?" "not" "or" "class-name" "dynamic" "function" ":filter" "touch-classes" "Critical-Categories" "class-names" "Launcher-Project" "find-project" "launcher" "get-workbench" "workbench" "let*" "touch-launcher" "unimplemented" "base" "base:")}
      {Lisp-Entry "touch-classes" () 228 20 ("format-plural" "format" "message-box" "increase!" "touch" "get-manifest-source" "file" "null?" "or" "when" "class-name" "dynamic" "function" "for-each" "0" "touched" "let" "touch-classes" "unimplemented" "filter" "filter:" "class-names")}
      {Lisp-Entry "compile-classes" () 243 20 ("format-plural" "format" "message-box" "increase!" "compile-moniker" "get-manifest-source" "file" "let" "class-name" "dynamic" "function" "for-each" "get-workbench-manager" "workbench-manager" "get-application" "appl" "0" "compiled" "let*" "compile-classes" "unimplemented" "rest" "class-names")}
      {Lisp-Entry "find-files" () 264 20 ("debug" "match" "when" "get-name" "name" "file" "dynamic" "function" "iterate-directory" "Regular-Expression" "new" "regexp" "let" "directory" "pattern")}
      {Lisp-Entry "rename-files" () 273 20 (":bulleted" "list" "map" "augment" "when" "format-plural" "format" "cons" "message-box" "get-output" "increase!" "move-pathname" "get-directory" "new-file" "replace" "new-name" "put" "null?" "if" "match" "get-name" "name" "let*" "file" "dynamic" "function" "for-each" "List-Factory" "failed" "0" "succeeded" "replacement-regexp" "Regular-Expression" "new" "find-regexp" "true" "multiple-selection?:" "title:" "OpenFile-Dialog" "get-modal" "files" "let" "replacement" "find")}
      {Lisp-Entry "Receiver-View" () 304 7 ("Dark" "name:" "Color" "background:" "View")
        {Lisp-Entry "invite" () 307 12 ("set-invite" "get-invite")}
        {Lisp-Entry "receiver" () 308 12 ("generate" "accessors")}
        {Lisp-Entry "get-invite" () 315 18 ("invite")}
        {Lisp-Entry "set-invite" () 319 18 ("invalidate-view" "invite" "set!" "value")}
        {Lisp-Entry "receive-files" () 324 11 ("self" "receiver" "files" "pos")}
        {Lisp-Entry "Background-Font" () 328 14 ("point-size:" "font-name:" "Font")}
        {Lisp-Entry "draw" () 332 11 ("true" "Gray" "get-v" "2" "get-h" "+" "draw-text" "Black" "name:" "Color" "set-text-color" "get-display-size" "center" "pos" "get-text-extent" "extent" "invite" "either" "localize" "title" "let*" "Background-Font" "set-font" "lv" "lh" "update" "context" "dc")}}
      {Lisp-Entry "setup-receiver" () 345 13 (":receiver" ":invite" "Dimension" "host-size:" "Point" "host-position:" "either" "host-title:" "Receiver-View" "new-palette" "invite" "invite:" "size" "size:" "position" "position:" "title" "title:" "receiver")}
      {Lisp-Entry "rer" () 360 20 ("match" "Regular-Expression" "new" "replace" "string" "to" "from")}
      {Lisp-Entry "class-instances" () 370 20 ("class-live-instances" ":live" "class-all-instances" ":all" "list" "class")}
      {Lisp-Entry "reporting-allocations" () 375 20 ("0" "/=" "bind" "info" "dynamic" "function" "collect-if" "-" "identity" "class" "type-name" "case" "list" "all" "after" "class-all-instances" "before" "zone-statistics" "car" "map" "classes" "let*" "name" "return" "return:" "proc" "result-proc" "zone")}
      {Lisp-Entry "icf" () 394 20 (":location" ":last-break" ":last-call" ":last-eval" "list" "object-location" "location" "tlf" "toplevel" "function-container" "container" "closure-function" "function" "frame-procedure" "closure" "either" "object" "binder-last-break" "last-break" "binder-last-call" "last-call" "binder-last-eval" "last-eval" "get-address" "address" "get-thread" "thread" "let*" "frame")}
      {Lisp-Entry "tlf" () 410 13 ("tlf" "null?" "if" "function-container" "container" "let" "function")}
      {Lisp-Entry "debug-table" () 423 20 ("0" "display-table" "set-current-request" "get-sql-console-text" "text" "let" "max-display" "max-display:" "name" "name:" "table")}
      {Lisp-Entry "get-%" () 435 20 ("%")}
      {Lisp-Entry "set-%" () 439 20 ("user-message" "%" "set!" "value")}
      {Lisp-Entry "?a" () 445 19 ()}
      {Lisp-Entry "?b" () 446 19 ()}
      {Lisp-Entry "?c" () 447 19 ()}
      {Lisp-Entry "?d" () 448 19 ()}
      {Lisp-Entry "?e" () 449 19 ()}
      {Lisp-Entry "?f" () 450 19 ()}
      {Lisp-Entry "?g" () 451 19 ()}
      {Lisp-Entry "?h" () 452 19 ()}
      {Lisp-Entry "?i" () 453 19 ()}
      {Lisp-Entry "?j" () 454 19 ()}
      {Lisp-Entry "?k" () 455 19 ()}
      {Lisp-Entry "?l" () 456 19 ()}
      {Lisp-Entry "?m" () 457 19 ()}
      {Lisp-Entry "?n" () 458 19 ()}
      {Lisp-Entry "?o" () 459 19 ()}
      {Lisp-Entry "?p" () 460 19 ()}
      {Lisp-Entry "?q" () 461 19 ()}
      {Lisp-Entry "?r" () 462 19 ()}
      {Lisp-Entry "?s" () 463 19 ()}
      {Lisp-Entry "?t" () 464 19 ()}
      {Lisp-Entry "?u" () 465 19 ()}
      {Lisp-Entry "?v" () 466 19 ()}
      {Lisp-Entry "?w" () 467 19 ()}
      {Lisp-Entry "?x" () 468 19 ()}
      {Lisp-Entry "?y" () 469 19 ()}
      {Lisp-Entry "?z" () 470 19 ()}
      {Lisp-Entry "%a" () 473 19 ()}
      {Lisp-Entry "%b" () 474 19 ()}
      {Lisp-Entry "%c" () 475 19 ()}
      {Lisp-Entry "%d" () 476 19 ()}
      {Lisp-Entry "%e" () 477 19 ()}
      {Lisp-Entry "%f" () 478 19 ()}
      {Lisp-Entry "%g" () 479 19 ()}
      {Lisp-Entry "%h" () 480 19 ()}
      {Lisp-Entry "%i" () 481 19 ()}
      {Lisp-Entry "%j" () 482 19 ()}
      {Lisp-Entry "%k" () 483 19 ()}
      {Lisp-Entry "%l" () 484 19 ()}
      {Lisp-Entry "%m" () 485 19 ()}
      {Lisp-Entry "%n" () 486 19 ()}
      {Lisp-Entry "%o" () 487 19 ()}
      {Lisp-Entry "%p" () 488 19 ()}
      {Lisp-Entry "%q" () 489 19 ()}
      {Lisp-Entry "%r" () 490 19 ()}
      {Lisp-Entry "%s" () 491 19 ()}
      {Lisp-Entry "%t" () 492 19 ()}
      {Lisp-Entry "%u" () 493 19 ()}
      {Lisp-Entry "%v" () 494 19 ()}
      {Lisp-Entry "%w" () 495 19 ()}
      {Lisp-Entry "%x" () 496 19 ()}
      {Lisp-Entry "%y" () 497 19 ()}
      {Lisp-Entry "%z" () 498 19 ()}
      {Lisp-Entry "Previous-All" () 507 12 ()}
      {Lisp-Entry "Previous-Heap" () 511 12 ()}
      {Lisp-Entry "report-allocations" () 516 20 ("set!" "delta-stack" "Previous-Heap" "delta-heap" "delta-all" "tie" "user-message" "Previous-All" "null?" "not" "or" "if" "percentage" "-" "stack" "all-heap-allocations" "heap" "all-allocations" "all" "let*" "false" "delta?" "delta?:")}
      {Lisp-Entry "gather-instances" () 533 20 ("class-sizes" "last" "gather-instances-internal" "class")}}})
"_dialect"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "scheme" "dialect" "_dialect.scm"} {Time 128366793880000000L}
    {Lisp-Entry "scheme.dialect" () 37 9 ("core")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "_dialect.scm"} {Time 128366793860000000L}
    {Lisp-Entry "jazz.dialect" () 37 9 ("scheme")}})
"_dialog"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "dialog" "_dialog.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.dialog" () 37 9 ("jazz")
      {Lisp-Entry "*current-modal*" () 46 12 ()}
      {Lisp-Entry "current-modal-dialog" () 50 20 ("*current-modal*")}
      {Lisp-Entry "in-modal?" () 54 20 ("current-modal-dialog")}
      {Lisp-Entry "end-modal-dialog" () 58 20 ("current-modal-dialog" "end-modal" "result")}
      {Lisp-Entry "close-modal-dialog" () 62 20 ("close-modal" "when" "current-modal-dialog" "dialog" "let" "action")}
      {Lisp-Entry "process-dialog-message" () 68 20 ("SWP_NOZORDER" "SWP_NOSIZE" "SWP_NOACTIVATE" "bit-or" "0" "NULL" "GetParent" "SetWindowPos" "WM_INITDIALOG" "=" "when" "lparam" "wparam" "msg" "hwnd")}}})
"_doc"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "_doc.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.doc" () 0 9 ("jazz")}})
"_exception"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "exception" "_exception.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.exception" () 37 8 ()}})
"_foundation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "foundation" "_foundation.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.foundation" () 37 8 ()}})
"_freetype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "freetype" "_freetype.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.freetype" () 0 9 ("ft-library" "FT_Init_FreeType" "FT_Face" "FT_Face*" "FT_Long" "char-string" "FT_Library" "FT_Library*" "jazz")
      {Lisp-Entry "int" () 5 8 ("int" "native")}
      {Lisp-Entry "char-string" () 6 8 ("char-string" "native")}
      {Lisp-Entry "long" () 7 8 ("long" "native")}
      {Lisp-Entry "FT_Long" () 8 8 ("long")}
      {Lisp-Entry "FT_Library" () 9 8 ("native")}
      {Lisp-Entry "FT_Library*" () 10 8 ("FT_Library" "pointer")}
      {Lisp-Entry "FT_Face" () 11 8 ("native")}
      {Lisp-Entry "FT_Face*" () 12 8 ("FT_Face" "pointer")}
      {Lisp-Entry "FT_Init_FreeType" () 14 17 ()}
      {Lisp-Entry "FT_New_Face" () 15 17 ()}
      {Lisp-Entry "FT_Done_Face" () 16 17 ()}
      {Lisp-Entry "make-FT_Library" () 18 12 ("FT_Library" "c-function")}
      {Lisp-Entry "make-FT_Face" () 19 12 ("FT_Face" "c-function")}
      {Lisp-Entry "ft-library" () 21 12 ("make-FT_Library")}}})
"_generic"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "_generic.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.generic" () 37 8 ()}})
"_git"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "git" "_git.fusion"} {Time 128360902400000000L}
    {Lisp-Entry "jazz.git" () 37 9 ("jazz")
      {Lisp-Entry "*repository*" () 43 12 ()}
      {Lisp-Entry "git-repository" () 47 20 ("*repository*")}
      {Lisp-Entry "git-repository-set!" () 51 20 ("*repository*" "set!" "repo")}
      {Lisp-Entry "git-add" () 60 20 ("git-repository" "git-add")}
      {Lisp-Entry "git-remove" () 64 20 ("git-repository" "git-remove")}
      {Lisp-Entry "git-rename" () 68 20 ("git-repository" "git-rename")}
      {Lisp-Entry "git-export" () 72 20 ("git-repository" "git-export")}
      {Lisp-Entry "git-import" () 76 20 ("git-repository" "git-import")}
      {Lisp-Entry "git-branch" () 80 20 ("git-repository" "git-branch")}
      {Lisp-Entry "git-checkout" () 84 20 ("git-repository" "git-checkout")}
      {Lisp-Entry "git-commit" () 88 20 ("git-repository" "git-commit")}
      {Lisp-Entry "git-diff" () 92 20 ("git-repository" "git-diff")}
      {Lisp-Entry "git-log" () 96 20 ("git-repository" "git-log")}
      {Lisp-Entry "git-status" () 100 20 ("git-repository" "git-status")}
      {Lisp-Entry "git-rollback" () 104 20 ("git-repository" "git-rollback")}
      {Lisp-Entry "git-tag" () 108 20 ("git-repository" "git-tag")}
      {Lisp-Entry "git-merge" () 112 20 ("git-repository" "git-merge")}
      {Lisp-Entry "git-pull" () 116 20 ("git-repository" "git-pull")}
      {Lisp-Entry "git-push" () 120 20 ("git-repository" "git-push")}
      {Lisp-Entry "git-show" () 124 20 ("git-repository" "git-show" "current-output-port" "output" "object")}
      {Lisp-Entry "parse-patch-file" () 133 20 ("error" "b-end" "b-comma" "b-start" "parse-integer" "1" "a-end" "a-comma" "a-start" "4" "str" "length" "either" "substring" "values" "position" "return:" "2" "+" "find" "end" "start:" "search" "dotdot" "6" "start" "let*" "queue-list" "list" "delta" "" "or" "when" "both" "b" "increase!" "a" "cons" "enqueue" "case" "l" "read-char" "c" "iter-line" "lines" "b-cnt" "0" "a-cnt" "parse-range" "b-count" "b-line" "a-count" "a-line" "range" "iter-delta" "new-queue" "deltas" "parse-error" "equal?" "and" "b-name" "parse-name" "a-name" "parse-index" "b-index" "a-index" "receive" "read-line" "parse-diff" "starts-with?" "if" "not" "unless" "iterate" "let" "line" "read-diff" "define" "File-Reader" "new" "reader" "with-closed" "proc" "patch-file")}
      {Lisp-Entry "Git-Repository" () 217 7 ("Object")
        {Lisp-Entry "directory" () 220 8 ("generate" "getter")}
        {Lisp-Entry "initialize" () 223 11 ("directory" "set!" "nextmethod" "dir")}
        {Lisp-Entry "git" () 233 11 ("close-port" "pipe" "not" "if" "directory" "parse" "directory:" "arguments:" "path:" "list" "open-process" "port" "let" "current-output-port" "output" "arguments")}
        {Lisp-Entry "git-add" () 246 18 ("list" "git")}
        {Lisp-Entry "git-remove" () 250 18 ()}
        {Lisp-Entry "git-rename" () 254 18 ()}
        {Lisp-Entry "git-commit" () 258 18 ()}
        {Lisp-Entry "git-rollback" () 262 18 ("list" "git")}
        {Lisp-Entry "git-tag" () 266 18 ("list" "git")}
        {Lisp-Entry "git-log" () 270 18 ("list" "git")}
        {Lisp-Entry "git-status" () 274 18 ("list" "git")}
        {Lisp-Entry "git-branch" () 283 18 ()}
        {Lisp-Entry "git-checkout" () 287 18 ()}
        {Lisp-Entry "git-import" () 296 18 ("list" "git")}
        {Lisp-Entry "git-export" () 300 18 ("list" "git")}
        {Lisp-Entry "git-diff" () 304 18 ()}
        {Lisp-Entry "git-merge" () 308 18 ()}
        {Lisp-Entry "git-show" () 312 18 ("list" "git" "current-output-port" "output" "object")}
        {Lisp-Entry "prepare-merge" () 316 18 ("sort?:" "recursive?:" "directories?:" "files?:" "move-pathname" "iterate" "both" "b" "eq?" "or" "increase!" "read-line" "do" "-" "repeat" "loop" "result-count" "result-line" "target-count" "target-line" "delta" "1" "target-rank" "merged-output" "File-Reader" "target-input" "get-base" "base" "new-brother" "merged-file" "target-file" "apply-diff" "else" "write-line" "line" "what" "bind" "info" "for-each" "car" "fifth" "lines" "delete-file" "cond" "right-file" "setup-right" "copy-file" "left-file" "format" "debug" "not" "if" "directory" "working-file" "setup-left" "git-show" "File-Printer" "new" "printer" "with-closed" "create-directories" "user-message" "exists?" "unless" "cons" "new-file" "base-file" "setup-base" "define" "split" "name-path" "either" "name" "deltas" "right-index" "right-name" "base-index" "base-name" "parse-patch-file" "ci=" "when" "get-extension" "ext" "let" "file" "lambda" "iterate-directory" "merge-dir")}
        {Lisp-Entry "complete-merge" () 414 18 ("merge-dir")}
        {Lisp-Entry "git-pull" () 423 18 ()}
        {Lisp-Entry "git-push" () 427 18 ()}}
      {Lisp-Entry "pipe" () 436 13 ("write-char" "begin" "eof-object?" "not" "if" "read-char" "c" "iterate" "let" "output" "input")}}})
"_groupware"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "_groupware.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware" () 0 9 ("jazz")}})
"_html"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "_html.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html" () 0 9 ("jazz")}})
"_image"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "image" "_image.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.image" () 36 9 ("jazz")
      {Lisp-Entry "load-image" () 47 20 ("height" "width" "IMAGE_CURSOR" "LoadImage" "LR_SHARED" "LR_LOADFROMFILE" "bit-or" "flags" "int-resource" "file?" "NULL" "current-instance" "module" "cursor" "else" "Icon-Resource" "find-icon-file" "integer?" "cond" "icon" "cairo_image_surface_create_from_png" "parse" "ident" "find-bitmap-file" "resource?" "if" "let*" "bitmap" "case" "rest" "image" "type")}
      {Lisp-Entry "find-bitmap-file" () 67 20 ("bitmap" "get-manifest-resource" "get-bitmap" "if" "get-workbench" "workbench" "let" "get-name" "string-append" "Native" "list" "File" "new" "object")}
      {Lisp-Entry "find-icon-file" () 77 20 ("icon" "get-manifest-resource" "get-icon" "if" "get-workbench" "workbench" "let" "get-name" "string-append" "Native" "list" "File" "new" "object")}}})
"_inspector"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "inspector" "_inspector.fusion"} {Time 128360671600000000L}
    {Lisp-Entry "jazz.jazz.inspector" () 37 9 ("jazz")
      {Lisp-Entry "Unbound" () 48 12 ("cons")}
      {Lisp-Entry "package-unbound" () 52 20 ("Unbound")}
      {Lisp-Entry "package-info" () 56 20 ("list" "0" "subseq" "append" "set!" "length" ">" "when" "more-value?" "context:" "frame:" "memq?" "or" "false" "if" "more?" ":reader" "->string" "else" "cond" "presented" "object->serial-number" "address" "Unbound" "eq?" "unbound?" "let*" ":value" "kind" "value" "name")}
      {Lisp-Entry "more-value?" () 66 13 ("category?" "Field" "Number" "Char" "Boolean" "Symbol" "is-not?" "empty-string?" "null?" "not" "and" "value")}
      {Lisp-Entry "inspect-value" () 82 20 ("inspect-slots" "else" "inspect-record" "Record" "inspect-sequence" "Sequence" "inspect-map" "Map" "inspect-hashtable" "Hashtable" "inspect-list" "List" "typecase" "value")}
      {Lisp-Entry "inspect-list" () 93 13 ("get-output" "increase!" "rest" "cdr" "set!" "car" "package-info" "put" "begin" "pair?" "if" "not-null?" "while" "0" "rank" "List-Factory" "new" "fact" "let" "lst")}
      {Lisp-Entry "inspect-hashtable" () 107 13 ("get-output" "package-info" "put" "value" "key" "dynamic" "function" "for-each-hash" "List-Factory" "new" "fact" "let" "hashtable")}
      {Lisp-Entry "inspect-map" () 115 13 ("get-output" "package-info" "put" "value" "key" "dynamic" "function" "for-each-map" "List-Factory" "new" "fact" "let" "map")}
      {Lisp-Entry "inspect-sequence" () 123 13 ("length" "0" "naturals" "package-info" "map" "seq")}
      {Lisp-Entry "inspect-record" () 128 13 ("get" "package-info" "second" "name" "let" "info" "dynamic" "function" "map" "structure-form" "parts" "class-of" "structure" "let*" "record")}
      {Lisp-Entry "inspect-slots" () 137 13 ("car" "key:" "" "sort" "true" "if" "Unbound" "else" "get-value" "bound?" "read-property" "property?" "cond" "field-name" "package-info" "slot" "dynamic" "function" "map" "infos" "all-slots" "slots" "class-of" "class" "let*" "object")}}})
"_java"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "_java.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java" () 0 9 ("jazz")}})
"_javaparser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "_javaparser.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser" () 0 9 ("jazz")}})
"_jazz"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "_jazz.scm"} {Time 128366793880000000L}
    {Lisp-Entry "jazz" () 37 9 ("scheme")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "_jazz.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jazz" () 0 9 ("jazz")}})
"_jedi"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "_jedi.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi" () 0 9 ("jazz")}})
"_jml"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "_jml.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.jml" () 37 9 ("jazz")
      {Lisp-Entry "Autoclasses" () 52 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "get-autoclass" () 56 20 ("Autoclasses" "hashtable-ref" "name")}
      {Lisp-Entry "set-autoclass" () 60 20 ("Autoclasses" "hashtable-set!" "class" "name")}
      {Lisp-Entry "register-autoclass" () 64 20 ("set-autoclass" "class" "name")}
      {Lisp-Entry "parse-jml" () 73 20 ("parse" "preferences:" "JML-Parser" "parser" "JML-Preferences" "either" "new" "pref" "let*" "parser-class" "parser-class:" "preferences-class" "preferences-class:" "jml")}
      {Lisp-Entry "transform-jml" () 84 20 ("transform" "transformation" "node")}
      {Lisp-Entry "render-jml" () 93 20 ("render" "JML-Renderer" "renderer" "JML-Preferences" "either" "new" "pref" "let*" "renderer-class" "renderer-class:" "preferences-class" "preferences-class:" "printer" "node")}
      {Lisp-Entry "parse-jml-properties/children" () 104 20 ("get-output" "values" "when" "cdr" "cddr" "set!" "cadr" "extract-jml-property" "begin" "value" "property" "dynamic" "function" "put" "jml-keyword?" "or" "keyword?" "not" "and" "if" "car" "element" "not-null?" "while" "content" "List-Factory" "new" "properties" "scan" "let" "true" "proper?" "proper?:" "false" "keywords?" "keywords?:" "list")}
      {Lisp-Entry "extract-jml-property" () 129 13 ("symbol->keyword" "not" "if" "keyword->string" "string->symbol" "symbol" "let" "keywords?" "keyword")}
      {Lisp-Entry "get-jml-property" () 136 20 ("cddr" "set!" "cadr" "car" "eqv?" "when" "not-null?" "while" "return" "lambda" "call/ec" "scan" "let" "not-found" "not-found:" "property" "list")}
      {Lisp-Entry "jml->form" () 155 20 ("node->form" "parse" "node" "JML-Parser" "new" "parser" "let*" "expr")}
      {Lisp-Entry "jml->form>>" () 161 20 ("setup-toplevel-context" "jml->form" "form" "let" "class" "expr")}
      {Lisp-Entry "read-jml" () 167 20 ("read" "File-Reader" "new" "reader" "with-closed" "file")}
      {Lisp-Entry "node->form" () 172 20 ("cdr" "set-children" "car" "null?" "client-form" "set-property" "begin" "branch-model?" "set-parent-value" "get-children" "map" "children" "extract-node-properties" "properties:" "tag-source" "tag-source:" "tag-symbolic?:" "name:" "model-name:" "action:" "false" "textual?:" "Form" "form" "get-property" "butlast" "string->symbol" "name" "memq?" "model-name" "new" "else" "locate" "modify" "eq?" "cond" "action" "or" "tag-symbolic?" "" "tag-locate?" "ends-with?" "!" "neq?" "and" "tag-modify?" "symbol->string" "tag-name" "get-tag" "tag" "let*" "JML-Text" "is?" "if" "parent" "dynamic" "function" "node->form" "letrec" "node")}
      {Lisp-Entry "extract-node-properties" () 202 13 ("get-output" "get-properties" "put" "tag-source" "tag-symbolic?" "name" "memq?" "not" "when" "value" "property" "dynamic" "function" "for-each-property" "List-Factory" "new" "fact" "let" "node")}
      {Lisp-Entry "form->node" () 212 20 ("add-client-form" "branch-model?" "set-children" "set-properties" "get-children" "map" "children" "extract-form-properties" "properties" "JML-Element" "element" "" "!" "new" "install" "locate" "modify" "case" "symbol->string" "append" "string->symbol" "tag" "get-tag-symbolic?" "symbolic?" "get-name" "name" "get-model-name" "model-name" "get-action" "action" "let*" "JML-Text" "is?" "if" "parent" "dynamic" "function" "form->node" "letrec" "form")}
      {Lisp-Entry "branch-model?" () 235 13 ("Test-Model" "Test-Branch-Aux" "Test-Branch" "Heading-Slide" "Concept-Slide" "Documentation-Slide" "Basic-Slide" "Slide" "JSC-Branch" "Design-Model" "Design-Diagram" "Branch" "memq?" "model-name")}
      {Lisp-Entry "add-client-form" () 239 13 ("form->node" "cons" "not" "if" "get-property" "client-form" "let" "children" "form")}
      {Lisp-Entry "extract-form-properties" () 246 13 ("get-output" "get-properties" "client-form" "neq?" "field-name" "property?" "if" "value" "property" "dynamic" "function" "for-each-property" "put" "not" "and" "when" "get-tag-source" "tag-source" "get-name" "name" "List-Factory" "new" "fact" "let" "symbolic?" "form")}
      {Lisp-Entry "load-jml" () 270 20 ("parse" "preferences:" "JML-Parser" "parser" "JML-Preferences" "pref" "let*" "File-Reader" "new" "reader" "with-closed" "file")}
      {Lisp-Entry "save-jml-to-clipboard" () 277 20 ("set-clipboard" "get-output" "output" "pretty-print" "String-Printer" "new" "printer" "let" "jml")}}})
"_jrm"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "_jrm.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.jrm" () 0 9 ("jazz")}})
"_kernel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "kernel" "_kernel.scm"} {Time 128369359240000000L}
    {Lisp-Entry "jazz.dialect.kernel" () 38 9 ("scheme")
      {Lisp-Entry "jazz.boolean" () 46 8 ()}
      {Lisp-Entry "jazz.compile-file" () 54 8 ()}
      {Lisp-Entry "jazz.for-each-submodule" () 55 8 ()}
      {Lisp-Entry "jazz.get-category-name" () 63 8 ()}
      {Lisp-Entry "jazz.get-class-ascendant" () 64 8 ()}
      {Lisp-Entry "jazz.symbolic-char" () 72 8 ()}
      {Lisp-Entry "jazz.char-symbol" () 73 8 ()}
      {Lisp-Entry "jazz.whitespace?" () 74 8 ()}
      {Lisp-Entry "jazz.gc" () 82 8 ()}
      {Lisp-Entry "jazz.continuation-capture" () 90 8 ()}
      {Lisp-Entry "jazz.continuation-graft" () 91 8 ()}
      {Lisp-Entry "jazz.continuation-return" () 92 8 ()}
      {Lisp-Entry "jazz.run-loop?" () 100 8 ()}
      {Lisp-Entry "jazz.debug" () 101 8 ()}
      {Lisp-Entry "jazz.error" () 102 8 ()}
      {Lisp-Entry "jazz.unimplemented" () 103 8 ()}
      {Lisp-Entry "jazz.dump-stack" () 104 8 ()}
      {Lisp-Entry "jazz.log-object" () 105 8 ()}
      {Lisp-Entry "jazz.log-string" () 106 8 ()}
      {Lisp-Entry "jazz.log-newline" () 107 8 ()}
      {Lisp-Entry "jazz.close-log" () 108 8 ()}
      {Lisp-Entry "jazz.get-current-directory" () 116 8 ()}
      {Lisp-Entry "jazz.set-current-directory" () 117 8 ()}
      {Lisp-Entry "jazz.with-current-directory" () 118 8 ()}
      {Lisp-Entry "jazz.enumerator?" () 126 8 ()}
      {Lisp-Entry "jazz.exception-reason" () 133 8 ()}
      {Lisp-Entry "jazz.current-exception-handler" () 134 8 ()}
      {Lisp-Entry "jazz.with-exception-handler" () 135 8 ()}
      {Lisp-Entry "jazz.with-exception-catcher" () 136 8 ()}
      {Lisp-Entry "jazz.with-default-exception-handler" () 137 8 ()}
      {Lisp-Entry "jazz.with-jazz-exception-handler" () 138 8 ()}
      {Lisp-Entry "jazz.dump-exception" () 139 8 ()}
      {Lisp-Entry "jazz.call-with-catch" () 140 8 ()}
      {Lisp-Entry "jazz.raise" () 141 8 ()}
      {Lisp-Entry "jazz.file-exists?" () 149 8 ()}
      {Lisp-Entry "jazz.file-delete" () 150 8 ()}
      {Lisp-Entry "jazz.file-last-modification-time" () 151 8 ()}
      {Lisp-Entry "jazz.lowlevel-format" () 159 8 ()}
      {Lisp-Entry "jazz.make-hashtable" () 167 8 ()}
      {Lisp-Entry "jazz.hashtable-ref" () 168 8 ()}
      {Lisp-Entry "jazz.hashtable-set!" () 169 8 ()}
      {Lisp-Entry "jazz.hashtable-clear" () 170 8 ()}
      {Lisp-Entry "jazz.hashtable-keys" () 171 8 ()}
      {Lisp-Entry "jazz.hashtable-length" () 172 8 ()}
      {Lisp-Entry "jazz.iterate-hashtable" () 173 8 ()}
      {Lisp-Entry "jazz.alist->hashtable" () 174 8 ()}
      {Lisp-Entry "jazz.hashtable-entries" () 175 8 ()}
      {Lisp-Entry "jazz.eq-hash" () 176 8 ()}
      {Lisp-Entry "jazz.eqv-hash" () 177 8 ()}
      {Lisp-Entry "jazz.equal-hash" () 178 8 ()}
      {Lisp-Entry "jazz.composite-name?" () 186 8 ()}
      {Lisp-Entry "jazz.identifier-name" () 187 8 ()}
      {Lisp-Entry "jazz.bit-or" () 195 8 ()}
      {Lisp-Entry "bitwise-not" () 196 8 ()}
      {Lisp-Entry "bitwise-and" () 197 8 ()}
      {Lisp-Entry "bitwise-ior" () 198 8 ()}
      {Lisp-Entry "bitwise-xor" () 199 8 ()}
      {Lisp-Entry "arithmetic-shift" () 200 8 ()}
      {Lisp-Entry "bit-set?" () 201 8 ()}
      {Lisp-Entry "fixnum?" () 202 8 ()}
      {Lisp-Entry "flonum?" () 203 8 ()}
      {Lisp-Entry "jazz.apply-key" () 211 8 ()}
      {Lisp-Entry "jazz.keyword?" () 219 8 ()}
      {Lisp-Entry "jazz.string->keyword" () 220 8 ()}
      {Lisp-Entry "jazz.keyword->string" () 221 8 ()}
      {Lisp-Entry "jazz.not-null?" () 229 8 ()}
      {Lisp-Entry "jazz.remove!" () 230 8 ()}
      {Lisp-Entry "jazz.remove-duplicates" () 231 8 ()}
      {Lisp-Entry "jazz.every?" () 232 8 ()}
      {Lisp-Entry "jazz.find-if" () 233 8 ()}
      {Lisp-Entry "jazz.collect-if" () 234 8 ()}
      {Lisp-Entry "jazz.collect-type" () 235 8 ()}
      {Lisp-Entry "jazz.partition" () 236 8 ()}
      {Lisp-Entry "jazz.reverse!" () 237 8 ()}
      {Lisp-Entry "jazz.last" () 238 8 ()}
      {Lisp-Entry "jazz.butlast" () 239 8 ()}
      {Lisp-Entry "jazz.listify" () 240 8 ()}
      {Lisp-Entry "jazz.list-copy" () 241 8 ()}
      {Lisp-Entry "jazz.last-pair" () 242 8 ()}
      {Lisp-Entry "jazz.getprop" () 243 8 ()}
      {Lisp-Entry "jazz.getf" () 244 8 ()}
      {Lisp-Entry "jazz.proper-list" () 245 8 ()}
      {Lisp-Entry "jazz.naturals" () 253 8 ()}
      {Lisp-Entry "jazz.new" () 261 8 ()}
      {Lisp-Entry "jazz.class-of" () 262 8 ()}
      {Lisp-Entry "jazz.object?" () 263 8 ()}
      {Lisp-Entry "jazz.category?" () 264 8 ()}
      {Lisp-Entry "jazz.class?" () 265 8 ()}
      {Lisp-Entry "jazz.interface?" () 266 8 ()}
      {Lisp-Entry "jazz.method?" () 267 8 ()}
      {Lisp-Entry "jazz.is?" () 268 8 ()}
      {Lisp-Entry "jazz.is-not?" () 269 8 ()}
      {Lisp-Entry "jazz.subtype?" () 270 8 ()}
      {Lisp-Entry "jazz.subcategory?" () 271 8 ()}
      {Lisp-Entry "jazz.subclass?" () 272 8 ()}
      {Lisp-Entry "jazz.load-module" () 273 8 ()}
      {Lisp-Entry "jazz.load-metaclass" () 274 8 ()}
      {Lisp-Entry "jazz.reload-module" () 275 8 ()}
      {Lisp-Entry "jazz.field?" () 283 8 ()}
      {Lisp-Entry "jazz.field-name" () 284 8 ()}
      {Lisp-Entry "jazz.find-field" () 285 8 ()}
      {Lisp-Entry "jazz.slot?" () 293 8 ()}
      {Lisp-Entry "jazz.slot-value" () 294 8 ()}
      {Lisp-Entry "jazz.set-slot-value" () 295 8 ()}
      {Lisp-Entry "jazz.property-getter" () 303 8 ()}
      {Lisp-Entry "jazz.property-setter" () 304 8 ()}
      {Lisp-Entry "open-input-string" () 312 8 ()}
      {Lisp-Entry "jazz.print" () 320 8 ()}
      {Lisp-Entry "jazz.pretty-print" () 321 8 ()}
      {Lisp-Entry "jazz.format" () 322 8 ()}
      {Lisp-Entry "force-output" () 323 8 ()}
      {Lisp-Entry "jazz.->string" () 324 8 ()}
      {Lisp-Entry "open-output-string" () 325 8 ()}
      {Lisp-Entry "get-output-string" () 326 8 ()}
      {Lisp-Entry "jazz.file-type" () 334 8 ()}
      {Lisp-Entry "jazz._copy-file" () 335 8 ()}
      {Lisp-Entry "jazz.rename-file" () 336 8 ()}
      {Lisp-Entry "jazz.create-directory" () 337 8 ()}
      {Lisp-Entry "jazz.directory-files" () 338 8 ()}
      {Lisp-Entry "jazz.close-port" () 346 8 ()}
      {Lisp-Entry "open-process" () 354 8 ()}
      {Lisp-Entry "system-exit" () 355 8 ()}
      {Lisp-Entry "jazz.new-queue" () 363 8 ()}
      {Lisp-Entry "jazz.enqueue" () 364 8 ()}
      {Lisp-Entry "jazz.enqueue-list" () 365 8 ()}
      {Lisp-Entry "jazz.queue-list" () 366 8 ()}
      {Lisp-Entry "skip-whites" () 374 8 ()}
      {Lisp-Entry "jazz.eof-object" () 375 8 ()}
      {Lisp-Entry "jazz.get-environment" () 383 8 ()}
      {Lisp-Entry "jazz.get-catalog" () 384 8 ()}
      {Lisp-Entry "jazz.locate-library-declaration" () 385 8 ()}
      {Lisp-Entry "jazz.load-module-declaration" () 386 8 ()}
      {Lisp-Entry "jazz.read-module-declaration" () 387 8 ()}
      {Lisp-Entry "jazz.expand-toplevel-form" () 388 8 ()}
      {Lisp-Entry "jazz.get-object-slot" () 389 8 ()}
      {Lisp-Entry "jazz.update-dispatch-table" () 390 8 ()}
      {Lisp-Entry "jazz.dispatch" () 391 8 ()}
      {Lisp-Entry "jazz.object->serial-number" () 399 8 ()}
      {Lisp-Entry "jazz.serial-number->object" () 400 8 ()}
      {Lisp-Entry "shell-command" () 408 8 ()}
      {Lisp-Entry "jazz.continuation-capture" () 416 8 ()}
      {Lisp-Entry "jazz.get-continuation-stack" () 417 8 ()}
      {Lisp-Entry "jazz.split-string" () 425 8 ()}
      {Lisp-Entry "jazz.join-strings" () 426 8 ()}
      {Lisp-Entry "jazz.generate-symbol" () 434 8 ()}
      {Lisp-Entry "jazz.quit" () 442 8 ()}
      {Lisp-Entry "jazz.current-thread" () 450 8 ()}
      {Lisp-Entry "jazz.scheme-current-thread" () 451 8 ()}
      {Lisp-Entry "jazz.scheme-thread-start!" () 452 8 ()}
      {Lisp-Entry "jazz.make-scheme-thread" () 453 8 ()}
      {Lisp-Entry "jazz.thread.Thread.set-scheme-thread" () 454 8 ()}
      {Lisp-Entry "jazz.scheme.thread-specific-set!" () 455 8 ()}
      {Lisp-Entry "jazz.thread-start!" () 456 8 ()}
      {Lisp-Entry "jazz.thread-sleep!" () 457 8 ()}
      {Lisp-Entry "jazz.running-time" () 465 8 ()}
      {Lisp-Entry "current-time" () 466 8 ()}
      {Lisp-Entry "time->seconds" () 467 8 ()}
      {Lisp-Entry "jazz.unspecified" () 475 8 ()}
      {Lisp-Entry "jazz.unspecified?" () 476 8 ()}
      {Lisp-Entry "jazz.specified?" () 477 8 ()}
      {Lisp-Entry "jazz.new-walk-context" () 485 8 ()}
      {Lisp-Entry "jazz.register-literal-constructor" () 486 8 ()}
      {Lisp-Entry "random-integer" () 494 8 ()}
      {Lisp-Entry "random-source-pseudo-randomize!" () 495 8 ()}
      {Lisp-Entry "default-random-source" () 496 8 ()}
      {Lisp-Entry "min" () 504 8 ()}
      {Lisp-Entry "max" () 505 8 ()}
      {Lisp-Entry "make-parameter" () 513 8 ()}
      {Lisp-Entry "parameterize" () 514 8 ()}
      {Lisp-Entry "jazz.autoload" () 522 8 ()}
      {Lisp-Entry "jazz.autoreload" () 523 8 ()}
      {Lisp-Entry "jazz.foreign?" () 531 8 ()}
      {Lisp-Entry "jazz.foreign-address" () 532 8 ()}
      {Lisp-Entry "jazz.foreign-release!" () 533 8 ()}
      {Lisp-Entry "jazz.foreign-released?" () 534 8 ()}
      {Lisp-Entry "jazz.foreign-tag" () 535 8 ()}
      {Lisp-Entry "jazz.still-obj-refcount-dec!" () 536 8 ()}
      {Lisp-Entry "jazz.still-obj-refcount-inc!" () 537 8 ()}
      {Lisp-Entry "jazz.still-obj-refcount" () 538 8 ()}
      {Lisp-Entry "jazz.current-instance" () 546 8 ()}
      {Lisp-Entry "jazz.start-statprof" () 554 8 ()}
      {Lisp-Entry "jazz.stop-statprof" () 555 8 ()}
      {Lisp-Entry "jazz.report-statprof" () 556 8 ()}}})
"_language"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "language" "_language.fusion"} {Time 128369481380000000L}
    {Lisp-Entry "jazz.dialect.language" () 37 9 ("string?" "e" "s" "get-start" "get-sequence" "grow" ">" "when" "dst" "src" "" "new-size" "old-size" "delta" "offset" "Axis" "new-axis" "get-size" "get-content" "axis" "vector->list" "list->vector" "vector-length" "vector-set!" "vector-ref" "vector" "append!" "replacement" "substring" ">=" "lgt" "scheme.string-length" "string-set!" "string-ref" "string" "coerce-string" "nextmethod" "sequence?" "iterate-hashtable" "map" "unimplemented" "hashtable" "List-Iterator" "after" "before" "let*" "last-tail" "set-cdr!" "begin" "subseq" "butlast" "cons" "last" "car" "cdr" "tail" "null?" "or" "scheme.length" "list-set!" "list-ref" "list" "Sequence-Explorer" "-" "Subseq" "new" "and" "if" "end" "start" "else" "1" "+" "eq?" "=" "cond" "i" "iterate" "element" "set-element!" "below" "0" "from" "n" "for" "loop" "allocate-sequence" "new-sequence" "length" "len" "seq" "iter" "symbol->string" "symbol" "get-output-string" "write-char" "open-output-string" "port" "let" "c" "type-name" "class" "error" "obj" "jazz.dialect")
      {Lisp-Entry "false" () 40 12 ()}
      {Lisp-Entry "true" () 43 12 ()}
      {Lisp-Entry "Object" () 52 7 ("Object-Class")
        {Lisp-Entry "initialize" () 55 19 ("rest")}
        {Lisp-Entry "destroy" () 59 19 ()}
        {Lisp-Entry "print" () 63 26 ("function" "self" "print-unreadable" "detail" "output")}
        {Lisp-Entry "new-iterator" () 70 31 ("self" "error" "object")}
        {Lisp-Entry "new-explorer" () 75 40 ("rest" "object")}
        {Lisp-Entry "external-name" () 80 31 ("self" "type-name" "error" "when" "true" "error?" "error?:")}
        {Lisp-Entry "class-actions" () 85 26 ()}
        {Lisp-Entry "focus-actions" () 89 26 ()}
        {Lisp-Entry "guest-actions" () 93 26 ()}
        {Lisp-Entry "initialized?" () 97 18 ("self" "object-initialized?")}
        {Lisp-Entry "hash-object" () 101 26 ("self" "error")}
        {Lisp-Entry "copy-object" () 105 29 ("self" "error" "deep?")}
        {Lisp-Entry "compare-object" () 109 26 (":incompatible" "object")}
        {Lisp-Entry "ci-compare-object" () 113 26 (":incompatible" "object")}
        {Lisp-Entry "marshal" () 117 26 ("self")}
        {Lisp-Entry "unmarshal" () 121 26 ("self")}
        {Lisp-Entry "describe-object" () 125 29 ("print" "printer")}
        {Lisp-Entry "release" () 129 26 ()}
        {Lisp-Entry "close" () 133 26 ("self" "call-destroy")}
        {Lisp-Entry "destroy-mandatory" () 137 21 ("self" "set-must-destroy")}
        {Lisp-Entry "destroyed?" () 141 18 ("self" "object-destroyed?")}
        {Lisp-Entry "get-sort-value" () 145 26 ()}
        {Lisp-Entry "redirect-handler" () 149 26 ("self" "sender" "handler")}
        {Lisp-Entry "object-similar?" () 158 26 ("self" "eq?" "object")}
        {Lisp-Entry "object-alphabetic?" () 162 26 ("self" "error")}
        {Lisp-Entry "object-numeric?" () 166 26 ("self" "error")}
        {Lisp-Entry "object-alphanumeric?" () 170 26 ("self" "error")}
        {Lisp-Entry "object-whitespace?" () 174 26 ("self" "error")}
        {Lisp-Entry "object-upper-case?" () 178 26 ("self" "error")}
        {Lisp-Entry "object-lower-case?" () 182 26 ("self" "error")}
        {Lisp-Entry "object-upcase" () 186 26 ("self" "error")}
        {Lisp-Entry "object-downcase" () 190 26 ("self" "error")}
        {Lisp-Entry "object-capitalize" () 194 26 ("self" "error")}}
      {Lisp-Entry "fold-literal" () 198 17 ("obj")}
      {Lisp-Entry "fold-literal" () 201 11 ()}
      {Lisp-Entry "compare" () 205 20 ("compare-object" ":equal" "eqv?" "if" "b" "a")}
      {Lisp-Entry "ci-compare" () 211 20 ("ci-compare-object" ":equal" "eqv?" "if" "b" "a")}
      {Lisp-Entry "copy" () 217 20 ("copy-object" "false" "deep?" "obj")}
      {Lisp-Entry "subcopy" () 221 20 ("copy" "if" "deep?" "obj")}
      {Lisp-Entry "coerce-string" () 227 17 ("obj")}
      {Lisp-Entry "coerce-string" () 229 11 ()}
      {Lisp-Entry "native-class" () 233 13 ("error" "name")}
      {Lisp-Entry "=-hash" () 237 13 ("hash-object" "obj")}
      {Lisp-Entry "object-initialized?" () 241 13 ("obj")}
      {Lisp-Entry "get-must-destroy" () 246 13 ("obj")}
      {Lisp-Entry "set-must-destroy" () 250 13 ("obj")}
      {Lisp-Entry "set-was-destroyed" () 255 13 ("obj")}
      {Lisp-Entry "object-destroyed?" () 260 13 ("obj")}
      {Lisp-Entry "destroy-mandatory" () 265 20 ()}
      {Lisp-Entry "call-destroy" () 270 13 ("set-was-destroyed" "destroy" "obj")}
      {Lisp-Entry "Type" () 280 7 ("Object")}
      {Lisp-Entry "Category" () 288 7 ("Type")
        {Lisp-Entry "name" () 291 8 ("generate")}
        {Lisp-Entry "fields" () 292 8 ("generate")}
        {Lisp-Entry "ancestors" () 293 8 ("generate")}
        {Lisp-Entry "descendants" () 294 8 ("generate")}
        {Lisp-Entry "print" () 297 11 ("get-name" "format" "function" "self" "print-unreadable" "detail" "output")}}
      {Lisp-Entry "load-source" () 303 13 ("load-source" "unimplemented" "b" "a")}
      {Lisp-Entry "Class" () 312 7 ("Category")
        {Lisp-Entry "ascendant" () 315 8 ("generate")}
        {Lisp-Entry "interfaces" () 316 8 ("generate")}
        {Lisp-Entry "slots" () 317 8 ("generate")}
        {Lisp-Entry "instance-size" () 318 8 ("generate")}
        {Lisp-Entry "level" () 319 8 ("generate")}
        {Lisp-Entry "dispatch-table" () 320 8 ("generate")}
        {Lisp-Entry "core-method-alist" () 321 8 ("generate")}
        {Lisp-Entry "core-virtual-alist" () 322 8 ("generate")}
        {Lisp-Entry "core-virtual-names" () 323 8 ("generate")}
        {Lisp-Entry "core-vtable" () 324 8 ("generate")}
        {Lisp-Entry "class-table" () 325 8 ("generate")}
        {Lisp-Entry "interface-table" () 326 8 ("generate")}}
      {Lisp-Entry "Object-Class" () 329 7 ("Class")}
      {Lisp-Entry "class?" () 332 13 ("Class" "is?" "obj")}
      {Lisp-Entry "coerce" () 336 20 ("coerce-object" "class" "object")}
      {Lisp-Entry "coerce-object" () 340 17 ("obj" "class")}
      {Lisp-Entry "coerce-object" () 342 11 ()}
      {Lisp-Entry "Interface" () 351 7 ("Category")
        {Lisp-Entry "ascendants" () 354 8 ("generate")}
        {Lisp-Entry "rank" () 355 8 ("generate")}}
      {Lisp-Entry "Field" () 363 7 ("Object")
        {Lisp-Entry "name" () 366 8 ("generate")}}
      {Lisp-Entry "property?" () 369 20 ("Property" "is?" "obj")}
      {Lisp-Entry "Method" () 373 7 ("Field")
        {Lisp-Entry "propagation" () 376 8 ("generate")}
        {Lisp-Entry "implementation" () 377 8 ("generate")}}
      {Lisp-Entry "category-field" () 380 20 ("find-field" "field-name" "category")}
      {Lisp-Entry "all-fields" () 384 20 ("type-ascendant" "category-fields" "gather" "append!" "not" "if" "all-fields" "unimplemented" "model")}
      {Lisp-Entry "all-slots" () 392 20 ("get-output" "type-ascendant" "class-slots" "put-sequence" "when" "dynamic" "function" "add" "letrec" "List-Factory" "new" "fact" "let" "all-slots" "unimplemented" "model")}
      {Lisp-Entry "field?" () 404 13 ("Field" "is?" "obj")}
      {Lisp-Entry "Generic" () 413 7 ("Object")
        {Lisp-Entry "locator" () 416 8 ("generate")}
        {Lisp-Entry "name" () 417 8 ("generate")}
        {Lisp-Entry "mandatory-parameters" () 418 8 ("generate")}
        {Lisp-Entry "root-specific" () 419 8 ("generate")}
        {Lisp-Entry "pending-specifics" () 420 8 ("generate")}}
      {Lisp-Entry "Specific" () 423 7 ("Object")
        {Lisp-Entry "mandatory-parameters" () 426 8 ("generate")}
        {Lisp-Entry "signature" () 427 8 ("generate")}
        {Lisp-Entry "implementation" () 428 8 ("generate")}
        {Lisp-Entry "next-implementation" () 429 8 ("generate")}
        {Lisp-Entry "next-specific" () 430 8 ("generate")}
        {Lisp-Entry "previous-specifics" () 431 8 ("generate")}}
      {Lisp-Entry "Boolean-Class" () 439 7 ("Class")}
      {Lisp-Entry "Boolean" () 442 7 ("Object" "Boolean-Class")
        {Lisp-Entry "initialize" () 445 11 ("native-class" "rest")}
        {Lisp-Entry "print" () 449 11 ("self" "write" "detail" "output")}}
      {Lisp-Entry "neq?" () 453 27 ("eq?" "not" "y" "x")}
      {Lisp-Entry "boolean?" () 457 27 ("eq?" "or" "object")}
      {Lisp-Entry "xor" () 462 20 ("not" "/=" "y" "x")}
      {Lisp-Entry "=" () 466 20 ("cdr" "else" "false" "car" "neq?" "true" "null?" "cond" "scan" "iterate" "first" "let" ":equal" "compare" "eq?" "and" "rest" "m" "n")}
      {Lisp-Entry "/=" () 478 20 ("=" "apply" "not" ":equal" "compare" "neq?" "null?" "if" "rest" "m" "n")}
      {Lisp-Entry "<" () 484 20 ("cdr" "car" "value" "null?" "if" "max" "scan" "iterate" "let" "error" "else" "false" ":equal" ":greater" "true" ":less" "compare" "case" "and" "rest" "m" "n")}
      {Lisp-Entry "<=" () 499 20 ("cdr" "car" "value" "null?" "if" "max" "scan" "iterate" "let" "error" "else" "false" ":greater" "true" ":equal" ":less" "compare" "case" "and" "rest" "m" "n")}
      {Lisp-Entry ">" () 514 20 ("cdr" "car" "value" "null?" "if" "min" "scan" "iterate" "let" "error" "else" "false" ":equal" ":less" "true" ":greater" "compare" "case" "and" "rest" "m" "n")}
      {Lisp-Entry ">=" () 529 20 ("cdr" "car" "value" "null?" "if" "min" "scan" "iterate" "let" "error" "else" "false" ":less" "true" ":equal" ":greater" "compare" "case" "and" "rest" "m" "n")}
      {Lisp-Entry "ci=" () 544 20 ("finally" "false" "return" ":equal" "ci-compare" "neq?" "when" "cdr" "in" "object" "for" "loop" "car" "first" "let" "true" "null?" "if" "rest")}
      {Lisp-Entry "ci/=" () 554 20 ("ci=" "apply" "not" "rest")}
      {Lisp-Entry "ci<" () 558 20 ("error" "else" "false" ":equal" ":greater" "cdr" ":less" "ci-compare" "case" "car" "value" "true" "null?" "if" "max" "scan" "iterate" "let" "rest" "n")}
      {Lisp-Entry "ci<=" () 569 20 ("error" "else" "false" ":greater" "cdr" ":equal" ":less" "ci-compare" "case" "car" "value" "true" "null?" "if" "max" "scan" "iterate" "let" "rest" "n")}
      {Lisp-Entry "ci>" () 580 20 ("error" "else" "false" ":equal" ":less" "cdr" ":greater" "ci-compare" "case" "car" "value" "true" "null?" "if" "min" "scan" "iterate" "let" "rest" "n")}
      {Lisp-Entry "ci>=" () 591 20 ("error" "else" "false" ":less" "cdr" ":equal" ":greater" "ci-compare" "case" "car" "value" "true" "null?" "if" "min" "scan" "iterate" "let" "rest" "n")}
      {Lisp-Entry "boolean->integer" () 602 27 ("0" "1" "if" "bool")}
      {Lisp-Entry "integer->boolean" () 606 27 ("0" "/=" "n")}
      {Lisp-Entry "Whitespace-Chars" () 615 12 ()}
      {Lisp-Entry "Lowercase-Chars" () 618 12 ()}
      {Lisp-Entry "Uppercase-Chars" () 621 12 ()}
      {Lisp-Entry "Alphabetic-Chars" () 624 12 ("Uppercase-Chars" "Lowercase-Chars" "scheme.append")}
      {Lisp-Entry "Numeric-Chars" () 627 12 ()}
      {Lisp-Entry "Char-Class" () 631 7 ("Class")}
      {Lisp-Entry "Char" () 634 7 ("Object" "Char-Class")
        {Lisp-Entry "initialize" () 637 11 ("native-class" "rest")}
        {Lisp-Entry "compare-object" () 641 11 (":incompatible" ":less" "else" ":greater" ">" ":equal" "=" "cond" "v2" "self" "char->integer" "v1" "let" "Char" "is?" "if" "c")}
        {Lisp-Entry "ci-compare-object" () 651 11 ("self" "downcase" "compare" "c")}
        {Lisp-Entry "object-similar?" () 656 11 ("self" "char-similar?" "char?" "and" "object-similar?" "unimplemented" "object")}
        {Lisp-Entry "object-alphabetic?" () 663 11 ("Alphabetic-Chars" "self" "memv?")}
        {Lisp-Entry "object-numeric?" () 667 11 ("Numeric-Chars" "self" "memv?")}
        {Lisp-Entry "object-alphanumeric?" () 671 11 ("object-numeric?" "object-alphabetic?" "or")}
        {Lisp-Entry "object-whitespace?" () 676 11 ("Whitespace-Chars" "self" "memv?")}
        {Lisp-Entry "object-upper-case?" () 680 11 ("Uppercase-Chars" "self" "memv?")}
        {Lisp-Entry "object-lower-case?" () 684 11 ("Lowercase-Chars" "self" "memv?")}
        {Lisp-Entry "object-upcase" () 688 11 ("char->integer" "-" "integer->char" "self" "lower-case?" "if")}
        {Lisp-Entry "object-downcase" () 694 11 ("char->integer" "+" "integer->char" "self" "upper-case?" "if")}
        {Lisp-Entry "object-capitalize" () 700 11 ("object-upcase")}}
      {Lisp-Entry "coerce-string" () 704 11 ()}
      {Lisp-Entry "whitechar?" () 710 12 ("char-whitespace?")}
      {Lisp-Entry "char-presentation" () 714 20 ("string" "char-symbol" "or" "char")}
      {Lisp-Entry "alphabetic?" () 719 20 ("object-alphabetic?" "object")}
      {Lisp-Entry "numeric?" () 723 20 ("object-numeric?" "object")}
      {Lisp-Entry "alphanumeric?" () 727 20 ("object-alphanumeric?" "object")}
      {Lisp-Entry "whitespace?" () 731 20 ("object-whitespace?" "object")}
      {Lisp-Entry "upper-case?" () 735 20 ("object-upper-case?" "object")}
      {Lisp-Entry "lower-case?" () 739 20 ("object-lower-case?" "object")}
      {Lisp-Entry "upcase" () 743 20 ("object-upcase" "object")}
      {Lisp-Entry "downcase" () 747 20 ("object-downcase" "object")}
      {Lisp-Entry "capitalize" () 751 20 ("object-capitalize" "object")}
      {Lisp-Entry "vowel?" () 755 20 ("downcase" "memv?" "c")}
      {Lisp-Entry "character-types" () 759 12 ("symbol" "literal" "quasiquote" "backslash" "reference" "exprcomment" "comment" "unquote" "terminator" "list" "quote" "sharp" "string" "constituent" "whitespace" "invalid")}
      {Lisp-Entry "character-type" () 794 20 ("char->integer" "character-types" "vector-ref" "ascii-c")}
      {Lisp-Entry "jazz-constituent?" () 798 13 ("eqv?" "constituent" "character-type" "eq?" "alphanumeric?" "or" "c")}
      {Lisp-Entry "cpp/java-constituent?" () 804 13 ("eqv?" "alphanumeric?" "or" "c")}
      {Lisp-Entry "sql-constituent?" () 809 13 ("eqv?" "alphanumeric?" "or" "c")}
      {Lisp-Entry "exceptions-catched" () 822 12 ("make-parameter")}
      {Lisp-Entry "Exception" () 825 7 ("Object")
        {Lisp-Entry "get-message" () 828 26 ()}
        {Lisp-Entry "present-message" () 832 26 ("get-message" "list" "rest")}}
      {Lisp-Entry "Continue" () 836 7 ("Exception")}
      {Lisp-Entry "Error" () 839 7 ("Loggable" "Exception")
        {Lisp-Entry "message" () 842 8 ("generate")}
        {Lisp-Entry "initialize" () 845 11 ("set-message" "nextmethod" "message" "message:")}
        {Lisp-Entry "print" () 850 11 ("get-message" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "present-message" () 857 11 ("self" "process-class" "present-error" "active-content?" "active-content?:" "true" "prefix?" "prefix?:")}
        {Lisp-Entry "log-info" () 862 11 ("self" "process-class" "log-error" "output")}
        {Lisp-Entry "edit" () 867 11 ("self" "process-class" "edit-error")}
        {Lisp-Entry "edit-child" () 872 11 ("self" "process-class" "edit-error-child" "info")}}
      {Lisp-Entry "Read-Error" () 876 7 ("Error")}
      {Lisp-Entry "Convertion-Error" () 879 7 ("Error")}
      {Lisp-Entry "Signal" () 882 7 ("Exception")}
      {Lisp-Entry "Toplevel-Signal" () 885 7 ("Signal")}
      {Lisp-Entry "Cancel-Signal" () 888 7 ("Signal")}
      {Lisp-Entry "Stop-Signal" () 891 7 ("Signal")}
      {Lisp-Entry "call-with-catch" () 894 13 ("cons" "exceptions-catched" "parameterize" "cont" "lambda" "call/ec" "thunk" "handler" "type")}
      {Lisp-Entry "find-catch" () 901 13 ("is?" "test:" "exceptions-catched" "assoc" "exception")}
      {Lisp-Entry "catched?" () 906 13 ("find-catch" "boolean" "exception")}
      {Lisp-Entry "throw" () 915 20 ("error" "cddr" "cont" "cadr" "handler" "if" "find-catch" "catch" "let" "exception")}
      {Lisp-Entry "throw-toplevel" () 924 20 ("Toplevel-Signal" "new" "throw")}
      {Lisp-Entry "throw-cancel" () 928 20 ("Cancel-Signal" "new" "throw")}
      {Lisp-Entry "throw-stop" () 932 20 ("Stop-Signal" "new" "throw")}
      {Lisp-Entry "signal" () 936 12 ("throw")}
      {Lisp-Entry "call/ec" () 939 20 ("call/cc" "proc")}
      {Lisp-Entry "exit" () 943 13 ("system-exit" "0" "code")}
      {Lisp-Entry "Nil" () 952 7 ("Object")
        {Lisp-Entry "print" () 955 11 ("display" "detail" "output")}}
      {Lisp-Entry "Port-Class" () 964 7 ("Class")}
      {Lisp-Entry "Port" () 967 7 ("Object" "Port-Class")
        {Lisp-Entry "initialize" () 970 11 ("native-class" "rest")}}
      {Lisp-Entry "Symbol-Class" () 979 7 ("Class")}
      {Lisp-Entry "Symbol" () 982 7 ("Object" "Symbol-Class")
        {Lisp-Entry "initialize" () 985 11 ("native-class" "rest")}
        {Lisp-Entry "print" () 989 11 ("self" "write" "detail" "output")}
        {Lisp-Entry "compare-object" () 993 11 (":incompatible" "self" "symbol->string" "compare" "symbol?" "if" "obj")}
        {Lisp-Entry "ci-compare-object" () 999 11 (":incompatible" "self" "symbol->string" "ci-compare" "symbol?" "if" "obj")}}
      {Lisp-Entry "coerce-string" () 1005 11 ()}
      {Lisp-Entry "generated-symbol?" () 1009 20 ("symbol->string" "starts-with?" "symbol")}
      {Lisp-Entry "symbol->keyword" () 1013 20 ("symbol->string" "string->keyword" "symbol")}
      {Lisp-Entry "keyword->symbol" () 1017 20 ("keyword->string" "string->symbol" "keyword")}
      {Lisp-Entry "find-symbol" () 1021 13 ("string->symbol" "str")}
      {Lisp-Entry "symbol-bound?" () 1026 13 ("rest" "name")}
      {Lisp-Entry "symbol-unbound?" () 1029 13 ("rest" "name")}
      {Lisp-Entry "Keyword-Class" () 1039 7 ("Class")}
      {Lisp-Entry "Keyword" () 1042 7 ("Object" "Keyword-Class")
        {Lisp-Entry "initialize" () 1045 11 ("native-class" "rest")}
        {Lisp-Entry "print" () 1049 11 ("self" "write" "detail" "output")}}
      {Lisp-Entry "find-keyword" () 1053 20 ("specified?" "null?" "cdr" "cddr" "set-cdr!" "cadr" "set!" "begin" "eq?" "error" "car" "keyword?" "if" "elem" "not-null?" "unspecified?" "and" "while" "unspecified" "found" "unbox-list" "scan" "before" "let" "default" "box" "keyword")}
      {Lisp-Entry "Procedure-Class" () 1080 7 ("Class")}
      {Lisp-Entry "Procedure" () 1083 7 ("Object" "Procedure-Class")}
      {Lisp-Entry "procedure?" () 1086 13 ("Procedure" "is?" "obj")}
      {Lisp-Entry "Foreign-Class" () 1095 7 ("Class")}
      {Lisp-Entry "Foreign" () 1098 7 ("Object" "Foreign-Class")}
      {Lisp-Entry "Numeric-Class" () 1106 7 ("Class")}
      {Lisp-Entry "Numeric" () 1109 7 ("Object" "Numeric-Class")
        {Lisp-Entry "norm" () 1112 35 ()}
        {Lisp-Entry "inverse" () 1113 35 ()}
        {Lisp-Entry "multiply" () 1114 35 ("n")}
        {Lisp-Entry "add" () 1115 35 ("obj")}
        {Lisp-Entry "negate" () 1116 35 ()}}
      {Lisp-Entry "numeric?" () 1120 27 ("Numeric" "is?" "obj")}
      {Lisp-Entry "Number-Class" () 1129 7 ("Numeric-Class")}
      {Lisp-Entry "Number" () 1132 7 ("Numeric" "Number-Class")
        {Lisp-Entry "initialize" () 1135 11 ("native-class" "rest")}
        {Lisp-Entry "print" () 1139 11 ("self" "display" "detail" "output")}
        {Lisp-Entry "compare-object" () 1143 11 (":greater" "else" ":less" "scheme.<" ":equal" "self" "scheme.=" "cond" "obj")}
        {Lisp-Entry "norm" () 1149 11 ("self" "scheme.abs")}
        {Lisp-Entry "add" () 1153 11 ("error" "self" "scheme.+" "scheme.number?" "if" "obj")}
        {Lisp-Entry "negate" () 1159 11 ("self" "scheme.-")}}
      {Lisp-Entry "Complex-Class" () 1168 7 ("Number-Class")}
      {Lisp-Entry "Complex" () 1171 7 ("Number" "Complex-Class")}
      {Lisp-Entry "Real-Class" () 1179 7 ("Complex-Class")}
      {Lisp-Entry "Real" () 1182 7 ("Complex" "Real-Class")}
      {Lisp-Entry "Rational-Class" () 1190 7 ("Real-Class")}
      {Lisp-Entry "Rational" () 1193 7 ("Real" "Rational-Class")}
      {Lisp-Entry "Integer-Class" () 1201 7 ("Rational-Class")}
      {Lisp-Entry "Integer" () 1204 7 ("Rational" "Integer-Class")}
      {Lisp-Entry "Fixnum-Class" () 1212 7 ("Integer-Class")}
      {Lisp-Entry "Fixnum" () 1215 7 ("Integer" "Fixnum-Class")}
      {Lisp-Entry "Flonum-Class" () 1223 7 ("Real-Class")}
      {Lisp-Entry "Flonum" () 1226 7 ("Real" "Flonum-Class")}
      {Lisp-Entry "number?" () 1234 27 ("Number" "is?" "obj")}
      {Lisp-Entry "zero?" () 1238 27 ("0" "=" "n")}
      {Lisp-Entry "positive?" () 1242 27 ("0" ">" "n")}
      {Lisp-Entry "negative?" () 1246 27 ("0" "" "n")}
      {Lisp-Entry "relate" () 1250 20 ("0" "else" "1" ">" "" "cond" "y" "x")}
      {Lisp-Entry "sign" () 1256 20 ("0" "relate" "n")}
      {Lisp-Entry "abs" () 1260 20 ("-" "0" ">=" "if" "x")}
      {Lisp-Entry "generic-add" () 1266 20 ("cdr" "car" "add" "null?" "if" "result" "iterate" "let" "rest" "n")}
      {Lisp-Entry "generic-substract" () 1273 20 ("apply" "+" "negate" "null?" "if" "rest" "n")}
      {Lisp-Entry "+" () 1279 20 ("cdr" "car" "generic-add" "0" "null?" "if" "rest")}
      {Lisp-Entry "-" () 1285 20 ("generic-substract" "rest" "n")}
      {Lisp-Entry "generic-min" () 1290 20 ("set!" "" "when" "object" "dynamic" "function" "for-each" "rest" "n")}
      {Lisp-Entry "generic-max" () 1299 20 ("set!" ">" "when" "object" "dynamic" "function" "for-each" "rest" "n")}
      {Lisp-Entry "minimum" () 1307 20 ("cdr" "set!" ":less" "apply-key" "eq?" "when" "object" "dynamic" "function" "for-each" "car" "min" "let" "compare" "compare:" "key" "key:" "lst")}
      {Lisp-Entry "maximum" () 1316 20 ("cdr" "set!" ":greater" "apply-key" "eq?" "when" "object" "dynamic" "function" "for-each" "car" "max" "let" "compare" "compare:" "key" "key:" "lst")}
      {Lisp-Entry "between?" () 1325 20 ("" ">=" "not" "or" "and" "upper" "lower" "n")}
      {Lisp-Entry "between" () 1330 20 ("else" ">" "" "cond" "upper" "n" "lower")}
      {Lisp-Entry "in-interval?" () 1336 20 ("" ">=" "and" "upper" "lower" "n")}
      {Lisp-Entry "norm" () 1340 20 ("norm" "x")}
      {Lisp-Entry "near?" () 1344 20 ("-" "norm" "" "distance" "y" "x")}
      {Lisp-Entry "contiguous-range" () 1348 20 ("cons" "cdr" "set!" "1" "+" "=" "if" "n" "dynamic" "function" "for-each" "second" "car" "first" "let*" "return" "lambda" "call/ec" "when" "lst")}
      {Lisp-Entry "naturals" () 1362 20 ("collect" "below" "from" "n" "for" "loop" "upper" "lower")}
      {Lisp-Entry "lobyte" () 1367 20 ("+" "bitwise-and" "-" "short")}
      {Lisp-Entry "hibyte" () 1370 20 ("bit-and" "shift-right" "short")}
      {Lisp-Entry "make-word" () 1374 20 ("8" "arithmetic-shift" "bitwise-ior" "hi" "lo")}
      {Lisp-Entry "lochar" () 1377 20 ("bit-and" "word")}
      {Lisp-Entry "hichar" () 1380 20 ("bitwise-not" "bitwise-and" "arithmetic-shift" "word")}
      {Lisp-Entry "make-int" () 1384 20 ("arithmetic-shift" "bitwise-ior" "hi" "lo")}
      {Lisp-Entry "loword" () 1387 20 ("+" "bitwise-and" "-" "int")}
      {Lisp-Entry "hiword" () 1390 20 ("bitwise-not" "bitwise-and" "arithmetic-shift" "sign-word" "int")}
      {Lisp-Entry "sign-word" () 1393 20 ("-" "bit-set?" "if" "word")}
      {Lisp-Entry "separate" () 1399 13 ("values" "*" "-" "r" "quotient" "q" "let*" "int2" "int1")}
      {Lisp-Entry "randomize" () 1405 13 ("default-random-source" "random-source-pseudo-randomize!" "int2" "int1")}
      {Lisp-Entry "random" () 1408 12 ("random-integer")}
      {Lisp-Entry "bit-not" () 1411 12 ("bitwise-not")}
      {Lisp-Entry "bit-and" () 1412 12 ("bitwise-and")}
      {Lisp-Entry "bit-or" () 1413 12 ("bitwise-ior")}
      {Lisp-Entry "bit-xor" () 1414 12 ("bitwise-xor")}
      {Lisp-Entry "bit-set" () 1417 13 ("bit-not" "bit-and" "bit-or" "if" "1" "shift-left" "msk" "let" "bit" "pos" "num")}
      {Lisp-Entry "mask-bit-set" () 1424 13 ("bit-not" "bit-and" "bit-or" "if" "bit" "msk" "num")}
      {Lisp-Entry "mask-bit-set?" () 1430 13 ("0" "bit-and" "=" "not" "msk" "num")}
      {Lisp-Entry "shift-left" () 1434 12 ("arithmetic-shift")}
      {Lisp-Entry "shift-right" () 1437 13 ("-" "arithmetic-shift" "pos" "num")}
      {Lisp-Entry "bit-mask" () 1441 20 ("1" "shift-left" "-" "lo" "hi")}
      {Lisp-Entry "random-seed" () 1445 20 ("random" "randomize")}
      {Lisp-Entry "sqr" () 1451 13 ("2" "expt" "num")}
      {Lisp-Entry "percentage" () 1455 27 ("/" "*" "total" "part")}
      {Lisp-Entry "percent" () 1459 27 ("*" "/" "n" "percent")}
      {Lisp-Entry "floor" () 1464 13 ("scheme.floor" "inexact->exact" "r")}
      {Lisp-Entry "ceil" () 1466 13 ("scheme.ceiling" "inexact->exact" "r")}
      {Lisp-Entry "truncate" () 1468 13 ("scheme.truncate" "inexact->exact" "r")}
      {Lisp-Entry "round" () 1470 13 ("scheme.round" "inexact->exact" "r")}
      {Lisp-Entry "Queue" () 1479 7 ("Object")
        {Lisp-Entry "list" () 1482 8 ("private" "generate")}
        {Lisp-Entry "last-list" () 1483 8 ("private" "generate")}
        {Lisp-Entry "last-anchor" () 1484 8 ("private" "generate")}
        {Lisp-Entry "current" () 1485 8 ("private" "generate")}
        {Lisp-Entry "put" () 1488 18 ("self" "enqueue" "object")}}
      {Lisp-Entry "Iterator" () 1497 7 ("Object")
        {Lisp-Entry "Empty" () 1500 14 ("empty")}
        {Lisp-Entry "peeked" () 1504 8 ("Empty")}
        {Lisp-Entry "get-next" () 1507 26 ("next" "peek" "prog1")}
        {Lisp-Entry "peek" () 1512 26 ("next" "set!" "Empty" "peeked" "eq?" "when")}
        {Lisp-Entry "unget" () 1518 26 ("error" "set!" "Empty" "peeked" "eq?" "if" "object")}
        {Lisp-Entry "next" () 1524 26 ("get-next!" "else" "set!" "prog1" "Empty" "neq?" "peeked" "eof-object?" "cond")}
        {Lisp-Entry "done?" () 1534 26 ("peek" "eof-object?")}
        {Lisp-Entry "get-next!" () 1538 26 ()}
        {Lisp-Entry "put" () 1542 26 ("error" "object")}
        {Lisp-Entry "get-position" () 1546 26 ("self" "error")}
        {Lisp-Entry "set-position" () 1550 26 ("self" "error" "pos")}
        {Lisp-Entry "get-state" () 1554 26 ()}
        {Lisp-Entry "reset-state" () 1558 26 ("old")}}
      {Lisp-Entry "iterate" () 1562 17 ("obj")}
      {Lisp-Entry "iterate" () 1564 11 ()}
      {Lisp-Entry "iterate" () 1568 11 ()}
      {Lisp-Entry "Explorer" () 1577 7 ("Iterator")
        {Lisp-Entry "direction" () 1580 8 ("forward")}
        {Lisp-Entry "peek-forward" () 1583 29 ("error")}
        {Lisp-Entry "peek-backward" () 1587 29 ("error")}
        {Lisp-Entry "peek" () 1591 11 ("peek-backward" "backward" "peek-forward" "forward" "direction" "case" "eof-object" "done?" "if")}
        {Lisp-Entry "goto-beginning" () 1599 26 ("error")}
        {Lisp-Entry "goto-end" () 1603 26 ("error")}
        {Lisp-Entry "forward" () 1607 26 ("error")}
        {Lisp-Entry "backward" () 1611 26 ("error")}
        {Lisp-Entry "next" () 1615 11 ("backward" "forward" "direction" "case" "done?" "not" "when")}
        {Lisp-Entry "done-forward?" () 1622 29 ("error")}
        {Lisp-Entry "done-backward?" () 1626 29 ("error")}
        {Lisp-Entry "done?" () 1630 11 ("done-backward?" "backward" "done-forward?" "forward" "direction" "case")}
        {Lisp-Entry "put-forward" () 1636 29 ("error" "object")}
        {Lisp-Entry "put-backward" () 1640 29 ("error" "object")}
        {Lisp-Entry "put" () 1644 11 ("put-backward" "backward" "put-forward" "forward" "direction" "case" "object")}
        {Lisp-Entry "set-direction" () 1650 18 ("direction" "set!" "dir")}}
      {Lisp-Entry "explore" () 1654 20 ("class-of" "new-explorer" "rest" "object")}
      {Lisp-Entry "Factory" () 1663 7 ("Object")
        {Lisp-Entry "put" () 1666 26 ("self" "error" "object")}
        {Lisp-Entry "put-unique" () 1670 26 ("self" "error" "rest" "object")}
        {Lisp-Entry "put-sequence" () 1674 26 ("put" "for-each" "seq")}
        {Lisp-Entry "put-sequence!" () 1678 26 ("put" "for-each" "seq")}
        {Lisp-Entry "get-output" () 1682 26 ("self" "error")}}
      {Lisp-Entry "can-grow?" () 1690 20 ("false" "Sequence" "true" "List" "typecase" "object")}
      {Lisp-Entry "new-factory" () 1696 20 ("make-vector" "Vector" "make-string" "Sequence-Factory" "String" "List-Factory" "new" "List" "typecase" "size" "object")}
      {Lisp-Entry "Sequence-Class" () 1708 7 ("Class")
        {Lisp-Entry "allocate-sequence" () 1711 35 ("len")}
        {Lisp-Entry "new-explorer" () 1714 11 ("Sequence-Explorer" "new" "apply" "rest" "object")}}
      {Lisp-Entry "coerce-object" () 1718 11 ()}
      {Lisp-Entry "Sequence" () 1727 7 ("Object" "Sequence-Class")
        {Lisp-Entry "compare-object" () 1730 11 (":incompatible" "1" "+" "neq?" "element" "compare" "cmp" ":less" "else" ":greater" ">" ":equal" "=" "cond" ">=" "or" "0" "i" "iterate" "l2" "self" "length" "l1" "let" "Sequence" "is?" "if" "seq")}
        {Lisp-Entry "copy-object" () 1746 11 ("1" "+" "element" "set-element!" "begin" "=" "0" "i" "iterate" "let" "class-of" "allocate-sequence" "new-seq" "self" "length" "len" "copy" "x" "lambda" "if" "subcopy" "let*" "deep?")}
        {Lisp-Entry "new-explorer" () 1759 16 ("Sequence-Explorer" "new" "apply" "rest" "object")}
        {Lisp-Entry "new-factory" () 1764 40 ()}
        {Lisp-Entry "object-alphabetic?" () 1767 11 ("self" "alphabetic?" "every?")}
        {Lisp-Entry "object-numeric?" () 1771 11 ("self" "numeric?" "every?")}
        {Lisp-Entry "object-alphanumeric?" () 1775 11 ("self" "alphanumeric?" "every?")}
        {Lisp-Entry "object-whitespace?" () 1779 11 ("self" "whitespace?" "every?")}
        {Lisp-Entry "object-upper-case?" () 1783 11 ("self" "upper-case?" "every?")}
        {Lisp-Entry "object-lower-case?" () 1787 11 ("self" "lower-case?" "every?")}
        {Lisp-Entry "object-upcase" () 1791 11 ("self" "upcase" "map")}
        {Lisp-Entry "object-downcase" () 1795 11 ("self" "downcase" "map")}
        {Lisp-Entry "object-capitalize" () 1799 11 ("self" "upcase" "false" "set!" "not" "alphanumeric?" "if" "object" "dynamic" "function" "map" "true" "break?" "let")}}
      {Lisp-Entry "sequence?" () 1812 13 ("Sequence" "is?" "seq")}
      {Lisp-Entry "element" () 1816 17 ("n" "seq")}
      {Lisp-Entry "set-element!" () 1819 17 ("obj" "n" "seq")}
      {Lisp-Entry "length" () 1822 17 ("seq")}
      {Lisp-Entry "empty?" () 1825 13 ("length" "0" "=" "seq")}
      {Lisp-Entry "tail" () 1829 17 ("start" "seq")}
      {Lisp-Entry "last" () 1832 17 ("seq")}
      {Lisp-Entry "butlast" () 1835 17 ("seq")}
      {Lisp-Entry "skip-whitespace" () 1838 17 ("seq")}
      {Lisp-Entry "skip-whitespace" () 1841 11 ()}
      {Lisp-Entry "subseq" () 1848 13 ("1" "+" "set!" "element" "set-element!" "" "while" "j" "0" "i" "class-of" "allocate-sequence" "sub" "length" "either" "-" "len" "let*" "type" "end" "start" "seq")}
      {Lisp-Entry "replace-subseq!" () 1860 17 ("replacement" "end" "start" "seq")}
      {Lisp-Entry "subseq!" () 1863 13 ("subseq-share" "length" "end" "start" "seq")}
      {Lisp-Entry "subseq-share" () 1867 17 ("end" "start" "seq")}
      {Lisp-Entry "subseq-share" () 1869 11 ()}
      {Lisp-Entry "iterate" () 1875 11 ()}
      {Lisp-Entry "sort-list" () 1879 13 ("let*" "cddr" "or" "split" "cdr" "cons" "apply-key" "if" "e2" "car" "e1" "let" "else" "null?" "cond" "l2" "l1" "merge" "merge-sort" "define" "key" "smaller" "l")}
      {Lisp-Entry "sort" () 1906 13 ("sort" "unimplemented" "sort-list" "pair?" "null?" "or" "if" "key" "seq" "test")}
      {Lisp-Entry "first" () 1912 27 ("0" "element" "seq")}
      {Lisp-Entry "second" () 1913 27 ("1" "element" "seq")}
      {Lisp-Entry "third" () 1914 27 ("2" "element" "seq")}
      {Lisp-Entry "fourth" () 1915 27 ("3" "element" "seq")}
      {Lisp-Entry "fifth" () 1916 27 ("4" "element" "seq")}
      {Lisp-Entry "sixth" () 1917 27 ("5" "element" "seq")}
      {Lisp-Entry "seventh" () 1918 27 ("6" "element" "seq")}
      {Lisp-Entry "eighth" () 1919 27 ("7" "element" "seq")}
      {Lisp-Entry "ninth" () 1920 27 ("8" "element" "seq")}
      {Lisp-Entry "tenth" () 1921 27 ("9" "element" "seq")}
      {Lisp-Entry "set-first!" () 1923 27 ("0" "set-element!" "value" "seq")}
      {Lisp-Entry "set-second!" () 1924 27 ("1" "set-element!" "value" "seq")}
      {Lisp-Entry "set-third!" () 1925 27 ("2" "set-element!" "value" "seq")}
      {Lisp-Entry "set-fourth!" () 1926 27 ("3" "set-element!" "value" "seq")}
      {Lisp-Entry "set-fifth!" () 1927 27 ("4" "set-element!" "value" "seq")}
      {Lisp-Entry "set-sixth!" () 1928 27 ("5" "set-element!" "value" "seq")}
      {Lisp-Entry "set-seventh!" () 1929 27 ("6" "set-element!" "value" "seq")}
      {Lisp-Entry "set-eighth!" () 1930 27 ("7" "set-element!" "value" "seq")}
      {Lisp-Entry "set-ninth!" () 1931 27 ("8" "set-element!" "value" "seq")}
      {Lisp-Entry "set-tenth!" () 1932 27 ("9" "set-element!" "value" "seq")}
      {Lisp-Entry "element-reversed" () 1935 20 ("1" "length" "-" "element" "n" "seq")}
      {Lisp-Entry "for-each" () 1939 20 ("iterate" "obj" "for" "loop" "scheme.for-each" "apply" "pair?" "null?" "or" "if" "rest" "seq" "proc")}
      {Lisp-Entry "map" () 1946 20 ("collect" "iterate" "obj" "for" "loop" "scheme.map" "apply" "pair?" "null?" "or" "if" "rest" "seq" "proc")}
      {Lisp-Entry "map-to" () 1953 20 ("map" "apply" "coerce" "rest" "seq" "proc" "type")}
      {Lisp-Entry "apply-key" () 1957 21 ("not" "if" "object" "key")}
      {Lisp-Entry "apply-test" () 1963 21 ("not" "if" "eqv?" "default-test" "y" "x" "test")}
      {Lisp-Entry "gather" () 1969 20 ("collect" "iterate" "obj" "for" "loop" "coerce" "List" "type" "type:" "iterable")}
      {Lisp-Entry "collect" () 1975 20 ("class-of" "collect" "when" "apply-key" "val" "with" "iterate" "obj" "for" "loop" "coerce" "key" "key:" "seq" "proc")}
      {Lisp-Entry "collect-if" () 1983 20 ("class-of" "collect" "apply-key" "when" "iterate" "obj" "for" "loop" "coerce" "key" "key:" "seq" "predicate")}
      {Lisp-Entry "collect-type" () 1990 20 ("class-of" "collect" "apply-key" "is?" "when" "iterate" "obj" "for" "loop" "coerce" "key" "key:" "seq" "type")}
      {Lisp-Entry "collect-sections" () 1997 20 ("reset" "get-output" "put" "begin" "apply-test" "if" "value" "dynamic" "function" "for-each" "section" "List-Factory" "new" "sections" "let" "test" "test:" "separator" "separator:" "lst")}
      {Lisp-Entry "count" () 2011 20 ("increase!" "apply-key" "apply-test" "when" "iterate" "object" "for" "loop" "0" "total" "let" "test" "test:" "key" "key:" "seq" "target")}
      {Lisp-Entry "count-if" () 2019 20 ("increase!" "apply-key" "when" "iterate" "object" "for" "loop" "0" "total" "let" "key" "key:" "seq" "predicate")}
      {Lisp-Entry "count-type" () 2027 20 ("increase!" "apply-key" "is?" "when" "iterate" "object" "for" "loop" "0" "total" "let" "key" "key:" "seq" "type")}
      {Lisp-Entry "find" () 2035 20 ("for-each" "error" "else" "1" "-" "get-position" "case" "apply-key" "apply-test" "object" "dynamic" "function" "proc" "with" "exit" "lambda" "call/ec" "set-position" "when" "iterate" "backward" "direction:" "explore" "iter" "let" "find-string" "position" "eq?" "string?" "0" "either" "find-list" "not" "pair?" "null?" "or" "and" "if" "item" "return" "return:" "false" "reversed?" "reversed?:" "start" "start:" "test" "test:" "key" "key:" "seq" "target")}
      {Lisp-Entry "find-balanced" () 2056 20 ("for-each" "error" "else" "1" "-" "get-position" "position" "case" "" "decrease!" "increase!" "apply-key" "apply-test" "cond" "object" "dynamic" "function" "proc" "with" "exit" "lambda" "call/ec" "set-position" "when" "0" "count" "iterate" "backward" "direction:" "explore" "if" "iter" "let" "item" "return" "return:" "false" "reversed?" "reversed?:" "start" "start:" "test" "test:" "key" "key:" "seq" "close" "open")}
      {Lisp-Entry "find-string" () 2078 13 ("finally" "return" "element" "=" "when" "length" "below" "0" "from" "n" "for" "loop" "seq" "target")}
      {Lisp-Entry "find-if" () 2085 20 ("for-each" "error" "else" "1" "-" "get-position" "position" "case" "apply-key" "object" "dynamic" "function" "proc" "with" "set-position" "when" "iterate" "backward" "direction:" "explore" "iter" "let" "exit" "lambda" "call/ec" "0" "either" "find-if-list" "not" "pair?" "null?" "or" "and" "if" "item" "return" "return:" "false" "reversed?" "reversed?:" "start" "start:" "key" "key:" "seq" "predicate")}
      {Lisp-Entry "get-rank" () 2104 20 ("for-each" "1" "-" "get-position" "apply-key" "apply-test" "object" "dynamic" "function" "proc" "with" "set-position" "when" "iterate" "backward" "direction:" "explore" "iter" "let" "exit" "lambda" "call/ec" "find-string" "string?" "position" "0" "either" "find-list" "not" "pair?" "null?" "or" "and" "if" "false" "reversed?" "reversed?:" "start" "start:" "test" "test:" "key" "key:" "seq" "target")}
      {Lisp-Entry "skip" () 2122 20 ("for-each" "1" "get-position" "-" "apply-key" "not" "when" "object" "dynamic" "function" "proc" "with" "set-position" "iterate" "iter" "let" "return" "lambda" "call/ec" "0" "start" "start:" "key" "key:" "seq" "predicate")}
      {Lisp-Entry "some?" () 2135 20 ("false" "iterate" "for-each" "true" "apply-key" "when" "object" "dynamic" "function" "proc" "with" "return" "lambda" "call/ec" "key" "key:" "seq" "predicate")}
      {Lisp-Entry "every?" () 2146 20 ("true" "iterate" "for-each" "false" "apply-key" "not" "when" "object" "dynamic" "function" "proc" "with" "return" "lambda" "call/ec" "key" "key:" "seq" "predicate")}
      {Lisp-Entry "append" () 2157 20 ("class-of" "coerce" "not" "get-output" "output" "let" "for-each" "set-pure-list?" "pair?" "or" "list?" "car" "first" "let*" "put-sequence" "sequence" "dynamic" "function" "proc" "List-Factory" "new" "fact" "with" "null?" "if" "rest")}
      {Lisp-Entry "subset?" () 2174 20 ("memv?" "element" "dynamic" "function" "every?" "null?" "or" "set2" "set1")}
      {Lisp-Entry "union" () 2181 20 ("apply-union" "rest")}
      {Lisp-Entry "apply-union" () 2185 20 ("class-of" "coerce" "cdr" "iterate" "set" "for-each" "put" "get-output" "member?" "not" "when" "object" "dynamic" "function" "proc" "with" "put-sequence" "List-Factory" "new" "dst" "car" "first" "let" "null?" "if" "test" "test:" "lst")}
      {Lisp-Entry "intersection" () 2201 20 ("cons" "apply-intersection" "rest" "first")}
      {Lisp-Entry "apply-intersection" () 2205 20 ("class-of" "get-output" "coerce" "iterate" "for-each" "put" "member?" "set" "every?" "object" "dynamic" "function" "proc" "with" "List-Factory" "new" "dst" "cdr" "car" "first" "let" "when" "test" "test:" "lst")}
      {Lisp-Entry "difference" () 2220 20 ("class-of" "get-output" "coerce" "iterate" "for-each" "put" "member?" "when" "object" "dynamic" "function" "proc" "with" "List-Factory" "new" "dst" "let" "not" "if" "eqv?" "test" "test:" "y" "x")}
      {Lisp-Entry "set-xor" () 2232 20 ("difference" "union" "eqv?" "test" "test:" "y" "x")}
      {Lisp-Entry "remove" () 2237 20 ("class-of" "get-output" "coerce" "iterate" "for-each" "put" "apply-test" "not" "when" "object" "dynamic" "function" "proc" "with" "List-Factory" "new" "dst" "let" "eqv?" "test" "test:" "seq" "target")}
      {Lisp-Entry "remove-trailing" () 2247 20 ("reverse" "for-each" "false" "cons" "set!" "apply-test" "and" "unless" "element" "dynamic" "function" "proc" "with" "true" "trailing?" "result" "let" "eqv?" "test" "test:" "list" "target")}
      {Lisp-Entry "remove-enclosing" () 2259 20 ("subseq" "decrease!" "1" "-" ">" "increase!" "element" "apply-test" "" "and" "while" "tail" "head" "length" "end" "0" "start" "let*" "eqv?" "test" "test:" "seq" "target")}
      {Lisp-Entry "remove-duplicates" () 2271 20 ("class-of" "coerce" "iterate" "for-each" "put" "get-output" "apply-key" "member?" "not" "when" "object" "dynamic" "function" "proc" "with" "List-Factory" "new" "dst" "let" "eqv?" "test" "test:" "key" "key:" "seq")}
      {Lisp-Entry "remove-nils" () 2281 20 ("identity" "collect-if" "seq")}
      {Lisp-Entry "trim-spaces" () 2285 20 ("remove-enclosing" "seq")}
      {Lisp-Entry "trim-whitespace" () 2289 20 ("whitespace?" "ignore" "c" "function" "test:" "remove-enclosing" "seq")}
      {Lisp-Entry "mismatch" () 2295 20 ("if" "increase!" "get-next" "or" "when" "done?" "not" "while" "0" "pos" "targ" "iterate" "srce" "let" "return" "lambda" "call/ec" "=" "test" "test:" "seq" "target")}
      {Lisp-Entry "prefix" () 2310 20 ("0" "subseq" "cdr" "for-each" "set!" "" "not" "or" "and" "when" "mismatch" "n" "object" "dynamic" "function" "proc" "with" "min" "car" "ref" "let" "null?" "if" "sequences")}
      {Lisp-Entry "prefix?" () 2326 20 ("false" "get-next" "/=" "when" "done?" "not" "and" "while" "iter" "iterate" "targ" "let" "return" "lambda" "call/ec" "seq" "target")}
      {Lisp-Entry "search" () 2337 20 ("queue-list" "enqueue" "begin" "found" "new-queue" "queue" "move" "find" "either" "last" "find-forward" "find-backward" "eqv?" "c" "" "after" "before" "or" "and" "match?" "+" "else" "element" "not" ">=" "cond" "0" "j" "i" "iterate" "1" "-" "to" "pos" "match-case?" "define" "=" "ci=" "if" "test" "size" "length" "len" "let" "word-constituent?" "constituent-test" "constituent-test:" "start" "start:" "all?" "all?:" "ignore-case?" "ignore-case?:" "whole-words?" "whole-words?:" "false" "reverse?" "reverse?:" "seq" "target")}
      {Lisp-Entry "split" () 2403 20 ("when" "search" "iterate" "incr" "else" "get-output" "1" "+" "subseq" "put" "true" "set!" "if" "position" "return:" "start:" "find-if" "pos" "not" "while" "false" "done?" "List-Factory" "new" "result" "0" "previous" "let" "closure?" "list" "length" "zero?" "cond" "separator" "seq")}
      {Lisp-Entry "split-justified" () 2432 20 ("get-output" "increase!" "+" "true" "set!" "subseq" "put" "begin" "" "if" "-" "effective-width" "not" "while" "false" "done?" "List-Factory" "new" "result" "length" "size" "pos" "let" "0" "column" "column:" "separators" "width" "seq")}
      {Lisp-Entry "join" () 2449 20 ("get-output" "append" "apply" "for-each" "seq" "dynamic" "function" "proc" "with" "put" "List-Factory" "new" "dst" "let" "else" "car" "cdr" "null?" "cond" "separator" "sequences")}
      {Lisp-Entry "inject" () 2465 20 ("get-output" "put" "put-sequence" "false" "set!" "if" "element" "dynamic" "function" "for-each" "true" "first?" "List-Factory" "new" "fact" "let" "inserted" "sequence")}
      {Lisp-Entry "substitute" () 2477 20 ("class-of" "get-output" "coerce" "put-sequence" "put" "apply-key" "apply-test" "if" "get-next" "object" "done?" "not" "while" "List-Factory" "new" "dst" "iterate" "src" "let" "false" "sequence?" "sequence?:" "test" "test:" "key" "key:" "seq" "new-value" "old-value")}
      {Lisp-Entry "substitute-alist" () 2490 20 ("class-of" "get-output" "coerce" "put" "true" "set!" "put-sequence" "apply-key" "apply-test" "when" "old" "bind" "unless" "replacement" "dynamic" "function" "for-each" "false" "found?" "get-next" "object" "done?" "not" "while" "List-Factory" "new" "dst" "iterate" "src" "let" "test" "test:" "key" "key:" "seq" "replacements")}
      {Lisp-Entry "fill!" () 2508 20 ("next" "put" "done?" "not" "while" "set-position" "when" "iterate" "src" "let" "start" "start:" "object" "seq")}
      {Lisp-Entry "replace!" () 2518 20 ("next" "get-next" "put" "done?" "not" "and" "while" "set-position" "when" "rep" "iterate" "src" "let" "start" "start:" "replacement" "seq")}
      {Lisp-Entry "ordered-position" () 2529 20 ("position" "return:" "find" "" "test" "test:" "key" "key:" "seq" "object")}
      {Lisp-Entry "insert-ordered!" () 2533 20 ("length" "either" "insert!" "ordered-position" "n" "let" "" "test" "test:" "key" "key:" "seq" "object")}
      {Lisp-Entry "merge-ordered" () 2538 20 ("get-next" "expr" "error" "else" ":right" ":greater" ":left" ":less" "next" ":same" ":equal" "case" "ky" "apply-key" "kx" "ey" "peek" "ex" "let*" "done?" "not" "and" "while" "compare" "ci-compare" "if" "either" "compare-proc" "iy" "iterate" "ix" "let" "false" "case-insensitive?" "case-insensitive?:" "test" "test:" "right-key" "right-key:" "left-key" "left-key:" "key" "key:" "y" "x" "proc")}
      {Lisp-Entry "merge" () 2564 20 ("get-output" "cdr" "set-car!" "put" ":equal" "neq?" "not" "or" "if" "object" "list" "pair" "dynamic" "function" "for-each-pair" "List-Factory" "new" "res" "apply-key" "min-key" ":compare" "remove-nils" "car" "map" "minimum" "min" "let*" "identity" "some?" "while" "copy" "scan" "let" "compare" "compare:" "key" "key:" "lists" "proc")}
      {Lisp-Entry "random-element" () 2582 20 ("length" "random" "element" "seq")}
      {Lisp-Entry "partition" () 2586 20 ("elements" "bind" "partition" "map" "reverse!" "for-each" "cdr" "set-cdr!" "list" "cons" "set!" "not" "if" "assoc" "pair" "category" "let*" "element" "dynamic" "function" "proc" "with" "result" "let" "test" "test:" "identity" "key" "key:" "sequence")}
      {Lisp-Entry "partition-binary" () 2602 20 ("values" "cons" "set!" "if" "elem" "dynamic" "function" "for-each" "no" "yes" "let" "predicate" "lst")}
      {Lisp-Entry "starts-with?" () 2613 13 ("0" "subseq" ">=" "and" "trg" "length" "str" "let" "equal?" "test" "test:" "target" "string")}
      {Lisp-Entry "ends-with?" () 2620 13 ("-" "subseq!" ">=" "and" "trg" "length" "str" "let" "=" "test" "test:" "target" "string")}
      {Lisp-Entry "for-each-reversed" () 2628 13 ("reverse" "for-each" "lst" "proc")}
      {Lisp-Entry "find-list" () 2632 13 ("1" "+" "cdr" "error" "else" "item" "position" "eq?" "car" "null?" "cond" "rank" "tail" "rest" "iterate" "eqv?" "x" "lambda" "not" "if" "let" "returned" "start" "test" "key" "list" "target")}
      {Lisp-Entry "find-if-list" () 2645 13 ("1" "+" "cdr" "error" "else" "item" "position" "eq?" "car" "null?" "cond" "rank" "tail" "rest" "iterate" "x" "lambda" "not" "if" "let" "returned" "start" "key" "list" "predicate")}
      {Lisp-Entry "insert-sequence!" () 2657 13 ("replace-subseq!" "pos" "seq" "sequence")}
      {Lisp-Entry "Sequence-Explorer" () 2666 7 ("Explorer")
        {Lisp-Entry "sequence" () 2669 8 ()}
        {Lisp-Entry "sequence-length" () 2670 8 ()}
        {Lisp-Entry "current" () 2671 8 ()}
        {Lisp-Entry "initialize" () 2674 11 ("current" "goto-end" "backward" "goto-beginning" "case" "not" "if" "set-direction" "length" "sequence-length" "sequence" "set!" "nextmethod" "start" "start:" "forward" "direction" "direction:" "seq")}
        {Lisp-Entry "peek-forward" () 2686 11 ("current" "sequence" "element")}
        {Lisp-Entry "peek-backward" () 2690 11 ("1" "current" "-" "sequence" "element")}
        {Lisp-Entry "goto-beginning" () 2694 11 ("0" "current" "set!")}
        {Lisp-Entry "goto-end" () 2698 11 ("sequence-length" "current" "set!")}
        {Lisp-Entry "forward" () 2702 11 ("1" "current" "increase!")}
        {Lisp-Entry "backward" () 2706 11 ("1" "current" "decrease!")}
        {Lisp-Entry "done-forward?" () 2710 11 ("sequence-length" "current" ">=")}
        {Lisp-Entry "done-backward?" () 2714 11 ("0" "current" "=")}
        {Lisp-Entry "put-forward" () 2718 11 ("current" "sequence" "set-element!" "object")}
        {Lisp-Entry "put-backward" () 2722 11 ("1" "current" "-" "sequence" "set-element!" "object")}
        {Lisp-Entry "get-position" () 2726 11 ("current")}
        {Lisp-Entry "set-position" () 2730 11 ("sequence-length" "0" "between" "current" "set!" "pos")}
        {Lisp-Entry "get-state" () 2734 11 ("current")}
        {Lisp-Entry "reset-state" () 2738 11 ("current" "set!" "state")}}
      {Lisp-Entry "Sequence-Factory" () 2747 7 ("Factory")
        {Lisp-Entry "sequence" () 2750 8 ()}
        {Lisp-Entry "sequence-length" () 2751 8 ()}
        {Lisp-Entry "current" () 2752 8 ()}
        {Lisp-Entry "initialize" () 2755 11 ("0" "current" "length" "sequence-length" "sequence" "set!" "nextmethod" "seq")}
        {Lisp-Entry "put" () 2762 11 ("1" "+" "set!" "current" "sequence" "set-element!" "value")}
        {Lisp-Entry "get-output" () 2767 11 ("sequence")}}
      {Lisp-Entry "List-Class" () 2776 7 ("Sequence-Class")
        {Lisp-Entry "allocate-sequence" () 2779 11 ("make-list" "len")}}
      {Lisp-Entry "List" () 2783 7 ("Sequence" "List-Class")
        {Lisp-Entry "initialize" () 2786 11 ("native-class" "rest")}
        {Lisp-Entry "print" () 2790 11 ("self" "write" "detail" "output")}
        {Lisp-Entry "compare-object" () 2794 11 (":not-equal" ":equal" "self" "equal?" "if" "obj")}
        {Lisp-Entry "copy-object" () 2800 11 ("self" "copy" "if" "x" "lambda" "map" "deep?")}}
      {Lisp-Entry "Null-Class" () 2808 7 ("List-Class")}
      {Lisp-Entry "Null" () 2811 7 ("List" "Null-Class")}
      {Lisp-Entry "Pair-Class" () 2814 7 ("List-Class")}
      {Lisp-Entry "Pair" () 2817 7 ("List" "Pair-Class")
        {Lisp-Entry "marshal" () 2820 11 ("cdr" "self" "car" "marshal" "cons")}
        {Lisp-Entry "unmarshal" () 2825 11 ("cdr" "self" "car" "unmarshal" "cons")}}
      {Lisp-Entry "element" () 2830 11 ()}
      {Lisp-Entry "set-element!" () 2834 11 ()}
      {Lisp-Entry "length" () 2838 11 ()}
      {Lisp-Entry "tail" () 2842 11 ()}
      {Lisp-Entry "last" () 2848 11 ()}
      {Lisp-Entry "butlast" () 2854 11 ()}
      {Lisp-Entry "subseq-share" () 2860 11 ()}
      {Lisp-Entry "replace-subseq!" () 2866 11 ()}
      {Lisp-Entry "insert!" () 2878 13 ("list" "insert-sequence!" "pos" "seq" "obj")}
      {Lisp-Entry "insert!" () 2882 13 ("+" "else" "set-cdr!" "null?" "cond" "cdr" "rst" "prev" "1" "i" "iterate" "let" "cons" "0" "=" "if" "pos" "lst" "obj")}
      {Lisp-Entry "last-tail" () 2894 13 ("cdr" "pair?" "cur" "iterate" "let" "null?" "if" "lst")}
      {Lisp-Entry "make-list" () 2903 20 ("1" "-" "cons" "set!" "0" ">" "while" "list" "car" "null?" "if" "fill" "let" "rest" "n")}
      {Lisp-Entry "list-set!" () 2912 20 ("list-tail" "set-car!" "value" "n" "list")}
      {Lisp-Entry "set-cadr!" () 2916 27 ("cdr" "set-car!" "value" "pair")}
      {Lisp-Entry "append!" () 2920 20 ("append" "apply" "queue-list" "enqueue-list" "lst" "function" "for-each" "new-queue" "queue" "let" "pair?" "car" "null?" "or" "if" "rest")}
      {Lisp-Entry "position" () 2930 20 ("0" "1" "+" "cdr" "else" "car" "eqv?" "null?" "cond" "pos" "function" "position" "letrec" "lst" "element")}
      {Lisp-Entry "copy-tree" () 2942 13 ("cdr" "car" "copy-tree" "cons" "pair?" "if" "tree")}
      {Lisp-Entry "position-of" () 2949 13 ("1" "+" "cdr" "car" "eq?" "null?" "if" "0" "i" "rst" "iterate" "let" "lst" "obj")}
      {Lisp-Entry "proper-list?" () 2958 13 ("cdr" "proper-list?" "else" "false" "pair?" "not" "true" "null?" "cond" "lst")}
      {Lisp-Entry "last-cdr" () 2964 13 ("cdr" "last-cdr" "pair?" "if" "lst")}
      {Lisp-Entry "but-last-cdr" () 2970 13 ("cdr" "but-last-cdr" "car" "cons" "pair?" "if" "lst")}
      {Lisp-Entry "move-to-head!" () 2976 13 ("else" "cons" "set-cdr!" "cond" "cdr" "scan" "previous" "iterate" "let" "car" "eq?" "null?" "or" "if" "lst" "target")}
      {Lisp-Entry "move-to-tail!" () 2987 13 ("begin" "if" "scan" "previous" "iterate" "let" "else" "cdr" "cons" "last-tail" "set-cdr!" "car" "eq?" "null?" "cond" "lst" "target")}
      {Lisp-Entry "augment" () 3006 20 ("get-output" "set!" "put" "car" "put-sequence" "cdr" "null?" "if" "not-null?" "while" "scan" "List-Factory" "new" "fact" "let" "rest")}
      {Lisp-Entry "memq?" () 3017 20 ("memq" "boolean" "list" "target")}
      {Lisp-Entry "memv?" () 3021 20 ("memv" "boolean" "list" "target")}
      {Lisp-Entry "member?" () 3025 20 ("cdr" "else" "car" "apply-key" "apply-test" "null?" "cond" "scan" "iterate" "let" "equal?" "test" "test:" "key" "key:" "list" "target")}
      {Lisp-Entry "assoc" () 3035 20 ("cdr" "apply-key" "apply-test" "car" "pair" "null?" "if" "scan" "iterate" "let" "equal?" "test" "test:" "key" "key:" "list" "target")}
      {Lisp-Entry "rassoc" () 3045 20 ("cdr" "apply-key" "apply-test" "car" "pair" "null?" "if" "scan" "iterate" "let" "equal?" "test" "test:" "key" "key:" "list" "target")}
      {Lisp-Entry "find-pair" () 3055 20 ("cdr" "else" "car" "eq?" "null?" "cond" "scan" "iterate" "let" "list" "target")}
      {Lisp-Entry "reverse!" () 3065 20 ("set-cdr!" "cdr" "set!" "not-null?" "while" "ptr" "res" "let" "list")}
      {Lisp-Entry "remove!" () 3076 20 ("set-cdr!" "begin" "scan" "previous" "let" "null?" "if" "cdr" "set!" "car" "apply-key" "not-null?" "and" "while" "eqv?" "test" "test:" "key" "key:" "list" "target")}
      {Lisp-Entry "getprop" () 3093 20 ("error" "pair?" "not" "cdr" "set!" "car" "apply-key" "eqv?" "when" "not-null?" "while" "scan" "let" "return" "lambda" "call/ec" "key" "key:" "target" "plist")}
      {Lisp-Entry "getf" () 3107 20 ("cadr" "not" "if" "getprop" "pair" "let" "not-found" "not-found:" "key" "key:" "target" "plist")}
      {Lisp-Entry "setf" () 3114 20 ("getprop" "set-second!" "value" "target" "plist")}
      {Lisp-Entry "addf" () 3118 20 ("set-second!" "list" "append!" "not" "if" "getprop" "pair" "let" "value" "target" "plist")}
      {Lisp-Entry "for-each-pair" () 3126 20 ("cdr" "set!" "not-null?" "while" "lst" "proc")}
      {Lisp-Entry "for-each-property" () 3132 20 ("cddr" "set!" "cadr" "car" "not-null?" "while" "lst" "proc")}
      {Lisp-Entry "map-property" () 3138 20 ("queue-list" "enqueue" "value" "property" "function" "for-each-property" "new-queue" "queue" "let" "lst" "proc")}
      {Lisp-Entry "flatten" () 3146 20 ("append" "apply" "llist")}
      {Lisp-Entry "uniform" () 3150 20 ("cdr" "apply-test" "unless" "value" "object" "dynamic" "function" "for-each" "car" "apply-key" "first" "let" "return" "lambda" "call/ec" "when" "test" "test:" "key" "key:" "lst")}
      {Lisp-Entry "sort-property-list" () 3163 20 ("append" "apply" "car" "key:" "" "sort" "sorted" "get-output" "for-each-property" "begin" "alist" "list" "put" "value" "property" "dynamic" "function" "proc" "List-Factory" "new" "factory" "let*" "prop-list")}
      {Lisp-Entry "iterate" () 3174 11 ()}
      {Lisp-Entry "List-Iterator" () 3183 7 ("Iterator")
        {Lisp-Entry "current" () 3186 8 ()}
        {Lisp-Entry "position" () 3187 8 ()}
        {Lisp-Entry "initialize" () 3190 11 ("0" "position" "current" "set!" "nextmethod" "list")}
        {Lisp-Entry "get-next!" () 3196 11 ("1" "+" "position" "cdr" "set!" "car" "prog1" "eof-object" "current" "null?" "if")}
        {Lisp-Entry "done?" () 3204 11 ("Empty" "peeked" "eq?" "current" "null?" "and")}
        {Lisp-Entry "put" () 3208 11 ("current" "set-car!" "object")}
        {Lisp-Entry "get-position" () 3212 11 ("position")}
        {Lisp-Entry "set-position" () 3216 11 ("tail" "current" "set!" ">" "error" "0" "" "cond" "position" "-" "delta" "let" "pos")}
        {Lisp-Entry "get-state" () 3224 11 ("position" "current" "cons")}
        {Lisp-Entry "reset-state" () 3228 11 ("cdr" "position" "car" "current" "set!" "state")}
        {Lisp-Entry "get-list" () 3233 18 ("current")}}
      {Lisp-Entry "List-Factory" () 3242 7 ("Factory")
        {Lisp-Entry "list" () 3245 8 ()}
        {Lisp-Entry "last-list" () 3246 8 ()}
        {Lisp-Entry "last-anchor" () 3247 8 ()}
        {Lisp-Entry "current" () 3248 8 ()}
        {Lisp-Entry "size" () 3249 8 ("0")}
        {Lisp-Entry "pure-list?" () 3250 8 ("false")}
        {Lisp-Entry "put" () 3253 11 ("increase!" "size" "prog1" "cdr" "set-cdr!" "copy-last-list" "last-list" "when" "else" "list" "cons" "set!" "current" "null?" "cond" "object")}
        {Lisp-Entry "put-unique" () 3266 11 ("put" "list" "member?" "unless" "eqv?" "test" "test:" "object")}
        {Lisp-Entry "put-sequence" () 3271 11 ("length" "increase!" "size" "prog1" "set-cdr!" "last-anchor" "copy-last-list" "else" "list" "last-list" "set!" "current" "null?" "cond" "nextmethod" "pair?" "not" "if" "when" "seq")}
        {Lisp-Entry "put-sequence!" () 3289 11 ("put-sequence" "seq")}
        {Lisp-Entry "is-empty?" () 3293 18 ("current" "null?")}
        {Lisp-Entry "get-size" () 3297 18 ("size")}
        {Lisp-Entry "get-list" () 3301 18 ("list")}
        {Lisp-Entry "get-last-element" () 3305 18 ("current" "car")}
        {Lisp-Entry "get-pure-list?" () 3309 18 ("pure-list?")}
        {Lisp-Entry "set-pure-list?" () 3313 18 ("pure-list?" "set!" "value")}
        {Lisp-Entry "get-output" () 3317 11 ("list")}
        {Lisp-Entry "reset" () 3321 18 ("0" "size" "current" "last-anchor" "last-list" "list" "set!")}
        {Lisp-Entry "copy-last-list" () 3329 19 ("set-cdr!" "else" "last-tail" "current" "last-list" "copy" "list" "set!" "last-anchor" "not" "cond")}}
      {Lisp-Entry "Hashtable-Class" () 3345 7 ("Class")}
      {Lisp-Entry "Hashtable" () 3348 7 ("Object" "Hashtable-Class")
        {Lisp-Entry "initialize" () 3351 11 ("native-class" "rest")}
        {Lisp-Entry "print" () 3355 11 ("hashtable-length" "format" "dynamic" "function" "self" "print-unreadable" "readably" "printer")}
        {Lisp-Entry "gather-keys" () 3362 18 ("self" "cons" "set!" "value" "key" "dynamic" "function" "for-each-hash" "list" "let")}
        {Lisp-Entry "gather-values" () 3370 18 ("self" "cons" "set!" "value" "key" "dynamic" "function" "for-each-hash" "list" "let")}
        {Lisp-Entry "gather-keys/values" () 3378 18 ("self" "cons" "set!" "value" "key" "dynamic" "function" "for-each-hash" "list" "let")}}
      {Lisp-Entry "new-hashtable" () 3386 20 ("either" "make-hashtable" "hash" "test")}
      {Lisp-Entry "hash-ref" () 3390 20 ("hashtable-ref" "default" "key" "hashtable")}
      {Lisp-Entry "hash-set!" () 3394 20 ("hashtable-set!" "value" "key" "hashtable")}
      {Lisp-Entry "hash-add" () 3398 13 ("hash-ref" "cons" "hash-set!" "value" "key" "hashtable")}
      {Lisp-Entry "hash-remove!" () 3402 20 ("hash-ref" "remove!" "hash-set!" "value" "name" "hashtable")}
      {Lisp-Entry "for-each-hash" () 3406 20 ("iterate-hashtable" "hashtable" "proc")}
      {Lisp-Entry "iterate" () 3410 11 ()}
      {Lisp-Entry "hash-clear" () 3414 12 ("hashtable-clear")}
      {Lisp-Entry "empty-hashtable" () 3417 13 ("empty-hashtable" "unimplemented" "hashtable")}
      {Lisp-Entry "load-hashtable" () 3421 20 ("hashtable-set!" "error" "hashtable-ref" "if" "eof-object?" "not" "and" "when" "object" "read" "name" "iterate" "let" "File-Reader" "new" "reader" "with-closed" "error-on-duplicates?" "file" "hashtable")}
      {Lisp-Entry "Map" () 3437 7 ("Object")
        {Lisp-Entry "gather-keys" () 3441 18 ("self" "cons" "set!" "value" "key" "dynamic" "function" "for-each-map" "list" "let")}
        {Lisp-Entry "gather-keys/values" () 3450 18 ("self" "cons" "set!" "value" "key" "dynamic" "function" "for-each-map" "list" "let")}}
      {Lisp-Entry "new-map" () 3458 12 ("new-hashtable")}
      {Lisp-Entry "map-ref" () 3459 12 ("hashtable-ref")}
      {Lisp-Entry "map-set!" () 3460 12 ("hashtable-set!")}
      {Lisp-Entry "map-clear" () 3461 13 ("map-set!" "sym" "map")}
      {Lisp-Entry "map-length" () 3464 12 ("hashtable-length")}
      {Lisp-Entry "empty-map" () 3466 13 ("map-set!" "k" "lambda" "for-each" "hashtable-keys" "keys" "let" "map")}
      {Lisp-Entry "load-map" () 3470 13 ("load-map" "unimplemented" "map")}
      {Lisp-Entry "for-each-map" () 3474 20 ("for-each-hash" "map" "proc")}
      {Lisp-Entry "iterate" () 3478 11 ()}
      {Lisp-Entry "input-port" () 3487 13 ("get-port" "Reader" "is?" "if" "obj")}
      {Lisp-Entry "output-port" () 3498 13 ("get-port" "Printer" "is?" "current-output-port" "not" "if" "obj")}
      {Lisp-Entry "print-unreadable" () 3506 20 ("format" "object->serial-number" "number" "empty-string?" "if" "spacer" "get-output-string" "open-output-string" "let" "string" "class-of" "get-name" "identifier-name" "class-name" "let*" "proc" "output" "object")}
      {Lisp-Entry "pathname=" () 3521 20 ("compare-pathname" "y" "x")}
      {Lisp-Entry "pathname-exists?" () 3525 20 ("parse" "file-exists?" "pathname")}
      {Lisp-Entry "pathname-delete" () 3529 20 ("parse" "file-delete" "pathname")}
      {Lisp-Entry "pathname-last-modification-time" () 3533 20 ("parse" "file-last-modification-time" "pathname")}
      {Lisp-Entry "Active-Process" () 3542 12 ()}
      {Lisp-Entry "Process-Active?" () 3545 12 ()}
      {Lisp-Entry "get-process" () 3549 13 ("Active-Process")}
      {Lisp-Entry "get-application" () 3553 13 ("Active-Process")}
      {Lisp-Entry "set-process" () 3557 13 ("Active-Process" "set!" "process")}
      {Lisp-Entry "set-application" () 3561 13 ("Active-Process" "set!" "application")}
      {Lisp-Entry "activate-process" () 3565 13 ("Process-Active?" "set!")}
      {Lisp-Entry "process-active?" () 3569 13 ("Process-Active?")}
      {Lisp-Entry "Active-Workbench" () 3573 12 ()}
      {Lisp-Entry "get-workbench" () 3577 13 ("Active-Workbench")}
      {Lisp-Entry "set-workbench" () 3581 13 ("Active-Workbench" "set!" "workbench")}
      {Lisp-Entry "Slot" () 3590 7 ("Field")
        {Lisp-Entry "rank" () 3593 8 ("generate")}
        {Lisp-Entry "initialize" () 3594 8 ("generate")}}
      {Lisp-Entry "Property" () 3602 7 ("Slot")
        {Lisp-Entry "getter" () 3605 8 ("generate")}
        {Lisp-Entry "setter" () 3606 8 ("generate")}}
      {Lisp-Entry "symbolize-property" () 3609 20 ("else" "keyword->symbol" "keyword?" "get-name" "field?" "cond" "property")}
      {Lisp-Entry "symbolize-properties" () 3615 20 ("get-output" "for-each-property" "symbolize-property" "put" "value" "property" "dynamic" "function" "proc" "with" "List-Factory" "new" "fact" "let" "properties")}
      {Lisp-Entry "keywordize-property" () 3625 20 ("else" "keyword?" "field-name" "symbol->keyword" "field?" "cond" "property")}
      {Lisp-Entry "keywordize-properties" () 3631 20 ("get-output" "for-each-property" "keywordize-property" "put" "value" "property" "dynamic" "function" "proc" "with" "List-Factory" "new" "fact" "let" "properties")}
      {Lisp-Entry "read-property" () 3641 20 ("property-field" "property-getter" "getter" "let" "expr" "object")}
      {Lisp-Entry "write-property" () 3646 20 ("property-field" "property-setter" "setter" "let" "value" "expr" "object")}
      {Lisp-Entry "property-field" () 3651 20 ("error" "keyword->symbol" "keyword?" "class-of" "category-field" "field" "let" "property?" "if" "expr" "object")}
      {Lisp-Entry "Reader" () 3665 7 ("Object")
        {Lisp-Entry "port" () 3668 8 ("generate")}}
      {Lisp-Entry "read" () 3671 20 ("input-port" "scheme.read" "car" "null?" "if" "port" "let" "rest")}
      {Lisp-Entry "read-char" () 3676 20 ("input-port" "scheme.read-char" "car" "null?" "if" "port" "let" "rest")}
      {Lisp-Entry "peek-char" () 3681 20 ("input-port" "scheme.peek-char" "car" "null?" "if" "port" "let" "rest")}
      {Lisp-Entry "read-until" () 3686 20 ("enqueue" "queue-list" "if" "read" "expr" "iterate" "new-queue" "queue" "let" "reader" "test")}
      {Lisp-Entry "read-string-element" () 3696 20 ("read" "String-Reader" "new" "reader" "with-closed" "string")}
      {Lisp-Entry "read-string-content" () 3701 20 ("eof-object?" "read-until" "String-Reader" "new" "reader" "with-closed" "string")}
      {Lisp-Entry "read-delimited-string" () 3706 20 ("get-output" "put" "true" "read-delimited" "set!" "eof-object?" "not" "while" "List-Factory" "fact" "list" "let" "String-Reader" "new" "reader" "with-closed" "char" "string")}
      {Lisp-Entry "parse-integer" () 3715 20 ("type:" "object:" "Convertion-Error" "new" "signal" "read-string-element" "numeric?" "empty-string?" "not" "and" "if" "string")}
      {Lisp-Entry "parse-hexadecimal" () 3721 20 ("format" "read-string-element" "string")}
      {Lisp-Entry "parse-boolean" () 3725 20 ("type:" "object:" "Convertion-Error" "new" "signal" "else" "false" "true" "ci=" "cond" "string")}
      {Lisp-Entry "parse-strings" () 3731 20 ("split" "trim-spaces" "dynamic" "function" "map" "=" "empty-string?" "or" "if" "separator" "separator:" "string")}
      {Lisp-Entry "parse-delimited-string" () 3739 20 ("parse-strings" "dynamic" "function" "map" "separator" "separator:" "string")}
      {Lisp-Entry "require-char" () 3745 20 ("error" "eof-object?" "if" "read-char" "c" "let" "reader")}
      {Lisp-Entry "skip-line" () 3752 20 ("eqv?" "eof-object?" "not" "and" "if" "read-char" "c" "iterate" "let" "reader")}
      {Lisp-Entry "skip-whites" () 3763 20 ("read-char" "whitespace?" "when" "skip-line" "eqv?" "if" "eof-object?" "unless" "peek-char" "c" "iterate" "let" "reader")}
      {Lisp-Entry "read-delimited" () 3774 20 ("enqueue" "else" "read" "enqueue-list" "read-char" "eqv?" "error" "queue-list" "if" "eof-object?" "cond" "peek-char" "c" "skip-whites" "iterate" "new-queue" "queue" "let" "false" "allow-eof?" "delimiter" "kind" "reader")}
      {Lisp-Entry "string-delimiter?" () 3794 20 ("eqv?" "c")}
      {Lisp-Entry "EOF-Object" () 3798 12 ("eof-object" "list")}
      {Lisp-Entry "eof-object" () 3801 20 ("EOF-Object")}
      {Lisp-Entry "eof-object?" () 3804 20 ("EOF-Object" "eq?" "scheme.eof-object?" "or" "obj")}
      {Lisp-Entry "read-line" () 3809 20 ("false" "write-char" "else" "case" "get-output-string" "eof-object?" "if" "read-char" "c" "true" "empty?" "iterate" "open-output-string" "port" "let" "reader")}
      {Lisp-Entry "read-line-proper" () 3828 13 ("write-char" "else" "case" "get-output-string" "false" "values" "eof-object?" "if" "read-char" "c" "true" "empty?" "iterate" "open-output-string" "port" "let" "reader")}
      {Lisp-Entry "read-lines" () 3847 13 ("queue-list" "when" "set!" "enqueue" "begin" "if" "read-line-proper" "proper?" "line" "receive" "iterate" "false" "last-proper?" "new-queue" "queue" "let" "reader")}
      {Lisp-Entry "String-Reader" () 3872 7 ("Reader")
        {Lisp-Entry "initialize" () 3875 11 ("open-input-string" "port" "set!" "nextmethod" "str")}
        {Lisp-Entry "destroy" () 3880 11 ("nextmethod" "port" "close-input-port")}}
      {Lisp-Entry "File-Reader" () 3890 7 ("Reader")
        {Lisp-Entry "initialize" () 3893 11 ("parse" "open-input-file" "port" "set!" "nextmethod" "file")}
        {Lisp-Entry "destroy" () 3898 11 ("nextmethod" "port" "close-input-port")}}
      {Lisp-Entry "String-Class" () 3908 7 ("Sequence-Class")
        {Lisp-Entry "allocate-sequence" () 3911 11 ("make-string" "len")}}
      {Lisp-Entry "coerce-object" () 3915 11 ()}
      {Lisp-Entry "String" () 3921 7 ("Sequence" "String-Class")
        {Lisp-Entry "initialize" () 3924 11 ("native-class" "rest")}
        {Lisp-Entry "print" () 3928 11 ("write" "self" "display" ":human" "eq?" "if" "detail" "output")}
        {Lisp-Entry "compare-object" () 3934 11 (":incompatible" ":greater" "else" ":less" "string<?" ":equal" "self" "string=?" "cond" "string?" "if" "obj")}
        {Lisp-Entry "ci-compare-object" () 3946 11 (":incompatible" ":greater" "else" ":less" "string-ci<?" ":equal" "self" "string-ci=?" "cond" "string?" "if" "obj")}}
      {Lisp-Entry "element" () 3958 11 ()}
      {Lisp-Entry "set-element!" () 3962 11 ()}
      {Lisp-Entry "length" () 3966 11 ()}
      {Lisp-Entry "tail" () 3970 11 ()}
      {Lisp-Entry "last" () 3977 11 ()}
      {Lisp-Entry "butlast" () 3981 11 ()}
      {Lisp-Entry "replace-subseq!" () 3985 11 ()}
      {Lisp-Entry "empty-string?" () 3991 20 ("string-length" "zero?" "string?" "and" "object")}
      {Lisp-Entry "->string" () 3996 20 ("get-output-string" "print" "open-output-string" "output" "let" ":human" "detail" "expr")}
      {Lisp-Entry "remove-trailing-newline" () 4002 20 ("0" "subseq" "1" "-" "element" "eqv?" "if" "length" "len" "let" "string")}
      {Lisp-Entry "value-string?" () 4009 20 ("empty-string?" "not" "string?" "and" "object")}
      {Lisp-Entry "wi=" () 4014 20 ("else" "eqv?" "eq?" "cond" "when" ">=" "increase!" "element" "whitechar?" "and" "set!" "not" "or" "while" "d2?" "=" "d1?" "w2?" "false" "w1?" "true" "s?" "l2" "length" "l1" "n2" "0" "n1" "let*" "return" "lambda" "call/ec" "s2" "s1")}
      {Lisp-Entry "unique-domain-name" () 4054 20 ("increase!" "->string" "set!" "while" "suffix" "1" "n" "subseq" "starts-with?" "when" "string" "dynamic" "function" "collect" "suffixes" "length" "common-length" "append" "common-prefix" "let*" "member?" "not" "if" "separator" "separator:" "domain" "name")}
      {Lisp-Entry "remove-numeric-suffix" () 4070 20 ("1" "+" "0" "subseq" "if" "position" "return:" "true" "reversed?:" "numeric?" "not" "c" "dynamic" "function" "find-if" "pos" "let" "string")}
      {Lisp-Entry "compare-n" () 4077 13 ("1" "+" "string-ref" "eqv?" "not" "or" ">=" "if" "0" "n" "iterate" "ylen" "string-length" "xlen" "let" "max" "y" "x")}
      {Lisp-Entry "string-checksum" () 4088 13 ("1" "+" "string-ref" "char->integer" "increase!" "" "when" "n" "iterate" "string-length" "len" "0" "sum" "let" "str")}
      {Lisp-Entry "new-thread" () 4103 20 ("scheme-thread-start!" "if" "thread-specific-set!" "set-scheme-thread" "make-scheme-thread" "scheme-thread" "new" "thread" "let*" "start?" "start?:" "execute" "execute:" "name" "name:" "class")}
      {Lisp-Entry "primary-thread-object" () 4113 12 ()}
      {Lisp-Entry "primary-thread" () 4117 20 ("primary-thread-object")}
      {Lisp-Entry "primary-thread?" () 4121 20 ("primary-thread" "active-thread" "eq?")}
      {Lisp-Entry "time>" () 4132 20 ("time->seconds" ">" "t2" "t1")}
      {Lisp-Entry "wait" () 4136 13 ("wait" "unimplemented" "delay")}
      {Lisp-Entry "is-not?" () 4145 27 ("is?" "not" "type" "object")}
      {Lisp-Entry "type-name" () 4149 13 ("get-category-name" "cl")}
      {Lisp-Entry "type-ascendant" () 4153 13 ("get-class-ascendant" "obj")}
      {Lisp-Entry "new-in" () 4158 13 ("new" "apply" "rest" "obj")}
      {Lisp-Entry "typed?" () 4162 13 ("autoload" "is?" "classname" "obj")}
      {Lisp-Entry "Vector-Class" () 4172 7 ("Sequence-Class")
        {Lisp-Entry "allocate-sequence" () 4175 11 ("make-vector" "len")}}
      {Lisp-Entry "Vector" () 4179 7 ("Sequence" "Vector-Class")
        {Lisp-Entry "initialize" () 4182 11 ("native-class" "rest")}
        {Lisp-Entry "print" () 4187 11 ("print-object" "element" "let" "do" "length" "below" "0" "from" "n" "for" "loop" "self" "class-of" "type-name" "format" "readably" "printer")}
        {Lisp-Entry "object-similar?" () 4197 11 ("self" "length" "zero?" "vector?" "and" "object")}}
      {Lisp-Entry "element" () 4203 11 ()}
      {Lisp-Entry "set-element!" () 4207 11 ()}
      {Lisp-Entry "length" () 4211 11 ()}
      {Lisp-Entry "tail" () 4215 11 ()}
      {Lisp-Entry "last" () 4219 11 ()}
      {Lisp-Entry "butlast" () 4223 11 ()}
      {Lisp-Entry "Axis-Class" () 4232 7 ("Sequence-Class")
        {Lisp-Entry "allocate-sequence" () 4235 11 ("Axis" "new" "len")}}
      {Lisp-Entry "Axis" () 4239 7 ("Sequence" "Axis-Class")
        {Lisp-Entry "MIN_SIZE" () 4242 14 ("8")}
        {Lisp-Entry "GOLDEN_RATIO" () 4243 14 ()}
        {Lisp-Entry "size" () 4246 8 ("generate")}
        {Lisp-Entry "content" () 4247 8 ("generate")}
        {Lisp-Entry "initialize" () 4250 11 ("make-vector" "content" "size" "set!" "0" "s")}
        {Lisp-Entry "print" () 4255 11 ("content" "size" "format" "function" "self" "print-unreadable" "detail" "output")}
        {Lisp-Entry "add" () 4261 18 ("content" "set-element!" "1" "+" "grow" "size" "n" "let" "obj")}
        {Lisp-Entry "grow" () 4267 18 ("1" "+" "element" "set-element!" "begin" "when" "i" "iterate" "GOLDEN_RATIO" "*" "round" "inexact->exact" "old-content" "old-real-size" "let" "else" "MIN_SIZE" "make-vector" "set!" "0" "size" "=" "set-size" "content" "length" "" "cond" "n")}}
      {Lisp-Entry "element" () 4285 11 ()}
      {Lisp-Entry "set-element!" () 4289 11 ()}
      {Lisp-Entry "length" () 4293 11 ()}
      {Lisp-Entry "tail" () 4297 11 ()}
      {Lisp-Entry "last" () 4307 11 ()}
      {Lisp-Entry "replace-subseq!" () 4311 11 ()}
      {Lisp-Entry "axis-add" () 4341 13 ("set-element!" "1" "+" "grow" "length" "size" "let" "obj" "axis")}
      {Lisp-Entry "box-list" () 4352 20 ("cons" "lst")}
      {Lisp-Entry "unbox-list" () 4356 20 ("cdr" "box")}
      {Lisp-Entry "closure?" () 4365 20 ("procedure?" "object")}
      {Lisp-Entry "Enumeration" () 4375 7 ("Type")
        {Lisp-Entry "name" () 4378 8 ()}
        {Lisp-Entry "entries" () 4379 8 ()}
        {Lisp-Entry "construct-literal" () 4383 16 ("self" "new" "entries" "name" "context")}
        {Lisp-Entry "initialize" () 4387 11 ("entries~self" "name~self" "set!" "Enumeration" "nextmethod" "entries" "name")}
        {Lisp-Entry "foldable?" () 4393 11 ("true")}
        {Lisp-Entry "fold-object" () 4397 11 ("entries" "name" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "print" () 4405 11 ("entries" "name" "self" "class-of" "type-name" "format" "readably" "printer")}
        {Lisp-Entry "get-name" () 4412 18 ("name")}
        {Lisp-Entry "get-entries" () 4416 18 ("entries")}
        {Lisp-Entry "set-value" () 4420 18 ("entry-from-name" "cdr" "set-car!" "value" "name")}
        {Lisp-Entry "get-size" () 4424 11 ("int" "size-of")}
        {Lisp-Entry "read-content" () 4428 11 ("%read-int" "address")}
        {Lisp-Entry "write-content" () 4432 11 ("%write-int" "object" "address")}
        {Lisp-Entry "entry-from-name" () 4436 11 ("self" "error" "eq?" "test:" "first" "key:" "entries" "find" "either" "name")}
        {Lisp-Entry "entry-from-value" () 4441 11 ("self" "error" "eqv?" "test:" "second" "key:" "entries" "find" "either" "value")}
        {Lisp-Entry "value->name" () 4446 18 ("entry-from-value" "car" "value")}
        {Lisp-Entry "name->value" () 4450 18 ("entry-from-name" "cadr" "name")}
        {Lisp-Entry "get-rank" () 4454 18 ("position" "return:" "eq?" "test:" "first" "key:" "entries" "find" "1" "+" "0" "name" "=" "if" "target")}}
      {Lisp-Entry "enumeration?" () 4460 27 ("enumeration?" "unimplemented" "object")}
      {Lisp-Entry "set-enumeration!" () 4464 20 ("set-value" "set-enumeration!" "unimplemented" "value" "name" "enumeration")}
      {Lisp-Entry "Printer" () 4475 7 ("Object")
        {Lisp-Entry "port" () 4478 8 ("generate")}
        {Lisp-Entry "initialize" () 4481 11 ("port~self" "set!" "nextmethod" "port")}
        {Lisp-Entry "destroy" () 4486 11 ("nextmethod" "self" "call-destroying-output")}
        {Lisp-Entry "put" () 4492 26 ("port" "write-char" "c")}
        {Lisp-Entry "put-buffer" () 4496 26 ("put-buffer" "unimplemented" "size" "buffer")}
        {Lisp-Entry "force-output" () 4500 26 ()}
        {Lisp-Entry "flush-output" () 4506 26 ()}
        {Lisp-Entry "get-position" () 4510 26 ()}
        {Lisp-Entry "set-position" () 4514 26 ("pos")}
        {Lisp-Entry "fresh-line?" () 4518 26 ("self" "at-fresh-line?")}}
      {Lisp-Entry "display" () 4524 20 ("output-port" "scheme.display" "car" "null?" "if" "port" "let" "rest" "obj")}
      {Lisp-Entry "write" () 4529 20 ("output-port" "scheme.write" "car" "null?" "if" "port" "let" "rest" "obj")}
      {Lisp-Entry "write-char" () 4534 20 ("output-port" "scheme.write-char" "car" "null?" "if" "port" "let" "rest" "c")}
      {Lisp-Entry "write-line" () 4539 20 ("newline" "display" "car" "null?" "if" "port" "let" "rest" "line")}
      {Lisp-Entry "write-lines" () 4545 20 ("write-line" "null?" "unless" "do" "remain" "remainder" "in" "line" "for" "loop" "use-utf8?" "platform" "lines" "printer")}
      {Lisp-Entry "newline" () 4552 20 ("output-port" "scheme.newline" "car" "null?" "if" "port" "let" "rest")}
      {Lisp-Entry "String-Printer" () 4562 7 ("Printer")
        {Lisp-Entry "initialize" () 4565 11 ("open-output-string" "nextmethod")}
        {Lisp-Entry "destroy" () 4569 11 ("nextmethod" "port" "close-output-port")}
        {Lisp-Entry "get-output" () 4574 18 ("port" "get-output-string")}}
      {Lisp-Entry "File-Printer" () 4583 7 ("Printer")
        {Lisp-Entry "initialize" () 4586 11 ("parse" "open-output-file" "nextmethod" "file")}
        {Lisp-Entry "destroy" () 4590 11 ("nextmethod" "port" "close-output-port")}}
      {Lisp-Entry "Format-Processor" () 4613 7 ("Object")
        {Lisp-Entry "out" () 4616 8 ()}
        {Lisp-Entry "control-string" () 4617 8 ()}
        {Lisp-Entry "control-reader" () 4618 8 ()}
        {Lisp-Entry "arguments" () 4619 8 ()}
        {Lisp-Entry "arguments-iterator" () 4620 8 ()}
        {Lisp-Entry "formatter" () 4621 8 ()}
        {Lisp-Entry "initialize" () 4624 11 ("formatter~self" "List-Iterator" "arguments-iterator~self" "arguments~self" "String-Reader" "new" "control-reader~self" "control-string~self" "set!" "nextmethod" "arguments" "control-string")}
        {Lisp-Entry "process-format" () 4638 11 ("control-reader" "process" "out" "set!" "printer" "dynamic" "function" "with-printer" "destination")}
        {Lisp-Entry "process" () 4650 11 ("arguments-empty?" "toplevel?" "and" "localize-directive" "z" "freshline-directive" "$" "newline-directive" "%" "tab-directive" "&" "column-directive" "_" "properties-directive" "k" "list-directive" "l" "real-directive" "r" "binary-directive" "b" "hexadecimal-directive" "x" "unsigned-directive" "u" "char-directive" "print-directive" "p" "text-directive" "t" "sexpr-directive" "s" "ascii-directive" "a" "read-parameters" "parameters" "read" "directive" "else" "conditional-directive" "error" "peek-char" "out" "print-char" "when" "require-char" "case" "set!" "eof-object?" "if" "read-char" "c" "not" "while" "false" "done?" "let" "true" "output?" "reader")}
        {Lisp-Entry "read-parameters" () 4697 11 ("read-delimited" "reader")}
        {Lisp-Entry "toplevel?" () 4701 11 ("control-reader" "eq?" "reader")}
        {Lisp-Entry "arguments-empty?" () 4705 11 ("arguments-iterator" "done?")}
        {Lisp-Entry "conditional-directive" () 4714 11 ("false" "else" "true" "process-conditional" "read-char" "peek-char" "=" "cond" "reader")}
        {Lisp-Entry "read-control-string" () 4722 11 ("get-output" "print-char" "true" "set!" "read-char" "begin" "peek-char" "=" "and" "if" "require-char" "c" "not" "while" "false" "done?" "String-Printer" "new" "printer" "let" "reader")}
        {Lisp-Entry "process-conditional" () 4735 11 ("process" "peek-argument" "not" "next-argument" "and" "or" "output?" "read-control-string" "String-Reader" "new" "subreader" "let" "explicit?" "reader")}
        {Lisp-Entry "ascii-directive" () 4746 11 ("display" "printer" "dynamic" "function" "with-justification" "when" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "sexpr-directive" () 4754 11 ("write" "printer" "dynamic" "function" "with-justification" "when" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "text-directive" () 4762 11 ("textual" "printer" "dynamic" "function" "with-justification" "when" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "print-directive" () 4770 11 ("print-expr" "printer" "dynamic" "function" "with-justification" "when" "detail" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "char-directive" () 4779 11 ("print-char" "printer" "dynamic" "function" "with-justification" "when" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "unsigned-directive" () 4787 11 ("print-unsigned" "printer" "dynamic" "function" "with-justification" "when" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "hexadecimal-directive" () 4795 11 ("print-hexadecimal" "printer" "dynamic" "function" "with-justification" "when" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "binary-directive" () 4803 11 ("print-binary" "printer" "dynamic" "function" "with-justification" "when" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "real-directive" () 4811 11 ("print-real" "printer" "dynamic" "function" "with-justification" "when" "get-precision" "precision" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "list-directive" () 4820 11 ("print-list" "printer" "dynamic" "function" "with-justification" "when" "get-detail" "detail" "get-after" "after" "get-before" "before" "get-last-separator" "last-separator" "get-separator" "separator" "next-argument" "argument" "let*" "output?" "parameters")}
        {Lisp-Entry "properties-directive" () 4833 11 ("cddr" "set!" "print-expr" "print-char" "neq?" "not" "memq?" "null?" "or" "and" "cadr" "value" "car" "key" "not-null?" "while" "scan" "printer" "dynamic" "function" "with-justification" "when" "get-detail" "detail" "get-empty-value" "empty-value" "get-properties" "properties" "next-argument" "argument" "let" "output?" "parameters")}
        {Lisp-Entry "column-directive" () 4854 11 ("out" "print-char" "do" "repeat" "loop" "1" "optional-parameter" "count" "let" "when" "output?" "parameters")}
        {Lisp-Entry "tab-directive" () 4861 11 ("out" "print-char" "do" "repeat" "loop" "1" "optional-parameter" "count" "let" "when" "output?" "parameters")}
        {Lisp-Entry "newline-directive" () 4868 11 ("out" "newline" "do" "repeat" "loop" "1" "optional-parameter" "count" "let" "when" "output?" "parameters")}
        {Lisp-Entry "freshline-directive" () 4875 11 ("newline" "do" "-" "repeat" "loop" "out" "fresh-line" "1" "optional-parameter" "count" "let" "when" "output?" "parameters")}
        {Lisp-Entry "localize-directive" () 4883 11 ("display" "printer" "dynamic" "function" "with-justification" "when" "next-argument" "localize" "argument" "let" "localize-directive" "unimplemented" "output?" "parameters")}
        {Lisp-Entry "with-justification" () 4898 11 ("justify" "get-output" "buffer" "String-Printer" "new" "printer" "get-padding" "padding" "get-justify" "justification" "out" "not" "if" "get-width" "width" "let" "proc" "parameters")}
        {Lisp-Entry "justify" () 4910 11 (":right" "print-char" "do" "repeat" "loop" ":left" "case" "-" "n" "out" "display" ">=" "if" "length" "size" "let" "padding" "justification" "width" "buffer")}
        {Lisp-Entry "optional-parameter" () 4931 11 ("next-argument" ":v" "eq?" "car" "param" "let" "null?" "if" "default" "parameters")}
        {Lisp-Entry "keyword-parameter" () 4940 11 ("next-argument" ":v" "eq?" "if" "not-found:" "getf" "param" "let" "default" "keyword" "parameters")}
        {Lisp-Entry "get-list?" () 4947 11 ("false" "list?:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-width" () 4951 11 ("width:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-justify" () 4955 11 ("error" ":right" "memq?" "not" "if" ":left" "justify:" "keyword-parameter" "param" "let" "parameters")}
        {Lisp-Entry "get-padding" () 4962 11 ("padding:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-separator" () 4966 11 ("separator:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-last-separator" () 4970 11 ("last-separator:" "keyword-parameter" "separator" "parameters")}
        {Lisp-Entry "get-before" () 4974 11 ("before:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-after" () 4978 11 ("after:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-precision" () 4982 11 ("3" "precision:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-properties" () 4986 11 ("properties:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-empty-value" () 4990 11 ("empty-value:" "keyword-parameter" "parameters")}
        {Lisp-Entry "get-detail" () 4994 11 (":reader" "detail:" "keyword-parameter" "parameters")}
        {Lisp-Entry "peek-argument" () 5003 11 ("peek" "control-string" "error" "arguments-iterator" "done?" "if")}
        {Lisp-Entry "next-argument" () 5009 11 ("get-next" "control-string" "error" "arguments-iterator" "done?" "if")}}
      {Lisp-Entry "Formatting" () 5020 7 ("Reader")
        {Lisp-Entry "read-string" () 5023 18 ("self" "formatting-read-string")}
        {Lisp-Entry "read-parameters" () 5028 18 ("self" "formatting-read-parameters")}}
      {Lisp-Entry "parse-format" () 5038 13 ("cddr" "cadr" "cdr" ":string" "car" "string?" "if" "proc" "rest")}
      {Lisp-Entry "format" () 5044 20 ("process-format" "Format-Processor" "new" "processor" "let" "arguments" "control-string" "destination" "lambda" "jazz.parse-format" "rest")}
      {Lisp-Entry "function?" () 5057 20 ("procedure?" "object")}
      {Lisp-Entry "compose" () 5061 20 ("x" "function" "g" "f")}
      {Lisp-Entry "eval-symbol" () 5071 13 ("dispatch" "obj" "symbol")}
      {Lisp-Entry "identity" () 5076 27 ("x")}
      {Lisp-Entry "interpreter-present?" () 5085 13 ()}
      {Lisp-Entry "break" () 5090 13 ("break" "unimplemented" "rest")}
      {Lisp-Entry "localize" () 5100 13 ("obj")}
      {Lisp-Entry "with-macro-expression" () 5109 20 ("let*" "list" "generate-symbol" "symbol" "let" "symbol?" "if" "proc" "expr")}
      {Lisp-Entry "*output-printer*" () 5122 12 ("current-output-port" "Printer" "new")}
      {Lisp-Entry "*error-printer*" () 5126 12 ("current-output-port" "Printer" "new")}
      {Lisp-Entry "*console-printer*" () 5130 12 ("current-output-port" "Printer" "new")}
      {Lisp-Entry "resolve-printer" () 5134 13 ("else" "*console-printer*" ":console" "*error-printer*" ":error" "*output-printer*" ":output" "case" "obj")}
      {Lisp-Entry "with-printer" () 5142 20 ("resolve-printer" "get-output" "String-Printer" "new" "let" ":string" "eq?" "if" "proc" "printer")}
      {Lisp-Entry "get-printer-use-utf8?" () 5150 13 ("printer")}
      {Lisp-Entry "set-printer-use-utf8?" () 5154 13 ("flag" "printer")}
      {Lisp-Entry "textual" () 5159 13 (":text" "resolve-printer" "print" ":output" "printer" "expr")}
      {Lisp-Entry "describe" () 5163 13 (":describe" "resolve-printer" "print" ":output" "printer" "expr")}
      {Lisp-Entry "print-expr" () 5167 13 ("resolve-printer" "print" ":output" "printer" "detail" "expr")}
      {Lisp-Entry "print-char" () 5171 13 ("output-port" "write-char" ":output" "printer" "c")}
      {Lisp-Entry "print-unsigned" () 5175 13 ("output-port" "write" ":output" "printer" "n")}
      {Lisp-Entry "print-hexadecimal" () 5180 13 ("output-port" "write" ":output" "printer" "n")}
      {Lisp-Entry "print-binary" () 5185 13 ("output-port" "write" ":output" "printer" "b")}
      {Lisp-Entry "print-real" () 5190 13 ("output-port" "write" ":output" "printer" "precision" "r")}
      {Lisp-Entry "print-list" () 5195 13 ("null?" "pair?" "if" "cdr" "next" "print" "car" "expr" "scan" "iterate" "let" "display" "not-null?" "when" ":output" "printer" "detail" "after" "before" "last-separator" "separator" "list")}
      {Lisp-Entry "fresh-line" () 5213 13 ("newline" "at-fresh-line?" "unless" ":output" "printer")}
      {Lisp-Entry "at-fresh-line?" () 5218 13 (":output" "printer")}
      {Lisp-Entry "profile" () 5228 16 ("%profile" "augment" "begin" "cons" "not" "if" ":condition" "condition" "name:" "name" "true" "not-found:" "unwrap-syntax" "key:" ":on?" "getf" "on?" "cdr" "body" "car" "control" "let" "expressions")}
      {Lisp-Entry "build-search-automata" () 5244 13 ("build-search-automata" "unimplemented" "constituent-test" "object" "ignore-case?" "whole-words?" "targets")}
      {Lisp-Entry "automata-statistics" () 5248 13 ("automata-statistics" "unimplemented" "automata")}
      {Lisp-Entry "automata-search" () 5252 13 ("automata-search" "unimplemented" "col" "row" "limit" "paragraphs" "automata")}
      {Lisp-Entry "Subseq-Class" () 5261 7 ("Sequence-Class")}
      {Lisp-Entry "Subseq" () 5264 7 ("Sequence" "Subseq-Class")
        {Lisp-Entry "sequence" () 5267 8 ("generate")}
        {Lisp-Entry "start" () 5268 8 ("generate")}
        {Lisp-Entry "size" () 5269 8 ("generate")}
        {Lisp-Entry "initialize" () 5272 11 ("size~self" "start~self" "sequence~self" "set!" "nextmethod" "size" "start" "sequence")}
        {Lisp-Entry "print" () 5279 11 ("format" "function" "self" "print-unreadable" "string-ref" "print-char" "do" "size" "+" "below" "start" "from" "n" "for" "loop" "sequence" "string?" "if" "detail" "output")}}
      {Lisp-Entry "element" () 5289 11 ()}
      {Lisp-Entry "set-element!" () 5293 11 ()}
      {Lisp-Entry "length" () 5297 11 ()}
      {Lisp-Entry "subseq-share" () 5301 11 ()}
      {Lisp-Entry "coerce-string" () 5307 11 ()}
      {Lisp-Entry "offset-subseq!" () 5313 13 ("get-start" "+" "set-start" "offset" "subseq")}
      {Lisp-Entry "grow-subseq!" () 5317 13 ("get-size" "+" "set-size" "n" "subseq")}
      {Lisp-Entry "syntax?" () 5326 20 ("syntax?" "unimplemented" "expr")}
      {Lisp-Entry "unwrap-syntax" () 5330 20 ("syntax-expression" "syntax?" "if" "unwrap-syntax" "unimplemented" "expr")}
      {Lisp-Entry "word-constituent?" () 5347 20 ("memq?" "numeric?" "alphabetic?" "or" "c")}}})
"_library"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "_library.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "_library.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.library" () 37 8 ()}})
"_license"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "license" "_license.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.license" () 0 9 ("jazz")}})
"_literals"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "literals" "_literals.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.literals" () 37 9 ("jazz")}})
"_look"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "look" "_look.fusion"} {Time 128360604040000000L}
    {Lisp-Entry "jazz.ui.look" () 37 9 ("jazz")
      {Lisp-Entry "Active-Look" () 40 12 ()}
      {Lisp-Entry "Installed-Looks" () 44 12 ()}
      {Lisp-Entry "get-look" () 48 20 ("Active-Look")}
      {Lisp-Entry "set-look" () 52 20 ("look-update" "Active-Look" "set!" "look")}
      {Lisp-Entry "get-looks" () 57 20 ("Installed-Looks")}
      {Lisp-Entry "set-looks" () 61 20 ("Installed-Looks" "set!" "looks")}
      {Lisp-Entry "look-update" () 70 13 ("Active-Look" "select-look")}
      {Lisp-Entry "select-look" () 74 13 ("present" "set-title" "locate-component" "label" "let" "when" "get-status-bar" "status" "get-application" "appl" "let*" "look")}}})
"_lua"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "_lua.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.lua" () 0 9 ("jazz")}})
"_messenger"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "messenger" "_messenger.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.messenger" () 0 9 ("jazz")}})
"_modules"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "modules" "_modules.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.modules" () 37 9 ("jazz")
      {Lisp-Entry "validate-modules" () 43 13 ("Y" "X" "new" "debug")}}})
"_org.jazz"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "_org.jazz.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "org.jazz" () 37 7 ("tag-source:" "source:" "name:" "editable?:" "org.jazz" "File" "documentation:" "Product")}})
"_p"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "suite" "_p.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.suite.p" () 37 9 ("jazz")}})
"_performance"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "_performance.scm"} {Time 128366793880000000L}
    {Lisp-Entry "test.performance" () 0 8 ()}})
"_platform"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "_platform.fusion"} {Time 128369340520000000L}
    {Lisp-Entry "jazz.platform" () 37 9 ("initialize-aliases" "jazz")
      {Lisp-Entry "bell" () 45 20 ("MB_ICONEXCLAMATION" "MessageBeep")}
      {Lisp-Entry "clock" () 55 12 ("system-clock")}
      {Lisp-Entry "clocks/second" () 58 12 ("system-clocks/second")}
      {Lisp-Entry "new-point" () 64 20 ("POINT-y-set!" "POINT-x-set!" "POINT-make" "point" "let" "y" "x")}
      {Lisp-Entry "POINT->point" () 71 20 ("POINT-y-ref" "POINT-x-ref" "Point" "new" "not" "if" "pt")}
      {Lisp-Entry "point->POINT" () 79 20 ("get-v" "get-h" "new-point" "point")}
      {Lisp-Entry "POINT->dimension" () 83 20 ("POINT-y-ref" "POINT-x-ref" "Dimension" "new" "not" "if" "pt")}
      {Lisp-Entry "SIZE->dimension" () 91 20 ("cy" "cx" "get" "Dimension" "new" "not" "if" "unimplemented" "size")}
      {Lisp-Entry "new-rect" () 101 20 ("RECT-bottom-set!" "RECT-right-set!" "RECT-top-set!" "inexact->exact" "RECT-left-set!" "RECT-make" "rect" "let" "bottom" "right" "top" "left")}
      {Lisp-Entry "rect->RECT" () 110 20 ("get-bottom" "get-right" "get-top" "get-left" "round" "new-rect" "rect")}
      {Lisp-Entry "RECT->rect" () 117 20 ("RECT-bottom-ref" "RECT-right-ref" "RECT-top-ref" "RECT-left-ref" "Rect" "new" "not" "if" "rect")}
      {Lisp-Entry "make-event-id" () 129 20 ("code" "facility" "severity" "+" "make-event-id" "unimplemented" "rest")}
      {Lisp-Entry "Current-Cursor" () 142 19 ()}
      {Lisp-Entry "Cursors" () 147 19 (":horizontal-splitter" ":vertical-splitter" ":left-arrow" ":spy" ":zoom-out" ":zoom-in" ":zoom" ":closed-hand" ":opened-hand" "Cursor-Resource" "new" ":move" "IDC_NO" ":no" "IDC_SIZEWE" ":west-east" "IDC_SIZEALL" ":all" "IDC_HAND" ":finger" "IDC_CROSS" ":cross" "IDC_IBEAM" ":ibeam" "IDC_WAIT" ":wait" "IDC_ARROW" ":arrow" "list")}
      {Lisp-Entry "find-cursor-file" () 169 20 ("get-name" "string-append" "Native" "list" "File" "new" "object")}
      {Lisp-Entry "load-cursor" () 173 13 ("LR_LOADFROMFILE" "0" "IMAGE_CURSOR" "NULL" "LoadImage" "parse" "ident" "find-cursor-file" "file?" "let*" "LoadCursorInt" "number?" "if" "cursor")}
      {Lisp-Entry "get-named-cursor" () 180 13 ("cadr" "error" "not" "if" "Cursors" "assq" "info" "let" "name")}
      {Lisp-Entry "get-cursor" () 187 20 ("Current-Cursor")}
      {Lisp-Entry "set-cursor" () 191 20 ("load-cursor" "SetCursor" "get-named-cursor" "symbol?" "if" "let" "set!" "Current-Cursor" "=" "false" "unless" "cursor")}
      {Lisp-Entry "hide-cursor" () 198 20 ("0" "false" "ShowCursor" ">=" "while")}
      {Lisp-Entry "show-cursor" () 203 20 ("0" "true" "ShowCursor" "" "while")}
      {Lisp-Entry "WM_APP" () 216 12 ("0")}
      {Lisp-Entry "JZ_POST" () 219 12 ("4" "WM_APP" "+")}
      {Lisp-Entry "JZ_SEND" () 220 12 ("5" "WM_APP" "+")}
      {Lisp-Entry "JZ_RECEIVE" () 221 12 ("6" "WM_APP" "+")}
      {Lisp-Entry "JZ_TASKICON" () 222 12 ("7" "WM_APP" "+")}
      {Lisp-Entry "Messenger" () 225 19 ()}
      {Lisp-Entry "setup-messaging" () 228 20 ("Message-Window" "new" "Messenger" "set!")}
      {Lisp-Entry "restore-messaging" () 237 20 ("object-address" "ReplyMessage" "InSendMessage" "when" "restore-messaging" "unimplemented")}
      {Lisp-Entry "log-event" () 249 20 ("ReportEvent" "0" "array-set!" "1" "string" "new-array" "strings" "RegisterEventSource" "handle" "get-process" "process-event-source" "name" "let*" "log-event" "unimplemented" "message" "event-id" "type")}
      {Lisp-Entry "log-error-event" () 259 20 ("event-id" "EVENTLOG_ERROR_TYPE" "log-event" "log-error-event" "unimplemented" "rest" "message")}
      {Lisp-Entry "log-success-event" () 265 20 ("EVENTLOG_SUCCESS" "log-event" "log-success-event" "unimplemented" "1" "make-event-id" "event-id" "event-id:" "message")}
      {Lisp-Entry "play-sound" () 276 20 ("SND_FILENAME" "bit-or" "NULL" "parse" "PlaySound" "file?" "SND_SYNC" "SND_ASYNC" "if" "async-bit" "let" "true" "asynchronous?" "asynchronous?:" "sound")}
      {Lisp-Entry "with-preserved-current-directory" () 284 20 ("set-current-directory" "unwind-protect" "get-current-directory" "preserved" "let" "proc")}
      {Lisp-Entry "get-work-area" () 293 20 ("RECT->rect" "adjust-work-area-with-taskbar" "NULL" "SPI_GETWORKAREA" "SystemParametersInfo" "RECT" "area" "with" "0" "Rect" "new")}
      {Lisp-Entry "adjust-work-area-with-taskbar" () 302 13 ("ABE_BOTTOM" "ABE_RIGHT" "ABE_TOP" "0" "1" "expand-rect" "ABE_LEFT" "ecase" "ABS_ALWAYSONTOP" "ABS_AUTOHIDE" "mask-bit-set?" "and" "if" "get-taskbar-edge" "edge" "get-taskbar-state" "state" "let" "adjust-work-area-with-taskbar" "unimplemented" "rect")}
      {Lisp-Entry "get-taskbar-state" () 316 20 ("ABM_GETSTATE" "SHAppBarMessage" "size-of" "cbSize" "set" "APPBARDATA" "new" "data" "with" "get-taskbar-state" "unimplemented")}
      {Lisp-Entry "get-taskbar-edge" () 324 20 ("uEdge" "get" "ABM_GETTASKBARPOS" "SHAppBarMessage" "size-of" "cbSize" "set" "APPBARDATA" "new" "data" "with" "get-taskbar-edge" "unimplemented")}
      {Lisp-Entry "get-computer-name" () 333 20 ("adjust-string" "GetComputerName" "make-string" "name" "1" "MAX_COMPUTERNAME_LENGTH" "+" "size" "let*")}
      {Lisp-Entry "get-windows-user-name" () 343 20 ("adjust-string" "GetUserName" "MAX_PATH" "make-string" "username" "let")}
      {Lisp-Entry "Version-Info" () 357 19 ()}
      {Lisp-Entry "version-info" () 361 13 ("GetVersionEx" "sizeof-OSVERSIONINFOEX" "OSVERSIONINFOEX-dwOSVersionInfoSize-set!" "OSVERSIONINFOEX-make" "info" "let" "set!" "Version-Info" "unless")}
      {Lisp-Entry "Windows-Version" () 371 19 ()}
      {Lisp-Entry "get-windows-version" () 375 20 ("0" "OSVERSIONINFOEX-dwMinorVersion-ref" "OSVERSIONINFOEX-dwMajorVersion-ref" "Version" "new" "version-info" "info" "let" "set!" "Windows-Version" "unless")}
      {Lisp-Entry "validate-version" () 386 20 ("format" "if" "error" "" "and" "mandatory-version" "mandatory" "get-process" "process" "let*" "present" "register-crash-info" "when" "validate-version" "unimplemented" "cleanup" "cleanup:" "register" "register:" "version" "context" "what" "title")}
      {Lisp-Entry "format-system-message" () 409 20 ("NULL" "0" "FORMAT_MESSAGE_FROM_SYSTEM" "FormatMessage" "/=" "when" "1" "-" "make-string" "msg" "size" "let*" "format-system-message" "unimplemented" "id")}
      {Lisp-Entry "Shift-Bit" () 426 12 ("1")}
      {Lisp-Entry "Control-Bit" () 429 12 ("2")}
      {Lisp-Entry "Alt-Bit" () 432 12 ("4")}
      {Lisp-Entry "NoModifiers" () 436 19 ("0")}
      {Lisp-Entry "modifiers-keys" () 440 20 ("alt-down?" "Alt-Bit" "control-down?" "Control-Bit" "shift-down?" "Shift-Bit" "0" "mask-bit-set")}
      {Lisp-Entry "shift-key?" () 444 20 ("Shift-Bit" "mask-bit-set?" "modifier")}
      {Lisp-Entry "control-key?" () 448 20 ("Control-Bit" "mask-bit-set?" "modifier")}
      {Lisp-Entry "alt-key?" () 452 20 ("Alt-Bit" "mask-bit-set?" "modifier")}
      {Lisp-Entry "key-down?" () 456 20 ("0" "GetAsyncKeyState" "hibyte" "/=" "key")}
      {Lisp-Entry "shift-down?" () 460 20 ("VK_SHIFT" "key-down?")}
      {Lisp-Entry "control-down?" () 464 20 ("VK_CONTROL" "key-down?")}
      {Lisp-Entry "alt-down?" () 468 20 ("VK_MENU" "key-down?")}
      {Lisp-Entry "modifiers-down" () 472 20 ("alt-down?" "control-down?" "shift-down?" "values")}
      {Lisp-Entry "mouse-clicked?" () 478 20 ("VK_LBUTTON" "key-down?")}
      {Lisp-Entry "extensions-filter" () 488 20 ("get-output" "join" "cdr" "car" "put" "ext" "dynamic" "function" "for-each" "1" "make-string" "separator" "List-Factory" "new" "dst" "let" "NULL" "null?" "if" "extensions-filter" "unimplemented" "extensions")}
      {Lisp-Entry "Pending-Posts" () 514 19 ()}
      {Lisp-Entry "Post-Primary-Lock" () 518 19 ("Lock" "new")}
      {Lisp-Entry "post-primary" () 522 20 ("NULL" "object-address" "JZ_POST" "Messenger" "post-message" "cons" "Pending-Posts" "set!" "Post-Primary-Lock" "synchronize" "primary-thread?" "if" "proc")}
      {Lisp-Entry "queue-primary" () 533 20 ("NULL" "object-address" "JZ_POST" "Messenger" "post-message" "cons" "Pending-Posts" "set!" "Post-Primary-Lock" "synchronize" "queue-primary" "unimplemented" "proc")}
      {Lisp-Entry "receive-post" () 542 20 ("0" "remove!" "Pending-Posts" "set!" "address-object-unsafe" "proc" "let" "receive-post" "unimplemented" "wparam")}
      {Lisp-Entry "wait-for" () 552 20 ("error" "WAIT_TIMEOUT" "and" "WAIT_OBJECT_0" "=" "array-length" "WaitForMultipleObjects" "WaitForSingleObject" "result" "1" "+" "set-state" "begin" "unwind-protect" "get-state" "state" "active-thread" "thread" "array-set!" "do" "0" "from" "n" "in" "for" "loop" "int" "new-array" "array" "length" "count" "when" "map" "remove-nils" "handles" "let" "handle/array" "pair?" "not" "single?" "INFINITE" "either" "integer?" "if" "object" "dynamic" "function" "get-handle" "let*" "wait-for" "unimplemented" "true" "error?" "error?:" "timeout" "timeout:" "object/objects")}
      {Lisp-Entry "execute-primary" () 598 20 ("NULL" "object-address" "JZ_SEND" "Messenger" "send-message" "primary-thread?" "if" "proc")}
      {Lisp-Entry "receive-primary" () 614 20 ("NULL" "object-address" "JZ_RECEIVE" "Messenger" "send-message" "address-object-unsafe" "primary-thread?" "if" "proc")}
      {Lisp-Entry "receive-primary-with-error" () 622 20 ("get-output" "get-message" "format" "String-Printer" "new" "printer" "not" "if" ":string" "print-stack" "set!" "Error" "call-with-catch" "error" "let" "dynamic" "function" "receive-primary" "stack" "err" "result" "receive" "values" "proc")}
      {Lisp-Entry "guess-process-instance" () 655 20 ("collect-processes-id" "CloseHandle" "increase!" "extract-base" "base" "adjust-string" "NULL" "GetModuleBaseName" "when" "MAX_PATH" "make-string" "name" "false" "PROCESS_VM_READ" "PROCESS_QUERY_INFORMATION" "bit-or" "OpenProcess" "handle" "=" "if" "id" "dynamic" "function" "for-each" "return" "lambda" "call/ec" "0" "count" "module-base" "process-base" "GetCurrentProcessId" "process-id" "let" "guess-process-instance" "unimplemented")}
      {Lisp-Entry "collect-processes-id" () 677 20 ("get-output" "array-length" "naturals" "put" "0" "/=" "when" "array-ref" "id" "n" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let" "EnumProcesses" "received" "success?" "receive" "int" "new-array" "processes" "count" "let*" "collect-processes-id" "unimplemented")}
      {Lisp-Entry "snapshot-process" () 697 20 ("snapshot-process-content" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "snapshot-process" "unimplemented")}
      {Lisp-Entry "dump-memory" () 707 20 ("dump-memory-content" "thread" "function" "execute:" "self" "context:" "name:" "Thread" "new" "dump-memory" "unimplemented")}
      {Lisp-Entry "Crash-Info" () 717 19 ()}
      {Lisp-Entry "register-crash-info" () 721 20 ("update-crash-info" "set-cdr!" "list" "append!" "set!" "not" "if" "cons" "value" "Crash-Info" "assq" "pair" "let" "register-crash-info" "unimplemented" "info" "context" "name")}
      {Lisp-Entry "update-crash-info" () 732 13 ("set-crash-info" "get-output" "Crash-Info" "if" "format" "info" "context" "name" "bind" "pair" "dynamic" "function" "for-each" "String-Printer" "new" "printer" "let" "update-crash-info" "unimplemented")}
      {Lisp-Entry "Mac" () 830 19 ("0")}
      {Lisp-Entry "Unix" () 833 19 ("1")}
      {Lisp-Entry "Win32" () 836 19 ("2")}
      {Lisp-Entry "Mac-Ending" () 845 19 ("0")}
      {Lisp-Entry "Unix-Ending" () 848 19 ("1")}
      {Lisp-Entry "Windows-Ending" () 851 19 ("2")}
      {Lisp-Entry "reload-system-properties" () 860 13 ("reload-system-properties" "unimplemented")}
      {Lisp-Entry "get-system-properties" () 862 13 ("get-system-properties" "unimplemented")}
      {Lisp-Entry "get-compiled-property" () 864 13 ("get-compiled-property" "unimplemented" "name")}
      {Lisp-Entry "get-system-property" () 866 13 ("get-system-property" "unimplemented" "name")}
      {Lisp-Entry "set-system-property" () 868 13 ("set-system-property" "unimplemented" "value" "name")}
      {Lisp-Entry "require-system-property" () 870 13 ("require-system-property" "unimplemented" "name")}
      {Lisp-Entry "Moniker-Class" () 879 7 ("Class")
        {Lisp-Entry "get-protocol" () 882 26 ()}
        {Lisp-Entry "get-modal" () 886 26 ("rest")}
        {Lisp-Entry "new-moniker" () 890 26 ("list")}}
      {Lisp-Entry "Moniker" () 894 7 ("Object" "Moniker-Class")
        {Lisp-Entry "compare-pathname" () 897 26 ("false" "object")}
        {Lisp-Entry "present" () 906 26 ()}
        {Lisp-Entry "present-base" () 910 26 ("get-base" "->string")}
        {Lisp-Entry "present-name" () 914 26 ("get-name" "->string")}
        {Lisp-Entry "present-location" () 918 26 ("get-parent" "get-list" "format")}
        {Lisp-Entry "exists?" () 927 26 ()}
        {Lisp-Entry "read-only?" () 931 18 ("get-writable?" "not")}
        {Lisp-Entry "read/write?" () 935 18 ("get-writable?")}
        {Lisp-Entry "set-read-only" () 939 18 ("false" "set-writable?")}
        {Lisp-Entry "set-read/write" () 943 18 ("true" "set-writable?")}
        {Lisp-Entry "get-writable?" () 947 26 ()}
        {Lisp-Entry "set-writable?" () 951 26 ("flag")}
        {Lisp-Entry "writable?" () 955 26 ()}
        {Lisp-Entry "get-modification-time" () 959 26 ()}
        {Lisp-Entry "get-file" () 963 26 ()}
        {Lisp-Entry "get-name" () 967 26 ()}
        {Lisp-Entry "get-base" () 971 26 ()}
        {Lisp-Entry "get-extension" () 975 26 ()}
        {Lisp-Entry "get-list" () 979 26 ()}
        {Lisp-Entry "get-parent" () 983 26 ()}
        {Lisp-Entry "get-content" () 987 26 ("rest")}
        {Lisp-Entry "get-children" () 992 26 ("rest")}
        {Lisp-Entry "is-different?" () 996 26 ("moniker")}
        {Lisp-Entry "relocated-list" () 1000 18 ("length" "tail" "get-list" "append" "new-root" "old-root")}
        {Lisp-Entry "load-lines" () 1009 26 ()}
        {Lisp-Entry "save-lines" () 1013 26 ("rest" "lines")}
        {Lisp-Entry "load-form" () 1017 26 ()}}
      {Lisp-Entry "validate-component" () 1035 23 ("else" "cdr" "error" "car" "if" "pair?" "symbol?" "string?" "not" "cond" "dynamic" "function" "validate" "letrec" "original" "let" "object")}
      {Lisp-Entry "extract-base" () 1051 20 ("0" "subseq" "not" "if" "position" "return:" "true" "reversed?:" "find" "pos" "let" "filename")}
      {Lisp-Entry "extract-extension" () 1058 20 ("1" "+" "subseq" "when" "position" "return:" "true" "reversed?:" "find" "pos" "let" "filename")}
      {Lisp-Entry "tokenise" () 1064 20 ("Native" "2" "subseq" "split" "Network" "cons" "starts-with?" "if" "filename")}
      {Lisp-Entry "tokenise-unix" () 1070 20 ("Native" "2" "subseq" "split" "Network" "cons" "starts-with?" "if" "filename")}
      {Lisp-Entry "get-tmp-directory" () 1076 20 ("Native" "list" "Directory" "new" "make-string" "path" "NULL" "0" "GetTempPath" "size" "let*" "get-tmp-directory" "unimplemented")}
      {Lisp-Entry "Pathname" () 1085 7 ("Moniker")
        {Lisp-Entry "path" () 1088 8 ()}
        {Lisp-Entry "initialize" () 1091 11 ("set-list" "validate-component" "nextmethod" "lst")}
        {Lisp-Entry "parse" () 1098 18 ("get-output" "add-suffix" "get-list" "else" "cdr" "car" "pair?" "get-alias" "is-alias?" "cons" "self" "error" "memq?" "symbol?" "display" "false" "set!" "if" "string?" "eq?" "null?" "cond" "path" "dynamic" "function" "parse" "letrec" "aliases" "true" "first?" "String-Printer" "new" "printer" "let" "separator" "separator:")}
        {Lisp-Entry "parse-unix" () 1128 18 ("separator:" "parse")}
        {Lisp-Entry "add-suffix" () 1132 29 ("printer")}
        {Lisp-Entry "relocated-pathname" () 1136 18 ("length" "tail" "get-list" "append" "new-root" "old-root")}
        {Lisp-Entry "move-pathname" () 1140 18 ("self" "error" "not" "and" "when" "MoveFile" "ok?" "let" "parse" "rename-file" "true" "error?" "error?:" "dst")}
        {Lisp-Entry "compare-object" () 1148 11 (":not-equal" "else" ":equal" "get-list" "=" ":incompatible" "self" "class-of" "is-not?" "cond" "target")}
        {Lisp-Entry "compare-pathname" () 1157 11 ("parse" "ci=" "Pathname" "is?" "and" "object")}
        {Lisp-Entry "valid-aliases?" () 1162 18 ("get-list" "get-alias" "is-alias?" "and" "symbol?" "not" "item" "every?" "true" "eq?" "or" "list" "dynamic" "function" "valid?" "letrec")}
        {Lisp-Entry "expand" () 1174 18 ("get-output" "get-list" "cdr" "car" "pair?" "get-alias" "symbol?" "put" "string?" "true" "eq?" "cond" "object" "dynamic" "function" "expand" "letrec" "List-Factory" "new" "fact" "let")}
        {Lisp-Entry "get-list" () 1188 18 ("path")}
        {Lisp-Entry "set-list" () 1192 18 ("path" "set!" "value")}
        {Lisp-Entry "get-name" () 1196 11 ("get-list" "effective-name")}
        {Lisp-Entry "effective-name" () 1200 11 ("get-alias" "effective-name" "symbol?" "if" "last" "name" "let" "lst")}
        {Lisp-Entry "get-base" () 1207 11 ("extract-base" "symbol?" "if" "get-name" "name" "let")}
        {Lisp-Entry "get-extension" () 1214 11 ("get-name" "extract-extension")}
        {Lisp-Entry "get-parent" () 1218 11 ("Directory" "new" "not-null?" "when" "expand" "1" "length" "=" "if" "butlast" "parent" "get-list" "list" "let*")}
        {Lisp-Entry "get-brother" () 1225 18 ("list" "get-parent" "get-list" "append" "self" "class-of" "new" "name")}
        {Lisp-Entry "new-brother" () 1229 26 ("name")}
        {Lisp-Entry "get-directory" () 1233 26 ()}
        {Lisp-Entry "get-attributes" () 1237 18 ("self" "error" "when" "=" "if" "parse" "GetFileAttributes" "attributes" "let" "get-attributes" "unimplemented" "true" "error?" "error?:")}
        {Lisp-Entry "set-attributes" () 1247 18 ("self" "error" "not" "when" "parse" "SetFileAttributes" "ok?" "let" "set-attributes" "unimplemented" "flags")}
        {Lisp-Entry "get-writable?" () 1255 11 ("FILE_ATTRIBUTE_READONLY" "get-attributes" "mask-bit-set?" "not")}
        {Lisp-Entry "set-writable?" () 1261 11 ("not" "FILE_ATTRIBUTE_READONLY" "get-attributes" "mask-bit-set" "set-attributes" "set-writable?" "unimplemented" "flag")}
        {Lisp-Entry "exists?" () 1267 11 ("parse" "file-exists?")}
        {Lisp-Entry "create-directories" () 1271 18 ("create" "exists?" "unless" "dir" "dynamic" "function" "for-each" "get-parent" "set!" "while" "dirs" "expand" "Native" "cons" "Directory" "new" "scan" "get-directory" "base" "let*")}
        {Lisp-Entry "anchor-to" () 1290 18 ("class-of" "new" "subseq" "append" "else" "self" "error" "if" "" "set!" "not" "cond" "return" "lambda" "call/ec" "unspecified" "result-list" "ci=" "test:" "mismatch" "rank" "expd" "length" "base-length" "expand" "base-expd" "get-list" "base-list" "let*" "true" "error?" "error?:" "anchor")}
        {Lisp-Entry "anchorize" () 1310 18 ("car" "self" "null?" "get-list" "length" "path" "key:" "" "sort" "sorted" "false" "error?:" "anchor-to" "valid-aliases?" "when" "anchor" "dynamic" "function" "collect" "anchored" "default-anchors" "not" "if" "let*" "anchors" "anchors:")}
        {Lisp-Entry "default-anchors" () 1319 11 ("get-application" "application-anchors")}}
      {Lisp-Entry "pathname?" () 1323 27 ("Pathname" "is?" "object")}
      {Lisp-Entry "File-Class" () 1332 7 ("Class")
        {Lisp-Entry "get-protocol" () 1335 11 ("file")}
        {Lisp-Entry "get-modal" () 1339 11 ("get-directory" "essay" "directory:" "" "apply" "SaveFile-Dialog" "save" "OpenFile-Dialog" "case" "class" "let" "get-modal" "unimplemented" "others" "actual" "open" "mode" "bind-keywords" "rest")}
        {Lisp-Entry "new-moniker" () 1349 11 ("self" "new" "list")}}
      {Lisp-Entry "create-temporary-file" () 1353 20 ("Native" "list" "File" "new" "adjust-string" "0" "GetTempFileName" "MAX_PATH" "make-string" "filename" "let" "error" "empty-string?" "if" "parse" "dir" "get-tmp-directory" "either" "let*" "create-temporary-file" "unimplemented" "prefix" "prefix:" "directory" "directory:")}
      {Lisp-Entry "File" () 1366 7 ("Pathname" "File-Class")
        {Lisp-Entry "print" () 1369 11 ("get-list" "format" "readably" "printer")}
        {Lisp-Entry "new-brother" () 1380 11 ("get-parent" "new-file" "name")}
        {Lisp-Entry "present" () 1384 11 ("get-list" "format")}
        {Lisp-Entry "get-file" () 1393 11 ("self")}
        {Lisp-Entry "get-directory" () 1397 11 ("get-parent")}
        {Lisp-Entry "copy-file" () 1401 18 ("self" "error" "not" "when" "CopyFile" "ok?" "let" "overwrite-read-only" "parse" "_copy-file" "false" "overwrite-read-only?" "overwrite-read-only?:" "dst")}
        {Lisp-Entry "delete-file" () 1410 18 ("self" "error" "not" "and" "when" "DeleteFile" "deleted?" "let" "overwrite-read-only" "parse" "file-delete" "true" "error?" "error?:" "false" "overwrite-read-only?" "overwrite-read-only?:")}
        {Lisp-Entry "overwrite-read-only" () 1420 11 ("set-read/write" "read-only?" "exists?" "and" "when" "overwrite-read-only" "unimplemented" "overwrite-read-only?")}
        {Lisp-Entry "get-size" () 1427 18 ("false" ":readable?" "self" "File-Reader" "new" "reader" "with-closed" "get-size" "unimplemented")}
        {Lisp-Entry "get-modification-time" () 1434 11 ("from-filetime" "NULL" "get-handle" "GetFileTime" "false" ":readable?" "File-Reader" "reader" "with-closed" "FILETIME" "new" "time" "let" "self" "error" "exists?" "not" "if" "parse" "file-last-modification-time")}
        {Lisp-Entry "set-modification-time" () 1445 18 ("set-attributes" "NULL" "get-handle" "SetFileTime" "append" "mode:" "self" "File-Printer" "new" "printer" "with-closed" "set-read/write" "get-attributes" "at" "get-filetime" "ft" "let" "set-modification-time" "unimplemented" "time")}
        {Lisp-Entry "touch" () 1457 18 ("universal-date" "get-time" "set-modification-time" "touch" "unimplemented")}
        {Lisp-Entry "get-hidden?" () 1463 18 ("FILE_ATTRIBUTE_HIDDEN" "get-attributes" "mask-bit-set?" "get-hidden?" "unimplemented")}
        {Lisp-Entry "set-hidden?" () 1469 18 ("FILE_ATTRIBUTE_HIDDEN" "get-attributes" "mask-bit-set" "set-attributes" "set-hidden?" "unimplemented" "flag")}
        {Lisp-Entry "writable?" () 1475 11 ("true" "CloseHandle" "false" "INVALID_HANDLE_VALUE" "=" "if" "FILE_ATTRIBUTE_NORMAL" "OPEN_EXISTING" "NULL" "0" "GENERIC_WRITE" "parse" "CreateFile" "handle" "let" "writable?" "unimplemented")}
        {Lisp-Entry "clone-file" () 1485 18 ("get-base" "format" "list" "get-directory" "get-list" "append" "File" "new" "extension")}
        {Lisp-Entry "load-lines" () 1494 11 ("read-lines" "self" "File-Reader" "new" "reader" "with-closed")}
        {Lisp-Entry "save-lines" () 1499 11 ("Win32" "either" "write-lines" "self" "File-Printer" "new" "printer" "with-closed" "false" "use-utf8?" "use-utf8?:" "platform" "platform:" "lines")}}
      {Lisp-Entry "file?" () 1504 27 ("File" "is?" "object")}
      {Lisp-Entry "Directory-Class" () 1513 7 ("Class")
        {Lisp-Entry "get-protocol" () 1516 11 ("dir")}
        {Lisp-Entry "get-modal" () 1520 11 ("directory:" "BrowseFolder-Dialog" "" "apply" "get-modal" "unimplemented" "others" "actual" "mode" "bind-keywords" "rest")}
        {Lisp-Entry "new-moniker" () 1527 11 ("self" "new" "list")}}
      {Lisp-Entry "Directory" () 1531 7 ("Pathname" "Directory-Class")
        {Lisp-Entry "print" () 1534 11 ("get-list" "format" "readably" "printer")}
        {Lisp-Entry "new-brother" () 1545 11 ("get-parent" "new-directory" "name")}
        {Lisp-Entry "present" () 1549 11 ("get-list" "format")}
        {Lisp-Entry "get-directory" () 1558 11 ("self")}
        {Lisp-Entry "get-modification-time" () 1562 11 ()}
        {Lisp-Entry "create" () 1566 26 ("parse" "create-directory")}
        {Lisp-Entry "new-file" () 1570 18 ("list" "pair?" "null?" "or" "if" "get-list" "append" "File" "new" "name")}
        {Lisp-Entry "new-directory" () 1574 18 ("list" "pair?" "null?" "or" "if" "get-list" "append" "Directory" "new" "name")}
        {Lisp-Entry "new-unique-file" () 1578 18 ("increase!" "either" "format" "set!" "while" "1" "suffix" "extract-extension" "ext" "extract-base" "base" "exists?" "not" "if" "new-file" "file" "let" "separator" "separator:" "name")}
        {Lisp-Entry "copy-directory" () 1591 18 ("recursive?:" "directories?:" "files?:" ":copy?" ":touch-files?" "Directory" "touch" "copy-file" "new" "dest" "File" "is?" "if" "eq?" "or" "iterate-directory" "get-name" "list" "get-list" "append" "path" "dynamic" "function" "destination" "let" "create-directories" "self" "when" "copy-directory" "unimplemented" "true" "copy?" "copy?:" "false" "touch-files?" "touch-files?:" "feedback" "feedback:" "copier" "copier:" "dst")}
        {Lisp-Entry "delete-directory" () 1616 26 ("remove-directory" ":overwrite-read-only?" "empty-directory" "self" "when" "delete-directory" "unimplemented" "feedback" "feedback:" "false" "overwrite-read-only?" "overwrite-read-only?:")}
        {Lisp-Entry "empty-directory" () 1625 18 ("recursive?:" "directories?:" "true" "files?:" "delete-directory" ":overwrite-read-only?" "delete-file" "File" "is?" "if" "path" "dynamic" "function" "iterate-directory" "empty-directory" "unimplemented" "feedback" "feedback:" "false" "overwrite-read-only?" "overwrite-read-only?:")}
        {Lisp-Entry "remove-directory" () 1638 18 ("parse" "RemoveDirectory" "remove-directory" "unimplemented")}
        {Lisp-Entry "foldable?" () 1644 11 ("true")}
        {Lisp-Entry "fold-object" () 1648 11 ("get-list" "fold-more" "self" "class-of" "type-name" "fold" "output" "compiler")}
        {Lisp-Entry "get-content" () 1655 18 ("get-output" "collect-leaves" "collect-nodes" "when" "List-Factory" "new" "fact" "let" "leaves?" "leaves?:" "true" "nodes?" "nodes?:")}
        {Lisp-Entry "collect-nodes" () 1662 11 ("recursive?:" "true" "directories?:" "false" "files?:" "put" "item" "dynamic" "function" "iterate-directory" "fact")}
        {Lisp-Entry "collect-leaves" () 1671 11 ("recursive?:" "false" "directories?:" "true" "files?:" "put" "item" "dynamic" "function" "iterate-directory" "fact")}
        {Lisp-Entry "add-suffix" () 1685 11 ("print-char" "printer")}
        {Lisp-Entry "collect-files" () 1694 18 ("get-output" "false" "recursive?:" "put" "when" "file" "dynamic" "function" "iterate-directory" "List-Factory" "new" "fact" "let" "predicate")}
        {Lisp-Entry "iterate-directory" () 1709 26 ("Directory" "append" "File" "new" "file" "case" "kind" "list" "dynamic" "function" "parse" "iterate-directory-content" "get-list" "if" "directory" "let" "ignored-directories" "ignored-directories:" "recursive?" "recursive?:" "sort?" "sort?:" "false" "directories?" "directories?:" "files?" "files?:" "true" "full?" "full?:" "proc")}
        {Lisp-Entry "iterate-directory-content" () 1718 11 ("file" "files" "directory" "list" "append" "iterate-directory-content" "when" "name" "dynamic" "function" "directories" "iterate-content" "proc" "base" "prefix" "ignored-directories" "recursive?" "sort?" "directories?" "files?")}
        {Lisp-Entry "iterate-content" () 1731 11 ("for-each" "" "sort" "sorted" "cons" "set!" "object" "dynamic" "function" "unsorted-proc" "with" "list" "let" "iterate-content-unsorted" "not" "if" "proc" "ignored-directories" "sort?" "kind" "base")}
        {Lisp-Entry "iterate-content-unsorted" () 1743 11 ("FindClose" "not" "=" "FILE_ATTRIBUTE_DIRECTORY" "mask-bit-set?" "directory?" "dwFileAttributes" "get" "attributes" "member?" "unless" "cFileName" "get-string" "FindNextFile" "while" "INVALID_HANDLE_VALUE" "/=" "append" "FindFirstFile" "handle" "WIN32_FIND_DATA" "new" "find-data" "let*" "directory-files" "directory" "directories" "regular" "files" "eq?" "and" "or" "when" "string-append" "file-type" "type" "let" "name" "lambda" "for-each" "proc" "ignored-directories" "kind" "base")}
        {Lisp-Entry "count-files" () 1766 18 (">" "and" "increase!" "not" "or" "when" "file" "dynamic" "function" "iterate-directory" "return" "lambda" "call/ec" "0" "count" "let" "false" "max-count" "max-count:" "filter" "filter:")}}
      {Lisp-Entry "directory?" () 1779 27 ("Directory" "is?" "object")}
      {Lisp-Entry "Aliases" () 1788 12 ()}
      {Lisp-Entry "get-aliases" () 1792 20 ("new-aliases" "set!" "Aliases" "unless")}
      {Lisp-Entry "new-aliases" () 1798 13 ("eq?" "new-hashtable")}
      {Lisp-Entry "is-alias?" () 1802 20 ("get-manifest-source" "get-aliases" "hash-ref" "or" "name")}
      {Lisp-Entry "get-alias" () 1807 20 ("error" "when" "find-alias" "either" "true" "error?" "error?:" "name")}
      {Lisp-Entry "find-alias" () 1813 20 ("resolve-alias" "when" "get-process" "process" "let" "get-system-property" "get-manifest-alias" "get-aliases" "hash-ref" "either" "name")}
      {Lisp-Entry "get-manifest-alias" () 1825 13 ("get-list" "butlast" "not" "if" "get-manifest-source" "source" "let" "name")}
      {Lisp-Entry "new-alias" () 1832 20 ("get-aliases" "hash-set!" "path" "name")}
      {Lisp-Entry "set-alias" () 1836 20 ("get-aliases" "hash-set!" "path" "name")}
      {Lisp-Entry "Libraries" () 1842 12 ("Cairo" "ImgSource" "PSAPI" "PDH" "Help" "WinMM" "WinInet" "UserEnv" "User" "Socket" "Shlw" "Shell" "OLEAut" "OLE" "MSImg" "Kernel" "GDI" "Comdlg" "Comctl" "AdvAPI")}
      {Lisp-Entry "initialize-libraries" () 1865 20 ("Libraries" "hash-set!" "value" "name" "bind" "pair" "dynamic" "function" "for-each" "libraries")}
      {Lisp-Entry "get-windows-dir" () 1873 13 ("tokenise" "adjust-string" "GetWindowsDirectory" "MAX_PATH" "make-string" "dirname" "let")}
      {Lisp-Entry "get-system-dir" () 1881 13 ("tokenise" "adjust-string" "GetSystemDirectory" "MAX_PATH" "make-string" "dirname" "let")}
      {Lisp-Entry "get-boot-dir" () 1889 13 ("module-dir")}
      {Lisp-Entry "get-base-dir" () 1894 13 ("butlast" "if" "false" "Ansi-String" "coerce" "get-boolean-setting" "uses-bin-directory?" "get-boot-dir" "boot-dir" "let")}
      {Lisp-Entry "get-home-dir" () 1903 13 ("Base" "list" "get-base-dir" "butlast" "append" "Application" "get-compiled-property" "not" "pathname-argument" "if" "command-argument" "dir" "let")}
      {Lisp-Entry "get-users-dir" () 1915 13 ("Home" "list" "get-base-dir" "butlast" "append" "Application" "get-compiled-property" "not" "and" "pathname-argument" "if" "command-argument" "dir" "let")}
      {Lisp-Entry "pathname-argument" () 1927 13 ("length" "-" "1" "subseq" "0" "element" "=" "if" "tokenise" "arg")}
      {Lisp-Entry "validate-alias" () 1934 13 ("error" "exists?" "unless" "Directory" "new" "dir" "get-alias" "path" "let*" "name")}
      {Lisp-Entry "initialize-aliases" () 1941 20 ("initialize-home-aliases" "initialize-system-aliases")}
      {Lisp-Entry "initialize-system-aliases" () 1946 13 ("get-system-dir" "System" "get-windows-dir" "Windows" "new-alias")}
      {Lisp-Entry "initialize-home-aliases" () 1952 13 ("Products" "pathname-argument" "when" "command-argument" "dir" "let" "get-users-dir" "Documentation" "Defaults" "Bin" "validate-alias" "get-home-dir" "get-base-dir" "Base" "get-boot-dir" "Boot" "User" "Users" "Home" "org.jedi" "org.jazz" "Root" "Network" "true" "Native" "new-alias")}
      {Lisp-Entry "timestamped-file" () 1983 20 ("File" "new" "timestamped-filename" "tokenise" "path" "parse" "dir" "let*" "ext" "base" "directory")}
      {Lisp-Entry "timestamped-filename" () 1989 20 ("timestamped-filename" "unimplemented" "ext" "base" "dir")}
      {Lisp-Entry "command-argument" () 2090 20 ("string")}
      {Lisp-Entry "pathnames=" () 2100 20 ("get-list" "equal?" "pathnames=" "unimplemented" "y" "x")}
      {Lisp-Entry "module-path" () 2106 20 ("tokenise" "adjust-string" "NULL" "GetModuleFileName" "MAX_PATH" "make-string" "filename" "let" "module-path" "unimplemented")}
      {Lisp-Entry "module-pathname" () 2115 20 ("module-path" "File" "new" "module-pathname" "unimplemented")}
      {Lisp-Entry "module-base" () 2121 20 ("module-pathname" "get-base" "module-base" "unimplemented")}
      {Lisp-Entry "module-dir" () 2127 20 ("module-path" "butlast" "module-dir" "unimplemented")}
      {Lisp-Entry "module-directory" () 2133 20 ("get-parent" "module-pathname" "module" "let" "module-directory" "unimplemented")}
      {Lisp-Entry "module-file" () 2140 20 ("get-parent" "new-file" "module-pathname" "module" "let" "module-file" "unimplemented" "filename")}
      {Lisp-Entry "module-timestamped-file" () 2147 20 ("File" "new" "timestamped-filename" "tokenise" "path" "module-dir" "cdr" "join" "dir" "let*" "module-timestamped-file" "unimplemented" "ext" "base")}
      {Lisp-Entry "marshal-object" () 2160 20 ("marshal" "object")}
      {Lisp-Entry "unmarshal-object" () 2164 20 ("unmarshal" "object")}
      {Lisp-Entry "bootsafe-get-execution-stack" () 2173 13 ("get-execution-stack" "process-active?" "if" "bootsafe-get-execution-stack" "unimplemented")}
      {Lisp-Entry "dump-stack" () 2190 20 ("format" "message-box" "when" "print-stack" "apply" "File-Printer" "new" "printer" "with-closed" "module-timestamped-file" "either" "let" "crash-process" "VK_MENU" "0" "VK_CONTROL" "GetAsyncKeyState" "hibyte" "/=" "and" "if" "dump-stack" "unimplemented" "others" "false" "user-feedback?" "file" "bind-keywords" "rest")}
      {Lisp-Entry "report-stack" () 2207 20 ("get-output" "message-box" "get-threads" "get-call-stack" "car" "frame" "get-label" "format" "thread" "dynamic" "function" "for-each" "String-Printer" "new" "printer" "snapshot-stack" "process" "let" "autoload" "Stack-Presenter" "in-manifest?" "kernel-initialized?" "and" "if" "report-stack" "unimplemented")}
      {Lisp-Entry "snapshot-stack" () 2223 20 (":string" "print-stack" "read-string-element" "snapshot-stack" "unimplemented")}
      {Lisp-Entry "print-stack" () 2229 20 ("get-output" "print-stack-to" "apply" "String-Printer" "new" "printer" "let" ":string" "=" "if" "print-stack" "unimplemented" "rest" "destination")}
      {Lisp-Entry "print-stack-to" () 2239 13 ("print-stack-content" "get-state" "get-name" "thread" "class-of" "type-name" "execution-stack" "get-message" "exception" "when" "print-date" "command-argument" "module-pathname" "parse" "format" "print-stack-to" "unimplemented" "rest" "printer")}
      {Lisp-Entry "print-date" () 2278 13 ("4" "0" "->string" "subseq" "format" "wSecond" "second" "wMinute" "minute" "wHour" "hour" "wDay" "day" "wMonth" "month" "wYear" "get" "year" "time-separator" "date-separator" "GetLocalTime" "SYSTEMTIME" "new" "st" "let" "print-date" "unimplemented" "printer")}
      {Lisp-Entry "toplevel-windows" () 2310 20 ("toplevel-hwnds" "toplevel-windows" "unimplemented")}
      {Lisp-Entry "process-windows" () 2316 20 ("process-hwnds" "get-visible?" "or" "and" "when" "get-window" "window" "let" "hwnd" "dynamic" "function" "collect" "process-windows" "unimplemented" "false" "include-invisibles?" "include-invisibles?:")}
      {Lisp-Entry "all-child-windows" () 2326 20 ("all-child-hwnds" "all-child-windows" "unimplemented" "hwnd")}
      {Lisp-Entry "child-windows" () 2332 20 ("all-child-windows" "GetParent" "=" "child" "dynamic" "function" "collect-if" "child-windows" "unimplemented" "hwnd")}}})
"_process"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "process" "_process.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.process" () 0 9 ("jazz")}})
"_python"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "_python.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.python" () 0 9 ("jazz")}})
"_q"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "suite" "_q.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.suite.q" () 37 9 ("jazz")}})
"_recorder"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "recorder" "_recorder.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.recorder" () 0 9 ("jazz")}})
"_repository"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "_repository.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository" () 0 9 ("jazz")}})
"_resizer"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "resizer" "_resizer.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.ui.resizer" () 37 9 ("jazz")
      {Lisp-Entry "Border-Size" () 46 10 ("4")}
      {Lisp-Entry "Handle-Size" () 47 10 ()}
      {Lisp-Entry "Part-Array" () 50 10 ("1" "0")}
      {Lisp-Entry "Part-Cursor" () 58 10 ("IDC_ARROW" "IDC_SIZEWE" "IDC_SIZENESW" "1" "IDC_SIZENS" "0" "IDC_SIZENWSE" "cons" "list")}
      {Lisp-Entry "find-resize-part" () 76 20 ("get-width" "get-h" "get-height" "get-v" "Part-Array" "element" "2" "else" ">" "4" "-" ">=" "1" "0" "" "cond" "3" "quotient" "Handle-Size" "min" "handle" "Border-Size" "border" "s" "n" "dynamic" "function" "p" "let" "size" "pt")}
      {Lisp-Entry "get-resize-cursor" () 89 20 ("Part-Cursor" "assoc" "cdr" "part")}
      {Lisp-Entry "size-client" () 93 20 ("*" "cdr" "rv" "mv" "car" "rh" "mh" "receive" "0" "1" "values" "case" "r" "dynamic" "function" "p" "let" "proc" "part" "dv" "dh")}}})
"_resources"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "resources" "_resources.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.resources" () 0 9 ("jazz")}})
"_runtime"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "_runtime.scm"} {Time 128369324720000000L}
    {Lisp-Entry "core.base.runtime" () 37 8 ()}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "runtime" "_runtime.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.library.runtime" () 37 8 ()}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "runtime" "_runtime.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.generic.runtime" () 37 8 ()}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "foundation" "runtime" "_runtime.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.foundation.runtime" () 37 8 ()}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "runtime" "_runtime.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.class.runtime" () 37 8 ()}})
"_schema"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "_schema.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.schema" () 0 9 ("jazz")}})
"_scheme"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "scheme" "_scheme.scm"} {Time 128366793880000000L}
    {Lisp-Entry "scheme" () 37 9 ("core")}})
"_setup"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "setup" "_setup.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.setup" () 0 9 ("jazz")}})
"_shell"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "shell" "_shell.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.library.shell" () 37 9 ("jazz")
      {Lisp-Entry "root-process-info" () 49 20 ("get-children" "cons" "set-children" "set-parent" "get-parent-id" "hash-ref" "either" "parent" "info" "id" "dynamic" "function" "for-each-hash" "Process-Info" "new" "root-info" "collect-info-table" "info-table" "let" "root-process-info" "unimplemented")}
      {Lisp-Entry "collect-info-table" () 62 13 ("CloseHandle" "Process32Next" "set!" "Process-Info" "hash-set!" "th32ParentProcessID" "parent-id" "th32ProcessID" "get" "id" "szExeFile" "get-string" "name" "while" "true" "continue?" "Process32First" "when" "size-of" "dwSize" "set" "PROCESSENTRY32" "new" "process" "NULL" "TH32CS_SNAPPROCESS" "CreateToolhelp32Snapshot" "snapshot" "eqv?" "new-hashtable" "info-table" "let" "collect-info-table" "unimplemented")}
      {Lisp-Entry "shell-execute" () 86 20 ("SW_SHOWDEFAULT" "parse" "string?" "if" "NULL" "ShellExecute" "shell-execute" "unimplemented" "file")}
      {Lisp-Entry "create-process" () 97 20 ("values" "close" "hThread" "CloseHandle" "GetExitCodeProcess" "code" "ok?" "receive" "error-lines" "error-content" "cn" "split" "output-lines" "get-reader" "read-content" "essay" "output-content" "let*" ":timeout" "wait-for" "Child-Process" "else" "WAIT_TIMEOUT" "WaitForSingleObject" "ecase" "CreateEvent" "wait-event" "cond" "dwProcessId" "process-id" "hProcess" "get" "process-handle" "sleep" "winerror" "CREATE_NEW_CONSOLE" "NULL" "CreateProcess" "hStdError" "get-write-handle" "hStdOutput" "get-read-handle" "hStdInput" "dwFlags" "SW_HIDE" "wShowWindow" "STARTF_USESHOWWINDOW" "STARTF_USESIZE" "bit-or" "set!" "get-height" "dwYSize" "get-width" "dwXSize" "when" "0" "STARTF_USESTDHANDLES" "or" "flags" "cb" "error-pipe" "output-pipe" ":security-attributes" "Pipe" "input-pipe" "bInheritHandle" "size-of" "nLength" "set" "parse" "format" "cmd" "SECURITY_ATTRIBUTES" "sa" "PROCESS_INFORMATION" "pi" "STARTUPINFO" "new" "si" "let" "error" "exists?" "not" "and" "if" "create-process" "unimplemented" "timeout" "timeout:" "wait?" "wait?:" "wait-ready-timeout" "wait-ready-timeout:" "wait-ready" "wait-ready:" "debug-console?" "debug-console?:" "console?" "console?:" "true" "visible?" "visible?:" "size" "size:" "pipe-size" "pipe-size:" "capture-error?" "capture-error?:" "capture-output?" "capture-output?:" "capture-input?" "capture-input?:" "false" "prefix-directory?" "prefix-directory?:" "directory" "directory:" "command")}}})
"_sql"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "_sql.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.sql" () 0 9 ("jazz")
      {Lisp-Entry "parse-sql-command" () 7 20 ("0" "subseq" "null?" "if" "upcase" "position" "return:" "whitespace?" "find-if" "pos" "trim-whitespace" "let*" "request")}}})
"_syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "syntax" "_syntax.scm"} {Time 128369327760000000L}
    {Lisp-Entry "core.base.syntax" () 37 8 ()}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "syntax" "_syntax.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.library.syntax" () 37 8 ()}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "syntax" "_syntax.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.generic.syntax" () 37 8 ()}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "syntax" "_syntax.scm"} {Time 128360877020000000L}
    {Lisp-Entry "core.class.syntax" () 37 8 ()}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "_syntax.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax" () 37 9 ("scheme")}})
"_test"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "_test.fusion"} {Time 128370243800000000L}
    {Lisp-Entry "test" () 37 9 ("3" "Subseq" "5" "subseq!" "y" "4" "subseq" "x" "s" "let*" "1" "element" "c" "axis-add" "length" "Axis" "hello" "yyy" "=" "get-output" "9" "7" "String-Printer" "write" "display" "les" "format" "File-Printer" "read-lines" "read-delimited" "read-char" "File-Reader" "r" "with-closed" "exists?" "parse" "Native" "File" "t" "new-file" "f" "test" "Directory" "d" "get-visible?" "B" "b" "property-getter" "2" "property-setter" "category-field" "p" "A" "new" "a" "position" "return:" "true" "reversed?:" "find" "debug" "backward" "direction:" "explore" "e" "let" "jazz")
      {Lisp-Entry "yoo" () 57 13 ("a")}
      {Lisp-Entry "f" () 61 13 ("3" "2" "set!" "yoo" "car" "debug" "values" "hh" "receive" "gg" "letrec" "ff" "let*" "ee" "dd" "iterate" "cc" "a" "bb" "let" "aa")}
      {Lisp-Entry "ff" () 74 13 ("*" "+" "2" "a" "let" "y" "x")}
      {Lisp-Entry "f" () 81 13 ("2" "nneq?" "x")}
      {Lisp-Entry "g" () 86 13 ("2" "yoo" "1" "get-aa" "+" "set-aa" "A" "new" "a" "let")}
      {Lisp-Entry "X" () 93 7 ("Object")
        {Lisp-Entry "f" () 95 11 ("5" "3" "2" "*" "+" "/" "b" "a")}}
      {Lisp-Entry "A" () 406 7 ("Object")
        {Lisp-Entry "a" () 408 12 ("set-aaa")}
        {Lisp-Entry "set-aaa" () 410 11 ("+" "a" "set!" "v")}
        {Lisp-Entry "foo" () 413 11 ("2" "set!" "a")}}
      {Lisp-Entry "test" () 430 13 ("debug" "do" "5" "c:" "3" "b:" "2" "a:" "in-properties" "value" "property" "for" "loop")}
      {Lisp-Entry "A" () 441 7 ("visible?:" "Component")}
      {Lisp-Entry "B" () 447 7 ("visible?:" "Component")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "_test.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "test" "_test.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.test" () 37 9 ("core")}})
"_ui"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "_ui.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.ui" () 0 9 ("jazz")}})
"_user"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "user" "_user.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "user" () 0 9 ("jazz")}})
"_validate"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "_validate.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate" () 0 9 ("jazz")}})
"_validation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "_validation.fusion"} {Time 128360675620000000L}
    {Lisp-Entry "jazz.validation" () 37 9 ("jazz")
      {Lisp-Entry "validate" () 43 13 ("validate-modules")}
      {Lisp-Entry "Present-Classes?" () 53 12 ()}
      {Lisp-Entry "present-validations*" () 58 13 ("1" "cons" "jazz.validation.suite.Y" "jazz.validation.suite.X" "load-metaclass" "is?" "object?" "validate" "X.foo" "2" "X.moo" "present-evaluation" "new" "present-object" "newline" "present-classes" "Present-Classes?" "when" "jazz.String" "string-class" "jazz.Sequence" "sequence-class" "jazz.Pair" "pair-class" "jazz.Integer" "integer-class" "jazz.Slot" "slot-class" "jazz.Object" "load-category" "object-class" "Y" "y-class" "X" "x-class" "let")}
      {Lisp-Entry "present-classes" () 90 13 ("load-metaclass" "jazz.validation.suite.Y" "jazz.validation.suite.X" "jazz.Slot" "jazz.Object" "load-category" "present-category")}}})
"_view"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "view" "_view.fusion"} {Time 128368664520000000L}
    {Lisp-Entry "jazz.ui.view" () 37 9 ("jazz")
      {Lisp-Entry "mouse-in" () 53 12 ()}
      {Lisp-Entry "mouse-down?" () 54 12 ("false")}
      {Lisp-Entry "mouse-right-down?" () 55 12 ("false")}
      {Lisp-Entry "mouse-down-view" () 56 12 ()}
      {Lisp-Entry "mouse-down-point" () 57 12 ()}
      {Lisp-Entry "delayed-mouse-action" () 61 12 ()}
      {Lisp-Entry "set-delayed-mouse-action" () 65 20 ("delayed-mouse-action" "set!" "action")}
      {Lisp-Entry "get-mouse-down?" () 69 20 ("mouse-down?")}
      {Lisp-Entry "get-mouse-down-view" () 73 20 ("mouse-down-view")}
      {Lisp-Entry "mouse-view" () 77 20 ("mouse-in" "Captured-View" "either")}
      {Lisp-Entry "toplevel-deactivate" () 84 20 ("mouse-down-point" "mouse-down-view" "false" "mouse-down?" "set!")}
      {Lisp-Entry "with-cursor" () 96 20 ("update-cursor" "sleep" "when" "set-cursor" "begin" "unwind-protect" "duration" "duration:" "proc" "cursor")}
      {Lisp-Entry "update-cursor" () 106 20 ("mouse-position" "call-cursor-update" "in-player?" "mouse-in" "and" "when")}
      {Lisp-Entry "Current-Drag-Drop" () 116 12 ()}
      {Lisp-Entry "Captured-View" () 125 12 ()}
      {Lisp-Entry "get-captured-view" () 129 13 ("Captured-View")}
      {Lisp-Entry "release-captured-view" () 133 13 ("ReleaseCapture" "set!" "Captured-View" "when")}
      {Lisp-Entry "external-name" () 145 20 ("type-name" "identifier-name" "guest-class")}
      {Lisp-Entry "get-modal" () 154 20 ("process-modal" "not" "if" "false" "host-visible?:" "new-dialog" "apply" "dialog/result" "process?" "receive" "dynamic" "function" "receive-primary" "rest" "guest-class")}
      {Lisp-Entry "new-dialog" () 163 20 ("set-visible?" "get-modal-result" "values" "has-dialog-result?" "if" "parent-add-child" "set-guest" "set-position" "set-size" "set-title" "when" "center-dialog" "dialog-position" "pos" "get-size" "dialog-size" "size" "new-guest" "either" "visible?:" "closable?:" "sizable?:" "false" "in-parent?:" "dialog-class" "new" "host" "let*" "others" "initialize" "guest" "true" "host-visible?" "dialog-closable?" "host-closable?" "dialog-sizable?" "host-sizable?" "dialog-title" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "new-guest" () 193 13 ("new" "apply" "rest" "guest-class")}
      {Lisp-Entry "new-event" () 202 20 ("new-frame" "apply" "rest" "guest-class")}
      {Lisp-Entry "new-frame" () 206 20 ("acquire-focus" "set-visible?" "bring-to-front" "ensure-displayed" "parent-add-child" "set-guest" "new-guest" "either" "set-workspace" "set-size" "set-position" "set-title" "when" "visible?:" "false" "in-parent?:" "frame-class" "new" "host" "let" "others" "initialize" "guest" "host-focus?" "true" "host-visible?" "host-workspace" "frame-size" "host-size" "frame-position" "host-position" "frame-title" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "frame-class" () 237 20 ("Host-Frame")}
      {Lisp-Entry "frame-icon" () 241 20 ("Bitmap-Resource")}
      {Lisp-Entry "frame-title" () 245 20 ()}
      {Lisp-Entry "frame-position" () 249 20 ()}
      {Lisp-Entry "frame-size" () 253 20 ()}
      {Lisp-Entry "Palettes" () 262 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "singleton-palette" () 266 20 ("hash-set!" "palette" "Palettes" "hash-ref" "self" "type-name" "either" "ref" "let" "false" "host-visible?:" "new-palette" "rest" "name" "guest-class")}
      {Lisp-Entry "new-palette" () 276 20 ("fade-in" "get-root" "get-content" "layout-view" "parent-add-child" "set-guest" "new-guest" "either" "set-size" "set-position" "set-title" "when" "visible?:" "false" "in-parent?:" "palette-class" "new" "host" "let" "others" "initialize" "guest" "true" "host-visible?" "palette-size" "host-size" "palette-position" "host-position" "palette-title" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "show-palette" () 302 20 ("fade-in" "unless" "bring-to-front" "get-visible?" "visible?" "client-activate" "when" ":initialize" "getf" "initialize" "get-guest" "guest" "let" "new-palette" "apply" "not" "if" "self" "find-host" "palette" "get-toplevel" "toplevel" "let*" "show-palette" "unimplemented" "rest" "guest-class")}
      {Lisp-Entry "palette-class" () 321 20 ("Host-Palette")}
      {Lisp-Entry "palette-icon" () 325 20 ("Bitmap-Resource")}
      {Lisp-Entry "palette-title" () 329 20 ()}
      {Lisp-Entry "palette-position" () 333 20 ()}
      {Lisp-Entry "palette-size" () 337 20 ()}
      {Lisp-Entry "singleton-docked" () 346 20 ("hash-set!" "name:" "new-docked" "palette" "Palettes" "hash-ref" "external-name" "either" "ref" "let" "rest" "name" "guest-class")}
      {Lisp-Entry "new-docked" () 354 20 ("new-guest" "set-guest" "set-location" "set-title" "when" "false" "visible?:" "docked-class" "new" "host" "let" "others" "host-location" "palette-title" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "docked-class" () 365 20 ("Host-Docked")}
      {Lisp-Entry "*focused-root*" () 375 12 ()}
      {Lisp-Entry "get-focused-root" () 379 20 ("*focused-root*")}
      {Lisp-Entry "set-focused-root" () 383 20 ("*focused-root*" "set!" "focused-root")}
      {Lisp-Entry "singleton-toolbar" () 392 20 ("hash-set!" "palette" "Palettes" "hash-ref" "self" "type-name" "either" "ref" "let" "name:" "new-toolbar" "rest" "name" "guest-class")}
      {Lisp-Entry "new-toolbar" () 402 20 ("new-guest" "set-guest" "set-location" "set-title" "when" "false" "visible?:" "toolbar-class" "new" "host" "let" "others" "host-location" "palette-title" "host-title" "bind-keywords" "rest" "guest-class")}
      {Lisp-Entry "toolbar-class" () 413 20 ("Host-Toolbar")}
      {Lisp-Entry "dialog-class" () 422 20 ("Host-Dialog")}
      {Lisp-Entry "dialog-title" () 426 20 ()}
      {Lisp-Entry "dialog-position" () 430 20 ()}
      {Lisp-Entry "dialog-size" () 434 20 ()}
      {Lisp-Entry "dialog-sizable?" () 438 20 ("false")}
      {Lisp-Entry "dialog-closable?" () 442 20 ("true")}
      {Lisp-Entry "center-dialog" () 446 20 ("get-v" "-" "get-h" "Point" "new" "center" "pos" "get-desktop" "get-size" "outer" "let*" "inner")}
      {Lisp-Entry "with-progress" () 457 13 ("process-modal" "end-modal" "signal-modal" "signal" "forwardable?" "Signal" "catch" "unwind-protect" "set!" "sig" "dynamic" "abnormal" "resignal" "result" "let*" "thread" "function" "execute:" "self" "context:" "either" "Thread" "disable-cancel" "when" "get-guest" "reporter" "let" "context" ":guest-context" ":host-closable?" "new-dialog" "dialog" "process?" "receive" "User-Reporter" "new" "not" "if" "with-progress" "unimplemented" "abnormal-cleanup" "abnormal-cleanup:" "cancelable?" "cancelable?:" "Progress-Reporter" "progress-reporter" "progress-reporter:" "name" "name:" "true" "threaded?" "threaded?:" "proc")}
      {Lisp-Entry "ui-message-box" () 498 20 ("process-box" "get-guest" "guest" "let" "host-sizable?:" "host-visible?:" "Message-Box" "either" "new-dialog" "dialog" "process?" "receive" "dynamic" "function" "receive-primary" "false" "sizable?" "sizable?:" "true" "process-keys?" "process-keys?:" "default-button" "default-button:" "actions" "actions:" "cancel" "cancel:" "no" "no:" "yes" "yes:" "selection" "selection:" "default" "sound" "sound:" "content" "content:" "icon" "icon:" "title" "title:" "message" "type" "type:" "class" "class:" "text")}
      {Lisp-Entry "request-string" () 526 20 ("empty-string?" "process-modal" "string" "let" "acquire-focus" "select-all" "->string" "if" "set-string-content" "set-validator" "set-unicity-domain" "set-accepts-empty?" "either" "set-title" "text" "locate" "prfx" "get-guest" "view" "let*" "new-dialog" "dialog" "process?" "receive" "request-string" "unimplemented" "validator" "validator:" "unicity-domain" "unicity-domain:" "true" "accepts-empty?" "accepts-empty?:" "initial-value" "initial-value:" "prefix" "prefix:" "title" "title:" "String-Request" "class" "class:")}
      {Lisp-Entry "request-name" () 547 20 ("string->symbol" "not" "if" ":prefix" "request-string" "apply" "string" "either" "let*" "request-name" "unimplemented" "others" "prefix" "prefix:" "title" "title:")}
      {Lisp-Entry "request-text" () 558 20 ("empty-string?" "if" "process-modal" "string" "let" "acquire-focus" "select-all" "set-string-content" "either" "set-title" "locate" "text" "get-guest" "view" "let*" "new-dialog" "dialog" "process?" "receive" "request-text" "unimplemented" "initial-text" "initial-text:" "title" "title:" "Text-Request" "class" "class:")}
      {Lisp-Entry "request-date" () 574 20 ("Date" "parse-string" "empty-string?" "process-modal" "string" "let" "acquire-focus" "select-all" "present" "if" "set-string-content" "either" "set-title" "text" "locate" "prfx" "get-guest" "view" "let*" "new-dialog" "dialog" "process?" "receive" "request-date" "unimplemented" "initial-date" "initial-date:" "prefix" "prefix:" "title" "title:" "Date-Request" "class" "class:")}
      {Lisp-Entry "get-workspace-splitter" () 597 20 ("Workspace-Splitter" "get-toplevel" "find-type")}
      {Lisp-Entry "get-workspace-preferences" () 601 20 ("get-workspace-splitter" "get-preferences")}
      {Lisp-Entry "get-stage-border" () 605 20 ("get-stage" "get-parent")}
      {Lisp-Entry "get-console" () 609 20 ("Jazz-Console-Manager" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-console-text" () 613 20 ("get-console" "get-text")}
      {Lisp-Entry "get-output-log" () 617 20 ("get-application" "get-output-log")}
      {Lisp-Entry "get-active-results" () 621 20 ("get-application" "get-active-results")}
      {Lisp-Entry "get-dialect-console" () 626 20 ("Dialect-Console-Manager" "singleton-docked" "get-guest")}
      {Lisp-Entry "get-dialect-console-text" () 631 20 ("get-dialect-console" "get-text")}
      {Lisp-Entry "get-debugger-console" () 635 20 ("Debugger-Console-Manager" "singleton-docked" "get-guest" "get-debugger-console" "unimplemented")}
      {Lisp-Entry "get-debugger-console-text" () 641 20 ("get-debugger-console" "get-text")}
      {Lisp-Entry "get-debuggers-view" () 645 20 ("Debuggers-View" "singleton-docked" "get-guest" "get-debuggers-view" "unimplemented")}
      {Lisp-Entry "get-sql-console" () 651 20 ("SQL-Console-Manager" "singleton-docked" "get-guest" "get-sql-console" "unimplemented")}
      {Lisp-Entry "get-sql-console-text" () 657 20 ("get-sql-console" "get-text" "get-sql-console-text" "unimplemented")}
      {Lisp-Entry "get-sql-tree-output" () 663 20 ("SQL-Tree-Output" "singleton-docked" "get-guest" "get-sql-tree-output" "unimplemented")}
      {Lisp-Entry "get-sql-output-tree" () 669 20 ("get-sql-tree-output" "get-tree")}
      {Lisp-Entry "get-sql-text-output" () 673 20 ("SQL-Text-Output" "singleton-docked" "get-guest" "get-sql-text-output" "unimplemented")}
      {Lisp-Entry "get-sql-output-text" () 679 20 ("get-sql-text-output" "get-text")}
      {Lisp-Entry "get-sql-connections" () 683 20 ("SQL-Connections-Manager" "singleton-docked" "get-guest" "get-sql-connections" "unimplemented")}
      {Lisp-Entry "find-palette" () 689 20 ("get-workspace-splitter" "find-palette" "find-type" "either" "when" "get-toplevel" "toplevel" "let" "class")}
      {Lisp-Entry "select-palette" () 696 20 ("workspaces" "list" "get-preferences" "apply-preferences" "acquire-focus" "unzoom" "get-zoomed" "neq?" "zoom" "get-state" "eq?" "and" "window" "splitter" "Splitter-Window" "if" "for-each-splitter" "set-selection" "Pad-Window" "is?" "get-parent" "parent" "get-host" "host" "let*" "when" "view" "dynamic" "function" "proc" "find-palette" "guest" "let" "false" "focus?" "focus?:" "home" "workspace" "workspace:" "name" "name:" "class")}
      {Lisp-Entry "for-each-docked" () 720 20 ("get-guest" "Host-Docked" "is?" "when" "palette" "dynamic" "function" "for-each-palette" "get-workspace-splitter" "splitter" "let" "proc")}
      {Lisp-Entry "for-each-splitter" () 728 20 ("set!" "is?" "while" "Splitter-Window" "splitter-class" "get-parent" "splitter" "let" "proc" "window")}
      {Lisp-Entry "current-frame" () 737 20 ("first-window" "when" "get-stage" "stage" "let")}
      {Lisp-Entry "current-document" () 743 20 ("get-guest" "Host-Frame" "is?" "when" "current-frame" "frame" "let")}
      {Lisp-Entry "current-guest" () 749 20 ("get-guest" "when" "get-focused-root" "root" "let")}
      {Lisp-Entry "focus-guest" () 755 20 ("get-guest" "when" "get-focus" "focus" "let")}
      {Lisp-Entry "cleanup-mouse-processing" () 766 20 ("false" "complete-drag-up" "complete-drag-and-drop" "release-captured-view")}
      {Lisp-Entry "complete-drag-and-drop" () 772 13 ("get-source" "get-view" "drag-end" "Current-Drag-Drop" "when")}
      {Lisp-Entry "complete-drag-up" () 777 13 ("process-drag-up" "mouse-down-view" "mouse-position" "pos" "let" "mouse-down?" "when" "dragging?")}
      {Lisp-Entry "Focus" () 797 19 ()}
      {Lisp-Entry "get-focus" () 801 20 ("Focus")}
      {Lisp-Entry "set-focus" () 805 20 ("get-application" "process-focus-change" "call-focus-gain" "set-window-focus" "call-focus-lose" "set!" "focus" "old" "Focus" "neq?" "when" "get-player" "essay" "player" "let" "view")}
      {Lisp-Entry "validate-focus" () 822 20 ("throw-cancel" "set-focus" "focus-validate" "unless" "when" "get-focus" "focus" "let")}
      {Lisp-Entry "clear-focus" () 830 20 ("get-application" "process-focus-change" "set!" "call-focus-lose" "old" "let" "Focus" "when" "window")}}})
"_window"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "_window.fusion"} {Time 128369424380000000L}
    {Lisp-Entry "jazz.ui.window" () 37 9 ("call-dispatch-message" "DefWindowProc" "if" "set-in-creation" "set-window" "set-handle" "get-in-creation" "not" "and" "when" "get-window" "window" "let" "lparam" "wparam" "msg" "hwnd" "function" "process-hwnd-message" "set!" "jazz")
      {Lisp-Entry "Windows-Table" () 54 19 ("eqv?" "new-hashtable")}
      {Lisp-Entry "get-window" () 58 27 ("Windows-Table" "hash-ref" "foreign-address" "foreign?" "if" "let" "hwnd")}
      {Lisp-Entry "set-window" () 63 27 ("foreign-address" "Windows-Table" "hash-set!" "window" "hwnd")}
      {Lisp-Entry "get-toplevel" () 67 20 ("get-application" "get-toplevel")}
      {Lisp-Entry "get-stage" () 71 20 ("get-application" "get-stage")}
      {Lisp-Entry "desktop" () 80 12 ()}
      {Lisp-Entry "Desktop-DC" () 83 12 ()}
      {Lisp-Entry "desktop-dc" () 86 20 ("Cairo-Memory-Surface" "new" "set!" "Desktop-DC" "unless")}
      {Lisp-Entry "get-desktop" () 92 20 ("Desktop" "new" "set!" "desktop" "unless")}
      {Lisp-Entry "get-thread/process-id" () 103 20 ("NULL" "GetWindowThreadProcessId" "get-thread" "unimplemented" "hwnd")}
      {Lisp-Entry "get-class-name" () 114 20 ("adjust-string" "0" "GetClassName" "=" "if" "make-string" "name" "size" "let*" "get-class-name" "unimplemented" "hwnd")}
      {Lisp-Entry "select-foreground-hwnd" () 130 20 ("SetForegroundWindow" "hwnd")}
      {Lisp-Entry "get-hwnd-title" () 134 20 ("1" "+" "GetWindowText" "str" "ret" "receive" "make-string" "string" "GetWindowTextLength" "size" "let*" "hwnd")}
      {Lisp-Entry "Inhibit-View-Cursor?" () 164 12 ("false")}
      {Lisp-Entry "inhibit-view-cursor" () 168 20 ("Inhibit-View-Cursor?" "set!" "flag")}
      {Lisp-Entry "view-update-cursor" () 172 13 ("update-cursor" "Inhibit-View-Cursor?" "unless")}
      {Lisp-Entry "locked-update?" () 183 12 ("false")}
      {Lisp-Entry "locked-rect" () 187 12 ()}
      {Lisp-Entry "with-locked-update" () 191 20 ("update-window" "false" "NULL" "when" "true" "set!" "get-handle" "LockWindowUpdate" "begin" "unwind-protect" "get-toplevel" "toplevel" "let" "locked-update?" "if" "proc")}
      {Lisp-Entry "with-locked-update" () 207 20 ("RDW_ALLCHILDREN" "RDW_UPDATENOW" "RDW_ERASE" "RDW_INVALIDATE" "bit-or" "flags:" "rect:" "redraw-window" "false" "get-rect" "rect" "when" "true" "0" "Rect" "new" "locked-rect" "set!" "begin" "unwind-protect" "get-toplevel" "toplevel" "let" "locked-update?" "if" "proc")}
      {Lisp-Entry "Escape-Handler" () 229 12 ()}
      {Lisp-Entry "get-escape-handler" () 233 20 ("Escape-Handler")}
      {Lisp-Entry "set-escape-handler" () 237 20 ("Escape-Handler" "set!" "handler")}
      {Lisp-Entry "Active-Frame" () 246 12 ()}
      {Lisp-Entry "get-front-frame" () 250 13 ("get-window" "GW_HWNDNEXT" "set!" "IsWindowVisible" "not" "and" "while" "GW_CHILD" "get-handle" "GetWindow" "hwnd" "when" "get-stage" "stage" "let")}
      {Lisp-Entry "activate-front" () 260 13 ("activate-frame" "deactivate-frame" "/=" "or" "when" "Active-Frame" "active" "get-front-frame" "front" "let" "false" "force?" "force?:")}
      {Lisp-Entry "reactivate-active" () 270 20 ("true" "force?:" "activate-frame" "when" "get-front-frame" "front" "let")}
      {Lisp-Entry "Passing-Through?" () 281 19 ("false")}
      {Lisp-Entry "popups" () 285 12 ()}
      {Lisp-Entry "close-all-popups" () 289 20 ("popups" "close-popup" "for-each")}
      {Lisp-Entry "close-popup" () 293 20 ("remove!" "popups" "set!" "close" "popup")}
      {Lisp-Entry "get-window-focus" () 303 13 ("get-window" "when" "platform-get-focus" "focus" "let")}
      {Lisp-Entry "set-window-focus" () 309 13 ("NULL" "get-handle" "if" "platform-set-focus" "window")}}})
"_windows"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "_windows.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.windows" () 37 9 ("jazz")}})
"_workspace"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "workspace" "_workspace.fusion"} {Time 128368667560000000L}
    {Lisp-Entry "jazz.ui.workspace" () 37 9 ("jazz")
      {Lisp-Entry "Selected-Workspace" () 48 12 ()}
      {Lisp-Entry "Locked-Activations?" () 51 12 ("false")}
      {Lisp-Entry "get-workspace" () 55 20 ("error" "workspaces" "get-preferences" "find-component" "either" "name")}
      {Lisp-Entry "selected-workspace" () 60 20 ("Selected-Workspace")}
      {Lisp-Entry "get-locked-activations?" () 64 20 ("Locked-Activations?")}
      {Lisp-Entry "close-palettes" () 68 13 ("get-children" "client-deactivate" "false" "set-visible?" "get-visible?" "Tool-Palette" "is?" "and" "when" "child" "dynamic" "function" "for-each" "get-toplevel" "toplevel" "let")}}})
"_x11"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "x11" "_x11.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.x11" () 0 9 ("XSetWindowAttributes*" "Visual*" "XEvent*" "ulong" "uint" "Window" "Display*" "char*" "pad" "long" "xkeymap" "XKeymapEvent" "xerror" "XErrorEvent" "xmapping" "XMappingEvent" "xclient" "XClientMessageEvent" "xcolormap" "XColormapEvent" "xselection" "XSelectionEvent" "xselectionrequest" "XSelectionRequestEvent" "xselectionclear" "XSelectionClearEvent" "xproperty" "XPropertyEvent" "xcirculaterequest" "XCirculateRequestEvent" "xcirculate" "XCirculateEvent" "xconfigurerequest" "XConfigureRequestEvent" "xresizerequest" "XResizeRequestEvent" "xgravity" "XGravityEvent" "xconfigure" "XConfigureEvent" "xreparent" "XReparentEvent" "xmaprequest" "XMapRequestEvent" "xmap" "XMapEvent" "xunmap" "XUnmapEvent" "xdestroywindow" "XDestroyWindowEvent" "xcreatewindow" "XCreateWindowEvent" "xvisibility" "XVisibilityEvent" "xnoexpose" "XNoExposeEvent" "xgraphicsexpose" "XGraphicsExposeEvent" "xexpose" "XExposeEvent" "xfocus" "XFocusChangeEvent" "xcrossing" "XCrossingEvent" "xmotion" "XMotionEvent" "xbutton" "XButtonEvent" "xkey" "XKeyEvent" "embed" "xany" "XAnyEvent" "type" "int" "XEvent" "c-union" "jazz")
      {Lisp-Entry "None" () 7 12 ()}
      {Lisp-Entry "CopyFromParent" () 8 12 ()}
      {Lisp-Entry "InputOutput" () 9 12 ("1")}
      {Lisp-Entry "NoEventMask" () 13 12 ()}
      {Lisp-Entry "KeyPressMask" () 14 12 ()}
      {Lisp-Entry "KeyReleaseMask" () 15 12 ()}
      {Lisp-Entry "ButtonPressMask" () 16 12 ()}
      {Lisp-Entry "ButtonReleaseMask" () 17 12 ()}
      {Lisp-Entry "EnterWindowMask" () 18 12 ()}
      {Lisp-Entry "LeaveWindowMask" () 19 12 ()}
      {Lisp-Entry "PointerMotionMask" () 20 12 ()}
      {Lisp-Entry "PointerMotionHintMask" () 21 12 ()}
      {Lisp-Entry "Button1MotionMask" () 22 12 ()}
      {Lisp-Entry "Button2MotionMask" () 23 12 ()}
      {Lisp-Entry "Button3MotionMask" () 24 12 ()}
      {Lisp-Entry "Button4MotionMask" () 25 12 ()}
      {Lisp-Entry "Button5MotionMask" () 26 12 ()}
      {Lisp-Entry "ButtonMotionMask" () 27 12 ()}
      {Lisp-Entry "KeymapStateMask" () 28 12 ()}
      {Lisp-Entry "ExposureMask" () 29 12 ()}
      {Lisp-Entry "VisibilityChangeMask" () 30 12 ()}
      {Lisp-Entry "StructureNotifyMask" () 31 12 ()}
      {Lisp-Entry "ResizeRedirectMask" () 32 12 ()}
      {Lisp-Entry "SubstructureNotifyMask" () 33 12 ()}
      {Lisp-Entry "SubstructureRedirectMask" () 34 12 ()}
      {Lisp-Entry "FocusChangeMask" () 35 12 ()}
      {Lisp-Entry "PropertyChangeMask" () 36 12 ()}
      {Lisp-Entry "ColormapChangeMask" () 37 12 ()}
      {Lisp-Entry "OwnerGrabButtonMask" () 38 12 ()}
      {Lisp-Entry "KeyPress" () 42 12 ("2")}
      {Lisp-Entry "KeyRelease" () 43 12 ("3")}
      {Lisp-Entry "ButtonPress" () 44 12 ("4")}
      {Lisp-Entry "ButtonRelease" () 45 12 ("5")}
      {Lisp-Entry "MotionNotify" () 46 12 ("6")}
      {Lisp-Entry "EnterNotify" () 47 12 ("7")}
      {Lisp-Entry "LeaveNotify" () 48 12 ("8")}
      {Lisp-Entry "FocusIn" () 49 12 ("9")}
      {Lisp-Entry "FocusOut" () 50 12 ()}
      {Lisp-Entry "KeymapNotify" () 51 12 ()}
      {Lisp-Entry "Expose" () 52 12 ()}
      {Lisp-Entry "GraphicsExpose" () 53 12 ()}
      {Lisp-Entry "NoExpose" () 54 12 ()}
      {Lisp-Entry "VisibilityNotify" () 55 12 ()}
      {Lisp-Entry "CreateNotify" () 56 12 ()}
      {Lisp-Entry "DestroyNotify" () 57 12 ()}
      {Lisp-Entry "UnmapNotify" () 58 12 ()}
      {Lisp-Entry "MapNotify" () 59 12 ()}
      {Lisp-Entry "MapRequest" () 60 12 ()}
      {Lisp-Entry "ReparentNotify" () 61 12 ()}
      {Lisp-Entry "ConfigureNotify" () 62 12 ()}
      {Lisp-Entry "ConfigureRequest" () 63 12 ()}
      {Lisp-Entry "GravityNotify" () 64 12 ()}
      {Lisp-Entry "ResizeRequest" () 65 12 ()}
      {Lisp-Entry "CirculateNotify" () 66 12 ()}
      {Lisp-Entry "CirculateRequest" () 67 12 ()}
      {Lisp-Entry "PropertyNotify" () 68 12 ()}
      {Lisp-Entry "SelectionClear" () 69 12 ()}
      {Lisp-Entry "SelectionRequest" () 70 12 ()}
      {Lisp-Entry "SelectionNotify" () 71 12 ()}
      {Lisp-Entry "ColormapNotify" () 72 12 ()}
      {Lisp-Entry "ClientMessage" () 73 12 ()}
      {Lisp-Entry "MappingNotify" () 74 12 ()}
      {Lisp-Entry "LASTEvent" () 75 12 ()}
      {Lisp-Entry "CWBackPixmap" () 79 12 ()}
      {Lisp-Entry "CWBackPixel" () 80 12 ()}
      {Lisp-Entry "CWBorderPixmap" () 81 12 ()}
      {Lisp-Entry "CWBorderPixel" () 82 12 ()}
      {Lisp-Entry "CWBitGravity" () 83 12 ()}
      {Lisp-Entry "CWWinGravity" () 84 12 ()}
      {Lisp-Entry "CWBackingStore" () 85 12 ()}
      {Lisp-Entry "CWBackingPlanes" () 86 12 ()}
      {Lisp-Entry "CWBackingPixel" () 87 12 ()}
      {Lisp-Entry "CWOverrideRedirect" () 88 12 ()}
      {Lisp-Entry "CWSaveUnder" () 89 12 ()}
      {Lisp-Entry "CWEventMask" () 90 12 ()}
      {Lisp-Entry "CWDontPropagate" () 91 12 ()}
      {Lisp-Entry "CWColormap" () 92 12 ()}
      {Lisp-Entry "CWCursor" () 93 12 ()}
      {Lisp-Entry "Button1" () 96 12 ("1")}
      {Lisp-Entry "Button2" () 97 12 ("2")}
      {Lisp-Entry "Button3" () 98 12 ("3")}
      {Lisp-Entry "Button4" () 99 12 ("4")}
      {Lisp-Entry "Button5" () 100 12 ("5")}
      {Lisp-Entry "char" () 103 10 ("char" "native")}
      {Lisp-Entry "char*" () 104 10 ("char" "pointer")}
      {Lisp-Entry "int" () 105 10 ("int" "native")}
      {Lisp-Entry "long" () 106 10 ("long" "native")}
      {Lisp-Entry "long*" () 107 10 ("long" "pointer")}
      {Lisp-Entry "uint" () 108 10 ("unsigned-int" "native")}
      {Lisp-Entry "ulong" () 109 10 ("unsigned-long" "native")}
      {Lisp-Entry "Bool" () 110 10 ("bool" "native")}
      {Lisp-Entry "void" () 111 10 ("void" "native")}
      {Lisp-Entry "Display" () 113 10 ("native")}
      {Lisp-Entry "Display*" () 114 10 ("Display" "pointer")}
      {Lisp-Entry "Screen" () 115 10 ("native")}
      {Lisp-Entry "Screen*" () 116 10 ("Screen" "pointer")}
      {Lisp-Entry "Visual" () 117 10 ("native")}
      {Lisp-Entry "Visual*" () 118 10 ("Visual" "pointer")}
      {Lisp-Entry "XID" () 119 10 ("unsigned-long" "native")}
      {Lisp-Entry "Window" () 120 10 ("XID")}
      {Lisp-Entry "Drawable" () 121 10 ("XID")}
      {Lisp-Entry "Pixmap" () 122 10 ("XID")}
      {Lisp-Entry "Colormap" () 123 10 ("XID")}
      {Lisp-Entry "Cursor" () 124 10 ("XID")}
      {Lisp-Entry "Time" () 125 10 ("unsigned-long" "native")}
      {Lisp-Entry "Atom" () 127 10 ("XID")}
      {Lisp-Entry "XSetWindowAttributes" () 129 15 ("cursor" "Cursor" "colormap" "Colormap" "override_redirect" "do_not_propagate_mask" "event_mask" "long" "save_under" "Bool" "backing_pixel" "backing_planes" "backing_store" "win_gravity" "bit_gravity" "int" "border_pixel" "border_pixmap" "background_pixel" "ulong" "background_pixmap" "Pixmap")}
      {Lisp-Entry "XAnyEvent" () 146 15 ("window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XButtonEvent" () 153 15 ("same_screen" "button" "state" "uint" "y_root" "x_root" "y" "x" "time" "Time" "subwindow" "root" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XKeyEvent" () 170 15 ("same_screen" "keycode" "state" "uint" "y_root" "x_root" "y" "x" "time" "Time" "subwindow" "root" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XMotionEvent" () 188 15 ("same_screen" "is_hint" "char" "state" "uint" "y_root" "x_root" "y" "x" "time" "Time" "subwindow" "root" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XCrossingEvent" () 206 15 ("state" "uint" "focus" "same_screen" "detail" "mode" "y_root" "x_root" "y" "x" "time" "Time" "subwindow" "root" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XFocusChangeEvent" () 226 15 ("detail" "mode" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XKeymapEvent" () 236 15 ("key_vector" "char" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XExposeEvent" () 244 15 ("count" "height" "width" "y" "x" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XGraphicsExposeEvent" () 257 15 ("minor_code" "major_code" "count" "height" "width" "y" "x" "drawable" "Drawable" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XNoExposeEvent" () 272 15 ("minor_code" "major_code" "drawable" "Drawable" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XVisibilityEvent" () 282 15 ("state" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XCreateWindowEvent" () 290 15 ("override_redirect" "border_width" "height" "width" "y" "x" "window" "parent" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XDestroyWindowEvent" () 304 15 ("window" "event" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XUnmapEvent" () 313 15 ("from_configure" "window" "event" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XMapEvent" () 322 15 ("override_redirect" "window" "event" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XMapRequestEvent" () 331 15 ("window" "parent" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XReparentEvent" () 339 15 ("override_redirect" "y" "x" "parent" "window" "event" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XConfigureEvent" () 351 15 ("override_redirect" "above" "border_width" "height" "width" "y" "x" "window" "event" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XGravityEvent" () 366 15 ("y" "x" "window" "event" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XResizeRequestEvent" () 377 15 ("height" "width" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XConfigureRequestEvent" () 387 15 ("value_mask" "detail" "above" "border_width" "height" "width" "y" "x" "window" "parent" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XCirculateEvent" () 403 15 ("place" "window" "event" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XCirculateRequestEvent" () 413 15 ("place" "window" "parent" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XPropertyEvent" () 422 15 ("state" "time" "Time" "atom" "Atom" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XSelectionClearEvent" () 432 15 ("time" "Time" "selection" "Atom" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XSelectionRequestEvent" () 442 15 ("time" "Time" "property" "target" "selection" "Atom" "requestor" "owner" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XSelectionEvent" () 454 15 ("time" "Time" "property" "target" "selection" "Atom" "requestor" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XColormapEvent" () 465 15 ("state" "new" "colormap" "Colormap" "window" "Window" "display" "Display*" "send_event" "Bool" "serial" "ulong" "type" "int")}
      {Lisp-Entry "XClientMessageEvent" () 475 10 ("native")}
      {Lisp-Entry "XClientMessageEvent*" () 476 10 ("XClientMessageEvent" "pointer")}
      {Lisp-Entry "XMappingEvent" () 477 10 ("native")}
      {Lisp-Entry "XMappingEvent*" () 478 10 ("XMappingEvent" "pointer")}
      {Lisp-Entry "XErrorEvent" () 479 10 ("native")}
      {Lisp-Entry "XErrorEvent*" () 480 10 ("XErrorEvent" "pointer")}
      {Lisp-Entry "XOpenDisplay" () 520 28 ()}
      {Lisp-Entry "XCloseDisplay" () 521 28 ()}
      {Lisp-Entry "XDefaultScreen" () 522 28 ()}
      {Lisp-Entry "XScreenOfDisplay" () 523 28 ()}
      {Lisp-Entry "XRootWindow" () 524 28 ()}
      {Lisp-Entry "XBlackPixel" () 525 28 ()}
      {Lisp-Entry "XWhitePixel" () 526 28 ()}
      {Lisp-Entry "XCreateSimpleWindow" () 527 28 ()}
      {Lisp-Entry "XMapWindow" () 528 28 ()}
      {Lisp-Entry "XFlush" () 529 28 ()}
      {Lisp-Entry "XDefaultVisual" () 530 28 ()}
      {Lisp-Entry "XNextEvent" () 531 28 ()}
      {Lisp-Entry "XSelectInput" () 532 28 ()}
      {Lisp-Entry "XDestroyWindow" () 533 28 ()}
      {Lisp-Entry "XUnmapWindow" () 534 28 ()}
      {Lisp-Entry "XCreateWindow" () 535 28 ()}}})
"_xml"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "_xml.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.xml" () 0 9 ("jazz")}})
"a"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "a.fusion"} {Time 128368006420000000L}
    {Lisp-Entry "test.a" () 0 9 ("jazz")
      {Lisp-Entry "nneq?" () 3 27 ("eq?" "not" "y" "x")}
      {Lisp-Entry "A" () 7 7 ("Object")
        {Lisp-Entry "aa" () 10 8 ("generate")}
        {Lisp-Entry "yoo" () 13 25 ("self" "list" "a")}}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "a.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.test.a" () 0 9 ("Z" "X" "new" "list" "baz" "bar" "foo" "*" "collect" "to" "0" "from" "i" "for" "loop" "debug" "jazz")
      {Lisp-Entry "foo" () 9 13 ()}
      {Lisp-Entry "bar" () 13 13 ("c" "b" "3" "2" "P")}
      {Lisp-Entry "baz" () 17 13 ("4" "3" "2" "1" "P" "Q")}
      {Lisp-Entry "X" () 21 7 ("Object")
        {Lisp-Entry "a" () 23 8 ()}}
      {Lisp-Entry "X" () 28 7 ("Object")
        {Lisp-Entry "a" () 30 8 ("2")}
        {Lisp-Entry "b" () 31 8 ()}
        {Lisp-Entry "foo" () 33 11 ("get-a" "a" "list" "3" "set-a" "b" "set!" "self" "class-of" "new" "x" "let")}}
      {Lisp-Entry "Y" () 41 7 ("Object")
        {Lisp-Entry "foo" () 43 19 ("3")}}
      {Lisp-Entry "Z" () 46 7 ("Y")
        {Lisp-Entry "a" () 48 8 ("5")}
        {Lisp-Entry "b" () 49 8 ("generate" "7")}
        {Lisp-Entry "d" () 51 15 ("2")}
        {Lisp-Entry "foo" () 54 11 ("nextmethod" "+")}
        {Lisp-Entry "bar" () 57 19 ("baz" "function" "foo" "d" "b" "a" "list")}
        {Lisp-Entry "baz" () 60 11 ("7")}}
      {Lisp-Entry "foo" () 63 13 ("2" "1" "if" "x")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "test" "a.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.test.a" () 0 9 ("toto" "newline" "3" "/" "-" "2" "*" "1" "+" "display" "jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "a.scm"} {Time 128355726660000000L}
    {Lisp-Entry "test.performance.a" () 0 8 ("safe" "not" "standard-bindings" "block" "declare")
      {Lisp-Entry "f-separate" () 8 9 ("1" "%%fx-" "g-separate" "0" "%%fx=" "if" "n" "s")}}})
"attributes"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "attributes.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax.attributes" () 37 9 ("scheme")
      {Lisp-Entry "attributes" () 81 9 ("set-property" "public" "setter" "format" "string->symbol" "getter" "let*" "set!" "set-value" "nextmethod" "else" "list" "case" "get-value" "slot" "eq?" "if" "unspecified" "initialize" "getf" "init" "name" "lambda" "append" "symbol->keyword" "map" "node-properties" "method" "begin" "value" "generate-symbol" "property" "cdr" "properties" "car" "inherited" "let" "form")
        {Lisp-Entry "unspecified" () 82 10 ("cons")}
        {Lisp-Entry "symbol->keyword" () 85 11 ("symbol->string" "string->keyword" "symbol")}}}})
"autoload"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "autoload.fusion"} {Time 128369462380000000L}
    {Lisp-Entry "jazz.library.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "lib" "jedi" "autoload.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jedi.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "xml" "autoload.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.xml.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "autoload.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "sql" "autoload.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.sql.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "setup" "autoload.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.setup.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "schema" "autoload.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.schema.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "resources" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.resources.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "repository" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.repository.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "recorder" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.recorder.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "python" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.python.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "process" "autoload.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.process.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "messenger" "autoload.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.messenger.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "lua" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.lua.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "license" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.license.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jrm" "autoload.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.jrm.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jml" "autoload.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "jazz.jml.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "autoload.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "html" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.html.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "groupware" "autoload.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.groupware.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "designer" "autoload.fusion"} {Time 128366795600000000L}
    {Lisp-Entry "jazz.designer.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debugger" "autoload.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.debugger.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "debuggee" "autoload.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.debuggee.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dde" "autoload.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.dde.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "console" "autoload.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.console.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "application" "autoload.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.application.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "autoload.fusion"} {Time 128366795580000000L}
    {Lisp-Entry "jazz.access.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "catalog" "autoload.fusion"} {Time 128360892480000000L}
    {Lisp-Entry "jazz.catalog.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "jazz" "autoload.fusion"} {Time 128360675620000000L}
    {Lisp-Entry "jazz.jazz.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "doc" "autoload.fusion"} {Time 128360675620000000L}
    {Lisp-Entry "jazz.doc.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "user" "autoload.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "user.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "autoload.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.ui.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "builder" "autoload.fusion"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.builder.autoload" () 0 9 ("jazz")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "runtime" "autoload.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.library.runtime.autoload" () 41 8 ()
      {Lisp-Entry "jazz.Autoloads" () 44 8 ("eq?" "%%make-hashtable")}
      {Lisp-Entry "jazz.get-autoloads" () 48 9 ("jazz.Autoloads")}
      {Lisp-Entry "jazz.get-autoload" () 52 9 ("jazz.Autoloads" "%%hashtable-ref" "name")}
      {Lisp-Entry "jazz.set-autoload" () 56 9 ("jazz.Autoloads" "%%hashtable-set!" "module-name" "name")}
      {Lisp-Entry "jazz.require-autoload" () 60 9 ("jazz.error" "jazz.get-autoload" "or" "name")}
      {Lisp-Entry "jazz.register-autoload" () 65 9 ("jazz.error" "jazz.set-autoload" "%%eq?" "%%not" "or" "if" "jazz.get-autoload" "actual" "let" "module-name" "name")}
      {Lisp-Entry "jazz.autoload" () 72 9 ("jazz.compose-name" "jazz.global-value" "jazz.load-module" "jazz.require-autoload" "module-name" "let" "name")}
      {Lisp-Entry "jazz.autoreload" () 78 9 ("jazz.compose-name" "jazz.global-value" "jazz.reload-module" "jazz.require-autoload" "module-name" "let" "name")}}})
"b"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "b.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "test.b" () 0 9 ("jazz")
      {Lisp-Entry "B" () 2 7 ("Object")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "test" "b.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.test.b" () 0 9 ("test")
      {Lisp-Entry "+" () 6 8 ()}
      {Lisp-Entry "*" () 7 8 ()}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "b.scm"} {Time 128355726660000000L}
    {Lisp-Entry "test.performance.b" () 0 8 ("safe" "not" "standard-bindings" "block" "declare")
      {Lisp-Entry "g-separate" () 8 9 ("1" "%%fx-" "f-separate" "0" "%%fx=" "if" "n" "s")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "b.fusion"} {Time 128355726640000000L}
    {Lisp-Entry "jazz.test.b" () 0 9 ("X" "list" "x" "jazz")
      {Lisp-Entry "X" () 2 7 ("Object")
        {Lisp-Entry "initialize" () 4 11 ("X" "initialize" "debug" "self")}
        {Lisp-Entry "print" () 7 19 ("function" "print-unreadable" "detail" "output" "self")}}
      {Lisp-Entry "f" () 12 17 ("x")}
      {Lisp-Entry "f" () 14 11 ()}
      {Lisp-Entry "foo" () 17 13 ("bar" "+" "x")}
      {Lisp-Entry "bar" () 20 13 ("2")}
      {Lisp-Entry "Y" () 23 7 ("X")
        {Lisp-Entry "a" () 25 8 ()}
        {Lisp-Entry "b" () 26 8 ("generate" "2")}
        {Lisp-Entry "print" () 28 11 ("function" "self" "print-unreadable" "detail" "output")}
        {Lisp-Entry "foo" () 33 11 ("self")}
        {Lisp-Entry "test" () 36 11 ("list" "Y" "y" "X" "new" "x" "let")}}
      {Lisp-Entry "W" () 41 7 ("Y")}}})
"bind"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "bind.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax.bind" () 38 9 ("scheme")
      {Lisp-Entry "bind" () 56 15 ("expand-bind-car" "generate-symbol" "tree-symbol" "let" "body" "tree" "bindings")}
      {Lisp-Entry "expand-bind-car" () 62 9 ("expand-bind-car" "generate-symbol" "car-symbol" "pair?" "expand-bind-cdr" "symbol?" "cond" "car" "car-binding" "let" "body" "tree" "bindings")}
      {Lisp-Entry "expand-bind-cdr" () 74 9 ("expand-bind-car" "generate-symbol" "cdr-symbol" "pair?" "symbol?" "null?" "cond" "cdr" "cdr-binding" "let" "body" "tree" "bindings")}}})
"bind-keywords"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "bind-keywords.scm"} {Time 128369316920000000L}
    {Lisp-Entry "jazz.dialect.syntax.bind-keywords" () 38 9 ("scheme")
      {Lisp-Entry "bind-keywords" () 54 15 ("error" "not-null?" "unbox-list" "symbol?" "if" "proper-list" "symbol->string" "string->keyword" "find-keyword" "cadr" "default" "car" "variable" "binding" "lambda" "map" "let*" "box-list" "last-pair" "oth" "new-queue" "bnd" "generate-symbol" "box" "let" "body" "rest" "bindings")}}})
"bind-optionals"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "bind-optionals.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax.bind-optionals" () 38 9 ("scheme")
      {Lisp-Entry "bind-optionals" () 61 15 ("error" "cdr" "set!" "begin" "variable" "binding" "lambda" "map" "generate-symbol" "scan" "cadar" "car" "not-null?" "caar" "let" "length" "1" "=" "if" "body" "rest" "bindings")}}})
"boot"
 ({Lisp-File-Entry {File dev "jazz" "kernel" "boot.scm"} {Time 128366319460000000L}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "boot.scm"} {Time 128366793860000000L}
    {Lisp-Entry "load-path" () 56 8 ()}
    {Lisp-Entry "copass-s-files" () 59 8 ("list")}
    {Lisp-Entry "copass-s-runtime-files" () 63 8 ("list")}
    {Lisp-Entry "copass-dual-runtime-files" () 67 8 ("list")}
    {Lisp-Entry "copass-c-runtime-files" () 71 8 ("list")}
    {Lisp-Entry "c-lib-mapping" () 75 8 ()}
    {Lisp-Entry "c-load" () 85 9 ("string-append" "debug-load" "file-name")}
    {Lisp-Entry "s-load" () 89 9 ("debug-load" "s" "copass" "set!" "file-name")}
    {Lisp-Entry "debug-load" () 94 9 ("load" "newline" "string-append" "display" "load-path" "current-directory" "file")}
    {Lisp-Entry "debug-compile" () 106 9 ("lib" "map" "apply" "shell-command" "link-flat" "begin" "error" "s" "compile-file-to-c" "c" "copass" "set!" "lambda" "dynamic-wind" "not" "outfile" "linkfile" "cfile" "list" "linklist" "cdr" "if" "c-lib-mapping" "assoc" "found" "libs" "let" "newline" "string-append" "display" "load-path" "current-directory" "suffix" "base-name")}
    {Lisp-Entry "c-expand" () 136 9 ("s" "expansion" "compile-file" "c" "copass" "set!" "lambda" "dynamic-wind" "load-path" "current-directory" "file-name")}
    {Lisp-Entry "s-expand" () 143 9 ("expansion" "compile-file" "s" "copass" "set!" "lambda" "load-path" "current-directory" "file-name")}
    {Lisp-Entry "cobuild-load" () 154 9 ("copass-c-runtime-files" "copass-dual-runtime-files" "s-load" "c-load" "debug-compile" "file" "lambda" "copass-s-runtime-files" "copass-s-files" "debug-load" "for-each" "load-path" "current-directory")}
    {Lisp-Entry "co-load" () 167 9 ("copass-c-runtime-files" "copass-dual-runtime-files" "s-load" "c-load" "file" "lambda" "copass-s-runtime-files" "copass-s-files" "debug-load" "for-each" "load-path" "current-directory")}
    {Lisp-Entry "co-reload" () 178 9 ("copass-dual-runtime-files" "s-load" "copass-s-runtime-files" "copass-s-files" "debug-load" "for-each" "load-path" "current-directory")}
    {Lisp-Entry "clean" () 185 9 ("shell-command" "load-path" "current-directory")}
    {Lisp-Entry "aaz" () 196 9 ("load" "clean")}
    {Lisp-Entry "aa0" () 202 9 ("cobuild-load")}
    {Lisp-Entry "aal" () 206 9 ("co-load")}
    {Lisp-Entry "aa" () 210 9 ("co-reload")}
    {Lisp-Entry "aa-c" () 214 9 ("c" "copass" "set!")}
    {Lisp-Entry "aa-s" () 218 9 ("s" "copass" "set!")}
    {Lisp-Entry "aat" () 222 9 ("load")}
    {Lisp-Entry "aaf" () 226 8 ()}
    {Lisp-Entry "aas" () 227 9 ("s-load" "3" "c-load" "2" "aaf" "debug-compile" "1" "case" "n")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "boot.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "test.boot" () 0 9 ("Jedi" "new" "boot-environment" "jazz")}})
"build"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "dev" "build.scm"} {Time 128367618040000000L}
    {Lisp-Entry "dev.build" () 38 8 ()
      {Lisp-Entry "jazz.compile-library-with-options" () 50 9 ("compile-file" "lambda" "jazz.filename-extension" "jazz.with-extension-reader" "jazz.require-module-source" "src" "jazz.determine-module-filename" "filename" "let" "options" "library-name")}
      {Lisp-Entry "jazz.compile-library-with-flags" () 58 9 ("force?:" "ld-flags:" "cc-flags:" "options:" "jazz.compile-filename-with-flags" "jazz.determine-module-filename" "filename" "let" "force?" "ld-flags" "cc-flags" "options" "library-name")}
      {Lisp-Entry "jazz.compile-filename-with-flags" () 63 9 ("compile-file-to" "compile" "jazz.walk-for" "parameterize" "lambda" "jazz.filename-extension" "jazz.with-extension-reader" "jazz.compile-verbose" "begin" ">" "not" "jazz.create-directories" "and" "bintime" "file-last-modification-time" "time->seconds" "srctime" "jazz.determine-module-bindir" "bindir" "jazz.determine-module-binary" "bin" "jazz.require-module-source" "%%string-append" "if" "src" "let*" "jazz.compile-options" "or" "let" "source?" "force?" "ld-flags" "cc-flags" "options" "filename")}
      {Lisp-Entry "jazz.compile-library-to-c" () 82 9 ("compile-file-to-c" "delete-file" "file-exists?" "if" "string-append" "c-file" "jazz.require-module-source" "source" "jazz.determine-module-filename" "filename" "let*" "library-name")}
      {Lisp-Entry "jazz.compile-library" () 91 9 ("jazz.compile-filename-with-flags" "jazz.determine-module-filename" "jazz.require-module-source" "filename" "let" "library-name")}
      {Lisp-Entry "jazz.compile-verbose" () 96 9 ("newline" "display" "filename")}
      {Lisp-Entry "jazz.create-directories" () 108 9 ("create-directory" "file-exists?" "jazz.join-strings" "subdir" "begin" "%%null?" "%%not" "%%cdr" "%%car" "%%equal?" "if" "scan" "iter" "jazz.split-string" "%%reverse" "path" "let" "dirname")}
      {Lisp-Entry "jazz.build-bin-dir" () 119 9 ("%%string-append" "jazz.create-directories" "directory")}
      {Lisp-Entry "jazz.build-kernel" () 123 9 ("jazz.compile-filename-with-flags" "jazz.build-bin-dir")}
      {Lisp-Entry "jazz.build-module" () 128 9 ("jazz.compile-filename-with-flags" "jazz.build-bin-dir" "file" "dir" "jazz.split-filename" "directory" "jazz.determine-module-filename" "filename" "let*" "interpreted" "eq?" "not" "%%when" "phase" "load" "declaration" "lambda" "jazz.for-each-submodule" "module-name")}
      {Lisp-Entry "jazz.for-each-submodule" () 138 9 ("error" "jazz.set-catalog-entry" "else" "%%get-library-declaration-requires" "%%get-module-declaration-requires" "jazz.parse-require" "require" "lambda" "for-each" "jazz.Module-Declaration" "jazz.is?" "if" "%%get-lexical-binding-name" "eq?" "cond" "jazz.locate-toplevel-declaration" "declaration" "phase" "load" "feature-requirement" "iter" "let" "proc" "module-name")}}})
"c"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "test" "c.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.test.c" () 0 9 ("test")
      {Lisp-Entry "*" () 2 8 ()}}})
"cairo-win32"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "cairo" "cairo-win32.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.cairo.cairo-win32" () 37 9 ("cairo_format_t" "LOGFONTW*" "cairo_matrix_t*" "cairo_font_weight_t" "cairo_font_slant_t" "string" "cairo_text_extents_t*" "int" "cairo_glyph_t*" "cairo_font_extents_t*" "cairo_font_face_t*" "utf8" "double*" "cairo_pattern_t*" "double" "cairo_t*" "HDC" "cairo_surface_t*" "jazz")
      {Lisp-Entry "M_PI" () 46 10 ()}
      {Lisp-Entry "void" () 49 8 ("void" "native")}
      {Lisp-Entry "int" () 50 8 ("int" "native")}
      {Lisp-Entry "int*" () 51 8 ("int" "pointer")}
      {Lisp-Entry "double" () 52 8 ("double" "native")}
      {Lisp-Entry "double*" () 53 8 ("double*" "double" "pointer")}
      {Lisp-Entry "ulong" () 54 8 ("unsigned-long" "native")}
      {Lisp-Entry "utf8" () 55 8 ("UTF-8-string" "native")}
      {Lisp-Entry "string" () 56 8 ("char-string" "native")}
      {Lisp-Entry "HDC" () 57 8 ("handle" "struct" "pointer")}
      {Lisp-Entry "cairo_surface_t" () 60 8 ("native")}
      {Lisp-Entry "cairo_surface_t*" () 61 8 ("cairo_surface_t*" "cairo_surface_t" "pointer")}
      {Lisp-Entry "cairo_t" () 62 8 ("native")}
      {Lisp-Entry "cairo_t*" () 63 8 ("cairo_t*" "cairo_t" "pointer")}
      {Lisp-Entry "cairo_pattern_t" () 64 8 ("native")}
      {Lisp-Entry "cairo_pattern_t*" () 65 8 ("cairo_pattern_t*" "cairo_pattern_t" "pointer")}
      {Lisp-Entry "cairo_font_face_t" () 66 8 ("native")}
      {Lisp-Entry "cairo_font_face_t*" () 67 8 ("cairo_font_face_t*" "cairo_font_face_t" "pointer")}
      {Lisp-Entry "cairo_content_t" () 70 13 ("CAIRO_CONTENT_COLOR_ALPHA" "CAIRO_CONTENT_ALPHA" "CAIRO_CONTENT_COLOR")}
      {Lisp-Entry "cairo_content_t" () 75 8 ("int")}
      {Lisp-Entry "cairo_format_t" () 78 13 ("3" "CAIRO_FORMAT_A1" "2" "CAIRO_FORMAT_A8" "1" "CAIRO_FORMAT_RGB24" "0" "CAIRO_FORMAT_ARGB32")}
      {Lisp-Entry "cairo_format_t" () 84 8 ("int")}
      {Lisp-Entry "cairo_font_slant_t" () 87 13 ("2" "CAIRO_FONT_SLANT_OBLIQUE" "1" "CAIRO_FONT_SLANT_ITALIC" "0" "CAIRO_FONT_SLANT_NORMAL")}
      {Lisp-Entry "cairo_font_slant_t" () 92 8 ("int")}
      {Lisp-Entry "cairo_font_weight_t" () 95 13 ("1" "CAIRO_FONT_WEIGHT_BOLD" "0" "CAIRO_FONT_WEIGHT_NORMAL")}
      {Lisp-Entry "cairo_font_weight_t" () 99 8 ("int")}
      {Lisp-Entry "cairo_status_t" () 102 13 ("CAIRO_STATUS_CLIP_NOT_REPRESENTABLE" "CAIRO_STATUS_INVALID_INDEX" "CAIRO_STATUS_INVALID_DSC_COMMENT" "CAIRO_STATUS_INVALID_DASH" "CAIRO_STATUS_FILE_NOT_FOUND" "CAIRO_STATUS_INVALID_VISUAL" "CAIRO_STATUS_INVALID_FORMAT" "CAIRO_STATUS_INVALID_CONTENT" "CAIRO_STATUS_PATTERN_TYPE_MISMATCH" "CAIRO_STATUS_SURFACE_TYPE_MISMATCH" "CAIRO_STATUS_SURFACE_FINISHED" "CAIRO_STATUS_WRITE_ERROR" "CAIRO_STATUS_READ_ERROR" "9" "CAIRO_STATUS_INVALID_PATH_DATA" "8" "CAIRO_STATUS_INVALID_STRING" "7" "CAIRO_STATUS_NULL_POINTER" "6" "CAIRO_STATUS_INVALID_STATUS" "5" "CAIRO_STATUS_INVALID_MATRIX" "4" "CAIRO_STATUS_NO_CURRENT_POINT" "3" "CAIRO_STATUS_INVALID_POP_GROUP" "2" "CAIRO_STATUS_INVALID_RESTORE" "1" "CAIRO_STATUS_NO_MEMORY" "0" "CAIRO_STATUS_SUCCESS")}
      {Lisp-Entry "cairo_status_t" () 127 8 ("int")}
      {Lisp-Entry "cairo_font_extents_t" () 130 13 ("max_y_advance" "max_x_advance" "height" "descent" "ascent" "double")}
      {Lisp-Entry "cairo_text_extents_t" () 138 13 ("y_advance" "x_advance" "height" "width" "y_bearing" "x_bearing" "double")}
      {Lisp-Entry "cairo_matrix_t" () 147 13 ("y0" "x0" "yy" "xy" "yx" "xx" "double")}
      {Lisp-Entry "cairo_glyph_t" () 156 13 ("y" "x" "double" "index" "ulong")}
      {Lisp-Entry "cairo_current_point" () 167 12 ("double*" "cairo_t*" "c-function")}
      {Lisp-Entry "cairo_free_point" () 174 12 ("void" "double*" "c-function")}
      {Lisp-Entry "get-point-x" () 178 12 ("double" "double*" "c-function")}
      {Lisp-Entry "get-point-y" () 183 12 ("double" "double*" "c-function")}
      {Lisp-Entry "cairo_device_to_user" () 193 12 ("double*" "double" "cairo_t*" "c-function")}
      {Lisp-Entry "cairo_user_to_device" () 202 12 ("double*" "double" "cairo_t*" "c-function")}
      {Lisp-Entry "alloc-int-array" () 216 12 ("int*" "int" "c-function")}
      {Lisp-Entry "int-array-set!" () 217 12 ("void" "int" "int*" "c-function")}
      {Lisp-Entry "int-array-ref" () 218 12 ("int" "int*" "c-function")}
      {Lisp-Entry "double-array-ref" () 226 12 ("double" "int" "double*" "c-function")}
      {Lisp-Entry "alloc-glyph-array" () 234 12 ("cairo_glyph_t*" "int" "c-function")}
      {Lisp-Entry "free-glyph-array" () 235 12 ("void" "cairo_glyph_t*" "c-function")}
      {Lisp-Entry "glyph-array-ref" () 236 12 ("int" "cairo_glyph_t*" "c-function")}
      {Lisp-Entry "cairo_surface_destroy" () 244 32 ()}
      {Lisp-Entry "cairo_surface_status" () 245 32 ()}
      {Lisp-Entry "cairo_surface_get_content" () 246 32 ()}
      {Lisp-Entry "cairo_surface_finish" () 247 32 ()}
      {Lisp-Entry "cairo_surface_flush" () 248 32 ()}
      {Lisp-Entry "cairo_win32_surface_create" () 256 32 ()}
      {Lisp-Entry "cairo_win32_surface_get_dc" () 257 32 ()}
      {Lisp-Entry "cairo_create" () 265 32 ()}
      {Lisp-Entry "cairo_destroy" () 266 32 ()}
      {Lisp-Entry "cairo_save" () 267 32 ()}
      {Lisp-Entry "cairo_restore" () 268 32 ()}
      {Lisp-Entry "cairo_status" () 269 32 ()}
      {Lisp-Entry "cairo_clip" () 270 32 ()}
      {Lisp-Entry "cairo_reset_clip" () 271 32 ()}
      {Lisp-Entry "cairo_fill" () 272 32 ()}
      {Lisp-Entry "cairo_paint" () 273 32 ()}
      {Lisp-Entry "cairo_stroke" () 274 32 ()}
      {Lisp-Entry "cairo_stroke_preserve" () 275 32 ()}
      {Lisp-Entry "cairo_move_to" () 283 32 ()}
      {Lisp-Entry "cairo_line_to" () 284 32 ()}
      {Lisp-Entry "cairo_rel_line_to" () 285 32 ()}
      {Lisp-Entry "cairo_arc" () 286 32 ()}
      {Lisp-Entry "cairo_rectangle" () 287 32 ()}
      {Lisp-Entry "cairo_set_line_width" () 288 32 ()}
      {Lisp-Entry "cairo_get_line_width" () 289 32 ()}
      {Lisp-Entry "cairo_rel_move_to" () 290 32 ()}
      {Lisp-Entry "cairo_set_source" () 298 32 ()}
      {Lisp-Entry "cairo_set_source_surface" () 299 32 ()}
      {Lisp-Entry "cairo_set_source_rgb" () 300 32 ()}
      {Lisp-Entry "cairo_set_source_rgba" () 301 32 ()}
      {Lisp-Entry "cairo_get_source" () 302 32 ()}
      {Lisp-Entry "cairo_pattern_get_rgba" () 303 32 ()}
      {Lisp-Entry "cairo_pattern_create_for_surface" () 304 32 ()}
      {Lisp-Entry "cairo_pattern_create_linear" () 305 32 ()}
      {Lisp-Entry "cairo_pattern_add_color_stop_rgb" () 306 32 ()}
      {Lisp-Entry "cairo_show_text" () 314 32 ()}
      {Lisp-Entry "cairo_set_font_face" () 315 32 ()}
      {Lisp-Entry "cairo_set_font_size" () 316 32 ()}
      {Lisp-Entry "cairo_font_extents" () 317 32 ()}
      {Lisp-Entry "cairo_glyph_extents" () 318 32 ()}
      {Lisp-Entry "cairo_select_font_face" () 319 32 ()}
      {Lisp-Entry "cairo_show_glyphs" () 320 32 ()}
      {Lisp-Entry "cairo_text_extents" () 321 32 ()}
      {Lisp-Entry "cairo_translate" () 329 32 ()}
      {Lisp-Entry "cairo_transform" () 330 32 ()}
      {Lisp-Entry "cairo_set_matrix" () 331 32 ()}
      {Lisp-Entry "cairo_get_matrix" () 332 32 ()}
      {Lisp-Entry "cairo_identity_matrix" () 333 32 ()}
      {Lisp-Entry "cairo_scale" () 334 32 ()}
      {Lisp-Entry "cairo_device_to_user_distance" () 335 32 ()}
      {Lisp-Entry "cairo_win32_font_face_create_for_logfontw" () 343 32 ()}
      {Lisp-Entry "cairo_font_face_destroy" () 344 32 ()}
      {Lisp-Entry "cairo_image_surface_create_from_png" () 352 32 ()}
      {Lisp-Entry "cairo_image_surface_create" () 353 32 ()}
      {Lisp-Entry "cairo_pattern_destroy" () 354 32 ()}}})
"cffi"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "cffi.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "test.cffi" () 37 9 ("jazz")
      {Lisp-Entry "init1" () 71 12 ("int" "c-function")}
      {Lisp-Entry "void" () 80 8 ("void" "native")}
      {Lisp-Entry "bool" () 81 8 ("bool" "native")}
      {Lisp-Entry "char" () 82 8 ("char" "native")}
      {Lisp-Entry "wchar_t" () 83 8 ("wchar_t" "native")}
      {Lisp-Entry "int" () 84 8 ("int" "native")}
      {Lisp-Entry "double" () 85 8 ("double" "native")}
      {Lisp-Entry "scheme-object" () 86 8 ("scheme-object" "native")}
      {Lisp-Entry "object" () 87 8 ("scheme-object")}
      {Lisp-Entry "scalar1" () 98 12 ("void" "int" "c-function")}
      {Lisp-Entry "scalar2" () 111 12 ("int" "c-function")}
      {Lisp-Entry "scalar3" () 124 12 ("int" "object" "c-function")}
      {Lisp-Entry "ca" () 186 12 ("2")}
      {Lisp-Entry "cb" () 187 12 ("3")}
      {Lisp-Entry "e" () 195 13 ("4" "ec" "2" "eb" "1" "ea")}
      {Lisp-Entry "S1" () 243 8 ("struct")}
      {Lisp-Entry "make-S1" () 246 12 ("S1" "c-function")}
      {Lisp-Entry "struct1a" () 251 12 ("int" "S1" "c-function")}
      {Lisp-Entry "struct1c" () 257 12 ("int" "S1" "pointer" "c-function")}
      {Lisp-Entry "cast-S2->S2*" () 268 12 ("error" "S2*" "object" "c-function" "S2" "foreign-tag" "eq?" "if" "s2" "lambda")}
      {Lisp-Entry "mult*" () 305 8 ("int" "function" "pointer")}
      {Lisp-Entry "func1" () 324 12 ("mult*" "c-function")}}})
"class"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "syntax" "class.scm"} {Time 128366823040000000L}
    {Lisp-Entry "core.class.syntax.class" () 37 8 ()
      {Lisp-Entry "jazz.category-name" () 40 8 ("jazz.object-size")}
      {Lisp-Entry "jazz.category-fields" () 43 8 ("1" "jazz.category-name" "%%fx+")}
      {Lisp-Entry "jazz.category-ancestors" () 46 8 ("1" "jazz.category-fields" "%%fx+")}
      {Lisp-Entry "jazz.category-descendants" () 49 8 ("1" "jazz.category-ancestors" "%%fx+")}
      {Lisp-Entry "jazz.class-ascendant" () 52 8 ("1" "jazz.category-descendants" "%%fx+")}
      {Lisp-Entry "jazz.class-interfaces" () 55 8 ("1" "jazz.class-ascendant" "%%fx+")}
      {Lisp-Entry "jazz.class-slots" () 58 8 ("1" "jazz.class-interfaces" "%%fx+")}
      {Lisp-Entry "jazz.class-instance-size" () 61 8 ("1" "jazz.class-slots" "%%fx+")}
      {Lisp-Entry "jazz.class-level" () 64 8 ("1" "jazz.class-instance-size" "%%fx+")}
      {Lisp-Entry "jazz.class-dispatch-table" () 67 8 ("1" "jazz.class-level" "%%fx+")}
      {Lisp-Entry "jazz.class-core-method-alist" () 70 8 ("1" "jazz.class-dispatch-table" "%%fx+")}
      {Lisp-Entry "jazz.class-core-virtual-alist" () 73 8 ("1" "jazz.class-core-method-alist" "%%fx+")}
      {Lisp-Entry "jazz.class-core-virtual-names" () 76 8 ("1" "jazz.class-core-virtual-alist" "%%fx+")}
      {Lisp-Entry "jazz.class-core-vtable" () 79 8 ("1" "jazz.class-core-virtual-names" "%%fx+")}
      {Lisp-Entry "jazz.class-class-table" () 82 8 ("1" "jazz.class-core-vtable" "%%fx+")}
      {Lisp-Entry "jazz.class-interface-table" () 85 8 ("1" "jazz.class-class-table" "%%fx+")}
      {Lisp-Entry "jazz.class-size" () 89 8 ("1" "jazz.class-interface-table" "%%fx+")}
      {Lisp-Entry "%%get-category-name" () 93 20 ("category")}
      {Lisp-Entry "%%get-category-fields" () 97 20 ("category")}
      {Lisp-Entry "%%set-category-fields" () 101 20 ("fields" "category")}
      {Lisp-Entry "%%get-category-ancestors" () 105 20 ("category")}
      {Lisp-Entry "%%set-category-ancestors" () 109 20 ("ancestors" "category")}
      {Lisp-Entry "%%get-category-descendants" () 113 20 ("category")}
      {Lisp-Entry "%%set-category-descendants" () 117 20 ("ancestors" "category")}
      {Lisp-Entry "%%get-class-ascendant" () 121 20 ("class")}
      {Lisp-Entry "%%get-class-interfaces" () 125 20 ("class")}
      {Lisp-Entry "%%get-class-slots" () 129 20 ("class")}
      {Lisp-Entry "%%set-class-slots" () 133 20 ("slots" "class")}
      {Lisp-Entry "%%get-class-instance-size" () 137 20 ("class")}
      {Lisp-Entry "%%set-class-instance-size" () 141 20 ("size" "class")}
      {Lisp-Entry "%%get-class-level" () 145 20 ("class")}
      {Lisp-Entry "%%set-class-level" () 149 20 ("size" "class")}
      {Lisp-Entry "%%get-class-dispatch-table" () 153 20 ("class")}
      {Lisp-Entry "%%set-class-dispatch-table" () 157 20 ("vtable" "class")}
      {Lisp-Entry "%%get-class-core-method-alist" () 161 20 ("class")}
      {Lisp-Entry "%%set-class-core-method-alist" () 165 20 ("vtable" "class")}
      {Lisp-Entry "%%get-class-core-virtual-alist" () 169 20 ("class")}
      {Lisp-Entry "%%set-class-core-virtual-alist" () 173 20 ("vtable" "class")}
      {Lisp-Entry "%%get-class-core-virtual-names" () 177 20 ("class")}
      {Lisp-Entry "%%set-class-core-virtual-names" () 181 20 ("vtable" "class")}
      {Lisp-Entry "%%get-class-core-vtable" () 185 20 ("class")}
      {Lisp-Entry "%%set-class-core-vtable" () 189 20 ("vtable" "class")}
      {Lisp-Entry "%%get-class-class-table" () 193 20 ("class")}
      {Lisp-Entry "%%set-class-class-table" () 197 20 ("vtable" "class")}
      {Lisp-Entry "%%get-class-interface-table" () 201 20 ("class")}
      {Lisp-Entry "%%set-class-interface-table" () 205 20 ("vtable" "class")}
      {Lisp-Entry "%%get-object-class" () 209 20 ("object")}
      {Lisp-Entry "%%set-object-class" () 213 20 ("class" "object")}
      {Lisp-Entry "%%c-class-of" () 219 19 ("obj")}
      {Lisp-Entry "%%class-of" () 259 19 ("%%list" "jazz.generate-symbol" "%%symbol?" "jazz.i-class-of" "%%get-object-class" "%%object?" "if" "else" "%%c-class-of" "compile" "jazz.walk-for" "case" "symbol" "lambda" "expand" "let" "obj")}
      {Lisp-Entry "%%i-class-of-impl" () 275 19 ("jazz.class-of-native" "%%get-object-class" "%%object?" "if" "else" "%%c-class-of" "compile" "jazz.walk-for" "case" "var")}
      {Lisp-Entry "%%class-of-impl" () 284 19 ("jazz.error" "%%class-of" "or" "jazz.debug-user?" "if" "var")}
      {Lisp-Entry "%%class-of" () 291 19 ("%%list" "jazz.generate-symbol" "%%symbol?" "jazz.class-of-native" "%%get-object-class" "%%object?" "if" "symbol" "lambda" "expand" "let" "expr")}}})
"classes"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "syntax" "classes.scm"} {Time 128370249640000000L}
    {Lisp-Entry "core.library.syntax.classes" () 37 8 ()
      {Lisp-Entry "jazz.Walk-Binding" () 45 26 ("jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.walk-binding-lookup" ("jazz.Walk-Binding") 49 29 ("symbol")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Walk-Binding") 50 29 ("environment")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Walk-Binding") 51 29 ("arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-binding-call" ("jazz.Walk-Binding") 52 29 ("environment" "arguments")}
      {Lisp-Entry "jazz.emit-inlined-binding-call" ("jazz.Walk-Binding") 53 29 ("environment" "arguments")}
      {Lisp-Entry "jazz.walk-binding-assignable?" ("jazz.Walk-Binding") 54 29 ()}
      {Lisp-Entry "jazz.walk-binding-assigned" ("jazz.Walk-Binding") 55 29 ("assignment")}
      {Lisp-Entry "jazz.emit-binding-assignment" ("jazz.Walk-Binding") 56 29 ("environment" "value")}
      {Lisp-Entry "jazz.walk-binding-walkable?" ("jazz.Walk-Binding") 57 29 ()}
      {Lisp-Entry "jazz.walk-binding-walk-form" ("jazz.Walk-Binding") 58 29 ("form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-binding-expandable?" ("jazz.Walk-Binding") 59 29 ()}
      {Lisp-Entry "jazz.walk-binding-expand-form" ("jazz.Walk-Binding") 60 29 ("form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.Lexical-Binding" () 68 26 ("%%get-lexical-binding-type" "type" "%%get-lexical-binding-name" "name" "jazz.Object-Class" "jazz.Walk-Binding")}
      {Lisp-Entry "jazz.Declaration" () 78 26 ("%%set-declaration-locator" "%%get-declaration-locator" "locator" "%%set-declaration-children" "%%get-declaration-children" "children" "%%set-declaration-parent" "%%get-declaration-parent" "parent" "%%set-declaration-toplevel" "%%get-declaration-toplevel" "toplevel" "%%get-declaration-attributes" "attributes" "%%get-declaration-compatibility" "compatibility" "%%get-declaration-access" "access" "jazz.Object-Class" "type" "name" "jazz.Lexical-Binding")}
      {Lisp-Entry "jazz.resolve-declaration" ("jazz.Declaration") 88 29 ()}
      {Lisp-Entry "jazz.lookup-declaration" ("jazz.Declaration") 89 29 ("external?" "symbol")}
      {Lisp-Entry "jazz.get-declaration-references" ("jazz.Declaration") 90 29 ()}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Declaration") 91 29 ("environment")}
      {Lisp-Entry "jazz.expand-referenced-declaration" ("jazz.Declaration") 92 29 ()}
      {Lisp-Entry "jazz.fold-declaration" ("jazz.Declaration") 93 29 ("s" "k" "f")}
      {Lisp-Entry "jazz.Declaration-Reference" () 101 26 ("%%set-declaration-reference-declaration" "%%get-declaration-reference-declaration" "declaration" "%%get-declaration-reference-name" "name" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.resolve-reference" ("jazz.Declaration-Reference") 106 29 ("library-declaration")}
      {Lisp-Entry "jazz.Library-Reference" () 114 26 ("jazz.allocate-library-reference" "jazz.Object-Class" "declaration" "name" "jazz.Declaration-Reference")}
      {Lisp-Entry "jazz.Export-Reference" () 123 26 ("%%get-export-reference-library-reference" "library-reference" "jazz.allocate-export-reference" "jazz.Object-Class" "declaration" "name" "jazz.Declaration-Reference")}
      {Lisp-Entry "jazz.Autoload-Reference" () 132 26 ("jazz.allocate-autoload-reference" "jazz.Object-Class" "library-reference" "declaration" "name" "jazz.Export-Reference")}
      {Lisp-Entry "jazz.Module-Declaration" () 141 26 ("%%get-module-declaration-requires" "requires" "jazz.allocate-module-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Namespace-Declaration" () 150 26 ("%%set-namespace-declaration-body" "%%get-namespace-declaration-body" "body" "%%get-namespace-declaration-lookups" "lookups" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "%%get-access-lookup" () 155 20 ("access" "namespace-declaration")}
      {Lisp-Entry "jazz.Library-Declaration" () 164 26 ("%%set-library-declaration-autoloads" "%%get-library-declaration-autoloads" "autoloads" "%%set-library-declaration-references" "%%get-library-declaration-references" "references" "%%set-library-declaration-variables" "%%get-library-declaration-variables" "variables" "%%set-library-declaration-literals" "%%get-library-declaration-literals" "literals" "%%get-library-declaration-imports" "imports" "%%get-library-declaration-exports" "exports" "%%get-library-declaration-requires" "requires" "%%get-library-declaration-dialect" "dialect" "jazz.allocate-library-declaration" "jazz.Object-Class" "body" "lookups" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Namespace-Declaration")}
      {Lisp-Entry "jazz.Library-Invoice" () 180 26 ("%%get-library-invoice-rename" "rename" "%%get-library-invoice-prefix" "prefix" "%%get-library-invoice-except" "except" "%%get-library-invoice-only" "only" "%%get-library-invoice-version" "version" "%%get-library-invoice-phase" "phase" "%%get-library-invoice-library" "library" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Export-Invoice" () 195 26 ("%%get-export-invoice-autoload" "autoload" "jazz.allocate-export-invoice" "jazz.Object-Class" "rename" "prefix" "except" "only" "version" "phase" "library" "jazz.Library-Invoice")}
      {Lisp-Entry "jazz.Import-Invoice" () 204 26 ("jazz.allocate-import-invoice" "jazz.Object-Class" "rename" "prefix" "except" "only" "version" "phase" "library" "jazz.Library-Invoice")}
      {Lisp-Entry "jazz.Export-Declaration" () 213 26 ("%%get-export-declaration-symbol" "symbol" "jazz.allocate-export-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Autoload-Declaration" () 222 26 ("%%set-autoload-declaration-declaration" "%%get-autoload-declaration-declaration" "declaration" "%%get-autoload-declaration-exported-library" "exported-library" "%%get-autoload-declaration-library" "library" "jazz.allocate-autoload-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Macro-Declaration" () 233 26 ("%%set-macro-declaration-body" "%%get-macro-declaration-body" "body" "%%set-macro-declaration-signature" "%%get-macro-declaration-signature" "signature" "jazz.allocate-macro-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Syntax-Declaration" () 243 26 ("%%set-syntax-declaration-body" "%%get-syntax-declaration-body" "body" "%%set-syntax-declaration-signature" "%%get-syntax-declaration-signature" "signature" "jazz.allocate-syntax-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Void-Class" () 253 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Void" () 257 26 ("jazz.Void-Class" "jazz.Type")}
      {Lisp-Entry "jazz.Function-Type" () 266 26 ("%%get-function-type-return-type" "return-type" "jazz.allocate-function-type" "jazz.Class" "jazz.Type")}
      {Lisp-Entry "jazz.Any-Class" () 275 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Any" () 279 26 ("jazz.Class" "jazz.Type")}
      {Lisp-Entry "jazz.C-Type-Declaration" () 288 26 ("%%get-c-type-declaration-references" "references" "%%get-c-type-declaration-expansion" "expansion" "%%get-c-type-declaration-kind" "kind" "jazz.allocate-c-type-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.C-Definition-Declaration" () 299 26 ("%%set-c-definition-declaration-body" "%%get-c-definition-declaration-body" "body" "%%get-c-definition-declaration-scope" "scope" "%%get-c-definition-declaration-c-name" "c-name" "%%get-c-definition-declaration-result-type" "result-type" "%%get-c-definition-declaration-parameter-types" "parameter-types" "%%get-c-definition-declaration-signature" "signature" "jazz.allocate-c-definition-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Walker" () 313 26 ("%%set-walker-errors" "%%get-walker-errors" "errors" "%%set-walker-warnings" "%%get-walker-warnings" "warnings" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.walker-environment" ("jazz.Walker") 318 29 ()}
      {Lisp-Entry "jazz.walk-declaration" ("jazz.Walker") 319 29 ("form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.validate-access" ("jazz.Walker") 320 29 ("referenced-declaration" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-free-reference" ("jazz.Walker") 321 29 ("symbol" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-symbol-assignment" ("jazz.Walker") 322 29 ("value" "symbol" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-free-assignment" ("jazz.Walker") 323 29 ("symbol" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-symbol" ("jazz.Walker") 324 29 ("symbol" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-form" ("jazz.Walker") 325 29 ("form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.validate-arguments" ("jazz.Walker") 326 29 ("arguments" "signature" "declaration" "source-declaration" "resume")}
      {Lisp-Entry "jazz.Walk-Context" () 334 26 ("%%get-walk-context-pathname" "pathname" "%%get-walk-context-locator" "locator" "%%get-walk-context-policy" "policy" "jazz.allocate-walk-context" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Walk-Location" () 345 26 ("%%get-walk-location-declaration-locator" "declaration-locator" "%%get-walk-location-module-locator" "module-locator" "jazz.allocate-walk-location" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Walk-Error" () 355 26 ("%%get-walk-error-location" "location" "jazz.allocate-walk-error" "jazz.Object-Class" "message" "jazz.Error")}
      {Lisp-Entry "jazz.Unresolved-Error" () 364 26 ("%%get-unresolved-error-symbol" "symbol" "jazz.allocate-unresolved-error" "jazz.Object-Class" "location" "message" "jazz.Walk-Error")}
      {Lisp-Entry "jazz.Walk-Frame" () 373 26 ("%%get-walk-frame-bindings" "bindings" "jazz.allocate-walk-frame" "jazz.Object-Class" "jazz.Walk-Binding")}
      {Lisp-Entry "jazz.Signature" () 382 26 ("%%get-signature-rest" "rest" "%%get-signature-named" "named" "%%get-signature-optional" "optional" "%%get-signature-positional" "positional" "%%get-signature-mandatory" "mandatory" "jazz.allocate-signature" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Symbol-Binding" () 395 26 ("jazz.Object-Class" "type" "name" "jazz.Lexical-Binding")}
      {Lisp-Entry "jazz.Variable" () 404 26 ("%%set-variable-setters" "%%get-variable-setters" "setters" "jazz.allocate-variable" "jazz.Object-Class" "type" "name" "jazz.Symbol-Binding")}
      {Lisp-Entry "jazz.NextMethod-Variable" () 413 26 ("jazz.allocate-nextmethod-variable" "jazz.Object-Class" "setters" "type" "name" "jazz.Variable")}
      {Lisp-Entry "jazz.Parameter" () 422 26 ("jazz.allocate-parameter" "jazz.Object-Class" "setters" "type" "name" "jazz.Variable")}
      {Lisp-Entry "jazz.emit-parameter" ("jazz.Parameter") 426 29 ("environment")}
      {Lisp-Entry "jazz.Dynamic-Parameter" () 434 26 ("%%get-dynamic-parameter-class" "class" "jazz.allocate-dynamic-parameter" "jazz.Object-Class" "setters" "type" "name" "jazz.Parameter")}
      {Lisp-Entry "jazz.Optional-Parameter" () 443 26 ("%%set-optional-parameter-default" "%%get-optional-parameter-default" "default" "jazz.allocate-optional-parameter" "jazz.Object-Class" "setters" "type" "name" "jazz.Parameter")}
      {Lisp-Entry "jazz.Named-Parameter" () 452 26 ("%%set-named-parameter-default" "%%get-named-parameter-default" "default" "jazz.allocate-named-parameter" "jazz.Object-Class" "setters" "type" "name" "jazz.Parameter")}
      {Lisp-Entry "jazz.Rest-Parameter" () 461 26 ("jazz.allocate-rest-parameter" "jazz.Object-Class" "setters" "type" "name" "jazz.Parameter")}
      {Lisp-Entry "jazz.Self-Binding" () 470 26 ("jazz.allocate-self-binding" "jazz.Object-Class" "type" "name" "jazz.Lexical-Binding")}
      {Lisp-Entry "jazz.Macro-Symbol" () 479 26 ("%%get-macro-symbol-setter" "setter" "%%get-macro-symbol-getter" "getter" "jazz.allocate-macro-symbol" "jazz.Object-Class" "type" "name" "jazz.Symbol-Binding")}
      {Lisp-Entry "jazz.Form-Binding" () 489 26 ("jazz.Object-Class" "type" "name" "jazz.Lexical-Binding")}
      {Lisp-Entry "jazz.Special-Form" () 498 26 ("%%get-special-form-walk" "walk" "jazz.allocate-special-form" "jazz.Object-Class" "type" "name" "jazz.Form-Binding")}
      {Lisp-Entry "jazz.Macro-Form" () 507 26 ("%%get-macro-form-expander" "expander" "jazz.allocate-macro-form" "jazz.Object-Class" "type" "name" "jazz.Form-Binding")}
      {Lisp-Entry "jazz.Annotated-Variable" () 516 26 ("%%set-annotated-variable-type" "%%get-annotated-variable-type" "type" "%%get-annotated-variable-variable" "variable" "jazz.allocate-annotated-variable" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Annotated-Frame" () 526 26 ("%%get-annotated-frame-reset" "reset" "%%get-annotated-frame-variables" "variables" "jazz.allocate-annotated-frame" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.new-code" () 536 20 ("type" "form")}
      {Lisp-Entry "%%code-form" () 540 20 ("code")}
      {Lisp-Entry "%%code-type" () 543 20 ("code")}
      {Lisp-Entry "jazz.codes-forms" () 569 9 ("%%code-form" "code" "lambda" "map" "codes")}
      {Lisp-Entry "jazz.codes-types" () 575 9 ("%%code-type" "code" "lambda" "map" "codes")}
      {Lisp-Entry "jazz.Access" () 587 26 ("%%get-access-context" "context" "%%get-access-name" "name" "jazz.allocate-access" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Expression" () 597 26 ("%%get-expression-type" "type" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Expression") 601 29 ("environment")}
      {Lisp-Entry "jazz.emit-call" ("jazz.Expression") 602 29 ("environment" "arguments")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Expression") 603 29 ("s" "k" "f")}
      {Lisp-Entry "jazz.Constant" () 611 26 ("%%get-constant-expansion" "expansion" "jazz.allocate-constant" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Quasiquote" () 620 26 ("%%get-quasiquote-form" "form" "jazz.allocate-quasiquote" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Reference" () 629 26 ("%%get-reference-binding" "binding" "jazz.allocate-reference" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Assignment" () 638 26 ("%%get-assignment-value" "value" "%%get-assignment-binding" "binding" "jazz.allocate-assignment" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Lambda" () 648 26 ("%%get-lambda-body" "body" "%%get-lambda-signature" "signature" "jazz.allocate-lambda" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Let" () 658 26 ("%%get-let-body" "body" "%%get-let-bindings" "bindings" "jazz.allocate-let" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Named-Let" () 668 26 ("%%get-named-let-variable" "variable" "jazz.allocate-named-let" "jazz.Object-Class" "body" "bindings" "type" "jazz.Let")}
      {Lisp-Entry "jazz.Letstar" () 677 26 ("%%get-letstar-body" "body" "%%get-letstar-bindings" "bindings" "jazz.allocate-letstar" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Letrec" () 687 26 ("%%get-letrec-body" "body" "%%get-letrec-bindings" "bindings" "jazz.allocate-letrec" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Receive" () 697 26 ("%%get-receive-body" "body" "%%get-receive-expression" "expression" "%%get-receive-variables" "variables" "jazz.allocate-receive" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Body" () 708 26 ("%%get-body-expressions" "expressions" "%%get-body-internal-defines" "internal-defines" "jazz.allocate-body" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Internal-Define" () 718 26 ("%%get-internal-define-value" "value" "%%get-internal-define-variable" "variable" "jazz.allocate-internal-define" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Begin" () 728 26 ("%%get-begin-expressions" "expressions" "jazz.allocate-begin" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Call" () 737 26 ("%%get-call-arguments" "arguments" "%%get-call-operator" "operator" "jazz.allocate-call" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.If" () 747 26 ("%%get-if-no" "no" "%%get-if-yes" "yes" "%%get-if-test" "test" "jazz.allocate-if" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Cond" () 758 26 ("%%get-cond-clauses" "clauses" "jazz.allocate-cond" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Case" () 767 26 ("%%get-case-clauses" "clauses" "%%get-case-target" "target" "jazz.allocate-case" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.And" () 777 26 ("%%get-and-expressions" "expressions" "jazz.allocate-and" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Or" () 786 26 ("%%get-or-expressions" "expressions" "jazz.allocate-or" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.C-Include" () 795 26 ("%%get-c-include-name" "name" "jazz.allocate-c-include" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.C-Declare" () 804 26 ("%%get-c-declare-code" "code" "jazz.allocate-c-declare" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.C-Initialize" () 813 26 ("%%get-c-initialize-code" "code" "jazz.allocate-c-initialize" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.C-Function" () 822 26 ("%%get-c-function-expansion" "expansion" "jazz.allocate-c-function" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Time" () 831 26 ("%%get-time-expression" "expression" "jazz.allocate-time" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Core-Dialect" () 840 26 ("jazz.allocate-core-dialect" "jazz.Object-Class" "jazz.Dialect")}
      {Lisp-Entry "jazz.Core-Walker" () 849 26 ("jazz.allocate-core-walker" "jazz.Object-Class" "errors" "warnings" "jazz.Walker")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "scheme" "dialect" "classes.scm"} {Time 128370199780000000L}
    {Lisp-Entry "scheme.dialect.classes" () 37 8 ()
      {Lisp-Entry "jazz.Define-Declaration" () 45 26 ("%%set-define-declaration-value" "%%get-define-declaration-value" "value" "%%get-define-declaration-signature" "signature" "jazz.allocate-define-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Define-Macro-Declaration" () 55 26 ("%%set-define-macro-body" "%%get-define-macro-body" "body" "%%set-define-macro-signature" "%%get-define-macro-signature" "signature" "jazz.allocate-define-macro-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Scheme-Dialect" () 65 26 ("jazz.allocate-scheme-dialect" "jazz.Object-Class" "jazz.Dialect")}
      {Lisp-Entry "jazz.Scheme-Walker" () 74 26 ("jazz.allocate-scheme-walker" "jazz.Object-Class" "errors" "warnings" "jazz.Walker")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "syntax" "classes.scm"} {Time 128369370780000000L}
    {Lisp-Entry "core.class.syntax.classes" () 37 8 ()
      {Lisp-Entry "jazz.Object" () 45 26 ()}
      {Lisp-Entry "jazz.Type" () 54 26 ("jazz.Object")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Type") 58 29 ("object")}
      {Lisp-Entry "jazz.of-subtype?" ("jazz.Type") 59 29 ("class")}
      {Lisp-Entry "%%subtype?" () 62 20 ("type" "target")}
      {Lisp-Entry "%%subcategory?" () 66 20 ("category" "target")}
      {Lisp-Entry "%%subclass?" () 70 20 ("class" "target")}
      {Lisp-Entry "%%is?" () 74 20 ("type" "object")}
      {Lisp-Entry "%%is-not?" () 78 20 ("type" "object")}
      {Lisp-Entry "%%instance-of?" () 82 20 ("class" "object")}
      {Lisp-Entry "jazz.Category" () 91 26 ("descendants" "ancestors" "fields" "name" "jazz.Type")}
      {Lisp-Entry "jazz.Class" () 103 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "jazz.allocate-class" "descendants" "ancestors" "fields" "name" "jazz.Category")}
      {Lisp-Entry "jazz.Object-Class" () 123 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Boolean-Class" () 132 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Char-Class" () 133 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Numeric-Class" () 134 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Number-Class" () 135 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Numeric-Class")}
      {Lisp-Entry "jazz.Complex-Class" () 136 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Number-Class")}
      {Lisp-Entry "jazz.Real-Class" () 137 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Complex-Class")}
      {Lisp-Entry "jazz.Rational-Class" () 138 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Real-Class")}
      {Lisp-Entry "jazz.Integer-Class" () 139 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Rational-Class")}
      {Lisp-Entry "jazz.Fixnum-Class" () 140 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Integer-Class")}
      {Lisp-Entry "jazz.Flonum-Class" () 141 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Real-Class")}
      {Lisp-Entry "jazz.Sequence-Class" () 142 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.List-Class" () 143 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Sequence-Class")}
      {Lisp-Entry "jazz.Null-Class" () 144 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.List-Class")}
      {Lisp-Entry "jazz.Pair-Class" () 145 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.List-Class")}
      {Lisp-Entry "jazz.String-Class" () 146 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Sequence-Class")}
      {Lisp-Entry "jazz.Vector-Class" () 147 26 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Sequence-Class")}
      {Lisp-Entry "jazz.Port-Class" () 148 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Procedure-Class" () 149 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Foreign-Class" () 150 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Symbol-Class" () 151 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Keyword-Class" () 152 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Hashtable-Class" () 153 26 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Boolean" () 156 26 ("jazz.Boolean-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Char" () 157 26 ("jazz.Char-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Numeric" () 158 26 ("jazz.Numeric-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Number" () 159 26 ("jazz.Number-Class" "jazz.Numeric")}
      {Lisp-Entry "jazz.Complex" () 160 26 ("jazz.Complex-Class" "jazz.Number")}
      {Lisp-Entry "jazz.Real" () 161 26 ("jazz.Real-Class" "jazz.Complex")}
      {Lisp-Entry "jazz.Rational" () 162 26 ("jazz.Rational-Class" "jazz.Real")}
      {Lisp-Entry "jazz.Integer" () 163 26 ("jazz.Integer-Class" "jazz.Rational")}
      {Lisp-Entry "jazz.Fixnum" () 164 26 ("jazz.Fixnum-Class" "jazz.Integer")}
      {Lisp-Entry "jazz.Flonum" () 165 26 ("jazz.Flonum-Class" "jazz.Real")}
      {Lisp-Entry "jazz.Sequence" () 166 26 ("jazz.Sequence-Class" "jazz.Object")}
      {Lisp-Entry "jazz.List" () 167 26 ("jazz.List-Class" "jazz.Sequence")}
      {Lisp-Entry "jazz.Null" () 168 26 ("jazz.Null-Class" "jazz.List")}
      {Lisp-Entry "jazz.Pair" () 169 26 ("jazz.Pair-Class" "jazz.List")}
      {Lisp-Entry "jazz.String" () 170 26 ("jazz.String-Class" "jazz.Sequence")}
      {Lisp-Entry "jazz.Vector" () 171 26 ("jazz.Vector-Class" "jazz.Sequence")}
      {Lisp-Entry "jazz.Port" () 172 26 ("jazz.Port-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Procedure" () 173 26 ("jazz.Procedure-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Foreign" () 174 26 ("jazz.Foreign-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Symbol" () 175 26 ("jazz.Symbol-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Keyword" () 176 26 ("jazz.Keyword-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Hashtable" () 177 26 ("jazz.Hashtable-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Interface" () 185 26 ("rank" "ascendants" "jazz.allocate-interface" "jazz.Object-Class" "descendants" "ancestors" "fields" "name" "jazz.Category")}
      {Lisp-Entry "jazz.Field" () 195 26 ("%%get-field-name" "name" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "%%get-category-field" () 199 20 ("field-name" "category")}
      {Lisp-Entry "%%set-category-field" () 203 20 ("field" "field-name" "category")}
      {Lisp-Entry "jazz.Slot" () 212 26 ("%%get-slot-initialize" "initialize" "%%get-slot-rank" "rank" "jazz.allocate-slot" "jazz.Object-Class" "name" "jazz.Field")}
      {Lisp-Entry "jazz.Property" () 222 26 ("%%get-property-setter" "setter" "%%get-property-getter" "getter" "jazz.allocate-property" "jazz.Object-class" "initialize" "rank" "name" "jazz.Slot")}
      {Lisp-Entry "jazz.Method" () 232 26 ("%%get-method-implementation" "implementation" "%%get-method-propagation" "propagation" "jazz.allocate-method" "jazz.Object-Class" "name" "jazz.Field")}
      {Lisp-Entry "jazz.Nil" () 242 26 ("jazz.allocate-nil" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Queue" () 251 26 ("%%set-queue-current" "%%get-queue-current" "current" "%%set-queue-last-anchor" "%%get-queue-last-anchor" "last-anchor" "%%set-queue-last-list" "%%get-queue-last-list" "last-list" "%%set-queue-list" "%%get-queue-list" "list" "jazz.allocate-queue" "jazz.Object-Class" "jazz.Object")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "exception" "syntax" "classes.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.exception.syntax.classes" () 37 8 ()
      {Lisp-Entry "jazz.Exception" () 40 26 ("jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.present-exception" ("jazz.Exception") 44 29 ()}
      {Lisp-Entry "jazz.Error" () 47 26 ("%%get-error-message" "message" "jazz.allocate-error" "jazz.Object-Class" "jazz.Exception")}}})
"coall-macro"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "coall-macro.scm"} {Time 128366793860000000L}
    {Lisp-Entry "c-pass" () 6 20 ("begin" "c" "copass" "eq?" "if" "body")}
    {Lisp-Entry "s-pass" () 12 20 ("begin" "s" "copass" "eq?" "if" "body")}
    {Lisp-Entry "c-pass-define" () 18 20 ("begin" "define" "c" "copass" "eq?" "if" "body" "name")}
    {Lisp-Entry "s-pass-define" () 25 20 ("begin" "define" "s" "copass" "eq?" "if" "body" "name")}})
"codebug"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "codebug.scm"} {Time 128366793860000000L}})
"coexternal"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "coexternal.scm"} {Time 128366793860000000L}
    {Lisp-Entry "generate-in" () 3 9 ("number->string" "string-append" "string->symbol" "n")}
    {Lisp-Entry "generate-p" () 7 9 ("number->string" "string-append" "string->symbol" "n")}
    {Lisp-Entry "coparam-direction" () 11 9 ("car" "coparam")}
    {Lisp-Entry "coparam-compiled-type" () 15 9 ("cadr" "coparam")}
    {Lisp-Entry "coparam-type" () 19 9 ("coparam")}
    {Lisp-Entry "remove-null" () 26 9 ("cons" "else" "cdr" "remove-null" "car" "null?" "cond" "list")}
    {Lisp-Entry "coexternal-input-parameter" () 40 9 ("generate-in" "coparam-direction" "out" "eq?" "if" "n" "coparam")}
    {Lisp-Entry "coexternal-binding" () 46 9 ("out" "in-out" "in" "case" "if" "inner" "find-type-options" "type-generate-foreign?" "foreign?" "-encode" "encoder" "-enref" "symbol-append" "enreffer" "coparam-direction" "direction" "coparam-type" "type" "generate-p" "p-name" "generate-in" "in-name" "let*" "n" "coparam")}
    {Lisp-Entry "coexternal-input-cleanup" () 66 9 ("find-type-options" "type-generate-foreign?" "foreign?" "-free" "symbol-append" "freer" "coparam-type" "type" "generate-p" "p-name" "let*" "coparam-direction" "in" "eq?" "not" "if" "n" "coparam")}
    {Lisp-Entry "coexternal-output-result" () 78 9 ("find-type-options" "type-generate-foreign?" "foreign?" "-decode" "decoder" "-deref" "symbol-append" "dereffer" "coparam-type" "type" "generate-p" "p-name" "let*" "coparam-direction" "in" "eq?" "if" "n" "coparam")}
    {Lisp-Entry "generate-coexternal" () 91 9 ("0" "list" "=" "begin" "validate-hresult" "if" "coexternal-input-cleanup" "generate-p" "%%" "symbol-append" "res" "coexternal-binding" "coexternal-input-parameter" "coptr" "define" "coexternal-output-result" "remove-null" "output-result" "map" "lambda" "proc" "length" "+" "1" "naturals" "count" "let*" "VT_HRESULT" "eq?" "hresult?" "cdr" "coparams" "car" "function" "let" "signature" "result-type")}
    {Lisp-Entry "compiled-coparam-prototype" () 119 9 ("string-append" "type-ctype" "type-pure-ctype" "value" "eq?" "if" "used-ctype" "type-pass-by" "pass-by" "find-type-options" "options" "coparam-compiled-type" "cotype" "let*" "coparam")}
    {Lisp-Entry "compiled-coparam-argument" () 129 9 ("2" "+" "number->string" "string-append" "value" "eq?" "if" "deref-string" "type-pass-by" "pass-by" "find-type-options" "options" "coparam-compiled-type" "cotype" "let*" "n" "coparam")}
    {Lisp-Entry "generate-compiled-coexternal" () 137 9 ("length" "0" "naturals" "compiled-coparam-argument" "number->string" "compiled-coparam-prototype" "apply" "find-type-options" "type-ctype" "string-append" "coparam-compiled-type" "map" "VT_UNKNOWN" "cons" "c-lambda" "%%" "symbol-append" "define" "cdr" "coparams" "car" "function" "let" "signature" "result-type" "offset")}
    {Lisp-Entry "coexternal-macro" () 160 9 ("begin" "else" "generate-coexternal" "s" "generate-compiled-coexternal" "c" "copass" "case" "signature" "result-type" "offset")}
    {Lisp-Entry "cemt" () 170 9 ("Close" "4" "OpenDatabase" "3" "VT_VARIANT" "get-Item" "2" "VT_UNKNOWN" "get-Workspaces" "1" "out" "VT_PTR" "in-out" "VT_BSTR" "in" "foo-VT_BSTR" "VT_HRESULT" "coexternal-macro" "0" "case" "n")}})
"coexternal-macro"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "coexternal-macro.scm"} {Time 128366793860000000L}
    {Lisp-Entry "coexternal" () 0 20 ("coexternal-macro" "signature" "result-type" "offset")}})
"colors"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "literals" "colors.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.literals.colors" () 37 9 ("Slide-Bullet" "Slide-Title" "Hyperlink" "Unfocused-Selected-Text" "registered-color" "Focused-Selected-Text" "Unfocused-Selection" "Uneditable-Border" "Entry-Border" "Outline-Border" "Group-Border" "Light-Background" "Draw-Edge-Light" "Draw-Edge-Medium" "Draw-Edge-Dark" "Focused-Selection" "Active-Caption" "Tooltip" "Dark" "Medium" "Light" "Dark-Purple" "Purple" "Light-Purple" "Dark-Blue" "Blue" "Light-Blue" "Dark-Green" "Green" "Light-Green" "Dark-Yellow" "Yellow" "Light-Yellow" "Dark-Orange" "Ochre" "Orange" "Light-Orange" "Dark-Red" "Red" "Light-Red" "Text-Gray" "Dark-Gray" "Gray" "Light-Gray" "White" "blue:" "green:" "0" "red:" "name:" "Color" "new" "Black" "register-color" "jazz")}})
"com.ibm.mq.MQMessage"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "mq" "com.ibm.mq.MQMessage.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.mq.com.ibm.mq.MQMessage" () 37 9 ("jazz")
      {Lisp-Entry "com.ibm.mq.MQMessage" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "<init>" () 46 11 ()}
        {Lisp-Entry "<init>" () 47 43 ()}}}})
"com.ibm.mq.MQQueue"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "mq" "com.ibm.mq.MQQueue.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.mq.com.ibm.mq.MQQueue" () 37 9 ("jazz")
      {Lisp-Entry "com.ibm.mq.MQQueue" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "<init>" () 46 11 ()}
        {Lisp-Entry "<init>" () 47 43 ()}}}})
"com.ibm.mq.MQQueueManager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "library" "mq" "com.ibm.mq.MQQueueManager.fusion"} {Time 128366795520000000L}
    {Lisp-Entry "jazz.library.mq.com.ibm.mq.MQQueueManager" () 37 9 ("jazz")
      {Lisp-Entry "com.ibm.mq.MQQueueManager" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "<init>" () 46 11 ()}
        {Lisp-Entry "<init>" () 47 43 ()}}}})
"common"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "common.scm"} {Time 128355726660000000L}
    {Lisp-Entry "test.performance.common" () 0 8 ("W" "Z" "X" "jazz.encapsulate-class" "separate" "run-time-bindings" "extended-bindings" "safe" "not" "standard-bindings" "block" "declare")
      {Lisp-Entry "ff" () 11 9 ("1" "%%fx-" "ff" "%%pair?" "begin" "0" "%%fx>" "if" "n")}
      {Lisp-Entry "gg" () 24 9 ("1" "%%fx-" "gg" "%%pair?" "begin" "0" "%%fx>" "if" "n")}
      {Lisp-Entry "f-module-block/standard/not-safe" () 42 9 ("1" "%%fx-" "g-module-block/standard/not-safe" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "g-module-block/standard/not-safe" () 48 9 ("1" "%%fx-" "f-module-block/standard/not-safe" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "f-module-block/runtime/safe" () 66 9 ("1" "%%fx-" "g-module-block/runtime/safe" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "g-module-block/runtime/safe" () 72 9 ("1" "%%fx-" "f-module-block/runtime/safe" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "f-module-separate/runtime/safe" () 90 9 ("1" "%%fx-" "g-module-separate/runtime/safe" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "g-module-separate/runtime/safe" () 96 9 ("1" "%%fx-" "f-module-separate/runtime/safe" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "f-module-block/runtime/notsafe" () 114 9 ("1" "%%fx-" "g-module-block/runtime/notsafe" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "g-module-block/runtime/notsafe" () 120 9 ("1" "%%fx-" "f-module-block/runtime/notsafe" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "f-module" () 137 9 ("1" "%%fx-" "g-module" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "g-module" () 143 9 ("1" "%%fx-" "f-module" "0" "%%fx=" "if" "n" "s")}
      {Lisp-Entry "X" () 160 26 ("allocate-x" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "X" () 163 19 ("jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "new-x" () 169 9 ("X" "allocate-x")}
      {Lisp-Entry "f-generic" ("X") 173 22 ("n")}
      {Lisp-Entry "f-generic" ("X") 175 23 ("1" "%%fx-" "x" "g-generic" "0" "%%fx=" "if" "n")}
      {Lisp-Entry "g-generic" ("X") 181 22 ("n")}
      {Lisp-Entry "g-generic" ("X") 183 23 ("1" "%%fx-" "x" "f-generic" "0" "%%fx=" "if" "n")}
      {Lisp-Entry "Z" () 194 19 ("jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "f-vtable" ("Z") 198 22 ("n")}
      {Lisp-Entry "g-vtable" ("Z") 199 22 ("n")}
      {Lisp-Entry "new-z" () 202 9 ("Z" "allocate-z")}
      {Lisp-Entry "f-vtable" ("Z") 206 21 ("1" "%%fx-" "z" "g-vtable" "0" "%%fx=" "if" "n")}
      {Lisp-Entry "g-vtable" ("Z") 212 21 ("1" "%%fx-" "z" "f-vtable" "0" "%%fx=" "if" "n")}
      {Lisp-Entry "W" () 221 19 ("jazz.Object-Class" "Z")}
      {Lisp-Entry "f-vtable" ("W") 225 21 ("n")}
      {Lisp-Entry "h" ("W") 229 22 ()}
      {Lisp-Entry "h" ("W") 232 21 ()}}})
"compile"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "compile.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.base.runtime.compile" () 37 8 ()
      {Lisp-Entry "jazz.compile-file" () 42 13 ("compile-file" "apply" "car" "null?" "if" "options" "let" "rest" "filename")}}})
"component"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "component.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "test.component" () 0 9 ("test.component" "C" "register-autoload" "jazz")
      {Lisp-Entry "C" () 9 7 ("Component")
        {Lisp-Entry "x" () 11 12 ("generate" "accessors" "2")}
        {Lisp-Entry "title" () 12 12 ()}
        {Lisp-Entry "position" () 13 12 ()}
        {Lisp-Entry "print" () 15 11 ("position" "title" "x" "format" "function" "self" "print-unreadable" "detail" "output")}}
      {Lisp-Entry "A" () 21 7 ("Point" "position:" "title:" "1" "x:" "c" "name:" "Component")}
      {Lisp-Entry "B" () 28 7 ("3" "7" "e" "d" "9" "5" "x:" "c" "name:" "A")}}})
"config"
 ({Lisp-File-Entry {File dev "jazz" "kernel" "config.scm"} {Time 128369605100000000L}
    {Lisp-Entry "jazz.load-verbose?" () 42 8 ()}
    {Lisp-Entry "jazz.parse-verbose?" () 45 8 ()}
    {Lisp-Entry "jazz.done-verbose?" () 48 8 ()}
    {Lisp-Entry "jazz.delay-reporting?" () 58 8 ()}
    {Lisp-Entry "jazz.warnings?" () 62 8 ()}
    {Lisp-Entry "jazz.use-print?" () 72 8 ()}
    {Lisp-Entry "jazz.debug-print?" () 76 8 ()}
    {Lisp-Entry "jazz.compile-options" () 87 12 ()}
    {Lisp-Entry "jazz.compile-options" () 90 12 ()}
    {Lisp-Entry "jazz.compile-options" () 93 12 ()}
    {Lisp-Entry "jazz.debug-types" () 102 8 ()}
    {Lisp-Entry "jazz.run-loop?" () 111 8 ()}})
"continuation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "continuation.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.core.continuation" () 37 8 ()
      {Lisp-Entry "jazz.continuation-capture" () 42 13 ("##continuation-capture" "proc")}
      {Lisp-Entry "jazz.continuation-graft" () 46 13 ("##continuation-graft" "thunk" "cont")}
      {Lisp-Entry "jazz.continuation-return" () 50 13 ("##continuation-return" "result" "cont")}}})
"coruntime"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "coruntime.scm"} {Time 128366793860000000L}
    {Lisp-Entry "naturals" () 0 9 ("1" "+" "naturals" "cons" "else" "=" "error" ">" "cond" "y" "x")}
    {Lisp-Entry "zero-fill" () 6 9 ("-" "make-string" "string-append" ">" "if" "string-length" "len" "let" "n" "str")}
    {Lisp-Entry "last-hresult" () 13 8 ("0")}
    {Lisp-Entry "validate-hresult" () 14 9 ("number->string" "string-append" "else" "error" "0" "case" "hresult")}
    {Lisp-Entry "COINIT_APARTMENTTHREADED" () 37 8 ("2")}
    {Lisp-Entry "CLSCTX_SERVER" () 38 8 ("4" "1" "+")}
    {Lisp-Entry "CoInitializeEx" () 41 9 ("%%CoInitializeEx" "validate-hresult" "flags" "n/a")}
    {Lisp-Entry "CoCreateInstance" () 45 9 ("VT_UNKNOWN-deref" "validate-hresult" "GUID-free" "CLSCTX_SERVER" "%%CoCreateInstance" "res" "VT_UNKNOWN-enref" "coptr*" "interface-guid" "GUID-encode" "class-guid" "let" "interface" "class")}})
"coruntime-c"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "coruntime-c.scm"} {Time 128366793860000000L}
    {Lisp-Entry "LoadLibrary" () 11 8 ("HANDLE" "wchar_t-string" "c-lambda")}
    {Lisp-Entry "FreeLibrary" () 13 8 ("void" "HANDLE" "c-lambda")}
    {Lisp-Entry "%%CoInitializeEx" () 22 8 ("HRESULT" "DWORD" "VOID*" "c-lambda")}
    {Lisp-Entry "%%CoCreateInstance" () 26 8 ("HRESULT" "VT_PTR" "DWORD" "VT_UNKNOWN" "GUID" "c-lambda")}})
"costruct"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "costruct.scm"} {Time 128366793860000000L}
    {Lisp-Entry "s-define-if" () 3 20 ("body" "test" "name")}
    {Lisp-Entry "c-define-if" () 10 20 ("body" "test" "name")}
    {Lisp-Entry "generate-member-accessors" () 17 9 ("MEMBER-size" "MEMBER-ref" "MEMBER-set!" "MEMBER-get" "list" "proc" "caddr" "cddr" "null?" "if" "subsize" "cadr" "subname" "car" "subtype" "let" "declaration" "lambda" "map" "append" "apply" "members" "type")}
    {Lisp-Entry "costruct-macro" () 63 9 ("generate-member-accessors" "append" "cotype" "begin" "generate-foreign?:" "generate-foreign-default" "symbol->string" "list" "ctype:" "memq" "if" "ctype-default" "let" "members" "options" "type")}
    {Lisp-Entry "csmt" () 75 9 ("8" "Data4" "BYTE" "Data3" "Data2" "WORD" "Data1" "DWORD" "ctype:" "GUID" "costruct-macro")}})
"costruct-macro"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "costruct-macro.scm"} {Time 128366793860000000L}
    {Lisp-Entry "costruct" () 0 20 ("costruct-macro" "members" "options" "type")}})
"costructs"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "costructs.scm"} {Time 128366793860000000L}})
"cotest"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "cotest.scm"} {Time 128366793860000000L}
    {Lisp-Entry "zz0?" () 0 8 ()}
    {Lisp-Entry "z0" () 1 9 ("set!" "COINIT_APARTMENTTHREADED" "CoInitializeEx" "LoadLibrary" "begin" "zz0?" "if")}
    {Lisp-Entry "zz1" () 10 8 ()}
    {Lisp-Entry "z1" () 11 9 ("error" "DAO-DBEngine-interface" "DAO-DBEngine-class" "CoCreateInstance" "zz1" "set!" "zz0?" "if")}
    {Lisp-Entry "zz2" () 18 8 ()}
    {Lisp-Entry "z2" () 19 9 ("error" "get-Workspaces" "zz2" "set!" "zz1" "if")}
    {Lisp-Entry "zz3" () 26 8 ()}
    {Lisp-Entry "z3" () 27 9 ("error" "0" "car" "get-Item" "zz3" "set!" "zz2" "if")}
    {Lisp-Entry "zz4" () 34 8 ()}
    {Lisp-Entry "z4" () 35 9 ("error" "0" "car" "OpenDatabase" "zz4" "set!" "zz3" "if")}
    {Lisp-Entry "z9" () 42 9 ("zz1" "zz2" "zz3" "set!" "CoRelease" "begin" "car" "Close" "zz4" "if")}
    {Lisp-Entry "get-Workspaces" () 54 9 ("VT_UNKNOWN-deref" "list" "validate-hresult" "%%get-Workspaces" "res" "VT_UNKNOWN-enref" "p1" "let" "coptr")}
    {Lisp-Entry "get-Item" () 61 9 ("VT_UNKNOWN-deref" "list" "VT_VARIANT-free" "validate-hresult" "%%get-Item" "res" "VT_UNKNOWN-enref" "p2" "VT_VARIANT-encode" "p1" "let" "in1" "coptr")}
    {Lisp-Entry "OpenDatabase" () 70 9 ("VT_UNKNOWN-deref" "list" "VT_VARIANT-free" "VT_BSTR-free" "validate-hresult" "%%OpenDatabase" "res" "VT_UNKNOWN-enref" "p5" "p4" "p3" "VT_VARIANT-encode" "p2" "VT_BSTR-encode" "p1" "let" "in4" "in3" "in2" "in1" "coptr")}
    {Lisp-Entry "Close" () 85 9 ("list" "validate-hresult" "%%Close" "res" "let" "coptr")}})
"cotype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "cotype.scm"} {Time 128366793860000000L}
    {Lisp-Entry "s-define-if" () 3 20 ("body" "extra" "name")}
    {Lisp-Entry "c-define-if" () 11 20 ("body" "extra" "name")}
    {Lisp-Entry "cotype-cast" () 19 9 ("ctype-string" "stype")}
    {Lisp-Entry "generate-declarative-type-options" () 23 9 ("TYPE+-declare" "TYPE*-declare" "TYPE-declare" "list" "proc" "lambda" "map" "options")}
    {Lisp-Entry "generate-imperative-type-options" () 29 9 ("TYPE+-ref" "TYPE+-set!" "TYPE+-get" "TYPE+-free" "TYPE+-alloc" "TYPE+-cast" "TYPE-deref" "TYPE-enref" "TYPE*-set!" "TYPE*-get" "TYPE*-free" "TYPE*-alloc" "TYPE*-cast" "TYPE-decode" "TYPE-encode" "TYPE-set!" "TYPE-get" "TYPE-free" "TYPE-alloc" "TYPE-cast" "TYPE-sizeof" "TYPE-register" "list" "proc" "lambda" "map" "options")}
    {Lisp-Entry "TYPE+-get" () 182 9 ("begin" "else" "n" "array" "lambda" "-get" "getter" "+-ref" "reffer+" "not" "s" "unsigned-int" "c-lambda" "define" "type-stype+" "stype+" "let" "type-native?" "c" "copass" "eq?" "type-generate-array?" "and" "cond" "+-get" "symbol-append" "getter+" "car" "type" "let*" "options")}
    {Lisp-Entry "TYPE+-set!" () 199 9 ("begin" "else" "data" "n" "array" "lambda" "-set!" "setter" "+-ref" "reffer+" "not" "s" "void" "unsigned-int" "c-lambda" "define" "type-stype+" "stype+" "let" "type-native?" "c" "copass" "eq?" "type-generate-array?" "and" "cond" "+-set!" "symbol-append" "setter+" "car" "type" "let*" "options")}
    {Lisp-Entry "cotype-macro" () 227 9 ("generate-imperative-type-options" "generate-declarative-type-options" "not" "if" "begin" "options" "add-type-options" "find-type-options" "previously-declared-options" "let" "base-options" "type")}
    {Lisp-Entry "codeclare-macro" () 239 9 ()}})
"cotype-macro"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "cotype-macro.scm"} {Time 128366793860000000L}
    {Lisp-Entry "cotype" () 0 20 ("cotype-macro" "options" "type")}
    {Lisp-Entry "codeclare" () 4 20 ("codeclare-macro")}})
"cotypes"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "cotypes.scm"} {Time 128366793880000000L}})
"coutils"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "coutils.scm"} {Time 128366793880000000L}
    {Lisp-Entry "symbol-append" () 0 9 ("symbol->string" "map" "string-append" "apply" "string->symbol" "rest")}
    {Lisp-Entry "keyword-value" () 4 9 ("cadr" "if" "memq" "found" "let" "default" "list" "keyword")}})
"d"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "test" "d.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.test.d" () 0 9 ("test")
      {Lisp-Entry "-" () 2 8 ()}
      {Lisp-Entry "/" () 3 8 ()}}})
"dBase-Data-Source"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Data-Source.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Data-Source" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Data-Source" () 45 7 ("Data-Source")
        {Lisp-Entry "directory" () 48 12 ("generate" "accessors")}
        {Lisp-Entry "dsn" () 49 12 ("generate" "accessors")}
        {Lisp-Entry "external-name" () 53 16 ("dbase" "rest")}
        {Lisp-Entry "new-inventory" () 62 11 ("directory" "dBase-Inventory" "new" "false" "read-only?" "read-only?:" "connection")}
        {Lisp-Entry "new-connection" () 71 11 ("self" "ADO-Connection" "new")}
        {Lisp-Entry "get-connection-string" () 75 11 ("directory" "parse" "format" "dsn" "if")}
        {Lisp-Entry "get-connection-properties" () 83 11 ("directory" "directory:" "list")}
        {Lisp-Entry "present" () 92 11 ("directory" "get-name" "format" "dsn" "if")}
        {Lisp-Entry "present-detailed" () 98 11 ("directory" "get-name" "format" ":bulleted" "list")}
        {Lisp-Entry "get-class-presentation" () 110 16 ()}
        {Lisp-Entry "property-presentation" () 115 16 ("nextmethod" "else" "dsn" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-row-instance" () 122 11 ("nextmethod" "else" "true" "nullable?:" "String-Row" "dsn" "Directory-Row" "new" "directory" "field-name" "case" "property")}
        {Lisp-Entry "get-categorized-properties" () 129 11 ("directory" "dsn" "class-info")}}}})
"dBase-Datatype"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Datatype.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Datatype" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Datatype" () 44 7 ("Datatype")
        {Lisp-Entry "get-systypes" () 47 16 ("0" "8" "1" "Systype")}}}})
"dBase-Inventory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Inventory.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Inventory" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Inventory" () 43 7 ("Inventory")
        {Lisp-Entry "engine" () 46 8 ()}
        {Lisp-Entry "database" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "type-connection-string" "parse" "OpenDatabase" "database" "0" "get-Item" "workspace" "get-Workspaces" "workspaces" "with-closed" "DAO.DBEngine" "cocreate" "engine" "set!" "nextmethod" "false" "read-only?" "read-only?:" "pathname" "connection")}
        {Lisp-Entry "destroy" () 59 11 ("nextmethod" "corelease" "engine" "cointerface-refcount" "***" "debug" "database" "Close")}
        {Lisp-Entry "type-connection-string" () 75 11 ()}
        {Lisp-Entry "get-database-name" () 79 18 ("database" "get-Name")}
        {Lisp-Entry "get-tables" () 88 11 ("get-Item" "self" "dBase-Inventory-Table" "new" "collect" "get-Count" "below" "0" "from" "n" "for" "loop" "database" "get-TableDefs" "tables" "with-closed")}
        {Lisp-Entry "get-table" () 94 11 ("get-Item" "self" "dBase-Inventory-Table" "new" "database" "get-TableDefs" "tables" "with-closed" "name")}
        {Lisp-Entry "create-table" () 99 11 ("database" "CreateTableDef" "self" "dBase-Inventory-Table" "new" "name")}
        {Lisp-Entry "append-table" () 103 11 ("get-handle" "Append" "database" "get-TableDefs" "tabledefs" "with-closed" "table")}
        {Lisp-Entry "remove-table" () 108 11 ("Delete" "database" "get-TableDefs" "tabledefs" "with-closed" "name")}
        {Lisp-Entry "get-relations" () 118 11 ()}}}})
"dBase-Inventory-Column"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Inventory-Column.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Inventory-Column" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Inventory-Column" () 43 7 ("DAO" "COM" "System" "Utilities" "Inventory-Column")
        {Lisp-Entry "handle" () 46 8 ()}
        {Lisp-Entry "internal-type" () 47 8 ()}
        {Lisp-Entry "scale" () 48 8 ("0")}
        {Lisp-Entry "precision" () 49 8 ("0")}
        {Lisp-Entry "initialize" () 52 11 ("destroy-mandatory" "handle~self" "precision~self" "scale~self" "internal-type~self" "set!" "nextmethod" "handle" "precision" "scale" "internal-type" "index-column?" "parent" "inventory")}
        {Lisp-Entry "destroy" () 61 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 71 18 ("handle")}
        {Lisp-Entry "get-datatype" () 75 11 ("get-size" "get-type" "dBase-Datatype" "new-datatype")}
        {Lisp-Entry "get-type" () 79 11 ("error" "else" "2" "handle" "get-Type" "DAO.DataTypeEnum" "value->name" "symbol->string" "subseq" "null?" "internal-type" "=" "cond")}
        {Lisp-Entry "get-size" () 87 11 ("handle" "get-Size")}
        {Lisp-Entry "set-datatype" () 91 11 ("when" "put-Size" "append" "string->symbol" "DAO.DataTypeEnum" "value->name" "handle" "put-Type" "precision~self" "scale~self" "internal-type~self" "set!" "get-title" "parent" "add-pending-column" "7" "arbitrary-text-size" "let" "if" "else" "=" "cond" "internal-type" "get-size" "size" "get-name" "name" "let*" "precision" "0" "scale" "datatype")}
        {Lisp-Entry "set-size" () 113 11 ("size")}
        {Lisp-Entry "get-scale" () 117 11 ("scale")}
        {Lisp-Entry "get-precision" () 121 11 ("precision")}
        {Lisp-Entry "get-ordinal-position" () 125 11 ("handle" "get-OrdinalPosition")}
        {Lisp-Entry "get-title" () 129 11 ("handle" "get-Name")}
        {Lisp-Entry "get-indexes" () 133 11 ("handle" "get-Indexes")}}}})
"dBase-Inventory-Index"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Inventory-Index.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Inventory-Index" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Inventory-Index" () 43 7 ("Inventory-Index")
        {Lisp-Entry "handle" () 46 8 ()}
        {Lisp-Entry "fields" () 47 8 ()}
        {Lisp-Entry "initialize" () 50 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 56 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 66 18 ("handle")}
        {Lisp-Entry "get-title" () 70 11 ("handle" "get-Name")}
        {Lisp-Entry "get-fields" () 74 11 ("get-effective-fields" "fields" "either")}
        {Lisp-Entry "get-effective-fields" () 78 11 ("get-Count" "0" "naturals" "DAO._Field" "true" "self" "inventory" "Access-Inventory-Column" "new" "get-Item" "index-field" "n" "dynamic" "function" "map" "DAO.IndexFields" "coquery" "index-fields" "handle" "get-Fields" "fields" "with-closed")}
        {Lisp-Entry "set-fields/orders" () 87 18 ("Append" "DAO.IndexFields" "coquery" "index-fields" "get-Fields" "fields" "DAO.dbDescending" "put-Attributes" "descending" "eq?" "when" "handle" "CreateField" "field" "with-closed" "cadr" "field-order" "car" "field-name" "let" "field-values" "dynamic" "function" "for-each" "value")}
        {Lisp-Entry "get-primary?" () 100 11 ("handle" "get-Primary")}
        {Lisp-Entry "set-primary?" () 104 18 ("handle" "put-Primary" "value")}
        {Lisp-Entry "get-unique?" () 108 11 ("handle" "get-Unique")}
        {Lisp-Entry "set-unique?" () 112 18 ("handle" "put-Unique" "value")}
        {Lisp-Entry "get-required?" () 116 11 ("handle" "get-Required")}
        {Lisp-Entry "get-ignore-nulls?" () 120 11 ("handle" "get-IgnoreNulls")}}}})
"dBase-Inventory-Primary-Key"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Inventory-Primary-Key.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Inventory-Primary-Key" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Inventory-Primary-Key" () 43 7 ("Inventory-Primary-Key")
        {Lisp-Entry "index" () 46 8 ()}
        {Lisp-Entry "initialize" () 49 11 ("destroy-mandatory" "index~self" "set!" "nextmethod" "index" "parent" "inventory")}
        {Lisp-Entry "destroy" () 55 11 ("nextmethod" "index" "close")}
        {Lisp-Entry "get-index" () 65 18 ("index")}
        {Lisp-Entry "get-title" () 69 11 ("index" "get-title")}
        {Lisp-Entry "get-fields" () 73 11 ("index" "get-fields")}}}})
"dBase-Inventory-Table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Inventory-Table.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Inventory-Table" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Inventory-Table" () 43 7 ("Inventory-Table")
        {Lisp-Entry "handle" () 46 8 ()}
        {Lisp-Entry "indexes" () 47 8 ("not-loaded")}
        {Lisp-Entry "pending-columns" () 48 8 ()}
        {Lisp-Entry "initialize" () 51 11 ("destroy-mandatory" "handle~self" "set!" "nextmethod" "handle" "parent" "inventory")}
        {Lisp-Entry "destroy" () 57 11 ("nextmethod" "handle" "corelease")}
        {Lisp-Entry "get-handle" () 67 18 ("handle")}
        {Lisp-Entry "get-title" () 71 11 ("handle" "get-Name")}
        {Lisp-Entry "get-columns" () 80 11 ("get-Count" "naturals" "false" "self" "dBase-Inventory-Column" "first" "=" "assert" "when" "get-Item" "column" "fourth" "precision" "0" "third" "if" "scale" "second" "essay" "internal-type" "internal" "n" "dynamic" "function" "map" "get-Fields" "columns" "with-closed" "handle" "get-Name" "inventory" "get-database-name" "format" "Native" "list" "File" "new" "read-dBase-header" "internal-fields" "let")}
        {Lisp-Entry "get-column" () 95 11 ("false" "self" "dBase-Inventory-Column" "first" "=" "assert" "when" "fourth" "precision" "third" "scale" "second" "essay" "internal-type" "element" "internal" "get-OrdinalPosition" "column-no" "get-Item" "column" "let*" "get-Fields" "columns" "with-closed" "handle" "get-Name" "inventory" "get-database-name" "format" "Native" "list" "File" "new" "read-dBase-header" "internal-fields" "let" "name")}
        {Lisp-Entry "create-column" () 109 11 ("handle" "CreateField" "0" "false" "self" "inventory" "dBase-Inventory-Column" "new" "name")}
        {Lisp-Entry "append-column" () 113 11 ("get-handle" "Append" "handle" "get-Fields" "fields" "with-closed" "column")}
        {Lisp-Entry "add-pending-column" () 118 18 ("list" "cons" "pending-columns" "set!" "precision" "scale" "internal-type" "name")}
        {Lisp-Entry "remove-column" () 122 11 ("Delete" "handle" "get-Fields" "fields" "with-closed" "name")}
        {Lisp-Entry "get-indexes" () 136 11 ()}
        {Lisp-Entry "indexes-loaded?" () 141 11 ("not-loaded" "indexes" "neq?")}
        {Lisp-Entry "load-indexes" () 146 11 ("get-effective-indexes" "indexes" "set!" "indexes-loaded?" "unless")}
        {Lisp-Entry "get-indexes" () 152 11 ("indexes" "load-indexes")}
        {Lisp-Entry "get-effective-indexes" () 158 11 ("get-output" "corelease" "self" "inventory" "dBase-Inventory-Index" "put" "get-Foreign" "not" "if" "get-Item" "index" "get-Count" "below" "0" "from" "n" "for" "loop" "List-Factory" "new" "fact" "let" "handle" "get-Indexes" "indexes" "with-closed")}
        {Lisp-Entry "get-index" () 170 11 ("get-indexes" "get-title" "=" "index" "dynamic" "function" "find-if" "name")}
        {Lisp-Entry "create-index" () 177 11 ("handle" "CreateIndex" "self" "inventory" "dBase-Inventory-Index" "new" "name")}
        {Lisp-Entry "append-index" () 182 11 ("cons" "indexes" "set!" "get-handle" "Append" "handle" "get-Indexes" "indexes-handle" "with-closed" "load-indexes" "new-index")}
        {Lisp-Entry "remove-index" () 190 11 ("remove!" "indexes" "set!" "Delete" "handle" "get-Indexes" "indexes-handle" "with-closed" "get-index" "index" "let" "name")}
        {Lisp-Entry "DBF5_HEADER" () 202 13 ("0" "end_marker" "dbh_stub" "dbh_rlen" "2" "dbh_hlen" "4" "dbh_records" "dbh_day" "dbh_month" "dbh_year" "dbh_dbt" "ubyte")}
        {Lisp-Entry "DBF5_FIELD" () 214 13 ("dbf_stub" "dbf_dec" "dbf_flen" "4" "dbf_reserved" "dbf_type" "dbf_name" "ubyte")}
        {Lisp-Entry "read-dBase-header" () 223 11 ("0" "naturals" "list" "dbf_dec" "decimal" "dbf_name" "record-part-address" "new-ansi-string-from-memory" "name" "=" "or" "when" "dbf_flen" "length" "String" "dbf_type" "integer->char" "type" "array-ref" "field" "field-no" "dynamic" "function" "map" "new-array-from-memory" "fields" "let" "fields-block" "*" "fields-size" "DBF5_FIELD" "1" "-" "quotient" "fields-count" "dbh_hlen" "get" "read-reversed-short" "header-size" "get-handle" "coerce" "header" "let*" "read-block" "DBF5_HEADER" "size-of" "size:" "Heap-Block" "header-block" "File-Reader" "new" "reader" "with-closed" "read-dBase-header" "unimplemented" "file")}
        {Lisp-Entry "read-reversed-short" () 248 11 ("0" "1" "array-ref" "*" "+" "array")}
        {Lisp-Entry "write-reversed-short" () 252 11 ("quotient" "1" "modulo" "0" "array-set!" "short" "array")}}}})
"dBase-Inventory-Updater"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Inventory-Updater.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Inventory-Updater" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Inventory-Updater" () 43 7 ("Inventory-Updater")}}})
"dBase-Provider"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Provider.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Provider" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Provider" () 43 7 ("Provider")
        {Lisp-Entry "external-name" () 46 11 ("dbase")}
        {Lisp-Entry "get-datatype" () 55 11 ("dBase-Datatype")}
        {Lisp-Entry "present" () 64 11 ()}
        {Lisp-Entry "browser-class" () 73 11 ("dBase-Widget")}
        {Lisp-Entry "new-updater" () 82 11 ("dBase-Inventory-Updater" "new" "connection")}}}})
"dBase-Widget"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "providers" "inventory" "dbase" "dBase-Widget.fusion"} {Time 128355726580000000L}
    {Lisp-Entry "jazz.access.providers.inventory.dbase.dBase-Widget" () 37 9 ("jazz")
      {Lisp-Entry "dBase-Widget" () 45 7 ("dir" "protocol:" "directory-browser" "5" "0" "Point" "position:" "title:" "directory-label" "name:" "Dimension" "size:" "Data-Source-Widget")
        {Lisp-Entry "get-data-source" () 59 11 ("directory-browser" "locate" "get-moniker" "directory:" "dBase-Data-Source" "new")}
        {Lisp-Entry "set-data-source" () 64 11 ("get-directory" "directory-browser" "locate" "set-moniker" "source")}
        {Lisp-Entry "setup-username/password-mode" () 68 11 ("false" "directory-browser" "locate" "set-enabled?")}
        {Lisp-Entry "set-enabled?" () 77 11 ("invalidate-view" "directory-browser" "locate" "set-enabled?" "enabled?" "set!" "flag")}
        {Lisp-Entry "get-tab-stops" () 88 11 ("directory-browser" "locate" "get-text" "list")}
        {Lisp-Entry "set-default-focus" () 93 18 ("directory-browser" "locate" "get-text" "set-focus")}
        {Lisp-Entry "on-return-press" () 97 11 ("self" "invoke" "return-press-handler" "when" "evt")}
        {Lisp-Entry "validate-content" () 107 11 ("parse" "format" "exists?" "throw-cancel" "focus-body" "yes:" "message-box" "unless" "get-moniker" "moniker" "validate-content" "directory-browser" "locate" "browser" "let")}}}})
"debug-macro"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "debug-macro.scm"} {Time 128366793880000000L}
    {Lisp-Entry "echo-macro" () 1 20 ("newline" "write" "zz" "let" "text")}
    {Lisp-Entry "comment-out" () 7 20 ("rest")}})
"declarations"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "declarations.scm"} {Time 128370336720000000L}
    {Lisp-Entry "jazz.dialect.declarations" () 37 8 ()
      {Lisp-Entry "jazz.Definition-Declaration" () 45 26 ("%%set-definition-declaration-value" "%%get-definition-declaration-value" "value" "%%get-definition-declaration-signature" "signature" "%%get-definition-declaration-expansion" "expansion" "jazz.allocate-definition-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Generic-Declaration" () 56 26 ("%%get-generic-declaration-dispatch-type" "dispatch-type" "%%set-generic-declaration-signature" "%%get-generic-declaration-signature" "signature" "jazz.allocate-generic-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Specific-Declaration" () 66 26 ("%%set-specific-declaration-body" "%%get-specific-declaration-body" "body" "%%get-specific-declaration-method?" "method?" "%%get-specific-declaration-signature" "signature" "%%get-specific-declaration-generic" "generic" "jazz.allocate-specific-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Category-Declaration" () 78 26 ("%%get-category-declaration-metaclass" "metaclass" "jazz.Object-Class" "body" "lookups" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Namespace-Declaration")}
      {Lisp-Entry "jazz.Class-Declaration" () 87 26 ("%%get-class-declaration-interfaces" "interfaces" "%%get-class-declaration-ascendant" "ascendant" "jazz.allocate-class-declaration" "jazz.Object-Class" "metaclass" "body" "lookups" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Category-Declaration")}
      {Lisp-Entry "jazz.Interface-Declaration" () 97 26 ("%%get-interface-declaration-ascendants" "ascendants" "jazz.allocate-interface-declaration" "jazz.Object-Class" "metaclass" "body" "lookups" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Category-Declaration")}
      {Lisp-Entry "jazz.Field-Declaration" () 106 26 ("jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Slot-Declaration" () 115 26 ("%%get-slot-declaration-setter-name" "setter-name" "%%get-slot-declaration-getter-name" "getter-name" "%%set-slot-declaration-initialize" "%%get-slot-declaration-initialize" "initialize" "jazz.allocate-slot-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Field-Declaration")}
      {Lisp-Entry "jazz.Property-Declaration" () 126 26 ("%%set-property-declaration-setter" "%%get-property-declaration-setter" "setter" "%%set-property-declaration-getter" "%%get-property-declaration-getter" "getter" "jazz.allocate-property-declaration" "jazz.Object-Class" "setter-name" "getter-name" "initialize" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Slot-Declaration")}
      {Lisp-Entry "jazz.Method-Declaration" () 136 26 ("%%get-method-declaration-parameters" "parameters" "%%get-method-declaration-expansion" "expansion" "%%get-method-declaration-implementation" "implementation" "%%get-method-declaration-propagation" "propagation" "jazz.allocate-method-declaration" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Field-Declaration")}
      {Lisp-Entry "jazz.With-Self" () 148 26 ("%%get-with-self-body" "body" "jazz.allocate-with-self" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Slot-Reference" () 157 26 ("%%get-slot-reference-context" "context" "%%get-slot-reference-name" "name" "%%get-slot-reference-declaration" "declaration" "jazz.allocate-slot-reference" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Slot-Assignment" () 168 26 ("%%get-slot-assignment-value" "value" "%%get-slot-assignment-context" "context" "%%get-slot-assignment-name" "name" "%%get-slot-assignment-declaration" "declaration" "jazz.allocate-slot-assignment" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.Dispatch" () 180 26 ("%%get-dispatch-arguments" "arguments" "%%get-dispatch-name" "name" "jazz.allocate-dispatch" "jazz.Object-Class" "type" "jazz.Expression")}}})
"declares"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "declares.scm"} {Time 128366793880000000L}
    {Lisp-Entry "f-run-time-bindings/safe" () 3 9 ("car" "x")}
    {Lisp-Entry "f-not-run-time-bindings/safe" () 10 9 ("car" "x")}
    {Lisp-Entry "f-run-time-bindings/not-safe" () 17 9 ("car" "x")}
    {Lisp-Entry "f-not-run-time-bindings/not-safe" () 24 9 ("car" "x")}
    {Lisp-Entry "f-standard-bindings/not-run-time-bindings/not-safe" () 32 9 ("##pair?" "car" "x")}
    {Lisp-Entry "f-standard-bindings/run-time-bindings/not-safe" () 41 9 ("##pair?" "car" "x")}
    {Lisp-Entry "f-standard-bindings/extended-bindings/not-safe" () 50 9 ("##pair?" "car" "x")}
    {Lisp-Entry "f-block" () 57 9 ("g-block")}
    {Lisp-Entry "g-block" () 60 9 ("f-block")}
    {Lisp-Entry "f-separate" () 66 9 ("g-separate")}
    {Lisp-Entry "g-separate" () 69 9 ("f-separate")}})
"define-class"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "syntax" "define-class.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.class.syntax.define-class" () 37 8 ()
      {Lisp-Entry "jazz.define-class-syntax" () 40 20 ("jazz.expand-define-class-syntax" "slots" "constructor" "class-name" "inherited-slot-names" "ascendant-name" "name")}
      {Lisp-Entry "jazz.define-class" () 44 20 ("jazz.expand-define-class-runtime" "slot-names" "class-name" "inherited-slot-names" "ascendant-name" "name")}}})
"define-class-expander"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "syntax" "define-class-expander.scm"} {Time 128366822160000000L}
    {Lisp-Entry "core.class.syntax.define-class-expander" () 37 8 ()
      {Lisp-Entry "jazz.parse-define-class" () 40 9 ("jazz.object-size" "%%fx+" "vector-size" "instance-size" "all-length" "jazz.generate-symbol" "slot-name" "lambda" "all-variables" "%%append" "all-slot-names" "car" "map" "slot-names" "%%length" "ascendant-size" "ascendant-accessor" "%%null?" "if" "class-accessor" "let*" "proc" "slots" "class-name" "inherited-slot-names" "ascendant-name")}
      {Lisp-Entry "jazz.parse-define-class-runtime" () 53 9 ("jazz.object-size" "%%fx+" "vector-size" "instance-size" "all-length" "jazz.generate-symbol" "slot-name" "lambda" "map" "all-variables" "%%append" "all-slot-names" "%%length" "ascendant-size" "ascendant-accessor" "%%null?" "if" "class-accessor" "let*" "proc" "slot-names" "class-name" "inherited-slot-names" "ascendant-name")}
      {Lisp-Entry "jazz.expand-define-class-syntax" () 65 9 ("jazz.object-size" "%%fx+" "jazz.naturals" "%%object-set!" "%%object-ref" "%%object-of-class?" "%%kernel-assert" "define" "jazz.debug-kernel?" "value" "jazz.generate-symbol" "object" "%%cddr" "slot-setter" "%%cadr" "slot-getter" "%%car" "slot-name" "let" "rank" "slot" "map" "%%object" "%%list" "class" "jazz.define-macro" "%%null?" "if" "begin" "vector-size" "instance-size" "all-variables" "slot-names" "ascendant-size" "ascendant-accessor" "class-accessor" "lambda" "jazz.parse-define-class" "slots" "constructor" "class-name" "inherited-slot-names" "ascendant-name" "name")}
      {Lisp-Entry "jazz.expand-define-class-runtime" () 102 9 ("jazz.validate-inherited-slots" "jazz.identifier-name" "jazz.set-core-class" "eq?" "%%make-hashtable" "jazz.new-core-class" "define" "begin" "vector-size" "instance-size" "all-variables" "ascendant-size" "ascendant-accessor" "class-accessor" "lambda" "jazz.parse-define-class-runtime" "slot-names" "class-name" "inherited-slot-names" "ascendant-name" "name")}}})
"define-method"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "syntax" "define-method.scm"} {Time 128360868640000000L}
    {Lisp-Entry "core.class.syntax.define-method" () 37 8 ()
      {Lisp-Entry "jazz.define-virtual-syntax" () 40 20 ("jazz.expand-define-virtual-syntax" "%%car" "%%null?" "if" "bootstrap-type?" "let" "rest" "signature")}
      {Lisp-Entry "jazz.define-virtual" () 45 20 ("jazz.expand-define-virtual" "signature")}
      {Lisp-Entry "jazz.define-method" () 49 20 ("jazz.expand-define-method" "body" "signature")}}})
"define-method-expander"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "syntax" "define-method-expander.scm"} {Time 128366822160000000L}
    {Lisp-Entry "core.class.syntax.define-method-expander" () 37 8 ()
      {Lisp-Entry "jazz.expand-define-virtual-syntax" () 40 9 ("jazz.generate-symbol" "obj" "let" "%%class-of" "%%get-class-core-vtable" "%%vector-ref" "jazz.format" "list" "%%kernel-assertion" "%%list" "%%symbol?" "define-macro" "%%is?" "jazz.is-type?" "if" "is-test" "jazz.method-rank-name" "rank-name" "jazz.method-implementation-name" "implementation-name" "extra-parameters" "%%cadr" "object-parameter" "%%caar" "class-name" "%%cdr" "parameters" "%%car" "name" "let*" "bootstrap-type?" "signature")}
      {Lisp-Entry "jazz.expand-define-virtual" () 64 9 ("jazz.register-virtual-name" "define" "jazz.method-rank-name" "rank-name" "jazz.method-implementation-name" "implementation-name" "%%caar" "class-name" "%%cdr" "parameters" "%%car" "name" "let*" "signature")}
      {Lisp-Entry "jazz.expand-define-method" () 74 9 ("jazz.register-method" "lambda" "jazz.find-nextmethod" "nextmethod" "let" "define" "begin" "jazz.method-implementation-name" "implementation-name" "extra-parameters" "%%cadr" "object-parameter" "%%caar" "class-name" "%%cdr" "parameters" "%%car" "name" "let*" "body" "signature")}
      {Lisp-Entry "jazz.method-implementation-name" () 89 9 ("%%string-append" "%%string->symbol" "%%symbol->string" "jazz.split-string" "jazz.last" "let" "name" "class-name")}
      {Lisp-Entry "jazz.method-rank-name" () 94 9 ("%%symbol->string" "%%string-append" "%%string->symbol" "implementation-name")}
      {Lisp-Entry "jazz.inherited-name?" () 98 9 ("%%get-class-core-virtual-names" "%%memq" "and" "%%get-class-ascendant" "ascendant" "let" "method-name" "class")}
      {Lisp-Entry "jazz.register-virtual-name" () 104 9 ("1" "%%length" "%%fx-" "%%list" "%%get-class-core-virtual-names" "%%append" "%%set-class-core-virtual-names" "method-name" "class")}
      {Lisp-Entry "jazz.register-method" () 112 9 ("%%get-class-core-virtual-alist" "%%set-class-core-virtual-alist" "%%cons" "%%list" "%%get-class-core-method-alist" "%%append" "%%set-class-core-method-alist" "jazz.inherited-name?" "if" "method-implementation" "method-name" "class")}
      {Lisp-Entry "jazz.get-method-rank" () 122 9 ("1" "%%fx+" "%%cdr" "%%car" "%%eq?" "if" "0" "rank" "%%get-class-core-virtual-names" "scan" "iter" "let" "method-name" "class")}
      {Lisp-Entry "jazz.get-method-implementation" () 130 9 ("jazz.get-method-rank" "%%get-class-core-vtable" "%%vector-ref" "method-name" "class")}
      {Lisp-Entry "jazz.find-nextmethod" () 135 9 ("jazz.error" "rest" "obj" "lambda" "%%get-class-ascendant" "jazz.get-method-implementation" "jazz.inherited-name?" "if" "method-name" "class")}
      {Lisp-Entry "jazz.encapsulate-class" () 142 9 ("%%set-class-core-vtable" "%%get-class-core-method-alist" "%%get-class-core-virtual-alist" "jazz.get-method-rank" "%%cdr" "method-implementation" "%%car" "method-name" "method" "lambda" "for-each" "%%vector-ref" "%%vector-set!" "%%fx>=" "1" "%%vector-length" "%%fx-" "n" "iter" "%%get-class-core-vtable" "ascendant-vtable" "%%get-class-ascendant" "ascendant" "make-vector" "vtable" "0" "%%fx>" "%%when" "%%length" "vtable-size" "%%get-class-core-virtual-names" "virtual-names" "let" "class")}}})
"dev"
 ({Lisp-File-Entry {File dev "jazz" "kernel" "dev.scm"} {Time 128369468900000000L}
    {Lisp-Entry "l" () 46 9 ("void" "jazz.load-module" "jazz.boot-kernel" "module-name")}
    {Lisp-Entry "rl" () 52 9 ("void" "jazz.reload-module" "jazz.boot-kernel" "module-name")}
    {Lisp-Entry "ll" () 58 9 ("core.library" "l")}
    {Lisp-Entry "ld" () 62 9 ("dev" "l" "ll")}
    {Lisp-Entry "lj" () 67 9 ("jazz" "l" "ll")}
    {Lisp-Entry "la" () 72 9 ("jazz.platform.literals" "jazz.literals" "l" "lj")}
    {Lisp-Entry "lt" () 78 9 ("test" "rl")}
    {Lisp-Entry "lex" () 82 9 ("load" "ef" "module-name")}
    {Lisp-Entry "llex" () 87 9 ("jazz.dialect.language" "lex")}
    {Lisp-Entry "parse" () 96 9 ("jazz.locate-toplevel-declaration" "library-name")}
    {Lisp-Entry "walk" () 105 9 ("cdr" "jazz.walk-library" "jazz.read-toplevel-form" "form" "jazz.determine-module-filename" "jazz.determine-module-source" "source" "let" "library-name")}
    {Lisp-Entry "ppt" () 111 9 ("test" "ppl" "ll")}
    {Lisp-Entry "em" () 121 9 ("expand-module" "module-name")}
    {Lisp-Entry "expand-module" () 125 9 ("current-output-port" "jazz.expand-module" "pretty-print" "cddr" "rest" "cadr" "name" "jazz.read-toplevel-form" "form" "jazz.determine-module-filename" "jazz.determine-module-source" "source" "let" "module-name")}
    {Lisp-Entry "e" () 133 9 ("expand" "ll" "library-name")}
    {Lisp-Entry "ef" () 138 9 ("expand-to-file" "ll" "library-name")}
    {Lisp-Entry "ee" () 143 9 ("expansion" "list" "jazz.compile-library-with-options" "ld" "library-name")}
    {Lisp-Entry "eg" () 148 9 ("gvm" "list" "jazz.compile-library-with-options" "ld" "library-name")}
    {Lisp-Entry "expand" () 153 9 ("current-output-port" "expand-to-port" "library-name")}
    {Lisp-Entry "expand-to-file" () 157 9 ("expand-to-port" "port" "lambda" "call-with-output-file" "car" "null?" "if" "filename" "let" "rest" "library-name")}
    {Lisp-Entry "expand-to-port" () 164 9 ("jazz.expand-library" "library" "jazz.expand-module" "module" "case" "pretty-print" "cdr" "rest" "car" "kind" "jazz.read-toplevel-form" "form" "jazz.determine-module-filename" "jazz.determine-module-source" "source" "let" "port" "library-name")}
    {Lisp-Entry "et" () 175 9 ("test" "e")}
    {Lisp-Entry "compiled-libs" () 184 8 ()}
    {Lisp-Entry "compiled-libs-windows" () 187 8 ("jazz.platform.cairo" "compiled-libs" "append")}
    {Lisp-Entry "compiled-libs-linux" () 191 8 ("jazz.platform.freetype" "jazz.platform.cairo" "jazz.platform.x11" "compiled-libs" "append")}
    {Lisp-Entry "c" () 198 9 ("jazz.compile-library-with-flags" "library-name")}
    {Lisp-Entry "cflag" () 202 9 ("ld-flags:" "cc-flags:" "jazz.compile-library-with-flags" "ld-flags" "cc-flags" "module-name")}
    {Lisp-Entry "bwindows" () 206 9 ("compiled-libs-windows" "caddr" "ld-flags:" "cadr" "cc-flags:" "car" "jazz.compile-library-with-flags" "x" "lambda" "for-each")}
    {Lisp-Entry "blinux" () 211 9 ("compiled-libs-linux" "caddr" "ld-flags:" "cadr" "cc-flags:" "car" "jazz.compile-library-with-flags" "x" "lambda" "for-each")}
    {Lisp-Entry "cx" () 216 9 ("jazz.platform.x11" "cflag")}
    {Lisp-Entry "ccw" () 220 9 ("jazz.platform.cairo.cairo-win32" "cflag")}
    {Lisp-Entry "cf" () 223 9 ("jazz.platform.freetype" "cflag")}
    {Lisp-Entry "cl" () 227 9 ("jazz.dialect.language" "c" "ld")}
    {Lisp-Entry "ct" () 232 9 ("force?:" "test" "jazz.compile-library-with-flags" "ld")}
    {Lisp-Entry "cffi" () 236 9 ("force?:" "test.cffi" "jazz.compile-library-with-flags" "ld")}
    {Lisp-Entry "bkernel" () 246 9 ("jazz.build-kernel" "ld")}
    {Lisp-Entry "bmodule" () 251 9 ("jazz.build-module" "ld" "module-name")}
    {Lisp-Entry "bjazz" () 256 9 ("jazz.dialect" "scheme.dialect" "core.library" "core.generic" "core.foundation" "core.class" "core.base" "bmodule" "bkernel" "ll")}
    {Lisp-Entry "bwin" () 268 9 ("jazz.platform.windows.WinDlg" "jazz.platform.windows.WinCtrl" "jazz.platform.windows.WinShell" "jazz.platform.windows.WinUser" "jazz.platform.windows.WinGDI" "jazz.platform.windows.WinKernel" "jazz.platform.windows.WinNT" "jazz.platform.windows.WinBase" "jazz.platform.windows.WinTypes" "jazz.platform.windows.WinDef" "cflag" "ld")}
    {Lisp-Entry "bcairo" () 282 9 ("ccw")}
    {Lisp-Entry "bffi" () 286 9 ("jazz.platform.cairo.cairo-win32" "force?:" "ld-flags:" "cc-flags:" "jazz.platform.windows.WinUser" "jazz.compile-library-with-flags" "ld")}
    {Lisp-Entry "ball" () 292 9 ("bui" "bjazz")}
    {Lisp-Entry "bui" () 297 9 ("ccw" "bwin")}
    {Lisp-Entry "cj" () 302 9 ("source?:" "jazz.compile-filename-with-flags" "jazz.jazz-readtable" "current-readtable" "parameterize" "expand-to-file" "begin" ">" "not" "or" "if" "bintime" "file-exists?" "and" "jscmtime" "file-last-modification-time" "time->seconds" "jazztime" "jazz.determine-module-binary" "bin" "jscm" "string-append" "jscmfile" "jazz.determine-module-source" "jazz" "jazz.determine-module-filename" "file" "let*" "lj" "ld" "module-name")}
    {Lisp-Entry "Lang" () 321 8 ()}
    {Lisp-Entry "Util" () 324 8 ()}
    {Lisp-Entry "View" () 327 8 ()}
    {Lisp-Entry "Expl" () 343 8 ()}
    {Lisp-Entry "Text" () 352 8 ()}
    {Lisp-Entry "Tree" () 371 8 ()}
    {Lisp-Entry "Appl" () 376 8 ()}
    {Lisp-Entry "JML" () 380 8 ()}
    {Lisp-Entry "bjz" () 385 9 ("bjml" "bappl" "btree" "btext" "bexpl" "bui" "butil" "blang")}
    {Lisp-Entry "blang" () 395 9 ("Lang" "cj" "for-each")}
    {Lisp-Entry "butil" () 398 9 ("Util" "cj" "for-each")}
    {Lisp-Entry "bview" () 401 9 ("View" "cj" "for-each")}
    {Lisp-Entry "bexpl" () 404 9 ("Expl" "cj" "for-each")}
    {Lisp-Entry "btext" () 407 9 ("Text" "cj" "for-each")}
    {Lisp-Entry "btree" () 410 9 ("Tree" "cj" "for-each")}
    {Lisp-Entry "bappl" () 413 9 ("Appl" "cj" "for-each")}
    {Lisp-Entry "bjml" () 416 9 ("JML" "cj" "for-each")}
    {Lisp-Entry "cln" () 425 9 ("delete-file" "newline" "display" "begin" "file-exists?" "if" "delete-if-exists" "define" "jazz.determine-module-binary" "bin" "string-append" "jscm" "jazz.determine-module-filename" "file" "let*" "ld" "module-name")}
    {Lisp-Entry "cjz" () 444 9 ("cjml" "cappl" "ctree" "ctext" "cexpl" "cui" "cutil" "clang")}
    {Lisp-Entry "clang" () 454 9 ("Lang" "cln" "for-each")}
    {Lisp-Entry "cutil" () 457 9 ("Util" "cln" "for-each")}
    {Lisp-Entry "cview" () 460 9 ("view" "cln" "for-each")}
    {Lisp-Entry "cexpl" () 463 9 ("Expl" "cln" "for-each")}
    {Lisp-Entry "ctext" () 466 9 ("Text" "cln" "for-each")}
    {Lisp-Entry "ctree" () 469 9 ("Tree" "cln" "for-each")}
    {Lisp-Entry "cappl" () 472 9 ("Appl" "cln" "for-each")}
    {Lisp-Entry "cjml" () 475 9 ("JML" "cln" "for-each")}
    {Lisp-Entry "cat" () 484 9 ("jazz.Catalog" "table->list")}
    {Lisp-Entry "env" () 488 9 ("jazz.Environment" "table->list")}
    {Lisp-Entry "oc" () 492 9 ("jazz.serial-number->object" "integer?" "if" "jazz.object-content" "obj")}
    {Lisp-Entry "lsp" () 501 9 ("load")}
    {Lisp-Entry "spb" () 505 9 ("profile-start!")}
    {Lisp-Entry "spe" () 508 9 ("profile-stop!")}
    {Lisp-Entry "spw" () 511 9 ("write-profile-report" "name")}
    {Lisp-Entry "j" () 520 9 ("test.boot" "jazz.platform.literals" "l" "lj")}
    {Lisp-Entry "tj" () 526 9 ("j" "time" "jazz.run-loop?" "set!")}
    {Lisp-Entry "lp" () 531 9 ("jazz.dialect.language.get-process" "jazz.process.Process.Process.run-loop" "car" "rl" "null?" "not" "if" "rest")}})
"dialect"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "scheme" "dialect" "dialect.scm"} {Time 128370215020000000L}
    {Lisp-Entry "scheme.dialect.dialect" () 37 8 ("jazz.new-scheme-dialect" "scheme" "jazz.register-dialect" "jazz.Scheme-Walker" "jazz.Scheme-Dialect" "jazz.Define-Macro-Declaration" "jazz.Define-Declaration" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Define-Declaration" () 45 19 ("value" "signature" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-define-declaration" () 50 9 ("jazz.setup-declaration" "uptodate" "public" "jazz.Define-Declaration" "jazz.allocate-define-declaration" "new-declaration" "let" "signature" "parent" "type" "name")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Define-Declaration") 57 21 ("jazz.validate-arguments" "if" "declaration" "%%get-define-declaration-signature" "signature" "let" "arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Define-Declaration") 63 21 ("%%get-lexical-binding-type" "jazz.emit-expression" "jazz.emit-cast" "define" "%%get-define-declaration-value" "value" "declaration" "%%get-declaration-locator" "locator" "let" "environment")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Define-Declaration") 70 21 ("jazz.Any" "declaration" "%%get-declaration-locator" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.walk-binding-assignable?" ("jazz.Define-Declaration") 76 21 ()}
      {Lisp-Entry "jazz.emit-binding-assignment" ("jazz.Define-Declaration") 80 21 ("jazz.Any" "jazz.emit-expression" "%%code-form" "set!" "jazz.new-code" "declaration" "%%get-declaration-locator" "locator" "let" "environment" "value")}
      {Lisp-Entry "jazz.Define-Macro-Declaration" () 95 19 ("body" "signature" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-define-macro-declaration" () 100 9 ("jazz.setup-declaration" "uptodate" "public" "jazz.Define-Macro-Declaration" "jazz.allocate-define-macro-declaration" "new-declaration" "let" "signature" "parent" "type" "name")}
      {Lisp-Entry "jazz.walk-binding-expandable?" ("jazz.Define-Macro-Declaration") 106 21 ()}
      {Lisp-Entry "jazz.walk-binding-expand-form" ("jazz.Define-Macro-Declaration") 110 21 ("%%cdr" "%%apply" "jazz.need-macro" "expander" "jazz.load-module" "%%get-declaration-parent" "parent-declaration" "jazz.walk-error" "%%get-declaration-toplevel" "%%eq?" "if" "binding" "%%get-declaration-locator" "locator" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Define-Macro-Declaration") 120 21 ("jazz.emit-expression" "%%code-form" "jazz.emit-signature" "%%cons" "jazz.define-macro" "cons" "augmented-environment" "frame" "lambda" "jazz.annotate-signature" "jazz.with-annotated-frame" "%%get-define-macro-body" "body" "%%get-define-macro-signature" "signature" "declaration" "%%get-declaration-locator" "locator" "let" "environment")}
      {Lisp-Entry "jazz.Scheme-Dialect" () 139 19 ("jazz.Object-Class" "jazz.Dialect")}
      {Lisp-Entry "jazz.new-scheme-dialect" () 143 9 ("jazz.Scheme-Dialect" "jazz.allocate-scheme-dialect")}
      {Lisp-Entry "jazz.dialect-walker" ("jazz.Scheme-Dialect") 147 21 ("jazz.new-scheme-walker")}
      {Lisp-Entry "jazz.Scheme-Walker" () 159 19 ("jazz.Object-Class" "errors" "warnings" "jazz.Walker")}
      {Lisp-Entry "jazz.new-scheme-walker" () 163 9 ("jazz.Scheme-Walker" "jazz.allocate-scheme-walker")}
      {Lisp-Entry "jazz.walk-declaration" ("jazz.Scheme-Walker") 172 21 ("nextmethod" "else" "jazz.walk-%define-macro-declaration" "%define-macro" "walker" "jazz.walk-%define-declaration" "%define" "case" "%%car" "first" "let" "%%pair?" "if" "form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.scheme-bindings" () 187 9 ("jazz.walk-quasiquote" "quasiquote" "jazz.walk-delay" "delay" "jazz.walk-do" "do" "jazz.walk-or" "or" "jazz.walk-and" "and" "jazz.walk-setbang" "set!" "jazz.walk-receive" "receive" "jazz.walk-let-symbol" "let-symbol" "jazz.walk-let-macro" "let-macro" "jazz.walk-letrec" "letrec" "jazz.walk-letstar" "let*" "jazz.walk-let" "let" "jazz.walk-lambda" "lambda" "jazz.walk-begin" "begin" "jazz.walk-cond" "cond" "jazz.walk-case" "case" "jazz.walk-if" "if" "jazz.walk-quote" "quote" "jazz.walk-%define-macro" "%define-macro" "jazz.expand-define-macro" "define-macro" "jazz.walk-%define" "%define" "jazz.new-special-form" "jazz.expand-define" "define" "jazz.new-macro-form" "%%list")}
      {Lisp-Entry "jazz.scheme-environment" () 212 8 ()}
      {Lisp-Entry "jazz.walker-environment" ("jazz.Scheme-Walker") 216 21 ("jazz.scheme-bindings" "jazz.core-bindings" "append" "jazz.new-walk-frame" "%%list" "set!" "begin" "jazz.scheme-environment" "or")}
      {Lisp-Entry "jazz.expand-define" () 228 9 ("define" "%%cons" "jazz.expand-define-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-define-form" () 232 9 ("%define" "%%cdr" "jazz.parse-define" "parameters" "value" "specifier" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%define-declaration" () 237 9 ("jazz.add-declaration-child" "jazz.new-define-declaration" "new-declaration" "jazz.walk-parameters" "and" "signature" "jazz.Any" "jazz.specifier->type" "if" "type" "let" "jazz.Namespace-Declaration" "%%is?" "%%assert" "%%cdr" "parameters" "value" "specifier" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%define" () 247 9 ("jazz.walk" "%%set-define-declaration-value" "%%cons" "new-environment" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let*" "%%cdr" "parameters" "value" "specifier" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.parse-define-macro" () 261 9 ("values" "parameters" "jazz.Any" "type" "name" "%%cdr" "body" "%%car" "signature" "let*" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-define-macro" () 270 9 ("define-macro" "%%cons" "jazz.expand-define-macro-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-define-macro-form" () 274 9 ("%define-macro" "%%cdr" "jazz.parse-define-macro" "body" "parameters" "type" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%define-macro-declaration" () 279 9 ("jazz.add-declaration-child" "jazz.new-define-macro-declaration" "new-declaration" "jazz.walk-parameters" "signature" "let" "%%cdr" "body" "parameters" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%define-macro" () 287 9 ("jazz.walk" "%%set-define-macro-body" "%%set-define-macro-signature" "jazz.walk-parameters" "augmented-environment" "signature" "receive" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let*" "%%cdr" "body" "parameters" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-let-macro" () 302 9 ("jazz.walk-body" "begin" "%%append" "new-environment" "eval" "jazz.new-macro-form" "expander" "%%car" "name" "let" "binding" "lambda" "map" "macro-forms" "%%cddr" "body" "%%cadr" "bindings" "let*" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-let-symbol" () 320 9 ("jazz.walk-body" "begin" "%%append" "new-environment" "eval" "jazz.new-macro-symbol" "setter" "getter" "%%car" "name" "let" "binding" "lambda" "map" "macro-symbols" "%%cddr" "body" "%%cadr" "bindings" "let*" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-lambda" () 339 9 ("jazz.walk-body" "jazz.new-lambda" "jazz.Any" "jazz.specifier->type" "if" "type" "jazz.walk-parameters" "augmented-environment" "signature" "receive" "body" "specifier" "lambda" "%%cddr" "jazz.parse-specifier" "%%cadr" "parameters" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.parse-binding" () 354 9 ("jazz.new-variable" "values" "value" "jazz.specifier->type" "if" "type" "rest" "specifier" "lambda" "jazz.parse-specifier" "%%car" "symbol" "let" "jazz.format" "%%cdr" "%%pair?" "and" "%%assertion" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-let" () 364 9 ("jazz.walk-body" "jazz.queue-list" "jazz.new-let" "set!" "jazz.walk" "%%cons" "jazz.enqueue" "jazz.parse-binding" "value" "variable" "receive" "binding-form" "lambda" "for-each" "jazz.new-queue" "expanded-bindings" "augmented-environment" "unspecified" "%%list" "%%null?" "effective-body" "jazz.signature-named-let" "%%car" "%%pair?" "and" "%%cddr" "body" "bindings" "let" "jazz.walk-named-let" "%%cadr" "%%symbol?" "if" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-letstar" () 383 9 ("jazz.walk-body" "jazz.queue-list" "jazz.new-letstar" "set!" "jazz.walk" "%%cons" "jazz.enqueue" "jazz.parse-binding" "value" "variable" "receive" "binding-form" "lambda" "for-each" "jazz.new-queue" "expanded-bindings" "augmented-environment" "%%cddr" "body" "%%cadr" "bindings" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-letrec" () 397 9 ("jazz.walk-body" "jazz.walk" "cons" "value" "variable" "jazz.new-letrec" "%%append" "augmented-environment" "%%car" "jazz.new-variable" "binding-form" "lambda" "map" "new-variables" "let*" "%%cddr" "body" "%%cadr" "bindings" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-receive" () 410 9 ("jazz.walk-body" "jazz.walk" "jazz.new-receive" "%%append" "new-environment" "walk-parameters" "variables" "%%cdr" "body" "%%cddr" "%%car" "expression" "%%cadr" "parameters" "let*" "form" "environment" "declaration" "resume" "walker")
        {Lisp-Entry "walk-parameters" () 411 11 ("jazz.new-variable" "jazz.enqueue" "jazz.Any" "environment" "declaration" "resume" "walker" "jazz.specifier->type" "type" "rest" "specifier" "lambda" "%%cdr" "jazz.parse-specifier" "%%car" "expr" "jazz.queue-list" "%%null?" "if" "scan" "iter" "jazz.new-queue" "queue" "let" "parameters")}}
      {Lisp-Entry "jazz.walk-if" () 437 9 ("unspecified" "%%null?" "if" "jazz.walk-list" "jazz.walk" "jazz.new-if" "%%cdr" "no" "%%cddr" "%%car" "yes" "%%cadr" "test" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-cond" () 449 9 ("jazz.walk-list" "jazz.walk" "else" "%%eq?" "if" "cons" "body" "%%car" "test" "clause" "lambda" "map" "jazz.new-cond" "%%cdr" "clauses" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-case" () 461 9 ("jazz.walk-error" "jazz.walk-list" "cons" "%%pair?" "else" "%%eq?" "or" "unspecified" "%%list" "%%null?" "if" "effective-body" "%%cdr" "body" "%%car" "tries" "let*" "clause" "lambda" "map" "jazz.walk" "jazz.new-case" "%%cddr" "clauses" "%%cadr" "target" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-and" () 475 9 ("%%cdr" "jazz.walk-list" "jazz.new-and" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-or" () 479 9 ("%%cdr" "jazz.walk-list" "jazz.new-or" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-begin" () 488 9 ("jazz.walk-list" "jazz.new-begin" "%%cdr" "body" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-do" () 498 9 ("jazz.walk-do" "jazz.unimplemented" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-named-let" () 502 9 ("jazz.walk-body" "jazz.queue-list" "jazz.new-named-let" "set!" "jazz.walk" "%%cons" "jazz.enqueue" "value" "jazz.new-variable" "variable" "binding-form" "lambda" "for-each" "jazz.new-queue" "expanded-bindings" "augmented-environment" "%%cdr" "body" "%%cddr" "%%car" "bindings" "%%cadr" "name" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.signature-named-let" () 521 9 ("jazz.walk-named-let" "%%cdr" "%%car" "name" "let" "body" "bindings" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-delay" () 534 9 ("jazz.walk-delay" "jazz.unimplemented" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-quasiquote" () 543 9 ("jazz.new-quasiquote" "%%cdr" "%%cons" "%%cadr" "jazz.walk" "%%list" "unquote-splicing" "unquote" "%%car" "%%eq?" "or" "%%pair?" "if" "lambda" "walk" "letrec" "form" "environment" "declaration" "resume" "walker")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "dialect.scm"} {Time 128370215020000000L}
    {Lisp-Entry "jazz.dialect.dialect" () 37 8 ("jazz.dialect" "jazz" "jazz.register-dialect" "jazz.new-jazz-dialect" "dialect" "let" "jazz.Jazz-Walker" "jazz.Dispatch" "jazz.With-Self" "jazz.Jazz-Dialect" "jazz.Method-Declaration" "jazz.Property-Declaration" "jazz.Slot-Declaration" "jazz.Field-Declaration" "jazz.Interface-Declaration" "jazz.Class-Declaration" "jazz.Category-Declaration" "jazz.Specific-Declaration" "jazz.Generic-Declaration" "jazz.Definition-Declaration" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Definition-Declaration" () 45 19 ("value" "signature" "expansion" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-definition-declaration" () 51 9 ("jazz.setup-declaration" "jazz.Definition-Declaration" "jazz.allocate-definition-declaration" "new-declaration" "let" "signature" "expansion" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.is-method-definition?" () 58 9 ("self" "%%get-lexical-binding-name" "%%eq?" "%%car" "parameter" "%%pair?" "and" "%%get-signature-positional" "positional" "%%not" "if" "%%get-definition-declaration-signature" "signature" "let" "declaration")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Definition-Declaration") 68 21 ("jazz.validate-arguments" "if" "declaration" "%%get-definition-declaration-signature" "signature" "let" "arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-binding-call" ("jazz.Definition-Declaration") 74 21 ("nextmethod" "jazz.Any" "jazz.codes-forms" "%%get-declaration-locator" "jazz.new-code" "jazz.Category-Declaration" "%%get-declaration-parent" "jazz.is?" "declaration" "jazz.is-method-definition?" "and" "if" "jazz.lookup-self" "self" "let" "environment" "arguments")}
      {Lisp-Entry "jazz.emit-inlined-binding-call" ("jazz.Definition-Declaration") 85 21 ("jazz.error" "step" "nneq?" "%%get-lexical-binding-name" "begin" "jazz.only-positional?" "%%get-lambda-signature" "signature" "jazz.Lambda" "%%is?" "%%get-definition-declaration-value" "value" "let" "inline" "declaration" "%%get-definition-declaration-expansion" "%%eq?" "if" "environment" "arguments")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Definition-Declaration") 103 21 ("%%get-lexical-binding-type" "jazz.emit-expression" "jazz.emit-cast" "define" "%%get-definition-declaration-value" "value" "declaration" "%%get-declaration-locator" "locator" "let" "environment")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Definition-Declaration") 110 21 ("jazz.Any" "apply" "rest" "lambda" "jazz.Category-Declaration" "%%get-declaration-parent" "jazz.is?" "jazz.is-method-definition?" "and" "if" "jazz.new-code" "jazz.lookup-self" "self" "declaration" "%%get-declaration-locator" "locator" "let" "environment")}
      {Lisp-Entry "jazz.walk-binding-assignable?" ("jazz.Definition-Declaration") 120 21 ()}
      {Lisp-Entry "jazz.emit-binding-assignment" ("jazz.Definition-Declaration") 124 21 ("jazz.Any" "%%get-lexical-binding-type" "jazz.emit-expression" "jazz.emit-cast" "set!" "jazz.new-code" "declaration" "%%get-declaration-locator" "locator" "let" "environment" "value")}
      {Lisp-Entry "jazz.fold-declaration" ("jazz.Definition-Declaration") 131 21 ("%%get-definition-declaration-value" "jazz.fold-statement" "declaration" "s" "k" "f")}
      {Lisp-Entry "jazz.Generic-Declaration" () 145 19 ("dispatch-type" "signature" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-generic-declaration" () 150 9 ("jazz.setup-declaration" "jazz.Generic-Declaration" "jazz.allocate-generic-declaration" "new-declaration" "let" "dispatch-type" "signature" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.emit-binding-call" ("jazz.Generic-Declaration") 156 21 ("nextmethod" "jazz.Any" "jazz.codes-forms" "%%get-declaration-locator" "jazz.new-code" "jazz.Category-Declaration" "declaration" "%%get-declaration-parent" "jazz.is?" "and" "if" "jazz.lookup-self" "self" "let" "environment" "arguments")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Generic-Declaration") 167 21 ("%%get-generic-declaration-signature" "declaration" "jazz.validate-arguments" "arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Generic-Declaration") 171 21 ("jazz.emit-signature" "%%cons" "jazz.define-generic" "%%get-generic-declaration-signature" "signature" "declaration" "%%get-declaration-locator" "generic-locator" "let" "environment")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Generic-Declaration") 177 21 ("jazz.Any" "apply" "rest" "lambda" "jazz.Category-Declaration" "%%get-declaration-parent" "jazz.is?" "and" "if" "jazz.new-code" "jazz.lookup-self" "self" "declaration" "%%get-declaration-locator" "locator" "let" "environment")}
      {Lisp-Entry "jazz.Specific-Declaration" () 195 19 ("body" "method?" "signature" "generic" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-specific-declaration" () 202 9 ("jazz.setup-declaration" "jazz.Specific-Declaration" "jazz.allocate-specific-declaration" "new-declaration" "let" "method?" "signature" "generic" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Specific-Declaration") 208 21 ("jazz.update-generic" "begin" "%%not" "if" "jazz.emit-expression" "%%code-form" "jazz.emit-signature" "%%cons" "jazz.define-specific" "specific-expansion" "cons" "augmented-environment" "let" "frame" "lambda" "jazz.annotate-signature" "jazz.with-annotated-frame" "%%get-specific-declaration-body" "body" "%%get-specific-declaration-method?" "method?" "%%get-specific-declaration-signature" "signature" "jazz.generic-object-locator" "generic-object-locator" "%%get-declaration-locator" "generic-locator" "declaration" "%%get-specific-declaration-generic" "generic-declaration" "let*" "environment")}
      {Lisp-Entry "jazz.Category-Declaration" () 236 19 ("metaclass" "jazz.Object-Class" "body" "lookups" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Namespace-Declaration")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Category-Declaration") 240 21 ("jazz.Any" "declaration" "%%get-declaration-locator" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.Class-Declaration" () 254 19 ("interfaces" "ascendant" "jazz.Object-Class" "metaclass" "body" "lookups" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Category-Declaration")}
      {Lisp-Entry "jazz.new-class-declaration" () 259 9 ("jazz.setup-declaration" "jazz.protected-access" "jazz.make-access-lookups" "jazz.Class-Declaration" "jazz.allocate-class-declaration" "new-declaration" "let" "interfaces" "ascendant" "metaclass" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.setup-class-lookups" () 265 9 ("jazz.protected-access" "protected" "public" "interface" "lambda" "for-each" "ignore-duplicates" "jazz.public-access" "jazz.hashtable-merge" "if" "jazz.private-access" "%%get-access-lookup" "private" "%%get-class-declaration-interfaces" "map" "interfaces" "%%get-class-declaration-ascendant" "resolve-declaration" "ascendant" "let" "class-declaration")
        {Lisp-Entry "ignore-duplicates" () 266 11 ("new" "old" "key")}
        {Lisp-Entry "resolve-declaration" () 269 11 ("jazz.resolve-declaration" "if" "decl")}}
      {Lisp-Entry "jazz.lookup-declaration" ("jazz.Class-Declaration") 299 21 ("class-declaration" "%%get-namespace-declaration-lookups" "%%vector-ref" "%%hashtable-ref" "jazz.private-access" "jazz.public-access" "if" "access" "let" "external?" "symbol")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Class-Declaration") 306 21 ("jazz.emit-statements" "jazz.new-class" "jazz.global-value" "jazz.global-variable?" "lambda" "map" "interface-accesses" "jazz.Object-Class" "metaclass-access" "%%get-category-declaration-metaclass" "metaclass-declaration" "jazz.remove-slots" "%%list" "%%get-category-name" "define" "jazz.emit-binding-reference" "%%code-form" "%%not" "ascendant-access" "jazz.validate-core-class/class" "jazz.get-core-class" "core-class" "jazz.core-class?" "if" "begin" "%%get-namespace-declaration-body" "body" "%%get-class-declaration-interfaces" "interface-declarations" "%%get-class-declaration-ascendant" "ascendant-declaration" "%%get-declaration-locator" "locator" "declaration" "%%get-lexical-binding-name" "name" "let" "environment")}
      {Lisp-Entry "jazz.validate-core-class/class" () 341 9 ("jazz.validate-core-class/slots" "jazz.validate-core-class/category" "declaration" "core-class")}
      {Lisp-Entry "jazz.validate-core-class/slots" () 346 9 ("jazz.error" "%%equal?" "%%not" "%%when" "%%get-declaration-children" "jazz.Slot-Declaration" "jazz.collect-type" "%%get-lexical-binding-name" "decl" "declaration-slot-names" "%%get-class-slots" "%%get-field-name" "%%symbol?" "if" "name/slot" "lambda" "map" "core-class-slot-names" "let" "declaration" "core-class")}
      {Lisp-Entry "jazz.validate-core-class/category" () 353 9 ("jazz.validate-core-class/interfaces" "jazz.validate-core-class/ascendant" "declaration" "core-class")}
      {Lisp-Entry "jazz.validate-core-class/ascendant" () 358 9 ("%%get-lexical-binding-name" "jazz.error" "%%eq?" "%%when" "%%get-declaration-locator" "declaration-ascendant-name" "%%get-class-declaration-ascendant" "declaration-ascendant" "%%get-category-name" "jazz.identifier-name" "%%not" "if" "core-class-ascendant-name" "%%get-class-ascendant" "core-class-ascendant" "let*" "declaration" "core-class")}
      {Lisp-Entry "jazz.validate-core-class/interfaces" () 367 9 ("%%get-lexical-binding-name" "jazz.error" "%%null?" "%%not" "%%when" "%%get-class-declaration-interfaces" "declaration-interfaces" "let" "declaration" "core-class")}
      {Lisp-Entry "jazz.Interface-Declaration" () 378 19 ("ascendants" "jazz.Object-Class" "metaclass" "body" "lookups" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Category-Declaration")}
      {Lisp-Entry "jazz.new-interface-declaration" () 382 9 ("jazz.setup-declaration" "jazz.protected-access" "jazz.make-access-lookups" "jazz.Interface-Declaration" "jazz.allocate-interface-declaration" "new-declaration" "let" "ascendants" "metaclass" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.setup-interface-lookups" () 388 9 ("jazz.protected-access" "protected" "public" "ignore-duplicates" "jazz.public-access" "jazz.hashtable-merge" "interface" "lambda" "for-each" "jazz.private-access" "%%get-access-lookup" "private" "%%get-interface-declaration-ascendants" "resolve-declaration" "map" "ascendants" "let" "interface-declaration")
        {Lisp-Entry "ignore-duplicates" () 389 11 ("new" "old" "key")}
        {Lisp-Entry "resolve-declaration" () 392 11 ("jazz.resolve-declaration" "if" "decl")}}
      {Lisp-Entry "jazz.lookup-declaration" ("jazz.Interface-Declaration") 415 21 ("interface-declaration" "%%get-namespace-declaration-lookups" "%%vector-ref" "%%hashtable-ref" "jazz.private-access" "jazz.public-access" "if" "access" "let" "external?" "symbol")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Interface-Declaration") 422 21 ("jazz.emit-statements" "%%list" "jazz.new-interface" "define" "begin" "%%get-namespace-declaration-body" "body" "lambda" "map" "ascendant-accesses" "jazz.emit-binding-reference" "%%code-form" "jazz.Interface" "%%not" "if" "metaclass-access" "%%get-category-declaration-metaclass" "metaclass-declaration" "%%get-interface-declaration-ascendants" "ascendant-declarations" "%%get-declaration-locator" "locator" "declaration" "%%get-lexical-binding-name" "name" "let*" "environment")}
      {Lisp-Entry "jazz.Field-Declaration" () 444 19 ("jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.Slot-Declaration" () 456 19 ("setter-name" "getter-name" "initialize" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Field-Declaration")}
      {Lisp-Entry "jazz.new-slot-declaration" () 462 9 ("jazz.setup-declaration" "jazz.Slot-Declaration" "jazz.allocate-slot-declaration" "new-declaration" "let" "setter-name" "getter-name" "initialize" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Slot-Declaration") 468 21 ("arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Slot-Declaration") 472 21 ("%%get-slot-rank" "%%slot-offset" "jazz.add-slot" "jazz.emit-expression" "%%code-form" "self" "define" "begin" "offset" "offset-locator" "slot" "slot-locator" "jazz.compose-helper" "initialize-locator" "%%get-slot-declaration-initialize" "initialize" "class-locator" "%%get-declaration-parent" "class-declaration" "%%get-declaration-locator" "locator" "declaration" "%%get-lexical-binding-name" "name" "let*" "environment")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Slot-Declaration") 490 21 ("source-declaration" "resume" "walker" "jazz.walk-error" "jazz.Any" "self" "%%object-ref" "jazz.new-code" "offset" "declaration" "%%get-declaration-locator" "jazz.compose-helper" "offset-locator" "let" "jazz.lookup-self" "if" "environment")}
      {Lisp-Entry "jazz.walk-binding-assignable?" ("jazz.Slot-Declaration") 499 21 ()}
      {Lisp-Entry "jazz.emit-binding-assignment" ("jazz.Slot-Declaration") 503 21 ("source-declaration" "resume" "walker" "jazz.walk-error" "jazz.Any" "jazz.emit-expression" "%%code-form" "self" "%%object-set!" "jazz.new-code" "offset" "declaration" "%%get-declaration-locator" "jazz.compose-helper" "offset-locator" "let" "jazz.lookup-self" "if" "environment" "value")}
      {Lisp-Entry "jazz.Property-Declaration" () 520 19 ("setter" "getter" "jazz.Object-Class" "setter-name" "getter-name" "initialize" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Slot-Declaration")}
      {Lisp-Entry "jazz.new-property-declaration" () 525 9 ("jazz.setup-declaration" "jazz.Property-Declaration" "jazz.allocate-property-declaration" "new-declaration" "let" "setter-name" "getter-name" "initialize" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Property-Declaration") 531 21 ("%%get-slot-rank" "%%slot-offset" "jazz.add-property" "jazz.emit-expression" "%%code-form" "self" "define" "begin" "%%get-property-declaration-setter" "setter" "%%get-property-declaration-getter" "getter" "offset" "offset-locator" "slot" "slot-locator" "jazz.compose-helper" "initialize-locator" "%%get-slot-declaration-initialize" "initialize" "class-locator" "%%get-declaration-parent" "class-declaration" "%%get-declaration-locator" "locator" "declaration" "%%get-lexical-binding-name" "name" "let*" "environment")}
      {Lisp-Entry "jazz.Method-Declaration" () 561 19 ("parameters" "expansion" "implementation" "propagation" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Field-Declaration")}
      {Lisp-Entry "jazz.new-method-declaration" () 568 9 ("jazz.setup-declaration" "jazz.Method-Declaration" "jazz.allocate-method-declaration" "new-declaration" "let" "parameters" "parent" "expansion" "implementation" "propagation" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.Jazz-Dialect" () 582 26 ("jazz.allocate-jazz-dialect" "jazz.Object-Class" "jazz.Dialect")}
      {Lisp-Entry "jazz.Jazz-Dialect" () 586 19 ("jazz.Object-Class" "jazz.Dialect")}
      {Lisp-Entry "jazz.new-jazz-dialect" () 590 9 ("jazz.Jazz-Dialect" "jazz.allocate-jazz-dialect")}
      {Lisp-Entry "jazz.dialect-walker" ("jazz.Jazz-Dialect") 594 21 ("jazz.new-jazz-walker")}
      {Lisp-Entry "jazz.Jazz-Walker" () 606 26 ("jazz.allocate-jazz-walker" "jazz.Object-Class" "errors" "warnings" "jazz.Scheme-Walker")}
      {Lisp-Entry "jazz.Jazz-Walker" () 610 19 ("jazz.Object-Class" "errors" "warnings" "jazz.Scheme-Walker")}
      {Lisp-Entry "jazz.new-jazz-walker" () 614 9 ("jazz.Jazz-Walker" "jazz.allocate-jazz-walker")}
      {Lisp-Entry "jazz.jazz-bindings" () 623 9 ("jazz.walk-time" "time" "jazz.walk-with-self" "with-self" "jazz.walk-with-slots" "with-slots" "jazz.walk-parameterize" "parameterize" "jazz.walk-function" "function" "jazz.walk-c-function" "c-function" "jazz.walk-c-initialize" "c-initialize" "jazz.walk-c-declare" "c-declare" "jazz.walk-c-include" "c-include" "jazz.walk-atomic-region" "atomic-region" "jazz.expand-form" "form" "jazz.expand-c-external-so" "c-external-so" "jazz.expand-c-external" "c-external" "jazz.expand-c-union" "c-union" "jazz.expand-c-structure" "c-structure" "jazz.expand-assert" "assert" "jazz.expand-cointerface" "cointerface" "jazz.expand-coclass" "coclass" "jazz.expand-remote-proxy" "remote-proxy" "jazz.expand-method" "method" "jazz.expand-optimize" "optimize" "jazz.walk-%c-definition" "%c-definition" "jazz.expand-c-definition" "c-definition" "jazz.walk-%c-type" "%c-type" "jazz.expand-c-type" "c-type" "%property" "jazz.expand-property" "property" "jazz.walk-%slot" "%slot" "jazz.expand-slot" "slot" "jazz.walk-%interface" "%interface" "jazz.expand-interface" "interface" "jazz.walk-%class" "%class" "jazz.expand-class" "class" "jazz.walk-%specific" "%specific" "jazz.expand-specific" "specific" "jazz.walk-%generic" "%generic" "jazz.expand-generic" "generic" "jazz.walk-%definition" "%definition" "jazz.new-special-form" "jazz.expand-definition" "definition" "jazz.new-macro-form" "%%list")}
      {Lisp-Entry "jazz.jazz-environment" () 659 8 ()}
      {Lisp-Entry "jazz.walker-environment" ("jazz.Jazz-Walker") 663 21 ("jazz.jazz-bindings" "jazz.scheme-bindings" "jazz.core-bindings" "append" "jazz.new-walk-frame" "%%list" "set!" "begin" "jazz.jazz-environment" "or")}
      {Lisp-Entry "jazz.walk-declaration" ("jazz.Jazz-Walker") 675 21 ("nextmethod" "else" "%initialize" "%specific" "jazz.walk-%slot-declaration" "%property" "%slot" "jazz.walk-%interface-declaration" "%interface" "jazz.walk-%class-declaration" "%class" "jazz.walk-%c-definition-declaration" "%c-definition" "jazz.walk-%c-type-declaration" "%c-type" "c-include" "jazz.walk-%generic-declaration" "%generic" "walker" "jazz.walk-%definition-declaration" "%definition" "case" "%%car" "first" "let" "%%pair?" "if" "form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.parse-modifiers" () 698 9 ("%%list" "jazz.walk-error" "else" "%%null?" "cond" "modifiers" "%%append" "values" "%%apply" "%%cdr" "%%set-cdr!" "set!" "begin" "%%memq" "if" "%%cdar" "default" "%%caar" "allowed" "partition" "for-each" "found?" "%%car" "target" "%%not" "%%not-null?" "and" "%%while" "done?" "%%cons" "info" "lambda" "map" "partitions" "let" "rest" "infos" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.parse-keywords" () 724 9 ("%%list" "jazz.unspecified" "%%hashtable-ref" "keyword" "lambda" "map" "%%append" "values" "%%apply" "%%cddr" "%%cadr" "%%hashtable-set!" "begin" "set!" "%%car" "%%memq" "%%null?" "or" "if" "%%not" "%%while" "done?" "eq?" "%%make-hashtable" "table" "let" "rest" "keywords")}
      {Lisp-Entry "jazz.walk-symbol" ("jazz.Jazz-Walker") 744 21 ("walker" "nextmethod" "jazz.new-reference" "jazz.Slot-Declaration" "%%is?" "%%assert" "jazz.find-class-declaration" "jazz.lookup-declaration" "slot-declaration" "if" "jazz.self-access" "slot-name" "let" "symbol" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.self-access" () 753 9 ("%%string->symbol" "%%substring" "%%equal?" "0" "%%fx>" "and" "5" "%%fx-" "size" "%%string-length" "len" "%%symbol->string" "name" "let*" "symbol")}
      {Lisp-Entry "jazz.walk-symbol-assignment" ("jazz.Jazz-Walker") 767 21 ("nextmethod" "walker" "jazz.walk" "jazz.new-assignment" "jazz.Slot-Declaration" "%%is?" "%%assert" "jazz.find-class-declaration" "jazz.lookup-declaration" "slot-declaration" "if" "jazz.self-access" "slot-name" "let" "value" "symbol" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-form" ("jazz.Jazz-Walker") 781 21 ("nextmethod" "walker" "jazz.walk-dispatch" "jazz.dispatch?" "if" "%%car" "procedure-expr" "let" "form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.*self*" () 794 8 ("make-parameter")}
      {Lisp-Entry "jazz.lookup-self" () 798 9 ("self" "jazz.*self*" "if")}
      {Lisp-Entry "jazz.With-Self" () 804 19 ("body" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-with-self" () 808 9 ("jazz.With-Self" "jazz.allocate-with-self" "body")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.With-Self") 812 21 ("jazz.Any" "jazz.emit-expressions" "jazz.codes-forms" "jazz.*self*" "parameterize" "begin" "jazz.simplify-begin" "jazz.new-code" "expression" "%%get-with-self-body" "body" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.With-Self") 822 21 ("%%get-with-self-body" "jazz.fold-expressions" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Dispatch" () 835 19 ("arguments" "name" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-dispatch" () 840 9 ("jazz.Dispatch" "jazz.allocate-dispatch" "arguments" "name")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Dispatch") 844 21 ("jazz.Any" "%%cdr" "jazz.emit-expressions" "jazz.codes-forms" "jazz.dispatch" "%%car" "jazz.emit-expression" "%%code-form" "jazz.new-code" "jazz.generate-symbol" "object" "%%get-dispatch-arguments" "arguments" "expression" "%%get-dispatch-name" "name" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Dispatch") 856 21 ("%%get-dispatch-arguments" "jazz.fold-expressions" "%%get-dispatch-name" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.walk-dispatch" () 865 9 ("%%cdr" "jazz.walk-list" "jazz.new-dispatch" "%%car" "jazz.dispatch->symbol" "name" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.definition-modifiers" () 876 8 ()}
      {Lisp-Entry "jazz.parse-definition" () 882 9 ("unspecified" "%%null?" "effective-body" "%%list" "specifier-list" "body" "%%cdar" "parameters" "%%caar" "let*" "values" "specifier" "lambda" "%%cdr" "jazz.parse-specifier" "name" "let" "%%car" "%%symbol?" "if" "jazz.definition-modifiers" "jazz.parse-modifiers" "expansion" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-definition" () 898 9 ("definition" "%%cons" "jazz.expand-definition-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-definition-form" () 902 9 ("%definition" "%%cdr" "jazz.parse-definition" "parameters" "value" "expansion" "compatibility" "access" "specifier" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%definition-declaration" () 907 9 ("jazz.walk" "%%set-definition-declaration-value" "%%cons" "new-environment" "inline" "%%eq?" "%%when" "jazz.add-declaration-child" "jazz.new-definition-declaration" "new-declaration" "jazz.walk-parameters" "and" "signature" "jazz.Any" "jazz.specifier->type" "if" "type" "let" "%%cdr" "parameters" "value" "expansion" "compatibility" "access" "specifier" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%definition" () 920 9 ("jazz.walk" "%%set-definition-declaration-value" "inline" "%%eq?" "%%not" "%%when" "%%cons" "new-environment" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let*" "%%cdr" "parameters" "value" "expansion" "compatibility" "access" "specifier" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.generic-modifiers" () 938 8 ()}
      {Lisp-Entry "jazz.parse-generic" () 943 9 ("values" "jazz.format" "%%null?" "%%assertion" "body" "specifier" "lambda" "jazz.parse-specifier" "%%cdr" "parameters" "name" "%%car" "signature" "let" "jazz.generic-modifiers" "jazz.parse-modifiers" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-generic" () 954 9 ("generic" "%%cons" "jazz.expand-generic-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-generic-form" () 958 9 ("%generic" "%%cdr" "jazz.parse-generic" "parameters" "compatibility" "access" "specifier" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%generic-declaration" () 963 9 ("jazz.add-declaration-child" "jazz.new-generic-declaration" "new-declaration" "jazz.walk-parameters" "signature" "jazz.specifier->name" "jazz.lookup-reference" "dispatch-type-declaration" "jazz.specifier?" "%%assert" "%%caar" "dispatch-type-specifier" "jazz.Any" "jazz.specifier->type" "if" "type" "let" "%%cdr" "parameters" "compatibility" "access" "specifier" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%generic" () 975 9 ("%%set-generic-declaration-signature" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let" "jazz.walk-parameters" "augmented-environment" "signature" "receive" "%%cdr" "parameters" "compatibility" "access" "specifier" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.specific-modifiers" () 988 8 ()}
      {Lisp-Entry "jazz.parse-specific" () 992 9 ("values" "parameters" "name" "unspecified" "%%list" "%%null?" "if" "effective-body" "%%cdr" "body" "%%car" "signature" "let*" "jazz.specific-modifiers" "jazz.parse-modifiers" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-specific" () 1002 9 ("specific" "%%cons" "jazz.expand-specific-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-specific-form" () 1006 9 ("%specific" "%%cdr" "jazz.parse-specific" "body" "parameters" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%specific" () 1011 9 ("nextmethod" "jazz.new-nextmethod-variable" "%%cons" "jazz.walk-body" "%%set-specific-declaration-body" "uptodate" "public" "jazz.new-specific-declaration" "new-declaration" "let" "jazz.walk-parameters" "augmented-environment" "signature" "receive" "jazz.specifier?" "%%assert" "dispatch-type-specifier" "%%car" "dispatch-specifier" "jazz.generic-object-locator" "generic-object-locator" "%%get-declaration-locator" "generic-locator" "jazz.lookup-declaration" "generic-declaration" "let*" "%%cdr" "body" "method?" "parameters" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.class-modifiers" () 1031 8 ()}
      {Lisp-Entry "jazz.class-keywords" () 1036 8 ()}
      {Lisp-Entry "jazz.parse-class" () 1040 9 ("values" "jazz.class-keywords" "jazz.parse-keywords" "body" "attributes" "interface-names" "ascendant-name" "metaclass-name" "%%cdr" "jazz.Any" "type" "%%car" "name" "let" "jazz.class-modifiers" "jazz.parse-modifiers" "compatibility" "implementation" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-class" () 1049 9 ("jazz.walk-error" "%class" "jazz.Library-Declaration" "%%is?" "if" "jazz.parse-class" "body" "attributes" "interface-names" "ascendant-name" "metaclass-name" "compatibility" "implementation" "access" "type" "name" "receive" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%class-declaration" () 1056 9 ("jazz.walk-declarations" "%%cons" "new-environment" "jazz.setup-class-lookups" "jazz.add-declaration-child" "jazz.new-class-declaration" "new-declaration" "jazz.listify" "interface-name" "lambda" "map" "interfaces" "ascendant" "jazz.lookup-reference" "Object-Class" "%%eq?" "jazz.unspecified?" "or" "if" "metaclass" "let" "%%cdr" "body" "attributes" "interface-names" "ascendant-name" "metaclass-name" "compatibility" "implementation" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%class" () 1070 9 ("jazz.walk-list" "%%set-namespace-declaration-body" "begin" "jazz.error" "Object" "%%neq?" "%%not" "and" "if" "%%get-class-declaration-ascendant" "ascendant-declaration" "%%cons" "new-environment" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let*" "%%cdr" "body" "attributes" "interface-names" "ascendant-name" "metaclass-name" "compatibility" "implementation" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.interface-modifiers" () 1088 8 ()}
      {Lisp-Entry "jazz.interface-keywords" () 1092 8 ()}
      {Lisp-Entry "jazz.parse-interface" () 1096 9 ("values" "jazz.interface-keywords" "jazz.parse-keywords" "body" "attributes" "ascendant-names" "metaclass-name" "%%cdr" "jazz.Any" "type" "%%car" "name" "let" "jazz.interface-modifiers" "jazz.parse-modifiers" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-interface" () 1105 9 ("interface" "%%cons" "jazz.expand-interface-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-interface-form" () 1109 9 ("jazz.walk-error" "%interface" "jazz.Library-Declaration" "%%is?" "if" "%%cdr" "jazz.parse-interface" "body" "attributes" "ascendant-names" "metaclass-name" "compatibility" "access" "type" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%interface-declaration" () 1116 9 ("jazz.walk-declarations" "%%cons" "new-environment" "jazz.setup-interface-lookups" "jazz.add-declaration-child" "jazz.new-interface-declaration" "new-declaration" "jazz.listify" "ascendant-name" "lambda" "map" "ascendants" "jazz.lookup-reference" "Interface" "%%eq?" "jazz.unspecified?" "or" "if" "metaclass" "let" "%%cdr" "body" "attributes" "ascendant-names" "metaclass-name" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%interface" () 1128 9 ("jazz.walk-list" "%%set-namespace-declaration-body" "%%cons" "new-environment" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let*" "%%cdr" "body" "attributes" "ascendant-names" "metaclass-name" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.slot-modifiers" () 1142 8 ()}
      {Lisp-Entry "jazz.slot-keywords" () 1146 8 ()}
      {Lisp-Entry "jazz.slot-accessors-modifiers" () 1150 8 ()}
      {Lisp-Entry "jazz.slot-accessor-modifiers" () 1158 8 ()}
      {Lisp-Entry "jazz.parse-slot" () 1166 9 ("values" "jazz.walk-error" "%%not-null?" "if" "jazz.slot-keywords" "jazz.parse-keywords" "setter" "getter" "accessors" "initialize" "specifier" "lambda" "%%cdr" "jazz.parse-specifier" "%%car" "name" "let" "jazz.slot-modifiers" "jazz.parse-modifiers" "rest" "compatibility" "access" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-slot" () 1177 9 ("slot" "%%cons" "jazz.expand-slot-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.parse-slot-accessors" () 1181 9 ("values" "jazz.walk-error" "%%not-null?" "if" "jazz.slot-accessors-modifiers" "jazz.parse-modifiers" "rest" "generation" "expansion" "implementation" "propagation" "access" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.parse-slot-accessor" () 1188 9 ("values" "jazz.walk-error" "else" "%%car" "%%cdr" "%%symbol->string" "%%string-append" "%%string->symbol" "generate" "%%eq?" "and" "%%null?" "cond" "name" "or" "let" "jazz.slot-accessor-modifiers" "jazz.parse-modifiers" "rest" "generation" "expansion" "implementation" "propagation" "access" "receive" "prefix" "form" "default-generation" "default-expansion" "default-implementation" "default-propagation" "default-access" "slot-name" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-slot-form" () 1206 9 ("set!" "method" "with-self" "%%unspecified?" "%slot" "%property" "property" "%%car" "if" "begin" "generate-setter?" "generate" "%%eq?" "generate-getter?" "jazz.generate-symbol" "value" "let*" "setter-name" "setter-generation" "setter-expansion" "setter-implementation" "setter-propagation" "setter-access" "jazz.parse-slot-accessor" "getter-name" "getter-generation" "getter-expansion" "getter-implementation" "getter-propagation" "getter-access" "jazz.parse-slot-accessors" "default-generation" "default-expansion" "default-implementation" "default-propagation" "default-access" "else" "%%list" "%%symbol?" "jazz.unspecified?" "cond" "info" "lambda" "standardize" "let" "%%cdr" "jazz.parse-slot" "setter" "getter" "accessors" "initialize" "compatibility" "access" "specifier" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%slot-declaration" () 1237 9 ("jazz.add-declaration-child" "new-declaration" "jazz.new-slot-declaration" "jazz.new-property-declaration" "%property" "%%car" "%%eq?" "new" "jazz.Any" "jazz.specifier->type" "if" "type" "let" "%%cdr" "setter-name" "getter-name" "initialize" "compatibility" "access" "specifier" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%slot" () 1246 9 ("set!" "jazz.generate-symbol" "value" "%%set-property-declaration-setter" "with-self" "self" "lambda" "%%set-property-declaration-getter" "jazz.Property-Declaration" "%%is?" "%%when" "jazz.walk" "%%set-slot-declaration-initialize" "%%cadr" "jazz.find-form-declaration" "new-declaration" "jazz.unspecified?" "if" "let" "%%cdr" "setter-name" "getter-name" "initialize" "compatibility" "access" "specifier" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-property" () 1276 9 ("property" "%%cons" "jazz.expand-slot-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.method-modifiers" () 1285 8 ()}
      {Lisp-Entry "jazz.parse-method" () 1296 9 ("values" "parameters" "name" "unspecified" "%%list" "%%null?" "if" "effective-body" "body" "specifier" "lambda" "%%cdr" "jazz.parse-specifier" "signature" "let" "method" "%%cons" "%%get-declaration-toplevel" "%%get-lexical-binding-name" "jazz.format" "%%car" "%%pair?" "and" "%%assertion" "jazz.method-modifiers" "jazz.parse-modifiers" "synchronized" "remote" "expansion" "implementation" "propagation" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-method" () 1308 9 ("jazz.walk-error" "begin" "generic" "abstract" "%%eq?" "else" "jazz.expand-final-method" "with-self" "%specific" "jazz.Generic-Declaration" "and" "inherited" "case" "specifier-list" "self" "jazz.name->specifier" "%%list" "%%cons" "generic-parameters" "jazz.wrap-parameters" "%%get-lexical-binding-name" "category-name" "category-declaration" "jazz.lookup-declaration" "found-declaration" "jazz.specifier->type" "type" "let*" "jazz.Category-Declaration" "%%is?" "if" "jazz.parse-method" "body" "parameters" "expansion" "implementation" "propagation" "compatibility" "access" "specifier" "name" "receive" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-final-method" () 1332 9 ("body" "parameters" "method-name" "expansion" "access" "specifier-list" "category-name")}
      {Lisp-Entry "jazz.wrap-parameters" () 1340 9 ("jazz.queue-list" "%%cdr" "%%cddr" "with-self" "%%cadr" "%%keyword?" "jazz.enqueue" "jazz.specifier?" "%%pair?" "if" "%%car" "parameter" "else" "jazz.enqueue-list" "%%symbol?" "%%null?" "cond" "scan" "iter" "jazz.new-queue" "queue" "let" "parameters")}
      {Lisp-Entry "jazz.walk-with-self" () 1364 9 ("%%cdr" "jazz.walk-list" "jazz.new-with-self" "jazz.new-self-binding" "%%cons" "new-environment" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.validate-arguments" ("jazz.Jazz-Walker") 1376 21 ("jazz.unspecified" "arguments" "signature" "declaration" "source-declaration" "resume")}
      {Lisp-Entry "jazz.remote-proxy-modifiers" () 1385 8 ()}
      {Lisp-Entry "jazz.remote-proxy-keywords" () 1388 8 ()}
      {Lisp-Entry "jazz.parse-remote-proxy" () 1392 9 ("type" "values" "jazz.remote-proxy-keywords" "jazz.parse-keywords" "body" "on-name" "ascendant-name" "%%cdr" "%%car" "name" "let" "jazz.remote-proxy-modifiers" "jazz.parse-modifiers" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.method-proxy-modifiers" () 1400 8 ()}
      {Lisp-Entry "jazz.parse-method-proxy" () 1405 9 ("type" "values" "%%cdr" "parameters" "name" "%%car" "signature" "let*" "jazz.method-proxy-modifiers" "jazz.parse-modifiers" "invocation" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-remote-proxy" () 1413 9 ("nextmethod" "else" "dispatch" "jazz.rmi.Method-Dispatcher" "implements" "jazz.rmi.Remote-Proxy" "jazz.queue-list" "proxy" "proxy-interface" "%%list" "jazz.specified?" "if" "metaclass" "jazz.rmi.Proxy" "interface" "jazz.rmi.Proxy-Interface" "extends" "private" "class" "begin" "apply" "abstract" "virtual" "jazz.enqueue" "jazz.compose-name" "implementation-name" "other-parameters" "proxy-parameter" "jazz.rmi.post-rmi" "post" "jazz.rmi.send-rmi" "send" "case" "invoker" "%%cdr" "jazz.parse-method-proxy" "parameters" "invocation" "method" "%%car" "%%eq?" "%%assert" "method-form" "lambda" "for-each" "dispatchs" "remotes" "jazz.new-queue" "proxies" "arguments-variable" "local-object-variable" "method-name-variable" "jazz.generate-symbol" "dispatcher-variable" "dispatcher-class" "remote-class" "%%symbol->string" "%%string-append" "%%string->symbol" "interface-class" "let" "jazz.parse-remote-proxy" "body" "on-name" "ascendant-name" "access" "type" "name" "receive" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-coclass" () 1461 9 ("rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.cointerface-modifiers" () 1472 8 ()}
      {Lisp-Entry "jazz.cointerface-keywords" () 1475 8 ()}
      {Lisp-Entry "jazz.parse-cointerface" () 1479 9 ("type" "values" "jazz.cointerface-keywords" "jazz.parse-keywords" "body" "on-name" "ascendant-name" "%%cdr" "%%car" "name" "let" "jazz.cointerface-modifiers" "jazz.parse-modifiers" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-cointerface" () 1487 9 ("rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.validate-access" ("jazz.Jazz-Walker") 1537 21 ("referenced-declaration" "declaration" "resume")}
      {Lisp-Entry "jazz.validate-private-access" () 1547 9 ("jazz.illegal-access" "%%get-declaration-toplevel" "%%neq?" "if" "referenced-declaration" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.validate-protected-access" () 1553 9 ("jazz.unspecified" "referenced-declaration" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.illegal-access" () 1558 9 ("jazz.walk-error" "%%get-declaration-locator" "referenced-locator" "%%get-declaration-access" "referenced-access" "let" "referenced-declaration" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-assert" () 1569 9 ("body" "assertion" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-atomic-region" () 1591 9 ("jazz.walk-body" "interrupts-enabled" "not" "declare" "%%cdr" "body" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-optimize" () 1603 9 ("body" "parameters" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-c-include" () 1613 9 ("jazz.new-c-include" "%%cdr" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-c-declare" () 1623 9 ("jazz.new-c-declare" "%%cdr" "code" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-c-initialize" () 1633 9 ("jazz.new-c-initialize" "%%cdr" "code" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.c-type-modifiers" () 1643 8 ()}
      {Lisp-Entry "jazz.parse-c-type" () 1648 9 ("values" "%%cadr" "c-type" "jazz.Any" "type" "%%car" "name" "let" "jazz.c-type-modifiers" "jazz.parse-modifiers" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-type" () 1656 9 ("c-type" "%%cons" "jazz.expand-c-type-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-type-form" () 1660 9 ("%c-type" "jazz.walk-error" "jazz.Category-Declaration" "%%is?" "if" "%%cdr" "jazz.parse-c-type" "c-type" "compatibility" "access" "type" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%c-type-declaration" () 1667 9 ("jazz.add-declaration-child" "jazz.new-c-type-declaration" "new-declaration" "let" "jazz.resolve-c-type" "references" "expansion" "kind" "receive" "%%cdr" "c-type" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%c-type" () 1675 9 ("%%cadr" "jazz.find-form-declaration" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.resolve-c-type" () 1679 9 ("jazz.queue-list" "expansion" "kind" "receive" "jazz.error" "else" "union" "struct" "map" "result-type" "parameter-types" "function" "resolve-expansion" "base-type" "pointer" "%%cdr" "tag-rest" "c-string" "jazz.bind" "%%cadr" "native" "%%car" "case" "%%pair?" "%%get-declaration-locator" "alias" "values" "jazz.enqueue" "jazz.resolve-c-type-reference" "c-type-declaration" "%%symbol?" "cond" "resolve" "define" "jazz.new-queue" "queue" "let" "type" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.resolve-c-type-reference" () 1716 9 ("%%get-declaration-locator" "jazz.walk-error" "jazz.C-Type-Declaration" "%%is?" "if" "jazz.lookup-reference" "c-type-declaration" "let" "symbol" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-type-access" () 1723 9 ("%%get-library-declaration-references" "%%append" "%%set-library-declaration-references" "%%get-declaration-toplevel" "library-declaration" "let" "jazz.resolve-c-type" "references" "expansion" "kind" "receive" "type" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-c-function" () 1735 9 ("map" "c-lambda" "jazz.new-c-function" "jazz.expand-c-type-access" "type" "lambda" "resolve-access" "let" "%%cdr" "c-name-or-code" "result-type" "types" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.c-definition-modifiers" () 1747 8 ()}
      {Lisp-Entry "jazz.parse-c-definition" () 1752 9 ("values" "%%cdr" "parameters" "jazz.Any" "type" "%%car" "name" "let" "body" "scope" "c-name" "result-type" "parameter-types" "signature" "jazz.bind" "jazz.c-definition-modifiers" "jazz.parse-modifiers" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-definition" () 1761 9 ("c-definition" "%%cons" "jazz.expand-c-definition-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-definition-form" () 1765 9 ("%c-definition" "%%cdr" "jazz.parse-c-definition" "body" "scope" "c-name" "result-type" "parameter-types" "parameters" "compatibility" "access" "type" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%c-definition-declaration" () 1770 9 ("jazz.add-declaration-child" "map" "jazz.new-c-definition-declaration" "new-declaration" "jazz.walk-parameters" "signature" "jazz.expand-c-type-access" "lambda" "resolve-access" "let" "%%cdr" "body" "scope" "c-name" "result-type" "parameter-types" "parameters" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%c-definition" () 1779 9 ("jazz.walk-body" "%%set-c-definition-declaration-body" "jazz.walk-parameters" "augmented-environment" "signature" "receive" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let*" "%%cdr" "body" "scope" "c-name" "result-type" "parameter-types" "parameters" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.build-pointer-symbol" () 1793 9 ("%%symbol->string" "%%string-append" "%%string->symbol" "type")}
      {Lisp-Entry "jazz.pointer?" () 1797 9 ("1" "%%fx-" "%%string-ref" "%%eq?" "%%string-length" "lgt" "%%symbol->string" "str" "let*" "type")}
      {Lisp-Entry "jazz.build-method-symbol" () 1803 9 ("symbol->string" "map" "string-append" "apply" "%%string->symbol" "rest" "struct-string")}
      {Lisp-Entry "jazz.parse-structure-name" () 1807 9 ("%%null?" "%%cddr" "rest" "let" "%%cadr" "%%car" "%%symbol->string" "values" "%%symbol?" "if" "name")}
      {Lisp-Entry "jazz.parse-structure-accessor" () 1819 9 ("else" "char-string" "CHAR" "wchar_t-string" "native" "WCHAR" "pointer" "not-pointer" "jazz.pointer?" "and" "or" "values" "embed" "%%eq?" "%%symbol->string" "%%symbol?" "number->string" "%%integer?" "%%not" "cond" "size-string" "%%cddr" "%%null?" "if" "size" "%%cadr" "identifier" "jazz.build-pointer-symbol" "type*" "%%car" "type" "let*" "declaration")}
      {Lisp-Entry "jazz.expand-structure/union" () 1845 9 ("map" "append" "apply" "unsigned-int" "free" "make" "pointer" "c-type" "begin" "void" "-set!" "%%list" "c-function" "-ref" "jazz.build-method-symbol" "definition" "ref" "1" "%%string-length" "%%fx-" "0" "%%substring" "base-type-string" "type-string" "wchar_t-string" "native" "%%equal?" "%%eq?" "setter-string" "else" "cond" "getter-string" "member-string" "let*" "jazz.parse-structure-accessor" "pointer?" "embed?" "str?" "size" "member" "type" "declaration" "expand-accessor" "define" "if" "tag*" "%%string-append" "sizeof" "jazz.build-pointer-symbol" "struct*" "%%symbol->string" "struct-string" "let" "jazz.parse-structure-name" "tag" "c-struct-string" "struct" "receive" "declarations" "name")}
      {Lisp-Entry "jazz.expand-c-structure" () 1892 9 ("jazz.expand-structure/union" "declarations" "name" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-structure-array" () 1896 9 ("array-element" "%%string-append" "int" "c-function" "array-make" "jazz.build-method-symbol" "definition" "begin" "%%car" "%%null?" "%%not" "if" "c-struct-string" "jazz.build-pointer-symbol" "struct*" "%%symbol->string" "struct-string" "struct" "let*" "rest" "name" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-union" () 1908 9 ("jazz.expand-structure/union" "declarations" "name" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-external" () 1917 9 ("c-function" "definition" "%%symbol->string" "%%null?" "if" "c-name" "%%cdr" "params" "%%car" "s-name" "let*" "rest" "signature" "type" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-c-external-so" () 1926 9 ("WCHAR-string" "values" "result" "WCHAR-copy" "1" "string-length" "+" "WCHAR-array-make" "pt" "let" "definition" "%%cons" "c-external" "begin" "%%null?" "if" "c-name" "list-ref" "string-param" "jazz.generate-symbol" "map" "new-params" "%%cdr" "params" "%%symbol->string" "%%string-append" "%%string->symbol" "ext-s-name" "%%car" "s-name" "let*" "rest" "signature" "arg" "type" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.function-modifiers" () 1948 8 ()}
      {Lisp-Entry "jazz.parse-function" () 1952 9 ("values" "unspecified" "%%list" "%%null?" "if" "effective-body" "body" "%%car" "parameters" "let*" "%%cdr" "jazz.function-modifiers" "jazz.parse-modifiers" "rest" "extent" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-function" () 1960 9 ("lambda" "jazz.walk-lambda" "jazz.parse-function" "body" "parameters" "extent" "receive" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-parameterize" () 1973 9 ("jazz.walk-body" "jazz.walk" "value" "%%car" "name" "binding" "lambda" "map" "parameterize" "%%cddr" "body" "%%cadr" "bindings" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-with-slots" () 1990 9 ("value" "%%list" "%%get-slot-declaration-setter-name" "setter-name" "%%get-slot-declaration-getter-name" "getter-name" "jazz.lookup-reference" "slot-declaration" "let*" "slot-name" "lambda" "map" "let-symbol" "jazz.walk" "jazz.generate-symbol" "object-symbol" "let" "%%cdr" "body" "object" "slot-names" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-time" () 2009 9 ("jazz.walk" "jazz.new-time" "%%cadr" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-form" () 2019 9 ("nextmethod" "jml->form>>" "cons" "get-class-forms" "method" "%%get-declaration-locator" "class-locator" "class-declaration" "let*" "form" "environment" "declaration" "resume" "walker")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "syntax" "dialect.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.library.syntax.dialect" () 37 8 ("jazz.Dialect" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Dialect" () 40 19 ("jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.dialect-walker" ("jazz.Dialect") 44 22 ()}
      {Lisp-Entry "jazz.dialect-walker" ("jazz.Dialect") 47 21 ()}
      {Lisp-Entry "jazz.Dialects" () 59 8 ("eq?" "%%make-hashtable")}
      {Lisp-Entry "jazz.get-dialect" () 63 9 ("jazz.Dialects" "%%hashtable-ref" "name")}
      {Lisp-Entry "jazz.require-dialect" () 67 9 ("jazz.error" "jazz.get-dialect" "or" "name")}
      {Lisp-Entry "jazz.register-dialect" () 72 9 ("jazz.Dialects" "%%hashtable-set!" "dialect" "name")}}})
"dialect-syntax"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "syntax" "dialect-syntax.scm"} {Time 128366793540000000L}
    {Lisp-Entry "core.library.syntax.dialect-syntax" () 37 8 ()
      {Lisp-Entry "jazz.Dialect" () 40 26 ("jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.dialect-walker" ("jazz.Dialect") 44 29 ()}}})
"directory"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "directory.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.base.runtime.directory" () 37 8 ()}})
"ecase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "ecase.scm"} {Time 128363197640000000L}
    {Lisp-Entry "jazz.dialect.syntax.ecase" () 37 9 ("scheme")
      {Lisp-Entry "ecase" () 50 9 ("expand-ecase" "clauses" "target")}
      {Lisp-Entry "expand-ecase" () 54 9 ("=" "integer?" "eqv?" "list" "or" "pair?" "cons" "else" "eq?" "cdr" "body" "car" "value" "clause" "lambda" "map" "cond" "generate-symbol" "symbol" "let" "clauses" "target")}}})
"either"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "either.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax.either" () 37 9 ("scheme")
      {Lisp-Entry "either" () 49 9 ("generate-symbol" "symbol" "list" "rest" "expr" "bind" "pair" "lambda" "proc" "letrec" "set!" "car" "symbol?" "when" "cdr" "not" "while" "complex?" "scan" "let" "error" "null?" "if" "expressions")}}})
"enumeration"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "enumeration.scm"} {Time 128355726600000000L}})
"error"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "exception" "runtime" "error.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.exception.runtime.error" () 37 8 ("jazz.Error" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Error" () 40 19 ("message" "jazz.Object-Class" "jazz.Exception")}
      {Lisp-Entry "jazz.new-error" () 44 9 ("jazz.Error" "jazz.allocate-error" "message")}
      {Lisp-Entry "jazz.present-exception" ("jazz.Error") 48 21 ("error" "%%get-error-message")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "error.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.base.runtime.error" () 37 8 ()
      {Lisp-Entry "jazz.error" () 40 9 ("error" "jazz.format" "apply" "error-string" "let" "rest" "fmt-string")}
      {Lisp-Entry "jazz.unimplemented" () 45 9 ("%%car" "jazz.error" "%%null?" "if" "rest")}}})
"essay"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "essay.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax.essay" () 37 9 ("scheme")
      {Lisp-Entry "essay" () 46 9 ("and" "cons" "when" "list" "last" "expr" "butlast" "tests" "let" "error" "null?" "if" "expressions")}}})
"eval"
 ({Lisp-File-Entry {File dev "jazz" "dev" "gambit" "test" "eval.scm"} {Time 128366793860000000L}
    {Lisp-Entry "macro-make-code" () 0 17 ("lst" "subcodes" "stepper" "src" "cte" "code-prc")}
    {Lisp-Entry "^" () 4 17 ("n")}
    {Lisp-Entry "macro-code-run" () 7 17 ("c")}
    {Lisp-Entry "macro-make-cprc" () 11 17 ("body")}
    {Lisp-Entry "macro-make-gen" () 22 17 ("def" "params")}
    {Lisp-Entry "macro-make-rte" () 27 17 ("lst" "rte")}
    {Lisp-Entry "##cprc-prc-req2" () 30 8 ("exec" "1" "entry-hook" "macro-code-run" "macro-make-rte" "0" "^" "let*" "##raise-wrong-number-of-arguments-exception" "rte" "$code" "##first-argument" "##check-heap-limit" "##cons" "else" "##list" "cond" "args" "let" "##null?" "##not" "##eq?" "or" "if" "execute" "##define-macro" "arg3-and-up" "arg2" "macro-absent-obj" "arg1" "lambda" "proc" "letrec" "macro-lambda-step!" "macro-make-cprc")}
    {Lisp-Entry "##cprc-app2-red" () 78 8 ("2" "arg2" "1" "arg1" "0" "^" "macro-code-run" "oper" "let*" "macro-make-cprc")}
    {Lisp-Entry "##cprc-app2-sub" () 85 8 ("rte" "$code" "##subproblem-apply2" "2" "arg2" "1" "arg1" "0" "^" "macro-code-run" "oper" "let*" "macro-make-cprc")}
    {Lisp-Entry "##subproblem-apply2" () 92 8 ("##first-argument" "macro-call-step!" "arg2" "arg1" "proc" "rte" "$code" "lambda" "environment-map" "interrupts-enabled" "inline" "not" "##declare" "let")}})
"exception"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "exception.scm"} {Time 128366793860000000L}
    {Lisp-Entry "core.jazz.runtime.exception" () 38 8 ()
      {Lisp-Entry "jazz.default-exception-handler" () 41 8 ("jazz.current-exception-handler")}
      {Lisp-Entry "jazz.with-default-exception-handler" () 45 9 ("jazz.default-exception-handler" "jazz.with-exception-handler" "thunk")}
      {Lisp-Entry "jazz.with-safe-exception-handler" () 51 9 ("jazz.exception-reason" "jazz.format" "exc" "jazz.with-exception-handler" "recursive-error" "lambda" "call/cc" "thunk")}
      {Lisp-Entry "jazz.with-jazz-exception-handler" () 60 9 ("error" "jazz.debugger-error" "jazz.invoke-debugger" "jazz.exception-reason" "reason" "let" "continuation" "jazz.continuation-capture" "exc" "lambda" "jazz.with-exception-handler" "thunk")}
      {Lisp-Entry "jazz.break" () 70 9 ("break" "jazz.debugger-break" "jazz.invoke-debugger" "continuation" "lambda" "jazz.continuation-capture" "reason")}
      {Lisp-Entry "jazz.invoke-debugger" () 76 9 ("jazz.debug.invoke-debugger" "list" "jazz.raise" "not" "if" "jazz.process.Process.get-debugger" "and" "debugger" "jazz.process.get-process" "process" "let*" "lambda" "jazz.with-default-exception-handler" "continuation" "reason" "kind" "message")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "exception" "runtime" "exception.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.exception.runtime.exception" () 37 8 ("jazz.Exception" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Exception" () 40 19 ("jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.present-exception" ("jazz.Exception") 44 22 ()}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "exception.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.base.runtime.exception" () 38 8 ()
      {Lisp-Entry "jazz.with-exception-handler" () 43 13 ("with-exception-handler" "thunk" "proc")}
      {Lisp-Entry "jazz.exception-reason" () 46 13 ("exc")}
      {Lisp-Entry "jazz.current-exception-handler" () 50 13 ("current-exception-handler")}
      {Lisp-Entry "jazz.with-exception-handler" () 53 13 ("exc" "with-exception-handler" "return" "lambda" "call/cc" "thunk" "proc")}
      {Lisp-Entry "jazz.exception-reason" () 61 13 ("jazz.format" "not" "if" "arguments" "message" "condition-property-accessor" "location" "let" "exc")}
      {Lisp-Entry "jazz.current-exception-handler" () 70 13 ("current-exception-handler")}
      {Lisp-Entry "jazz.with-exception-handler" () 73 13 ("with-exception-handler" "thunk" "proc")}
      {Lisp-Entry "jazz.with-exception-catcher" () 78 13 ("with-exception-catcher" "thunk" "proc")}
      {Lisp-Entry "jazz.exception-reason" () 83 13 ("get-output-string" "##display-exception" "##exception->kind" "display" "open-output-string" "output" "let" "exc")}
      {Lisp-Entry "jazz.raise" () 90 13 ("raise" "obj")}}})
"expander"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "syntax" "expander.scm"} {Time 128366319480000000L}
    {Lisp-Entry "core.generic.syntax.expander" () 38 8 ()
      {Lisp-Entry "jazz.dispatch-parameter?" () 41 9 ("%%car" "jazz.specifier?" "%%pair?" "and" "parameter")}
      {Lisp-Entry "jazz.dispatch-parameter-type" () 46 9 ("jazz.specifier->name" "jazz.specifier?" "if" "%%car" "type" "let" "parameter")}
      {Lisp-Entry "jazz.dispatch-parameter-name" () 53 9 ("%%cadr" "parameter")}
      {Lisp-Entry "jazz.split-parameters" () 57 9 ("%%cdr" "jazz.enqueue" "%%car" "parameter" "else" "%%symbol?" "jazz.queue-list" "values" "%%null?" "cond" "scan" "iter" "jazz.new-queue" "mandatory" "let" "parameters")}
      {Lisp-Entry "jazz.expand-define-generic" () 78 9 ("apply" "%%specific-dispatch" "jazz.update-generic" "%%get-generic-pending-specifics" "%%null?" "%%not" "%%when" "lambda" "jazz.new-generic" "jazz.global-value" "jazz.global-variable?" "define" "begin" "if" "rest-parameter" "let" "jazz.split-parameters" "rest?" "mandatory-parameters" "receive" "jazz.generate-symbol" "gensym-specific" "jazz.generic-object-locator" "generic-locator" "jazz.dispatch-parameter-name" "%%cons" "parameter-names" "jazz.dispatch-parameter-type" "%%list" "parameter-access" "%%cdr" "parameters" "%%car" "method-locator" "let*" "signature")}
      {Lisp-Entry "jazz.generic-object-locator" () 103 9 ("%%symbol->string" "%%string-append" "%%string->symbol" "locator")}
      {Lisp-Entry "jazz.expand-define-specific" () 112 9 ("jazz.register-specific" "%%set-specific-implementation" "%%get-specific-next-implementation" "nextmethod" "let" "lambda" "if" "jazz.new-specific" "define" "jazz.split-parameters" "rest?" "mandatory-parameters" "receive" "gensym-lambda" "jazz.generate-symbol" "gensym-specific" "jazz.implementation-name" "specific-locator" "jazz.generic-object-locator" "generic-locator" "jazz.dispatch-parameter-name" "%%cons" "parameter-names" "jazz.dispatch-parameter-type" "%%list" "parameter-access" "%%cdr" "parameters" "%%car" "method-locator" "let*" "body" "signature")}
      {Lisp-Entry "jazz.implementation-name" () 132 9 ("jazz.join-strings" "%%symbol->string" "%%car" "%%string-append" "%%string->symbol" "jazz.split-identifier" "jazz.last" "1" "length" "%%fx=" "if" "jazz.access->name" "map" "virtual-types" "let" "parameter-access" "name")}
      {Lisp-Entry "jazz.access->name" () 141 9 ("jazz.error" "else" "0" "%%substring" "jazz.find-char-reversed" "pos" "%%car" "name" "let" "%%pair?" "%%symbol->string" "%%symbol?" "%%string?" "cond" "access")}
      {Lisp-Entry "jazz.display-tree" () 160 9 ("0" "%%get-generic-root-specific" "1" "%%fx+" "for-each" "newline" "%%get-specific-next-specific" "%%list" "write" "%%get-specific-previous-specifics" "previous-specifics" "level" "display-specific" "letrec" "%%get-specific-signature" "%%car" "specific" "lambda" "getit" "let" "generic")}}})
"file"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "file.scm"} {Time 128360604040000000L}
    {Lisp-Entry "core.base.runtime.file" () 37 8 ()
      {Lisp-Entry "jazz.file-directory" () 40 9 ("0" "%%substring" "%%not" "if" "jazz.find-char-reversed" "n" "let" "filename")}
      {Lisp-Entry "jazz.file-exists?" () 49 13 ("file-exists?" "path")}
      {Lisp-Entry "jazz.file-delete" () 52 13 ("delete-file" "path")}
      {Lisp-Entry "jazz.file-last-modification-time" () 55 13 ("file-last-modification-time" "path")}}})
"fonts"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "literals" "fonts.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.literals.fonts" () 37 9 ("Outline-Level-0" "Slide-Text" "Slide-Title" "Title" "Hyperlink-Small" "underline?:" "Hyperlink" "Heading5" "Heading4" "Heading3" "italic?:" "Heading2" "Heading1" "Heading0" "monospace?:" "Code" "Plain" "Label-Bold" "true" "bold?:" "Ansi-Bold" "Default-GUI" "Ansi-Fixed" "Ansi-Var" "8" "point-size:" "font-name:" "name:" "Font" "new" "System" "register-font" "jazz")}})
"format"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "format.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.base.runtime.format" () 37 8 ()
      {Lisp-Entry "jazz.format" () 40 9 ("else" "current-output-port" ":console" "get-output-string" "jazz.format-to" "open-output-string" "output" "let" ":string" "case" "arguments" "fmt-string" "port" "lambda" "jazz.parse-format" "rest")}
      {Lisp-Entry "jazz.parse-format" () 54 9 ("%%cddr" "%%cadr" "%%cdr" ":string" "%%car" "string?" "if" "proc" "rest")}
      {Lisp-Entry "jazz.lowlevel-format" () 60 8 ("jazz.format")}
      {Lisp-Entry "jazz.format-to" () 64 9 ("write-char" "%%eqv?" "cond" "eof-object?" "c" "%%not" "%%while" "error" "else" "newline" "%" "display" "if" "element" "for-each" "first?" "l" "%%cddr" "%%cadr" "jazz.print" "p" "t" "jazz.write" "s" "%%cdr" "set!" "%%car" "jazz.display" "a" "case" "read-char" "read" "directive" "let" "lambda" "format-directive" "done?" "open-input-string" "control" "let*" "arguments" "fmt-string" "output")}}})
"foundation"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "foundation" "runtime" "foundation.scm"} {Time 128363197620000000L}
    {Lisp-Entry "core.foundation.runtime.foundation" () 38 8 ()
      {Lisp-Entry "jazz.rassq" () 46 9 ("%%cdr" "else" "%%car" "%%cdar" "%%eq?" "%%null?" "cond" "rest" "iter" "let" "alist" "obj")}
      {Lisp-Entry "jazz.every?" () 57 9 ("%%cdr" "else" "%%car" "%%not" "%%null?" "cond" "scan" "iter" "let" "lst" "predicate")}
      {Lisp-Entry "jazz.butlast" () 67 9 ("jazz.queue-list" "set!" "%%car" "jazz.enqueue" "%%cdr" "%%null?" "%%not" "%%while" "jazz.new-queue" "queue" "let" "lst")}
      {Lisp-Entry "jazz.listify" () 75 9 ("%%list" "%%pair?" "%%null?" "or" "if" "obj")}
      {Lisp-Entry "jazz.remove!" () 81 9 ("%%set-cdr!" "scan" "previous" "let" "begin" "%%null?" "if" "%%cdr" "set!" "%%car" "%%eqv?" "%%not-null?" "and" "%%while" "lst" "target")}
      {Lisp-Entry "jazz.specifier?" () 100 9 ("1" "%%fx-" "0" "%%string-ref" "%%eqv?" "2" "%%string-length" "%%fx>" "%%symbol->string" "str" "let" "%%symbol?" "and" "expr")}
      {Lisp-Entry "jazz.specifier->name" () 108 9 ("%%symbol->string" "%%string->symbol" "%%string-length" "%%fx-" "1" "%%substring" "string" "lambda" "extract" "let" "specifier")}
      {Lisp-Entry "jazz.name->specifier" () 115 9 ("%%symbol->string" "%%string-append" "%%string->symbol" "name")}
      {Lisp-Entry "jazz.partition" () 119 9 ("%%car" "map" "%%cdr" "%%cons" "jazz.enqueue" "elements" "%%not" "if" "jazz.queue-list" "assv" "partition" "category" "let*" "element" "lambda" "for-each" "jazz.new-queue" "partitions" "let" "key" "lst")}
      {Lisp-Entry "jazz.enumerator?" () 140 9 ("0" "%%symbol->string" "%%string-ref" "%%eqv?" "%%symbol?" "and" "obj")}
      {Lisp-Entry "jazz.list-copy" () 152 12 ("copy")}
      {Lisp-Entry "jazz.proper-list" () 157 9 ("jazz.queue-list" "%%cdr" "set!" "%%car" "jazz.enqueue" "%%pair?" "%%while" "jazz.new-queue" "proper" "let" "lst")}
      {Lisp-Entry "jazz.skip-whitespace" () 170 9 ("read-char" "peek-char" "char-whitespace?" "%%while" "port")}
      {Lisp-Entry "jazz.read-delimited" () 175 9 ("jazz.queue-list" "read-char" "read" "jazz.enqueue" "peek-char" "%%eqv?" "%%not" "%%while" "jazz.skip-whitespace" "jazz.new-queue" "queue" "let" "delimiter" "port")}
      {Lisp-Entry "jazz.read-until" () 185 9 ("jazz.queue-list" "jazz.enqueue" "set!" "if" "read" "%%not" "%%while" "done?" "jazz.new-queue" "queue" "expr" "let" "port" "test")}
      {Lisp-Entry "jazz.read-content" () 197 9 ("eof-object?" "jazz.read-until" "port")}}})
"gambcini"
 ({Lisp-File-Entry {File dev "jazz" "bin" "GambitWinIntelDebug" "gambcini.scm"} {Time 128368531120000000L}
    {Lisp-Entry "jazz.define-feature" () 16 19 ("feature")}
    {Lisp-Entry "windows" () 34 21 ()}
    {Lisp-Entry "intel" () 42 21 ()}
    {Lisp-Entry "debug" () 50 21 ()}}
  {Lisp-File-Entry {File dev "jazz" "bin" "GambitWinIntelSafe" "gambcini.scm"} {Time 128367172020000000L}
    {Lisp-Entry "jazz.define-feature" () 16 19 ("feature")}
    {Lisp-Entry "windows" () 34 21 ()}
    {Lisp-Entry "intel" () 42 21 ()}
    {Lisp-Entry "safe" () 50 21 ()}})
"gambit"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "gambit.scm"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.dialect.core.gambit" () 37 8 ()
      {Lisp-Entry "jazz.gc" () 45 8 ("##gc")}
      {Lisp-Entry "jazz.current-instance" () 53 8 ("##current-instance")}
      {Lisp-Entry "jazz.foreign?" () 61 8 ("##foreign?")}
      {Lisp-Entry "jazz.foreign-address" () 62 8 ("foreign-address")}
      {Lisp-Entry "jazz.foreign-release!" () 63 8 ("foreign-release!")}
      {Lisp-Entry "jazz.foreign-released?" () 64 8 ("foreign-released?")}
      {Lisp-Entry "jazz.foreign-tag" () 65 8 ("##foreign-tag")}
      {Lisp-Entry "jazz.still-obj-refcount-dec!" () 66 8 ("##still-obj-refcount-dec!")}
      {Lisp-Entry "jazz.still-obj-refcount-inc!" () 67 8 ("##still-obj-refcount-inc!")}
      {Lisp-Entry "jazz.still-obj-refcount" () 68 8 ("##still-obj-refcount")}
      {Lisp-Entry "jazz.close-port" () 76 8 ("close-port")}
      {Lisp-Entry "jazz.file-type" () 84 8 ("file-type")}
      {Lisp-Entry "jazz._copy-file" () 85 8 ("copy-file")}
      {Lisp-Entry "jazz.rename-file" () 86 8 ("rename-file")}
      {Lisp-Entry "jazz.create-directory" () 87 8 ("create-directory")}
      {Lisp-Entry "jazz.directory-files" () 88 8 ("directory-files")}
      {Lisp-Entry "jazz.thread-sleep!" () 96 8 ("thread-sleep!")}
      {Lisp-Entry "jazz.statprof-loaded?" () 104 8 ()}
      {Lisp-Entry "jazz.load-statprof" () 108 9 ("set!" "load" "begin" "jazz.statprof-loaded?" "not" "if")}
      {Lisp-Entry "jazz.start-statprof" () 115 9 ("profile-start!" "jazz.load-statprof")}
      {Lisp-Entry "jazz.stop-statprof" () 119 9 ("profile-stop!")}
      {Lisp-Entry "jazz.report-statprof" () 122 8 ("write-profile-report" "get-output-string" "name" "1" "+" "set!" "display" "open-output-string" "port" "lambda" "0" "n" "let")}
      {Lisp-Entry "system-exit" () 139 8 ("exit")}}})
"general"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "general.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.base.runtime.general" () 37 8 ()
      {Lisp-Entry "jazz.boolean" () 40 9 ("%%boolean" "expr")}
      {Lisp-Entry "jazz.not-null?" () 44 9 ("%%not-null?" "expr")}
      {Lisp-Entry "jazz.find-in" () 53 9 ("%%cdr" "%%car" "or" "%%null?" "if" "scan" "iter" "let" "lst" "proc")}
      {Lisp-Entry "jazz.find-if" () 61 9 ("%%cdr" "%%car" "value" "%%null?" "if" "scan" "iter" "let" "lst" "predicate")}
      {Lisp-Entry "jazz.collect-if" () 71 9 ("%%cons" "set!" "%%car" "value" "%%cdr" "begin" "%%not-null?" "if" "scan" "iter" "result" "let" "lst" "predicate")}
      {Lisp-Entry "jazz.find-char-reversed" () 83 9 ("else" "%%string-ref" "char=?" "0" "%%fx<" "cond" "1" "%%string-length" "%%fx-" "pos" "iter" "let" "str" "c")}
      {Lisp-Entry "jazz.getprop" () 93 9 ("%%cddr" "else" "%%car" "%%eqv?" "%%null?" "cond" "scan" "iter" "let" "target" "plist")}
      {Lisp-Entry "jazz.getf" () 103 9 ("%%cadr" "if" "jazz.getprop" "pair" "let" "not-found" "target" "plist")}
      {Lisp-Entry "jazz.simplify-begin" () 110 9 ("%%cadr" "%%cddr" "%%null?" "%%cdr" "begin" "%%car" "%%eq?" "%%pair?" "and" "if" "form")}
      {Lisp-Entry "jazz.reverse!" () 119 8 ("reverse")}
      {Lisp-Entry "jazz.list-copy" () 123 9 ("obj" "lambda" "map" "lst")}
      {Lisp-Entry "jazz.last-pair" () 127 9 ("set!" "%%cdr" "%%not-null?" "%%pair?" "and" "%%while" "lst")}
      {Lisp-Entry "jazz.last" () 133 9 ("jazz.last-pair" "%%car" "lst")}
      {Lisp-Entry "jazz.remove-duplicates" () 137 9 ("%%cons" "set!" "%%memv" "%%car" "value" "%%cdr" "begin" "%%null?" "%%not" "if" "scan" "iter" "result" "let" "lst")}
      {Lisp-Entry "jazz.memstring" () 154 9 ("1" "%%fx+" "else" "%%string-ref" "%%eqv?" "%%fx=" "cond" "0" "n" "iter" "%%string-length" "len" "let" "string" "char")}
      {Lisp-Entry "jazz.split-string" () 165 9 ("%%fx+" "%%substring" "%%cons" "set!" "%%string-ref" "%%eqv?" "begin" "0" "%%fx>" "if" "1" "%%fx-" "pos" "iter" "%%string-length" "end" "lst" "let" "separator" "str")}
      {Lisp-Entry "jazz.join-strings" () 179 9 ("get-output-string" "%%cdr" "string" "lambda" "for-each" "%%car" "display" "open-output-string" "output" "let" "separator" "strings")}
      {Lisp-Entry "jazz.identifier-name" () 194 9 ("%%string-length" "1" "%%fx+" "%%substring" "%%string->symbol" "%%not" "if" "jazz.find-char-reversed" "pos" "%%symbol->string" "str" "let*" "identifier")}
      {Lisp-Entry "jazz.naturals" () 202 9 ("jazz.reverse!" "1" "%%fx+" "%%cons" "set!" "%%fx<" "%%while" "n" "lst" "let" "to" "from")}
      {Lisp-Entry "jazz.bit-or" () 211 9 ("bitwise-ior" "%%apply" "rest")}
      {Lisp-Entry "jazz.hashtable-merge" () 220 8 ("%%hashtable-set!" "%%eq?" "if" "%%hashtable-ref" "current" "value" "key" "%%iterate-hashtable" "duplicate-proc" "from" "into" "lambda" "%%list" "unbound" "let")}}})
"generic"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "runtime" "generic.scm"} {Time 128364585700000000L}
    {Lisp-Entry "core.generic.runtime.generic" () 38 8 ()
      {Lisp-Entry "jazz.new-generic" () 41 9 ("jazz.Generic" "jazz.allocate-generic" "jazz.error" "rest" "lambda" "jazz.new-specific" "root-specific" "jazz.identifier-name" "name" "let" "signature-proc" "mandatory-parameters" "locator")}
      {Lisp-Entry "jazz.register-specific" () 52 9 ("%%get-generic-pending-specifics" "%%cons" "%%set-generic-pending-specifics" "jazz.format" "%%length" "%%fx=" "%%not" "and" "initialize" "%%eq?" "or" "%%assertion" "%%get-generic-name" "name" "%%get-specific-mandatory-parameters" "s" "%%get-generic-mandatory-parameters" "g" "let" "specific" "generic")}
      {Lisp-Entry "jazz.update-generic" () 69 9 ("jazz.update-dispatch-tables" "jazz.clear-dispatch-tables" "%%set-generic-pending-specifics" "%%get-generic-pending-specifics" "jazz.insert-specific" "specific" "lambda" "for-each" "%%get-generic-root-specific" "jazz.resolve-signature" "generic")}
      {Lisp-Entry "jazz.resolve-signature" () 80 9 ("%%set-specific-signature" "%%procedure?" "%%when" "%%get-specific-signature" "signature/proc" "let" "specific")}
      {Lisp-Entry "jazz.insert-specific" () 86 9 ("jazz.specific-dispatch-equal?" "jazz.find-specific-from-root" "for-each" "implementation" "%%get-specific-implementation" "%%set-specific-next-implementation" "%%set-specific-next-specific" "move" "%%list" "%%cdr" "if" "kept-specifics" "assq" "keep" "jazz.specific-next?" "previous-specific" "jazz.partition" "partition" "let*" "insert-specific" "common-proc" "jazz.remove!" "%%cons" "%%set-specific-previous-specifics" "%%set-generic-root-specific" "%%when" "%%get-specific-next-specific" "next-specific" "%%get-specific-previous-specifics" "moved-specifics" "%%get-generic-root-specific" "%%eq?" "replace-root?" "let" "replaced-specific" "lambda" "replace-specific" "letrec" "specific" "generic")}
      {Lisp-Entry "jazz.clear-dispatch-tables" () 125 9 ("%%get-class-dispatch-table" "%%hashtable-set!" "jazz.class-dispatch-safe" "jazz.class?" "and" "%%when" "subclass" "lambda" "jazz.iterate-descendants-tree" "%%get-specific-signature" "%%car" "class" "%%get-generic-root-specific" "specific" "%%get-generic-name" "name" "let*" "generic")}
      {Lisp-Entry "jazz.update-dispatch-tables" () 136 9 ("%%get-specific-previous-specifics" "for-each" "%%get-specific-implementation" "jazz.update-dispatch-table" "%%get-specific-signature" "%%car" "class" "%%get-generic-root-specific" "specific" "iter" "%%get-generic-name" "name" "let" "generic")}
      {Lisp-Entry "jazz.find-specific-from-root" () 150 9 ("if" "%%get-specific-previous-specifics" "jazz.specific-next?" "next-specific" "lambda" "jazz.find-if" "found" "%%get-generic-root-specific" "loop-specific" "iter" "let" "specific" "generic")}
      {Lisp-Entry "jazz.specific-next?" () 161 9 ("%%car" "jazz.subcategory?" "signature" "%%get-specific-signature" "next-signature" "let" "specific" "next-specific")}
      {Lisp-Entry "jazz.specific-dispatch-equal?" () 167 9 ("%%car" "%%eq?" "signature2" "%%get-specific-signature" "signature1" "let" "specific2" "specific1")}
      {Lisp-Entry "jazz.dispatch-from-root" () 178 9 ("if" "%%get-specific-previous-specifics" "%%car" "jazz.subcategory?" "%%get-specific-signature" "next-signature" "next-specific" "lambda" "jazz.find-if" "found" "%%get-generic-root-specific" "previous-found" "iter" "let" "generic" "class")}
      {Lisp-Entry "jazz.dispatch" () 190 9 ("jazz.error" "%%class-of" "%%class-dispatch" "or" "object" "name")}
      {Lisp-Entry "jazz.class-dispatch-safe" () 195 9 ("%%hashtable-ref" "and" "%%get-class-dispatch-table" "dispatch-table" "let" "name" "class")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "syntax" "generic.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.generic.syntax.generic" () 38 8 ("jazz.Generic" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Generic" () 41 26 ("%%set-generic-pending-specifics" "%%get-generic-pending-specifics" "pending-specifics" "%%set-generic-root-specific" "%%get-generic-root-specific" "root-specific" "%%get-generic-mandatory-parameters" "mandatory-parameters" "%%get-generic-name" "name" "%%get-generic-locator" "locator" "jazz.allocate-generic" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Generic" () 49 19 ("pending-specifics" "root-specific" "mandatory-parameters" "name" "locator" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.define-generic" () 57 20 ("jazz.expand-define-generic" "apply" "rest")}
      {Lisp-Entry "%%class-dispatch" () 61 20 ("name" "class")}
      {Lisp-Entry "%%specific-dispatch" () 68 20 ("object" "generic")}}})
"global"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "global.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.base.runtime.global" () 37 8 ()
      {Lisp-Entry "jazz.global-variable?" () 44 13 ("global-bound?" "symbol")}
      {Lisp-Entry "jazz.global-value" () 47 13 ("global-ref" "symbol")}
      {Lisp-Entry "jazz.global-variable?" () 51 13 ("##global-var-ref" "##unbound?" "%%not" "##global-var?" "and" "symbol")}
      {Lisp-Entry "jazz.global-value" () 55 13 ("##global-var-ref" "symbol")}}})
"hashtable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "hashtable.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.core.hashtable" () 37 8 ()
      {Lisp-Entry "jazz.make-hashtable" () 40 9 ("%%make-hashtable" "hash" "test")}
      {Lisp-Entry "jazz.hashtable?" () 44 9 ("%%hashtable?" "obj")}
      {Lisp-Entry "jazz.hashtable-ref" () 48 9 ("%%hashtable-ref" "%%hashtable?" "%%assert" "default" "key" "hashtable")}
      {Lisp-Entry "jazz.hashtable-set!" () 53 9 ("%%hashtable-set!" "%%hashtable?" "%%assert" "value" "key" "hashtable")}
      {Lisp-Entry "jazz.hashtable-clear" () 58 9 ("%%hashtable-clear" "%%hashtable?" "%%assert" "key" "hashtable")}
      {Lisp-Entry "jazz.hashtable-keys" () 63 9 ("%%hashtable-keys" "%%hashtable?" "%%assert" "hashtable")}
      {Lisp-Entry "jazz.hashtable-length" () 68 9 ("%%hashtable-length" "%%hashtable?" "%%assert" "hashtable")}
      {Lisp-Entry "jazz.iterate-hashtable" () 73 9 ("%%iterate-hashtable" "%%hashtable?" "%%assert" "proc" "hashtable")}
      {Lisp-Entry "jazz.alist->hashtable" () 78 9 ("%%alist->hashtable" "equal?" "test" "alist")}
      {Lisp-Entry "jazz.hashtable->alist" () 82 9 ("%%hashtable->alist" "%%hashtable?" "%%assert" "hashtable")}
      {Lisp-Entry "jazz.hashtable-entries" () 87 9 ("%%hashtable-entries" "%%hashtable?" "%%assert" "hashtable")}
      {Lisp-Entry "jazz.eq-hash" () 94 12 ("eq?-hash")}
      {Lisp-Entry "jazz.eqv-hash" () 95 12 ("eqv?-hash")}
      {Lisp-Entry "jazz.equal-hash" () 96 12 ("equal?-hash")}}})
"increase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "increase.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax.increase" () 37 9 ("scheme")
      {Lisp-Entry "increase!" () 43 9 ("+" "set!" "list" "car" "1" "null?" "if" "increment" "let" "rest" "location")}
      {Lisp-Entry "decrease!" () 51 9 ("-" "set!" "list" "car" "1" "null?" "if" "increment" "let" "rest" "location")}}})
"internal"
 ({Lisp-File-Entry {File dev "jazz" "dev" "gambit" "test" "internal.scm"} {Time 128366793860000000L}
    {Lisp-Entry "ttt" () 5 9 ("b")
      {Lisp-Entry "a" () 6 10 ("1")}
      {Lisp-Entry "b" () 7 10 ("a" "+")}}
    {Lisp-Entry "uuu" () 11 9 ("+" "b" "1" "a" "set!")
      {Lisp-Entry "a" () 12 10 ()}
      {Lisp-Entry "b" () 13 10 ()}}
    {Lisp-Entry "vvv" () 19 9 ("f1")
      {Lisp-Entry "f1" () 20 11 ("f11")
        {Lisp-Entry "f11" () 21 13 ("f111")
          {Lisp-Entry "f111" () 22 15 ("f2" "f12" "f112" "f111" "list")}
          {Lisp-Entry "f111bad" () 24 15 ("f21" "f2" "f12" "f112" "f111" "list")}
          {Lisp-Entry "f112" () 26 15 ()}}
        {Lisp-Entry "f12" () 29 13 ()}}
      {Lisp-Entry "f2" () 32 11 ()
        {Lisp-Entry "f21" () 33 13 ()}}}
    {Lisp-Entry "www" () 39 8 ("f21" "f111bad" "f2" "f12" "f112" "list" "f111" "f11" "f1" "letrec" "lambda")}})
"interpreter"
 ({Lisp-File-Entry {File dev "jazz" "dev" "gambit" "test" "interpreter.scm"} {Time 128366319460000000L}
    {Lisp-Entry "c2" () 17 8 ()}
    {Lisp-Entry "c3" () 18 8 ()}
    {Lisp-Entry "c4" () 19 8 ()}
    {Lisp-Entry "lt" () 22 9 ("load")}
    {Lisp-Entry "sc" () 26 9 ("t4" "c4" "t3" "c3" "t2" "c2" "set!")}
    {Lisp-Entry "cc" () 33 9 ("%" "set!" "cont" "lambda" "##continuation-capture")}
    {Lisp-Entry "dc" () 39 9 ("##continuation-next" "newline" "car" "map" "cc" "memq" "not" "list" "write" "##continuation-locals" "locals" "##continuation-ret" "ret" "##procedure-name" "and" "name" "##continuation-creator" "creator" "let*" "if" "%" "cont" "iter" "let")}})
"j"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "j.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "test.j" () 0 9 ("jazz")
      {Lisp-Entry "test" () 4 13 ("3" "class-of" "type-name")}}})
"java.lang.Class"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "java" "lang" "java.lang.Class.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.java.lang.java.lang.Class" () 37 9 ("jazz")
      {Lisp-Entry "java.lang.Class" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "forName" () 46 50 ()}
        {Lisp-Entry "getName" () 47 50 ()}}}})
"java.lang.ClassLoader"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "java" "lang" "java.lang.ClassLoader.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.java.lang.java.lang.ClassLoader" () 37 9 ("jazz")
      {Lisp-Entry "java.lang.ClassLoader" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "getSystemClassLoader" () 46 53 ()}}}})
"java.lang.Object"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "java" "lang" "java.lang.Object.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.java.lang.java.lang.Object" () 37 9 ("jazz")
      {Lisp-Entry "java.lang.Object" () 43 7 ("Language" "Java" "Java-Object")
        {Lisp-Entry "getClass" () 46 50 ()}
        {Lisp-Entry "toString" () 47 50 ()}}}})
"java.lang.StackTraceElement"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "java" "lang" "java.lang.StackTraceElement.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.java.lang.java.lang.StackTraceElement" () 37 9 ("jazz")
      {Lisp-Entry "java.lang.StackTraceElement" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "getFileName" () 46 45 ()}
        {Lisp-Entry "getLineNumber" () 47 45 ()}
        {Lisp-Entry "getClassName" () 48 45 ()}
        {Lisp-Entry "getMethodName" () 49 45 ()}}}})
"java.lang.String"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "java" "lang" "java.lang.String.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.java.lang.java.lang.String" () 37 9 ("jazz")
      {Lisp-Entry "java.lang.String" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "length" () 46 44 ()}}}})
"java.lang.Throwable"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "java" "lang" "java.lang.Throwable.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.java.lang.java.lang.Throwable" () 37 9 ("jazz")
      {Lisp-Entry "java.lang.Throwable" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "getMessage" () 46 73 ()}
        {Lisp-Entry "getStackTrace" () 47 73 ()}}}})
"java.sql.Connection"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "java" "java" "sql" "java.sql.Connection.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.Java.java.sql.java.sql.Connection" () 37 9 ("jazz")
      {Lisp-Entry "java.sql.Connection" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "close" () 46 62 ()}
        {Lisp-Entry "getMetaData" () 47 62 ()}
        {Lisp-Entry "createStatement" () 48 62 ()}
        {Lisp-Entry "createStatement" () 49 62 ()}}}})
"java.sql.DatabaseMetaData"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "java" "java" "sql" "java.sql.DatabaseMetaData.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.Java.java.sql.java.sql.DatabaseMetaData" () 37 9 ("jazz")
      {Lisp-Entry "java.sql.DatabaseMetaData" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "getDatabaseMajorVersion" () 46 56 ()}
        {Lisp-Entry "getDatabaseMinorVersion" () 47 56 ()}
        {Lisp-Entry "getCatalogs" () 48 56 ()}
        {Lisp-Entry "getSchemas" () 49 56 ()}
        {Lisp-Entry "getTypeInfo" () 50 56 ()}
        {Lisp-Entry "getUDTs" () 51 56 ()}
        {Lisp-Entry "getTables" () 52 56 ()}
        {Lisp-Entry "getTableTypes" () 53 56 ()}
        {Lisp-Entry "getProcedures" () 54 56 ()}
        {Lisp-Entry "getColumns" () 55 56 ()}
        {Lisp-Entry "getPrimaryKeys" () 56 56 ()}
        {Lisp-Entry "getImportedKeys" () 57 56 ()}
        {Lisp-Entry "getExportedKeys" () 58 56 ()}
        {Lisp-Entry "getIndexInfo" () 59 56 ()}
        {Lisp-Entry "getTablePrivileges" () 60 56 ()}}}})
"java.sql.DriverManager"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "java" "java" "sql" "java.sql.DriverManager.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.Java.java.sql.java.sql.DriverManager" () 37 9 ("jazz")
      {Lisp-Entry "java.sql.DriverManager" () 43 7 ("Language" "Java" "java.lang.Object")}}})
"java.sql.ResultSet"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "java" "java" "sql" "java.sql.ResultSet.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.Java.java.sql.java.sql.ResultSet" () 37 9 ("jazz")
      {Lisp-Entry "java.sql.ResultSet" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "TYPE_FORWARD_ONLY" () 46 26 ()}
        {Lisp-Entry "TYPE_SCROLL_INSENSITIVE" () 47 26 ()}
        {Lisp-Entry "TYPE_SCROLL_SENSITIVE" () 48 26 ()}
        {Lisp-Entry "CONCUR_READ_ONLY" () 50 26 ()}
        {Lisp-Entry "CONCUR_UPDATABLE" () 51 26 ()}
        {Lisp-Entry "getMetaData" () 54 63 ()}
        {Lisp-Entry "next" () 55 63 ()}
        {Lisp-Entry "getInt" () 56 63 ()}
        {Lisp-Entry "getInt" () 57 63 ()}
        {Lisp-Entry "getString" () 58 63 ()}
        {Lisp-Entry "getString" () 59 63 ()}}}})
"java.sql.ResultSetMetaData"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "java" "java" "sql" "java.sql.ResultSetMetaData.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.Java.java.sql.java.sql.ResultSetMetaData" () 37 9 ("jazz")
      {Lisp-Entry "java.sql.ResultSetMetaData" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "getColumnCount" () 46 47 ()}
        {Lisp-Entry "getColumnName" () 47 47 ()}
        {Lisp-Entry "getColumnTypeName" () 48 47 ()}
        {Lisp-Entry "getColumnDisplaySize" () 49 47 ()}
        {Lisp-Entry "getPrecision" () 50 47 ()}}}})
"java.sql.Statement"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "access" "java" "java" "sql" "java.sql.Statement.fusion"} {Time 128366795560000000L}
    {Lisp-Entry "jazz.access.Java.java.sql.java.sql.Statement" () 37 9 ("jazz")
      {Lisp-Entry "java.sql.Statement" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "setMaxRows" () 46 55 ()}
        {Lisp-Entry "executeQuery" () 47 55 ()}
        {Lisp-Entry "executeUpdate" () 48 55 ()}}}})
"jazz.dev"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "catalog" "jazz.dev.jazz"} {Time 128369471020000000L}
    {Lisp-Entry "jazz.dev" () 0 7 ("oj" "dev" "File" "source:" "name:" "include-extensions:" "Language" "Product")}})
"kernel"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "scheme" "dialect" "kernel.scm"} {Time 128369307680000000L}
    {Lisp-Entry "scheme.dialect.kernel" () 37 9 ("core")
      {Lisp-Entry "eq?" () 55 8 ()}
      {Lisp-Entry "eqv?" () 56 8 ()}
      {Lisp-Entry "equal?" () 57 8 ()}
      {Lisp-Entry "number?" () 70 8 ()}
      {Lisp-Entry "complex?" () 71 8 ()}
      {Lisp-Entry "real?" () 72 8 ()}
      {Lisp-Entry "rational?" () 73 8 ()}
      {Lisp-Entry "integer?" () 74 8 ()}
      {Lisp-Entry "exact?" () 75 8 ()}
      {Lisp-Entry "inexact?" () 76 8 ()}
      {Lisp-Entry "=" () 77 8 ()}
      {Lisp-Entry "<" () 78 8 ()}
      {Lisp-Entry ">" () 79 8 ()}
      {Lisp-Entry "<=" () 80 8 ()}
      {Lisp-Entry ">=" () 81 8 ()}
      {Lisp-Entry "zero?" () 82 8 ()}
      {Lisp-Entry "positive?" () 83 8 ()}
      {Lisp-Entry "negative?" () 84 8 ()}
      {Lisp-Entry "odd?" () 85 8 ()}
      {Lisp-Entry "even?" () 86 8 ()}
      {Lisp-Entry "max" () 87 8 ()}
      {Lisp-Entry "min" () 88 8 ()}
      {Lisp-Entry "+" () 89 8 ()}
      {Lisp-Entry "*" () 90 8 ()}
      {Lisp-Entry "-" () 91 8 ()}
      {Lisp-Entry "/" () 92 8 ()}
      {Lisp-Entry "abs" () 93 8 ()}
      {Lisp-Entry "quotient" () 94 8 ()}
      {Lisp-Entry "remainder" () 95 8 ()}
      {Lisp-Entry "modulo" () 96 8 ()}
      {Lisp-Entry "gcd" () 97 8 ()}
      {Lisp-Entry "lcm" () 98 8 ()}
      {Lisp-Entry "numerator" () 99 8 ()}
      {Lisp-Entry "denominator" () 100 8 ()}
      {Lisp-Entry "floor" () 101 8 ()}
      {Lisp-Entry "ceiling" () 102 8 ()}
      {Lisp-Entry "truncate" () 103 8 ()}
      {Lisp-Entry "round" () 104 8 ()}
      {Lisp-Entry "rationalize" () 105 8 ()}
      {Lisp-Entry "exp" () 106 8 ()}
      {Lisp-Entry "log" () 107 8 ()}
      {Lisp-Entry "sin" () 108 8 ()}
      {Lisp-Entry "cos" () 109 8 ()}
      {Lisp-Entry "tan" () 110 8 ()}
      {Lisp-Entry "asin" () 111 8 ()}
      {Lisp-Entry "acos" () 112 8 ()}
      {Lisp-Entry "atan" () 113 8 ()}
      {Lisp-Entry "sqrt" () 114 8 ()}
      {Lisp-Entry "expt" () 115 8 ()}
      {Lisp-Entry "make-rectangular" () 116 8 ()}
      {Lisp-Entry "make-polar" () 117 8 ()}
      {Lisp-Entry "real-part" () 118 8 ()}
      {Lisp-Entry "imag-part" () 119 8 ()}
      {Lisp-Entry "magnitude" () 120 8 ()}
      {Lisp-Entry "angle" () 121 8 ()}
      {Lisp-Entry "exact->inexact" () 122 8 ()}
      {Lisp-Entry "inexact->exact" () 123 8 ()}
      {Lisp-Entry "number->string" () 131 8 ()}
      {Lisp-Entry "string->number" () 132 8 ()}
      {Lisp-Entry "not" () 145 8 ()}
      {Lisp-Entry "boolean?" () 146 8 ()}
      {Lisp-Entry "pair?" () 154 8 ()}
      {Lisp-Entry "cons" () 155 8 ()}
      {Lisp-Entry "car" () 156 8 ()}
      {Lisp-Entry "cdr" () 157 8 ()}
      {Lisp-Entry "set-car!" () 158 8 ()}
      {Lisp-Entry "set-cdr!" () 159 8 ()}
      {Lisp-Entry "caar" () 160 8 ()}
      {Lisp-Entry "cadr" () 161 8 ()}
      {Lisp-Entry "cdar" () 162 8 ()}
      {Lisp-Entry "cddr" () 163 8 ()}
      {Lisp-Entry "caaar" () 164 8 ()}
      {Lisp-Entry "caadr" () 165 8 ()}
      {Lisp-Entry "cadar" () 166 8 ()}
      {Lisp-Entry "caddr" () 167 8 ()}
      {Lisp-Entry "cdaar" () 168 8 ()}
      {Lisp-Entry "cdadr" () 169 8 ()}
      {Lisp-Entry "cddar" () 170 8 ()}
      {Lisp-Entry "cdddr" () 171 8 ()}
      {Lisp-Entry "caaaar" () 172 8 ()}
      {Lisp-Entry "caaadr" () 173 8 ()}
      {Lisp-Entry "caadar" () 174 8 ()}
      {Lisp-Entry "caaddr" () 175 8 ()}
      {Lisp-Entry "cadaar" () 176 8 ()}
      {Lisp-Entry "cadadr" () 177 8 ()}
      {Lisp-Entry "caddar" () 178 8 ()}
      {Lisp-Entry "cadddr" () 179 8 ()}
      {Lisp-Entry "cdaaar" () 180 8 ()}
      {Lisp-Entry "cdaadr" () 181 8 ()}
      {Lisp-Entry "cdadar" () 182 8 ()}
      {Lisp-Entry "cdaddr" () 183 8 ()}
      {Lisp-Entry "cddaar" () 184 8 ()}
      {Lisp-Entry "cddadr" () 185 8 ()}
      {Lisp-Entry "cdddar" () 186 8 ()}
      {Lisp-Entry "cddddr" () 187 8 ()}
      {Lisp-Entry "null?" () 188 8 ()}
      {Lisp-Entry "list?" () 189 8 ()}
      {Lisp-Entry "list" () 190 8 ()}
      {Lisp-Entry "length" () 191 8 ()}
      {Lisp-Entry "append" () 192 8 ()}
      {Lisp-Entry "reverse" () 193 8 ()}
      {Lisp-Entry "list-tail" () 194 8 ()}
      {Lisp-Entry "list-ref" () 195 8 ()}
      {Lisp-Entry "memq" () 196 8 ()}
      {Lisp-Entry "memv" () 197 8 ()}
      {Lisp-Entry "member" () 198 8 ()}
      {Lisp-Entry "assq" () 199 8 ()}
      {Lisp-Entry "assv" () 200 8 ()}
      {Lisp-Entry "assoc" () 201 8 ()}
      {Lisp-Entry "symbol?" () 209 8 ()}
      {Lisp-Entry "symbol->string" () 210 8 ()}
      {Lisp-Entry "string->symbol" () 211 8 ()}
      {Lisp-Entry "char?" () 219 8 ()}
      {Lisp-Entry "char=?" () 220 8 ()}
      {Lisp-Entry "char<?" () 221 8 ()}
      {Lisp-Entry "char>?" () 222 8 ()}
      {Lisp-Entry "char<=?" () 223 8 ()}
      {Lisp-Entry "char>=?" () 224 8 ()}
      {Lisp-Entry "char-ci=?" () 225 8 ()}
      {Lisp-Entry "char-ci<?" () 226 8 ()}
      {Lisp-Entry "char-ci>?" () 227 8 ()}
      {Lisp-Entry "char-ci<=?" () 228 8 ()}
      {Lisp-Entry "char-ci>=?" () 229 8 ()}
      {Lisp-Entry "char-alphabetic?" () 230 8 ()}
      {Lisp-Entry "char-numeric?" () 231 8 ()}
      {Lisp-Entry "char-whitespace?" () 232 8 ()}
      {Lisp-Entry "char-upper-case?" () 233 8 ()}
      {Lisp-Entry "char-lower-case?" () 234 8 ()}
      {Lisp-Entry "char->integer" () 235 8 ()}
      {Lisp-Entry "integer->char" () 236 8 ()}
      {Lisp-Entry "char-upcase" () 237 8 ()}
      {Lisp-Entry "char-downcase" () 238 8 ()}
      {Lisp-Entry "string?" () 246 8 ()}
      {Lisp-Entry "make-string" () 247 8 ()}
      {Lisp-Entry "string" () 248 8 ()}
      {Lisp-Entry "string-length" () 249 8 ()}
      {Lisp-Entry "string-ref" () 250 8 ()}
      {Lisp-Entry "string-set!" () 251 8 ()}
      {Lisp-Entry "string=?" () 252 8 ()}
      {Lisp-Entry "string-ci=?" () 253 8 ()}
      {Lisp-Entry "string<?" () 254 8 ()}
      {Lisp-Entry "string>?" () 255 8 ()}
      {Lisp-Entry "string<=?" () 256 8 ()}
      {Lisp-Entry "string>=?" () 257 8 ()}
      {Lisp-Entry "string-ci<?" () 258 8 ()}
      {Lisp-Entry "string-ci>?" () 259 8 ()}
      {Lisp-Entry "string-ci<=?" () 260 8 ()}
      {Lisp-Entry "string-ci>=?" () 261 8 ()}
      {Lisp-Entry "substring" () 262 8 ()}
      {Lisp-Entry "string-append" () 263 8 ()}
      {Lisp-Entry "string->list" () 264 8 ()}
      {Lisp-Entry "list->string" () 265 8 ()}
      {Lisp-Entry "string-copy" () 266 8 ()}
      {Lisp-Entry "string-fill!" () 267 8 ()}
      {Lisp-Entry "vector?" () 275 8 ()}
      {Lisp-Entry "make-vector" () 276 8 ()}
      {Lisp-Entry "vector" () 277 8 ()}
      {Lisp-Entry "vector-length" () 278 8 ()}
      {Lisp-Entry "vector-ref" () 279 8 ()}
      {Lisp-Entry "vector-set!" () 280 8 ()}
      {Lisp-Entry "vector->list" () 281 8 ()}
      {Lisp-Entry "list->vector" () 282 8 ()}
      {Lisp-Entry "vector-fill!" () 283 8 ()}
      {Lisp-Entry "procedure?" () 291 8 ()}
      {Lisp-Entry "apply" () 292 8 ()}
      {Lisp-Entry "map" () 293 8 ()}
      {Lisp-Entry "for-each" () 294 8 ()}
      {Lisp-Entry "force" () 295 8 ()}
      {Lisp-Entry "call-with-current-continuation" () 296 8 ()}
      {Lisp-Entry "call/cc" () 297 8 ()}
      {Lisp-Entry "values" () 298 8 ()}
      {Lisp-Entry "call-with-values" () 299 8 ()}
      {Lisp-Entry "dynamic-wind" () 300 8 ()}
      {Lisp-Entry "eval" () 308 8 ()}
      {Lisp-Entry "scheme-replace-report-environment" () 309 8 ()}
      {Lisp-Entry "null-environment" () 310 8 ()}
      {Lisp-Entry "interaction-environment" () 311 8 ()}
      {Lisp-Entry "call-with-input-file" () 324 8 ()}
      {Lisp-Entry "call-with-output-file" () 325 8 ()}
      {Lisp-Entry "input-port?" () 326 8 ()}
      {Lisp-Entry "output-port?" () 327 8 ()}
      {Lisp-Entry "current-input-port" () 328 8 ()}
      {Lisp-Entry "current-output-port" () 329 8 ()}
      {Lisp-Entry "with-input-from-file" () 330 8 ()}
      {Lisp-Entry "with-output-to-file" () 331 8 ()}
      {Lisp-Entry "open-input-file" () 332 8 ()}
      {Lisp-Entry "open-output-file" () 333 8 ()}
      {Lisp-Entry "close-input-port" () 334 8 ()}
      {Lisp-Entry "close-output-port" () 335 8 ()}
      {Lisp-Entry "read" () 343 8 ()}
      {Lisp-Entry "read-char" () 344 8 ()}
      {Lisp-Entry "peek-char" () 345 8 ()}
      {Lisp-Entry "eof-object?" () 346 8 ()}
      {Lisp-Entry "char-ready?" () 347 8 ()}
      {Lisp-Entry "write" () 355 8 ()}
      {Lisp-Entry "display" () 356 8 ()}
      {Lisp-Entry "newline" () 357 8 ()}
      {Lisp-Entry "write-char" () 358 8 ()}
      {Lisp-Entry "load" () 359 8 ()}
      {Lisp-Entry "transcript-on" () 360 8 ()}
      {Lisp-Entry "transcript-off" () 361 8 ()}}})
"keyword"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "foundation" "runtime" "keyword.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.foundation.runtime.keyword" () 37 8 ()
      {Lisp-Entry "jazz.keyword?" () 42 13 ("keyword?" "obj")}
      {Lisp-Entry "jazz.keyword->string" () 45 13 ("keyword->string" "keyword")}
      {Lisp-Entry "jazz.string->keyword" () 48 13 ("string->keyword" "string")}
      {Lisp-Entry "jazz.keyword?" () 52 13 ("keyword?" "obj")}
      {Lisp-Entry "jazz.keyword->string" () 55 13 ("keyword->string" "keyword")}
      {Lisp-Entry "jazz.string->keyword" () 58 13 ("string->keyword" "string")}
      {Lisp-Entry "jazz.keyword?" () 62 12 ("1" "%%string-length" "%%fx-" "%%string-ref" "%%eqv?" "%%symbol->string" "str" "let" "%%symbol?" "and" "obj")}
      {Lisp-Entry "jazz.keyword->string" () 68 12 ("1" "%%length" "%%fx-" "0" "%%substring" "%%symbol->string" "str" "let" "keyword")}
      {Lisp-Entry "jazz.string->keyword" () 73 12 ("%%string-append" "%%string->symbol" "string")}}})
"library"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "syntax" "library.scm"} {Time 128360604040000000L}
    {Lisp-Entry "core.library.syntax.library" () 37 8 ()
      {Lisp-Entry "library" () 40 20 ("jazz.expand-library" "rest")}}})
"literals"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "literals.fusion"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.literals" () 37 9 ("get-revision" "get-release" "get-stage" "get-minor" "get-major" "version" "parse-stage" "revision" "release" "stage" "receive" "minor" "major" "Version" "get-force?" "force?:" "force?" "Selection-Handler" "get-target" "target:" "get-execute" "execute:" "get-form-level" "form-level:" "get-method-name" "get-target-name" "handler" "properties:" "method-name:" "target-name:" "method-name" "target-name" "Event-Handler" "kind" "Event" "Cursor-Resource" "Icon-Resource" "res" "Bitmap-Resource" "Hyperlink-Style" "style" "Text-Style" "fold-exemplar" "fmt" "Format" "guid" "GUID" "get-reference" "get-remotable" "get-port" "get-host" "ior" "reference" "remotable" "port" "host" "IOR" "get-default-value" "get-scale" "get-precision" "get-size" "systype" "default-value" "scale" "precision" "size" "Systype" "datatype" "Datatype" "get-ip" ":ip" "ip" "get-address" ":address" "address" "get-origin" "case" "Host" "g" "Directory-Group" "Directory" "get-list" "File" "pen" "registered-pen" "name:" "Pen" "get-monospace?" "monospace?:" "get-underline?" "underline?:" "get-italic?" "italic?:" "get-bold?" "bold?:" "get-color" "color:" "get-point-size" "point-size:" "get-font-name" "font-name:" "f" "registered-font" "Font" "get-blue" "blue:" "get-green" "green:" "get-red" "red:" "get-name" "color" "registered-color" "others" "name" "bind-keywords" "Color" "get-locales" "locales" "apply" "Locales" "get-key" "get-modifiers" "shortcut" "last" "butlast" "Shortcut" "get-boxed" "box" "car" "null?" "if" "rest" "Box" "get-properties" "get-action-name" "get-action-context" "action" "properties" "action-name" "action-context" "Action" "get-end" "get-start" "end" "start" "Range" "get-bottom" "get-right" "get-top" "get-left" "r" "bottom" "right" "top" "left" "Rect" "get-col" "get-row" "c" "col" "row" "Cell" "get-height" "get-width" "d" "height" "width" "Dimension" "get-v" "get-h" "pt" "new" "v" "h" "lambda" "Point" "register-literal-constructor" "jazz")
      {Lisp-Entry "fold-literal" () 57 11 ()}
      {Lisp-Entry "fold-literal" () 71 11 ()}
      {Lisp-Entry "fold-literal" () 85 11 ()}
      {Lisp-Entry "fold-literal" () 99 11 ()}
      {Lisp-Entry "fold-literal" () 113 11 ()}
      {Lisp-Entry "fold-literal" () 127 11 ()}
      {Lisp-Entry "fold-literal" () 143 11 ()}
      {Lisp-Entry "fold-literal" () 157 11 ()}
      {Lisp-Entry "fold-literal" () 171 11 ()}
      {Lisp-Entry "Colors" () 180 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "register-color" () 184 13 ("Colors" "hashtable-set!" "color" "name")}
      {Lisp-Entry "registered-color" () 188 13 ("error" "false" "Colors" "hashtable-ref" "either" "name")}
      {Lisp-Entry "fold-literal" () 201 11 ()}
      {Lisp-Entry "Fonts" () 212 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "register-font" () 216 13 ("Fonts" "hashtable-set!" "font" "name")}
      {Lisp-Entry "registered-font" () 220 13 ("error" "false" "Fonts" "hashtable-ref" "either" "name")}
      {Lisp-Entry "fold-literal" () 233 11 ()}
      {Lisp-Entry "Pens" () 251 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "register-pen" () 255 13 ("Pens" "hashtable-set!" "pen" "name")}
      {Lisp-Entry "registered-pen" () 259 13 ("error" "false" "Pens" "hashtable-ref" "either" "name")}
      {Lisp-Entry "fold-literal" () 269 11 ()}
      {Lisp-Entry "fold-literal" () 283 11 ()}
      {Lisp-Entry "fold-literal" () 297 11 ()}
      {Lisp-Entry "fold-literal" () 311 11 ()}
      {Lisp-Entry "fold-literal" () 325 11 ()}
      {Lisp-Entry "fold-literal" () 344 11 ()}
      {Lisp-Entry "fold-literal" () 360 11 ()}
      {Lisp-Entry "fold-literal" () 374 11 ()}
      {Lisp-Entry "fold-literal" () 391 11 ()}
      {Lisp-Entry "fold-node" () 400 13 ("owned-properties" "get-name" "name:" "new" "node" "name")}
      {Lisp-Entry "fold-exemplar" () 411 13 ("owned-properties" "get-base" "base:" "get-name" "name:" "new" "exemplar" "name")}
      {Lisp-Entry "fold-literal" () 428 11 ()}
      {Lisp-Entry "fold-literal" () 442 11 ()}
      {Lisp-Entry "fold-literal" () 456 11 ()}
      {Lisp-Entry "fold-literal" () 470 11 ()}
      {Lisp-Entry "fold-literal" () 484 11 ()}
      {Lisp-Entry "fold-literal" () 498 11 ()}
      {Lisp-Entry "fold-literal" () 522 11 ()}
      {Lisp-Entry "fold-literal" () 536 11 ()}
      {Lisp-Entry "parse-stage" () 551 13 ("values" "integer?" "or" "cdr" "set!" "car" "prog1" "0" "null?" "if" "dynamic" "function" "next" "let" "rest")}
      {Lisp-Entry "fold-literal" () 563 11 ()}}})
"load"
 ({Lisp-File-Entry {File dev "jazz" "dev" "gambit" "test" "load.scm"} {Time 128366319460000000L}
    {Lisp-Entry "cnt" () 7 8 ()}
    {Lisp-Entry "cp" () 11 9 ("copy-done" "display" "1" "+" "cnt" "" "if" "number->string" "string-append" "copy-file" "newline" "copy" "list" "write" "0" "n" "iter" "let")}
    {Lisp-Entry "co" () 22 9 ("compile-done" "display" "1" "+" "cnt" "" "if" "rename-file" "number->string" "string-append" "compile-file" "newline" "compile" "list" "write" "0" "n" "iter" "let")}
    {Lisp-Entry "ld" () 34 9 ("newline" "load-done" "display" "1" "+" "cnt" "" "if" "number->string" "string-append" "load" "0" "n" "iter" "let" "time")}})
"loop"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "loop.scm"} {Time 128361444980000000L}
    {Lisp-Entry "jazz.dialect.syntax.loop" () 37 9 ("scheme")
      {Lisp-Entry "loop" () 132 9 ("expand-loop" "clauses")}
      {Lisp-Entry "noobject" () 136 8 ("noobject" "list")}
      {Lisp-Entry "expand-loop" () 140 9 ("set-cdr!" "jazz.null?" "cns" "ptr" "unless-actions" "when-actions" "body" "res" "what" ">" "rpt" "count" "then" "then-key" "first" "symbol?" "end" "decrease!" ">=" "downto" "below" "cddr" "cadr" "scan" "by" "update" "to" "from" "get-next" "done?" "Iterator" "is?" "itr" "val" "iterator" "iterate" "in-properties" "1" "+" "element" "" "length" "len" "vec" "vector" "in-vector" "error" "remainder" "keyword" "either" "in" "parse-for" "receive" "lst" "set-finally" "add-epilogue" "after" "add-after" "enqueue-list" "action-list" "add-actions" "action" "before" "add-before" "test" "add-test" "exit-safe" "values" "add-initial-test" "ext" "ret" "get-return/exit" "add-with" "list" "binding" "null?" "value" "type" "variable" "add-binding" "cons" "Unbound" "increase!" "->string" "string-append" "string->symbol" "symbol" "prefix" "unique" "begin" "eq?" "and" "let*" "queue-list" "cdr" "else" "process-finally" "process-return" "process-collect" "collect" "process-sum" "sum" "process-do" "do" "process-unless" "unless" "process-when" "when" "process-every" "every" "process-some" "some" "process-repeat" "repeat" "process-for" "for" "process-with" "with" "case" "rest" "key" "bind" "add-action" "if" "car" "clause" "not-null?" "while" "new-queue" "expand-loop" "process-clauses" "set!" "expand" "unwrap-syntax" "specifier?" "pair?" "not" "expr" "atom?" "append" "append!" "define" "0" "unique-rank" "finally" "epilogue" "afters" "actions" "befores" "withs" "tests" "exit" "noobject" "return" "bindings" "let" "clauses")}}})
"m"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "modules" "m.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.modules.m" () 37 9 ("jazz")}})
"macro"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "interpreter" "macro.fusion"} {Time 128369339460000000L}
    {Lisp-Entry "jazz.interpreter.macro" () 37 9 ("jazz")
      {Lisp-Entry "get-macro-toplevels" () 44 20 ("transformation" "parser")}
      {Lisp-Entry "get-macro-definitions" () 48 20 ("pattern" "transformation" "parser")}
      {Lisp-Entry "expand-macro" () 52 20 ("transformation" "parser" "case" "body" "head" "bind" "form")}
      {Lisp-Entry "parse-class" () 64 13 ("values" "true" "else" "cddr" "cadr" "set!" "case" "car" "form" "not" "while" "false" "done?" "unspecified" "body" "uses" "implements" "extends" "let" "name" "bind" "scan")}
      {Lisp-Entry "collect-patterns" () 81 13 ("cadr" "pattern" "car" "eq?" "pair?" "and" "when" "form" "dynamic" "function" "collect" "body")}
      {Lisp-Entry "expand-patterns" () 89 13 ("cdr" "pattern" "car" "eq?" "pair?" "and" "if" "form" "dynamic" "function" "map" "body")}
      {Lisp-Entry "generate-initialize" () 98 13 ("quote" "set!" "super" "initialize" "meta" "method" "list" "patterns")}
      {Lisp-Entry "parser" () 114 13 ("class" "expand-patterns" "generate-initialize" "initialize" "collect-patterns" "patterns" "let*" "parse-class" "uses" "implements" "extends" "name" "receive" "body")}
      {Lisp-Entry "transformation" () 134 13 ("class" "expand-patterns" "generate-initialize" "initialize" "collect-patterns" "patterns" "let*" "parse-class" "uses" "implements" "extends" "name" "receive" "body")}
      {Lisp-Entry "pattern" () 149 13 ("method" "rest")}
      {Lisp-Entry "get-macro-tabulation" () 158 20 ("else" "1" "pattern" "0" "transformation" "case" "symbol")}
      {Lisp-Entry "expand-macro-evaluations" () 167 20 ("set!" "JML-Transformation" "cadr" "add-pattern" "JML-Parser" "subtype?" "cond" "cdr" "set-car!" "pattern" "eq?" "pair?" "and" "when" "car" "form" "not-null?" "while" "scan" "let" "forms" "category")}
      {Lisp-Entry "walk-macro-declaration" () 181 20 ("false" "else" "walk-method" "pattern" "transformation" "true" "walk-category" "parser" "case" "walk-expressions?" "line" "doc" "expression" "keyword" "declaration" "context" "explorer" "symbol")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "syntax" "macro.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.base.syntax.macro" () 37 8 ()
      {Lisp-Entry "jazz.Macros" () 40 8 ("eq?" "%%make-hashtable")}
      {Lisp-Entry "jazz.register-macro" () 44 9 ("jazz.Macros" "%%hashtable-set!" "macro" "name")}
      {Lisp-Entry "jazz.get-macro" () 48 9 ("jazz.Macros" "%%hashtable-ref" "name")}
      {Lisp-Entry "jazz.need-macro" () 52 9 ("jazz.error" "jazz.get-macro" "or" "name")}
      {Lisp-Entry "jazz.expand-global-macro" () 57 9 ("%%cdr" "%%car" "jazz.need-macro" "apply" "form")}
      {Lisp-Entry "jazz.define-macro" () 61 15 ("body" "signature")}
      {Lisp-Entry "jazz.define-syntax" () 70 15 ("body" "signature")}
      {Lisp-Entry "jazz.generate-symbol" () 81 8 ("get-output-string" "%%string->symbol" "1" "%%fx+" "set!" "display" "open-output-string" "port" "%%car" "%%null?" "if" "prefix" "rest" "lambda" "0" "unique" "let")}}})
"macros"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "macros.scm"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.dialect.syntax.macros" () 37 9 ("scheme")
      {Lisp-Entry "constant" () 43 9 ("value" "name")}
      {Lisp-Entry "enumeration" () 47 9 ("begin" "definition" "declaration" "lambda" "map" "definitions" "let" "declarations" "name")}
      {Lisp-Entry "when" () 52 9 ("body" "test")}
      {Lisp-Entry "unless" () 59 9 ("body" "test")}
      {Lisp-Entry "prog1" () 65 9 ("begin" "generate-symbol" "value" "let" "body" "returned")}
      {Lisp-Entry "unwind-protect" () 72 9 ("protection" "body")}
      {Lisp-Entry "catch" () 78 9 ("error" "else" "cddr" "cadr" "car" "pair?" "x" "lambda" "call-with-catch" "symbol?" "cond" "body" "type")}
      {Lisp-Entry "assign!" () 91 9 ("set!" "generate-symbol" "val" "let" "value" "variable")}
      {Lisp-Entry "~" () 98 9 ("dispatch" "apply" "rest" "lambda" "generate-symbol" "obj" "let" "object" "name")}
      {Lisp-Entry "form>>" () 105 8 ("form")}
      {Lisp-Entry "expand-push!" () 132 9 ("cons" "set!" "list" "value" "location")}
      {Lisp-Entry "expand-pop!" () 138 9 ("cdr" "set!" "list" "location")}
      {Lisp-Entry "expand-assert" () 142 9 ("proc" "car" "error" "unless" "list" ":text" "->string" "append" "message" "expr" "let*" "null?" "if" "rest" "first")}
      {Lisp-Entry "expand-assert-type" () 153 9 ("type-name" "error" "is-not?" "when" "list" "let*" "cons" "generate-symbol" "value" "let" "type" "expr")}
      {Lisp-Entry "expand-error?" () 161 9 ("begin" "cons" "Error" "catch" "list" "generate-symbol" "err" "let" "body")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "syntax" "macros.scm"} {Time 128366822900000000L}
    {Lisp-Entry "core.base.syntax.macros" () 37 8 ()
      {Lisp-Entry "%%boolean" () 40 20 ("expr")}
      {Lisp-Entry "%%not-null?" () 44 20 ("expr")}
      {Lisp-Entry "%%when" () 53 20 ("body" "test")}
      {Lisp-Entry "%%while" () 65 20 ("jazz.expand-while" "apply" "rest")}
      {Lisp-Entry "jazz.expand-while" () 71 13 ("body" "test")}
      {Lisp-Entry "jazz.expand-while" () 75 13 ("begin" "if" "jazz.generate-symbol" "iter" "let" "body" "test")}
      {Lisp-Entry "%%kernel-assert" () 89 20 ("jazz.debug-kernel?" "jazz.expand-%%assert" "apply" "rest")}
      {Lisp-Entry "%%kernel-assertion" () 93 20 ("jazz.debug-kernel?" "jazz.expand-%%assertion" "apply" "rest")}
      {Lisp-Entry "%%assert" () 97 20 ("jazz.debug-user?" "jazz.expand-%%assert" "apply" "rest")}
      {Lisp-Entry "%%assertion" () 101 20 ("jazz.debug-user?" "jazz.expand-%%assertion" "apply" "rest")}
      {Lisp-Entry "jazz.expand-%%assert" () 105 9 ("jazz.expand-%%assertion" "apply" "get-output-string" "write" "display" "open-output-string" "port" "message" "let" "body" "assertion" "test?")}
      {Lisp-Entry "jazz.expand-%%assertion" () 114 9 ("begin" "jazz.simplify-begin" "error" "%%not" "if" "body" "message" "assertion" "test?")}
      {Lisp-Entry "jazz.bind" () 141 20 ("expand-car" "jazz.generate-symbol" "tree-symbol" "let" "body" "tree" "bindings")
        {Lisp-Entry "expand-car" () 143 11 ("expand-car" "jazz.generate-symbol" "car-symbol" "%%pair?" "expand-cdr" "%%symbol?" "cond" "%%car" "car-binding" "let" "body" "tree" "bindings")}
        {Lisp-Entry "expand-cdr" () 154 11 ("expand-car" "jazz.generate-symbol" "cdr-symbol" "%%pair?" "%%symbol?" "%%null?" "cond" "%%cdr" "cdr-binding" "let" "body" "tree" "bindings")}}}})
"metaclass"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "test" "metaclass.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.test.a" () 0 9 ("X" "new" "debug" "jazz")
      {Lisp-Entry "X-Class" () 2 7 ("Class")
        {Lisp-Entry "initialize" () 4 11 ("yoo" "self" "debug" "nextmethod")}}
      {Lisp-Entry "X" () 8 7 ("Object" "X-Class")
        {Lisp-Entry "initialize" () 10 11 ("nextmethod")}}}})
"module"
 ({Lisp-File-Entry {File dev "jazz" "kernel" "module.scm"} {Time 128366822880000000L}
    {Lisp-Entry "jazz.debug-kernel?" () 49 12 ()}
    {Lisp-Entry "jazz.debug-user?" () 51 12 ()}
    {Lisp-Entry "jazz.debug-kernel?" () 54 12 ()}
    {Lisp-Entry "jazz.debug-user?" () 56 12 ()}
    {Lisp-Entry "jazz.debug-kernel?" () 59 12 ()}
    {Lisp-Entry "jazz.debug-user?" () 61 12 ()}
    {Lisp-Entry "jazz.declares" () 72 13 ("kind")}
    {Lisp-Entry "jazz.load-filename" () 92 9 ("rest" "lambda" "##load" "filename")}
    {Lisp-Entry "jazz.load-indent" () 96 8 ("0" "make-parameter")}
    {Lisp-Entry "jazz.with-verbose" () 100 9 ("verbose-done" "jazz.done-verbose?" "2" "+" "jazz.load-indent" "parameterize" "result" "let" "verbose-load" "begin" "if" "proc" "filename" "action" "flag")
      {Lisp-Entry "verbose-load" () 101 11 ("newline" "filename" "action" "jazz.load-indent" "make-string" "display")}
      {Lisp-Entry "verbose-done" () 110 11 ("newline" "jazz.load-indent" "make-string" "display")}}
    {Lisp-Entry "jazz.load-module-system" () 133 9 ("jazz.load-filename" "string-length" "5" "substring" "jazz.load-verbose?" "jazz.with-verbose" "bin" "src" "lambda" "jazz.with-load-src/bin" "kernel-load")
      {Lisp-Entry "kernel-load" () 134 11 ("string-append" "jazz.load-filename" "lambda" "jazz.load-verbose?" "jazz.with-verbose" "filename")}}
    {Lisp-Entry "jazz.load-kernel" () 160 9 ("jazz.jazz-readtable" "lambda" "jazz.dialect" "jazz.register-reader-extensions" "jazz.load-module-system")}
    {Lisp-Entry "jazz.boot-kernel" () 165 8 ("set!" "jazz.load-kernel" "begin" "not" "if" "lambda" "loaded?" "let")}})
"object"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "syntax" "object.scm"} {Time 128366822000000000L}
    {Lisp-Entry "core.class.syntax.object" () 37 8 ()
      {Lisp-Entry "%%object-content" () 42 12 ("0")}
      {Lisp-Entry "%%object-marker" () 46 11 ()}
      {Lisp-Entry "%%object-content" () 49 11 ("1")}
      {Lisp-Entry "jazz.object-class" () 53 8 ("%%object-content")}
      {Lisp-Entry "jazz.object-size" () 57 8 ("1" "jazz.object-class" "%%fx+")}
      {Lisp-Entry "%%subtype-jazz" () 63 24 ("7")}
      {Lisp-Entry "%%object?" () 66 24 ("expr")}
      {Lisp-Entry "%%object" () 69 24 ("rest")}
      {Lisp-Entry "%%make-object" () 72 24 ("size")}
      {Lisp-Entry "%%object-length" () 75 24 ("##vector-length" "%%object?" "%%kernel-assert" "jazz.generate-symbol" "obj" "let" "jazz.debug-kernel?" "if" "object")}
      {Lisp-Entry "%%object-ref" () 83 24 ("##vector-ref" "##vector-length" "##fixnum.<" "%%object?" "%%kernel-assert" "rnk" "jazz.generate-symbol" "obj" "let" "jazz.debug-kernel?" "if" "n" "object")}
      {Lisp-Entry "%%object-set!" () 94 24 ("##vector-set!" "##vector-length" "##fixnum.<" "%%object?" "%%kernel-assert" "rnk" "jazz.generate-symbol" "obj" "let" "jazz.debug-kernel?" "if" "value" "n" "object")}
      {Lisp-Entry "%%object?" () 106 23 ("expr")}
      {Lisp-Entry "%%object" () 111 23 ("rest")}
      {Lisp-Entry "%%make-object" () 114 23 ("%%object-marker" "0" "%%object-set!" "%%make-vector" "jazz.generate-symbol" "object" "let" "size")}
      {Lisp-Entry "%%object-length" () 120 23 ("vector")}
      {Lisp-Entry "%%object-ref" () 123 23 ("n" "vector")}
      {Lisp-Entry "%%object-set!" () 126 23 ("value" "n" "vector")}
      {Lisp-Entry "%%slot-offset" () 130 20 ("slot-rank")}
      {Lisp-Entry "%%get-object-slot" () 134 20 ("slot-rank" "object")}
      {Lisp-Entry "%%set-object-slot" () 138 20 ("value" "slot-rank" "object")}}})
"org.apache.bcel.Repository"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "java" "org" "apache" "bcel" "org.apache.bcel.Repository.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.Java.org.apache.bcel.org.apache.bcel.Repository" () 37 9 ("jazz")
      {Lisp-Entry "org.apache.bcel.Repository" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "lookupClass" () 46 75 ()}}}})
"org.apache.bcel.classfile.AccessFlags"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "java" "org" "apache" "bcel" "classfile" "org.apache.bcel.classfile.AccessFlags.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.Java.org.apache.bcel.classfile.org.apache.bcel.classfile.AccessFlags" () 37 9 ("jazz")
      {Lisp-Entry "org.apache.bcel.classfile.AccessFlags" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "isFinal" () 46 45 ()}}}})
"org.apache.bcel.classfile.ClassParser"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "java" "org" "apache" "bcel" "classfile" "org.apache.bcel.classfile.ClassParser.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.Java.org.apache.bcel.classfile.org.apache.bcel.classfile.ClassParser" () 37 9 ("jazz")
      {Lisp-Entry "org.apache.bcel.classfile.ClassParser" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "parse" () 46 70 ()}}}})
"org.apache.bcel.classfile.FieldOrMethod"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "java" "org" "apache" "bcel" "classfile" "org.apache.bcel.classfile.FieldOrMethod.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.Java.org.apache.bcel.classfile.org.apache.bcel.classfile.FieldOrMethod" () 37 9 ("jazz")
      {Lisp-Entry "org.apache.bcel.classfile.FieldOrMethod" () 43 7 ("Language" "Java" "org.apache.bcel.classfile.AccessFlags")
        {Lisp-Entry "getName" () 46 45 ()}
        {Lisp-Entry "getSignature" () 47 45 ()}}}})
"org.apache.bcel.classfile.JavaClass"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "java" "org" "apache" "bcel" "classfile" "org.apache.bcel.classfile.JavaClass.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.Java.org.apache.bcel.classfile.org.apache.bcel.classfile.JavaClass" () 37 9 ("jazz")
      {Lisp-Entry "org.apache.bcel.classfile.JavaClass" () 43 7 ("Language" "Java" "org.apache.bcel.classfile.AccessFlags")
        {Lisp-Entry "<init>" () 46 11 ()}
        {Lisp-Entry "<init>" () 47 83 ()}
        {Lisp-Entry "<init>" () 48 83 ()}
        {Lisp-Entry "accept" () 49 83 ()}
        {Lisp-Entry "Debug" () 50 83 ()}
        {Lisp-Entry "dump" () 51 83 ()}
        {Lisp-Entry "dump" () 53 83 ()}
        {Lisp-Entry "getBytes" () 54 83 ()}
        {Lisp-Entry "dump" () 56 83 ()}
        {Lisp-Entry "dump" () 58 83 ()}
        {Lisp-Entry "getAttributes" () 59 83 ()}
        {Lisp-Entry "getClassName" () 60 83 ()}
        {Lisp-Entry "getPackageName" () 61 83 ()}
        {Lisp-Entry "getClassNameIndex" () 62 83 ()}
        {Lisp-Entry "getConstantPool" () 63 83 ()}
        {Lisp-Entry "getFields" () 64 83 ()}
        {Lisp-Entry "getFileName" () 65 83 ()}
        {Lisp-Entry "getInterfaceNames" () 66 83 ()}
        {Lisp-Entry "getInterfaceIndices" () 67 83 ()}
        {Lisp-Entry "getMajor" () 68 83 ()}
        {Lisp-Entry "getMethods" () 69 83 ()}
        {Lisp-Entry "getMethod" () 70 83 ()}
        {Lisp-Entry "getMinor" () 71 83 ()}
        {Lisp-Entry "getSourceFileName" () 72 83 ()}
        {Lisp-Entry "getSuperclassName" () 73 83 ()}
        {Lisp-Entry "getSuperclassNameIndex" () 74 83 ()}
        {Lisp-Entry "setAttributes" () 75 83 ()}
        {Lisp-Entry "setClassName" () 76 83 ()}
        {Lisp-Entry "setClassNameIndex" () 77 83 ()}
        {Lisp-Entry "setConstantPool" () 78 83 ()}
        {Lisp-Entry "setFields" () 79 83 ()}
        {Lisp-Entry "setFileName" () 80 83 ()}
        {Lisp-Entry "setInterfaceNames" () 81 83 ()}
        {Lisp-Entry "setInterfaces" () 82 83 ()}
        {Lisp-Entry "setMajor" () 83 83 ()}
        {Lisp-Entry "setMethods" () 84 83 ()}
        {Lisp-Entry "setMinor" () 85 83 ()}
        {Lisp-Entry "setSourceFileName" () 86 83 ()}
        {Lisp-Entry "setSuperclassName" () 87 83 ()}
        {Lisp-Entry "setSuperclassNameIndex" () 88 83 ()}
        {Lisp-Entry "toString" () 89 83 ()}
        {Lisp-Entry "indent" () 90 83 ()}
        {Lisp-Entry "copy" () 91 83 ()}
        {Lisp-Entry "isSuper" () 92 83 ()}
        {Lisp-Entry "isClass" () 93 83 ()}
        {Lisp-Entry "getSource" () 94 83 ()}
        {Lisp-Entry "getRepository" () 95 83 ()}
        {Lisp-Entry "setRepository" () 96 83 ()}
        {Lisp-Entry "instanceOf" () 97 83 ()}
        {Lisp-Entry "implementationOf" () 98 83 ()}
        {Lisp-Entry "getSuperClass" () 99 83 ()}
        {Lisp-Entry "getSuperClasses" () 100 83 ()}
        {Lisp-Entry "getInterfaces" () 101 83 ()}
        {Lisp-Entry "getAllInterfaces" () 102 83 ()}
        {Lisp-Entry "<clinit>" () 103 83 ()}}}})
"org.apache.bcel.classfile.Method"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "java" "org" "apache" "bcel" "classfile" "org.apache.bcel.classfile.Method.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.Java.org.apache.bcel.classfile.org.apache.bcel.classfile.Method" () 37 9 ("jazz")
      {Lisp-Entry "org.apache.bcel.classfile.Method" () 43 7 ("Language" "Java" "org.apache.bcel.classfile.FieldOrMethod")
        {Lisp-Entry "getReturnType" () 46 74 ()}
        {Lisp-Entry "getArgumentTypes" () 47 74 ()}}}})
"org.apache.bcel.generic.Type"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "javaparser" "java" "org" "apache" "bcel" "generic" "org.apache.bcel.generic.Type.fusion"} {Time 128366795620000000L}
    {Lisp-Entry "jazz.javaparser.Java.org.apache.bcel.generic.org.apache.bcel.generic.Type" () 37 9 ("jazz")
      {Lisp-Entry "org.apache.bcel.generic.Type" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "getSignature" () 46 56 ()}}}})
"org.jazz.samples"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.samples" "org.jazz.samples.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "?" () 37 4 ()}
    {Lisp-Entry "org.jazz.samples" () 40 7 ("tag-source:" "Sample" "org.jazz.samples" "File" "source:" "name:" "Product")}})
"org.jazz.tutorials"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.tutorials" "org.jazz.tutorials.fusion"} {Time 128360675600000000L}
    {Lisp-Entry "?" () 37 4 ()}
    {Lisp-Entry "org.jazz.tutorials" () 40 7 ("Mandelbrot" "org.jazz.tutorials" "File" "source:" "Complex" "name:" "Product")}})
"org.jazz.website"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz.website" "org.jazz.website.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "?" () 37 4 ()}
    {Lisp-Entry "org.jazz.website" () 40 7 ("org.jazz.website" "File" "tag-source:" "name:" "Product")}})
"org.jazzscheme.java.Runtime"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "org" "jazzscheme" "java" "org.jazzscheme.java.Runtime.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.org.jazzscheme.java.org.jazzscheme.java.Runtime" () 37 9 ("jazz")
      {Lisp-Entry "org.jazzscheme.java.Runtime" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "getRuntime" () 46 62 ()}
        {Lisp-Entry "forName" () 47 62 ()}
        {Lisp-Entry "getConnection" () 48 62 ()}}}})
"org.jazzscheme.test.Test"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "org" "jazzscheme" "test" "org.jazzscheme.test.Test.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.org.jazzscheme.test.org.jazzscheme.test.Test" () 37 9 ("jazz")
      {Lisp-Entry "org.jazzscheme.test.Test" () 43 7 ("Language" "Java" "java.lang.Object")
        {Lisp-Entry "<init>" () 46 11 ()}
        {Lisp-Entry "<init>" () 47 44 ()}
        {Lisp-Entry "<init>" () 48 44 ()}
        {Lisp-Entry "<init>" () 49 44 ()}
        {Lisp-Entry "<init>" () 50 44 ()}
        {Lisp-Entry "<init>" () 51 44 ()}
        {Lisp-Entry "cj" () 52 44 ()}
        {Lisp-Entry "test" () 53 44 ()}
        {Lisp-Entry "test" () 54 44 ()}
        {Lisp-Entry "test" () 55 44 ()}
        {Lisp-Entry "testJDBC" () 56 44 ()}}}})
"org.jazzscheme.test.X"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "java" "java" "org" "jazzscheme" "test" "org.jazzscheme.test.X.fusion"} {Time 128366795500000000L}
    {Lisp-Entry "jazz.java.Java.org.jazzscheme.test.org.jazzscheme.test.X" () 37 9 ("jazz")
      {Lisp-Entry "org.jazzscheme.test.X" () 43 7 ("*" "y" "x" "Language" "Java" "java.lang.Object")
        {Lisp-Entry "test" () 46 40 ()}}}})
"org.jedi"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jedi" "org.jedi.fusion"} {Time 128366795420000000L}
    {Lisp-Entry "?" () 37 4 ()}
    {Lisp-Entry "org.jedi" () 40 7 ("tag-source:" "source:" "name:" "editable?:" "org.jedi" "File" "documentation:" "Product")}})
"output"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "runtime" "output.scm"} {Time 128369330600000000L}
    {Lisp-Entry "core.class.runtime.output" () 37 8 ("display" "object->serial-number" "serial-number" "%%get-object-class" "%%get-category-name" "class-name" "let" ":reader" "and" "obj" "port" "jazz.write-jazz" "jazz.dialect.language.Object.print" "primordial-exception-handler" "jazz.use-print?" "set!" "exc" "lambda" "current-exception-handler" "jazz.debug-print?" "if")
      {Lisp-Entry "primordial-exception-handler" () 41 8 ("current-exception-handler")}
      {Lisp-Entry "jazz.dialect.language.Object.print" () 52 8 ()}
      {Lisp-Entry "jazz.output-mode" () 58 8 ()}
      {Lisp-Entry "jazz.display" () 62 9 (":human" "jazz.output-value" "output" "value")}
      {Lisp-Entry "jazz.write" () 66 9 (":reader" "jazz.output-value" "output" "value")}
      {Lisp-Entry "jazz.print" () 70 9 ("jazz.error" "else" "write" ":describe" ":text" ":reader" "display" ":human" "case" "detail" "output" "value")}
      {Lisp-Entry "jazz.->string" () 77 9 ("get-output-string" "jazz.output-mode" "jazz.output-value" "open-output-string" "output" "let" "else" "%%values?" "%%unspecified?" "cond" "value")}
      {Lisp-Entry "jazz.output-value" () 88 9 ("jazz.write-jazz" "else" "jazz.dialect.language.Object.print" "jazz.use-print?" "and" "jazz.print" "jazz.primitive?" "jazz.output-list" "%%pair?" "%%null?" "or" "cond" "detail" "output" "value")}
      {Lisp-Entry "jazz.output-list" () 99 9 ("jazz.output-list-content" "display" "detail" "output" "lst")}
      {Lisp-Entry "jazz.output-list-content" () 105 9 ("begin" "display" "%%pair?" "%%cdr" "set!" "%%car" "jazz.output-value" "and" "%%while" "done?" "scan" "let" "%%null?" "%%not" "if" "detail" "output" "lst")}
      {Lisp-Entry "jazz.debug" () 121 9 ("newline" "lambda" "for-each" "jazz.->string" "display" "rest" "expr")}
      {Lisp-Entry "jazz.bootstrap-output-value" () 130 9 ("jazz.->string" "display" "output" "value")}
      {Lisp-Entry "jazz.pretty-print" () 152 13 ("pretty-print" "apply" "rest" "expr")}
      {Lisp-Entry "jazz.pretty-print" () 156 13 ("pretty-print" "apply" "rest" "expr")}
      {Lisp-Entry "jazz.pretty-print" () 160 12 ("newline" "display" "rest" "expr")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "output.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.base.runtime.output" () 37 8 ("error" "else" ":reader" ":human" "case" "detail" "port" "obj" "lambda" "jazz.print" "write" "jazz.write" "display" "jazz.display" "set!")
      {Lisp-Entry "jazz.display" () 40 8 ()}
      {Lisp-Entry "jazz.write" () 46 8 ()}
      {Lisp-Entry "jazz.print" () 52 8 ()}}})
"output-hook"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "runtime" "output-hook.scm"} {Time 128360792300000000L}
    {Lisp-Entry "core.class.runtime.output-hook" () 37 8 ("##default-wr" "else" "macro-writeenv-port" "##jazz?" "and" "cond" "obj" "we" "lambda" "##wr" "jazz.write-jazz" "set!" "include")
      {Lisp-Entry "jazz.write-jazz" () 45 12 ()}}})
"p"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "modules" "p.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.modules.p" () 37 9 ("jazz")}})
"pens"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "literals" "pens.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.platform.literals.pens" () 37 9 ("Slide-Bullet" "Light-Background" "Outline-Border" "Dark" "Medium" "Light" "Dark-Gray" "Light-Gray" "Gray" "White" "Color" "color:" "name:" "Pen" "new" "Black" "register-pen" "jazz")}})
"primitives"
 ({Lisp-File-Entry {File dev "jazz" "kernel" "module" "primitives.scm"} {Time 128366821600000000L}
    {Lisp-Entry "%%boolean?" () 53 18 ("obj")}
    {Lisp-Entry "%%not" () 56 18 ("##not" "not" "jazz.debug-kernel?" "if" "expr")}
    {Lisp-Entry "%%char?" () 71 19 ("##char?" "char?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%complex?" () 86 19 ("##complex?" "complex?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%procedure?" () 101 18 ("##procedure?" "procedure?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%apply" () 106 18 ("##apply" "apply" "jazz.debug-kernel?" "if" "lst" "proc")}
    {Lisp-Entry "%%eq?" () 121 18 ("##eq?" "eq?" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%neq?" () 126 18 ("y" "x")}
    {Lisp-Entry "%%eqv?" () 129 18 ("##eqv?" "eqv?" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%equal?" () 134 18 ("##equal?" "equal?" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%eq?" () 140 18 ("y" "x")}
    {Lisp-Entry "%%fixnum?" () 151 18 ("##fixnum?" "fixnum?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%fx=" () 156 18 ("##fixnum.=" "=" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fx<" () 161 18 ("##fixnum.<" "" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fx<=" () 166 18 ("##fixnum.<=" "" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fx>" () 171 18 ("##fixnum.>" ">" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fx>=" () 176 18 ("##fixnum.>=" ">=" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fx+" () 181 18 ("##fixnum.+" "+" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fx-" () 186 18 ("##fixnum.-" "-" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fx*" () 191 18 ("##fixnum.*" "*" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fx>" () 197 18 ("y" "x")}
    {Lisp-Entry "%%fx+" () 200 18 ("y" "x")}
    {Lisp-Entry "%%flonum?" () 211 18 ("##flonum?" "flonum?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%fl=" () 216 18 ("##flonum.=" "=" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl<" () 221 18 ("##flonum.<" "" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl<=" () 226 18 ("##flonum.<=" "" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl>" () 231 18 ("##flonum.>" ">" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl>=" () 236 18 ("##flonum.>=" ">=" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl+" () 241 18 ("##flonum.+" "+" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl-" () 246 18 ("##flonum.-" "-" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl*" () 251 18 ("##flonum.*" "*" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl/" () 256 18 ("##flonum./" "/" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%fl>" () 262 18 ("y" "x")}
    {Lisp-Entry "%%fl+" () 265 18 ("y" "x")}
    {Lisp-Entry "%%foreign?" () 276 18 ("obj")}
    {Lisp-Entry "%%hashtable?" () 289 19 ("obj")}
    {Lisp-Entry "%%make-hashtable" () 292 19 ("hash" "test")}
    {Lisp-Entry "%%hashtable-ref" () 297 19 ("##table-ref" "table-ref" "jazz.debug-kernel?" "if" "default" "key" "hashtable")}
    {Lisp-Entry "%%hashtable-set!" () 302 19 ("##table-set!" "table-set!" "jazz.debug-kernel?" "if" "value" "key" "hashtable")}
    {Lisp-Entry "%%hashtable-clear" () 307 19 ("key" "hashtable")}
    {Lisp-Entry "%%hashtable-keys" () 310 19 ("hashtable")}
    {Lisp-Entry "%%hashtable-length" () 313 19 ("hashtable")}
    {Lisp-Entry "%%iterate-hashtable" () 316 19 ("proc" "hashtable")}
    {Lisp-Entry "%%alist->hashtable" () 319 19 ("test" "alist")}
    {Lisp-Entry "%%hashtable->alist" () 322 19 ("hashtable")}
    {Lisp-Entry "%%hashtable-entries" () 325 19 ("hashtable")}
    {Lisp-Entry "%%copy-hashtable" () 328 19 ("hashtable")}
    {Lisp-Entry "%%keyword?" () 341 19 ("##keyword?" "keyword?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%string->keyword" () 346 19 ("##string->keyword" "string->keyword" "jazz.debug-kernel?" "if" "str")}
    {Lisp-Entry "%%keyword->string" () 351 18 ("##keyword->string" "keyword->string" "jazz.debug-kernel?" "if" "keyword")}
    {Lisp-Entry "%%null?" () 366 19 ("##null?" "null?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%pair?" () 371 19 ("##pair?" "pair?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%car" () 376 19 ("##car" "car" "jazz.debug-kernel?" "if" "pair")}
    {Lisp-Entry "%%cdr" () 381 19 ("##cdr" "cdr" "jazz.debug-kernel?" "if" "pair")}
    {Lisp-Entry "%%set-car!" () 386 19 ("##set-car!" "set-car!" "jazz.debug-kernel?" "if" "val" "pair")}
    {Lisp-Entry "%%set-cdr!" () 391 19 ("##set-cdr!" "set-cdr!" "jazz.debug-kernel?" "if" "val" "pair")}
    {Lisp-Entry "%%caar" () 396 19 ("##caar" "caar" "jazz.debug-kernel?" "if" "pair")}
    {Lisp-Entry "%%cadr" () 401 19 ("##cadr" "cadr" "jazz.debug-kernel?" "if" "pair")}
    {Lisp-Entry "%%cdar" () 406 19 ("##cdar" "cdar" "jazz.debug-kernel?" "if" "pair")}
    {Lisp-Entry "%%cddr" () 411 19 ("##cddr" "cddr" "jazz.debug-kernel?" "if" "pair")}
    {Lisp-Entry "%%length" () 416 19 ("##length" "length" "jazz.debug-kernel?" "if" "lst")}
    {Lisp-Entry "%%memq" () 421 19 ("##memq" "memq" "jazz.debug-kernel?" "if" "lst" "obj")}
    {Lisp-Entry "%%memv" () 426 19 ("lst" "obj")}
    {Lisp-Entry "%%cons" () 429 19 ("##cons" "cons" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%list" () 434 19 ("##list" "list" "jazz.debug-kernel?" "if" "rest")}
    {Lisp-Entry "%%append" () 439 19 ("##append" "append" "jazz.debug-kernel?" "if" "y" "x")}
    {Lisp-Entry "%%reverse" () 444 19 ("##reverse" "reverse" "jazz.debug-kernel?" "if" "lst")}
    {Lisp-Entry "%%memq" () 450 18 ("lst" "obj")}
    {Lisp-Entry "%%number?" () 461 19 ("##number?" "number?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%integer?" () 466 19 ("##integer?" "integer?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%real?" () 471 19 ("##real?" "real?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%port?" () 486 19 ("##port?" "port?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%eof-object?" () 491 19 ("##eof-object?" "eof-object?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%rational?" () 506 19 ("##rational?" "rational?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%string?" () 521 19 ("##string?" "string?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%string-length" () 526 19 ("##string-length" "string-length" "jazz.debug-kernel?" "if" "str")}
    {Lisp-Entry "%%string-ref" () 531 18 ("##string-ref" "string-ref" "jazz.debug-kernel?" "if" "pos" "str")}
    {Lisp-Entry "%%string-set!" () 536 18 ("##string-set!" "string-set!" "jazz.debug-kernel?" "if" "val" "pos" "str")}
    {Lisp-Entry "%%substring" () 541 18 ("##substring" "substring" "jazz.debug-kernel?" "if" "end" "start" "str")}
    {Lisp-Entry "%%string-append" () 546 18 ("##string-append" "string-append" "jazz.debug-kernel?" "if" "rest")}
    {Lisp-Entry "%%symbol?" () 561 19 ("##symbol?" "symbol?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%string->symbol" () 566 19 ("##string->symbol" "string->symbol" "jazz.debug-kernel?" "if" "str")}
    {Lisp-Entry "%%symbol->string" () 571 18 ("##symbol->string" "symbol->string" "jazz.debug-kernel?" "if" "symbol")}
    {Lisp-Entry "jazz.define-syntax" () 586 19 ("transformer" "name")}
    {Lisp-Entry "%%source-code" () 590 13 ("##source-code" "##source?" "if" "expr")}
    {Lisp-Entry "%%desourcify" () 595 13 ("##desourcify" "expr")}
    {Lisp-Entry "%%sourcify" () 598 13 ("##sourcify" "src" "expr")}
    {Lisp-Entry "%%values?" () 609 19 ("obj")}
    {Lisp-Entry "%%vector?" () 621 19 ("##vector?" "vector?" "jazz.debug-kernel?" "if" "obj")}
    {Lisp-Entry "%%vector" () 626 18 ("##vector" "vector" "jazz.debug-kernel?" "if" "rest")}
    {Lisp-Entry "%%make-vector" () 631 18 ("##make-vector" "make-vector" "jazz.debug-kernel?" "if" "size")}
    {Lisp-Entry "%%vector-length" () 636 18 ("##vector-length" "vector-length" "jazz.debug-kernel?" "if" "vector")}
    {Lisp-Entry "%%vector-ref" () 641 18 ("##vector-ref" "vector-ref" "jazz.debug-kernel?" "if" "n" "vector")}
    {Lisp-Entry "%%vector-set!" () 646 18 ("##vector-set!" "vector-set!" "jazz.debug-kernel?" "if" "value" "n" "vector")}
    {Lisp-Entry "%%vector?" () 652 18 ("obj")}
    {Lisp-Entry "%%vector" () 655 18 ("rest")}
    {Lisp-Entry "%%make-vector" () 658 18 ("size")}
    {Lisp-Entry "%%vector-length" () 661 18 ("vector")}
    {Lisp-Entry "%%vector-ref" () 664 18 ("n" "vector")}
    {Lisp-Entry "%%vector-set!" () 667 18 ("value" "n" "vector")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "walker" "primitives.fusion"} {Time 128366795540000000L}
    {Lisp-Entry "jazz.language.primitive" () 37 9 ("jazz")}})
"q"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validation" "modules" "q.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validation.modules.q" () 37 9 ("jazz")}})
"quit"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "quit.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.base.runtime.quit" () 37 8 ()
      {Lisp-Entry "jazz.quit" () 42 13 ("exit")}
      {Lisp-Entry "jazz.quit" () 46 13 ("exit")}}})
"read"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "base" "runtime" "read.scm"} {Time 128366793520000000L}
    {Lisp-Entry "core.base.runtime.read" () 37 8 ()
      {Lisp-Entry "jazz.eof-object" () 42 13 ()}}})
"reader"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "reader.scm"} {Time 128366319480000000L}
    {Lisp-Entry "jazz.dialect.core.reader" () 37 8 ("include")
      {Lisp-Entry "jazz.make-jazz-readtable" () 45 13 ("jazz.jazzify-readtable!" "##main-readtable" "##readtable-copy" "readtable" "let")}
      {Lisp-Entry "jazz.jazzify-readtable!" () 51 13 ("jazz.read-delimited-string" "##readtable-char-sharp-handler-set!" "jazz.read-comment" "jazz.read-literal" "##readtable-char-class-set!" "jazz.named-chars" "macro-readtable-named-char-table" "append" "macro-readtable-named-char-table-set!" "readtable")}
      {Lisp-Entry "jazz.named-chars" () 58 12 ()}
      {Lisp-Entry "jazz.in-expression-comment?" () 109 12 ("make-parameter")}
      {Lisp-Entry "jazz.read-literal" () 112 13 ("##desourcify" "map" "jazz.construct-literal" "jazz.in-expression-comment?" "jazz.parse-read?" "or" "if" "macro-readenv-wrap" "##build-list" "lst" "macro-readenv-port" "read-char" "##readenv-current-filepos" "start-pos" "let" "c" "re")}
      {Lisp-Entry "jazz.read-comment" () 122 13 ("##read-datum-or-label-or-none-or-dot" "read" "read-char" "jazz.in-expression-comment?" "parameterize" "macro-readenv-port" "port" "let" "c" "re")}
      {Lisp-Entry "jazz.read-delimited-string" () 131 13 ("write-char" "else" "get-output-string" "peek-char" "%%eqv?" "and" "%%eof-object?" "cond" "c" "iter" "open-output-string" "output" "read-char" "macro-readenv-port" "port" "let" "start-pos" "next" "re")}
      {Lisp-Entry "jazz.jazz-readtable" () 148 12 ("jazz.make-jazz-readtable")}
      {Lisp-Entry "jazz.char-symbol" () 152 13 ("%%car" "and" "jazz.rassq" "res" "jazz.jazz-readtable" "macro-readtable-named-char-table" "table" "let" "char")}}})
"runtime"
 ({Lisp-File-Entry {File dev "jazz" "kernel" "module" "runtime.scm"} {Time 128367191060000000L}
    {Lisp-Entry "jazz.kernel-error" () 51 9 ("error" "apply" "rest")}
    {Lisp-Entry "jazz.file-exists?" () 62 13 ("file-exists?" "filename")}
    {Lisp-Entry "jazz.directory-exists?" () 65 13 ("file-exists?" "filename")}
    {Lisp-Entry "jazz.find-char-reversed" () 76 9 ("else" "0" "%%fx>" "%%string-ref" "char=?" "cond" "1" "%%string-length" "%%fx-" "n" "iter" "let" "str" "c")}
    {Lisp-Entry "jazz.split-filename" () 86 9 ("%%string-length" "1" "%%fx+" "0" "%%substring" "%%not" "if" "jazz.find-char-reversed" "pos" "let" "proc" "filename")}
    {Lisp-Entry "jazz.load-file" () 101 13 ("jazz.load-bin" "jazz.load-src" "jazz.with-load-src/bin" "filename")}
    {Lisp-Entry "jazz.with-file-src/bin" () 107 13 ("bintime" "file-last-modification-time" "time->seconds" "and" "srctime" "jazz.determine-module-binary" "bin" "jazz.determine-module-source" "src" "let" "proc" "filename")}
    {Lisp-Entry "jazz.with-load-src/bin" () 115 13 ("else" ">" "or" "error" "%%not" "and" "cond" "bintime" "bin" "srctime" "src" "lambda" "jazz.with-file-src/bin" "bin-proc" "src-proc" "filename")}
    {Lisp-Entry "jazz.walk-for" () 126 12 ("make-parameter")}
    {Lisp-Entry "jazz.load-src" () 130 13 ("jazz.load-filename" "interpret" "jazz.walk-for" "parameterize" "lambda" "%%string-length" "6" "%%substring" "jazz.load-verbose?" "jazz.with-verbose" "src")}
    {Lisp-Entry "jazz.load-bin" () 137 13 ("jazz.load-filename" "interpret" "jazz.walk-for" "parameterize" "lambda" "%%string-length" "5" "%%substring" "jazz.load-verbose?" "jazz.with-verbose" "bin")}
    {Lisp-Entry "jazz.require-module-source" () 144 13 ("error" "jazz.determine-module-source" "or" "filename")}
    {Lisp-Entry "jazz.determine-module-source" () 149 13 ("or" "file-exists?" "if" "%%string-append" "path" "ext" "lambda" "try" "let" "filename")}
    {Lisp-Entry "jazz.determine-module-bindir" () 162 13 ("%%string-append" "name" "dirname" "lambda" "jazz.split-filename" "filename")}
    {Lisp-Entry "jazz.determine-module-binary" () 168 13 ("%%fx+" "next-path" "last-path" "2" "next" "iter" "file-exists?" "%%not" "if" "1" "o1" "number->string" "%%string-append" "n" "lambda" "try" "let" "filename")}
    {Lisp-Entry "jazz.PackageDirs" () 189 8 ()}
    {Lisp-Entry "jazz.determine-module-filename" () 197 9 ("%%cdr" "else" "%%equal?" "%%not" "and" "jazz.directory-exists?" "cond" "prefixed-dir" "%%string-append" "prefixed-path" "%%car" "prefix" "jazz.kernel-error" "%%null?" "if" "jazz.PackageDirs" "scan" "iter" "name" "dir" "lambda" "jazz.split-filename" "%%symbol->string" "jazz.string-replace" "path" "let" "module-name")}
    {Lisp-Entry "jazz.string-replace" () 215 9 ("%%string-set!" "%%string-ref" "%%eqv?" "begin" "0" "%%fx>=" "if" "1" "%%string-length" "%%fx-" "n" "iter" "string-copy" "cpy" "let" "new" "old" "str")}
    {Lisp-Entry "jazz.Unloaded-State" () 231 8 ()}
    {Lisp-Entry "jazz.Loading-State" () 234 8 ()}
    {Lisp-Entry "jazz.Loaded-State" () 237 8 ()}
    {Lisp-Entry "jazz.Environment" () 246 8 ("eq?" "%%make-hashtable")}
    {Lisp-Entry "jazz.get-environment" () 250 9 ("jazz.Environment")}
    {Lisp-Entry "jazz.get-environment-module" () 254 9 ("jazz.Unloaded-State" "jazz.Environment" "%%hashtable-ref" "name")}
    {Lisp-Entry "jazz.set-environment-module" () 258 9 ("jazz.Environment" "%%hashtable-set!" "module" "name")}
    {Lisp-Entry "jazz.load-module" () 267 9 ("jazz.kernel-error" "if" "jazz.determine-module-filename" "jazz.load-source-file" "jazz.Loading-State" "jazz.set-environment-module" "lambda" "dynamic-wind" "jazz.Unloaded-State" "%%eq?" "cond" "jazz.get-environment-module" "module-state" "let" "module-name")}
    {Lisp-Entry "jazz.load-source-file" () 282 9 ("jazz.load-bin" "jazz.load-src" "jazz.filename-extension" "jazz.with-extension-reader" "src" "lambda" "jazz.with-load-src/bin" "filename")}
    {Lisp-Entry "jazz.module-loaded?" () 291 9 (":loading" "%%neq?" "and" "jazz.get-environment-module" "module" "let" "module-name")}
    {Lisp-Entry "jazz.module-loaded" () 296 9 ("jazz.Loaded-State" "jazz.set-environment-module" "module-name")}
    {Lisp-Entry "jazz.unload-module" () 300 9 ("jazz.Unloaded-State" "jazz.set-environment-module" "module-name")}
    {Lisp-Entry "jazz.reload-module" () 304 9 ("jazz.load-module" "jazz.unload-module" "module-name")}
    {Lisp-Entry "jazz.filename-extension" () 309 9 ("%%string-length" "1" "%%fx+" "%%substring" "if" "jazz.find-char-reversed" "pos" "let" "filename")}
    {Lisp-Entry "jazz.Extension-Readers" () 321 8 ("equal?" "%%make-hashtable")}
    {Lisp-Entry "jazz.get-extension-reader" () 325 9 ("jazz.Extension-Readers" "%%hashtable-ref" "extension")}
    {Lisp-Entry "jazz.with-extension-reader" () 329 9 ("current-readtable" "parameterize" "c#**main-readtable" "set!" "lambda" "dynamic-wind" "##main-readtable" "old-readtable" "jazz.load-module" "%%cdr" "readtable-getter" "%%car" "dialect-name" "if" "jazz.get-extension-reader" "reader-info" "let" "thunk" "extension")}
    {Lisp-Entry "jazz.register-reader-extension" () 349 9 ("%%cons" "jazz.Extension-Readers" "%%hashtable-set!" "extension" "readtable-getter" "dialect-name")}
    {Lisp-Entry "jazz.register-reader-extensions" () 353 9 ("jazz.register-reader-extension" "extension" "lambda" "for-each" "extensions" "readtable-getter" "dialect-name")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "class" "runtime" "runtime.scm"} {Time 128366319480000000L}
    {Lisp-Entry "core.class.runtime.runtime" () 37 8 ("jazz.Queue" "jazz.Method" "jazz.Property" "jazz.Slot" "jazz.Field" "jazz.Interface" "2" "1" "0" "jazz.specialtypes" "macro-subtype-bignum" "macro-subtype-flonum" "macro-subtype-string" "macro-subtype-foreign" "macro-subtype-procedure" "macro-subtype-keyword" "macro-subtype-symbol" "macro-subtype-structure" "macro-subtype-cpxnum" "macro-subtype-ratnum" "macro-subtype-pair" "macro-subtype-vector" "jazz.subtypes" "%%vector-set!" "include" "jazz.Hashtable" "jazz.Hashtable-Class" "jazz.Keyword" "jazz.Keyword-Class" "jazz.Symbol" "jazz.Symbol-Class" "jazz.Foreign" "jazz.Foreign-Class" "jazz.Procedure" "jazz.Procedure-Class" "jazz.Port" "jazz.Port-Class" "jazz.Vector" "jazz.Vector-Class" "jazz.String" "jazz.String-Class" "jazz.Pair" "jazz.Pair-Class" "jazz.Null" "jazz.Null-Class" "jazz.List" "jazz.List-Class" "jazz.Sequence" "jazz.Sequence-Class" "jazz.Flonum" "jazz.Flonum-Class" "jazz.Fixnum" "jazz.Fixnum-Class" "jazz.Integer" "jazz.Integer-Class" "jazz.Rational" "jazz.Rational-Class" "jazz.Real" "jazz.Real-Class" "jazz.Complex" "jazz.Complex-Class" "jazz.Number" "jazz.Number-Class" "jazz.Numeric" "jazz.Numeric-Class" "jazz.Char" "jazz.Char-Class" "jazz.Boolean" "jazz.Boolean-Class" "%%set-object-class" "jazz.Object-Class" "jazz.Class" "jazz.dialect.language.Object.initialize" "set!" "jazz.Category" "jazz.Type" "jazz.Object" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.dispatch?" () 45 9 ("%%fx-" "%%string-ref" "%%eqv?" "1" "%%fx>" "%%string-length" "len" "%%symbol->string" "name" "let" "%%symbol?" "and" "symbol")}
      {Lisp-Entry "jazz.dispatch->symbol" () 54 9 ("1" "%%string-length" "%%fx-" "0" "%%substring" "%%string->symbol" "%%symbol->string" "name" "let" "dispatch")}
      {Lisp-Entry "jazz.composite-name?" () 59 9 ("%%symbol->string" "jazz.memstring" "%%symbol?" "and" "symbol")}
      {Lisp-Entry "jazz.compose-name" () 64 9 ("symbol->string" "map" "jazz.join-strings" "%%string->symbol" "rest")}
      {Lisp-Entry "jazz.compose-helper" () 68 9 ("%%symbol->string" "%%string-append" "%%string->symbol" "suffix" "locator")}
      {Lisp-Entry "jazz.split-identifier" () 72 9 ("%%symbol->string" "jazz.split-string" "string->symbol" "map" "identifier")}
      {Lisp-Entry "jazz.object-content" () 82 9 ("1" "%%fx+" "%%object-ref" "%%vector-set!" "begin" "%%fx<" "if" "0" "n" "iter" "let" "%%make-vector" "content" "%%object-length" "size" "let*" "%%object?" "%%assert" "object")}
      {Lisp-Entry "jazz.Core-Classes" () 99 8 ("eq?" "%%make-hashtable")}
      {Lisp-Entry "jazz.get-core-classes" () 103 9 ("jazz.Core-Classes")}
      {Lisp-Entry "jazz.core-class?" () 107 9 ("jazz.Core-Classes" "%%hashtable-ref" "%%boolean" "name")}
      {Lisp-Entry "jazz.get-core-class" () 111 9 ("jazz.Core-Classes" "%%hashtable-ref" "name")}
      {Lisp-Entry "jazz.set-core-class" () 115 9 ("jazz.Core-Classes" "%%hashtable-set!" "class" "name")}
      {Lisp-Entry "jazz.object?" () 124 9 ("%%object?" "expr")}
      {Lisp-Entry "jazz.primitive?" () 128 9 ("%%object?" "%%not" "expr")}
      {Lisp-Entry "jazz.subtype?" () 132 9 ("%%subtype?" "%%boolean" "type" "target")}
      {Lisp-Entry "jazz.subcategory?" () 136 9 ("%%subcategory?" "%%boolean" "category" "target")}
      {Lisp-Entry "jazz.subclass?" () 140 9 ("%%subclass?" "%%boolean" "class" "target")}
      {Lisp-Entry "jazz.get-class-ascendant" () 144 9 ("%%get-class-ascendant" "class")}
      {Lisp-Entry "%%object-of-class?" () 148 9 ("%%get-object-class" "%%subclass?" "class" "object")}
      {Lisp-Entry "jazz.collect-type" () 152 9 ("%%is?" "obj" "lambda" "jazz.collect-if" "lst" "type")}
      {Lisp-Entry "jazz.get-core-class-all-slot-names" () 158 9 ("jazz.get-core-class-all-slot-names" "%%append" "%%not" "if" "%%get-class-ascendant" "ascendant" "%%get-class-slots" "slot-names" "let" "core-class")}
      {Lisp-Entry "jazz.copy-dispatch-table" () 166 9 ("%%copy-hashtable" "if" "%%get-class-dispatch-table" "class-dispatch-table" "let" "class")}
      {Lisp-Entry "jazz.update-dispatch-table" () 173 9 ("%%hashtable-set!" "dispatch-table" "let" "eq?" "%%make-hashtable" "%%set-class-dispatch-table" "%%get-class-dispatch-table" "%%not" "jazz.class?" "%%when" "subclass" "lambda" "jazz.iterate-descendants-tree" "value" "name" "class")}
      {Lisp-Entry "jazz.new-core-class" () 188 9 ("jazz.copy-dispatch-table" "%%set-class-dispatch-table" "%%get-category-descendants" "%%cons" "%%set-category-descendants" "%%when" "jazz.compute-core-class-ancestors" "%%set-category-ancestors" "%%get-class-core-virtual-names" "0" "1" "%%get-class-level" "%%fx+" "if" "%%object" "core-class" "let" "instance-size" "slot-names" "ascendant" "fields" "name" "class")}
      {Lisp-Entry "jazz.compute-core-class-ancestors" () 217 9 ("%%get-category-ancestors" "%%cons" "%%list" "%%not" "if" "ascendant" "class")}
      {Lisp-Entry "jazz.validate-inherited-slots" () 223 9 ("jazz.error" "jazz.get-core-class-all-slot-names" "%%equal?" "%%null?" "%%not" "and" "or" "if" "inherited-slot-names" "ascendant" "name")}
      {Lisp-Entry "jazz.Object" () 234 19 ()}
      {Lisp-Entry "jazz.get-object-slot" () 238 9 ("%%get-object-slot" "slot-rank" "object")}
      {Lisp-Entry "jazz.set-object-slot" () 242 9 ("%%set-object-slot" "value" "slot-rank" "object")}
      {Lisp-Entry "jazz.classname->string" () 246 9 ("%%get-category-name" "%%symbol->string" "%%null?" "if" "class")}
      {Lisp-Entry "jazz.Type" () 260 19 ("jazz.Object")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Type") 264 22 ("object")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Type") 267 21 ("%%class-of" "type" "jazz.of-subtype?" "object")}
      {Lisp-Entry "jazz.of-subtype?" ("jazz.Type") 271 22 ("class")}
      {Lisp-Entry "jazz.of-subtype?" ("jazz.Type") 274 21 ("type" "jazz.error" "class")}
      {Lisp-Entry "jazz.is-type?" () 279 9 ("type-class" "object")}
      {Lisp-Entry "jazz.Category" () 292 19 ("descendants" "ancestors" "fields" "name" "jazz.Type")}
      {Lisp-Entry "jazz.category?" () 299 9 ("jazz.Category" "%%is?" "object")}
      {Lisp-Entry "jazz.of-subtype?" ("jazz.Category") 303 21 ("%%get-category-ancestors" "type" "%%memq" "class")}
      {Lisp-Entry "jazz.is?" () 307 9 ("%%is?" "%%boolean" "category" "object")}
      {Lisp-Entry "jazz.is-not?" () 311 9 ("%%is?" "%%not" "%%boolean" "category" "object")}
      {Lisp-Entry "jazz.get-category-name" () 315 9 ("%%get-category-name" "category")}
      {Lisp-Entry "jazz.add-field" () 319 9 ("%%get-field-name" "%%set-category-field" "field" "category")}
      {Lisp-Entry "jazz.Class" () 331 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Category")}
      {Lisp-Entry "jazz.new-class" () 346 9 ("jazz.dialect.language.Object.initialize" "%%get-category-descendants" "%%cons" "%%set-category-descendants" "%%when" "jazz.compute-class-ancestors" "%%set-category-ancestors" "%%get-class-core-vtable" "jazz.copy-dispatch-table" "1" "%%get-class-level" "%%fx+" "0" "%%get-class-instance-size" "%%get-class-slots" "if" "eq?" "%%make-hashtable" "jazz.allocate-class" "class" "let" "interfaces" "ascendant" "name" "class-of-class")}
      {Lisp-Entry "jazz.compute-class-ancestors" () 367 9 ("interface" "lambda" "map" "append" "%%apply" "%%get-category-ancestors" "%%cons" "%%list" "%%not" "if" "%%append" "jazz.remove-duplicates" "interfaces" "ascendant" "class")}
      {Lisp-Entry "jazz.class?" () 377 9 ("jazz.Class" "%%is?" "object")}
      {Lisp-Entry "jazz.i-class-of" () 381 9 ("%%i-class-of-impl" "expr")}
      {Lisp-Entry "jazz.class-of" () 385 9 ("%%class-of-impl" "expr")}
      {Lisp-Entry "jazz.class-of-native" () 392 9 ("jazz.error" "else" "jazz.Foreign" "%%foreign?" "jazz.Procedure" "%%procedure?" "jazz.Port" "%%port?" "jazz.Keyword" "%%keyword?" "jazz.Symbol" "%%symbol?" "jazz.Vector" "%%vector?" "jazz.String" "%%string?" "jazz.Pair" "%%pair?" "jazz.Null" "%%null?" "jazz.Number" "%%number?" "jazz.Complex" "%%complex?" "jazz.Real" "%%real?" "jazz.Rational" "%%rational?" "jazz.Integer" "%%integer?" "jazz.Flonum" "%%flonum?" "jazz.Fixnum" "%%fixnum?" "jazz.Char" "%%char?" "jazz.Boolean" "%%boolean?" "cond" "expr")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Class") 423 21 ("%%class-of" "class" "jazz.of-subtype?" "object")}
      {Lisp-Entry "jazz.slot-form?" () 427 9 ("slot" "%%car" "%%eq?" "%%pair?" "and" "form")}
      {Lisp-Entry "jazz.new" () 432 9 ("jazz.dialect.language.Object.initialize" "apply" "jazz.initialize-slots" "%%set-object-class" "%%fx+" "%%make-object" "object" "%%get-class-instance-size" "size" "jazz.object-size" "base" "let*" "jazz.class?" "%%assert" "rest" "class")}
      {Lisp-Entry "jazz.dialect.language.Object.initialize" () 447 8 ()}
      {Lisp-Entry "jazz.iterate-descendants-tree" () 453 9 ("%%get-category-descendants" "for-each" "iter" "let" "proc" "class")}
      {Lisp-Entry "jazz.Object-Class" () 467 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Boolean-Class" () 491 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Boolean-Class") 495 21 ("object")}
      {Lisp-Entry "jazz.Boolean" () 502 19 ("jazz.Boolean-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Char-Class" () 514 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Char-Class") 518 21 ("%%char?" "object")}
      {Lisp-Entry "jazz.Char" () 525 19 ("jazz.Char-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Numeric-Class" () 537 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Numeric" () 544 19 ("jazz.Numeric-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Number-Class" () 556 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Numeric-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Number-Class") 560 21 ("%%number?" "object")}
      {Lisp-Entry "jazz.Number" () 567 19 ("jazz.Number-Class" "jazz.Numeric")}
      {Lisp-Entry "jazz.Complex-Class" () 579 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Number-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Complex-Class") 583 21 ("%%complex?" "object")}
      {Lisp-Entry "jazz.Complex" () 590 19 ("jazz.Complex-Class" "jazz.Number")}
      {Lisp-Entry "jazz.Real-Class" () 602 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Complex-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Real-Class") 606 21 ("%%real?" "object")}
      {Lisp-Entry "jazz.Real" () 613 19 ("jazz.Real-Class" "jazz.Complex")}
      {Lisp-Entry "jazz.Rational-Class" () 625 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Real-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Rational-Class") 629 21 ("%%rational?" "object")}
      {Lisp-Entry "jazz.Rational" () 636 19 ("jazz.Rational-Class" "jazz.Real")}
      {Lisp-Entry "jazz.Integer-Class" () 648 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Rational-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Integer-Class") 652 21 ("%%integer?" "object")}
      {Lisp-Entry "jazz.Integer" () 659 19 ("jazz.Integer-Class" "jazz.Rational")}
      {Lisp-Entry "jazz.Fixnum-Class" () 671 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Integer-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Fixnum-Class") 675 21 ("%%fixnum?" "object")}
      {Lisp-Entry "jazz.Fixnum" () 682 19 ("jazz.Fixnum-Class" "jazz.Integer")}
      {Lisp-Entry "jazz.Flonum-Class" () 694 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Real-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Flonum-Class") 698 21 ("%%flonum?" "object")}
      {Lisp-Entry "jazz.Flonum" () 705 19 ("jazz.Flonum-Class" "jazz.Real")}
      {Lisp-Entry "jazz.Sequence-Class" () 717 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.Sequence" () 724 19 ("jazz.Sequence-Class" "jazz.Object")}
      {Lisp-Entry "jazz.List-Class" () 736 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Sequence-Class")}
      {Lisp-Entry "jazz.List" () 743 19 ("jazz.List-Class" "jazz.Sequence")}
      {Lisp-Entry "jazz.Null-Class" () 755 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.List-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Null-Class") 759 21 ("%%null?" "object")}
      {Lisp-Entry "jazz.Null" () 766 19 ("jazz.Null-Class" "jazz.List")}
      {Lisp-Entry "jazz.Pair-Class" () 778 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.List-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Pair-Class") 782 21 ("%%pair?" "object")}
      {Lisp-Entry "jazz.Pair" () 789 19 ("jazz.Pair-Class" "jazz.List")}
      {Lisp-Entry "jazz.String-Class" () 801 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Sequence-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.String-Class") 805 21 ("%%string?" "object")}
      {Lisp-Entry "jazz.String" () 812 19 ("jazz.String-Class" "jazz.Sequence")}
      {Lisp-Entry "jazz.Vector-Class" () 824 19 ("jazz.Class" "interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Sequence-Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Vector-Class") 828 21 ("%%vector?" "object")}
      {Lisp-Entry "jazz.Vector" () 835 19 ("jazz.Vector-Class" "jazz.Sequence")}
      {Lisp-Entry "jazz.Port-Class" () 847 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Port-Class") 851 21 ("%%port?" "object")}
      {Lisp-Entry "jazz.Port" () 858 19 ("jazz.Port-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Procedure-Class" () 870 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Procedure-Class") 874 21 ("%%procedure?" "object")}
      {Lisp-Entry "jazz.Procedure" () 881 19 ("jazz.Procedure-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Foreign-Class" () 893 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Foreign-Class") 897 21 ("%%foreign?" "object")}
      {Lisp-Entry "jazz.Foreign" () 904 19 ("jazz.Foreign-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Symbol-Class" () 916 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Symbol-Class") 920 21 ("%%symbol?" "object")}
      {Lisp-Entry "jazz.Symbol" () 927 19 ("jazz.Symbol-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Keyword-Class" () 939 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Keyword-Class") 943 21 ("%%keyword?" "object")}
      {Lisp-Entry "jazz.Keyword" () 950 19 ("jazz.Keyword-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Hashtable-Class" () 962 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Hashtable-Class") 966 21 ("%%hashtable?" "object")}
      {Lisp-Entry "jazz.Hashtable" () 973 19 ("jazz.Hashtable-Class" "jazz.Object")}
      {Lisp-Entry "jazz.subtypes" () 989 12 ("make-vector")}
      {Lisp-Entry "jazz.specialtypes" () 992 12 ("make-vector")}
      {Lisp-Entry "jazz.hashtable-type" () 996 12 ("make-table" "##structure-type")}
      {Lisp-Entry "jazz.port-type" () 1000 12 ("open-output-string" "##structure-type")}
      {Lisp-Entry "jazz.Interface" () 1033 19 ("rank" "ascendants" "jazz.Class" "descendants" "ancestors" "fields" "name" "jazz.Category")}
      {Lisp-Entry "jazz.new-interface" () 1038 9 ("%%get-category-descendants" "%%cons" "%%set-category-descendants" "ascendant" "lambda" "for-each" "jazz.compute-interface-ancestors" "%%set-category-ancestors" "eq?" "%%make-hashtable" "jazz.allocate-interface" "interface" "let" "ascendants" "name" "class")}
      {Lisp-Entry "jazz.compute-interface-ancestors" () 1047 9 ("%%get-category-ancestors" "ascendant" "lambda" "map" "append" "%%apply" "%%cons" "jazz.remove-duplicates" "ascendants" "interface")}
      {Lisp-Entry "jazz.interface?" () 1054 9 ("jazz.Interface" "%%is?" "object")}
      {Lisp-Entry "jazz.of-type?" ("jazz.Interface") 1069 21 ("%%class-of" "interface" "jazz.of-subtype?" "object")}
      {Lisp-Entry "jazz.Field" () 1081 19 ("name" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.field?" () 1085 9 ("jazz.Field" "%%is?" "object")}
      {Lisp-Entry "jazz.field-name" () 1089 9 ("%%get-field-name" "field")}
      {Lisp-Entry "jazz.find-field" () 1093 9 ("jazz.find-field" "%%not" "if" "%%get-class-ascendant" "ascendant" "let" "%%get-category-field" "or" "field-name" "category")}
      {Lisp-Entry "jazz.require-object-field" () 1101 9 ("%%get-object-class" "%%get-category-name" "jazz.error" "%%not" "if" "jazz.find-field" "field" "%%class-of" "class" "let*" "name" "object")}
      {Lisp-Entry "jazz.Slot" () 1117 19 ("initialize" "rank" "jazz.Object-Class" "name" "jazz.Field")}
      {Lisp-Entry "jazz.new-slot" () 1122 9 ("jazz.Slot" "jazz.allocate-slot" "slot-initialize" "slot-rank" "slot-name")}
      {Lisp-Entry "jazz.slot?" () 1126 9 ("jazz.Slot" "%%is?" "object")}
      {Lisp-Entry "jazz.add-slot" () 1130 9 ("1" "%%fx+" "%%set-class-instance-size" "%%list" "%%get-class-slots" "%%append" "%%set-class-slots" "jazz.add-field" "jazz.new-slot" "slot" "%%get-class-instance-size" "slot-rank" "let*" "%%get-category-field" "or" "slot-initialize" "slot-name" "class")}
      {Lisp-Entry "jazz.remove-slots" () 1141 9 ("%%length" "%%get-class-instance-size" "%%fx-" "%%set-class-instance-size" "%%set-class-slots" "%%get-class-slots" "actual" "let" "class")}
      {Lisp-Entry "jazz.slot-value" () 1147 9 ("%%get-slot-rank" "%%get-object-slot" "jazz.require-object-field" "slot" "let" "%%object?" "%%assert" "slot-name" "object")}
      {Lisp-Entry "jazz.set-slot-value" () 1153 9 ("%%get-slot-rank" "%%set-object-slot" "jazz.require-object-field" "slot" "let" "%%object?" "%%assert" "value" "slot-name" "object")}
      {Lisp-Entry "jazz.find-slot-offset" () 1159 9 ("%%get-slot-rank" "%%slot-offset" "jazz.require-object-field" "slot" "let" "slot-name" "object")}
      {Lisp-Entry "jazz.initialize-slots" () 1164 9 ("%%set-object-slot" "%%get-slot-initialize" "initialize" "%%get-slot-rank" "rank" "let" "slot" "lambda" "for-each" "%%get-class-slots" "slots" "%%get-object-class" "class" "let*" "object")}
      {Lisp-Entry "jazz.Property" () 1182 19 ("setter" "getter" "jazz.Object-Class" "initialize" "rank" "name" "jazz.Slot")}
      {Lisp-Entry "jazz.new-property" () 1187 9 ("jazz.Property" "jazz.allocate-property" "slot-setter" "slot-getter" "slot-initialize" "slot-rank" "slot-name")}
      {Lisp-Entry "jazz.property?" () 1191 9 ("jazz.Property" "%%is?" "object")}
      {Lisp-Entry "jazz.property-getter" () 1195 9 ("%%get-property-getter" "property")}
      {Lisp-Entry "jazz.property-setter" () 1199 9 ("%%get-property-setter" "property")}
      {Lisp-Entry "jazz.all-properties" () 1203 9 ("else" "%%cdr" "%%cons" "%%car" "jazz.property?" "%%null?" "cond" "%%get-class-slots" "slots" "iter" "let" "category")}
      {Lisp-Entry "jazz.add-property" () 1210 9 ("1" "%%fx+" "%%set-class-instance-size" "%%list" "%%get-class-slots" "%%append" "%%set-class-slots" "jazz.add-field" "jazz.new-property" "slot" "%%get-class-instance-size" "slot-rank" "let*" "%%get-category-field" "or" "slot-setter" "slot-getter" "slot-initialize" "slot-name" "class")}
      {Lisp-Entry "jazz.Method" () 1229 19 ("implementation" "propagation" "jazz.Object-Class" "name" "jazz.Field")}
      {Lisp-Entry "jazz.new-method" () 1234 9 ("jazz.Method" "jazz.allocate-method" "implementation" "propagation" "name")}
      {Lisp-Entry "jazz.method?" () 1238 9 ("jazz.Method" "%%is?" "object")}
      {Lisp-Entry "jazz.method-virtual?" () 1242 9 ("virtual" "%%get-method-propagation" "%%eq?" "method")}
      {Lisp-Entry "jazz.Queue" () 1254 19 ("current" "last-anchor" "last-list" "list" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.new-queue" () 1261 9 ("jazz.Queue" "jazz.allocate-queue")}
      {Lisp-Entry "jazz.enqueue" () 1265 9 ("%%set-cdr!" "pair" "jazz.queue-copy-last-list" "%%get-queue-last-list" "%%not-null?" "%%when" "else" "%%set-queue-list" "%%cons" "%%set-queue-current" "%%null?" "cond" "%%get-queue-current" "current" "let" "object" "queue")}
      {Lisp-Entry "jazz.enqueue-list" () 1278 9 ("%%set-cdr!" "%%set-queue-last-anchor" "jazz.queue-copy-last-list" "%%get-queue-last-list" "else" "%%set-queue-list" "%%set-queue-last-list" "%%set-queue-current" "%%get-queue-current" "%%null?" "cond" "%%not-null?" "%%when" "lst" "queue")}
      {Lisp-Entry "jazz.queue-copy-last-list" () 1292 9 ("%%set-queue-last-anchor" "%%set-queue-last-list" "%%set-cdr!" "else" "%%get-queue-list" "jazz.last-pair" "%%set-queue-current" "%%get-queue-last-list" "jazz.list-copy" "%%set-queue-list" "%%null?" "cond" "%%get-queue-last-anchor" "last-anchor" "let" "queue")}
      {Lisp-Entry "jazz.queue-list" () 1304 9 ("%%get-queue-list" "queue")}}})
"serial"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "foundation" "runtime" "serial.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.foundation.runtime.serial" () 37 8 ()
      {Lisp-Entry "jazz.object->serial-number" () 42 13 ("object->serial-number" "apply" "rest" "obj")}
      {Lisp-Entry "jazz.serial-number->object" () 45 13 ("serial-number->object" "number")}
      {Lisp-Entry "serial-number" () 52 11 ("1")}
      {Lisp-Entry "jazz.serialized-objects" () 55 11 ("equal?" "%%make-hashtable")}
      {Lisp-Entry "jazz.object->serial-number" () 58 12 ("%%hashtable-set!" "1" "%%fx+" "set!" "serial-number" "number" "let" "jazz.serialized-objects" "%%hashtable-ref" "or" "obj")}
      {Lisp-Entry "jazz.serial-number->object" () 65 12 ("%%car" "jazz.error" "%%null?" "%%fx=" "if" "value" "key" "jazz.serialized-objects" "%%iterate-hashtable" "return" "lambda" "call/cc" "rest" "number")}}})
"shapes"
 ({Lisp-File-Entry {File oj "lib" "jazz" "library" "utility" "shapes.fusion"} {Time 128369467600000000L}
    {Lisp-Entry "jazz.library.utility.shapes" () 37 9 ("jazz")
      {Lisp-Entry "Point" () 48 7 ("Numeric")
        {Lisp-Entry "h" () 51 15 ()}
        {Lisp-Entry "v" () 52 15 ()}
        {Lisp-Entry "initialize" () 55 11 ("v~self" "h~self" "set!" "nextmethod" "v" "h")}
        {Lisp-Entry "copy-object" () 61 11 ("v" "h" "Point" "new" "deep?")}
        {Lisp-Entry "compare-object" () 65 11 (":not-equal" "else" ":equal" "get-v" "v" "get-h" "h" "=" "and" "target-point" "let" ":incompatible" "Point" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 75 11 ("v" "h" "format" "readably" "printer")}
        {Lisp-Entry "get-h" () 86 18 ("h")}
        {Lisp-Entry "get-v" () 90 18 ("v")}
        {Lisp-Entry "negate" () 99 11 ("v" "h" "-" "Point" "new")}
        {Lisp-Entry "norm" () 103 11 ("v" "2" "h" "expt" "+" "sqrt")}
        {Lisp-Entry "add" () 107 11 ("self" "error" "else" "integer?" "get-height" "get-width" "Dimension" "get-v" "v" "get-h" "h" "+" "new" "Point" "is?" "cond" "n")}
        {Lisp-Entry "inverse" () 114 11 ("self" "error")}
        {Lisp-Entry "multiply" () 118 11 ("self" "error" "v" "h" "*" "Point" "new" "integer?" "if" "n")}}
      {Lisp-Entry "Point<fl>" () 124 7 ("Numeric")
        {Lisp-Entry "h" () 127 15 ()}
        {Lisp-Entry "v" () 128 15 ()}
        {Lisp-Entry "initialize" () 131 11 ("v~self" "h~self" "set!" "nextmethod" "v" "h")}
        {Lisp-Entry "copy-object" () 137 11 ("v" "h" "Point<fl>" "new" "deep?")}
        {Lisp-Entry "compare-object" () 141 11 (":not-equal" "else" ":equal" "get-v" "v" "get-h" "h" "=" "and" "target-point" "let" ":incompatible" "Point<fl>" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 151 11 ("v" "h" "format" "readably" "printer")}
        {Lisp-Entry "get-h" () 162 18 ("h")}
        {Lisp-Entry "get-v" () 166 18 ("v")}
        {Lisp-Entry "negate" () 175 11 ("v" "h" "-" "Point<fl>" "new")}
        {Lisp-Entry "norm" () 179 11 ("v" "2" "h" "expt" "+" "sqrt")}
        {Lisp-Entry "add" () 183 11 ("self" "error" "else" "integer?" "get-height" "get-width" "Dimension<fl>" "get-v" "v" "get-h" "h" "+" "new" "Point<fl>" "is?" "cond" "n")}
        {Lisp-Entry "inverse" () 190 11 ("self" "error")}
        {Lisp-Entry "multiply" () 194 11 ("self" "error" "v" "h" "*" "Point<fl>" "new" "integer?" "if" "n")}}
      {Lisp-Entry "Dimension" () 205 7 ("Numeric")
        {Lisp-Entry "width" () 208 15 ()}
        {Lisp-Entry "height" () 209 15 ()}
        {Lisp-Entry "initialize" () 212 11 ("height" "width" "set!" "nextmethod" "h" "w")}
        {Lisp-Entry "copy-object" () 218 11 ("height" "width" "Dimension" "new" "deep?")}
        {Lisp-Entry "compare-object" () 222 11 ("get-height" "height" ":equal" "/=" "get-width" "width" "compare" "compared" "let" ":incompatible" "Dimension" "is-not?" "if" "target")}
        {Lisp-Entry "print" () 231 11 ("height" "width" "format" "readably" "printer")}
        {Lisp-Entry "get-width" () 242 18 ("width")}
        {Lisp-Entry "get-height" () 246 18 ("height")}
        {Lisp-Entry "negate" () 255 11 ("height" "width" "-" "Dimension" "new")}
        {Lisp-Entry "add" () 259 11 ("self" "error" "else" "get-v" "get-h" "Point" "get-height" "height" "get-width" "width" "+" "new" "Dimension" "is?" "cond" "n")}
        {Lisp-Entry "inverse" () 265 11 ("self" "error")}
        {Lisp-Entry "multiply" () 269 11 ("self" "error" "height" "width" "*" "Dimension" "new" "integer?" "if" "n")}}
      {Lisp-Entry "Dimension<fl>" () 275 7 ("Numeric")
        {Lisp-Entry "width" () 278 15 ()}
        {Lisp-Entry "height" () 279 15 ()}
        {Lisp-Entry "initialize" () 282 11 ("height" "width" "set!" "nextmethod" "h" "w")}
        {Lisp-Entry "copy-object" () 288 11 ("height" "width" "Dimension<fl>" "new" "deep?")}
        {Lisp-Entry "compare-object" () 292 11 ("get-height" "height" ":equal" "/=" "get-width" "width" "compare" "compared" "let" ":incompatible" "Dimension<fl>" "is-not?" "if" "target")}
        {Lisp-Entry "print" () 301 11 ("height" "width" "format" "readably" "printer")}
        {Lisp-Entry "get-width" () 312 18 ("width")}
        {Lisp-Entry "get-height" () 316 18 ("height")}
        {Lisp-Entry "negate" () 325 11 ("height" "width" "-" "Dimension<fl>" "new")}
        {Lisp-Entry "add" () 329 11 ("self" "error" "else" "get-v" "get-h" "Point<fl>" "get-height" "height" "get-width" "width" "+" "new" "Dimension<fl>" "is?" "cond" "n")}
        {Lisp-Entry "inverse" () 335 11 ("self" "error")}
        {Lisp-Entry "multiply" () 339 11 ("self" "error" "height" "width" "*" "Dimension<fl>" "new" "integer?" "if" "n")}}
      {Lisp-Entry "Rect" () 350 7 ("Object")
        {Lisp-Entry "left" () 353 15 ("generate")}
        {Lisp-Entry "top" () 354 15 ("generate")}
        {Lisp-Entry "right" () 355 15 ("generate")}
        {Lisp-Entry "bottom" () 356 15 ("generate")}
        {Lisp-Entry "coerce-object" () 360 16 ("nextmethod" "else" "0" "get-v" "get-h" "Rect" "new" "Point" "typecase" "object")}
        {Lisp-Entry "initialize" () 366 11 ("bottom" "right" "top" "left" "set!" "nextmethod" "b" "r" "t" "l")}
        {Lisp-Entry "copy-object" () 374 11 ("bottom" "right" "top" "left" "Rect" "new" "deep?")}
        {Lisp-Entry "compare-object" () 378 11 (":not-equal" "else" ":equal" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "left" "=" "and" ":incompatible" "Rect" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 387 11 ("bottom" "right" "top" "left" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}
      {Lisp-Entry "Rect<fl>" () 396 7 ("Object")
        {Lisp-Entry "left" () 399 15 ("generate")}
        {Lisp-Entry "top" () 400 15 ("generate")}
        {Lisp-Entry "right" () 401 15 ("generate")}
        {Lisp-Entry "bottom" () 402 15 ("generate")}
        {Lisp-Entry "coerce-object" () 406 16 ("nextmethod" "else" "0" "get-v" "get-h" "Rect<fl>" "new" "Point<fl>" "typecase" "object")}
        {Lisp-Entry "initialize" () 412 11 ("bottom" "right" "top" "left" "set!" "nextmethod" "b" "r" "t" "l")}
        {Lisp-Entry "copy-object" () 420 11 ("bottom" "right" "top" "left" "Rect<fl>" "new" "deep?")}
        {Lisp-Entry "compare-object" () 424 11 (":not-equal" "else" ":equal" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "left" "=" "and" ":incompatible" "Rect<fl>" "is-not?" "cond" "target")}
        {Lisp-Entry "print" () 433 11 ("bottom" "right" "top" "left" "self" "class-of" "type-name" "identifier-name" "format" "readably" "printer")}}}})
"socket"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "socket.scm"} {Time 128366793860000000L}
    {Lisp-Entry "core.jazz.runtime.debug.socket" () 37 8 ()
      {Lisp-Entry "jazz.open-tcp-client" () 42 13 ("port-number:" "server-address:" "list" "open-tcp-client" "port" "host")}
      {Lisp-Entry "jazz.close-port" () 45 13 ("close-port" "port")}}})
"specific"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "syntax" "specific.scm"} {Time 128360604040000000L}
    {Lisp-Entry "core.generic.syntax.specific" () 38 8 ("jazz.Specific" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.Specific" () 41 26 ("%%set-specific-previous-specifics" "%%get-specific-previous-specifics" "previous-specifics" "%%set-specific-next-specific" "%%get-specific-next-specific" "next-specific" "%%set-specific-next-implementation" "%%get-specific-next-implementation" "next-implementation" "%%set-specific-implementation" "%%get-specific-implementation" "implementation" "%%set-specific-signature" "%%get-specific-signature" "signature" "%%get-specific-mandatory-parameters" "mandatory-parameters" "jazz.allocate-specific" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Specific" () 50 19 ("previous-specifics" "next-specific" "next-implementation" "implementation" "signature" "mandatory-parameters" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.define-specific" () 59 20 ("jazz.expand-define-specific" "apply" "rest")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "generic" "runtime" "specific.scm"} {Time 128355726580000000L}
    {Lisp-Entry "core.generic.runtime.specific" () 38 8 ()
      {Lisp-Entry "jazz.new-specific" () 41 9 ("jazz.Specific" "jazz.allocate-specific" "implementation" "signature-proc" "mandatory-parameters")}}})
"stack"
 ({Lisp-File-Entry {File dev "jazz" "dev" "gambit" "test" "stack.scm"} {Time 128366319460000000L}
    {Lisp-Entry "new-queue" () 40 9 ("box")}
    {Lisp-Entry "enqueue" () 44 9 ("unbox" "cons" "set-box!" "obj" "queue")}
    {Lisp-Entry "queue-list" () 48 9 ("unbox" "reverse" "queue")}
    {Lisp-Entry "get-continuation-stack" () 52 9 ("queue-list" "##continuation-next" "1" "+" "get-frame" "enqueue" "begin" "and" "0" "depth" "iter" "new-queue" "queue" "let" "cont")}
    {Lisp-Entry "get-frame" () 64 9 ("get-frame-variables" "get-frame-name" "cons" "cont")}
    {Lisp-Entry "get-frame-name" () 69 9 ("##procedure-name" "if" "##continuation-creator" "creator" "let" "cont")}
    {Lisp-Entry "get-frame-variables" () 76 9 ("queue-list" "##interaction-cte" "##continuation-locals" "collect-locals" "begin" "macro-code-cte" "collect-rte" "##interp-continuation-rte" "rte" "##interp-continuation-code" "$code" "##interp-continuation?" "if" "macro-continuation-denv" "##dynamic-env->list" "collect-parameters" "and" "new-queue" "queue" "let" "cont")
      {Lisp-Entry "var-width" () 78 10 ()}
      {Lisp-Entry "collect-var-val" () 81 11 ("var-width" "##cte-parent-cte" "##inverse-eval-in-env" "##cte-top?" "if" "##object->string" "cons" "enqueue" "queue" "cte" "val" "var")}
      {Lisp-Entry "collect-rte" () 90 11 ("else" "macro-rte-up" "##cte-parent-cte" "collect-var-val" "##hidden-local-var?" "##not" "##car" "var" "##pair?" "if" "##vector->list" "##cdr" "vals" "##cte-frame-vars" "vars" "loop2" "##cte-frame?" "##cte-top?" "cond" "r" "c" "loop1" "let" "queue" "rte" "cte")}
      {Lisp-Entry "collect-vars" () 109 11 ("collect-var-val" "##cdr" "val" "var" "##car" "var-val" "let*" "##pair?" "if" "iter" "let" "queue" "cte" "lst")}
      {Lisp-Entry "collect-locals" () 118 11 ("collect-vars" "and" "queue" "cte" "lst")}
      {Lisp-Entry "collect-parameters" () 122 11 ("##list" "collect-var-val" "##inverse-eval-in-env" "x" "##hidden-parameter?" "##not" "##cdr" "val" "param" "##car" "param-val" "let*" "##pair?" "if" "iter" "let" "queue" "cte" "lst")}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "stack.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.core.stack" () 37 8 ("include")
      {Lisp-Entry "jazz.continuation-capture" () 47 13 ("proc")}
      {Lisp-Entry "jazz.get-continuation-stack" () 51 13 ("blues.get-stack" "reverse" "cdddr" "cont")}
      {Lisp-Entry "jazz.continuation-capture" () 67 13 ("##continuation-capture" "proc")}
      {Lisp-Entry "jazz.get-continuation-stack" () 71 13 ("jazz.queue-list" "##continuation-next-interesting" "1" "+" "jazz.get-frame" "jazz.enqueue" "begin" "and" "0" "depth" "iter" "jazz.new-queue" "queue" "let" "cont")}
      {Lisp-Entry "jazz.get-frame" () 83 13 ("jazz.get-frame-environment" "jazz.get-frame-variables" "jazz.get-frame-name" ":lambda" "list" "cont")}
      {Lisp-Entry "jazz.get-frame-name" () 90 13 ("##procedure-name" "if" "##continuation-creator" "creator" "let" "cont")}
      {Lisp-Entry "jazz.collect-var-val" () 97 13 ("##cte-parent-cte" "##inverse-eval-in-env" "##cte-top?" "if" "##object->string" "cons" "jazz.enqueue" "queue" "cte" "val" "var")}
      {Lisp-Entry "jazz.get-frame-variables" () 105 13 ("jazz.queue-list" "##interaction-cte" "##continuation-locals" "collect-locals" "begin" "macro-code-cte" "collect-rte" "##interp-continuation-rte" "rte" "##interp-continuation-code" "$code" "##interp-continuation?" "if" "and" "jazz.new-queue" "queue" "let" "cont")
        {Lisp-Entry "collect-rte" () 107 15 ("else" "macro-rte-up" "##cte-parent-cte" "jazz.collect-var-val" "##hidden-local-var?" "##not" "##car" "var" "##pair?" "if" "##vector->list" "##cdr" "vals" "##cte-frame-vars" "vars" "loop2" "##cte-frame?" "##cte-top?" "cond" "r" "c" "loop1" "let" "queue" "rte" "cte")}
        {Lisp-Entry "collect-vars" () 126 15 ("jazz.collect-var-val" "##cdr" "val" "var" "##car" "var-val" "let*" "##pair?" "if" "iter" "let" "queue" "cte" "lst")}
        {Lisp-Entry "collect-locals" () 135 15 ("collect-vars" "and" "queue" "cte" "lst")}}
      {Lisp-Entry "jazz.get-frame-environment" () 152 13 ("jazz.queue-list" "##interaction-cte" "macro-code-cte" "##interp-continuation-rte" "rte" "##interp-continuation-code" "$code" "##interp-continuation?" "if" "macro-continuation-denv" "##dynamic-env->list" "collect-parameters" "and" "jazz.new-queue" "queue" "let" "cont")
        {Lisp-Entry "collect-parameters" () 154 15 ("##list" "jazz.collect-var-val" "##inverse-eval-in-env" "x" "##hidden-parameter?" "##not" "##cdr" "val" "param" "##car" "param-val" "let*" "##pair?" "if" "iter" "let" "queue" "cte" "lst")}}}})
"statprof"
 ({Lisp-File-Entry {File dev "jazz" "contrib" "statprof" "statprof.scm"} {Time 128355726720000000L}
    {Lisp-Entry "*buckets*" () 10 8 ()}
    {Lisp-Entry "*total*" () 11 8 ("0")}
    {Lisp-Entry "*unknown*" () 12 8 ("0")}
    {Lisp-Entry "profile-start!" () 14 9 ("profile-heartbeat!" "1" "##interrupt-vector-set!" "*unknown*" "0" "*total*" "*buckets*" "set!")}
    {Lisp-Entry "profile-stop!" () 20 9 ("##thread-heartbeat!" "1" "##interrupt-vector-set!")}
    {Lisp-Entry "identify-continuation" () 27 9 ("unknown" "list" "##filepos-col" "col" "1" "##filepos-line" "##fixnum.+" "line" "##locat-position" "##position->filepos" "filepos" "##container->file" "file" "##locat-container" "container" "let*" "if" "##continuation-locat" "locat" "let" "cont")}
    {Lisp-Entry "profile-heartbeat!" () 40 9 ("vector-ref" "cadr" "cdr" "vector-set!" "0" "make-vector" "cons" "begin" "not" "*total*" "*buckets*" "car" "assoc" "bucket" "1" "+" "*unknown*" "set!" "unknown" "eq?" "if" "identify-continuation" "id" "let" "##thread-heartbeat!" "cont" "lambda" "##continuation-capture")}
    {Lisp-Entry "pad-left" () 70 9 ("list->string" "cons" "length" "" "if" "string->list" "loop" "let" "c" "l" "s")}
    {Lisp-Entry "gradient" () 80 9 ("*" "round" "o" "cons" "1" "+" "reverse" "=" "if" "acc" "0" "i" "loop" "-" "/" "x" "lambda" "map" "inc" "let" "step" "to" "from")}
    {Lisp-Entry "as-rgb" () 96 9 ("2" "number->string" "pad-left" "x" "lambda" "map" "string-append" "apply" "col")}
    {Lisp-Entry "palette" () 103 8 ("gradient" "cons" "list->vector")}
    {Lisp-Entry "write-profile-report" () 114 9 ("vector-sum" "href:" "a" "file-path" "*unknown*" "length" "iota1" "pre" "*total*" "round%" "center" "align:" "number->string" "td" "tr" "line#" "line" "style:" "border:" "cellpadding:" "cellspacing:" "table" "body" "html" "sexp->html" "display" "read-line" "read-all" "p" "call-with-input-file" "lines" "path-strip-directory" "string-append" "with-output-to-file" "inexact->exact" "1" "vector-length" "-" "ceiling" "+" "log" "/" "*" "x" "palette" "as-rgb" "0" "=" "if" "vector-ref" "i" "n" "get-color" "define" "data" "car" "file" "bucket" "*buckets*" "cdr" "maximum" "map" "max" "apply" "max-intensity" "let" "permissions:" "directory-name" "path:" "list" "create-directory" "e" "lambda" "with-exception-catcher" "profile-name")
      {Lisp-Entry "iota1" () 116 11 ("cons" "-" "1" ">=" "if" "l" "loop" "let" "n")}
      {Lisp-Entry "maximum" () 123 11 ("1" "##fixnum.+" "set!" "##fixnum.>" "##vector-ref" "elem" "begin" "##fixnum.=" "if" "0" "n" "loop" "##vector-length" "len" "max" "let" "v")}
      {Lisp-Entry "directory-name" () 135 10 ("profile-name" "current-directory" "string-append")}}
    {Lisp-Entry "round%" () 240 9 ("*" "round" "/" "n")}
    {Lisp-Entry "vector-sum" () 245 9 ("1" "##vector-ref" "##fixnum.+" "set!" "begin" "##fixnum.=" "if" "n" "loop" "##vector-length" "len" "0" "sum" "let" "v")}
    {Lisp-Entry "stringify" () 266 9 ("display" "lambda" "with-output-to-string" "x")}
    {Lisp-Entry "to-escaped-string" () 271 9 ("string->list" "else" "case" "c" "lambda" "map" "stringify" "x")}
    {Lisp-Entry "sexp->html" () 283 9 ("open-tag" "display" "lambda" "with-output-to-string" "exp")
      {Lisp-Entry "open-tag" () 286 11 ("else" "cdr" "maybe-args" "list" "car" "symbol?" "pair?" "and" "error" "null?" "cond" "exp")}
      {Lisp-Entry "maybe-args" () 304 11 ("content" "else" "cddr" "maybe-args" "keyword->string" "list" "cadr" "cdr" "null?" "or" "if" "car" "keyword?" "pair?" "and" "cond" "exp" "tag")}
      {Lisp-Entry "content" () 330 11 ("error" "else" "to-escaped-string" "open-tag" "if" "e" "lambda" "map" "pair?" "list" "null?" "cond" "exp" "tag")}}})
"syntax"
 ({Lisp-File-Entry {File dev "jazz" "kernel" "module" "syntax.scm"} {Time 128368765180000000L}
    {Lisp-Entry "module" () 46 20 ("jazz.expand-module" "%%cddr" "rest" "%%cadr" "name" "%%source-code" "form" "let" "src" "lambda")}
    {Lisp-Entry "jazz.expand-module" () 54 9 ("jazz.module-loaded" "jazz.load-module" "phase" "load" "feature-requirement" "module-name" "jazz.parse-require" "require" "map" "module" "jazz.declares" "begin" "body" "requires" "lambda" "jazz.parse-module" "rest" "name")}
    {Lisp-Entry "jazz.parse-module" () 68 9 ("%%desourcify" "%%cdr" "jazz.filter-features" "require" "%%eq?" "%%car" "%%source-code" "%%pair?" "and" "if" "proc" "rest")}
    {Lisp-Entry "jazz.parse-require" () 76 9 ("%%cdar" "set!" "begin" "cond" "%%caar" "%%eq?" "%%pair?" "and" "if" "runtime" "phase" "load" "feature-requirement" "%%cdr" "scan" "%%car" "name" "let" "proc" "require")}
    {Lisp-Entry "jazz.filter-features" () 106 9 ("%%list" "jazz.feature-safisfied?" "not" "or" "if" "extract-feature-requirement" "feature-requirement" "let" "invoice" "lambda" "map" "append" "apply" "invoices")
      {Lisp-Entry "extract-feature-requirement" () 107 11 ("cond" "%%car" "%%eq?" "%%cadr" "%%pair?" "%%cdr" "%%null?" "%%not" "and" "if" "invoice")}}
    {Lisp-Entry "jazz.feature-safisfied?" () 123 9 ("error" "##cond-expand-features" "%%memq" "%%symbol?" "if" "feature-requirement")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "syntax.scm"} {Time 128366793880000000L}
    {Lisp-Entry "test.performance.syntax" () 0 8 ()
      {Lisp-Entry "Z" () 3 26 ("allocate-z" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "f-vtable" ("Z") 7 29 ("n")}
      {Lisp-Entry "g-vtable" ("Z") 8 29 ("n")}
      {Lisp-Entry "W" () 11 26 ("allocate-w" "jazz.Object-Class" "Z")}
      {Lisp-Entry "h" ("W") 15 29 ()}}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "validate" "syntax.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "jazz.validate.syntax" () 37 9 ("jazz")
      {Lisp-Entry "validate" () 40 9 ("unless" ":text" "->string" "message" "let" "expr" "proc")}
      {Lisp-Entry "error?" () 46 9 ("expr")}}})
"test"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "test.fusion"} {Time 128366795640000000L}
    {Lisp-Entry "test.test" () 0 9 ("lalali" "lalala" "put-sequence" "List-Factory" "new" "e" "let" "jazz")}}
  {Lisp-File-Entry {File dev "jazz" "dev" "gambit" "test" "test.scm"} {Time 128366793860000000L}
    {Lisp-Entry "f" () 0 8 ("+" "y" "x" "lambda")}
    {Lisp-Entry "%" () 7 8 ()}
    {Lisp-Entry "source-code" () 11 9 ("source")}
    {Lisp-Entry "compile" () 15 9 ("source-code" "code" "let" "source")}
    {Lisp-Entry "run" () 20 9 ("7" "5" "0" "##vector-ref" "apply" "args" "code")}
    {Lisp-Entry "f2" () 24 9 ("2" "f3" "list" "error")}
    {Lisp-Entry "f3" () 28 9 ("f4" "list" "=" "if" "+" "y" "let" "x")}
    {Lisp-Entry "f4" () 33 9 ("error" "cc" "list" "y" "x")}
    {Lisp-Entry "cc" () 38 9 ("%" "set!" "cont" "lambda" "##continuation-capture")}
    {Lisp-Entry "##sub-apply2" () 44 8 ("##first-argument" "arg2" "arg1" "proc" "%%rte" "%%code" "lambda" "environment-map" "interrupts-enabled" "inline" "not" "##declare" "let")}
    {Lisp-Entry "t2" () 54 9 ("newline" "***" "write" "*" "c3" "##sub-apply2" "list" "x" "lambda" "2" "%cte" "1" "%code" "let")}
    {Lisp-Entry "t3" () 64 9 ("c4" "list" "+" "z" "y" "x" "lambda" "2" "%cte" "1" "%code" "let")}
    {Lisp-Entry "t4" () 72 9 ("cc" "list" "*" "a" "z" "lambda" "2" "%cte" "1" "%code" "let")}}
  {Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "x11" "test.fusion"} {Time 128355726620000000L}
    {Lisp-Entry "jazz.platform.x11.test" () 0 9 ("jazz")
      {Lisp-Entry "display" () 6 12 ("XOpenDisplay")}
      {Lisp-Entry "window-reg" () 8 12 ("eq?" "new-hashtable")}
      {Lisp-Entry "register-window" () 10 13 ("get-window" "window-reg" "hashtable-set!" "win")}
      {Lisp-Entry "unregister-window" () 13 13 ("get-window" "window-reg" "hashtable-set!" "win")}
      {Lisp-Entry "window-ref" () 16 13 ("window-reg" "hashtable-ref" "handle")}
      {Lisp-Entry "event-loop" () 21 13 ("Finished" "error" "destroy-window" "unregister-window" "exit" "processed" "XEvent-type-ref" ":console" "format" "begin" "unprocessed" "eq?" "event-handler" "result" "XEvent-xany-ref" "XAnyEvent-window-ref" "window-ref" "win" "true" "else" "cdr" "cdar" "not" "false" "null?" "cond" "window-reg" "table->list" "lst" "if" "display" "XNextEvent" "loop" "XEvent-make" "ev" "let")}
      {Lisp-Entry "test2" () 50 13 ("event-loop" "show-window" "register-window" "display" "1" "X11-Window" "new" "win1" "let")}}})
"thread"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "core" "thread.scm"} {Time 128366793860000000L}
    {Lisp-Entry "core.jazz.runtime.debug.thread" () 37 8 ()
      {Lisp-Entry "jazz.current-thread" () 40 9 ("jazz.scheme.current-thread" "jazz.scheme.thread-specific")}
      {Lisp-Entry "jazz.make-scheme-thread" () 44 9 ("jazz.with-thread-dynamic-environment" "lambda" "jazz.scheme.make-thread" "execute" "thread")}
      {Lisp-Entry "jazz.with-thread-dynamic-environment" () 52 9 ("jazz.with-jazz-exception-handler" "thunk")}
      {Lisp-Entry "jazz.scheme-current-thread" () 57 9 ("jazz.scheme.current-thread")}
      {Lisp-Entry "jazz.scheme-thread-start!" () 61 9 ("jazz.scheme.thread-start!" "scheme-thread")}
      {Lisp-Entry "%%atomic-region" () 70 20 ("jazz.expand-atomic-region" "apply" "rest")}
      {Lisp-Entry "jazz.expand-atomic-region" () 76 13 ("body")}
      {Lisp-Entry "jazz.expand-atomic-region" () 82 12 ("body")}}})
"tie"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "tie.scm"} {Time 128355726600000000L}})
"time"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "time.scm"} {Time 128366793880000000L}
    {Lisp-Entry "test.performance.time" () 0 8 ("new-z" "f-vtable" "f-generic" "f-separate" "iterations" "new-x" "f-module" "time")
      {Lisp-Entry "iterations" () 3 8 ()}}})
"type-table"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "type-table.scm"} {Time 128366793880000000L}
    {Lisp-Entry "type-table" () 0 8 ()}
    {Lisp-Entry "type-table-valid-options" () 5 8 ()}
    {Lisp-Entry "add-type-options" () 8 9 ("cons" "set!" "set-cdr!" "if" "list" "apply" "type-table" "assoc" "cotype" "let" "options" "type")}
    {Lisp-Entry "find-type-options" () 17 9 ("type-table" "assoc" "cotype" "let" "type")}
    {Lisp-Entry "validate-type-options" () 22 9 ("error" "else" "cddr" "validate-type-options" "type-table-valid-options" "car" "memq" "null?" "cond" "options")}
    {Lisp-Entry "type-type" () 31 9 ("car" "options")}
    {Lisp-Entry "type-stype" () 35 9 ("error" "or" "car" "stype:" "keyword-value" "stype" "let" "options")}
    {Lisp-Entry "type-stype*" () 40 9 ("*" "symbol-append" "stype*:" "keyword-value" "type-type" "type" "let" "options")}
    {Lisp-Entry "type-stype+" () 45 9 ("+" "symbol-append" "type-type" "type" "let" "options")}
    {Lisp-Entry "type-pure-ctype" () 50 9 ("type-type" "symbol->string" "ctype:" "keyword-value" "options")}
    {Lisp-Entry "type-csizeof" () 54 9 ("type-pure-ctype" "string-append" "options")}
    {Lisp-Entry "type-ctype" () 58 9 ("string-append" "type-pure-ctype" "type-native?" "if" "options")}
    {Lisp-Entry "type-ctype*" () 64 9 ("ctype*:" "keyword-value" "type-ctype" "string-append" "default" "let" "options")}
    {Lisp-Entry "type-ctype+" () 69 9 ("ctype+:" "keyword-value" "type-ctype" "string-append" "default" "let" "options")}
    {Lisp-Entry "type-foreign?" () 74 9 ("stype:" "keyword-value" "not" "options")}
    {Lisp-Entry "type-native?" () 78 9 ("stype:" "keyword-value" "options")}
    {Lisp-Entry "type-generate-foreign?" () 82 9 ("generate-foreign?:" "keyword-value" "options")}
    {Lisp-Entry "type-generate-pointer?" () 86 9 ("generate-pointer?:" "keyword-value" "options")}
    {Lisp-Entry "type-generate-array?" () 90 9 ("generate-array?:" "keyword-value" "options")}
    {Lisp-Entry "type-untyped?" () 94 9 ("untyped?:" "keyword-value" "options")}
    {Lisp-Entry "type-pass-by" () 98 9 ("pass-by:" "keyword-value" "options")}})
"typecase"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "typecase.scm"} {Time 128366793860000000L}
    {Lisp-Entry "jazz.dialect.syntax.typecase" () 38 9 ("scheme")
      {Lisp-Entry "typecase" () 51 15 ("list" "generate-symbol" "symbol" "let" "else" "expand-typecase-clauses" "symbol?" "cond" "clauses" "target")}
      {Lisp-Entry "expand-typecase-clauses" () 60 9 ("is?" "list" "or" "pair?" "else" "eq?" "cdr" "body" "car" "value" "let" "clause" "lambda" "map" "cond" "cons" "clauses" "variable")}}})
"types"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "types.scm"} {Time 128366793880000000L}})
"unspecified"
 ({Lisp-File-Entry {File oj "lib" "core" "base" "syntax" "unspecified.scm"} {Time 128369327640000000L}
    {Lisp-Entry "core.base.syntax.unspecified" () 37 8 ()
      {Lisp-Entry "%%unspecified" () 40 15 ()}
      {Lisp-Entry "%%unspecified?" () 44 15 ("value")}
      {Lisp-Entry "%%specified?" () 48 15 ("value")}}}
  {Lisp-File-Entry {File oj "lib" "core" "base" "runtime" "unspecified.scm"} {Time 128369325380000000L}
    {Lisp-Entry "core.base.runtime.unspecified" () 37 8 ()
      {Lisp-Entry "jazz.Unspecified" () 42 12 ()}
      {Lisp-Entry "jazz.Unspecified" () 46 12 ("void")}
      {Lisp-Entry "jazz.Unspecified" () 50 12 ("jazz.unspecified" "%%list")}
      {Lisp-Entry "jazz.unspecified" () 54 9 ("jazz.Unspecified")}
      {Lisp-Entry "jazz.unspecified?" () 58 9 ("jazz.Unspecified" "%%eq?" "expr")}
      {Lisp-Entry "jazz.specified?" () 62 9 ("jazz.Unspecified" "%%neq?" "expr")}}})
"untyped"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "platform" "windows" "com" "untyped.scm"} {Time 128366793880000000L}})
"utilities"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "utilities.fusion"} {Time 128368667800000000L}
    {Lisp-Entry "jazz.utilities" () 37 9 ("jazz")
      {Lisp-Entry "cn" () 50 20 ("String" "coerce")}
      {Lisp-Entry "cr" () 54 20 ("String" "coerce")}
      {Lisp-Entry "crlf" () 58 20 ("String" "list" "coerce")}
      {Lisp-Entry "find-actions" () 67 20 ("get-application" "get-bindings" "child" "context")}
      {Lisp-Entry "find-action-item" () 71 20 ("find-actions" "child" "name" "context")}
      {Lisp-Entry "require-action-item" () 75 20 ("error" "get-action-name" "get-action-context" "find-action-item" "either" "action")}
      {Lisp-Entry "call-action" () 80 20 ("action:" "invoke" "require-action-item" "action-item" "let" "event" "event:" "properties" "sender" "action")}
      {Lisp-Entry "get-action-enabled?" () 85 20 ("get-enabled?" "require-action-item" "action-item" "let" "action")}
      {Lisp-Entry "set-action-enabled?" () 90 20 ("set-enabled?" "require-action-item" "action-item" "let" "enabled?" "action")}
      {Lisp-Entry "set-actions-enabled?" () 95 20 ("set-action-enabled?" "action" "dynamic" "function" "for-each" "enabled?" "actions")}
      {Lisp-Entry "get-accelerator-table" () 106 20 ("class-actions" "pair?" "if" "extract-actions" "Accelerator-Table" "new" "object")}
      {Lisp-Entry "get-class-actions" () 111 20 ("class-actions" "object")}
      {Lisp-Entry "get-guest-actions" () 115 20 ("guest-actions" "get-application" "get-bindings" "null?" "if" "view")}
      {Lisp-Entry "get-focus-actions" () 122 20 ("focus-actions" "else" "Tree-Actions" "Tree-View" "View-Actions" "Text-Actions" "new" "list" "Text-View" "is?" "cond" "get-application" "get-bindings" "null?" "if" "view")}
      {Lisp-Entry "extract-actions" () 134 20 ("get-output" "get-children" "put" "when" "get-shortcut" "shortcut" "action-name" "let*" "action-item" "get-name" "context-name" "action-list" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let" "actions-list")}
      {Lisp-Entry "Alphabetic-Chars" () 153 19 ()}
      {Lisp-Entry "Numerical-Chars" () 156 19 ()}
      {Lisp-Entry "Standard-Chars" () 160 19 ("Divide" "Multiply" "Subtract" "Add" "Delete" "Pause" "Insert" "Next" "Prior" "Down" "Right" "Up" "Left" "End" "Home" "Tab" "Space" "Return" "Backspace" "Escape" "F12" "F11" "F10" "F9" "F8" "F7" "F6" "F5" "F4" "F3" "F2" "F1")}
      {Lisp-Entry "Non-Standard-Chars" () 195 19 ("Slash" "Period" "Comma" "Quote" "Semi-Colon" "Backslash" "Close-Bracket" "Open-Bracket" "Plus" "Minus" "Tilde")}
      {Lisp-Entry "Non-Standard-Characters" () 209 12 ()}
      {Lisp-Entry "All-Modifiers" () 223 19 (":alt" ":control" ":shift")}
      {Lisp-Entry "Shift-Modifiers" () 234 19 (":shift")}
      {Lisp-Entry "Text-Modifiers" () 237 19 (":shift")}
      {Lisp-Entry "all-accelerators-table" () 241 13 ("all-shortcuts" "Accelerator-Table" "new")}
      {Lisp-Entry "all-shortcuts" () 245 13 ("Non-Standard-Chars" "Standard-Chars" "equal?" "test:" "Text-Modifiers" "difference" "Numerical-Chars" "All-Modifiers" "Alphabetic-Chars" "build-shortcuts" "append")}
      {Lisp-Entry "build-shortcuts" () 252 13 ("get-output" "Shortcut" "put" "key" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "let" "modifiers" "keys")}
      {Lisp-Entry "Unique-Id" () 267 19 ()}
      {Lisp-Entry "Id-Cookies" () 270 19 ("eqv?" "new-hashtable")}
      {Lisp-Entry "register-cookie-id" () 274 20 ("Id-Cookies" "hash-set!" "increase!" "Unique-Id" "id" "let" "cookie")}
      {Lisp-Entry "unregister-cookie-id" () 281 20 ("Id-Cookies" "hash-clear" "id")}
      {Lisp-Entry "get-id-cookie" () 285 20 ("Id-Cookies" "hash-ref" "id")}
      {Lisp-Entry "Pi" () 294 19 ()}
      {Lisp-Entry "for-each-definition" () 303 20 ("field-creator" "type-ascendant" "category-field" "let" "when" "dynamic" "function" "process" "letrec" "for-each-definition" "unimplemented" "proc" "definition" "model")}
      {Lisp-Entry "Class-Descriptors" () 327 19 ("eq?" "new-hashtable")}
      {Lisp-Entry "get-descriptor" () 331 20 ("hash-set!" "set-name" "instantiate" "descriptor" "when" "get-class-descriptor" "form" "Class-Descriptors" "hash-ref" "either" "type-name" "name" "let" "model")}
      {Lisp-Entry "get-properties-descriptor" () 342 20 ("properties" "find-component" "when" "get-descriptor" "class-descriptor" "let" "model")}
      {Lisp-Entry "get-property-descriptor" () 348 20 ("find-component" "when" "get-properties-descriptor" "properties-descriptor" "let" "name" "model")}
      {Lisp-Entry "format-cardinality" () 359 20 ("->string" "0" "=" "if" "n")}
      {Lisp-Entry "format-plural" () 365 20 ("1" "=" "if" "plural" "n")}
      {Lisp-Entry "format-gender" () 371 20 ("first" "vowel?" "if" "word")}
      {Lisp-Entry "format-is/are" () 377 20 ("1" "=" "if" "n")}
      {Lisp-Entry "format-was/were" () 383 20 ("1" "=" "if" "n")}
      {Lisp-Entry "format-y/ies" () 389 20 ("1" "=" "if" "n")}
      {Lisp-Entry "format-following" () 395 20 ("format" "1" "=" "if" "n" "name")}
      {Lisp-Entry "Debug-Color" () 406 19 ()}
      {Lisp-Entry "get-debug-color" () 410 13 ("blue:" "green:" "red:" "Color" "new" "set!" "Debug-Color" "unless" "get-debug-color" "unimplemented")}
      {Lisp-Entry "debug" () 418 20 ("format" "debug-string" "rest")}
      {Lisp-Entry "debug-string" () 422 20 ("fresh-prompt" "display" "dynamic" "function" "get-debug-color" "either" "with-colored-output" "fresh-line" "get-console-text" "text" "get-loop-running?" "and" "when" "get-application" "appl" "let" "debug-string" "unimplemented" "color" "color:" "string")}
      {Lisp-Entry "debug-text" () 437 20 ("debug" "apply" "Console-Text-View" "self" "typed?" "unless" "debug-text" "unimplemented" "rest")}
      {Lisp-Entry "debug-self" () 444 20 ("debug" "apply" "Development" "get-%" "eq?" "when" "debug-self" "unimplemented" "rest" "object")}
      {Lisp-Entry "with-execution-context" () 459 20 (":details" "Execution-Context" "new" "context" "with-closed" "reporter" "reporter:" "details" "details:" "title" "title:" "proc")}
      {Lisp-Entry "with-execution-node" () 467 20 (":details" "Execution-Node" "new" "node" "with-closed" "reporter" "reporter:" "details" "details:" "title" "title:" "proc")}
      {Lisp-Entry "get-execution-context" () 475 20 ("get-active-context" "active-thread" "thread" "let" "get-execution-context" "unimplemented")}
      {Lisp-Entry "get-execution-stack" () 482 20 ("get-previous-node" "Execution-Context" "is-not?" "essay" "cons" "set!" "while" "lst" "get-active-node" "node" "active-thread" "thread" "let*" "get-execution-stack" "unimplemented")}
      {Lisp-Entry "Execution-Node" () 494 7 ("Object")
        {Lisp-Entry "title" () 497 8 ()}
        {Lisp-Entry "details" () 498 8 ()}
        {Lisp-Entry "reporter" () 499 8 ()}
        {Lisp-Entry "previous-node" () 500 8 ()}
        {Lisp-Entry "initialize" () 503 15 ("destroy-mandatory" "self" "set-active-node" "get-active-node" "previous-node~self" "active-thread" "thread" "let" "reporter~self" "details~self" "title~self" "set!" "nextmethod" "reporter" "reporter:" "details" "details:" "title" "title:")}
        {Lisp-Entry "destroy" () 514 15 ("nextmethod" "previous-node" "set-active-node" "active-thread" "thread" "let")}
        {Lisp-Entry "get-title" () 520 22 ("title")}
        {Lisp-Entry "get-details" () 524 22 ("details")}
        {Lisp-Entry "get-reporter" () 528 22 ("reporter")}}
      {Lisp-Entry "Execution-Context" () 532 7 ("Execution-Node")
        {Lisp-Entry "previous-context" () 535 8 ()}
        {Lisp-Entry "continuable?" () 536 8 ("false")}
        {Lisp-Entry "auto-continue?" () 537 8 ("false")}
        {Lisp-Entry "initialize" () 540 15 ("destroy-mandatory" "self" "set-active-context" "get-active-context" "previous-context~self" "set!" "active-thread" "thread" "let" "nextmethod" "apply" "rest")}
        {Lisp-Entry "destroy" () 548 15 ("nextmethod" "previous-context" "set-active-context" "active-thread" "thread" "let")}
        {Lisp-Entry "get-continuable?" () 554 22 ("continuable?")}
        {Lisp-Entry "set-continuable?" () 558 22 ("continuable?" "set!" "value")}
        {Lisp-Entry "get-auto-continue?" () 562 22 ("auto-continue?")}
        {Lisp-Entry "set-auto-continue?" () 566 22 ("auto-continue?" "set!" "value")}}
      {Lisp-Entry "with-continue" () 575 20 ("Continue" "catch" "true" "set-continuable?" "begin" "unwind-protect" "get-continuable?" "preserved" "error" "not" "if" "get-execution-context" "context" "let" "with-continue" "unimplemented" "proc")}
      {Lisp-Entry "continuable?" () 590 20 ("get-continuable?" "and" "get-execution-context" "context" "let" "continuable?" "unimplemented" "exception")}
      {Lisp-Entry "continue" () 597 20 ("Continue" "new" "throw" "continue" "unimplemented" "exception")}
      {Lisp-Entry "Restartable?" () 608 19 ("false")}
      {Lisp-Entry "with-restart" () 612 20 ("when" "return" "Restart" "catch" "while" "true" "set!" "begin" "unwind-protect" "Restartable?" "preserved" "let" "with-restart" "unimplemented" "cleanup" "proc")}
      {Lisp-Entry "restartable?" () 628 20 ("Restartable?" "exception")}
      {Lisp-Entry "restart" () 632 20 ("Restart" "new" "throw" "restart" "unimplemented" "exception")}
      {Lisp-Entry "extract-jazz-file-category" () 643 20 ("values" "extends" "name" "type" "extract-category" "type/name/extends" "extract-package" "package" "toplevel" "in" "receive" "when" "extract-jazz-file-toplevel" "in/toplevel" "let" "file")}
      {Lisp-Entry "extract-jazz-file-toplevel" () 654 13 ("values" "in" "car" "eq?" "pair?" "and" "if" "read" "in/toplevel" "let" "err" "Read-Error" "catch" "File-Reader" "new" "reader" "with-closed" "extract-jazz-file-toplevel" "unimplemented" "file")}
      {Lisp-Entry "extract-package" () 666 13 ("symbol?" "cadr" "package" "let" "cdr" "pair?" "when" "in")}
      {Lisp-Entry "extract-category" () 673 13 ("extends" "values" "Common" "Unknown" "Object" "eq?" "and" "or" "if" "symbol?" "name" "cdr" "scan" "package" "interface" "class" "memq?" "car" "type" "let" "pair?" "when" "toplevel")}
      {Lisp-Entry "component-name" () 699 20 ("get-name" "component")}
      {Lisp-Entry "dispatch?" () 708 20 ("symbol->string" "ends-with?" "symbol?" "and" "expr")}
      {Lisp-Entry "dispatch-string?" () 713 20 ("ends-with?" "string")}
      {Lisp-Entry "dispatch->name" () 717 20 ("symbol->string" "string->symbol" "string?" "if" "1" "length" "-" "0" "subseq" "string" "dynamic" "function" "extract" "let" "dispatch")}
      {Lisp-Entry "form-name" () 731 13 ("get-name" "form")}
      {Lisp-Entry "tag?" () 740 20 ("symbol->string" "starts-with?" "symbol?" "and" "expr")}
      {Lisp-Entry "tag-string?" () 745 20 ("ends-with?" "starts-with?" "and" "string")}
      {Lisp-Entry "tag->name" () 750 20 ("symbol->string" "string->symbol" "string?" "if" "length" "-" "1" "subseq" "string" "dynamic" "function" "extract" "let" "tag")}
      {Lisp-Entry "jml-keyword?" () 759 20 ("keyword?" "expr")}
      {Lisp-Entry "Logs" () 768 19 ("List-Factory" "new")}
      {Lisp-Entry "get-logs" () 772 20 ("Logs" "get-list")}
      {Lisp-Entry "Add-Log-Lock" () 776 19 ("Lock" "new")}
      {Lisp-Entry "add-log" () 780 20 ("Logs" "put" "get-logs" "memq?" "unless" "Add-Log-Lock" "synchronize" "add-log" "unimplemented" "log")}
      {Lisp-Entry "current-log" () 788 20 ("add-log" "set-current-log" "default-log" "log" "let" "get-current-log" "either")}
      {Lisp-Entry "default-log" () 796 13 ("name:" "Log" "new" "default-log" "unimplemented")}
      {Lisp-Entry "get-current-log" () 802 20 ("current-log" "get-parameter" "get-current-log" "unimplemented")}
      {Lisp-Entry "set-current-log" () 808 20 ("current-log" "set-parameter" "set-current-log" "unimplemented" "log")}
      {Lisp-Entry "with-log" () 814 20 ("add-log" "not" "and" "when" "get-name" "set-current-log" "begin" "unwind-protect" "get-current-log" "preserved" "let" "with-log" "unimplemented" "file" "file:" "name" "name:" "proc" "log")}
      {Lisp-Entry "with-node" () 828 20 ("with-node" "new-entry" "either" "let" "current-log" "log" "log:" "data" "data:" "message" "message:" "name" "name:" "tag" "tag:" "node" "node:" "proc")}
      {Lisp-Entry "log-node" () 833 20 ("log-node" "current-log" "log" "log:" "node")}
      {Lisp-Entry "log-entry" () 837 20 ("log-entry" "current-log" "log" "log:" "data" "data:" "message" "message:" "name" "name:" "tag" "tag:")}
      {Lisp-Entry "log-properties" () 841 20 (":log" ":data" ":tag" "log-entry" "get-output" "keyword->symbol" "format" "false" "set!" "if" "value" "property" "dynamic" "function" "for-each-property" "true" "first?" "String-Printer" "new" "printer" "let" "log-properties" "unimplemented" "current-log" "log" "log:" "data" "data:" "message" "message:" "name" "name:" "tag" "tag:" "properties")}
      {Lisp-Entry "new-log-node" () 856 20 ("new-entry" "current-log" "log" "log:" "data" "data:" "message" "message:" "name" "name:" "tag" "tag:")}
      {Lisp-Entry "with-profile" () 865 20 ("new-entry" "either" ":node" "after" "set!" ":log" "before" "log-profile" "result" "let" "dynamic" "function" "with-node" "with-profile" "unimplemented" "current-log" "log" "log:" "data" "data:" "message" "message:" "name" "name:" "tag" "tag:" "node" "node:" "proc")}
      {Lisp-Entry "log-profile" () 879 20 (":log" "Performance" "resources-snapshot" "log-node" "gc" "log-profile" "unimplemented" "current-log" "log" "log:" "name" "name:")}
      {Lisp-Entry "log-stack" () 886 20 (":log" ":data" ":tag" "log-entry" "Stack-Snapshot" "new" "data" "let" "log-stack" "unimplemented" "current-log" "log" "log:" "message" "message:" "name" "name:" "tag" "tag:")}
      {Lisp-Entry "profiles->jml" () 893 20 ("get-property" "node" "key:" "" "sort" "get-profiles" "profile->jml" "cons" "set!" "profile-parent" "not" "when" "profile" "name" "dynamic" "function" "for-each-map" "nodes" "let" "profiles->jml" "unimplemented" "profiles")}
      {Lisp-Entry "profile->jml" () 904 13 ("insert-profile-children" "profile-content" "node" "let" "profile->jml" "unimplemented" "profile" "parent")}
      {Lisp-Entry "profile-content" () 912 13 ("list" "properties:" "JML-Element" "new" "profile-total" "total" "0" "profile-count" "count" "profile-name" "name" "let" "profile-content" "unimplemented" "profile" "parent")}
      {Lisp-Entry "insert-profile-children" () 921 13 ("collect-profile-children" "profile->jml" "child" "dynamic" "function" "map" "insert-profile-children" "unimplemented" "profile" "parent")}
      {Lisp-Entry "collect-profile-children" () 929 13 ("profile-previous-brother" "cons" "set!" "while" "profile-last-child" "child" "children" "let" "collect-profile-children" "unimplemented" "profile")}
      {Lisp-Entry "for-each-source" () 945 20 ("get-compiled-categories" "time" "ignore" "bind" "value" "name" "else" ":source" "getf" "properties" "category-name" "for-each-map" "manifest-properties" "get-source" "get-name" "file" "dynamic" "function" "for-each-jazz-file" "cond" "get-manifest" "manifest" "get-workbench" "workbench" "let" "for-each-source" "unimplemented" "proc")}
      {Lisp-Entry "Optimized?" () 970 19 ("true")}
      {Lisp-Entry "optimized?" () 975 20 ("Optimized?")}
      {Lisp-Entry "set-optimized?" () 980 20 ("Optimized?" "set!" "flag")}
      {Lisp-Entry "macro-recording?" () 989 20 ("Recording?" "Macro-Recorder" "in-manifest?" "and")}
      {Lisp-Entry "macro-playing?" () 995 20 ("Recording-Playing?" "Macro-Recorder" "in-manifest?" "and")}
      {Lisp-Entry "Active-Locales" () 1006 19 (":french" ":english")}
      {Lisp-Entry "Active-Locale" () 1009 19 (":english")}
      {Lisp-Entry "get-locales" () 1013 20 ("Active-Locales")}
      {Lisp-Entry "get-locale" () 1017 20 ("Active-Locale")}
      {Lisp-Entry "set-locale" () 1021 20 ("locale-update" "select-locale" "set!" "Active-Locale" "/=" "when" "true" "update?" "update?:" "loc")}
      {Lisp-Entry "select-locale" () 1029 13 ("present-locale" "localize" "set-title" "locales" "locate-component" "label" "let" "when" "get-status-bar" "status" "get-application" "appl" "let*" "select-locale" "unimplemented" "locale")}
      {Lisp-Entry "locale-update" () 1040 13 ("get-toplevel" "redraw-window" "get-application" "get-menubar" "layout-menu" "locale-update" "unimplemented")}
      {Lisp-Entry "localize" () 1048 20 ("Active-Locale" "localize" "Locales" "is?" "if" "object")}
      {Lisp-Entry "localize-to" () 1057 20 ("localize" "Locales" "is?" "if" "locale" "object")}
      {Lisp-Entry "present-locale" () 1066 20 (":english" "case" "locale")}
      {Lisp-Entry "Scheme-Extensions" () 1076 19 ()}
      {Lisp-Entry "CommonLisp-Extensions" () 1079 19 ()}
      {Lisp-Entry "Jazz-Extensions" () 1082 19 ()}
      {Lisp-Entry "Cpp-Extensions" () 1085 19 ()}
      {Lisp-Entry "make-filename" () 1094 20 ("format" "extension" "base")}
      {Lisp-Entry "tokenise-alias" () 1098 20 ("tokenise" "set-alias" "string?" "get-alias" "alias" "let" "is-alias?" "when" "name")}
      {Lisp-Entry "ensure-read/write" () 1105 20 ("throw-cancel" "read/write" "checkout-file" "unless" "ignore" "cancel:" "no:" "yes:" "confirmation" "else" "checkout" "get-auto-checkout?" "checked-out-me" "=" "cancel" "no" "set-read/write" "yes" "process-keys?:" "question" "type:" "title:" "get-name" "format" "message-box" "case" "cond" "code" "false" "error?:" "get-file-status" "status" "find-repository" "Repository" "in-manifest?" "essay" "repository" "get-repositories-preferences" "pref" "get-application" "appl" "let*" "no-action" "read/write?" "exists?" "not" "or" "if" "get-file" "file" "let" "throw" "cancel-action" "cancel-action:" "moniker")}
      {Lisp-Entry "convert-extension" () 1147 20 ("else" "directory?" "convert-file-extension" "file?" "convert-path-extension" "pair?" "convert-name-extension" "string?" "not" "cond" "convert-extension" "unimplemented" "to" "from" "object")}
      {Lisp-Entry "convert-name-extension" () 1158 13 ("extract-base" "make-filename" "extract-extension" "ci=" "if" "convert-name-extension" "unimplemented" "to" "from" "name")}
      {Lisp-Entry "convert-path-extension" () 1166 13 ("convert-name-extension" "list" "butlast" "append" "extract-extension" "ci=" "if" "last" "name" "let" "convert-path-extension" "unimplemented" "to" "from" "path")}
      {Lisp-Entry "convert-file-extension" () 1175 13 ("get-base" "make-filename" "new-brother" "get-extension" "ci=" "if" "to" "from" "file")}
      {Lisp-Entry "resource?" () 1186 27 ("Resource" "is?" "object")}
      {Lisp-Entry "with-safe-execution" () 1196 20 ("no" "yes" "no:" "question" "type:" "case" "exit" "yes:" "message-box" "system-message" "begin" "and" "list" "append" "car" "not" "if" "text" "message-box?" "false" ":active-content?" "present-message" "message" "format" "invite" "let" ":exception" "dump-stack" "err" "dynamic" "function" "Error" "call-with-catch" "continue-handler" "continue-handler:" "continue-text" "continue-text:" "proc" "title")}
      {Lisp-Entry "sleep" () 1236 20 ("/" "thread-sleep!" "delay")}
      {Lisp-Entry "warn" () 1240 20 ("apply" ":console" "format" "rest" "string")}
      {Lisp-Entry "bits->symbolic" () 1245 20 ("get-output" "put" "mask-bit-set?" "when" "value" "name" "bind" "entry" "dynamic" "function" "for-each" "List-Factory" "new" "fact" "with" "get-entries" "entries" "let" "enumeration" "bits")}
      {Lisp-Entry "copy-into!" () 1256 20 ("length" "0" "naturals" "set-element!" "rank" "element" "dynamic" "function" "for-each" "seq2" "seq1")}
      {Lisp-Entry "wait-while" () 1269 20 ("0" "sleep" "process-one-message" "while" "get-process" "process" "let" "get-toplevel" "window" "predicate")}
      {Lisp-Entry "wait-until" () 1277 20 ("0" "sleep" "process-one-message" "not" "while" "get-process" "process" "let" "get-toplevel" "window" "predicate")}
      {Lisp-Entry "monitor" () 1289 20 ("leave" "when" "true" "set!" "enter" "begin" "unwind-protect" "false" "entered?" "let" "monitor" "unimplemented" "proc" "section")}
      {Lisp-Entry "present-context-actions" () 1307 20 (":hyperlink" "image:" "list" "self" "invoke" "when" "get-handler" "handler" "get-title" "get-image" "image" "let*" "action" "dynamic" "function" "map" "present-context-text" "present-context-actions" "unimplemented" "actions" "title")}
      {Lisp-Entry "present-context-text" () 1323 20 ("list" "set-text" "Context-Text-View" "new" "text-view" "let" "present-context-text" "unimplemented" "text" "title")}
      {Lisp-Entry "message-box" () 1336 20 ("show-box" "system-message" "apply" "not" "if" "get-process" "process" "let" "rest" "text")}
      {Lisp-Entry "system-message" () 1343 20 ("MB_TASKMODAL" "NULL" "MessageBox" "rest" "text")}
      {Lisp-Entry "display-tabulated" () 1352 20 ("print-to" "newline" "->string" "output" "column" "object" "row" "dynamic" "function" "for-each" "add-columns" "left" "alignment:" "border-after:" "Aligned-Column" "Display-Column" "=" "if" "collect" "0" "from" "n" "in" "ignore" "for" "loop" "columns" "1" "length" "-" "last" "car" "sample" "Columns-Display" "new" "display" "let*" "display-tabulated" "unimplemented" "printer" "data")}
      {Lisp-Entry "size-rect" () 1384 20 ("get-height" "get-width" "0" "Rect" "new" "size")}
      {Lisp-Entry "position/size->rect" () 1388 20 ("get-v" "get-h" "h/v/size->rect" "size" "position")}
      {Lisp-Entry "h/v/size->rect" () 1392 20 ("get-height" "get-width" "+" "Rect" "new" "size" "v" "h")}
      {Lisp-Entry "h/v/width/height" () 1396 20 ("+" "Rect" "new" "height" "width" "v" "h")}
      {Lisp-Entry "corners->rect" () 1400 20 ("get-v" "get-h" "Rect" "new" "bottom-right" "top-left")}
      {Lisp-Entry "normalize-rect" () 1404 20 ("" "if" "Rect" "new" "get-bottom" "b" "get-right" "r" "get-top" "t" "get-left" "l" "let" "rect")}
      {Lisp-Entry "rect-position" () 1416 20 ("get-top" "get-left" "Point" "new" "rect")}
      {Lisp-Entry "rect-size" () 1420 20 ("rect-height" "rect-width" "Dimension" "new" "rect")}
      {Lisp-Entry "rect-width" () 1426 20 ("get-left" "get-right" "-" "rect")}
      {Lisp-Entry "rect-height" () 1430 20 ("get-top" "get-bottom" "-" "rect")}
      {Lisp-Entry "offset-rect" () 1434 20 ("get-bottom" "get-right" "get-top" "get-left" "+" "Rect" "new" "v" "h" "rect")}
      {Lisp-Entry "inflate-rect" () 1442 20 ("get-bottom" "get-right" "+" "get-top" "get-left" "-" "Rect" "new" "h" "w" "rect")}
      {Lisp-Entry "expand-rect" () 1450 20 ("get-bottom" "get-right" "get-top" "get-left" "+" "Rect" "new" "b" "r" "t" "l" "rect")}
      {Lisp-Entry "base-rect" () 1458 20 ("get-top" "get-left" "-" "offset-rect" "rect")}
      {Lisp-Entry "fit-rects" () 1462 20 (">" "if" "both" "height" "width" "case" "rh" "/" "rw" "sh" "sw" "rect-height" "dh" "rect-width" "dw" "let*" "mode" "dst" "src")}
      {Lisp-Entry "fit-within" () 1475 20 ("values" "get-v" "get-h" "between" "new-position" "max-position" "Point" "min-position" "new" "new-size" "get-height" "height" "-" "min" "get-width" "max" "width" "rect-position" "position" "rect-size" "size" "let*" "padding" "padding:" "0" "Dimension" "minimum-size" "minimum-size:" "rect" "outer")}
      {Lisp-Entry "rect-union" () 1487 20 ("get-bottom" "get-right" ">" "get-top" "get-left" "" "if" "Rect" "new" "y" "x")}
      {Lisp-Entry "rect-intersection" () 1495 20 ("0" "get-bottom" "get-right" "" "get-top" "get-left" ">" "Rect" "new" "rect-intersect?" "if" "y" "x")}
      {Lisp-Entry "rect-intersect?" () 1505 20 (">" "get-bottom" "get-top" "get-right" "get-left" "" "and" "y" "x")}
      {Lisp-Entry "rects-intersect?" () 1512 20 ("get-bottom" "get-right" ">" "get-height" "get-v" "get-top" "get-width" "get-h" "+" "get-left" "" "and" "size" "position" "rect")}
      {Lisp-Entry "in-rect?" () 1519 20 ("get-bottom" "get-right" "" "get-top" "get-v" "get-left" "get-h" ">=" "and" "rect" "pt")}
      {Lisp-Entry "in-size?" () 1526 20 ("get-height" "get-width" "" "get-v" "0" "get-h" ">=" "and" "size" "pt")}
      {Lisp-Entry "rect-intersects-region?" () 1534 20 ("get-handle" "RectInRegion" "get-height" "get-width" "+" "new-rect" "rect" "with" "region" "size" "v" "h")}
      {Lisp-Entry "add-rects" () 1545 20 ("get-bottom" "get-right" "get-top" "get-left" "+" "Rect" "new" "r2" "r1")}
      {Lisp-Entry "subtract-rects" () 1553 20 ("get-bottom" "get-right" "get-top" "get-left" "-" "Rect" "new" "r2" "r1")}
      {Lisp-Entry "inverse-rect" () 1561 20 ("get-right" "get-bottom" "get-left" "get-top" "Rect" "new" "rect")}
      {Lisp-Entry "center" () 1569 20 ("center" "justify" "outer" "inner")}
      {Lisp-Entry "justify" () 1573 20 ("class-of" "type-name" "number?" "second" "get-height" "first" "pair?" "get-width" "Point" "new" "Dimension" "is?" "and" "cond" "error" "else" "tail" "2" "-" "quotient" "center" "head" "case" "+" "0" ">=" "integer?" "if" "j" "o" "i" "dynamic" "function" "proc" "let" "justification" "outer" "inner")}
      {Lisp-Entry "cycle-naturals" () 1597 20 ("get-output" "+" "put" "by" "m" "do" "below" "0" "from" "n" "for" "loop" "quotient" "inc" "*" "cardinality" "List-Factory" "new" "fact" "let*" "subcycle" "cycle")}
      {Lisp-Entry "fit" () 1607 20 ("else" "-" ">=" "+" "" "0" ">" "cond" "max" "size" "alternate" "pos")}
      {Lisp-Entry "fit-point" () 1614 20 ("get-height" "get-v" "get-width" "get-h" "fit" "Point" "new" "max" "size" "alternate" "pos")}
      {Lisp-Entry "scalar-product" () 1620 20 ("get-v" "get-h" "*" "+" "b" "a")}
      {Lisp-Entry "distance" () 1624 20 ("-" "norm" "end" "start")}
      {Lisp-Entry "line-distance" () 1628 20 ("Point" "new" "scalar-product" "/" "abs" "0" "=" "if" "get-v" "get-h" "-" "sqr" "+" "sqrt" "divider" "let" "end" "start" "point")}
      {Lisp-Entry "resize-parts" () 1649 20 ("naturals" "1" "between?" "or" "n" "dynamic" "function" "map" "end2" "end" "start" "parity" "modulo" "+" "extra" "-" "quotient" "base" "0" "" "if" "offset" "let*" "count" "delta" "size")}
      {Lisp-Entry "scale" () 1662 20 ("Number" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "left" "Rect" "get-height" "height" "get-width" "width" "Dimension" "*" "round" "new" "get-v" "v" "get-h" "h" "let" "Point" "typecase" "sc" "shape")}
      {Lisp-Entry "scale-factor" () 1687 20 ("/" "inner" "outer")}
      {Lisp-Entry "get-area" () 1691 20 ("get-height" "get-width" "*" "size")}
      {Lisp-Entry "iterate-cells" () 1700 20 ("set!" "while" "either" "horizontal" "cell" "dynamic" "function" "advance" "previous-cell" "backward" "next-cell" "forward" "case" "next" "let*" "proc" "direction" "start" "bottom-right" "top-left")}
      {Lisp-Entry "previous-cell" () 1713 13 ("horizontal" "Cell" "new" "minor" "major" "receive" "when" ">" "get-row" "get-col" "loop-cell" "info" "let" "vertical" "case" "direction" "max-cell" "min-cell" "cell")}
      {Lisp-Entry "next-cell" () 1725 13 ("horizontal" "Cell" "new" "minor" "major" "receive" "when" "" "1" "get-row" "get-col" "loop-cell" "info" "let" "vertical" "case" "direction" "max-cell" "min-cell" "cell")}
      {Lisp-Entry "loop-cell" () 1738 13 ("else" "+" "values" "cond" "test" "step" "end-minor" "end-major" "start-minor" "start-major" "minor" "major")}
      {Lisp-Entry "output-header" () 1752 20 ("when" "contributor" "for-each" "jazzscheme" "format" "toplevel-comment" "cpp/java" "case" "comment" "length" "make-string" "system-padding" "get-process" "system-title" "either" "let*" "dynamic" "function" "with-printer" "true" "end-proper?" "end-proper?:" "contributors" "contributors:" "copyright" "copyright:" "author" "author:" "license" "license:" "system" "system:" "jazz" "language" "language:" "printer" "title")}
      {Lisp-Entry "output-section" () 1804 20 ("2" "*" "format" "4" "length" "+" "make-string" "extra" "toplevel" "cpp/java" "case" "comment" "let" "0" "level" "level:" "jazz" "language" "language:" "printer" "title")}
      {Lisp-Entry "require-argument" () 1820 20 ("command-line" "error" "command-argument" "either" "require-argument" "unimplemented" "key")}
      {Lisp-Entry "argument/property" () 1827 20 ("get-system-property" "command-argument" "either" "argument/property" "unimplemented" "prop" "arg")}
      {Lisp-Entry "require-argument/property" () 1834 20 ("command-line" "error" "argument/property" "either" "require-argument/property" "unimplemented" "prop" "arg")}
      {Lisp-Entry "boolean-argument/property" () 1841 20 ("not" "if" "argument/property" "value" "let" "default" "prop" "arg")}
      {Lisp-Entry "integer-argument/property" () 1848 20 ("parse-integer" "integer?" "if" "when" "argument/property" "str/int" "let" "prop" "arg")}
      {Lisp-Entry "file-argument/property" () 1856 20 ("make-file" "when" "argument/property" "str" "let" "extension" "prop" "arg")}
      {Lisp-Entry "require-file-argument/property" () 1862 20 ("require-argument/property" "make-file" "extension" "prop" "arg")}
      {Lisp-Entry "make-file" () 1866 13 ("command-line" "error" "get-extension" "/=" "if" "tokenise" "File" "new" "file" "let" "make-file" "unimplemented" "extension" "arg" "str")}
      {Lisp-Entry "directory-argument/property" () 1875 20 ("make-directory" "when" "argument/property" "str" "let" "prop" "arg")}
      {Lisp-Entry "require-directory-argument/property" () 1881 20 ("require-argument/property" "make-directory" "prop" "arg")}
      {Lisp-Entry "make-directory" () 1885 13 ("tokenise" "Directory" "new" "make-directory" "unimplemented" "str")}
      {Lisp-Entry "host-argument/property" () 1891 20 ("name:" "Host" "new" "when" "argument/property" "name" "let" "host-argument/property" "unimplemented" "prop" "arg")}
      {Lisp-Entry "port-argument/property" () 1899 20 ("argument/property" "prop" "arg")}
      {Lisp-Entry "get-preferences" () 1908 20 ("find-component" "either" "error" "when" "not" "if" "get-preferences-root" "root" "get-process" "process" "let*" "true" "error?" "error?:" "name")}
      {Lisp-Entry "set-preference" () 1921 20 ("set-property" "get-process" "get-preferences-designer" "designer" "let" "value" "property" "preferences")}
      {Lisp-Entry "sort-case-sensitive?" () 1926 20 ("get-sort-case-sensitive?" "and" "false" "error?:" "tree" "interface" "get-preferences" "pref" "let")}
      {Lisp-Entry "sort-predicates" () 1931 20 ("ci>" "ci<" "ci=" ">" "" "=" "values" "sort-case-sensitive?" "if")}
      {Lisp-Entry "sort-predicate" () 1937 20 ("error" "else" "ci-compare" "compare" "ci>=" ">=" "greater/equal" "ci>" ">" "greater" "ci<=" "smaller/equal" "ci<" "" "smaller" "ci=" "=" "if" "equal" "case" "sort-case-sensitive?" "case-sensitive?" "let" "name")}
      {Lisp-Entry "backup-file" () 1954 20 ("separator:" "get-extension" "get-base" "format" "get-parent" "new-unique-file" "file")}
      {Lisp-Entry "fail-safe-save" () 1958 20 ("else" "move-pathname" "exists?" "error?:" "delete-file" "not" "cond" "true" "set!" "begin" "unwind-protect" "false" "completed?" "backup-file" "back" "clone-file" "temp" "let" "fail-safe-save" "unimplemented" "proc" "file")}
      {Lisp-Entry "read-tab-delimited" () 1983 20 ("get-output" "patch-for-excel" "map" "put" "split" "values" "true" "set!" "if" "read-line" "line" "not" "while" "false" "done?" "List-Factory" "fact" "String" "list" "coerce" "tab" "let" "File-Reader" "new" "reader" "with-closed" "file")}
      {Lisp-Entry "patch-for-excel" () 1997 13 ("length" "-" "1" "subseq" "ends-with?" "starts-with?" "and" "if" "line")}
      {Lisp-Entry "convert-tab-delimited->jml" () 2004 20 ("verify-reload" "get-application" "appl" "let" "get-name" "user-message" "pretty-print" "true" "set-printer-use-utf8?" "File-Printer" "printer" "with-closed" "parse" "preferences:" "JML-Parser" "JML-Preferences" "new" "pref" "jml" "read-tab-delimited" "content" "get-base" "format" "get-parent" "new-file" "output" "let*" "convert-tab-delimited->jml" "unimplemented" "parser" "input")}
      {Lisp-Entry "save-tab-delimited" () 2021 20 ("format" "false" "set!" "if" "text" "true" "first?" "let" "line" "dynamic" "function" "for-each" "File-Printer" "new" "printer" "with-closed" "save-tab-delimited" "unimplemented" "file" "content")}
      {Lisp-Entry "system-error" () 2042 20 ("present-system-message" "error" "id")}
      {Lisp-Entry "present-system-message" () 2046 20 ("format-system-message" "format" "id")}
      {Lisp-Entry "present-winerror" () 2052 20 ("winerror" "present-system-message" "present-winerror" "unimplemented")}
      {Lisp-Entry "winhelp" () 2063 20 ("HELP_KEY" "parse" "get-toplevel-hwnd" "WinHelp" "winhelp" "unimplemented" "entry" "winhelp-file")}
      {Lisp-Entry "add-listener" () 2074 20 ("cons" "lst" "listener")}
      {Lisp-Entry "remove-listener" () 2078 20 ("listener-target?" "test:" "remove!" "Handler" "typed?" "if" "lst" "listener")}
      {Lisp-Entry "listener?" () 2084 20 ("listener-target?" "test:" "member?" "lst" "object")}
      {Lisp-Entry "listener-target?" () 2088 13 ("get-target" "eq?" "listener" "object")}
      {Lisp-Entry "file-document" () 2097 20 ("get-guest" "when" "find-document" "frame" "get-application" "appl" "let*" "file-document" "unimplemented" "file")}
      {Lisp-Entry "int-resource" () 2111 20 ("get-name" "make-int-resource" "integer?" "if" "int-resource" "unimplemented" "resource")}
      {Lisp-Entry "user-message" () 2124 20 ("format" "apply" "Locales" "is?" "if" "set-status-message" "when" "get-application" "appl" "let" "rest" "obj")}
      {Lisp-Entry "clear-user-message" () 2130 20 ("user-message")}
      {Lisp-Entry "disabled-functionnality" () 2139 20 ("error")}
      {Lisp-Entry "must-implement" () 2143 20 ("either" "error" "what" "definition-name")}
      {Lisp-Entry "sequence->string" () 2154 20 ("0" "naturals" "set-element!" "+" "element" "make-word" "c" "*" "n" "i" "dynamic" "function" "for-each" "make-string" "string" "1" "2" "quotient" "-" "length" "size" "let*" "seq")}
      {Lisp-Entry "string->sequence" () 2166 20 ("-" "0" "naturals" "hichar" "lochar" "set-element!" "element" "char->integer" "c" "n" "let" "i" "dynamic" "function" "for-each" "size:" "new" "seq" "2" "1" "+" "*" "size" "length" "let*" "type" "string")}
      {Lisp-Entry "datacontainer" () 2186 15 ("set!" "format" "string->symbol" "access" "nextmethod" "initialize" "definition" "slot" ":location" "attribute" "increase!" "field" "dynamic" "function" "map" "Data-Container" "extends" "class" "1" "rank" "generate-symbol" "table" "let" "fields" "name" "bind" "form")}
      {Lisp-Entry "iterate-hierarchical-data" () 2204 20 ("increase!" "0" "set!" "/=" "when" "scan-id" "scan-row" "" "while" "scan-count" "cdr" "scan" "1" "id-size" "id-data" "id" "car" "id-row" "let*" "not" "unless" "key" "size" "data" "proc")}
      {Lisp-Entry "collect-hierarchical-data" () 2227 20 ("get-output" "put" "when" "object" "row" "dynamic" "function" "iterate-hierarchical-data" "List-Factory" "new" "fact" "let" "key" "size" "data" "proc")}
      {Lisp-Entry "sorted-hierarchical-data" () 2241 20 ("key:" "list" "collect-hierarchical-data" "sort" "third" "second" "first" "dynamic" "function" "collect" "sort-key" "sort-test" "key" "size" "data" "proc")}
      {Lisp-Entry "request-data-source" () 2255 20 ("process-modal" "external-name" "set-provider" "when" "get-guest" "manager" "let" "false" "host-visible?:" "Data-Source-Chooser" "autoload" "new-dialog" "dialog" "process?" "receive" "provider" "provider:")}
      {Lisp-Entry "2-Seconds-Tolerance" () 2268 19 ()}
      {Lisp-Entry "different-times?" () 2272 13 ("get-elapse" "-" "abs" ">" "2-Seconds-Tolerance" "tolerance" "tolerance:" "time2" "time1")}
      {Lisp-Entry "different-file-content?" () 2277 13 ("read-string-content" "get-size" "/=" "or" "input2" "File-Reader" "new" "input1" "with-closed" "file2" "file1")}
      {Lisp-Entry "different-file-content-no-whitespace?" () 2286 13 ("read-string-content" "wi=" "not" "input2" "File-Reader" "new" "input1" "with-closed" "file2" "file1")}
      {Lisp-Entry "present-hour/minutes" () 2293 20 ("format" "minutes" "hour")}}})
"v"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "test" "version" "v.scm"} {Time 128366793540000000L}
    {Lisp-Entry "test.v" () 0 9 ("test")}})
"v10"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "test" "version" "v10.scm"} {Time 128366793540000000L}
    {Lisp-Entry "test.v10" () 0 9 ("test")}})
"v11"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "test" "version" "v11.scm"} {Time 128366793540000000L}
    {Lisp-Entry "test.v11" () 0 9 ("test")}})
"variables"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "variables.scm"} {Time 128355726660000000L}
    {Lisp-Entry "SEPARATE" () 4 8 ("2")}
    {Lisp-Entry "inc-separate" () 7 9 ("-" "1" "+" "SEPARATE" "set!" "begin" "0" ">" "if" "n" "iter" "let" "cnt")}
    {Lisp-Entry "BLOCK" () 19 8 ("3")}
    {Lisp-Entry "inc-block" () 22 9 ("-" "1" "+" "BLOCK" "set!" "begin" "0" ">" "if" "n" "iter" "let" "cnt")}})
"vb"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "vb.scm"} {Time 128355726660000000L}
    {Lisp-Entry "VAR" () 5 8 ("2")}
    {Lisp-Entry "inc" () 8 9 ("##fixnum.-" "1" "##fixnum.+" "VAR" "set!" "begin" "0" "##fixnum.>" "if" "n" "iter" "let" "cnt")}})
"vs"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "performance" "vs.scm"} {Time 128355726660000000L}
    {Lisp-Entry "VAR" () 4 8 ("2")}
    {Lisp-Entry "inc" () 7 9 ("##fixnum.-" "1" "##fixnum.+" "VAR" "set!" "begin" "0" "##fixnum.>" "if" "n" "iter" "let" "cnt")}})
"walker"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "core" "library" "syntax" "walker.scm"} {Time 128370336300000000L}
    {Lisp-Entry "core.library.syntax.walker" () 61 8 ("jazz.new-core-dialect" "core" "jazz.register-dialect" "jazz.Core-Walker" "jazz.Core-Dialect" "jazz.Walker" "jazz.dialect.language.fold-literal" "set!" "jazz.Time" "jazz.C-Function" "jazz.C-Initialize" "jazz.C-Declare" "jazz.C-Include" "jazz.Or" "jazz.And" "jazz.Case" "jazz.Cond" "jazz.If" "##cdr" "scheme.dialect.kernel.cdr" "##car" "scheme.dialect.kernel.car" "scheme.dialect.kernel./" "##fl*" "##fx*" "scheme.dialect.kernel.*" "##fl-" "##fx-" "jazz.dialect.language.-" "##fl+" "##fx+" "jazz.dialect.language.+" "##fl>=" "##fx>=" "jazz.dialect.language.>=" "##fl>" "##fx>" "jazz.dialect.language.>" "##fl<=" "##fx<=" "jazz.dialect.language.<=" "##fl<" "##fx<" "jazz.dialect.language.<" "##fl=" "##fx=" "jazz.dialect.language.=" "jazz.inline-patterns" "jazz.Call" "jazz.Begin" "jazz.Internal-Define" "jazz.Body" "jazz.Receive" "jazz.Letrec" "jazz.Letstar" "jazz.Named-Let" "jazz.Let" "jazz.Lambda" "jazz.Assignment" "jazz.Reference" "jazz.Quasiquote" "jazz.Constant" "jazz.Expression" "jazz.Annotated-Frame" "jazz.Annotated-Variable" "jazz.Macro-Form" "jazz.Special-Form" "jazz.Form-Binding" "jazz.Macro-Symbol" "jazz.Self-Binding" "jazz.Rest-Parameter" "jazz.Named-Parameter" "jazz.Optional-Parameter" "jazz.Dynamic-Parameter" "jazz.Parameter" "jazz.NextMethod-Variable" "jazz.Variable" "jazz.Symbol-Binding" "jazz.Signature" "jazz.Walk-Frame" "jazz.Unresolved-Error" "jazz.Walk-Error" "jazz.Walk-Location" "jazz.Walk-Context" "jazz.C-Definition-Declaration" "jazz.C-Type-Declaration" "jazz.Syntax-Declaration" "jazz.Macro-Declaration" "void" "jazz.Hashtable" "hashtable" "jazz.Vector" "vector" "jazz.Keyword" "keyword" "jazz.Symbol" "symbol" "jazz.String" "string" "jazz.Foreign" "foreign" "jazz.Procedure" "procedure" "jazz.Port" "port" "jazz.Pair" "pair" "jazz.Null" "null" "jazz.List" "list" "jazz.Flonum" "fl" "jazz.Fixnum" "fx" "jazz.Real" "real" "jazz.Integer" "int" "jazz.Number" "number" "jazz.Char" "char" "jazz.Boolean" "bool" "any" "jazz.primitive-types" "%%hashtable-set!" "jazz.Any" "jazz.Any-Class" "jazz.Function-Type" "jazz.Void" "jazz.Void-Class" "jazz.Autoload-Declaration" "jazz.Export-Declaration" "jazz.Import-Invoice" "jazz.Export-Invoice" "jazz.Library-Invoice" "jazz.Library-Declaration" "jazz.Namespace-Declaration" "jazz.Module-Declaration" "jazz.Autoload-Reference" "jazz.Export-Reference" "jazz.Library-Reference" "jazz.Declaration-Reference" "jazz.Declaration" "jazz.Lexical-Binding" "jazz.Walk-Binding" "jazz.encapsulate-class")
      {Lisp-Entry "jazz.private-access" () 70 8 ("0")}
      {Lisp-Entry "jazz.public-access" () 74 8 ("1")}
      {Lisp-Entry "jazz.protected-access" () 78 8 ("2")}
      {Lisp-Entry "jazz.make-access-lookups" () 82 9 ("eq?" "%%make-hashtable" "%%vector-set!" "begin" "%%fx<=" "if" "0" "n" "iter" "1" "%%fx+" "%%make-vector" "lookups" "let" "access-level")}
      {Lisp-Entry "jazz.Walk-Binding" () 97 19 ("jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.walk-binding-lookup" ("jazz.Walk-Binding") 101 22 ("symbol")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Walk-Binding") 102 22 ("environment")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Walk-Binding") 103 22 ("arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-binding-call" ("jazz.Walk-Binding") 104 22 ("environment" "arguments")}
      {Lisp-Entry "jazz.emit-inlined-binding-call" ("jazz.Walk-Binding") 105 22 ("environment" "arguments")}
      {Lisp-Entry "jazz.walk-binding-assignable?" ("jazz.Walk-Binding") 106 22 ()}
      {Lisp-Entry "jazz.walk-binding-assigned" ("jazz.Walk-Binding") 107 22 ("assignment")}
      {Lisp-Entry "jazz.emit-binding-assignment" ("jazz.Walk-Binding") 108 22 ("environment" "value")}
      {Lisp-Entry "jazz.walk-binding-walkable?" ("jazz.Walk-Binding") 109 22 ()}
      {Lisp-Entry "jazz.walk-binding-walk-form" ("jazz.Walk-Binding") 110 22 ("form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-binding-expandable?" ("jazz.Walk-Binding") 111 22 ()}
      {Lisp-Entry "jazz.walk-binding-expand-form" ("jazz.Walk-Binding") 112 22 ("form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-binding-lookup" ("jazz.Walk-Binding") 115 21 ("symbol")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Walk-Binding") 119 21 ("jazz.unspecified" "environment")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Walk-Binding") 123 21 ("jazz.unspecified" "arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-binding-call" ("jazz.Walk-Binding") 127 21 ("jazz.Any" "jazz.codes-forms" "binding" "jazz.emit-binding-reference" "%%code-form" "jazz.new-code" "environment" "arguments")}
      {Lisp-Entry "jazz.emit-inlined-binding-call" ("jazz.Walk-Binding") 134 21 ("environment" "arguments")}
      {Lisp-Entry "jazz.walk-binding-assignable?" ("jazz.Walk-Binding") 138 21 ()}
      {Lisp-Entry "jazz.walk-binding-assigned" ("jazz.Walk-Binding") 142 21 ("jazz.unspecified" "assignment")}
      {Lisp-Entry "jazz.emit-binding-assignment" ("jazz.Walk-Binding") 146 21 ("jazz.unspecified" "environment" "value")}
      {Lisp-Entry "jazz.walk-binding-walkable?" ("jazz.Walk-Binding") 150 21 ()}
      {Lisp-Entry "jazz.walk-binding-expandable?" ("jazz.Walk-Binding") 154 21 ()}
      {Lisp-Entry "jazz.Lexical-Binding" () 166 19 ("type" "name" "jazz.Object-Class" "jazz.Walk-Binding")}
      {Lisp-Entry "jazz.walk-binding-lookup" ("jazz.Lexical-Binding") 171 21 ("binding" "%%get-lexical-binding-name" "%%eq?" "if" "symbol")}
      {Lisp-Entry "jazz.Declaration" () 185 19 ("locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "jazz.Object-Class" "type" "name" "jazz.Lexical-Binding")}
      {Lisp-Entry "jazz.setup-declaration" () 195 9 ("%%get-declaration-toplevel" "%%not" "if" "%%set-declaration-toplevel" "%%get-declaration-parent" "parent" "let" "jazz.get-declaration-path" "jazz.compose-name" "%%apply" "%%set-declaration-locator" "new-declaration")}
      {Lisp-Entry "jazz.resolve-declaration" ("jazz.Declaration") 201 22 ()}
      {Lisp-Entry "jazz.resolve-declaration" ("jazz.Declaration") 204 21 ("declaration")}
      {Lisp-Entry "jazz.lookup-declaration" ("jazz.Declaration") 208 22 ("external?" "symbol")}
      {Lisp-Entry "jazz.get-declaration-path" () 211 9 ("jazz.reverse!" "%%cons" "%%list" "%%not" "if" "%%get-declaration-parent" "parent" "%%get-lexical-binding-name" "name" "let" "lambda" "proc" "letrec" "declaration")}
      {Lisp-Entry "jazz.find-class-declaration" () 222 9 ("%%get-declaration-parent" "else" "jazz.Class-Declaration" "jazz.is?" "jazz.error" "%%not" "cond" "decl" "iter" "let" "declaration")}
      {Lisp-Entry "jazz.walk-binding-lookup" ("jazz.Declaration") 232 21 ("binding" "jazz.lookup-declaration" "symbol")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Declaration") 236 21 ("declaration" "%%get-declaration-locator" "jazz.walk-error" "arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.lookup-declaration" ("jazz.Declaration") 240 21 ("external?" "symbol")}
      {Lisp-Entry "jazz.get-declaration-references" ("jazz.Declaration") 244 22 ()}
      {Lisp-Entry "jazz.get-declaration-references" ("jazz.Declaration") 247 21 ()}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Declaration") 251 22 ("environment")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Declaration") 254 21 ("declaration" "jazz.error" "environment")}
      {Lisp-Entry "jazz.expand-referenced-declaration" ("jazz.Declaration") 258 22 ()}
      {Lisp-Entry "jazz.expand-referenced-declaration" ("jazz.Declaration") 261 21 ()}
      {Lisp-Entry "jazz.fold-declaration" ("jazz.Declaration") 265 22 ("s" "k" "f")}
      {Lisp-Entry "jazz.fold-declaration" ("jazz.Declaration") 268 21 ("declaration" "s" "k" "f")}
      {Lisp-Entry "jazz.Declaration-Reference" () 280 19 ("declaration" "name" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.resolve-reference" ("jazz.Declaration-Reference") 285 22 ("library-declaration")}
      {Lisp-Entry "jazz.Library-Reference" () 296 19 ("jazz.Object-Class" "declaration" "name" "jazz.Declaration-Reference")}
      {Lisp-Entry "jazz.new-library-reference" () 300 9 ("jazz.Library-Reference" "jazz.allocate-library-reference" "declaration" "name")}
      {Lisp-Entry "jazz.resolve-reference" ("jazz.Library-Reference") 304 21 ("%%set-declaration-reference-declaration" "%%get-declaration-reference-name" "jazz.locate-library-declaration" "declaration" "let" "declaration-reference" "%%get-declaration-reference-declaration" "or" "library-declaration")}
      {Lisp-Entry "jazz.Export-Reference" () 319 19 ("library-reference" "jazz.Object-Class" "declaration" "name" "jazz.Declaration-Reference")}
      {Lisp-Entry "jazz.new-export-reference" () 323 9 ("jazz.Export-Reference" "jazz.allocate-export-reference" "library-reference" "declaration" "name")}
      {Lisp-Entry "jazz.resolve-reference" ("jazz.Declaration-Reference") 327 21 ("%%set-declaration-reference-declaration" "uptodate" "public" "type" "jazz.new-export-declaration" "declaration" "let" "%%get-declaration-reference-name" "jazz.parse-exported-symbol" "symbol" "name" "receive" "declaration-reference" "%%get-declaration-reference-declaration" "or" "library-declaration")}
      {Lisp-Entry "jazz.parse-exported-symbol" () 335 9 ("jazz.split-identifier" "jazz.last" "values" "jazz.composite-name?" "if" "name" "library-declaration")}
      {Lisp-Entry "jazz.Autoload-Reference" () 349 19 ("jazz.Object-Class" "library-reference" "declaration" "name" "jazz.Export-Reference")}
      {Lisp-Entry "jazz.new-autoload-reference" () 353 9 ("jazz.Autoload-Reference" "jazz.allocate-autoload-reference" "library-reference" "declaration" "name")}
      {Lisp-Entry "jazz.resolve-autoload-reference" () 357 9 ("%%set-declaration-reference-declaration" "%%assert" "jazz.new-autoload-declaration" "declaration" "jazz.Any" "type" "%%get-declaration-reference-name" "name" "let*" "%%get-declaration-reference-declaration" "or" "exported-library-reference" "library-declaration" "declaration-reference")}
      {Lisp-Entry "jazz.Module-Declaration" () 375 19 ("requires" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-module-declaration" () 379 9 ("jazz.setup-declaration" "uptodate" "public" "jazz.Module-Declaration" "jazz.allocate-module-declaration" "new-declaration" "let" "requires" "parent" "name")}
      {Lisp-Entry "jazz.Namespace-Declaration" () 393 19 ("body" "lookups" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.find-declaration" () 398 9 ("jazz.private-access" "%%get-access-lookup" "%%hashtable-ref" "name" "namespace-declaration")}
      {Lisp-Entry "jazz.Library-Declaration" () 410 19 ("autoloads" "references" "variables" "literals" "imports" "exports" "requires" "dialect" "jazz.Object-Class" "body" "lookups" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Namespace-Declaration")}
      {Lisp-Entry "jazz.new-library-declaration" () 421 9 ("jazz.setup-declaration" "jazz.public-access" "jazz.make-access-lookups" "uptodate" "public" "jazz.Library-Declaration" "jazz.allocate-library-declaration" "new-declaration" "let" "imports" "exports" "requires" "dialect" "parent" "name")}
      {Lisp-Entry "jazz.setup-library-lookups" () 427 9 ("%%get-library-declaration-exports" "exported-library-declaration" "else" "jazz.resolve-autoload-reference" "exported-library-reference" "jazz.resolve-reference" "%%hashtable-set!" "%%get-declaration-reference-name" "jazz.identifier-name" "name" "declaration-reference" "cond" "%%get-export-invoice-autoload" "autoload" "exported-library-invoice" "public" "%%get-library-declaration-imports" "ignore-duplicates" "jazz.hashtable-merge" "jazz.public-access" "imported" "%%get-library-invoice-library" "imported-library-declaration" "if" "%%get-library-invoice-only" "only" "imported-library-invoice" "lambda" "for-each" "jazz.private-access" "%%get-access-lookup" "private" "let" "library-declaration")
        {Lisp-Entry "ignore-duplicates" () 428 11 ("new" "old" "key")}}
      {Lisp-Entry "jazz.lookup-declaration" ("jazz.Library-Declaration") 463 21 ("declaration" "%%get-namespace-declaration-lookups" "%%vector-ref" "%%hashtable-ref" "jazz.private-access" "jazz.public-access" "if" "access" "let" "external?" "symbol")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Library-Declaration") 470 21 ("jazz.module-loaded" "jazz.queue-list" "%%get-library-declaration-imports" "%%get-library-declaration-exports" "%%get-lexical-binding-name" "syntax" "%%neq?" "and" "%%when" "%%get-library-invoice-phase" "jazz.resolve-reference" "library-declaration" "jazz.register-autoload" "jazz.identifier-name" "name" "decl" "%%get-library-invoice-library" "%%get-declaration-reference-name" "cond" "%%get-export-invoice-autoload" "autoload" "%%get-library-invoice-only" "only" "library-invoice" "%%get-library-declaration-requires" "else" "cond-expand" "jazz.load-module" "%%not" "if" "jazz.enqueue" "phase" "load" "feature-requirement" "module-name" "jazz.parse-require" "spec" "lambda" "for-each" "jazz.new-queue" "queue" "library" "jazz.declares" "begin" "%%get-declaration-locator" "locator" "jazz.expand-library-autoloads" "autoloads-expansion" "jazz.expand-library-variables" "variables-expansion" "jazz.expand-library-literals" "literals-expansion" "jazz.expand-library-references" "references-expansion" "declaration" "%%get-namespace-declaration-body" "jazz.emit-statements" "body-expansion" "let" "environment")}
      {Lisp-Entry "jazz.fold-declaration" ("jazz.Library-Declaration") 522 21 ("%%get-namespace-declaration-body" "jazz.fold-statements" "declaration" "s" "k" "f")}
      {Lisp-Entry "jazz.Library-Invoice" () 534 19 ("rename" "prefix" "except" "only" "version" "phase" "library" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.Export-Invoice" () 552 19 ("autoload" "jazz.Object-Class" "rename" "prefix" "except" "only" "version" "phase" "library" "jazz.Library-Invoice")}
      {Lisp-Entry "jazz.new-export-invoice" () 556 9 ("jazz.Export-Invoice" "jazz.allocate-export-invoice" "autoload" "only" "version" "phase" "library")}
      {Lisp-Entry "jazz.Import-Invoice" () 568 19 ("jazz.Object-Class" "rename" "prefix" "except" "only" "version" "phase" "library" "jazz.Library-Invoice")}
      {Lisp-Entry "jazz.new-import-invoice" () 572 9 ("jazz.Import-Invoice" "jazz.allocate-import-invoice" "only" "version" "phase" "library")}
      {Lisp-Entry "jazz.Export-Declaration" () 584 19 ("symbol" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-export-declaration" () 588 9 ("jazz.setup-declaration" "jazz.Export-Declaration" "jazz.allocate-export-declaration" "new-declaration" "let" "symbol" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.Export-Declaration") 594 21 ("jazz.unspecified" "arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Export-Declaration") 598 21 ("environment")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Export-Declaration") 602 21 ("jazz.Any" "declaration" "%%get-export-declaration-symbol" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.Autoload-Declaration" () 616 19 ("declaration" "exported-library" "library" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-autoload-declaration" () 622 9 ("jazz.setup-declaration" "uptodate" "public" "jazz.Autoload-Declaration" "jazz.allocate-autoload-declaration" "new-declaration" "let" "exported-library" "library-declaration" "parent" "type" "name")}
      {Lisp-Entry "jazz.resolve-declaration" ("jazz.Autoload-Declaration") 628 21 ("jazz.format" "%%assertion" "%%set-autoload-declaration-declaration" "jazz.lookup-declaration" "decl" "%%get-lexical-binding-name" "name" "%%get-autoload-declaration-library" "%%get-autoload-declaration-exported-library" "jazz.resolve-reference" "exported-library" "let*" "declaration" "%%get-autoload-declaration-declaration" "or")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Autoload-Declaration") 638 21 ("jazz.Any" "jazz.autoload-locator" "jazz.new-code" "declaration" "jazz.resolve-declaration" "referenced-declaration" "let" "environment")}
      {Lisp-Entry "jazz.autoload-locator" () 645 9 ("%%get-declaration-locator" "%%symbol->string" "%%string-append" "%%string->symbol" "referenced-declaration")}
      {Lisp-Entry "jazz.emit-type" () 658 9 ("%%get-category-name" "jazz.emit-binding-reference" "%%code-form" "jazz.Walk-Binding" "%%is?" "if" "environment" "type")}
      {Lisp-Entry "jazz.walk-subtype?" () 669 9 ("else" "%%subtype?" "%%not" "jazz.declaration-subtype?" "and" "cond" "type-binding?" "jazz.Walk-Binding" "%%is?" "target-binding?" "let" "type" "target")}
      {Lisp-Entry "jazz.declaration-subtype?" () 681 9 ("type" "target")}
      {Lisp-Entry "jazz.type-error" () 685 9 ("jazz.error" "type" "value")}
      {Lisp-Entry "jazz.Void-Class" () 694 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-subtype?" ("jazz.Void-Class") 698 21 ("class")}
      {Lisp-Entry "jazz.Void" () 705 19 ("jazz.Void-Class" "jazz.Type")}
      {Lisp-Entry "jazz.Function-Type" () 720 19 ("return-type" "jazz.Class" "jazz.Type")}
      {Lisp-Entry "jazz.new-function-type" () 724 9 ("jazz.Function-Type" "jazz.allocate-function-type" "return-type")}
      {Lisp-Entry "jazz.Any-Class" () 736 19 ("interface-table" "class-table" "core-vtable" "core-virtual-names" "core-virtual-alist" "core-method-alist" "dispatch-table" "level" "instance-size" "slots" "interfaces" "ascendant" "descendants" "ancestors" "fields" "name" "jazz.Class")}
      {Lisp-Entry "jazz.of-subtype?" ("jazz.Any-Class") 740 21 ("class")}
      {Lisp-Entry "jazz.Any" () 747 19 ("jazz.Any-Class" "jazz.Type")}
      {Lisp-Entry "jazz.emit-cast" () 762 9 ("jazz.type-error" "%%is?" "jazz.emit-type" "locator" "jazz.generate-symbol" "value" "let" "%%code-form" "jazz.Any" "%%eq?" "%%not" "or" "if" "environment" "type" "code")}
      {Lisp-Entry "jazz.emit-check" () 778 9 ("jazz.type-error" "%%is-not?" "jazz.emit-type" "locator" "let" "jazz.Any" "%%eq?" "%%not" "or" "if" "environment" "type" "value")}
      {Lisp-Entry "jazz.parse-specifier" () 791 9 ("%%cdr" "%%car" "jazz.specifier?" "%%pair?" "and" "if" "proc" "lst")}
      {Lisp-Entry "jazz.specifier->type" () 797 9 ("jazz.lookup-reference" "jazz.lookup-primitive-type" "or" "else" "jazz.Any" "1" "%%string-length" "%%fx-" "%%string-ref" "%%eqv?" "%%symbol->string" "str" "cond" "jazz.specifier->name" "name" "let" "specifier" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.primitive-types" () 813 8 ("eq?" "%%make-hashtable")}
      {Lisp-Entry "jazz.lookup-primitive-type" () 844 9 ("jazz.primitive-types" "%%hashtable-ref" "name")}
      {Lisp-Entry "jazz.Macro-Declaration" () 853 19 ("body" "signature" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-macro-declaration" () 858 9 ("jazz.setup-declaration" "jazz.Macro-Declaration" "jazz.allocate-macro-declaration" "new-declaration" "let" "signature" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.walk-binding-expandable?" ("jazz.Macro-Declaration") 864 21 ()}
      {Lisp-Entry "jazz.walk-binding-expand-form" ("jazz.Macro-Declaration") 868 21 ("%%cdr" "%%apply" "jazz.need-macro" "expander" "jazz.load-module" "%%get-declaration-parent" "parent-declaration" "jazz.walk-error" "%%get-declaration-toplevel" "%%eq?" "if" "binding" "%%get-declaration-locator" "locator" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Macro-Declaration") 878 21 ("jazz.emit-expression" "%%code-form" "jazz.emit-signature" "%%cons" "jazz.define-macro" "cons" "augmented-environment" "frame" "lambda" "jazz.annotate-signature" "jazz.with-annotated-frame" "%%get-macro-declaration-body" "body" "%%get-macro-declaration-signature" "signature" "declaration" "%%get-declaration-locator" "locator" "let" "environment")}
      {Lisp-Entry "jazz.fold-declaration" ("jazz.Macro-Declaration") 889 21 ("%%get-macro-declaration-body" "jazz.fold-statement" "%%get-macro-declaration-signature" "declaration" "s" "k" "f")}
      {Lisp-Entry "jazz.Syntax-Declaration" () 904 19 ("body" "signature" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-syntax-declaration" () 909 9 ("jazz.setup-declaration" "jazz.Syntax-Declaration" "jazz.allocate-syntax-declaration" "new-declaration" "let" "signature" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.walk-binding-expandable?" ("jazz.Syntax-Declaration") 915 21 ()}
      {Lisp-Entry "jazz.walk-binding-expand-form" ("jazz.Syntax-Declaration") 919 21 ("%%cdr" "%%apply" "jazz.need-macro" "expander" "jazz.load-module" "%%get-declaration-parent" "parent-declaration" "jazz.walk-error" "%%get-declaration-toplevel" "%%eq?" "if" "binding" "%%get-declaration-locator" "locator" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.Syntax-Declaration") 929 21 ("jazz.emit-expression" "%%code-form" "jazz.emit-signature" "%%cons" "jazz.define-macro" "cons" "augmented-environment" "frame" "lambda" "jazz.annotate-signature" "jazz.with-annotated-frame" "%%get-syntax-declaration-body" "body" "%%get-syntax-declaration-signature" "signature" "declaration" "%%get-declaration-locator" "locator" "let" "environment")}
      {Lisp-Entry "jazz.fold-declaration" ("jazz.Syntax-Declaration") 940 21 ("%%get-syntax-declaration-body" "jazz.fold-statement" "%%get-syntax-declaration-signature" "declaration" "s" "k" "f")}
      {Lisp-Entry "jazz.C-Type-Declaration" () 955 19 ("references" "expansion" "kind" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-c-type-declaration" () 961 9 ("jazz.setup-declaration" "jazz.C-Type-Declaration" "jazz.allocate-c-type-declaration" "new-declaration" "let" "references" "expansion" "kind" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.get-declaration-references" ("jazz.C-Type-Declaration") 967 21 ("declaration" "%%get-c-type-declaration-references")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.C-Type-Declaration") 971 21 ("environment")}
      {Lisp-Entry "jazz.expand-referenced-declaration" ("jazz.C-Type-Declaration") 975 21 ("c-define-type" "%%get-c-type-declaration-expansion" "expansion" "declaration" "%%get-declaration-locator" "locator" "let")}
      {Lisp-Entry "jazz.C-Definition-Declaration" () 989 19 ("body" "scope" "c-name" "result-type" "parameter-types" "signature" "jazz.Object-Class" "locator" "children" "parent" "toplevel" "attributes" "compatibility" "access" "type" "name" "jazz.Declaration")}
      {Lisp-Entry "jazz.new-c-definition-declaration" () 998 9 ("jazz.setup-declaration" "jazz.C-Definition-Declaration" "jazz.allocate-c-definition-declaration" "new-declaration" "let" "scope" "c-name" "result-type" "parameter-types" "signature" "parent" "attributes" "compatibility" "access" "type" "name")}
      {Lisp-Entry "jazz.walk-binding-validate-call" ("jazz.C-Definition-Declaration") 1004 21 ("jazz.validate-arguments" "if" "declaration" "%%get-c-definition-declaration-signature" "signature" "let" "arguments" "operator" "source-declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-declaration" ("jazz.C-Definition-Declaration") 1010 21 ("jazz.emit-expression" "%%code-form" "jazz.emit-signature" "%%cons" "c-define" "%%get-c-definition-declaration-body" "body" "%%get-c-definition-declaration-scope" "scope" "%%get-c-definition-declaration-c-name" "c-name" "%%get-c-definition-declaration-result-type" "result-type" "%%get-c-definition-declaration-parameter-types" "parameter-types" "%%get-c-definition-declaration-signature" "signature" "declaration" "%%get-declaration-locator" "locator" "let" "environment")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.C-Definition-Declaration") 1022 21 ("jazz.Any" "declaration" "%%get-declaration-locator" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.Walk-Context" () 1036 19 ("pathname" "locator" "policy" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.new-walk-context" () 1042 9 ("jazz.Walk-Context" "jazz.allocate-walk-context" "pathname" "locator" "policy")}
      {Lisp-Entry "jazz.walk-context" () 1046 8 ("make-parameter")}
      {Lisp-Entry "jazz.get-walk-context" () 1050 9 ("jazz.walk-context")}
      {Lisp-Entry "jazz.need-walk-context" () 1054 9 ("jazz.error" "jazz.walk-context" "or")}
      {Lisp-Entry "jazz.get-walk-policy" () 1059 9 ("%%get-walk-context-policy" "%%not" "if" "jazz.get-walk-context" "context" "let")}
      {Lisp-Entry "jazz.get-walk-locator" () 1066 9 ("%%get-walk-context-locator" "%%not" "if" "jazz.get-walk-context" "context" "let")}
      {Lisp-Entry "jazz.get-walk-pathname" () 1073 9 ("%%get-walk-context-pathname" "%%not" "if" "jazz.get-walk-context" "context" "let")}
      {Lisp-Entry "jazz.Walk-Location" () 1088 19 ("declaration-locator" "module-locator" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.new-walk-location" () 1093 9 ("jazz.Walk-Location" "jazz.allocate-walk-location" "declaration-locator" "module-locator")}
      {Lisp-Entry "jazz.walk-location" () 1097 9 ("%%get-declaration-locator" "jazz.get-walk-locator" "jazz.new-walk-location" "declaration" "walker")}
      {Lisp-Entry "jazz.Walk-Error" () 1111 19 ("location" "jazz.Object-Class" "message" "jazz.Error")}
      {Lisp-Entry "jazz.new-walk-error" () 1115 9 ("jazz.Walk-Error" "jazz.allocate-walk-error" "message" "location")}
      {Lisp-Entry "jazz.present-exception" ("jazz.Walk-Error") 1119 21 ("error" "%%get-error-message")}
      {Lisp-Entry "jazz.Unresolved-Error" () 1131 19 ("symbol" "jazz.Object-Class" "location" "message" "jazz.Walk-Error")}
      {Lisp-Entry "jazz.new-unresolved-error" () 1135 9 ("jazz.Unresolved-Error" "jazz.allocate-unresolved-error" "symbol" "location")}
      {Lisp-Entry "jazz.present-exception" ("jazz.Unresolved-Error") 1139 21 ("error" "%%get-unresolved-error-symbol" "jazz.format")}
      {Lisp-Entry "jazz.Walk-Frame" () 1152 19 ("bindings" "jazz.Object-Class" "jazz.Walk-Binding")}
      {Lisp-Entry "jazz.new-walk-frame" () 1156 9 ("jazz.Walk-Frame" "jazz.allocate-walk-frame" "%%hashtable-set!" "%%get-lexical-binding-name" "name" "binding" "lambda" "for-each" "eq?" "%%make-hashtable" "hashtable" "let" "bindings")}
      {Lisp-Entry "jazz.walk-binding-lookup" ("jazz.Walk-Frame") 1165 21 ("binding" "%%get-walk-frame-bindings" "%%hashtable-ref" "symbol")}
      {Lisp-Entry "jazz.Signature" () 1177 19 ("rest" "named" "optional" "positional" "mandatory" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.new-signature" () 1185 9 ("jazz.Signature" "jazz.allocate-signature" "%%length" "mandatory" "let" "rest" "named" "optional" "positional")}
      {Lisp-Entry "jazz.only-positional?" () 1190 9 ("%%get-signature-rest" "%%not" "%%get-signature-named" "%%get-signature-optional" "%%null?" "and" "signature")}
      {Lisp-Entry "jazz.Symbol-Binding" () 1204 19 ("jazz.Object-Class" "type" "name" "jazz.Lexical-Binding")}
      {Lisp-Entry "jazz.Variable" () 1216 19 ("setters" "jazz.Object-Class" "type" "name" "jazz.Symbol-Binding")}
      {Lisp-Entry "jazz.new-variable" () 1220 9 ("jazz.Variable" "jazz.allocate-variable" "type" "name")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Variable") 1224 21 ("jazz.find-annotated-type" "binding" "%%get-lexical-binding-name" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.walk-binding-assignable?" ("jazz.Variable") 1230 21 ()}
      {Lisp-Entry "jazz.walk-binding-assigned" ("jazz.Variable") 1234 21 ("%%get-variable-setters" "cons" "binding" "%%set-variable-setters" "assignment")}
      {Lisp-Entry "jazz.emit-binding-assignment" ("jazz.Variable") 1238 21 ("jazz.Any" "%%code-form" "%%get-lexical-binding-name" "set!" "jazz.new-code" "%%code-type" "jazz.extend-annotated-type" "binding" "jazz.find-annotated" "annotated-variable" "annotated-frame" "receive" "jazz.emit-expression" "value-code" "let" "environment" "value")}
      {Lisp-Entry "jazz.NextMethod-Variable" () 1255 19 ("jazz.Object-Class" "setters" "type" "name" "jazz.Variable")}
      {Lisp-Entry "jazz.new-nextmethod-variable" () 1259 9 ("jazz.NextMethod-Variable" "jazz.allocate-nextmethod-variable" "type" "name")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.NextMethod-Variable") 1263 21 ("jazz.Any" "apply" "rest" "lambda" "if" "jazz.new-code" "jazz.lookup-self" "self" "binding" "%%get-lexical-binding-name" "name" "let" "environment")}
      {Lisp-Entry "jazz.Parameter" () 1281 19 ("jazz.Object-Class" "setters" "type" "name" "jazz.Variable")}
      {Lisp-Entry "jazz.new-parameter" () 1285 9 ("jazz.Parameter" "jazz.allocate-parameter" "type" "name")}
      {Lisp-Entry "jazz.emit-parameter" ("jazz.Parameter") 1289 22 ("environment")}
      {Lisp-Entry "jazz.emit-parameter" ("jazz.Parameter") 1292 21 ("parameter" "%%get-lexical-binding-name" "environment")}
      {Lisp-Entry "jazz.Dynamic-Parameter" () 1304 19 ("class" "jazz.Object-Class" "setters" "type" "name" "jazz.Parameter")}
      {Lisp-Entry "jazz.new-dynamic-parameter" () 1308 9 ("jazz.Dynamic-Parameter" "jazz.allocate-dynamic-parameter" "class" "type" "name")}
      {Lisp-Entry "jazz.emit-parameter" ("jazz.Dynamic-Parameter") 1312 21 ("%%get-lexical-binding-name" "jazz.emit-expression" "%%code-form" "%%list" "parameter" "%%get-dynamic-parameter-class" "class" "let" "environment")}
      {Lisp-Entry "jazz.Optional-Parameter" () 1325 19 ("default" "jazz.Object-Class" "setters" "type" "name" "jazz.Parameter")}
      {Lisp-Entry "jazz.new-optional-parameter" () 1329 9 ("jazz.Optional-Parameter" "jazz.allocate-optional-parameter" "default" "type" "name")}
      {Lisp-Entry "jazz.emit-parameter" ("jazz.Optional-Parameter") 1333 21 ("jazz.emit-expression" "%%code-form" "%%get-lexical-binding-name" "%%list" "parameter" "%%get-optional-parameter-default" "default" "let" "environment")}
      {Lisp-Entry "jazz.Named-Parameter" () 1346 19 ("default" "jazz.Object-Class" "setters" "type" "name" "jazz.Parameter")}
      {Lisp-Entry "jazz.new-named-parameter" () 1350 9 ("jazz.Named-Parameter" "jazz.allocate-named-parameter" "default" "type" "name")}
      {Lisp-Entry "jazz.emit-parameter" ("jazz.Named-Parameter") 1354 21 ("jazz.emit-expression" "%%code-form" "%%get-lexical-binding-name" "%%list" "parameter" "%%get-named-parameter-default" "default" "let" "environment")}
      {Lisp-Entry "jazz.Rest-Parameter" () 1367 19 ("jazz.Object-Class" "setters" "type" "name" "jazz.Parameter")}
      {Lisp-Entry "jazz.new-rest-parameter" () 1371 9 ("jazz.Rest-Parameter" "jazz.allocate-rest-parameter" "type" "name")}
      {Lisp-Entry "jazz.emit-parameter" ("jazz.Rest-Parameter") 1375 21 ("parameter" "%%get-lexical-binding-name" "environment")}
      {Lisp-Entry "jazz.Self-Binding" () 1390 19 ("jazz.Object-Class" "type" "name" "jazz.Lexical-Binding")}
      {Lisp-Entry "jazz.new-self-binding" () 1394 9 ("self" "jazz.Self-Binding" "jazz.allocate-self-binding" "type")}
      {Lisp-Entry "jazz.emit-binding-reference" ("jazz.Self-Binding") 1398 21 ("jazz.Any" "self" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.Macro-Symbol" () 1412 19 ("setter" "getter" "jazz.Object-Class" "type" "name" "jazz.Symbol-Binding")}
      {Lisp-Entry "jazz.new-macro-symbol" () 1417 9 ("jazz.Macro-Symbol" "jazz.allocate-macro-symbol" "setter" "getter" "name")}
      {Lisp-Entry "jazz.Form-Binding" () 1446 19 ("jazz.Object-Class" "type" "name" "jazz.Lexical-Binding")}
      {Lisp-Entry "jazz.Special-Form" () 1458 19 ("walk" "jazz.Object-Class" "type" "name" "jazz.Form-Binding")}
      {Lisp-Entry "jazz.new-special-form" () 1462 9 ("jazz.Special-Form" "jazz.allocate-special-form" "walk" "name")}
      {Lisp-Entry "jazz.walk-binding-walkable?" ("jazz.Special-Form") 1466 21 ()}
      {Lisp-Entry "jazz.walk-binding-walk-form" ("jazz.Special-Form") 1470 21 ("binding" "%%get-special-form-walk" "walk" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.Macro-Form" () 1483 19 ("expander" "jazz.Object-Class" "type" "name" "jazz.Form-Binding")}
      {Lisp-Entry "jazz.new-macro-form" () 1487 9 ("jazz.Macro-Form" "jazz.allocate-macro-form" "expander" "name")}
      {Lisp-Entry "jazz.walk-binding-expandable?" ("jazz.Macro-Form") 1491 21 ()}
      {Lisp-Entry "jazz.walk-binding-expand-form" ("jazz.Macro-Form") 1495 21 ("%%cdr" "apply" "binding" "%%get-macro-form-expander" "expander" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.Annotated-Variable" () 1508 19 ("type" "variable" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.new-annotated-variable" () 1513 9 ("jazz.Annotated-Variable" "jazz.allocate-annotated-variable" "type" "variable")}
      {Lisp-Entry "jazz.Annotated-Frame" () 1525 19 ("reset" "variables" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.new-annotated-frame" () 1530 9 ("jazz.Annotated-Frame" "jazz.allocate-annotated-frame" "reset" "variables")}
      {Lisp-Entry "jazz.annotate-signature" () 1542 9 ("jazz.queue-list" "%%when" "for-each" "jazz.new-annotated-variable" "jazz.enqueue" "jazz.Any" "%%get-lexical-binding-type" "or" "type" "parameter" "annotate" "define" "jazz.new-queue" "queue" "%%get-signature-rest" "rest" "%%get-signature-named" "named" "%%get-signature-optional" "optional" "%%get-signature-positional" "positional" "let" "signature")}
      {Lisp-Entry "jazz.annotate-bindings" () 1559 9 ("jazz.new-annotated-variable" "jazz.Void" "%%get-lexical-binding-type" "or" "type" "%%cdr" "value" "%%car" "variable" "let" "binding" "lambda" "map" "bindings")}
      {Lisp-Entry "jazz.annotate-receive" () 1568 9 ("jazz.new-annotated-variable" "jazz.Any" "%%get-lexical-binding-type" "or" "type" "let" "parameter" "lambda" "map" "parameters")}
      {Lisp-Entry "jazz.annotate-internal-defines" () 1575 9 ("jazz.new-annotated-variable" "jazz.Any" "%%get-lexical-binding-type" "or" "type" "%%get-internal-define-variable" "variable" "let" "internal-define" "lambda" "map" "internal-defines")}
      {Lisp-Entry "jazz.with-annotated-frame" () 1583 9 ("jazz.new-annotated-frame" "set!" "k" "lambda" "call/cc" "reset" "let" "proc" "variables")}
      {Lisp-Entry "jazz.find-annotated" () 1591 9 ("%%cdr" "values" "%%get-annotated-variable-variable" "%%eq?" "annotated-variable" "%%get-annotated-frame-variables" "variables" "iter-variables" "or" "%%car" "annotated-frame" "%%null?" "if" "frames" "iter-frames" "let" "environment" "variable")}
      {Lisp-Entry "jazz.find-annotated-type" () 1606 9 ("%%get-annotated-variable-type" "jazz.find-annotated" "frame" "receive" "environment" "variable")}
      {Lisp-Entry "jazz.extend-annotated-type" () 1611 9 ("*reset*" "%%get-annotated-frame-reset" "reset" "%%set-annotated-variable-type" "->" "%%get-annotated-variable-variable" "%%get-lexical-binding-name" "extend" "jazz.debug" "jazz.debug-types" "jazz.Void" "%%eq?" "cond" "jazz.Any" "%%neq?" "if" "%%get-annotated-variable-type" "actual-type" "let" "type" "variable" "frame")}
      {Lisp-Entry "jazz.Walker" () 1636 19 ("errors" "warnings" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.walk-warning" () 1646 9 ("jazz.new-walk-error" "jazz.walker-warning" "jazz.format" "apply" "message" "jazz.walk-location" "location" "let" "rest" "fmt-string" "declaration" "walker")}
      {Lisp-Entry "jazz.walk-error" () 1652 9 ("jazz.new-walk-error" "jazz.walker-error" "jazz.format" "apply" "message" "jazz.walk-location" "location" "let" "rest" "fmt-string" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-unresolved" () 1658 9 ("jazz.new-unresolved-error" "jazz.walker-error" "jazz.walk-location" "location" "let" "symbol" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walker-warning" () 1663 9 ("%%list" "%%get-walker-warnings" "%%append" "%%set-walker-warnings" "jazz.warnings?" "if" "warning" "walker")}
      {Lisp-Entry "jazz.walker-error" () 1668 9 ("jazz.validate-walk-problems" "jazz.unspecified" "jazz.delay-reporting?" "and" "if" "%%list" "%%get-walker-errors" "%%append" "%%set-walker-errors" "error" "resume" "walker")}
      {Lisp-Entry "jazz.validate-walk-problems" () 1675 9 ("get-output-string" "jazz.error" "%%get-walk-location-module-locator" "error" "jazz.partition" "jazz.present-exception" "1" "%%fx+" "%%substring" "%%fx=" "%%get-walk-error-location" "%%get-walk-location-declaration-locator" "locator" "exception" "%%symbol->string" "%%string-length" "%%not" "if" "prefix" "module-locator" "jazz.bind" "partition" "lambda" "for-each" "jazz.format" "%%append" "all" "open-output-string" "output" "%%not-null?" "or" "%%when" "%%get-walker-errors" "errors" "%%get-walker-warnings" "warnings" "let" "walker")}
      {Lisp-Entry "jazz.parse-modifiers" () 1704 9 ("%%list" "jazz.walk-error" "else" "%%null?" "cond" "modifiers" "%%append" "values" "%%apply" "%%cdr" "%%set-cdr!" "set!" "begin" "%%memq" "if" "%%cdar" "default" "%%caar" "allowed" "partition" "for-each" "found?" "%%car" "target" "%%not" "%%not-null?" "and" "%%while" "done?" "%%cons" "info" "lambda" "map" "partitions" "let" "rest" "infos" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.parse-module-declaration" () 1735 9 ("jazz.new-module-declaration" "body" "requires" "lambda" "jazz.parse-module" "%%cdr" "rest" "%%car" "name" "let" "partial-form")}
      {Lisp-Entry "jazz.parse-library" () 1748 9 ("jazz.filter-features" "values" "import" "export" "%%cdr" "%%cdar" "set!" "begin" "require" "%%caar" "%%eq?" "%%pair?" "and" "if" "imports" "exports" "requires" "%%cddr" "scan" "%%cadr" "dialect-name" "%%car" "name" "let" "partial-form")}
      {Lisp-Entry "jazz.parse-library-invoice" () 1781 9 ("%%reverse" "values" "%%cdar" "begin" "%%caar" "%%eq?" "if" "%%cons" "set!" "%%not" "and" "%%while" "autoload" "only" "phase" "load" "version" "%%cdr" "scan" "%%car" "name" "let" "jazz.format" "%%pair?" "%%assertion" "specification")}
      {Lisp-Entry "jazz.parse-library-declaration" () 1821 9 ("jazz.walk-library-declaration" "jazz.load-dialect" "jazz.dialect-walker" "walker" "let" "jazz.parse-library" "body" "imports" "exports" "requires" "dialect-name" "name" "receive" "partial-form")}
      {Lisp-Entry "jazz.walk-library-declaration" () 1827 9 ("jazz.validate-walk-problems" "jazz.walker-environment" "%%cons" "jazz.walk-declarations" "jazz.setup-library-lookups" "jazz.load-library-syntax" "jazz.new-library-declaration" "declaration" "jazz.add-dialect-import" "jazz.walk-library-imports" "jazz.walk-library-exports" "%%reverse" "let" "body" "imports" "exports" "requires" "dialect-name" "name" "walker")}
      {Lisp-Entry "jazz.load-library-syntax" () 1838 9 ("%%get-library-declaration-imports" "%%get-library-declaration-exports" "%%get-lexical-binding-name" "jazz.load-module" "%%get-library-invoice-library" "jazz.resolve-reference" "library-declaration" "let" "syntax" "%%get-library-invoice-phase" "%%eq?" "%%when" "library-invoice" "lambda" "for-each" "declaration")}
      {Lisp-Entry "jazz.walk-library-exports" () 1851 9 ("jazz.new-autoload-reference" "%%not" "jazz.new-library-reference" "library-reference" "jazz.parse-library-invoice" "library-autoload" "library-only" "library-version" "library-phase" "library-load" "library-name" "receive" "export" "%%cdr" "jazz.new-export-reference" "symbol" "lambda" "map" "jazz.new-export-invoice" "%%list" "if" "%%append" "library-exports" "assq" "symbols-exports" "symbol?" "jazz.partition" "partition" "let" "exports" "walker")}
      {Lisp-Entry "jazz.walk-library-imports" () 1879 9 ("jazz.new-export-reference" "symbol" "%%not" "if" "jazz.lookup-library" "jazz.new-import-invoice" "jazz.parse-library-invoice" "library-autoload" "library-only" "library-version" "library-phase" "library-load" "library-name" "receive" "import" "lambda" "map" "imports" "walker")}
      {Lisp-Entry "jazz.expand-library" () 1893 9 ("jazz.walk-library" "jazz.emit-declaration" "partial-form")}
      {Lisp-Entry "jazz.walk-library" () 1897 9 ("%%set-namespace-declaration-body" "jazz.validate-walk-problems" "jazz.walk-toplevel" "jazz.walker-environment" "%%cons" "environment" "jazz.walk-library-declaration" "declaration" "resume" "jazz.dialect-walker" "walker" "jazz.load-dialect" "dialect" "let*" "jazz.parse-library" "body" "imports" "exports" "requires" "dialect-name" "name" "receive" "partial-form")}
      {Lisp-Entry "jazz.cond-expand" () 1910 9 ("%%cadr" "else" "jazz.feature-safisfied?" "feature-requirement" "%%symbol?" "%%not" "or" "clause" "jazz.error" "%%null?" "%%cdr" "scan" "iter" "let" "cond-expand" "%%car" "%%eq?" "%%pair?" "and" "if" "form")}
      {Lisp-Entry "jazz.walk-toplevel" () 1928 9 ("jazz.queue-list" "jazz.cond-expand" "jazz.walk" "jazz.enqueue" "call/cc" "form" "lambda" "for-each" "jazz.new-queue" "queue" "let" "form-list" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.load-dialect" () 1938 9 ("jazz.require-dialect" "jazz.load-module" "core" "%%neq?" "begin" "jazz.error" "%%symbol?" "%%not" "if" "dialect-name")}
      {Lisp-Entry "jazz.add-dialect-import" () 1947 9 ("%%list" "%%append" "core" "%%eq?" "if" "dialect-name" "imports")}
      {Lisp-Entry "jazz.expand-library-references" () 1953 9 ("jazz.expand-referenced-declaration" "map" "%%get-library-declaration-references" "jazz.enqueue" "jazz.queue-list" "%%memq" "%%not" "if" "jazz.get-declaration-references" "for-each" "declaration" "lambda" "collect-declarations" "letrec" "jazz.new-queue" "queue" "let" "library-declaration")}
      {Lisp-Entry "jazz.expand-library-literals" () 1966 9 ("%%get-library-declaration-literals" "jazz.emit-expression" "%%code-form" "define" "%%cddr" "value" "%%cadr" "name" "let" "info" "lambda" "map" "library-declaration")}
      {Lisp-Entry "jazz.expand-library-variables" () 1974 9 ("%%get-library-declaration-variables" "define" "variable" "lambda" "map" "library-declaration")}
      {Lisp-Entry "jazz.expand-library-autoloads" () 1980 9 ("%%get-library-declaration-autoloads" "jazz.emit-binding-reference" "%%code-form" "set!" "%%get-declaration-toplevel" "%%get-declaration-locator" "jazz.load-module" "begin" "%%not" "if" "loaded?" "define" "jazz.autoload-locator" "locator" "jazz.resolve-declaration" "referenced-declaration" "let" "autoload-declaration" "lambda" "map" "environment" "library-declaration")}
      {Lisp-Entry "jazz.core-bindings" () 2000 9 ("jazz.walk-%syntax" "%syntax" "jazz.expand-syntax" "syntax" "jazz.walk-%macro" "%macro" "jazz.expand-macro" "macro" "jazz.new-macro-form" "jazz.walk-native" "native" "jazz.new-special-form" "%%list")}
      {Lisp-Entry "jazz.walker-environment" ("jazz.Walker") 2008 22 ()}
      {Lisp-Entry "jazz.walker-environment" ("jazz.Walker") 2011 21 ("jazz.core-bindings" "jazz.new-walk-frame" "%%list")}
      {Lisp-Entry "jazz.walk/find-declaration" () 2027 9 ("%%cadr" "jazz.find-form-declaration" "jazz.walk-declaration" "jazz.merge-toplevel-declarations" "%%not" "if" "form" "environment" "declaration" "module" "name" "resume" "walker")}
      {Lisp-Entry "jazz.merge-toplevel-declarations" () 2035 9 ("jazz.merge-declaration-into" "else" "%%not" "cond" "jazz.find-module-declaration" "old-declaration" "let" "new-declaration" "module" "name" "resume" "walker")}
      {Lisp-Entry "jazz.find-module-declaration" () 2044 9 ("%%get-declaration-parent" "%%not" "if" "jazz.compose-module-name" "jazz.get-validated-catalog-entry" "entry" "let" "module" "name")}
      {Lisp-Entry "jazz.set-module-declaration" () 2051 9 ("jazz.get-walk-locator" "jazz.set-catalog-entry" "jazz.find-declaration" "%%not" "if" "module-declaration" "let" "new-declaration" "module" "name")}
      {Lisp-Entry "jazz.compose-module-name" () 2056 9 ("jazz.compose-name" "%%not" "if" "module" "name")}
      {Lisp-Entry "jazz.merge-declaration-into" () 2062 9 ("%%list" "%%get-declaration-children" "%%append" "%%set-declaration-children" "%%set-declaration-parent" "begin" "jazz.merge-declaration-into" "if" "jazz.find-declaration" "old-child" "%%get-lexical-binding-name" "name" "let" "new-child" "lambda" "for-each" "jazz.update-declaration-from" "old-declaration" "new-declaration")}
      {Lisp-Entry "jazz.update-declaration-from" () 2076 9 ("new-declaration" "old-declaration")}
      {Lisp-Entry "jazz.walk-declaration" ("jazz.Walker") 2080 22 ("form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-declaration" ("jazz.Walker") 2083 21 ("else" "jazz.walk-%syntax-declaration" "%syntax" "jazz.walk-%macro-declaration" "%macro" "walker" "jazz.walk-native-declaration" "native" "case" "%%car" "first" "let" "%%pair?" "if" "form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-declarations" () 2094 9 ("walk" "toplevel?" "forms" "environment" "declaration" "resume" "walker")
        {Lisp-Entry "walk" () 2095 11 ("jazz.walk-declaration" "%%cdr" "walk" "jazz.begin-form?" "jazz.cond-expand" "toplevel?" "if" "environment" "declaration" "walker" "jazz.expand-macros" "expansion" "let" "resume" "call/cc" "form" "lambda" "for-each" "forms")}}
      {Lisp-Entry "jazz.add-declaration-child" () 2108 9 ("jazz.public-access" "jazz.private-access" "%%get-access-lookup" "%%hashtable-set!" "%%get-lexical-binding-name" "name" "let" "%%list" "%%get-declaration-children" "%%append" "%%set-declaration-children" "%%when" "child" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.find-form-declaration" () 2116 9 ("jazz.format" "%%assertion" "jazz.find-declaration" "declaration" "let" "name" "namespace-declaration")}
      {Lisp-Entry "jazz.begin-form?" () 2122 9 ("begin" "%%car" "%%eq?" "%%pair?" "and" "form")}
      {Lisp-Entry "jazz.define-form?" () 2127 9 ("define" "%%car" "%%eq?" "%%pair?" "and" "form")}
      {Lisp-Entry "jazz.register-autoload-declaration" () 2137 9 ("%%cons" "%%set-library-declaration-autoloads" "%%memq" "%%not" "%%when" "%%get-library-declaration-autoloads" "declarations" "let" "autoload-declaration" "library-declaration")}
      {Lisp-Entry "jazz.lookup-library" () 2148 9 ("jazz.walk-unresolved" "jazz.locate-library-declaration" "or" "name" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.lookup-reference" () 2153 9 ("jazz.walk-unresolved" "jazz.lookup-accessible/compatible-symbol" "or" "symbol" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.Expression" () 2163 19 ("type" "jazz.Object-Class" "jazz.Object")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Expression") 2167 22 ("environment")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Expression") 2170 21 ("expression" "jazz.error" "environment")}
      {Lisp-Entry "jazz.emit-call" ("jazz.Expression") 2174 22 ("environment" "arguments")}
      {Lisp-Entry "jazz.emit-call" ("jazz.Expression") 2177 21 ("jazz.Any" "jazz.codes-forms" "expression" "jazz.emit-expression" "%%code-form" "jazz.new-code" "environment" "arguments")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Expression") 2183 22 ("s" "k" "f")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Expression") 2186 21 ("expression" "s" "k" "f")}
      {Lisp-Entry "jazz.emit-expressions" () 2190 9 ("jazz.emit-expression" "expression" "lambda" "map" "environment" "expressions")}
      {Lisp-Entry "jazz.fold-expressions" () 2196 9 ("%%cdr" "jazz.fold-expressions" "%%car" "jazz.fold-expression" "%%null?" "if" "seed" "s" "k" "f" "expressions")}
      {Lisp-Entry "jazz.Constant" () 2211 19 ("expansion" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-constant" () 2215 9 ("jazz.Constant" "jazz.allocate-constant" "type" "expansion")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Constant") 2219 21 ("%%get-expression-type" "expression" "%%get-constant-expansion" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Constant") 2225 21 ("%%get-constant-expansion" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Quasiquote" () 2239 19 ("form" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-quasiquote" () 2243 9 ("jazz.Quasiquote" "jazz.allocate-quasiquote" "form")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Quasiquote") 2247 21 ("jazz.List" "expression" "%%get-quasiquote-form" "quasiquote" "jazz.new-code" "%%cdr" "%%cons" "%%cadr" "jazz.emit-expression" "%%code-form" "%%list" "unquote-splicing" "unquote" "%%car" "%%eq?" "or" "%%pair?" "if" "form" "lambda" "emit" "letrec" "environment")}
      {Lisp-Entry "jazz.Reference" () 2269 19 ("binding" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-reference" () 2273 9 ("jazz.Reference" "jazz.allocate-reference" "binding")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Reference") 2277 21 ("expression" "%%get-reference-binding" "jazz.emit-binding-reference" "environment")}
      {Lisp-Entry "jazz.emit-call" ("jazz.Reference") 2281 21 ("expression" "%%get-reference-binding" "jazz.emit-binding-call" "environment" "arguments")}
      {Lisp-Entry "jazz.Assignment" () 2293 19 ("value" "binding" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-assignment" () 2298 9 ("jazz.Assignment" "jazz.allocate-assignment" "value" "binding")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Assignment") 2302 21 ("%%get-assignment-value" "expression" "%%get-assignment-binding" "jazz.emit-binding-assignment" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Assignment") 2306 21 ("%%get-assignment-value" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Lambda" () 2320 19 ("body" "signature" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-lambda" () 2325 9 ("jazz.Lambda" "jazz.allocate-lambda" "body" "signature" "type")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Lambda") 2329 21 ("jazz.new-function-type" "%%code-type" "%%code-form" "begin" "jazz.emit-cast" "jazz.emit-signature-checks" "jazz.new-code" "jazz.emit-expression" "body-code" "jazz.emit-signature" "signature-output" "cons" "augmented-environment" "frame" "lambda" "jazz.annotate-signature" "jazz.with-annotated-frame" "%%get-lambda-body" "body" "%%get-lambda-signature" "signature" "expression" "%%get-expression-type" "type" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Lambda") 2345 21 ("%%get-lambda-body" "jazz.fold-statement" "%%get-lambda-signature" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Let" () 2360 19 ("body" "bindings" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-let" () 2365 9 ("jazz.Let" "jazz.allocate-let" "body" "bindings")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Let") 2369 21 ("%%code-form" "jazz.new-code" "body-code" "%%get-lexical-binding-type" "jazz.emit-cast" "%%get-lexical-binding-name" "%%code-type" "jazz.extend-annotated-type" "jazz.emit-expression" "value-code" "%%cdr" "value" "%%car" "variable" "annotated-variable" "binding" "map" "bindings-output" "cons" "augmented-environment" "%%get-annotated-frame-variables" "variables" "frame" "lambda" "jazz.annotate-bindings" "jazz.with-annotated-frame" "%%get-let-body" "body" "expression" "%%get-let-bindings" "bindings" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Let") 2392 21 ("%%get-let-body" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Named-Let" () 2406 19 ("variable" "jazz.Object-Class" "body" "bindings" "type" "jazz.Let")}
      {Lisp-Entry "jazz.new-named-let" () 2410 9 ("jazz.Named-Let" "jazz.allocate-named-let" "body" "bindings" "variable")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Named-Let") 2414 21 ("%%code-form" "jazz.new-code" "body-code" "%%get-lexical-binding-type" "jazz.emit-cast" "%%get-lexical-binding-name" "%%code-type" "jazz.extend-annotated-type" "jazz.emit-expression" "value-code" "%%cdr" "value" "%%car" "annotated-variable" "binding" "map" "bindings-output" "augmented-environment" "%%get-annotated-frame-variables" "variables" "frame" "lambda" "jazz.annotate-bindings" "jazz.Any" "jazz.new-annotated-variable" "cons" "jazz.with-annotated-frame" "%%get-let-body" "body" "%%get-let-bindings" "bindings" "expression" "%%get-named-let-variable" "variable" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Named-Let") 2438 21 ("%%get-let-body" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Letstar" () 2452 19 ("body" "bindings" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-letstar" () 2457 9 ("jazz.Letstar" "jazz.allocate-letstar" "body" "bindings")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Letstar") 2461 21 ("%%code-form" "let*" "jazz.new-code" "body-code" "%%get-lexical-binding-type" "jazz.emit-cast" "%%get-lexical-binding-name" "%%code-type" "jazz.extend-annotated-type" "jazz.emit-expression" "value-code" "%%cdr" "value" "%%car" "variable" "annotated-variable" "binding" "map" "bindings-output" "cons" "augmented-environment" "%%get-annotated-frame-variables" "variables" "frame" "lambda" "jazz.annotate-bindings" "jazz.with-annotated-frame" "%%get-letstar-body" "body" "expression" "%%get-letstar-bindings" "bindings" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Letstar") 2484 21 ("%%get-letstar-body" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Letrec" () 2498 19 ("body" "bindings" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-letrec" () 2503 9 ("jazz.Letrec" "jazz.allocate-letrec" "body" "bindings")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Letrec") 2507 21 ("%%code-form" "letrec" "jazz.new-code" "body-code" "%%get-lexical-binding-type" "jazz.emit-cast" "%%get-lexical-binding-name" "%%code-type" "jazz.extend-annotated-type" "jazz.emit-expression" "value-code" "%%cdr" "value" "%%car" "variable" "annotated-variable" "binding" "map" "bindings-output" "cons" "augmented-environment" "%%get-annotated-frame-variables" "variables" "frame" "lambda" "jazz.annotate-bindings" "jazz.with-annotated-frame" "%%get-letrec-body" "body" "expression" "%%get-letrec-bindings" "bindings" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Letrec") 2530 21 ("%%get-letrec-body" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Receive" () 2544 19 ("body" "expression" "variables" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-receive" () 2550 9 ("jazz.Receive" "jazz.allocate-receive" "body" "expression" "variables")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Receive") 2554 21 ("%%code-type" "%%get-lexical-binding-name" "variable" "map" "receive" "jazz.new-code" "body-code" "jazz.emit-expression" "%%code-form" "expression-output" "cons" "augmented-environment" "frame" "lambda" "jazz.annotate-receive" "jazz.with-annotated-frame" "%%get-receive-body" "body" "%%get-receive-expression" "expression" "%%get-receive-variables" "variables" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Receive") 2572 21 ("%%get-receive-body" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Body" () 2586 19 ("expressions" "internal-defines" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-body" () 2591 9 ("jazz.Body" "jazz.allocate-body" "expressions" "internal-defines")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Body") 2595 21 ("jazz.Any" "jazz.emit-expressions" "jazz.codes-forms" "append" "jazz.new-code" "cons" "augmented-environment" "frame" "lambda" "jazz.annotate-internal-defines" "jazz.with-annotated-frame" "%%get-body-expressions" "expressions" "expression" "%%get-body-internal-defines" "internal-defines" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Body") 2607 21 ("%%get-body-expressions" "%%get-body-internal-defines" "jazz.fold-statements" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Internal-Define" () 2621 19 ("value" "variable" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-internal-define" () 2626 9 ("jazz.Internal-Define" "jazz.allocate-internal-define" "value" "variable")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Internal-Define") 2630 21 ("jazz.Any" "jazz.emit-expression" "%%code-form" "%%get-lexical-binding-name" "define" "jazz.new-code" "%%get-internal-define-value" "value" "expression" "%%get-internal-define-variable" "variable" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Internal-Define") 2639 21 ("%%get-internal-define-value" "jazz.fold-statement" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Begin" () 2653 19 ("expressions" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-begin" () 2657 9 ("jazz.Begin" "jazz.allocate-begin" "expressions")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Begin") 2661 21 ("%%code-type" "%%code-form" "begin" "jazz.new-code" "jazz.emit-statements-code" "code" "expression" "%%get-begin-expressions" "expressions" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Begin") 2669 21 ("%%get-begin-expressions" "jazz.fold-expressions" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Call" () 2682 19 ("arguments" "operator" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-call" () 2687 9 ("jazz.Call" "jazz.allocate-call" "arguments" "operator")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Call") 2691 21 ("jazz.emit-call" "jazz.emit-inlined-call" "jazz.emit-inlined-primitive" "or" "%%get-call-arguments" "jazz.emit-expressions" "arguments" "expression" "%%get-call-operator" "operator" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Call") 2699 21 ("%%get-call-arguments" "jazz.fold-expressions" "%%get-call-operator" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.inline-patterns" () 2713 8 ("eq?" "%%make-hashtable")}
      {Lisp-Entry "jazz.emit-inlined-primitive" () 2730 9 ("%%cdr" "jazz.Any" "jazz.codes-forms" "jazz.new-code" "jazz.walk-subtype?" "and" "type" "lambda" "jazz.every?" "%%car" "inline-name" "inline-type" "jazz.bind" "%%null?" "scan" "iter" "jazz.codes-types" "types" "if" "operator-locator" "jazz.inline-patterns" "%%hashtable-ref" "patterns" "let" "environment" "arguments" "operator")
        {Lisp-Entry "operator-locator" () 2731 11 ("%%get-declaration-locator" "jazz.Declaration" "%%get-reference-binding" "binding" "let" "jazz.Reference" "operator" "%%is?" "if")}}
      {Lisp-Entry "jazz.emit-inlined-call" () 2762 9 ("jazz.emit-inlined-binding-call" "%%get-reference-binding" "binding" "let" "jazz.Reference" "%%is?" "if" "environment" "arguments" "operator")}
      {Lisp-Entry "jazz.If" () 2774 19 ("no" "yes" "test" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-if" () 2780 9 ("jazz.If" "jazz.allocate-if" "no" "yes" "test")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.If") 2784 21 ("jazz.Any" "%%get-if-no" "jazz.emit-expressions" "jazz.codes-forms" "begin" "%%get-if-yes" "expression" "%%get-if-test" "jazz.emit-expression" "%%code-form" "if" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.If") 2793 21 ("%%get-if-no" "jazz.fold-expressions" "%%get-if-yes" "%%get-if-test" "jazz.fold-expression" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Cond" () 2808 19 ("clauses" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-cond" () 2812 9 ("jazz.Cond" "jazz.allocate-cond" "clauses")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Cond") 2816 21 ("jazz.Any" "expression" "%%get-cond-clauses" "jazz.emit-expressions" "jazz.codes-forms" "jazz.emit-expression" "%%code-form" "else" "%%not" "if" "%%cdr" "body" "%%car" "test" "let" "clause" "lambda" "map" "cond" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Cond") 2829 21 ("s" "k" "f")}
      {Lisp-Entry "jazz.Case" () 2841 19 ("clauses" "target" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-case" () 2846 9 ("jazz.Case" "jazz.allocate-case" "clauses" "target")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Case") 2850 21 ("jazz.Any" "jazz.emit-expressions" "jazz.codes-forms" "%%cdr" "body" "%%car" "tries" "let*" "clause" "lambda" "map" "jazz.emit-expression" "%%code-form" "case" "jazz.new-code" "%%get-case-clauses" "clauses" "expression" "%%get-case-target" "target" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Case") 2863 21 ("s" "k" "f")}
      {Lisp-Entry "jazz.And" () 2875 19 ("expressions" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-and" () 2879 9 ("jazz.And" "jazz.allocate-and" "expressions")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.And") 2883 21 ("jazz.Any" "expression" "%%get-and-expressions" "jazz.emit-expressions" "jazz.codes-forms" "and" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.And") 2889 21 ("%%get-and-expressions" "jazz.fold-expressions" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.Or" () 2902 19 ("expressions" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-or" () 2906 9 ("jazz.Or" "jazz.allocate-or" "expressions")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Or") 2910 21 ("jazz.Any" "expression" "%%get-or-expressions" "jazz.emit-expressions" "jazz.codes-forms" "or" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Or") 2916 21 ("%%get-or-expressions" "jazz.fold-expressions" "expression" "s" "k" "f")}
      {Lisp-Entry "jazz.C-Include" () 2929 19 ("name" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-c-include" () 2933 9 ("jazz.C-Include" "jazz.allocate-c-include" "name")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.C-Include") 2937 21 ("jazz.Any" "%%string-append" "c-declare" "jazz.new-code" "expression" "%%get-c-include-name" "name" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.C-Include") 2944 21 ("s" "k" "f")}
      {Lisp-Entry "jazz.C-Declare" () 2956 19 ("code" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-c-declare" () 2960 9 ("jazz.C-Declare" "jazz.allocate-c-declare" "code")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.C-Declare") 2964 21 ("jazz.Any" "c-declare" "jazz.new-code" "expression" "%%get-c-declare-code" "code" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.C-Declare") 2971 21 ("s" "k" "f")}
      {Lisp-Entry "jazz.C-Initialize" () 2983 19 ("code" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-c-initialize" () 2987 9 ("jazz.C-Initialize" "jazz.allocate-c-initialize" "code")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.C-Initialize") 2991 21 ("jazz.Any" "c-initialize" "jazz.new-code" "expression" "%%get-c-initialize-code" "code" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.C-Initialize") 2998 21 ("s" "k" "f")}
      {Lisp-Entry "jazz.C-Function" () 3010 19 ("expansion" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-c-function" () 3014 9 ("jazz.C-Function" "jazz.allocate-c-function" "expansion")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.C-Function") 3018 21 ("jazz.Any" "expression" "%%get-c-function-expansion" "jazz.new-code" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.C-Function") 3024 21 ("s" "k" "f")}
      {Lisp-Entry "jazz.Time" () 3036 19 ("expression" "jazz.Object-Class" "type" "jazz.Expression")}
      {Lisp-Entry "jazz.new-time" () 3040 9 ("jazz.Time" "jazz.allocate-time" "expression")}
      {Lisp-Entry "jazz.emit-expression" ("jazz.Time") 3044 21 ("jazz.Any" "jazz.emit-expression" "%%code-form" "time" "jazz.new-code" "%%get-time-expression" "expression" "let" "environment")}
      {Lisp-Entry "jazz.fold-expression" ("jazz.Time") 3052 21 ("s" "k" "f")}
      {Lisp-Entry "jazz.emit-statements" () 3064 9 ("jazz.emit-expression" "%%code-form" "jazz.emit-declaration" "jazz.Declaration" "jazz.is?" "if" "statement" "lambda" "map" "environment" "statements")}
      {Lisp-Entry "jazz.emit-statements-code" () 3072 9 ("jazz.new-code" "%%code-form" "%%code-type" "set!" "jazz.emit-expression" "code" "jazz.emit-declaration" "jazz.Declaration" "jazz.is?" "if" "statement" "lambda" "map" "emited" "last-type" "let" "environment" "statements")}
      {Lisp-Entry "jazz.fold-statement" () 3085 9 ("jazz.fold-expression" "jazz.fold-declaration" "jazz.Declaration" "jazz.is?" "if" "s" "k" "f" "statement")}
      {Lisp-Entry "jazz.fold-statements" () 3091 9 ("%%cdr" "jazz.fold-statements" "%%car" "jazz.fold-statement" "%%null?" "if" "seed" "s" "k" "f" "statements")}
      {Lisp-Entry "ppl" () 3103 9 ("walk" "pps" "library-name")}
      {Lisp-Entry "pps" () 3107 9 ("cons" "null?" "else" "present-expression" "jazz.Expression" "present-declaration" "jazz.Declaration" "%%is?" "cond" "info" "let" "s" "sta" "lambda" "jazz.serial-number->object" "integer?" "if" "jazz.fold-statement" "pp" "statement")
        {Lisp-Entry "present-declaration" () 3108 11 ("%%get-lexical-binding-name" "sta")}
        {Lisp-Entry "present-expression" () 3111 11 ("sta")}}
      {Lisp-Entry "jazz.walk" () 3141 9 ("jazz.walk-constant" "else" "jazz.walk-form" "%%pair?" "jazz.walk-symbol" "%%symbol?" "cond" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-list" () 3150 9 ("jazz.queue-list" "jazz.walk" "jazz.enqueue" "call/cc" "form" "lambda" "for-each" "jazz.new-queue" "queue" "let" "form-list" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-body" () 3160 9 ("jazz.queue-list" "jazz.walk-internal-define" "map" "jazz.enqueue" "jazz.new-variable" "variable" "%%symbol?" "name" "%%cadr" "signature" "internal-define" "augmented-environment" "jazz.new-queue" "variables" "jazz.walk-list" "jazz.new-body" "%%car" "%%eq?" "%%null?" "or" "scan" "iter" "expressions" "else" "defines" "%%cons" "jazz.define-form?" "%%cdr" "jazz.error" "%%neq?" "set!" "%%not" "if" "substate" "sub" "for-each" "state" "jazz.begin-form?" "cond" "form" "lambda" "process" "letrec" "internal-defines" "let" "form-list" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-internal-define" () 3203 9 ("jazz.walk" "jazz.new-internal-define" "jazz.Any" "environment" "jazz.specifier->type" "if" "type" "let" "%%cdr" "jazz.parse-define" "parameters" "value" "specifier" "name" "receive" "variable" "form" "augmented-environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.parse-define" () 3209 9 ("%%list" "specifier-list" "body" "%%cdar" "parameters" "%%caar" "values" "specifier" "lambda" "%%cdr" "jazz.parse-specifier" "name" "let" "%%car" "%%symbol?" "if" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-quote" () 3228 9 ("jazz.walk-constant" "jazz.Null" "quote" "jazz.new-constant" "%%null?" "if" "%%cadr" "expression" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-keyword" () 3235 9 ("jazz.Keyword" "jazz.new-constant" "keyword" "walker")}
      {Lisp-Entry "jazz.walk-enumerator" () 3239 9 ("jazz.Symbol" "quote" "%%list" "jazz.new-constant" "enumerator" "walker")}
      {Lisp-Entry "jazz.walk-constant" () 3243 9 ("jazz.register-literal" "else" "jazz.Pair" "jazz.scheme-pair-literal?" "jazz.Null" "%%null?" "jazz.Vector" "%%vector?" "jazz.Symbol" "quote" "%%symbol?" "jazz.Number" "%%number?" "jazz.Flonum" "%%flonum?" "jazz.Fixnum" "%%fixnum?" "jazz.Keyword" "%%keyword?" "jazz.String" "%%string?" "jazz.Char" "%%char?" "jazz.Boolean" "jazz.new-constant" "%%boolean?" "cond" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.scheme-pair-literal?" () 3270 9 ("%%cdr" "%%car" "%%pair?" "and" "%%symbol?" "%%number?" "%%keyword?" "%%string?" "%%char?" "%%boolean?" "%%null?" "or" "expr" "lambda" "scheme-data?" "letrec" "form")}
      {Lisp-Entry "jazz.Literal-Constructors" () 3290 8 ("eq?" "%%make-hashtable")}
      {Lisp-Entry "jazz.register-literal-constructor" () 3294 9 ("jazz.Literal-Constructors" "%%hashtable-set!" "constructor" "name")}
      {Lisp-Entry "jazz.require-literal-constructor" () 3298 9 ("jazz.error" "jazz.Literal-Constructors" "%%hashtable-ref" "or" "name")}
      {Lisp-Entry "jazz.construct-literal" () 3303 9 ("%%cdr" "%%apply" "%%car" "jazz.require-literal-constructor" "constructor" "let" "%%null?" "if" "lst")}
      {Lisp-Entry "jazz.register-literal" () 3310 9 ("jazz.new-constant" "jazz.walk-literal" "%%cdr" "%%set-cdr!" "%%get-library-declaration-literals" "%%set-library-declaration-literals" "%%cons" "info" "%%get-declaration-locator" "%%symbol->string" "%%string-append" "jazz.generate-symbol" "name" "%%get-declaration-toplevel" "library-declaration" "let" "literal" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.get-registered-literal" () 3322 9 ("%%cadr" "if" "%%get-library-declaration-literals" "assq" "pair" "let" "literal" "library-declaration")}
      {Lisp-Entry "jazz.walk-literal" () 3329 9 ("jazz.dialect.language.fold-literal" "else" "cdr" "car" "cons" "%%pair?" "cond" "jazz.walk" "jazz.walker-environment" "%%cons" "environment" "%%get-declaration-toplevel" "library-declaration" "let*" "literal" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.dialect.language.fold-literal" () 3340 8 ()}
      {Lisp-Entry "jazz.make-symbolic-chars" () 3346 9 ("eq?" "%%cdr" "integer->char" "%%car" "%%cons" "pair" "lambda" "map" "%%alist->hashtable" "alist")}
      {Lisp-Entry "jazz.Symbolic-Chars" () 3354 8 ("Copyright" "Delete" "Close-Brace" "Open-Brace" "Backquote" "Underscore" "Exponential" "Close-Bracket" "Backslash" "Open-Bracket" "At" "Question-Mark" "Semi-Colon" "Colon" "Slash" "Period" "Minus" "Comma" "Plus" "Times" "Close-Parenthesis" "Open-Parenthesis" "Quote" "Ampersand" "Sharp" "Double-Quote" "Exclamation-Point" "Space" "Down-Arrow" "Up-Arrow" "Right-Arrow" "Left-Arrow" "Escape" "Return" "Page-Down" "Page-Up" "Line-Feed" "Tab" "Backspace" "Info" "End" "Enter" "Home" "Zero" "jazz.make-symbolic-chars")}
      {Lisp-Entry "jazz.symbolic-char" () 3402 9 ("jazz.Symbolic-Chars" "%%hashtable-ref" "name")}
      {Lisp-Entry "jazz.register-variable" () 3411 9 ("%%get-library-declaration-variables" "%%cons" "%%set-library-declaration-variables" "%%get-declaration-locator" "%%symbol->string" "%%string-append" "jazz.generate-symbol" "variable" "%%get-declaration-toplevel" "library-declaration" "let" "suffix" "declaration")}
      {Lisp-Entry "jazz.walk-symbol" ("jazz.Walker") 3423 22 ("symbol" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-symbol" ("jazz.Walker") 3426 21 ("jazz.walk-symbol-reference" "else" "true" "jazz.Boolean" "jazz.new-constant" "false" "%%eq?" "walker" "jazz.walk-enumerator" "jazz.enumerator?" "cond" "symbol" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-setbang" () 3439 9 ("jazz.error" "jazz.walk-symbol-assignment" "%%symbol?" "if" "%%cddr" "%%car" "value" "%%cadr" "let" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.lookup-symbol" () 3447 9 ("jazz.walk-binding-lookup" "binding" "lambda" "jazz.find-in" "jazz.lookup-composite" "jazz.composite-name?" "if" "symbol" "environment" "walker")}
      {Lisp-Entry "jazz.lookup-composite" () 3455 9 ("jazz.last" "%%list" "jazz.lookup-subpath" "if" "jazz.locate-library-declaration" "library-decl" "jazz.butlast" "jazz.compose-name" "%%apply" "library-name" "jazz.split-identifier" "path" "let*" "name" "environment" "walker")}
      {Lisp-Entry "jazz.lookup-subpath" () 3464 9 ("%%cdr" "jazz.lookup-subpath" "%%car" "jazz.lookup-declaration" "subdecl" "let" "%%null?" "if" "subpath" "declaration")}
      {Lisp-Entry "jazz.lookup-accessible/compatible-symbol" () 3473 9 ("jazz.register-autoload-declaration" "%%get-declaration-toplevel" "library" "jazz.Autoload-Declaration" "jazz.validate-compatibility" "jazz.validate-access" "begin" "jazz.Declaration" "%%is?" "and" "if" "jazz.lookup-symbol" "referenced-declaration" "let" "symbol" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.validate-access" ("jazz.Walker") 3485 22 ("referenced-declaration" "declaration" "resume")}
      {Lisp-Entry "jazz.validate-access" ("jazz.Walker") 3488 21 ("jazz.unspecified" "referenced-declaration" "declaration" "resume")}
      {Lisp-Entry "jazz.validate-compatibility" () 3492 9 ("jazz.walk-warning" "%%get-declaration-locator" "referenced-locator" "let" "deprecated" "%%get-declaration-compatibility" "%%eq?" "if" "referenced-declaration" "declaration" "walker")}
      {Lisp-Entry "jazz.walk-symbol-reference" () 3503 9 ("jazz.walk-free-reference" "jazz.new-reference" "if" "jazz.lookup-accessible/compatible-symbol" "binding" "let" "symbol" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-free-reference" ("jazz.Walker") 3510 22 ("symbol" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-free-reference" ("jazz.Walker") 3513 21 ("walker" "jazz.walk-unresolved" "symbol" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-symbol-assignment" ("jazz.Walker") 3522 22 ("value" "symbol" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-symbol-assignment" ("jazz.Walker") 3525 21 ("jazz.walk-free-assignment" "jazz.walk-error" "jazz.walk-binding-assigned" "jazz.walk" "jazz.new-assignment" "assignment" "jazz.walk-binding-assignable?" "if" "walker" "jazz.lookup-accessible/compatible-symbol" "binding" "let" "value" "symbol" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-free-assignment" ("jazz.Walker") 3536 22 ("symbol" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-free-assignment" ("jazz.Walker") 3539 21 ("walker" "jazz.walk-unresolved" "symbol" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-form" ("jazz.Walker") 3548 22 ("form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.walk-form" ("jazz.Walker") 3551 21 ("jazz.walk-call" "jazz.walk" "jazz.walk-binding-expand-form" "expansion" "jazz.walk-binding-expandable?" "jazz.walk-binding-walk-form" "jazz.walk-binding-walkable?" "if" "walker" "jazz.lookup-accessible/compatible-symbol" "%%symbol?" "and" "binding" "%%car" "procedure-expr" "let" "form" "environment" "declaration" "resume")}
      {Lisp-Entry "jazz.lookup-macro-form" () 3570 9 ("jazz.walk-binding-expandable?" "and" "if" "jazz.lookup-accessible/compatible-symbol" "binding" "let" "symbol" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-macros" () 3577 9 ("jazz.expand-macros" "jazz.walk-binding-expand-form" "expansion" "jazz.lookup-macro-form" "%%symbol?" "and" "binding" "%%car" "procedure-expr" "let" "%%pair?" "%%not" "if" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-call" () 3593 9 ("jazz.walk-list" "jazz.walk" "jazz.new-call" "jazz.walk-binding-validate-call" "if" "%%cdr" "arguments" "%%car" "operator" "let" "form" "procedure-binding" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.validate-arguments" ("jazz.Walker") 3602 22 ("arguments" "signature" "declaration" "source-declaration" "resume")}
      {Lisp-Entry "jazz.validate-arguments" ("jazz.Walker") 3605 21 ("walker" "jazz.walk-error" "%%get-declaration-locator" "locator" "%%fx=" "%%not" "%%fx<" "if" "%%length" "passed" "%%get-signature-rest" "rest" "%%get-signature-mandatory" "mandatory" "let" "arguments" "signature" "declaration" "source-declaration" "resume")}
      {Lisp-Entry "jazz.native-modifiers" () 3620 8 ()}
      {Lisp-Entry "jazz.native-keywords" () 3624 8 ()}
      {Lisp-Entry "jazz.parse-native" () 3628 9 ("values" "%%null?" "%%assert" "specifier" "lambda" "%%cdr" "jazz.parse-specifier" "%%car" "name" "let" "jazz.native-modifiers" "jazz.parse-modifiers" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-native-declaration" () 3637 9 ("jazz.add-declaration-child" "jazz.new-export-declaration" "new-declaration" "jazz.Any" "jazz.specifier->type" "if" "type" "let" "jazz.parse-exported-symbol" "symbol" "%%cdr" "jazz.parse-native" "compatibility" "access" "specifier" "name" "receive" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-native" () 3646 9 ("jazz.find-form-declaration" "jazz.parse-exported-symbol" "symbol" "%%cdr" "jazz.parse-native" "compatibility" "access" "specifier" "name" "receive" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.macro-modifiers" () 3657 8 ()}
      {Lisp-Entry "jazz.parse-macro" () 3662 9 ("values" "parameters" "jazz.Any" "type" "name" "%%cdr" "body" "%%car" "signature" "let*" "jazz.macro-modifiers" "jazz.parse-modifiers" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-macro" () 3672 9 ("macro" "%%cons" "jazz.expand-macro-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-macro-form" () 3676 9 ("%macro" "%%cdr" "jazz.parse-macro" "body" "parameters" "compatibility" "access" "type" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%macro-declaration" () 3681 9 ("jazz.add-declaration-child" "jazz.new-macro-declaration" "new-declaration" "jazz.walk-parameters" "signature" "let" "%%cdr" "body" "parameters" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%macro" () 3689 9 ("jazz.walk-body" "%%set-macro-declaration-body" "%%set-macro-declaration-signature" "jazz.walk-parameters" "augmented-environment" "signature" "receive" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let*" "%%cdr" "body" "parameters" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.syntax-modifiers" () 3704 8 ()}
      {Lisp-Entry "jazz.parse-syntax" () 3709 9 ("values" "parameters" "jazz.Any" "type" "name" "%%cdr" "body" "%%car" "signature" "let*" "jazz.syntax-modifiers" "jazz.parse-modifiers" "compatibility" "access" "receive" "rest" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-syntax" () 3719 9 ("syntax" "%%cons" "jazz.expand-syntax-form" "rest" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.expand-syntax-form" () 3723 9 ("%syntax" "%%cdr" "jazz.parse-syntax" "body" "parameters" "compatibility" "access" "type" "name" "receive" "form" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%syntax-declaration" () 3728 9 ("jazz.add-declaration-child" "jazz.new-syntax-declaration" "new-declaration" "jazz.walk-parameters" "signature" "let" "%%cdr" "body" "parameters" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-%syntax" () 3736 9 ("jazz.walk-body" "%%set-syntax-declaration-body" "%%set-syntax-declaration-signature" "jazz.walk-parameters" "augmented-environment" "signature" "receive" "%%cadr" "jazz.find-form-declaration" "new-declaration" "let*" "%%cdr" "body" "parameters" "compatibility" "access" "type" "name" "jazz.bind" "form" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.walk-parameters" () 3756 9 ("values" "jazz.queue-list" "jazz.new-signature" "signature" "jazz.new-optional-parameter" "optional-parameter" "jazz.new-named-parameter" "named-parameter" "%%keyword->string" "%%string->symbol" "%%cddr" "default" "keyword" "%%keyword?" "jazz.walk" "jazz.new-dynamic-parameter" "dynamic-parameter" "%%cadr" "variable" "jazz.specifier->name" "code" "specifier/code" "let*" "jazz.specifier?" "or" "%%pair?" "and" "jazz.walk-error" "jazz.enqueue" "jazz.new-parameter" "positional-parameter" "jazz.specifier->type" "type" "%%eq?" "if" "specifier" "lambda" "%%cdr" "jazz.parse-specifier" "%%car" "parameter" "else" "%%cons" "%%when" "set!" "jazz.Any" "jazz.new-rest-parameter" "parameter-expression" "%%symbol?" "%%null?" "cond" "scan" "iter" "augmented-environment" "rest" "named" "optional" "jazz.new-queue" "positional" "section" "let" "walk?" "extended?" "parameters" "environment" "declaration" "resume" "walker")}
      {Lisp-Entry "jazz.emit-signature-checks" () 3833 9 ("jazz.queue-list" "%%not" "%%get-signature-rest" "rest" "%%get-signature-named" "%%get-signature-optional" "%%get-signature-positional" "for-each" "jazz.enqueue" "jazz.new-queue" "set!" "not" "begin" "jazz.emit-parameter" "jazz.emit-check" "check" "jazz.Any" "%%neq?" "if" "%%get-lexical-binding-type" "type" "parameter" "process" "define" "queue" "let" "environment" "signature")}
      {Lisp-Entry "jazz.emit-signature" () 3857 9 ("jazz.queue-list" "%%null?" "%%not" "%%when" "for-each" "jazz.emit-parameter" "jazz.enqueue" "parameter" "emit" "define" "jazz.new-queue" "queue" "%%get-signature-rest" "rest" "%%get-signature-named" "named" "%%get-signature-optional" "optional" "%%get-signature-positional" "positional" "let" "environment" "signature")}
      {Lisp-Entry "jazz.Catalog" () 3886 8 ("eq?" "%%make-hashtable")}
      {Lisp-Entry "jazz.get-catalog" () 3890 9 ("jazz.Catalog")}
      {Lisp-Entry "jazz.get-catalog-entry" () 3894 9 ("jazz.Catalog" "%%hashtable-ref" "module-name")}
      {Lisp-Entry "jazz.set-catalog-entry" () 3898 9 ("jazz.Catalog" "%%hashtable-set!" "entry" "module-name")}
      {Lisp-Entry "jazz.locate-toplevel-declaration" () 3902 9 ("jazz.set-catalog-entry" "jazz.error" "%%not" "if" "jazz.load-toplevel-declaration" "declaration" "lambda" "jazz.call-with-validate-circularity" "jazz.get-catalog-entry" "or" "jazz.get-validated-catalog-entry" "entry" "let" "error?" "module-name")}
      {Lisp-Entry "jazz.locate-library-declaration" () 3915 9 ("jazz.Library-Declaration" "%%is?" "%%assert" "jazz.locate-toplevel-declaration" "declaration" "let" "error?" "module-name")}
      {Lisp-Entry "jazz.call-with-validate-circularity" () 3921 9 ("jazz.get-catalog-entry" "%%eq?" "if" ":loading" "jazz.set-catalog-entry" "lambda" "dynamic-wind" "thunk" "module-name")}
      {Lisp-Entry "jazz.get-validated-catalog-entry" () 3931 9 ("jazz.error" ":loading" "%%eq?" "if" "jazz.get-catalog-entry" "entry" "let" "module-name")}
      {Lisp-Entry "jazz.load-toplevel-declaration" () 3938 9 ("lambda" "jazz.parse-verbose?" "jazz.with-verbose" "jazz.parse-library-declaration" "library" "%%cdr" "jazz.parse-module-declaration" "module" "%%car" "case" "jazz.read-toplevel-form" "form" "load-declaration" "define" "jazz.determine-module-filename" "jazz.require-module-source" "filename" "let" "module-name")}
      {Lisp-Entry "jazz.parse-read?" () 3953 8 ("make-parameter")}
      {Lisp-Entry "jazz.read-toplevel-form" () 3956 9 ("jazz.error" "library" "module" "%%memq" "%%eof-object?" "%%not" "and" "read" "jazz.parse-read?" "parameterize" "port" "call-with-input-file" "lambda" "jazz.filename-extension" "jazz.with-extension-reader" "form" "%%car" "%%null?" "if" "parse-read?" "let" "rest" "filename")}
      {Lisp-Entry "jazz.Core-Dialect" () 3975 19 ("jazz.Object-Class" "jazz.Dialect")}
      {Lisp-Entry "jazz.new-core-dialect" () 3979 9 ("jazz.Core-Dialect" "jazz.allocate-core-dialect")}
      {Lisp-Entry "jazz.dialect-walker" ("jazz.Core-Dialect") 3983 21 ("jazz.new-core-walker")}
      {Lisp-Entry "jazz.Core-Walker" () 3995 19 ("jazz.Object-Class" "errors" "warnings" "jazz.Walker")}
      {Lisp-Entry "jazz.new-core-walker" () 3999 9 ("jazz.Core-Walker" "jazz.allocate-core-walker")}}})
"while"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "while.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax.while" () 38 9 ("scheme")
      {Lisp-Entry "while" () 44 15 ("begin" "if" "generate-symbol" "iter" "let" "body" "test")}}})
"window"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "test" "window.fusion"} {Time 128355726660000000L}
    {Lisp-Entry "test.window" () 0 9 ("boot-environment" "Application" "new" "a" "let" "jazz")
      {Lisp-Entry "process-messages" () 6 13 ("if" "DispatchMessage" "TranslateMessage" "0" "GetMessage" "flag" "iterate" "MSG-make" "msg" "let" "window")}}})
"windows"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "ui" "window" "windows.fusion"} {Time 128368670900000000L}
    {Lisp-Entry "jazz.ui.window.windows" () 38 9 ("register-window-class" "jazz")
      {Lisp-Entry "processed" () 49 19 ("processed")}
      {Lisp-Entry "unprocessed" () 50 19 ("unprocessed")}
      {Lisp-Entry "in-creation" () 54 12 ()}
      {Lisp-Entry "set-in-creation" () 57 13 ("in-creation" "set!" "in")}
      {Lisp-Entry "get-in-creation" () 61 13 ("in-creation")}
      {Lisp-Entry "CLASS_ATOM" () 65 12 ()}
      {Lisp-Entry "window-class" () 69 13 ()}
      {Lisp-Entry "class-style" () 73 13 ("CS_DBLCLKS" "CS_OWNDC" "bit-or")}
      {Lisp-Entry "class-background" () 77 13 ("COLOR_BTNFACE" "GetSysColorBrush")}
      {Lisp-Entry "register-window-class" () 81 13 ("RegisterClass" "CLASS_ATOM" "set!" "class" "WNDCLASS-lpszClassName-set!" "WNDCLASS-lpszMenuName-set!" "WNDCLASS-hbrBackground-set!" "WNDCLASS-hCursor-set!" "NULL" "WNDCLASS-hIcon-set!" "WNDCLASS-hInstance-set!" "WNDCLASS-cbWndExtra-set!" "0" "WNDCLASS-cbClsExtra-set!" "call-process-hwnd-message" "WNDCLASS-lpfnWndProc-set!" "class-style" "WNDCLASS-style-set!" "WNDCLASS-make" "wc" "class-background" "background" "current-instance" "instance" "let")}
      {Lisp-Entry "child-style?" () 102 13 ("true" "rest")}
      {Lisp-Entry "window-style" () 106 13 ("else" "WS_MINIMIZEBOX" "Toplevel" "State-Toplevel" "Popup" "Palette" "Orphanage-Window" "Message-Window" "Frame" "WS_SYSMENU" "closable?:" "WS_THICKFRAME" "true" "not-found:" "sizable?:" "getf" "WS_DLGFRAME" "WS_CAPTION" "WS_OVERLAPPED" "WS_BORDER" "WS_POPUP" "WS_CLIPSIBLINGS" "WS_CLIPCHILDREN" "0" "WS_CHILD" "child-style?" "if" "bit-or" "Dialog" "typecase" "rest" "window")}
      {Lisp-Entry "window-ex-style" () 142 13 ("0" "else" "WS_EX_TOPMOST" "bit-or" "Transient" "WS_EX_APPWINDOW" "Toplevel" "Popup" "WS_EX_TOOLWINDOW" "Palette" "WS_EX_DLGMODALFRAME" "Dialog" "typecase" "rest" "window")}
      {Lisp-Entry "window-parent" () 152 13 ("get-handle" "NULL" "not" "if" "parent" "window")}
      {Lisp-Entry "create-handle" () 158 13 ("current-instance" "window-parent" "0" "window-style" "NULL" "window-class" "hwnd-class" "either" "CLASS_ATOM" "window-ex-style" "CreateWindowEx" "else" "GetDesktopWindow" "Desktop" "typecase" "rest" "parent" "window")}
      {Lisp-Entry "prepare-handle" () 174 13 ("true" "DragAcceptFiles" "GetLastError" "window-parent" "parent:" "window-ex-style" ":ex-style" "window-style" ":style" "window-class" ":class" "list" "error" "not" "if" "create-handle" "let" "set-in-creation" "others" "hwnd" "bind-keywords" "rest" "parent" "window")}
      {Lisp-Entry "bring-window-to-top" () 186 13 ("BringWindowToTop" "hwnd")}
      {Lisp-Entry "show-window" () 190 13 ("SW_SHOWNORMAL" "ShowWindow" "handle")}
      {Lisp-Entry "hide-window" () 194 13 ("SW_HIDE" "ShowWindow" "handle")}
      {Lisp-Entry "minimize-window" () 198 13 ("SW_MINIMIZE" "ShowWindow" "handle")}
      {Lisp-Entry "destroy-window" () 202 13 ("DestroyWindow" "handle")}
      {Lisp-Entry "dispatch-message" () 206 13 ("0" "get-handle" "DefWindowProc" "unprocessed" "process-window-message" "eq?" "if" "lparam" "wparam" "msg" "window")}
      {Lisp-Entry "process-window-message" () 217 13 ("else" "on-timer" "WM_TIMER" "setting-change" "WM_SETTINGCHANGE" "drop-files" "WM_DROPFILES" "call-focus-lose" "WM_KILLFOCUS" "call-focus-gain" "WM_SETFOCUS" "call-lost-capture" "WM_CAPTURECHANGED" "on-nc-destroy" "WM_NCDESTROY" "window-destroy" "WM_DESTROY" "on-close" "WM_CLOSE" "on-activate-app" "WM_ACTIVATEAPP" "on-activate" "active" "inactive" "WA_INACTIVE" "kind" "WM_ACTIVATE" "on-mouse-activate" "WM_MOUSEACTIVATE" "call-size-change" "0" "or" "when" "height" "width" "let" "WM_SIZE" "call-position-change" "WM_MOVE" "bit-and" "on-system-command" "WM_SYSCOMMAND" "on-command" "WM_COMMAND" "call-key-press" "WM_CHAR" "call-key-up" "WM_KEYUP" "call-key-down" "WM_KEYDOWN" "system-key-up" "WM_SYSKEYUP" "system-key-down" "unprocessed" "VK_MENU" "/=" "if" "WM_SYSKEYDOWN" "call-context-menu" "WM_CONTEXTMENU" "right-mouse-up" "WM_RBUTTONUP" "right-mouse-down" "WM_RBUTTONDOWN" "middle-mouse-up" "WM_MBUTTONUP" "middle-mouse-down" "WM_MBUTTONDOWN" "double-click" "WM_LBUTTONDBLCLK" "mouse-up" "WM_LBUTTONUP" "mouse-down" "WM_LBUTTONDOWN" "mouse-wheel" "WM_MOUSEWHEEL" "mouse-hover" "WM_MOUSEHOVER" "hiword" "mouse-move" "WM_MOUSEMOVE" "HTCLIENT" "loword" "=" "cursor-update" "WM_SETCURSOR" "paint" "WM_PAINT" "erase-background" "WM_ERASEBKGND" "ecase" "lparam" "wparam" "msg" "window")}
      {Lisp-Entry "set-capture" () 263 13 ("SetCapture" "handle")}
      {Lisp-Entry "unset-capture" () 267 13 ("ReleaseCapture")}
      {Lisp-Entry "paint-window" () 270 13 ("processed" "EndPaint" "close" "draw" "cairo_win32_surface_create" "Cairo-Win32-Surface" "new" "dc" "get-handle" "BeginPaint" "hdc" "let" "PAINTSTRUCT-make" "ps" "with" "window")}
      {Lisp-Entry "get-style" () 286 13 ("GWL_STYLE" "GetWindowLong" "handle")}
      {Lisp-Entry "set-style" () 290 13 ("GWL_STYLE" "SetWindowLong" "style" "handle")}
      {Lisp-Entry "get-ex-style" () 294 13 ("GWL_EXSTYLE" "GetWindowLong" "handle")}
      {Lisp-Entry "set-ex-style" () 298 13 ("GWL_EXSTYLE" "SetWindowLong" "style" "handle")}
      {Lisp-Entry "child-window?" () 302 13 ("WS_CHILD" "get-style" "mask-bit-set?" "handle")}
      {Lisp-Entry "get-layered?" () 311 13 ("WS_EX_LAYERED" "get-ex-style" "mask-bit-set?" "handle")}
      {Lisp-Entry "set-layered?" () 315 13 ("WS_EX_LAYERED" "GetWindowLong" "mask-bit-set" "GWL_EXSTYLE" "SetWindowLong" "flag" "handle")}
      {Lisp-Entry "set-alpha-blending" () 319 13 ("RDW_INVALIDATE" "RDW_ERASE" "bit-or" "NULL" "RedrawWindow" "LWA_ALPHA" "0" "SetLayeredWindowAttributes" "true" "set-layered?" "n" "handle")}
      {Lisp-Entry "track-mouse-event" () 330 13 ("TrackMouseEvent" "TRACKMOUSEEVENT-dwHoverTime-set!" "TRACKMOUSEEVENT-hwndTrack-set!" "TRACKMOUSEEVENT-dwFlags-set!" "size-of-TRACKMOUSEEVENT" "TRACKMOUSEEVENT-cbSize-set!" "TRACKMOUSEEVENT-make" "rec" "with" "HOVER_DEFAULT" "time" "time:" "flags" "handle")}
      {Lisp-Entry "platform-send-message" () 344 13 ("SendMessage" "lparam" "wparam" "msg" "handle")}
      {Lisp-Entry "platform-post-message" () 348 13 ("PostMessage" "lparam" "wparam" "msg" "handle")}
      {Lisp-Entry "platform-set-parent" () 352 13 ("NULL" "get-handle" "if" "SetParent" "parent" "handle")}
      {Lisp-Entry "set-window-title" () 356 13 ("SetWindowText" "title" "handle")}
      {Lisp-Entry "get-window-owner-handle" () 360 13 ("GW_OWNER" "GetWindow" "handle")}
      {Lisp-Entry "get-top-window-handle" () 364 13 ("GetTopWindow" "handle")}
      {Lisp-Entry "acquire-point" () 368 13 ("POINT->point" "1" "get-handle" "MapWindowPoints" "point->POINT" "acquired" "let" "shape" "window" "handle")}
      {Lisp-Entry "acquire-rect" () 374 13 ("RECT->rect" "2" "RECT->POINTS" "get-handle" "MapWindowPoints" "rect->RECT" "acquired" "let" "shape" "window" "handle")}
      {Lisp-Entry "platform-get-window-position" () 380 13 ("POINT-y-ref" "POINT-x-ref" "Point" "new" "1" "NULL" "MapWindowPoints" "0" "new-point" "pos" "with" "handle")}
      {Lisp-Entry "platform-get-position" () 386 13 ("RECT-top-ref" "RECT-left-ref" "Point" "new" "2" "RECT->POINTS" "NULL" "MapWindowPoints" "child-window?" "and" "when" "GetWindowRect" "RECT-make" "rect" "with" "parent-handle" "handle")}
      {Lisp-Entry "platform-set-position" () 394 13 ("SWP_NOACTIVATE" "SWP_NOZORDER" "SWP_NOSIZE" "bit-or" "0" "get-v" "get-h" "NULL" "SetWindowPos" "pos" "handle")}
      {Lisp-Entry "platform-get-size" () 398 13 ("RECT-bottom-ref" "RECT-right-ref" "Dimension" "new" "GetClientRect" "RECT-make" "rect" "with" "handle")}
      {Lisp-Entry "platform-get-window-size" () 404 13 ("RECT-top-ref" "RECT-bottom-ref" "RECT-left-ref" "RECT-right-ref" "-" "Dimension" "new" "GetWindowRect" "RECT-make" "rect" "let" "handle")}
      {Lisp-Entry "platform-set-window-size" () 411 13 ("SWP_NOACTIVATE" "SWP_NOZORDER" "SWP_NOMOVE" "SWP_NOCOPYBITS" "bit-or" "get-height" "get-width" "0" "NULL" "SetWindowPos" "size" "handle")}
      {Lisp-Entry "platform-set-bounds" () 415 13 ("SWP_NOACTIVATE" "SWP_NOZORDER" "bit-or" "rect-height" "rect-width" "get-top" "get-left" "NULL" "SetWindowPos" "rect" "handle")}
      {Lisp-Entry "platform-get-rect" () 419 13 ("RECT-bottom-ref" "RECT-right-ref" "RECT-top-ref" "RECT-left-ref" "Rect" "new" "2" "RECT->POINTS" "NULL" "MapWindowPoints" "when" "GetWindowRect" "RECT-make" "rect" "with" "parent-handle" "handle")}
      {Lisp-Entry "platform-get-bounds" () 427 13 ("RECT-bottom-ref" "RECT-right-ref" "RECT-top-ref" "RECT-left-ref" "Rect" "new" "2" "NULL" "MapWindowPoints" "GetWindowRect" "RECT-make" "rect" "with" "handle")}
      {Lisp-Entry "platform-mouse-position" () 434 13 ("POINT-y-ref" "POINT-x-ref" "Point" "new" "GetCursorPos" "POINT-make" "point" "with")}
      {Lisp-Entry "platform-window-from-point" () 440 13 ("WindowFromPoint" "get-v" "POINT-y-set!" "get-h" "POINT-x-set!" "POINT-make" "pt" "with" "point")}
      {Lisp-Entry "platform-child-window-from-point" () 447 13 ("CWP_SKIPTRANSPARENT" "CWP_SKIPDISABLED" "CWP_SKIPINVISIBLE" "bit-or" "ChildWindowFromPointEx" "get-v" "POINT-y-set!" "get-h" "POINT-x-set!" "POINT-make" "pt" "with" "point" "handle")}
      {Lisp-Entry "platform-move-window" () 454 13 ("true" "MoveWindow" "cy" "cx" "y" "x" "handle")}
      {Lisp-Entry "platform-window-enabled?" () 458 13 ("IsWindowEnabled" "handle")}
      {Lisp-Entry "platform-enable-window" () 462 13 ("true" "EnableWindow" "handle")}
      {Lisp-Entry "platform-disable-window" () 466 13 ("false" "EnableWindow" "handle")}
      {Lisp-Entry "platform-get-client-rect" () 470 13 ("RECT->rect" "GetClientRect" "RECT-make" "rect" "with" "handle")}
      {Lisp-Entry "platform-scroll-window" () 476 13 ("NULL" "ScrollWindowEx" "rect->RECT" "with" "SW_INVALIDATE" "0" "SW_ERASE" "if" "bit-or" "flags" "let" "erase?" "clip-rect" "rect" "dv" "dh" "handle")}
      {Lisp-Entry "platform-invalidate-rect" () 483 13 ("InvalidateRect" "rect->RECT" "with" "when" "erase?" "rect" "handle")}
      {Lisp-Entry "platform-invalidate-region" () 489 13 ("get-handle" "InvalidateRgn" "when" "erase?" "region" "handle")}
      {Lisp-Entry "platform-invalidate-window" () 494 13 ("NULL" "InvalidateRect" "when" "erase?" "handle")}
      {Lisp-Entry "platform-redraw-window" () 499 13 ("get-handle" "RedrawWindow" "rect->RECT" "NULL" "not" "if" "with" "RDW_ALLCHILDREN" "RDW_INVALIDATE" "RDW_UPDATENOW" "RDW_ERASENOW" "bit-or" "flags" "let" "when" "region" "rect" "handle")}
      {Lisp-Entry "platform-get-update-rect" () 508 13 ("RECT->rect" "false" "GetUpdateRect" "RECT-make" "rect" "with" "handle")}
      {Lisp-Entry "platform-get-update-region" () 514 13 ("false" "get-handle" "GetUpdateRgn" "Region" "new" "region" "let" "handle")}
      {Lisp-Entry "platform-update-window" () 520 13 ("UpdateWindow" "handle")}
      {Lisp-Entry "platform-show-noactivate" () 524 13 ("SWP_NOSIZE" "SWP_NOMOVE" "SWP_NOACTIVATE" "SWP_SHOWWINDOW" "bit-or" "0" "HWND_TOP" "SetWindowPos" "handle")}
      {Lisp-Entry "platform-hide-noactivate" () 528 13 ("SWP_NOSIZE" "SWP_NOMOVE" "SWP_NOACTIVATE" "SWP_HIDEWINDOW" "bit-or" "0" "SetWindowPos" "handle")}
      {Lisp-Entry "platform-bring-window-to-front" () 532 13 ("BringWindowToTop" "handle")}
      {Lisp-Entry "platform-send-window-to-back" () 536 13 ("SWP_NOSIZE" "SWP_NOMOVE" "bit-or" "0" "HWND_BOTTOM" "SetWindowPos" "handle")}
      {Lisp-Entry "platform-get-focus" () 545 13 ("GetFocus")}
      {Lisp-Entry "platform-set-focus" () 548 13 ("SetFocus" "handle")}
      {Lisp-Entry "frame-region" () 557 20 ("or" "combine!" "b" "-" "r" "t" "bottom:" "+" "right:" "top:" "left:" "l" "with-closed" "Region" "region" "get-bottom" "bottom" "get-right" "right" "get-top" "top" "get-left" "left" "let" "1" "Rect" "new" "insets" "insets:" "frame")}}})
"with"
 ({Lisp-File-Entry {File dev "jazz" "packages" "org.jazz" "lib" "jazz" "dialect" "syntax" "with.scm"} {Time 128355726600000000L}
    {Lisp-Entry "jazz.dialect.syntax.with" () 37 9 ("scheme")
      {Lisp-Entry "with" () 43 9 ("body" "bindings")}
      {Lisp-Entry "with-closed" () 59 9 ("body" "bindings")}}})
